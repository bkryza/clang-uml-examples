@startuml
title Compilation database context diagram
class "clanguml::common::compilation_database" as C_0004776835660025771847
class C_0004776835660025771847 [[classclanguml_1_1common_1_1compilation__database.html{Custom compilation database class}]] {
+compilation_database(std::unique_ptr<clang::tooling::CompilationDatabase> base, const clanguml::config::config & cfg, bool is_fixed) : void [[[{compilation_database}]]]
+~compilation_database() = default : void [[[{~compilation_database}]]]
..
-adjust_compilation_database(std::vector<clang::tooling::CompileCommand> & commands) const : void [[[{adjust_compilation_database}]]]
{static} +auto_detect_from_directory(const clanguml::config::config & cfg) : std::unique_ptr<compilation_database> [[[{auto_detect_from_directory}]]]
+base() const : const clang::tooling::CompilationDatabase & [[[{base}]]]
+config() const : const clanguml::config::config & [[[{config}]]]
+count_matching_commands(const std::vector<std::string> & files) const : size_t [[[{count_matching_commands}]]]
+getAllCompileCommands() const : std::vector<clang::tooling::CompileCommand> [[[{getAllCompileCommands}]]]
+getAllFiles() const : std::vector<std::string> [[[{getAllFiles}]]]
+getCompileCommands(clang::StringRef FilePath) const : std::vector<clang::tooling::CompileCommand> [[[{getCompileCommands}]]]
+guess_language_from_filename(const std::string & filename) const : std::string [[[{guess_language_from_filename}]]]
+is_fixed() const : bool [[[{Determines whether this is a fixed or regular compilation  database.}]]]
__
-base_ : std::unique_ptr<clang::tooling::CompilationDatabase> [[[{base_}]]]
-config_ : const clanguml::config::config & [[[{config_}]]]
-is_fixed_ : bool [[[{is_fixed_}]]]
}
class "clanguml::config::config" as C_0007149951276107284798
class C_0007149951276107284798 [[structclanguml_1_1config_1_1config.html{Represents entire configuration file}]] {
+inherit() : void [[[{inherit}]]]
+initialize_diagram_templates() : void [[[{initialize_diagram_templates}]]]
__
+add_compile_flags : option<std::vector<std::string>> [[[{add_compile_flags}]]]
+compilation_database_dir : option<std::string> [[[{compilation_database_dir}]]]
+diagram_templates : option<std::map<std::string,diagram_template>> [[[{diagram_templates}]]]
+diagrams : std::map<std::string,std::shared_ptr<diagram>> [[[{diagrams}]]]
+output_directory : option<std::string> [[[{output_directory}]]]
+query_driver : option<std::string> [[[{query_driver}]]]
+remove_compile_flags : option<std::vector<common::string_or_regex>> [[[{remove_compile_flags}]]]
}
class "clang::tooling::CompileCommand" as C_0009256093568243151354
class C_0009256093568243151354 {
+CompileCommand() = default : void
+CompileCommand(const Twine & Directory, const Twine & Filename, std::vector<std::string> CommandLine, const Twine & Output) : void
__
+CommandLine : std::vector<std::string>
+Directory : std::string
+Filename : std::string
+Heuristic : std::string
+Output : std::string
}
abstract "clang::tooling::CompilationDatabase" as C_0012942658429832574981
abstract C_0012942658429832574981 {
+~CompilationDatabase() : void
..
{static} +autoDetectFromDirectory(StringRef SourceDir, std::string & ErrorMessage) : std::unique_ptr<CompilationDatabase>
{static} +autoDetectFromSource(StringRef SourceFile, std::string & ErrorMessage) : std::unique_ptr<CompilationDatabase>
+getAllCompileCommands() const : std::vector<CompileCommand>
+getAllFiles() const : std::vector<std::string>
{abstract} +getCompileCommands(StringRef FilePath) const = 0 : std::vector<CompileCommand>
{static} +loadFromDirectory(StringRef BuildDirectory, std::string & ErrorMessage) : std::unique_ptr<CompilationDatabase>
__
}
C_0004776835660025771847 ..> C_0009256093568243151354 [[{}]]
C_0004776835660025771847 o-- C_0012942658429832574981 [[{base_}]] : -base_
C_0004776835660025771847 --> C_0007149951276107284798 [[{config_}]] : -config_
C_0012942658429832574981 <|-- C_0004776835660025771847
C_0012942658429832574981 ..> C_0009256093568243151354

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
