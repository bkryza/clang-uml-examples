@startuml
title main() function sequence diagram
participant "src/main.cc" as C_0015738626628408489716
[-> C_0015738626628408489716 : main()
activate C_0015738626628408489716
participant "cli::cli_handler" as C_0018339746265838028166 [[{Command line options handler}]]
C_0015738626628408489716 -> C_0018339746265838028166 [[{}]] : cli_handler()
activate C_0018339746265838028166
deactivate C_0018339746265838028166
group try
C_0015738626628408489716 -> C_0018339746265838028166 [[{}]] : handle_options()
activate C_0018339746265838028166
deactivate C_0018339746265838028166
alt res == cli::cli_flow_t::kExit
[<-- C_0015738626628408489716
end
alt res == cli::cli_flow_t::kError
[<-- C_0015738626628408489716
end
participant "::main(int,const char **)::(lambda src/main.cc:59:35)" as C_0008579288632655758376 [[{main(int,const char **)::(lambda src/main.cc:59:35)}]]
C_0015738626628408489716 -> C_0008579288632655758376 [[{}]] : operator()() const
activate C_0008579288632655758376
deactivate C_0008579288632655758376
participant "common::compilation_database" as C_0004776835660025771847 [[{Custom compilation database class}]]
C_0015738626628408489716 -> C_0004776835660025771847 [[{}]] : __auto_detect_from_directory()__
activate C_0004776835660025771847
deactivate C_0004776835660025771847
C_0015738626628408489716 -> C_0004776835660025771847 [[{}]] : getAllFiles() const
activate C_0004776835660025771847
deactivate C_0004776835660025771847
participant "src/common/generators/generators.h" as C_0015062456295463097058
note over C_0015738626628408489716
We have to generate the translation
units list for each diagram
before scheduling tasks,
because std::filesystem::current_path
cannot be trusted with multiple
threads
end note
C_0015738626628408489716 -> C_0015062456295463097058 [[{}]] : find_translation_units_for_diagrams()
activate C_0015062456295463097058
deactivate C_0015062456295463097058
C_0015738626628408489716 -> C_0018339746265838028166 [[{}]] : get_runtime_config() const
activate C_0018339746265838028166
deactivate C_0018339746265838028166
C_0015738626628408489716 -> C_0015062456295463097058 [[{}]] : generate_diagrams()
activate C_0015062456295463097058
deactivate C_0015062456295463097058
[<-- C_0015738626628408489716
else error::compilation_database_error &
alt clanguml::logging::logger_type() == logging::logger_type_t::text
participant "src/util/logging.h" as C_0013395619657798558104
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : **[**logger_type()**]**
activate C_0013395619657798558104
deactivate C_0013395619657798558104
else
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string &,const char *>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string &,const char *>()
activate C_0013395619657798558104
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<std::string &>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<const char *>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
deactivate C_0013395619657798558104
end
deactivate C_0013395619657798558104
deactivate C_0013395619657798558104
end
[<-- C_0015738626628408489716
else error::query_driver_no_paths &
alt clanguml::logging::logger_type() == logging::logger_type_t::text
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : **[**logger_type()**]**
activate C_0013395619657798558104
deactivate C_0013395619657798558104
else
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string &,const char *>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
end
[<-- C_0015738626628408489716
else error::diagram_generation_error &
alt clanguml::logging::logger_type() == logging::logger_type_t::text
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : **[**logger_type()**]**
activate C_0013395619657798558104
deactivate C_0013395619657798558104
participant "error::diagram_generation_error" as C_0015245771937808831504 [[{diagram_generation_error}]]
C_0015738626628408489716 -> C_0015245771937808831504 [[{}]] : what() const
activate C_0015245771937808831504
C_0015245771937808831504 --> C_0015738626628408489716
deactivate C_0015245771937808831504
C_0015738626628408489716 -> C_0015245771937808831504 [[{}]] : what() const
activate C_0015245771937808831504
hnote over C_0015245771937808831504 : *
C_0015245771937808831504-[hidden]->C_0015245771937808831504
deactivate C_0015245771937808831504
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,const char *>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,const char *>()
activate C_0013395619657798558104
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<const char *>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
end
deactivate C_0013395619657798558104
deactivate C_0013395619657798558104
end
[<-- C_0015738626628408489716
else std::exception &
alt clanguml::logging::logger_type() == logging::logger_type_t::text
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : **[**logger_type()**]**
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0015738626628408489716 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,const char *>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
end
[<-- C_0015738626628408489716
end
[<-- C_0015738626628408489716
deactivate C_0015738626628408489716

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
