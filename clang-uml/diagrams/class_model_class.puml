@startuml
title Class diagram model
package [common] as C_0002532840279361781187 {
package [model] as C_0000669774451444102653 {
class "source_location" as C_0007162092657467521843
class C_0007162092657467521843 [[classclanguml_1_1common_1_1model_1_1source__location.html{Base class of all diagram elements that have source location.}]] {
__
}
enum "path_type" as C_0016255347626076472797
enum C_0016255347626076472797 [[enumclanguml_1_1common_1_1model_1_1path__type.html{Type of diagram path}]] {
kNamespace
kFilesystem
kModule
}
class "path" as C_0006758698337325774198
class C_0006758698337325774198 [[classclanguml_1_1common_1_1model_1_1path.html{Diagram path}]] {
__
}
class "ns_path_separator" as C_0010655386284821382926
class C_0010655386284821382926 [[structclanguml_1_1common_1_1model_1_1ns__path__separator.html{ns_path_separator}]] {
__
}
enum "diagram_t" as C_0007288192087020178058
enum C_0007288192087020178058 [[enumclanguml_1_1common_1_1model_1_1diagram__t.html{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "module_access_t" as C_0006969247586605750999
enum C_0006969247586605750999 [[enumclanguml_1_1common_1_1model_1_1module__access__t.html{module_access_t}]] {
kPublic
kPrivate
}
enum "access_t" as C_0016616250741959063654
enum C_0016616250741959063654 [[enumclanguml_1_1common_1_1model_1_1access__t.html{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "relationship_t" as C_0001833121281440583606
enum C_0001833121281440583606 [[enumclanguml_1_1common_1_1model_1_1relationship__t.html{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "message_t" as C_0012990663881099729824
enum C_0012990663881099729824 [[enumclanguml_1_1common_1_1model_1_1message__t.html{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kCoReturn
kCoAwait
kCoYield
kNone
}
enum "message_scope_t" as C_0001622873702655788086
enum C_0001622873702655788086 [[enumclanguml_1_1common_1_1model_1_1message__scope__t.html{message_scope_t}]] {
kNormal
kCondition
}
class "decorated_element" as C_0008936819060997384951
class C_0008936819060997384951 [[classclanguml_1_1common_1_1model_1_1decorated__element.html{Base class for decorated diagram elements}]] {
__
}
class "stylable_element" as C_0016622768607835415521
class C_0016622768607835415521 [[classclanguml_1_1common_1_1model_1_1stylable__element.html{Diagram elements to which style can be applied.}]] {
__
}
class "relationship" as C_0016370694070378943411
class C_0016370694070378943411 [[classclanguml_1_1common_1_1model_1_1relationship.html{Class representing any relationship other than inheritance}]] {
__
}
class "full_name_tag_t" as C_0008055211364012910024
class C_0008055211364012910024 [[structclanguml_1_1common_1_1model_1_1full__name__tag__t.html{full_name_tag_t}]] {
__
}
class "name_and_ns_tag" as C_0017789505560089675948
class C_0017789505560089675948 [[structclanguml_1_1common_1_1model_1_1name__and__ns__tag.html{name_and_ns_tag}]] {
__
}
class "diagram_element" as C_0008588005715032923314
class C_0008588005715032923314 [[classclanguml_1_1common_1_1model_1_1diagram__element.html{Base class for standalone diagram elements.}]] {
__
}
enum "template_parameter_kind_t" as C_0002899271625383948189
enum C_0002899271625383948189 [[enumclanguml_1_1common_1_1model_1_1template__parameter__kind__t.html{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
empty
}
enum "rpqualifier" as C_0017544883041375810356
enum C_0017544883041375810356 [[enumclanguml_1_1common_1_1model_1_1rpqualifier.html{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "context" as C_0006767826637291167780
class C_0006767826637291167780 [[structclanguml_1_1common_1_1model_1_1context.html{context}]] {
__
}
class "template_parameter" as C_0001425108501944636238
class C_0001425108501944636238 [[classclanguml_1_1common_1_1model_1_1template__parameter.html{Represents template parameter, template arguments or concept         constraints}]] {
__
}
class "element" as C_0016556163051475263500
class C_0016556163051475263500 [[classclanguml_1_1common_1_1model_1_1element.html{Base class for any element qualified by namespace.}]] {
__
}
class "template_trait" as C_0003717723700041732716
class C_0003717723700041732716 [[classclanguml_1_1common_1_1model_1_1template__trait.html{Common interface for template diagram elements.}]] {
__
}
class "template_element" as C_0013384831159811298387
class C_0013384831159811298387 [[classclanguml_1_1common_1_1model_1_1template__element.html{Base class for any element qualified by namespace.}]] {
__
}
class "nested_trait<T,Path>" as C_0007129669985754476498
class C_0007129669985754476498 [[classclanguml_1_1common_1_1model_1_1nested__trait.html{Base class for elements nested in the diagram.}]] {
__
}
enum "source_file_t" as C_0011921262880242400910
enum C_0011921262880242400910 [[enumclanguml_1_1common_1_1model_1_1source__file__t.html{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "fs_path_sep" as C_0005122065303139962793
class C_0005122065303139962793 [[structclanguml_1_1common_1_1model_1_1fs__path__sep.html{fs_path_sep}]] {
__
}
class "nested_trait<common::model::source_file,common::model::filesystem_path>" as C_0012891720332235399601
class C_0012891720332235399601 [[classclanguml_1_1common_1_1model_1_1nested__trait.html{nested_trait}]] {
__
}
class "source_file" as C_0006285717704576425038
class C_0006285717704576425038 [[classclanguml_1_1common_1_1model_1_1source__file.html{Diagram element representing some file or directory.}]] {
__
}
class "diagram" as C_0001576551882566686996
class C_0001576551882566686996 [[classclanguml_1_1common_1_1model_1_1diagram.html{Base class for all diagram models}]] {
__
}
class "element_view<T>" as C_0014290881841292490213
class C_0014290881841292490213 [[classclanguml_1_1common_1_1model_1_1element__view.html{element_view}]] {
__
}
class "element_view<Ts>" as C_0016060342263910724057
class C_0016060342263910724057 [[classclanguml_1_1common_1_1model_1_1element__view.html{element_view}]] {
__
}
class "element_views<Ts...>" as C_0000442317801108185645
class C_0000442317801108185645 [[structclanguml_1_1common_1_1model_1_1element__views.html{element_views}]] {
__
}
class "nested_trait<common::model::element,common::model::path>" as C_0015066935078142509054
class C_0015066935078142509054 [[classclanguml_1_1common_1_1model_1_1nested__trait.html{nested_trait}]] {
__
}
class "package" as C_0017146293478645494837
class C_0017146293478645494837 [[classclanguml_1_1common_1_1model_1_1package.html{Diagram element representing namespace or directory package}]] {
__
}
class "element_views<class_diagram::model::class_,class_diagram::model::enum_,class_diagram::model::concept_,class_diagram::model::objc_interface>" as C_0015081577551383302982
class C_0015081577551383302982 [[classclanguml_1_1common_1_1model_1_1element__views.html{element_views}]] {
__
}
class "nested_trait<common::model::element,common::model::namespace_>" as C_0000875139725026606268
class C_0000875139725026606268 [[classclanguml_1_1common_1_1model_1_1nested__trait.html{nested_trait}]] {
__
}
enum "filter_t" as C_0015453332803030149602
enum C_0015453332803030149602 [[enumclanguml_1_1common_1_1model_1_1filter__t.html{filter_t}]] {
kInclusive
kExclusive
}
class "filter_visitor" as C_0003755664421485538512
class C_0003755664421485538512 [[classclanguml_1_1common_1_1model_1_1filter__visitor.html{Base class for any diagram filter.}]] {
__
}
class "anyof_filter" as C_0004846633653196508605
class C_0004846633653196508605 [[structclanguml_1_1common_1_1model_1_1anyof__filter.html{anyof_filter}]] {
__
}
class "allof_filter" as C_0008681673430919411882
class C_0008681673430919411882 [[structclanguml_1_1common_1_1model_1_1allof__filter.html{allof_filter}]] {
__
}
class "namespace_filter" as C_0014529922051766561513
class C_0014529922051766561513 [[structclanguml_1_1common_1_1model_1_1namespace__filter.html{namespace_filter}]] {
__
}
class "modules_filter" as C_0018235506892675596161
class C_0018235506892675596161 [[structclanguml_1_1common_1_1model_1_1modules__filter.html{modules_filter}]] {
__
}
class "element_filter" as C_0005522729892949283391
class C_0005522729892949283391 [[structclanguml_1_1common_1_1model_1_1element__filter.html{element_filter}]] {
__
}
class "element_type_filter" as C_0016413347653743218402
class C_0016413347653743218402 [[structclanguml_1_1common_1_1model_1_1element__type__filter.html{element_type_filter}]] {
__
}
class "method_type_filter" as C_0015178953694360295900
class C_0015178953694360295900 [[structclanguml_1_1common_1_1model_1_1method__type__filter.html{method_type_filter}]] {
__
}
class "callee_filter" as C_0009586729560943033114
class C_0009586729560943033114 [[structclanguml_1_1common_1_1model_1_1callee__filter.html{callee_filter}]] {
__
}
class "subclass_filter" as C_0011119356209474014086
class C_0011119356209474014086 [[structclanguml_1_1common_1_1model_1_1subclass__filter.html{subclass_filter}]] {
__
}
class "parents_filter" as C_0014190027896959020338
class C_0014190027896959020338 [[structclanguml_1_1common_1_1model_1_1parents__filter.html{parents_filter}]] {
__
}
class "edge_traversal_filter<DiagramT,ElementT,ConfigEntryT=std::string,MatchOverrideT=common::model::element>" as C_0011978821643502128904
class C_0011978821643502128904 [[structclanguml_1_1common_1_1model_1_1edge__traversal__filter.html{Common template for filters involving traversing relationship graph.}]] {
__
}
class "relationship_filter" as C_0009565704064810099821
class C_0009565704064810099821 [[structclanguml_1_1common_1_1model_1_1relationship__filter.html{relationship_filter}]] {
__
}
class "access_filter" as C_0008785474747591996724
class C_0008785474747591996724 [[structclanguml_1_1common_1_1model_1_1access__filter.html{access_filter}]] {
__
}
class "module_access_filter" as C_0015952402022523334996
class C_0015952402022523334996 [[structclanguml_1_1common_1_1model_1_1module__access__filter.html{module_access_filter}]] {
__
}
class "context_filter" as C_0016629349577908476453
class C_0016629349577908476453 [[structclanguml_1_1common_1_1model_1_1context__filter.html{context_filter}]] {
__
}
class "paths_filter" as C_0006652291670129478083
class C_0006652291670129478083 [[structclanguml_1_1common_1_1model_1_1paths__filter.html{paths_filter}]] {
__
}
class "class_method_filter" as C_0012630714920699568214
class C_0012630714920699568214 [[structclanguml_1_1common_1_1model_1_1class__method__filter.html{class_method_filter}]] {
__
}
class "class_member_filter" as C_0005413465939996691743
class C_0005413465939996691743 [[structclanguml_1_1common_1_1model_1_1class__member__filter.html{class_member_filter}]] {
__
}
class "diagram_filter" as C_0016433125554160293965
class C_0016433125554160293965 [[classclanguml_1_1common_1_1model_1_1diagram__filter.html{Composite of all diagrams filters.}]] {
__
}
class "diagram_filter::private_constructor_tag_t" as C_0004875546475450307527
class C_0004875546475450307527 [[structclanguml_1_1common_1_1model_1_1diagram__filter_1_1private__constructor__tag__t.html{diagram_filter::private_constructor_tag_t}]] {
__
}
class "diagram_filter_factory" as C_0011768847127831739904
class C_0011768847127831739904 [[classclanguml_1_1common_1_1model_1_1diagram__filter__factory.html{diagram_filter_factory}]] {
__
}
}
}
package [class_diagram] as C_0017921336289613804855 {
package [model] as C_0007176993879715460962 {
class "class_element" as C_0004846934894930864299
class C_0004846934894930864299 [[classclanguml_1_1class__diagram_1_1model_1_1class__element.html{Base class for class elements (e.g. member or method).}]] {
__
}
class "class_member_base" as C_0014241292626575163322
class C_0014241292626575163322 [[classclanguml_1_1class__diagram_1_1model_1_1class__member__base.html{Generic class member model.}]] {
__
}
class "class_member" as C_0014370262096868218046
class C_0014370262096868218046 [[classclanguml_1_1class__diagram_1_1model_1_1class__member.html{Class member model.}]] {
__
}
class "method_parameter" as C_0004845352266951408403
class C_0004845352266951408403 [[classclanguml_1_1class__diagram_1_1model_1_1method__parameter.html{Model of a method parameter.}]] {
__
}
class "class_method_base" as C_0018032026899693266441
class C_0018032026899693266441 [[classclanguml_1_1class__diagram_1_1model_1_1class__method__base.html{Class method model.}]] {
__
}
class "class_method" as C_0001633165731746789371
class C_0001633165731746789371 [[classclanguml_1_1class__diagram_1_1model_1_1class__method.html{Class method model.}]] {
__
}
class "class_" as C_0010336274859733225462
class C_0010336274859733225462 [[classclanguml_1_1class__diagram_1_1model_1_1class__.html{Diagram element representing a class or class template.}]] {
__
}
class "concept_" as C_0010998792414017796003
class C_0010998792414017796003 [[classclanguml_1_1class__diagram_1_1model_1_1concept__.html{Model of C++ concept.}]] {
__
}
class "enum_" as C_0005795143816749204050
class C_0005795143816749204050 [[classclanguml_1_1class__diagram_1_1model_1_1enum__.html{Diagram element representing an enum.}]] {
__
}
class "objc_member" as C_0007364672229966928495
class C_0007364672229966928495 [[classclanguml_1_1class__diagram_1_1model_1_1objc__member.html{ObjC class member model.}]] {
__
}
class "objc_method" as C_0002175636676684225778
class C_0002175636676684225778 [[classclanguml_1_1class__diagram_1_1model_1_1objc__method.html{ObjC class method model.}]] {
__
}
class "objc_interface" as C_0010166346108406727066
class C_0010166346108406727066 [[classclanguml_1_1class__diagram_1_1model_1_1objc__interface.html{Diagram element representing an ObjC interface.}]] {
__
}
class "diagram" as C_0007315456613526221498
class C_0007315456613526221498 [[classclanguml_1_1class__diagram_1_1model_1_1diagram.html{Class representing a class diagram.}]] {
__
}
}
}
C_0006758698337325774198 o-- C_0016255347626076472797 [[{path_type_}]] : -path_type_
C_0016370694070378943411 o-- C_0001833121281440583606 [[{type_}]] : -type_
C_0016370694070378943411 o-- C_0016616250741959063654 [[{access_}]] : -access_
C_0008936819060997384951 <|-- C_0016370694070378943411
C_0016622768607835415521 <|-- C_0016370694070378943411
C_0007162092657467521843 <|-- C_0016370694070378943411
C_0008588005715032923314 o-- C_0016370694070378943411 [[{relationships_}]] : -relationships_
C_0008936819060997384951 <|-- C_0008588005715032923314
C_0007162092657467521843 <|-- C_0008588005715032923314
C_0006767826637291167780 o-- C_0017544883041375810356 [[{pr}]] : +pr
C_0001425108501944636238 o-- C_0002899271625383948189 [[{kind_}]] : -kind_
C_0001425108501944636238 o-- C_0006767826637291167780 [[{context_}]] : -context_
C_0001425108501944636238 o-- C_0001425108501944636238 [[{template_params_}]] : -template_params_
C_0016556163051475263500 o-- C_0006758698337325774198 [[{ns_}]] : -ns_
C_0016556163051475263500 o-- C_0006758698337325774198 [[{using_namespace_}]] : -using_namespace_
C_0008588005715032923314 <|-- C_0016556163051475263500
C_0003717723700041732716 o-- C_0001425108501944636238 [[{templates_}]] : -templates_
C_0016556163051475263500 <|-- C_0013384831159811298387
C_0003717723700041732716 <|-- C_0013384831159811298387
C_0012891720332235399601 ..|> C_0007129669985754476498
C_0006285717704576425038 o-- C_0006758698337325774198 [[{path_}]] : -path_
C_0006285717704576425038 o-- C_0011921262880242400910 [[{type_}]] : -type_
C_0008588005715032923314 <|-- C_0006285717704576425038
C_0016622768607835415521 <|-- C_0006285717704576425038
C_0012891720332235399601 <|-- C_0006285717704576425038
C_0001576551882566686996 o-- C_0016433125554160293965 [[{filter_}]] : -filter_
C_0016060342263910724057 ..|> C_0014290881841292490213
C_0016060342263910724057 <|-- C_0000442317801108185645
C_0015066935078142509054 ..|> C_0007129669985754476498
C_0016556163051475263500 <|-- C_0017146293478645494837
C_0016622768607835415521 <|-- C_0017146293478645494837
C_0015066935078142509054 <|-- C_0017146293478645494837
C_0015081577551383302982 ..|> C_0000442317801108185645
C_0000875139725026606268 ..|> C_0007129669985754476498
C_0003755664421485538512 o-- C_0015453332803030149602 [[{type_}]] : -type_
C_0004846633653196508605 o-- C_0003755664421485538512 [[{filters_}]] : -filters_
C_0003755664421485538512 <|-- C_0004846633653196508605
C_0008681673430919411882 o-- C_0003755664421485538512 [[{filters_}]] : -filters_
C_0003755664421485538512 <|-- C_0008681673430919411882
C_0003755664421485538512 <|-- C_0014529922051766561513
C_0003755664421485538512 <|-- C_0018235506892675596161
C_0003755664421485538512 <|-- C_0005522729892949283391
C_0003755664421485538512 <|-- C_0016413347653743218402
C_0003755664421485538512 <|-- C_0015178953694360295900
C_0003755664421485538512 <|-- C_0009586729560943033114
C_0003755664421485538512 <|-- C_0011119356209474014086
C_0003755664421485538512 <|-- C_0014190027896959020338
C_0011978821643502128904 o-- C_0001833121281440583606 [[{relationship_}]] : -relationship_
C_0003755664421485538512 <|-- C_0011978821643502128904
C_0009565704064810099821 o-- C_0001833121281440583606 [[{relationships_}]] : -relationships_
C_0003755664421485538512 <|-- C_0009565704064810099821
C_0008785474747591996724 o-- C_0016616250741959063654 [[{access_}]] : -access_
C_0003755664421485538512 <|-- C_0008785474747591996724
C_0015952402022523334996 o-- C_0006969247586605750999 [[{access_}]] : -access_
C_0003755664421485538512 <|-- C_0015952402022523334996
C_0003755664421485538512 <|-- C_0016629349577908476453
C_0003755664421485538512 <|-- C_0006652291670129478083
C_0012630714920699568214 o-- C_0008785474747591996724 [[{access_filter_}]] : -access_filter_
C_0012630714920699568214 o-- C_0015178953694360295900 [[{method_type_filter_}]] : -method_type_filter_
C_0003755664421485538512 <|-- C_0012630714920699568214
C_0005413465939996691743 o-- C_0008785474747591996724 [[{access_filter_}]] : -access_filter_
C_0003755664421485538512 <|-- C_0005413465939996691743
C_0016433125554160293965 o-- C_0003755664421485538512 [[{inclusive_}]] : -inclusive_
C_0016433125554160293965 o-- C_0003755664421485538512 [[{exclusive_}]] : -exclusive_
C_0016433125554160293965 --> C_0001576551882566686996 [[{diagram_}]] : -diagram_
C_0016433125554160293965 <.. C_0011768847127831739904 : +<<friend>>
C_0004875546475450307527 --+ C_0016433125554160293965
C_0004846934894930864299 o-- C_0016616250741959063654 [[{access_}]] : -access_
C_0008936819060997384951 <|-- C_0004846934894930864299
C_0007162092657467521843 <|-- C_0004846934894930864299
C_0004846934894930864299 <|-- C_0014241292626575163322
C_0014241292626575163322 <|-- C_0014370262096868218046
C_0008936819060997384951 <|-- C_0004845352266951408403
C_0018032026899693266441 o-- C_0004845352266951408403 [[{parameters_}]] : -parameters_
C_0004846934894930864299 <|-- C_0018032026899693266441
C_0018032026899693266441 <|-- C_0001633165731746789371
C_0003717723700041732716 <|-- C_0001633165731746789371
C_0010336274859733225462 o-- C_0014370262096868218046 [[{members_}]] : -members_
C_0010336274859733225462 o-- C_0001633165731746789371 [[{methods_}]] : -methods_
C_0013384831159811298387 <|-- C_0010336274859733225462
C_0016622768607835415521 <|-- C_0010336274859733225462
C_0010998792414017796003 o-- C_0004845352266951408403 [[{requires_parameters_}]] : -requires_parameters_
C_0016622768607835415521 <|-- C_0010998792414017796003
C_0013384831159811298387 <|-- C_0010998792414017796003
C_0016556163051475263500 <|-- C_0005795143816749204050
C_0016622768607835415521 <|-- C_0005795143816749204050
C_0014241292626575163322 <|-- C_0007364672229966928495
C_0018032026899693266441 <|-- C_0002175636676684225778
C_0010166346108406727066 o-- C_0007364672229966928495 [[{members_}]] : -members_
C_0010166346108406727066 o-- C_0002175636676684225778 [[{methods_}]] : -methods_
C_0016556163051475263500 <|-- C_0010166346108406727066
C_0016622768607835415521 <|-- C_0010166346108406727066
C_0001576551882566686996 <|-- C_0007315456613526221498
C_0015081577551383302982 <|-- C_0007315456613526221498
C_0000875139725026606268 <|-- C_0007315456613526221498

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
