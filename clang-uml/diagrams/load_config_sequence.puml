@startuml
title Configuration file loading sequence diagram
participant "src/config/config.h" as C_0009842205026191081762
[-> C_0009842205026191081762 : load()
activate C_0009842205026191081762
group try
note over C_0009842205026191081762
Store the parent path of
the config_file to properly
resolve relative paths in
config file
end note
alt has_key(doc, "__parent_path")
participant "src/config/yaml_decoders.cc" as C_0011390433321347495160
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : **[**has_key()**]**
activate C_0011390433321347495160
participant "::YAML::has_key(const YAML::Node &,const std::string &)::(lambda src/config/yaml_decoders.cc:110:46)" as C_0003241688388917068313 [[{has_key(const YAML::Node &,const std::string &)::(lambda src/config/yaml_decoders.cc:110:46)}]]
C_0011390433321347495160 -> C_0003241688388917068313 [[{}]] : operator()() const
activate C_0003241688388917068313
C_0003241688388917068313 --> C_0011390433321347495160
deactivate C_0003241688388917068313
C_0011390433321347495160 --> C_0009842205026191081762
deactivate C_0011390433321347495160
end
participant "src/util/logging.h" as C_0013395619657798558104
C_0009842205026191081762 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string>()
activate C_0013395619657798558104
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<std::string>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
deactivate C_0013395619657798558104
end
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<std::string>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
end
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : resolve_option_path()
activate C_0011390433321347495160
alt option_path.is_absolute()

end
deactivate C_0011390433321347495160
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : resolve_option_path()
activate C_0011390433321347495160
hnote over C_0011390433321347495160 : *
C_0011390433321347495160-[hidden]->C_0011390433321347495160
deactivate C_0011390433321347495160
alt has_key(doc, "diagrams")
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : **[**has_key()**]**
activate C_0011390433321347495160
hnote over C_0011390433321347495160 : *
C_0011390433321347495160-[hidden]->C_0011390433321347495160
deactivate C_0011390433321347495160
loop diagrams
alt has_key(d.second, "include!")
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : **[**has_key()**]**
activate C_0011390433321347495160
hnote over C_0011390433321347495160 : *
C_0011390433321347495160-[hidden]->C_0011390433321347495160
deactivate C_0011390433321347495160
end
end
end
alt validate
alt !schema_errors.empty()
participant "error::config_schema_error" as C_0007943225191485457073 [[{config_schema_error}]]
C_0009842205026191081762 -> C_0007943225191485457073 [[{}]] : config_schema_error()
activate C_0007943225191485457073
deactivate C_0007943225191485457073
end
end
alt inherit
participant "config::config" as C_0007149951276107284798 [[{Represents entire configuration file}]]
C_0009842205026191081762 -> C_0007149951276107284798 [[{}]] : inherit()
activate C_0007149951276107284798
loop diagrams
participant "config::inheritable_diagram_options" as C_0000966232506125300666 [[{Represents subset of inheritable configuration options}]]
C_0007149951276107284798 -> C_0000966232506125300666 [[{}]] : inherit()
activate C_0000966232506125300666
deactivate C_0000966232506125300666
alt static_cast <bool> (expr)
C_0007149951276107284798 -> C_0000966232506125300666 [[{}]] : **[**get_relative_to()**]**
activate C_0000966232506125300666
C_0000966232506125300666 --> C_0007149951276107284798
C_0000966232506125300666 --> C_0007149951276107284798
deactivate C_0000966232506125300666
else
end
end
deactivate C_0007149951276107284798
end
C_0009842205026191081762 -> C_0007149951276107284798 [[{}]] : initialize_diagram_templates()
activate C_0007149951276107284798
participant "src/config/diagram_templates.h" as C_0000438932534169666680
C_0007149951276107284798 -> C_0000438932534169666680 [[{}]] : get_predefined_diagram_templates()
activate C_0000438932534169666680
deactivate C_0000438932534169666680
deactivate C_0007149951276107284798
[<-- C_0009842205026191081762
else YAML::BadFile &
else YAML::Exception &
end
deactivate C_0009842205026191081762

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
