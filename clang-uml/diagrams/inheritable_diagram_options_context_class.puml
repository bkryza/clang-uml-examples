@startuml
title Configuration model inheritable options context
left to right direction
class "option<T>" as C_0017284253560114787993
class C_0017284253560114787993 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<std::filesystem::path>" as C_0002147703933373012758
class C_0002147703933373012758 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<glob_t>" as C_0017579097728257579870
class C_0017579097728257579870 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<clanguml::common::model::namespace_>" as C_0018442927166580447686
class C_0018442927166580447686 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<std::string>" as C_0005141071769497027029
class C_0005141071769497027029 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<bool>" as C_0012889352777248743629
class C_0012889352777248743629 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<filter_mode_t>" as C_0004810680939101382369
class C_0004810680939101382369 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<filter>" as C_0015476364610987947356
class C_0015476364610987947356 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<plantuml>" as C_0001779881696886013482
class C_0001779881696886013482 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<mermaid>" as C_0002666639517174822963
class C_0002666639517174822963 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<graphml>" as C_0008909182019150554969
class C_0008909182019150554969 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<method_arguments>" as C_0012795219012952988220
class C_0012795219012952988220 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<member_order_t>" as C_0002698467816127204487
class C_0002698467816127204487 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<package_type_t>" as C_0013711013568365101269
class C_0013711013568365101269 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<generate_links_config>" as C_0014126807936053938378
class C_0014126807936053938378 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<git_config>" as C_0004975505658011755951
class C_0004975505658011755951 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<std::map<std::string,std::vector<layout_hint>>>" as C_0015375318085370131604
class C_0015375318085370131604 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<std::map<std::string,relationship_hint_t>>" as C_0009883451000334016507
class C_0009883451000334016507 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<std::map<std::string,std::string>>" as C_0000514364662543777184
class C_0000514364662543777184 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<comment_parser_t>" as C_0009767212831766123823
class C_0009767212831766123823 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<std::vector<std::string>>" as C_0007293733225463007823
class C_0007293733225463007823 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<unsigned int>" as C_0014739893675920928193
class C_0014739893675920928193 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "option<nlohmann::basic_json>" as C_0011730890301416965561
class C_0011730890301416965561 [[classclanguml_1_1config_1_1option.html{option}]] {
__
}
class "inheritable_diagram_options" as C_0000966232506125300666
class C_0000966232506125300666 [[structclanguml_1_1config_1_1inheritable__diagram__options.html{Represents subset of inheritable configuration options}]] {
+~inheritable_diagram_options() = default : void [[[{~inheritable_diagram_options}]]]
..
+generate_fully_qualified_name() const : bool [[[{Whether the diagram element should be fully qualified in diagram}]]]
+get_relative_to() : option<std::filesystem::path> & [[[{Get reference to `relative_to` diagram config option}]]]
+inherit(const inheritable_diagram_options & parent) : void [[[{inherit}]]]
+root_directory() const : std::filesystem::path [[[{Returns absolute path of the `relative_to` option}]]]
+simplify_template_type(std::string full_name) const : std::string [[[{simplify_template_type}]]]
__
+allow_empty_diagrams : option<bool> [[[{allow_empty_diagrams}]]]
+base_directory : option<std::filesystem::path> [[[{base_directory}]]]
+combine_free_functions_into_file_participants : option<bool> [[[{combine_free_functions_into_file_participants}]]]
+comment_parser : option<comment_parser_t> [[[{comment_parser}]]]
+debug_mode : option<bool> [[[{debug_mode}]]]
+exclude : option<filter> [[[{exclude}]]]
+filter_mode : option<filter_mode_t> [[[{filter_mode}]]]
+fold_repeated_activities : option<bool> [[[{fold_repeated_activities}]]]
+generate_concept_requirements : option<bool> [[[{generate_concept_requirements}]]]
+generate_condition_statements : option<bool> [[[{generate_condition_statements}]]]
+generate_links : option<generate_links_config> [[[{generate_links}]]]
+generate_message_comments : option<bool> [[[{generate_message_comments}]]]
+generate_metadata : option<bool> [[[{generate_metadata}]]]
+generate_method_arguments : option<method_arguments> [[[{generate_method_arguments}]]]
+generate_packages : option<bool> [[[{generate_packages}]]]
+generate_return_types : option<bool> [[[{generate_return_types}]]]
+generate_return_values : option<bool> [[[{generate_return_values}]]]
+generate_system_headers : option<bool> [[[{generate_system_headers}]]]
+generate_template_argument_dependencies : option<bool> [[[{generate_template_argument_dependencies}]]]
+git : option<git_config> [[[{git}]]]
+glob : option<glob_t> [[[{glob}]]]
+graphml : option<struct graphml> [[[{graphml}]]]
+group_methods : option<bool> [[[{group_methods}]]]
+include : option<filter> [[[{include}]]]
+include_relations_also_as_members : option<bool> [[[{include_relations_also_as_members}]]]
+include_system_headers : option<bool> [[[{include_system_headers}]]]
+inline_lambda_messages : option<bool> [[[{inline_lambda_messages}]]]
+layout : option<layout_hints> [[[{layout}]]]
+member_order : option<member_order_t> [[[{member_order}]]]
+mermaid : option<struct mermaid> [[[{mermaid}]]]
+message_comment_width : option<unsigned int> [[[{message_comment_width}]]]
+message_name_width : option<unsigned int> [[[{message_name_width}]]]
+package_type : option<package_type_t> [[[{package_type}]]]
+participants_order : option<std::vector<std::string>> [[[{participants_order}]]]
+puml : option<plantuml> [[[{puml}]]]
+relationship_hints : option<relationship_hints_t> [[[{relationship_hints}]]]
#relative_to : option<std::filesystem::path> [[[{relative_to}]]]
+skip_redundant_dependencies : option<bool> [[[{skip_redundant_dependencies}]]]
+type_aliases : option<type_aliases_t> [[[{type_aliases}]]]
+user_data : option<inja::json> [[[{user_data}]]]
+using_module : option<std::string> [[[{using_module}]]]
+using_namespace : option<common::model::namespace_> [[[{using_namespace}]]]
}
abstract "diagram" as C_0003201952778923380387
abstract C_0003201952778923380387 [[structclanguml_1_1config_1_1diagram.html{Common diagram configuration type}]] {
+~diagram() = default : void [[[{~diagram}]]]
..
+get_together_group(const std::string & full_name) const : std::optional<std::string> [[[{get_together_group}]]]
+glob_translation_units(const std::vector<std::string> & compilation_database_files, bool is_fixed = false) const : std::vector<std::string> [[[{Filter translation units based on glob patterns}]]]
+initialize_type_aliases() : void [[[{Initialize predefined set of C++ type aliases}]]]
+make_module_relative(const std::optional<std::string> & maybe_module) const : std::vector<std::string> [[[{Make module path relative to `using_module` configuration option}]]]
+make_path_relative(const std::filesystem::path & p) const : std::filesystem::path [[[{Make path relative to the `relative_to` config option}]]]
{abstract} +type() const = 0 : common::model::diagram_t [[[{type}]]]
__
+name : std::string [[[{name}]]]
+title : option<std::string> [[[{title}]]]
}
class "config" as C_0007149951276107284798
class C_0007149951276107284798 [[structclanguml_1_1config_1_1config.html{Represents entire configuration file}]] {
+inherit() : void [[[{inherit}]]]
+initialize_diagram_templates() : void [[[{initialize_diagram_templates}]]]
__
+add_compile_flags : option<std::vector<std::string>> [[[{add_compile_flags}]]]
+compilation_database_dir : option<std::string> [[[{compilation_database_dir}]]]
+diagram_templates : option<std::map<std::string,diagram_template>> [[[{diagram_templates}]]]
+diagrams : std::map<std::string,std::shared_ptr<diagram>> [[[{diagrams}]]]
+output_directory : option<std::string> [[[{output_directory}]]]
+query_driver : option<std::string> [[[{query_driver}]]]
+remove_compile_flags : option<std::vector<common::string_or_regex>> [[[{remove_compile_flags}]]]
}
C_0017284253560114787993 ..|> C_0017284253560114787993
C_0002147703933373012758 ..|> C_0017284253560114787993
C_0017579097728257579870 ..|> C_0017284253560114787993
C_0018442927166580447686 ..|> C_0017284253560114787993
C_0005141071769497027029 ..|> C_0017284253560114787993
C_0012889352777248743629 ..|> C_0017284253560114787993
C_0004810680939101382369 ..|> C_0017284253560114787993
C_0015476364610987947356 ..|> C_0017284253560114787993
C_0001779881696886013482 ..|> C_0017284253560114787993
C_0002666639517174822963 ..|> C_0017284253560114787993
C_0008909182019150554969 ..|> C_0017284253560114787993
C_0012795219012952988220 ..|> C_0017284253560114787993
C_0002698467816127204487 ..|> C_0017284253560114787993
C_0013711013568365101269 ..|> C_0017284253560114787993
C_0014126807936053938378 ..|> C_0017284253560114787993
C_0004975505658011755951 ..|> C_0017284253560114787993
C_0015375318085370131604 ..|> C_0017284253560114787993
C_0009883451000334016507 ..|> C_0017284253560114787993
C_0000514364662543777184 ..|> C_0017284253560114787993
C_0009767212831766123823 ..|> C_0017284253560114787993
C_0007293733225463007823 ..|> C_0017284253560114787993
C_0014739893675920928193 ..|> C_0017284253560114787993
C_0011730890301416965561 ..|> C_0017284253560114787993
C_0000966232506125300666 ..> C_0017284253560114787993 [[{}]]
C_0000966232506125300666 o-- C_0017579097728257579870 [[{glob}]] : +glob
C_0000966232506125300666 o-- C_0018442927166580447686 [[{using_namespace}]] : +using_namespace
C_0000966232506125300666 o-- C_0005141071769497027029 [[{using_module}]] : +using_module
C_0000966232506125300666 o-- C_0012889352777248743629 [[{include_relations_also_as_members}]] : +include_relations_also_as_members
C_0000966232506125300666 o-- C_0004810680939101382369 [[{filter_mode}]] : +filter_mode
C_0000966232506125300666 o-- C_0012889352777248743629 [[{include_system_headers}]] : +include_system_headers
C_0000966232506125300666 o-- C_0015476364610987947356 [[{include}]] : +include
C_0000966232506125300666 o-- C_0015476364610987947356 [[{exclude}]] : +exclude
C_0000966232506125300666 o-- C_0001779881696886013482 [[{puml}]] : +puml
C_0000966232506125300666 o-- C_0002666639517174822963 [[{mermaid}]] : +mermaid
C_0000966232506125300666 o-- C_0008909182019150554969 [[{graphml}]] : +graphml
C_0000966232506125300666 o-- C_0012795219012952988220 [[{generate_method_arguments}]] : +generate_method_arguments
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_concept_requirements}]] : +generate_concept_requirements
C_0000966232506125300666 o-- C_0012889352777248743629 [[{group_methods}]] : +group_methods
C_0000966232506125300666 o-- C_0002698467816127204487 [[{member_order}]] : +member_order
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_packages}]] : +generate_packages
C_0000966232506125300666 o-- C_0013711013568365101269 [[{package_type}]] : +package_type
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_template_argument_dependencies}]] : +generate_template_argument_dependencies
C_0000966232506125300666 o-- C_0012889352777248743629 [[{skip_redundant_dependencies}]] : +skip_redundant_dependencies
C_0000966232506125300666 o-- C_0014126807936053938378 [[{generate_links}]] : +generate_links
C_0000966232506125300666 o-- C_0004975505658011755951 [[{git}]] : +git
C_0000966232506125300666 o-- C_0015375318085370131604 [[{layout}]] : +layout
C_0000966232506125300666 o-- C_0002147703933373012758 [[{base_directory}]] : +base_directory
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_system_headers}]] : +generate_system_headers
C_0000966232506125300666 o-- C_0009883451000334016507 [[{relationship_hints}]] : +relationship_hints
C_0000966232506125300666 o-- C_0000514364662543777184 [[{type_aliases}]] : +type_aliases
C_0000966232506125300666 o-- C_0009767212831766123823 [[{comment_parser}]] : +comment_parser
C_0000966232506125300666 o-- C_0012889352777248743629 [[{combine_free_functions_into_file_participants}]] : +combine_free_functions_into_file_participants
C_0000966232506125300666 o-- C_0012889352777248743629 [[{inline_lambda_messages}]] : +inline_lambda_messages
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_return_types}]] : +generate_return_types
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_return_values}]] : +generate_return_values
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_condition_statements}]] : +generate_condition_statements
C_0000966232506125300666 o-- C_0007293733225463007823 [[{participants_order}]] : +participants_order
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_message_comments}]] : +generate_message_comments
C_0000966232506125300666 o-- C_0012889352777248743629 [[{fold_repeated_activities}]] : +fold_repeated_activities
C_0000966232506125300666 o-- C_0014739893675920928193 [[{message_comment_width}]] : +message_comment_width
C_0000966232506125300666 o-- C_0014739893675920928193 [[{message_name_width}]] : +message_name_width
C_0000966232506125300666 o-- C_0012889352777248743629 [[{debug_mode}]] : +debug_mode
C_0000966232506125300666 o-- C_0012889352777248743629 [[{generate_metadata}]] : +generate_metadata
C_0000966232506125300666 o-- C_0012889352777248743629 [[{allow_empty_diagrams}]] : +allow_empty_diagrams
C_0000966232506125300666 o-- C_0011730890301416965561 [[{user_data}]] : +user_data
C_0000966232506125300666 o-- C_0002147703933373012758 [[{relative_to}]] : #relative_to
C_0003201952778923380387 o-- C_0005141071769497027029 [[{title}]] : +title
C_0000966232506125300666 <|-- C_0003201952778923380387
C_0007149951276107284798 o-- C_0005141071769497027029 [[{compilation_database_dir}]] : +compilation_database_dir
C_0007149951276107284798 o-- C_0007293733225463007823 [[{add_compile_flags}]] : +add_compile_flags
C_0007149951276107284798 o-- C_0005141071769497027029 [[{query_driver}]] : +query_driver
C_0007149951276107284798 o-- C_0005141071769497027029 [[{output_directory}]] : +output_directory
C_0007149951276107284798 o-- C_0003201952778923380387 [[{diagrams}]] : +diagrams
C_0000966232506125300666 <|-- C_0007149951276107284798

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
