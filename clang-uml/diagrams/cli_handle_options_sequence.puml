@startuml
title CLI options handling sequence diagram
participant "cli::cli_handler" as C_0018339746265838028166 [[{Command line options handler}]]
[-> C_0018339746265838028166 : handle_options()
activate C_0018339746265838028166
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : parse()
activate C_0018339746265838028166
group try
else const CLI::CallForHelp &
else const CLI::Success &
C_0018339746265838028166 --> C_0018339746265838028166
else const CLI::ParseError &
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
alt res != cli_flow_t::kContinue
[<-- C_0018339746265838028166
end
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : setup_logging()
activate C_0018339746265838028166
alt logger_type == logging::logger_type_t::text
participant "src/util/logging.h" as C_0013395619657798558104
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
else
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
alt progress
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : __create_json_progress_logger()__
activate C_0018339746265838028166
deactivate C_0018339746265838028166
end
end
deactivate C_0018339746265838028166
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : handle_pre_config_options()
activate C_0018339746265838028166
alt show_version
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : print_version()
activate C_0018339746265838028166
alt logger_type == clanguml::logging::logger_type_t::text
participant "src/version/version.h" as C_0017331277078231113019
C_0018339746265838028166 -> C_0017331277078231113019 [[{}]] : version()
activate C_0017331277078231113019
deactivate C_0017331277078231113019
else
C_0018339746265838028166 -> C_0017331277078231113019 [[{}]] : version()
activate C_0017331277078231113019
deactivate C_0017331277078231113019
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt (config_path == "-") && (initialize || add_diagram_from_template || add_class_diagram.has_value() || add_sequence_diagram.has_value() || add_package_diagram.has_value() || add_include_diagram.has_value())
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int>()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0018339746265838028166 --> C_0018339746265838028166
end
alt print_from || print_to
alt diagram_names.size() != 1
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
C_0018339746265838028166 --> C_0018339746265838028166
end
end
alt initialize
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : create_config_file()
activate C_0018339746265838028166
alt fs::exists(config_file)
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt config_path != "-"
alt add_class_diagram
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : add_config_diagram()
activate C_0018339746265838028166
alt !fs::exists(config_file)
C_0018339746265838028166 --> C_0018339746265838028166
end
loop YAML::const_iterator it = doc["diagrams"].begin(); it != doc["diagrams"].end(); ++it
alt it->first.as<std::string>() == name
C_0018339746265838028166 --> C_0018339746265838028166
end
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt add_sequence_diagram
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : add_config_diagram()
activate C_0018339746265838028166
hnote over C_0018339746265838028166 : *
C_0018339746265838028166-[hidden]->C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt add_package_diagram
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : add_config_diagram()
activate C_0018339746265838028166
hnote over C_0018339746265838028166 : *
C_0018339746265838028166-[hidden]->C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt add_include_diagram
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : add_config_diagram()
activate C_0018339746265838028166
hnote over C_0018339746265838028166 : *
C_0018339746265838028166-[hidden]->C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
alt res != cli_flow_t::kContinue
[<-- C_0018339746265838028166
end
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : load_config()
activate C_0018339746265838028166
group try
participant "src/config/config.h" as C_0009842205026191081762
C_0018339746265838028166 -> C_0009842205026191081762 [[{}]] : load()
activate C_0009842205026191081762
group try
note over C_0009842205026191081762
Store the parent path of
the config_file to properly
resolve relative paths in
config file
end note
alt has_key(doc, "__parent_path")
participant "src/config/yaml_decoders.cc" as C_0011390433321347495160
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : **[**has_key()**]**
activate C_0011390433321347495160
C_0011390433321347495160 --> C_0009842205026191081762
deactivate C_0011390433321347495160
end
C_0009842205026191081762 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string>()
activate C_0013395619657798558104
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<std::string>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
deactivate C_0013395619657798558104
end
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<std::string>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
end
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : resolve_option_path()
activate C_0011390433321347495160
alt option_path.is_absolute()

end
deactivate C_0011390433321347495160
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : resolve_option_path()
activate C_0011390433321347495160
hnote over C_0011390433321347495160 : *
C_0011390433321347495160-[hidden]->C_0011390433321347495160
deactivate C_0011390433321347495160
alt has_key(doc, "diagrams")
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : **[**has_key()**]**
activate C_0011390433321347495160
hnote over C_0011390433321347495160 : *
C_0011390433321347495160-[hidden]->C_0011390433321347495160
deactivate C_0011390433321347495160
loop diagrams
alt has_key(d.second, "include!")
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : **[**has_key()**]**
activate C_0011390433321347495160
hnote over C_0011390433321347495160 : *
C_0011390433321347495160-[hidden]->C_0011390433321347495160
deactivate C_0011390433321347495160
end
end
end
alt validate
alt !schema_errors.empty()
participant "error::config_schema_error" as C_0007943225191485457073 [[{config_schema_error}]]
C_0009842205026191081762 -> C_0007943225191485457073 [[{}]] : config_schema_error()
activate C_0007943225191485457073
deactivate C_0007943225191485457073
end
end
C_0009842205026191081762 --> C_0018339746265838028166
else YAML::BadFile &
else YAML::Exception &
end
deactivate C_0009842205026191081762
alt validate_only
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
else clanguml::error::config_schema_error &
C_0018339746265838028166 -> C_0009842205026191081762 [[{}]] : print()
activate C_0009842205026191081762
alt logger_type == logging::logger_type_t::text
else
loop
C_0009842205026191081762 -> C_0011390433321347495160 [[{}]] : to_string()
activate C_0011390433321347495160
group switch
else miroir::enum ErrorType::NodeNotFound
C_0011390433321347495160 --> C_0009842205026191081762
else miroir::enum ErrorType::InvalidValueType
C_0011390433321347495160 --> C_0009842205026191081762
else miroir::enum ErrorType::InvalidValue
C_0011390433321347495160 --> C_0009842205026191081762
else miroir::enum ErrorType::MissingKeyWithType
C_0011390433321347495160 --> C_0009842205026191081762
else miroir::enum ErrorType::UndefinedNode
C_0011390433321347495160 --> C_0009842205026191081762
else default
C_0011390433321347495160 --> C_0009842205026191081762
end
deactivate C_0011390433321347495160
end
end
deactivate C_0009842205026191081762
else std::runtime_error &
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
alt res != cli_flow_t::kContinue
[<-- C_0018339746265838028166
end
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : handle_post_config_options()
activate C_0018339746265838028166
alt dump_config
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : print_config()
activate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt list_diagrams
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : print_diagrams_list()
activate C_0018339746265838028166
alt logger_type == logging::logger_type_t::text
loop config
participant "config::diagram" as C_0003201952778923380387 [[{Common diagram configuration type}]]
C_0018339746265838028166 -> C_0003201952778923380387 [[{}]] : type() const
activate C_0003201952778923380387
deactivate C_0003201952778923380387
participant "src/common/model/enums.h" as C_0013647239231564597787
C_0018339746265838028166 -> C_0013647239231564597787 [[{}]] : to_string()
activate C_0013647239231564597787
deactivate C_0013647239231564597787
end
else
loop config
C_0018339746265838028166 -> C_0003201952778923380387 [[{}]] : type() const
activate C_0003201952778923380387
deactivate C_0003201952778923380387
C_0018339746265838028166 -> C_0013647239231564597787 [[{}]] : to_string()
activate C_0013647239231564597787
deactivate C_0013647239231564597787
end
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt list_templates
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : print_diagram_templates()
activate C_0018339746265838028166
alt !config.diagram_templates
C_0018339746265838028166 --> C_0018339746265838028166
end
alt logger_type == logging::logger_type_t::text
loop config
C_0018339746265838028166 -> C_0013647239231564597787 [[{}]] : to_string()
activate C_0013647239231564597787
deactivate C_0013647239231564597787
end
else
loop config
C_0018339746265838028166 -> C_0013647239231564597787 [[{}]] : to_string()
activate C_0013647239231564597787
deactivate C_0013647239231564597787
end
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt show_template
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : print_diagram_template()
activate C_0018339746265838028166
alt !config.diagram_templates || config.diagram_templates().count(template_name) == 0
C_0018339746265838028166 --> C_0018339746265838028166
end
loop config
alt template_name == name
C_0018339746265838028166 --> C_0018339746265838028166
end
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt config_path != "-" && add_diagram_from_template
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : add_config_diagram_from_template()
activate C_0018339746265838028166
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : render_diagram_template()
activate C_0018339746265838028166
alt !config.diagram_templates || !(config.diagram_templates().find(template_name) != config.diagram_templates().end())
C_0018339746265838028166 --> C_0018339746265838028166
end
loop template_variables
alt var.size() != 2
C_0018339746265838028166 --> C_0018339746265838028166
end
end
group try
else inja::InjaError &
C_0018339746265838028166 --> C_0018339746265838028166
else YAML::Exception &
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
alt res == cli_flow_t::kError
C_0018339746265838028166 --> C_0018339746265838028166
end
alt !fs::exists(config_file)
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
alt generate_from_template
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : generate_diagram_from_template()
activate C_0018339746265838028166
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : render_diagram_template()
activate C_0018339746265838028166
hnote over C_0018339746265838028166 : *
C_0018339746265838028166-[hidden]->C_0018339746265838028166
deactivate C_0018339746265838028166
alt res == cli_flow_t::kError
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 -> C_0009842205026191081762 [[{}]] : parse_diagram_config()
activate C_0009842205026191081762
deactivate C_0009842205026191081762
alt diagram_config
else
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
end
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string &>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : logger_type()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string &>()
activate C_0013395619657798558104
alt type == logger_type_t::text
else
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json<std::string &>()
activate C_0013395619657798558104
C_0013395619657798558104 -> C_0013395619657798558104 [[{}]] : escape_json_string()
activate C_0013395619657798558104
deactivate C_0013395619657798558104
C_0013395619657798558104 --> C_0013395619657798558104
deactivate C_0013395619657798558104
end
deactivate C_0013395619657798558104
deactivate C_0013395619657798558104
alt auto r = add_custom_user_data(); r != cli_flow_t::kContinue
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : **[**add_custom_user_data()**]**
activate C_0018339746265838028166
loop user_data
loop path
alt !user_data_it->is_object() && !user_data_it->empty()
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
C_0018339746265838028166 --> C_0018339746265838028166
end
end
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : log_impl<const char *,int,std::string &>()
activate C_0013395619657798558104
hnote over C_0013395619657798558104 : *
C_0013395619657798558104-[hidden]->C_0013395619657798558104
deactivate C_0013395619657798558104
alt !ensure_output_directory_exists(effective_output_directory)
C_0018339746265838028166 -> C_0018339746265838028166 [[{}]] : **[**ensure_output_directory_exists()**]**
activate C_0018339746265838028166
alt fs::exists(output_dir) && !fs::is_directory(output_dir)
C_0018339746265838028166 --> C_0018339746265838028166
end
alt !fs::exists(output_dir)
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
C_0018339746265838028166 --> C_0018339746265838028166
end
C_0018339746265838028166 --> C_0018339746265838028166
deactivate C_0018339746265838028166
alt progress && (logging::logger_type() == logging::logger_type_t::text)
C_0018339746265838028166 -> C_0013395619657798558104 [[{}]] : **[**logger_type()**]**
activate C_0013395619657798558104
deactivate C_0013395619657798558104
end
[<-- C_0018339746265838028166
deactivate C_0018339746265838028166

'Generated with clang-uml, version 0.6.1
'LLVM version Ubuntu clang version 19.1.1 (1ubuntu1)
@enduml
