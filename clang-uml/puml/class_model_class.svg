<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2742px" preserveAspectRatio="none" style="width:5977px;height:2742px;" version="1.1" viewBox="0 0 5977 2742" width="5977px" zoomAndPan="magnify"><defs><filter height="300%" id="f13hnggj44fbpl" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="271" x="2843.5" y="16.708">clang-uml class diagram model</text><!--MD5=[09e992b259734a9820adb2642bf347d2]
cluster C_0002240167036201725606--><polygon fill="#FFFFFF" filter="url(#f13hnggj44fbpl)" points="4007,812.9531,4123,812.9531,4130,835.25,5919,835.25,5919,2730.9531,4007,2730.9531,4007,812.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="4007" x2="4130" y1="835.25" y2="835.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="110" x="4011" y="827.9482">class_diagram</text><!--MD5=[5d123d1ba3dda692cf099252127394e7]
cluster C_0000897124234964432620--><polygon fill="#FFFFFF" filter="url(#f13hnggj44fbpl)" points="4031,855.9531,4085,855.9531,4092,878.25,5895,878.25,5895,2706.9531,4031,2706.9531,4031,855.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="4031" x2="4092" y1="878.25" y2="878.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="4035" y="870.9482">model</text><!--MD5=[7ba9c127878a642fef3f451151dda753]
cluster C_0000316605034920222648--><polygon fill="#FFFFFF" filter="url(#f13hnggj44fbpl)" points="22,44.9531,95,44.9531,102,67.25,3983,67.25,3983,2451.9531,22,2451.9531,22,44.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="102" y1="67.25" y2="67.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="67" x="26" y="59.9482">common</text><!--MD5=[f7110622f5be760311cd0491b75bf8f9]
cluster C_0000083721806430512831--><polygon fill="#FFFFFF" filter="url(#f13hnggj44fbpl)" points="46,87.9531,100,87.9531,107,110.25,3959,110.25,3959,2427.9531,46,2427.9531,46,87.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="46" x2="107" y1="110.25" y2="110.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="50" y="102.9482">model</text><!--MD5=[05243bdb66fe376a018509197a0c5417]
class C_0001012510589658886782--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L24" target="_top" title="type_alias" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L24" xlink:show="new" xlink:title="type_alias" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="124.8281" id="C_0001012510589658886782" style="stroke: #A80036; stroke-width: 1.5;" width="229" x="4976.5" y="2101.4531"/><ellipse cx="5055.75" cy="2117.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5058.7188,2123.0938 Q5058.1406,2123.3906 5057.5,2123.5313 Q5056.8594,2123.6875 5056.1563,2123.6875 Q5053.6563,2123.6875 5052.3281,2122.0469 Q5051.0156,2120.3906 5051.0156,2117.2656 Q5051.0156,2114.1406 5052.3281,2112.4844 Q5053.6563,2110.8281 5056.1563,2110.8281 Q5056.8594,2110.8281 5057.5,2110.9844 Q5058.1563,2111.1406 5058.7188,2111.4375 L5058.7188,2114.1563 Q5058.0938,2113.5781 5057.5,2113.3125 Q5056.9063,2113.0313 5056.2813,2113.0313 Q5054.9375,2113.0313 5054.25,2114.1094 Q5053.5625,2115.1719 5053.5625,2117.2656 Q5053.5625,2119.3594 5054.25,2120.4375 Q5054.9375,2121.5 5056.2813,2121.5 Q5056.9063,2121.5 5057.5,2121.2344 Q5058.0938,2120.9531 5058.7188,2120.375 L5058.7188,2123.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="5076.25" y="2121.6074">type_alias</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4977.5" x2="5204.5" y1="2133.4531" y2="2133.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L33" target="_top" title="alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L33" xlink:show="new" xlink:title="alias_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4982.5" y="2139.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4984.5" y="2141.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L33" target="_top" title="alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L33" xlink:show="new" xlink:title="alias_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4996.5" y="2147.6636">alias_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L34" target="_top" title="underlying_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L34" xlink:show="new" xlink:title="underlying_type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4982.5" y="2152.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4984.5" y="2154.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L34" target="_top" title="underlying_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L34" xlink:show="new" xlink:title="underlying_type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4996.5" y="2160.4683">underlying_type_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4977.5" x2="5204.5" y1="2167.0625" y2="2167.0625"/><ellipse cx="4987.5" cy="2178.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4996.5" y="2181.2729">set_alias() : void</text><ellipse cx="4987.5" cy="2190.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4996.5" y="2194.0776">alias() const : std::string</text><ellipse cx="4987.5" cy="2203.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4996.5" y="2206.8823">set_underlying_type() : void</text><ellipse cx="4987.5" cy="2216.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="4996.5" y="2219.687">underlying_type() const : std::string</text><!--MD5=[b486570858fa145169115e7c774ba114]
class C_0000605866861866358037--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L29" target="_top" title="class_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L29" xlink:show="new" xlink:title="class_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="137.6328" id="C_0000605866861866358037" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="4993.5" y="1515.4531"/><ellipse cx="5080.25" cy="1531.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5083.2188,1537.0938 Q5082.6406,1537.3906 5082,1537.5313 Q5081.3594,1537.6875 5080.6563,1537.6875 Q5078.1563,1537.6875 5076.8281,1536.0469 Q5075.5156,1534.3906 5075.5156,1531.2656 Q5075.5156,1528.1406 5076.8281,1526.4844 Q5078.1563,1524.8281 5080.6563,1524.8281 Q5081.3594,1524.8281 5082,1524.9844 Q5082.6563,1525.1406 5083.2188,1525.4375 L5083.2188,1528.1563 Q5082.5938,1527.5781 5082,1527.3125 Q5081.4063,1527.0313 5080.7813,1527.0313 Q5079.4375,1527.0313 5078.75,1528.1094 Q5078.0625,1529.1719 5078.0625,1531.2656 Q5078.0625,1533.3594 5078.75,1534.4375 Q5079.4375,1535.5 5080.7813,1535.5 Q5081.4063,1535.5 5082,1535.2344 Q5082.5938,1534.9531 5083.2188,1534.375 L5083.2188,1537.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="5100.75" y="1535.6074">class_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4994.5" x2="5263.5" y1="1547.4531" y2="1547.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L43" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L43" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4999.5" y="1553.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5001.5" y="1555.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L43" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L43" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5013.5" y="1561.6636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L44" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L44" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4999.5" y="1566.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5001.5" y="1568.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L44" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L44" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5013.5" y="1574.4683">type_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4994.5" x2="5263.5" y1="1581.0625" y2="1581.0625"/><ellipse cx="5004.5" cy="1592.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5013.5" y="1595.2729">class_element() : void</text><ellipse cx="5004.5" cy="1604.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="5013.5" y="1608.0776">access() const : common::model::access_t</text><ellipse cx="5004.5" cy="1617.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5013.5" y="1620.8823">name() const : std::string</text><ellipse cx="5004.5" cy="1630.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5013.5" y="1633.687">type() const : std::string</text><ellipse cx="5004.5" cy="1643.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5013.5" y="1646.4917">context() const : inja::json</text><!--MD5=[a2b7048e31aebc0ffeb4eb6e2a1be8d2]
class C_0001796282762108527255--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L26" target="_top" title="class_member" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L26" xlink:show="new" xlink:title="class_member" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="150.4375" id="C_0001796282762108527255" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="5661" y="2088.9531"/><ellipse cx="5721.25" cy="2104.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5724.2188,2110.5938 Q5723.6406,2110.8906 5723,2111.0313 Q5722.3594,2111.1875 5721.6563,2111.1875 Q5719.1563,2111.1875 5717.8281,2109.5469 Q5716.5156,2107.8906 5716.5156,2104.7656 Q5716.5156,2101.6406 5717.8281,2099.9844 Q5719.1563,2098.3281 5721.6563,2098.3281 Q5722.3594,2098.3281 5723,2098.4844 Q5723.6563,2098.6406 5724.2188,2098.9375 L5724.2188,2101.6563 Q5723.5938,2101.0781 5723,2100.8125 Q5722.4063,2100.5313 5721.7813,2100.5313 Q5720.4375,2100.5313 5719.75,2101.6094 Q5719.0625,2102.6719 5719.0625,2104.7656 Q5719.0625,2106.8594 5719.75,2107.9375 Q5720.4375,2109 5721.7813,2109 Q5722.4063,2109 5723,2108.7344 Q5723.5938,2108.4531 5724.2188,2107.875 L5724.2188,2110.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="5741.75" y="2109.1074">class_member</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5662" x2="5878" y1="2120.9531" y2="2120.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L40" target="_top" title="is_relationship_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L40" xlink:show="new" xlink:title="is_relationship_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5667" y="2126.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5669" y="2128.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L40" target="_top" title="is_relationship_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L40" xlink:show="new" xlink:title="is_relationship_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5681" y="2135.1636">is_relationship_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L41" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L41" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5667" y="2139.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5669" y="2141.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L41" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L41" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5681" y="2147.9683">is_static_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5662" x2="5878" y1="2154.5625" y2="2154.5625"/><ellipse cx="5672" cy="2165.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5681" y="2168.7729">class_member() : void</text><ellipse cx="5672" cy="2178.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="5681" y="2181.5776">~class_member() = default : void</text><ellipse cx="5672" cy="2191.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5681" y="2194.3823">is_relationship() const : bool</text><ellipse cx="5672" cy="2203.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5681" y="2207.187">is_relationship() : void</text><ellipse cx="5672" cy="2216.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5681" y="2219.9917">is_static() const : bool</text><ellipse cx="5672" cy="2229.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5681" y="2232.7964">is_static() : void</text><!--MD5=[2cbb7b367723412a2ebe12c6bb31bbae]
class C_0001639764337680852102--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L34" target="_top" title="@brief Represents template parameter or template argument This class can represent both template parameter and template arguments, including variadic parameters and instantiations with nested templates" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L34" xlink:show="new" xlink:title="@brief Represents template parameter or template argument This class can represent both template parameter and template arguments, including variadic parameters and instantiations with nested templates" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="470.5547" id="C_0001639764337680852102" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="4353.5" y="1928.4531"/><ellipse cx="4497.75" cy="1944.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4500.7188,1950.0938 Q4500.1406,1950.3906 4499.5,1950.5313 Q4498.8594,1950.6875 4498.1563,1950.6875 Q4495.6563,1950.6875 4494.3281,1949.0469 Q4493.0156,1947.3906 4493.0156,1944.2656 Q4493.0156,1941.1406 4494.3281,1939.4844 Q4495.6563,1937.8281 4498.1563,1937.8281 Q4498.8594,1937.8281 4499.5,1937.9844 Q4500.1563,1938.1406 4500.7188,1938.4375 L4500.7188,1941.1563 Q4500.0938,1940.5781 4499.5,1940.3125 Q4498.9063,1940.0313 4498.2813,1940.0313 Q4496.9375,1940.0313 4496.25,1941.1094 Q4495.5625,1942.1719 4495.5625,1944.2656 Q4495.5625,1946.3594 4496.25,1947.4375 Q4496.9375,1948.5 4498.2813,1948.5 Q4498.9063,1948.5 4499.5,1948.2344 Q4500.0938,1947.9531 4500.7188,1947.375 L4500.7188,1950.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="4518.25" y="1948.6074">template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4354.5" x2="4777.5" y1="1960.4531" y2="1960.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L105" target="_top" title="Represents the type of non-type template parameters e.g. 'int'" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L105" xlink:show="new" xlink:title="Represents the type of non-type template parameters e.g. 'int'" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="1966.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="1968.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L105" target="_top" title="Represents the type of non-type template parameters e.g. 'int'" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L105" xlink:show="new" xlink:title="Represents the type of non-type template parameters e.g. 'int'" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4373.5" y="1974.6636">type_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L111" target="_top" title="Default value of the template parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L111" xlink:show="new" xlink:title="Default value of the template parameter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="1979.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="1981.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L111" target="_top" title="Default value of the template parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L111" xlink:show="new" xlink:title="Default value of the template parameter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4373.5" y="1987.4683">default_value_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L115" target="_top" title="Whether the template parameter is a regular template parameter When false, it is a non-type template parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L115" xlink:show="new" xlink:title="Whether the template parameter is a regular template parameter When false, it is a non-type template parameter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="1992.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="1994.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L115" target="_top" title="Whether the template parameter is a regular template parameter When false, it is a non-type template parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L115" xlink:show="new" xlink:title="Whether the template parameter is a regular template parameter When false, it is a non-type template parameter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4373.5" y="2000.2729">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L119" target="_top" title="Whether the template parameter is a template template parameter Can only be true when is_template_parameter_ is true" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L119" xlink:show="new" xlink:title="Whether the template parameter is a template template parameter Can only be true when is_template_parameter_ is true" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="2004.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="2006.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L119" target="_top" title="Whether the template parameter is a template template parameter Can only be true when is_template_parameter_ is true" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L119" xlink:show="new" xlink:title="Whether the template parameter is a template template parameter Can only be true when is_template_parameter_ is true" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="4373.5" y="2013.0776">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L122" target="_top" title="Whether the template parameter is variadic" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L122" xlink:show="new" xlink:title="Whether the template parameter is variadic" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="2017.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="2019.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L122" target="_top" title="Whether the template parameter is variadic" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L122" xlink:show="new" xlink:title="Whether the template parameter is variadic" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4373.5" y="2025.8823">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L125" target="_top" title="Whether the argument specializes argument pack from parent template" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L125" xlink:show="new" xlink:title="Whether the argument specializes argument pack from parent template" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="2030.4766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="2032.4766"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L125" target="_top" title="Whether the argument specializes argument pack from parent template" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L125" xlink:show="new" xlink:title="Whether the argument specializes argument pack from parent template" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4373.5" y="2038.687">is_pack_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L130" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L130" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="2043.2813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="2045.2813"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L130" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L130" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4373.5" y="2051.4917">id_ : std::optional&lt;int64_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4354.5" x2="4777.5" y1="2058.0859" y2="2058.0859"/><ellipse cx="4364.5" cy="2069.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4373.5" y="2072.2964">template_parameter() : void</text><ellipse cx="4364.5" cy="2081.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4373.5" y="2085.1011">template_parameter() = default : void</text><ellipse cx="4364.5" cy="2094.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="4373.5" y="2097.9058">set_type() : void</text><ellipse cx="4364.5" cy="2107.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4373.5" y="2110.7104">type() const : std::string</text><ellipse cx="4364.5" cy="2120.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4373.5" y="2123.5151">set_id() : void</text><ellipse cx="4364.5" cy="2133.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="4373.5" y="2136.3198">id() const : std::optional&lt;int64_t&gt;</text><ellipse cx="4364.5" cy="2145.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4373.5" y="2149.1245">set_name() : void</text><ellipse cx="4364.5" cy="2158.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4373.5" y="2161.9292">name() const : std::string</text><ellipse cx="4364.5" cy="2171.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4373.5" y="2174.7339">set_default_value() : void</text><ellipse cx="4364.5" cy="2184.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="4373.5" y="2187.5386">default_value() const : std::string</text><ellipse cx="4364.5" cy="2197.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="4373.5" y="2200.3433">is_variadic() : void</text><ellipse cx="4364.5" cy="2209.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="4373.5" y="2213.1479">is_variadic() const : bool</text><ellipse cx="4364.5" cy="2222.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4373.5" y="2225.9526">is_pack() : void</text><ellipse cx="4364.5" cy="2235.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4373.5" y="2238.7573">is_pack() const : bool</text><ellipse cx="4364.5" cy="2248.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4373.5" y="2251.562">is_specialization_of() const : bool</text><ellipse cx="4364.5" cy="2261.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="4373.5" y="2264.3667">is_template_parameter() const : bool</text><ellipse cx="4364.5" cy="2273.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4373.5" y="2277.1714">is_template_parameter() : void</text><ellipse cx="4364.5" cy="2286.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="4373.5" y="2289.9761">is_template_template_parameter() const : bool</text><ellipse cx="4364.5" cy="2299.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4373.5" y="2302.7808">is_template_template_parameter() : void</text><ellipse cx="4364.5" cy="2312.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4373.5" y="2315.5854">to_string() const : std::string</text><ellipse cx="4364.5" cy="2325.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4373.5" y="2328.3901">add_template_param() : void</text><ellipse cx="4364.5" cy="2337.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4373.5" y="2341.1948">add_template_param() : void</text><ellipse cx="4364.5" cy="2350.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="4373.5" y="2353.9995">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="4364.5" cy="2363.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4373.5" y="2366.8042">clear_params() : void</text><ellipse cx="4364.5" cy="2376.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4373.5" y="2379.6089">find_nested_relationships() const : bool</text><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L108" target="_top" title="The name of the parameter (e.g. 'T' or 'N')" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L108" xlink:show="new" xlink:title="The name of the parameter (e.g. 'T' or 'N')" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4359.5" y="2384.2031"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4361.5" y="2386.2031"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L108" target="_top" title="The name of the parameter (e.g. 'T' or 'N')" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L108" xlink:show="new" xlink:title="The name of the parameter (e.g. 'T' or 'N')" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4373.5" y="2392.4136">name_ : std::string</text></a><!--MD5=[5992c67bed5fafc2309ff7d957956f6e]
class C_0000605669033368926050--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L28" target="_top" title="method_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L28" xlink:show="new" xlink:title="method_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="176.0469" id="C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.5;" width="215" x="5578.5" y="2514.9531"/><ellipse cx="5621.85" cy="2530.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5624.8188,2536.5938 Q5624.2406,2536.8906 5623.6,2537.0313 Q5622.9594,2537.1875 5622.2563,2537.1875 Q5619.7563,2537.1875 5618.4281,2535.5469 Q5617.1156,2533.8906 5617.1156,2530.7656 Q5617.1156,2527.6406 5618.4281,2525.9844 Q5619.7563,2524.3281 5622.2563,2524.3281 Q5622.9594,2524.3281 5623.6,2524.4844 Q5624.2563,2524.6406 5624.8188,2524.9375 L5624.8188,2527.6563 Q5624.1938,2527.0781 5623.6,2526.8125 Q5623.0063,2526.5313 5622.3813,2526.5313 Q5621.0375,2526.5313 5620.35,2527.6094 Q5619.6625,2528.6719 5619.6625,2530.7656 Q5619.6625,2532.8594 5620.35,2533.9375 Q5621.0375,2535 5622.3813,2535 Q5623.0063,2535 5623.6,2534.7344 Q5624.1938,2534.4531 5624.8188,2533.875 L5624.8188,2536.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="5642.15" y="2535.1074">method_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5579.5" x2="5792.5" y1="2546.9531" y2="2546.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L43" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L43" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5584.5" y="2552.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5586.5" y="2554.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L43" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L43" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5598.5" y="2561.1636">type_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L44" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L44" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5584.5" y="2565.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5586.5" y="2567.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L44" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L44" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5598.5" y="2573.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L45" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L45" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5584.5" y="2578.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5586.5" y="2580.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L45" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L45" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5598.5" y="2586.7729">default_value_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5579.5" x2="5792.5" y1="2593.3672" y2="2593.3672"/><ellipse cx="5589.5" cy="2604.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5598.5" y="2607.5776">set_type() : void</text><ellipse cx="5589.5" cy="2617.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5598.5" y="2620.3823">type() const : std::string</text><ellipse cx="5589.5" cy="2629.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5598.5" y="2633.187">set_name() : void</text><ellipse cx="5589.5" cy="2642.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5598.5" y="2645.9917">name() const : std::string</text><ellipse cx="5589.5" cy="2655.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5598.5" y="2658.7964">set_default_value() : void</text><ellipse cx="5589.5" cy="2668.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="5598.5" y="2671.6011">default_value() const : std::string</text><ellipse cx="5589.5" cy="2681.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="5598.5" y="2684.4058">to_string() const : std::string</text><!--MD5=[3fbd1476055f798f732379619b702fab]
class C_0000204145716468348671--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L28" target="_top" title="class_method" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L28" xlink:show="new" xlink:title="class_method" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="291.2891" id="C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.5;" width="385" x="5240.5" y="2018.4531"/><ellipse cx="5385.75" cy="2034.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5388.7188,2040.0938 Q5388.1406,2040.3906 5387.5,2040.5313 Q5386.8594,2040.6875 5386.1563,2040.6875 Q5383.6563,2040.6875 5382.3281,2039.0469 Q5381.0156,2037.3906 5381.0156,2034.2656 Q5381.0156,2031.1406 5382.3281,2029.4844 Q5383.6563,2027.8281 5386.1563,2027.8281 Q5386.8594,2027.8281 5387.5,2027.9844 Q5388.1563,2028.1406 5388.7188,2028.4375 L5388.7188,2031.1563 Q5388.0938,2030.5781 5387.5,2030.3125 Q5386.9063,2030.0313 5386.2813,2030.0313 Q5384.9375,2030.0313 5384.25,2031.1094 Q5383.5625,2032.1719 5383.5625,2034.2656 Q5383.5625,2036.3594 5384.25,2037.4375 Q5384.9375,2038.5 5386.2813,2038.5 Q5386.9063,2038.5 5387.5,2038.2344 Q5388.0938,2037.9531 5388.7188,2037.375 L5388.7188,2040.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="5406.25" y="2038.6074">class_method</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5241.5" x2="5624.5" y1="2050.4531" y2="2050.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L55" target="_top" title="is_pure_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L55" xlink:show="new" xlink:title="is_pure_virtual_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5246.5" y="2056.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5248.5" y="2058.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L55" target="_top" title="is_pure_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L55" xlink:show="new" xlink:title="is_pure_virtual_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5260.5" y="2064.6636">is_pure_virtual_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L56" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L56" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5246.5" y="2069.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5248.5" y="2071.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L56" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L56" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5260.5" y="2077.4683">is_virtual_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L57" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L57" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5246.5" y="2082.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5248.5" y="2084.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L57" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L57" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5260.5" y="2090.2729">is_const_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L58" target="_top" title="is_defaulted_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L58" xlink:show="new" xlink:title="is_defaulted_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5246.5" y="2094.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5248.5" y="2096.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L58" target="_top" title="is_defaulted_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L58" xlink:show="new" xlink:title="is_defaulted_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="5260.5" y="2103.0776">is_defaulted_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L59" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L59" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5246.5" y="2107.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5248.5" y="2109.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L59" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L59" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5260.5" y="2115.8823">is_static_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5241.5" x2="5624.5" y1="2122.4766" y2="2122.4766"/><ellipse cx="5251.5" cy="2133.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="5260.5" y="2136.687">class_method() : void</text><ellipse cx="5251.5" cy="2146.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="5260.5" y="2149.4917">~class_method() = default : void</text><ellipse cx="5251.5" cy="2159.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5260.5" y="2162.2964">is_pure_virtual() const : bool</text><ellipse cx="5251.5" cy="2171.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5260.5" y="2175.1011">is_pure_virtual() : void</text><ellipse cx="5251.5" cy="2184.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5260.5" y="2187.9058">is_virtual() const : bool</text><ellipse cx="5251.5" cy="2197.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5260.5" y="2200.7104">is_virtual() : void</text><ellipse cx="5251.5" cy="2210.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5260.5" y="2213.5151">is_const() const : bool</text><ellipse cx="5251.5" cy="2223.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5260.5" y="2226.3198">is_const() : void</text><ellipse cx="5251.5" cy="2235.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5260.5" y="2239.1245">is_defaulted() const : bool</text><ellipse cx="5251.5" cy="2248.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5260.5" y="2251.9292">is_defaulted() : void</text><ellipse cx="5251.5" cy="2261.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5260.5" y="2264.7339">is_static() const : bool</text><ellipse cx="5251.5" cy="2274.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5260.5" y="2277.5386">is_static() : void</text><ellipse cx="5251.5" cy="2287.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="5260.5" y="2290.3433">parameters() const : const std::vector&lt;method_parameter&gt; &amp;</text><ellipse cx="5251.5" cy="2299.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5260.5" y="2303.1479">add_parameter() : void</text><!--MD5=[2868650fca262846bc3d725c06fe497c]
class C_0002097158357956220758--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L27" target="_top" title="class_parent" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L27" xlink:show="new" xlink:title="class_parent" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="201.6563" id="C_0002097158357956220758" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="4047.5" y="2062.9531"/><ellipse cx="4138.75" cy="2078.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4141.7188,2084.5938 Q4141.1406,2084.8906 4140.5,2085.0313 Q4139.8594,2085.1875 4139.1563,2085.1875 Q4136.6563,2085.1875 4135.3281,2083.5469 Q4134.0156,2081.8906 4134.0156,2078.7656 Q4134.0156,2075.6406 4135.3281,2073.9844 Q4136.6563,2072.3281 4139.1563,2072.3281 Q4139.8594,2072.3281 4140.5,2072.4844 Q4141.1563,2072.6406 4141.7188,2072.9375 L4141.7188,2075.6563 Q4141.0938,2075.0781 4140.5,2074.8125 Q4139.9063,2074.5313 4139.2813,2074.5313 Q4137.9375,2074.5313 4137.25,2075.6094 Q4136.5625,2076.6719 4136.5625,2078.7656 Q4136.5625,2080.8594 4137.25,2081.9375 Q4137.9375,2083 4139.2813,2083 Q4139.9063,2083 4140.5,2082.7344 Q4141.0938,2082.4531 4141.7188,2081.875 L4141.7188,2084.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="4159.25" y="2083.1074">class_parent</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4048.5" x2="4317.5" y1="2094.9531" y2="2094.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L44" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L44" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053.5" y="2100.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055.5" y="2102.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L44" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L44" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4067.5" y="2109.1636">id_ : common::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L45" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L45" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053.5" y="2113.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055.5" y="2115.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L45" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L45" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4067.5" y="2121.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L46" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L46" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053.5" y="2126.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055.5" y="2128.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L46" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L46" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4067.5" y="2134.7729">is_virtual_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4048.5" x2="4317.5" y1="2141.3672" y2="2141.3672"/><ellipse cx="4058.5" cy="2152.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4067.5" y="2155.5776">set_name() : void</text><ellipse cx="4058.5" cy="2165.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4067.5" y="2168.3823">name() const : std::string</text><ellipse cx="4058.5" cy="2177.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4067.5" y="2181.187">id() const : common::id_t</text><ellipse cx="4058.5" cy="2190.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4067.5" y="2193.9917">set_id() : void</text><ellipse cx="4058.5" cy="2203.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4067.5" y="2206.7964">set_id() : void</text><ellipse cx="4058.5" cy="2216.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4067.5" y="2219.6011">is_virtual() : void</text><ellipse cx="4058.5" cy="2229.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="4067.5" y="2232.4058">is_virtual() const : bool</text><ellipse cx="4058.5" cy="2242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4067.5" y="2245.2104">set_access() : void</text><ellipse cx="4058.5" cy="2254.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="4067.5" y="2258.0151">access() const : common::model::access_t</text><!--MD5=[ae47341ca1a22ddcd7d0b4ea2daf1996]
class C_0001292034357466653182--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L35" target="_top" title="class_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L35" xlink:show="new" xlink:title="class_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="508.9688" id="C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="4047" y="1329.9531"/><ellipse cx="4214.75" cy="1345.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4217.7188,1351.5938 Q4217.1406,1351.8906 4216.5,1352.0313 Q4215.8594,1352.1875 4215.1563,1352.1875 Q4212.6563,1352.1875 4211.3281,1350.5469 Q4210.0156,1348.8906 4210.0156,1345.7656 Q4210.0156,1342.6406 4211.3281,1340.9844 Q4212.6563,1339.3281 4215.1563,1339.3281 Q4215.8594,1339.3281 4216.5,1339.4844 Q4217.1563,1339.6406 4217.7188,1339.9375 L4217.7188,1342.6563 Q4217.0938,1342.0781 4216.5,1341.8125 Q4215.9063,1341.5313 4215.2813,1341.5313 Q4213.9375,1341.5313 4213.25,1342.6094 Q4212.5625,1343.6719 4212.5625,1345.7656 Q4212.5625,1347.8594 4213.25,1348.9375 Q4213.9375,1350 4215.2813,1350 Q4215.9063,1350 4216.5,1349.7344 Q4217.0938,1349.4531 4217.7188,1348.875 L4217.7188,1351.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="4235.25" y="1350.1074">class_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4048" x2="4428" y1="1361.9531" y2="1361.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L92" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L92" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053" y="1367.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1369.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L92" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L92" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="4067" y="1376.1636">is_struct_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L93" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L93" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053" y="1380.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1382.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L93" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L93" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4067" y="1388.9683">is_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L94" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L94" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053" y="1393.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1395.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L94" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L94" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4067" y="1401.7729">is_template_instantiation_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L95" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L95" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053" y="1406.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1408.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L95" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L95" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4067" y="1414.5776">is_alias_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L100" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L100" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053" y="1419.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1421.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L100" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L100" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4067" y="1427.3823">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L103" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L103" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4053" y="1431.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1433.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L103" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L103" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4067" y="1440.187">full_name_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4048" x2="4428" y1="1446.7813" y2="1446.7813"/><ellipse cx="4058" cy="1457.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4067" y="1460.9917">class_() : void</text><ellipse cx="4058" cy="1470.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4067" y="1473.7964">class_() : void</text><ellipse cx="4058" cy="1483.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4067" y="1486.6011">class_() : void</text><ellipse cx="4058" cy="1496.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4067" y="1499.4058">operator=() : class_diagram::model::class_ &amp;</text><ellipse cx="4058" cy="1509" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4067" y="1512.2104">operator=() : class_diagram::model::class_ &amp;</text><ellipse cx="4058" cy="1521.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4067" y="1525.0151">is_struct() const : bool</text><ellipse cx="4058" cy="1534.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="4067" y="1537.8198">is_struct() : void</text><ellipse cx="4058" cy="1547.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4067" y="1550.6245">is_template() const : bool</text><ellipse cx="4058" cy="1560.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4067" y="1563.4292">is_template() : void</text><ellipse cx="4058" cy="1573.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4067" y="1576.2339">is_template_instantiation() const : bool</text><ellipse cx="4058" cy="1585.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4067" y="1589.0386">is_template_instantiation() : void</text><ellipse cx="4058" cy="1598.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4067" y="1601.8433">add_member() : void</text><ellipse cx="4058" cy="1611.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="4067" y="1614.6479">add_method() : void</text><ellipse cx="4058" cy="1624.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4067" y="1627.4526">add_parent() : void</text><ellipse cx="4058" cy="1637.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="4067" y="1640.2573">add_template() : void</text><ellipse cx="4058" cy="1649.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4067" y="1653.062">members() const : const std::vector&lt;class_member&gt; &amp;</text><ellipse cx="4058" cy="1662.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4067" y="1665.8667">methods() const : const std::vector&lt;class_method&gt; &amp;</text><ellipse cx="4058" cy="1675.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="4067" y="1678.6714">parents() const : const std::vector&lt;class_parent&gt; &amp;</text><ellipse cx="4058" cy="1688.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="4067" y="1691.4761">templates() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="4058" cy="1701.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4067" y="1704.2808">set_base_template() : void</text><ellipse cx="4058" cy="1713.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4067" y="1717.0854">base_template() const : std::string</text><ellipse cx="4058" cy="1726.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4067" y="1729.8901">add_type_alias() : void</text><ellipse cx="4058" cy="1739.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4067" y="1742.6948">full_name() const : std::string</text><ellipse cx="4058" cy="1752.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4067" y="1755.4995">full_name_no_ns() const : std::string</text><ellipse cx="4058" cy="1765.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4067" y="1768.3042">is_abstract() const : bool</text><ellipse cx="4058" cy="1777.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4067" y="1781.1089">is_alias() const : bool</text><ellipse cx="4058" cy="1790.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4067" y="1793.9136">is_alias() : void</text><ellipse cx="4058" cy="1803.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4067" y="1806.7183">find_relationships() : void</text><ellipse cx="4058" cy="1816.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4067" y="1819.5229">calculate_template_specialization_match() const : int</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4055" y="1826.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="4067" y="1832.3276">render_template_params() const : std::ostringstream &amp;</text><!--MD5=[ad7c1a05bec632e2a3018185b58507d2]
class C_0000724392977093650506--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L27" target="_top" title="enum_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L27" xlink:show="new" xlink:title="enum_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="163.2422" id="C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="4634" y="1502.9531"/><ellipse cx="4771.25" cy="1518.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4774.2188,1524.5938 Q4773.6406,1524.8906 4773,1525.0313 Q4772.3594,1525.1875 4771.6563,1525.1875 Q4769.1563,1525.1875 4767.8281,1523.5469 Q4766.5156,1521.8906 4766.5156,1518.7656 Q4766.5156,1515.6406 4767.8281,1513.9844 Q4769.1563,1512.3281 4771.6563,1512.3281 Q4772.3594,1512.3281 4773,1512.4844 Q4773.6563,1512.6406 4774.2188,1512.9375 L4774.2188,1515.6563 Q4773.5938,1515.0781 4773,1514.8125 Q4772.4063,1514.5313 4771.7813,1514.5313 Q4770.4375,1514.5313 4769.75,1515.6094 Q4769.0625,1516.6719 4769.0625,1518.7656 Q4769.0625,1520.8594 4769.75,1521.9375 Q4770.4375,1523 4771.7813,1523 Q4772.4063,1523 4773,1522.7344 Q4773.5938,1522.4531 4774.2188,1521.875 L4774.2188,1524.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="4791.75" y="1523.1074">enum_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4635" x2="4957" y1="1534.9531" y2="1534.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L47" target="_top" title="constants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L47" xlink:show="new" xlink:title="constants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4640" y="1540.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4642" y="1542.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L47" target="_top" title="constants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L47" xlink:show="new" xlink:title="constants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="4654" y="1549.1636">constants_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4635" x2="4957" y1="1555.7578" y2="1555.7578"/><ellipse cx="4645" cy="1566.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4654" y="1569.9683">enum_() : void</text><ellipse cx="4645" cy="1579.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4654" y="1582.7729">enum_() : void</text><ellipse cx="4645" cy="1592.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4654" y="1595.5776">enum_() : void</text><ellipse cx="4645" cy="1605.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4654" y="1608.3823">operator=() : class_diagram::model::enum_ &amp;</text><ellipse cx="4645" cy="1617.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4654" y="1621.187">operator=() : class_diagram::model::enum_ &amp;</text><ellipse cx="4645" cy="1630.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4654" y="1633.9917">full_name() const : std::string</text><ellipse cx="4645" cy="1643.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="4654" y="1646.7964">constants() : std::vector&lt;std::string&gt; &amp;</text><ellipse cx="4645" cy="1656.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4654" y="1659.6011">constants() const : const std::vector&lt;std::string&gt; &amp;</text><!--MD5=[01d3c478a0ba4034ff864e8146f50cf4]
class C_0000914432076690777687--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="342.5078" id="C_0000914432076690777687" style="stroke: #A80036; stroke-width: 1.5;" width="440" x="4254" y="909.9531"/><ellipse cx="4444.25" cy="925.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4447.2188,931.5938 Q4446.6406,931.8906 4446,932.0313 Q4445.3594,932.1875 4444.6563,932.1875 Q4442.1563,932.1875 4440.8281,930.5469 Q4439.5156,928.8906 4439.5156,925.7656 Q4439.5156,922.6406 4440.8281,920.9844 Q4442.1563,919.3281 4444.6563,919.3281 Q4445.3594,919.3281 4446,919.4844 Q4446.6563,919.6406 4447.2188,919.9375 L4447.2188,922.6563 Q4446.5938,922.0781 4446,921.8125 Q4445.4063,921.5313 4444.7813,921.5313 Q4443.4375,921.5313 4442.75,922.6094 Q4442.0625,923.6719 4442.0625,925.7656 Q4442.0625,927.8594 4442.75,928.9375 Q4443.4375,930 4444.7813,930 Q4445.4063,930 4446,929.7344 Q4446.5938,929.4531 4447.2188,928.875 L4447.2188,931.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="4464.75" y="930.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4255" x2="4693" y1="941.9531" y2="941.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4255" x2="4693" y1="949.9531" y2="949.9531"/><ellipse cx="4265" cy="960.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4274" y="964.1636">diagram() = default : void</text><ellipse cx="4265" cy="973.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4274" y="976.9683">diagram() : void</text><ellipse cx="4265" cy="986.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4274" y="989.7729">diagram() = default : void</text><ellipse cx="4265" cy="999.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4274" y="1002.5776">operator=() : class_diagram::model::diagram &amp;</text><ellipse cx="4265" cy="1012.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="4274" y="1015.3823">operator=() = default : class_diagram::model::diagram &amp;</text><ellipse cx="4265" cy="1024.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4274" y="1028.187">type() const : common::model::diagram_t</text><ellipse cx="4265" cy="1037.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="4274" y="1040.9917">get() const : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="4265" cy="1050.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="4274" y="1053.7964">get() const : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="4265" cy="1063.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4274" y="1066.6011">classes() const : const common::reference_vector&lt;class_&gt; &amp;</text><ellipse cx="4265" cy="1076.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="4274" y="1079.4058">enums() const : const common::reference_vector&lt;enum_&gt; &amp;</text><ellipse cx="4265" cy="1089" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4274" y="1092.2104">has_class() const : bool</text><ellipse cx="4265" cy="1101.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="4274" y="1105.0151">has_enum() const : bool</text><ellipse cx="4265" cy="1114.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="4274" y="1117.8198">get_class() const : common::optional_ref&lt;class_&gt;</text><ellipse cx="4265" cy="1127.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="4274" y="1130.6245">get_class() const : common::optional_ref&lt;class_&gt;</text><ellipse cx="4265" cy="1140.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="4274" y="1143.4292">get_enum() const : common::optional_ref&lt;enum_&gt;</text><ellipse cx="4265" cy="1153.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="4274" y="1156.2339">get_enum() const : common::optional_ref&lt;enum_&gt;</text><ellipse cx="4265" cy="1165.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4274" y="1169.0386">add_type_alias() : void</text><ellipse cx="4265" cy="1178.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4274" y="1181.8433">add_class() : bool</text><ellipse cx="4265" cy="1191.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="4274" y="1194.6479">add_enum() : bool</text><ellipse cx="4265" cy="1204.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4274" y="1207.4526">add_package() : bool</text><ellipse cx="4265" cy="1217.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4274" y="1220.2573">to_alias() const : std::string</text><ellipse cx="4265" cy="1229.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4274" y="1233.062">get_parents() const : void</text><ellipse cx="4265" cy="1242.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4274" y="1245.8667">has_element() const : bool</text></a><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="560" y="180.4531"/><ellipse cx="575" cy="196.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M579.1094,202.4531 L571.3906,202.4531 L571.3906,190.0625 L579.1094,190.0625 L579.1094,192.2188 L573.8438,192.2188 L573.8438,194.8906 L578.6094,194.8906 L578.6094,197.0469 L573.8438,197.0469 L573.8438,200.2969 L579.1094,200.2969 L579.1094,202.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="589" y="200.6074">diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="561" x2="653" y1="212.4531" y2="212.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="566" y="226.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="566" y="239.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="566" y="252.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="566" y="265.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="561" x2="653" y1="271.6719" y2="271.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="86.4141" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="87" x="2679.5" y="1541.4531"/><ellipse cx="2694.5" cy="1557.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2698.6094,1563.4531 L2690.8906,1563.4531 L2690.8906,1551.0625 L2698.6094,1551.0625 L2698.6094,1553.2188 L2693.3438,1553.2188 L2693.3438,1555.8906 L2698.1094,1555.8906 L2698.1094,1558.0469 L2693.3438,1558.0469 L2693.3438,1561.2969 L2698.6094,1561.2969 L2698.6094,1563.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="2708.5" y="1561.6074">access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2680.5" x2="2765.5" y1="1573.4531" y2="1573.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2685.5" y="1587.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2685.5" y="1600.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2685.5" y="1613.2729">kPrivate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2680.5" x2="2765.5" y1="1619.8672" y2="1619.8672"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="188.8516" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="512.5" y="1489.9531"/><ellipse cx="527.5" cy="1505.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M531.6094,1511.9531 L523.8906,1511.9531 L523.8906,1499.5625 L531.6094,1499.5625 L531.6094,1501.7188 L526.3438,1501.7188 L526.3438,1504.3906 L531.1094,1504.3906 L531.1094,1506.5469 L526.3438,1506.5469 L526.3438,1509.7969 L531.6094,1509.7969 L531.6094,1511.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="541.5" y="1510.1074">relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="513.5" x2="628.5" y1="1521.9531" y2="1521.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="518.5" y="1536.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="518.5" y="1548.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="518.5" y="1561.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="518.5" y="1574.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="518.5" y="1587.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="518.5" y="1600.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="518.5" y="1612.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="518.5" y="1625.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="518.5" y="1638.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="518.5" y="1651.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="518.5" y="1664.2104">kDependency</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="513.5" x2="628.5" y1="1670.8047" y2="1670.8047"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="73.6094" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="100" x="689" y="192.9531"/><ellipse cx="704" cy="208.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M708.1094,214.9531 L700.3906,214.9531 L700.3906,202.5625 L708.1094,202.5625 L708.1094,204.7188 L702.8438,204.7188 L702.8438,207.3906 L707.6094,207.3906 L707.6094,209.5469 L702.8438,209.5469 L702.8438,212.7969 L708.1094,212.7969 L708.1094,214.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="718" y="213.1074">message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="690" x2="788" y1="224.9531" y2="224.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="695" y="239.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="695" y="251.9683">kReturn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="690" x2="788" y1="258.5625" y2="258.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="176.0469" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="3004" y="141.9531"/><ellipse cx="3189.75" cy="157.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3192.7188,163.5938 Q3192.1406,163.8906 3191.5,164.0313 Q3190.8594,164.1875 3190.1563,164.1875 Q3187.6563,164.1875 3186.3281,162.5469 Q3185.0156,160.8906 3185.0156,157.7656 Q3185.0156,154.6406 3186.3281,152.9844 Q3187.6563,151.3281 3190.1563,151.3281 Q3190.8594,151.3281 3191.5,151.4844 Q3192.1563,151.6406 3192.7188,151.9375 L3192.7188,154.6563 Q3192.0938,154.0781 3191.5,153.8125 Q3190.9063,153.5313 3190.2813,153.5313 Q3188.9375,153.5313 3188.25,154.6094 Q3187.5625,155.6719 3187.5625,157.7656 Q3187.5625,159.8594 3188.25,160.9375 Q3188.9375,162 3190.2813,162 Q3190.9063,162 3191.5,161.7344 Q3192.0938,161.4531 3192.7188,160.875 L3192.7188,163.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="3210.25" y="162.1074">decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3005" x2="3505" y1="173.9531" y2="173.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3010" y="179.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3012" y="181.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3024" y="188.1636">comment_ : std::optional&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3005" x2="3505" y1="194.7578" y2="194.7578"/><ellipse cx="3015" cy="205.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3024" y="208.9683">skip() const : bool</text><ellipse cx="3015" cy="218.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3024" y="221.7729">skip_relationship() const : bool</text><ellipse cx="3015" cy="231.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="3024" y="234.5776">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="3015" cy="244.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3024" y="247.3823">style_spec() const : std::string</text><ellipse cx="3015" cy="256.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="3024" y="260.187">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="3015" cy="269.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3024" y="272.9917">add_decorators() : void</text><ellipse cx="3015" cy="282.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3024" y="285.7964">append() : void</text><ellipse cx="3015" cy="295.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3024" y="298.6011">comment() const : std::optional&lt;std::string&gt;</text><ellipse cx="3015" cy="308.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3024" y="311.4058">set_comment() : void</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="150.4375" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="3028" y="497.4531"/><ellipse cx="3081.25" cy="513.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3084.2188,519.0938 Q3083.6406,519.3906 3083,519.5313 Q3082.3594,519.6875 3081.6563,519.6875 Q3079.1563,519.6875 3077.8281,518.0469 Q3076.5156,516.3906 3076.5156,513.2656 Q3076.5156,510.1406 3077.8281,508.4844 Q3079.1563,506.8281 3081.6563,506.8281 Q3082.3594,506.8281 3083,506.9844 Q3083.6563,507.1406 3084.2188,507.4375 L3084.2188,510.1563 Q3083.5938,509.5781 3083,509.3125 Q3082.4063,509.0313 3081.7813,509.0313 Q3080.4375,509.0313 3079.75,510.1094 Q3079.0625,511.1719 3079.0625,513.2656 Q3079.0625,515.3594 3079.75,516.4375 Q3080.4375,517.5 3081.7813,517.5 Q3082.4063,517.5 3083,517.2344 Q3083.5938,516.9531 3084.2188,516.375 L3084.2188,519.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="3101.75" y="517.6074">source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3029" x2="3241" y1="529.4531" y2="529.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3034" y="535.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3036" y="537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3048" y="543.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3034" y="548.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3036" y="550.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3048" y="556.4683">line_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3029" x2="3241" y1="563.0625" y2="563.0625"/><ellipse cx="3039" cy="574.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="3048" y="577.2729">source_location() = default : void</text><ellipse cx="3039" cy="586.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3048" y="590.0776">source_location() : void</text><ellipse cx="3039" cy="599.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3048" y="602.8823">file() const : const std::string &amp;</text><ellipse cx="3039" cy="612.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3048" y="615.687">set_file() : void</text><ellipse cx="3039" cy="625.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3048" y="628.4917">line() const : unsigned int</text><ellipse cx="3039" cy="638.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="3048" y="641.2964">set_line() : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="2960.5" y="1915.9531"/><ellipse cx="3178.25" cy="1931.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3181.2188,1937.5938 Q3180.6406,1937.8906 3180,1938.0313 Q3179.3594,1938.1875 3178.6563,1938.1875 Q3176.1563,1938.1875 3174.8281,1936.5469 Q3173.5156,1934.8906 3173.5156,1931.7656 Q3173.5156,1928.6406 3174.8281,1926.9844 Q3176.1563,1925.3281 3178.6563,1925.3281 Q3179.3594,1925.3281 3180,1925.4844 Q3180.6563,1925.6406 3181.2188,1925.9375 L3181.2188,1928.6563 Q3180.5938,1928.0781 3180,1927.8125 Q3179.4063,1927.5313 3178.7813,1927.5313 Q3177.4375,1927.5313 3176.75,1928.6094 Q3176.0625,1929.6719 3176.0625,1931.7656 Q3176.0625,1933.8594 3176.75,1934.9375 Q3177.4375,1936 3178.7813,1936 Q3179.4063,1936 3180,1935.7344 Q3180.5938,1935.4531 3181.2188,1934.875 L3181.2188,1937.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="3198.75" y="1936.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="3438.5" y="1912.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="3439.5" y="1925.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2961.5" x2="3460.5" y1="1947.9531" y2="1947.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2966.5" y="1953.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2968.5" y="1955.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="2980.5" y="1962.1636">path_ : common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2961.5" x2="3460.5" y1="1968.7578" y2="1968.7578"/><ellipse cx="2971.5" cy="1979.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2980.5" y="1982.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="2971.5" cy="1992.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2980.5" y="1995.7729">path&lt;Sep&gt;() : void</text><ellipse cx="2971.5" cy="2005.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2980.5" y="2008.5776">path&lt;Sep&gt;() : void</text><ellipse cx="2971.5" cy="2018.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2980.5" y="2021.3823">path&lt;Sep&gt;() : void</text><ellipse cx="2971.5" cy="2030.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2980.5" y="2034.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="2971.5" cy="2043.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2980.5" y="2046.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="2971.5" cy="2056.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2980.5" y="2059.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="2971.5" cy="2069.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2980.5" y="2072.6011">path&lt;Sep&gt;() : void</text><ellipse cx="2971.5" cy="2082.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2980.5" y="2085.4058">path&lt;Sep&gt;() : void</text><ellipse cx="2971.5" cy="2095" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2980.5" y="2098.2104">to_string() const : std::string</text><ellipse cx="2971.5" cy="2107.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2980.5" y="2111.0151">is_empty() const : bool</text><ellipse cx="2971.5" cy="2120.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2980.5" y="2123.8198">size() const : size_t</text><ellipse cx="2971.5" cy="2133.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2980.5" y="2136.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="2971.5" cy="2146.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2980.5" y="2149.4292">operator|=() : void</text><ellipse cx="2971.5" cy="2159.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2980.5" y="2162.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="2971.5" cy="2171.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2980.5" y="2175.0386">operator|=() : void</text><ellipse cx="2971.5" cy="2184.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2980.5" y="2187.8433">operator[]() : std::string &amp;</text><ellipse cx="2971.5" cy="2197.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2980.5" y="2200.6479">operator[]() const : const std::string &amp;</text><ellipse cx="2971.5" cy="2210.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2980.5" y="2213.4526">append() : void</text><ellipse cx="2971.5" cy="2223.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2980.5" y="2226.2573">append() : void</text><ellipse cx="2971.5" cy="2235.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2980.5" y="2239.062">pop_back() : void</text><ellipse cx="2971.5" cy="2248.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="2980.5" y="2251.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="2971.5" cy="2261.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2980.5" y="2264.6714">starts_with() const : bool</text><ellipse cx="2971.5" cy="2274.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2980.5" y="2277.4761">ends_with() const : bool</text><ellipse cx="2971.5" cy="2287.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2980.5" y="2290.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="2971.5" cy="2299.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2980.5" y="2303.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="2971.5" cy="2312.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2980.5" y="2315.8901">relative() const : std::string</text><ellipse cx="2971.5" cy="2325.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2980.5" y="2328.6948">name() const : std::string</text><ellipse cx="2971.5" cy="2338.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="2980.5" y="2341.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="2971.5" cy="2351.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="2980.5" y="2354.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="2971.5" cy="2363.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="2980.5" y="2367.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="2971.5" cy="2376.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="2980.5" y="2379.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="2971.5" cy="2389.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="2980.5" y="2392.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="2971.5" cy="2402.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="2980.5" y="2405.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="824.5" y="199.4531"/><ellipse cx="858.85" cy="215.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M861.8188,221.0938 Q861.2406,221.3906 860.6,221.5313 Q859.9594,221.6875 859.2563,221.6875 Q856.7563,221.6875 855.4281,220.0469 Q854.1156,218.3906 854.1156,215.2656 Q854.1156,212.1406 855.4281,210.4844 Q856.7563,208.8281 859.2563,208.8281 Q859.9594,208.8281 860.6,208.9844 Q861.2563,209.1406 861.8188,209.4375 L861.8188,212.1563 Q861.1938,211.5781 860.6,211.3125 Q860.0063,211.0313 859.3813,211.0313 Q858.0375,211.0313 857.35,212.1094 Q856.6625,213.1719 856.6625,215.2656 Q856.6625,217.3594 857.35,218.4375 Q858.0375,219.5 859.3813,219.5 Q860.0063,219.5 860.6,219.2344 Q861.1938,218.9531 861.8188,218.375 L861.8188,221.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="877.15" y="219.6074">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="825.5" x2="1016.5" y1="231.4531" y2="231.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="830.5" y="237.4531"/><ellipse cx="835.5" cy="242.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="844.5" y="245.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="825.5" x2="1016.5" y1="252.2578" y2="252.2578"/><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="352" x="3290" y="1560.4531"/><ellipse cx="3305" cy="1576.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3307.9688,1582.0938 Q3307.3906,1582.3906 3306.75,1582.5313 Q3306.1094,1582.6875 3305.4063,1582.6875 Q3302.9063,1582.6875 3301.5781,1581.0469 Q3300.2656,1579.3906 3300.2656,1576.2656 Q3300.2656,1573.1406 3301.5781,1571.4844 Q3302.9063,1569.8281 3305.4063,1569.8281 Q3306.1094,1569.8281 3306.75,1569.9844 Q3307.4063,1570.1406 3307.9688,1570.4375 L3307.9688,1573.1563 Q3307.3438,1572.5781 3306.75,1572.3125 Q3306.1563,1572.0313 3305.5313,1572.0313 Q3304.1875,1572.0313 3303.5,1573.1094 Q3302.8125,1574.1719 3302.8125,1576.2656 Q3302.8125,1578.3594 3303.5,1579.4375 Q3304.1875,1580.5 3305.5313,1580.5 Q3306.1563,1580.5 3306.75,1580.2344 Q3307.3438,1579.9531 3307.9688,1579.375 L3307.9688,1582.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="3319" y="1580.6074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="3356" y="1557.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="3357" y="1569.5918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3291" x2="3641" y1="1592.4531" y2="1592.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3291" x2="3641" y1="1600.4531" y2="1600.4531"/><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="167" x="3277.5" y="529.4531"/><ellipse cx="3306" cy="545.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3308.9688,551.0938 Q3308.3906,551.3906 3307.75,551.5313 Q3307.1094,551.6875 3306.4063,551.6875 Q3303.9063,551.6875 3302.5781,550.0469 Q3301.2656,548.3906 3301.2656,545.2656 Q3301.2656,542.1406 3302.5781,540.4844 Q3303.9063,538.8281 3306.4063,538.8281 Q3307.1094,538.8281 3307.75,538.9844 Q3308.4063,539.1406 3308.9688,539.4375 L3308.9688,542.1563 Q3308.3438,541.5781 3307.75,541.3125 Q3307.1563,541.0313 3306.5313,541.0313 Q3305.1875,541.0313 3304.5,542.1094 Q3303.8125,543.1719 3303.8125,545.2656 Q3303.8125,547.3594 3304.5,548.4375 Q3305.1875,549.5 3306.5313,549.5 Q3307.1563,549.5 3307.75,549.2344 Q3308.3438,548.9531 3308.9688,548.375 L3308.9688,551.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="3323" y="549.6074">stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3278.5" x2="3443.5" y1="561.4531" y2="561.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3283.5" y="567.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3285.5" y="569.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3297.5" y="575.6636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3278.5" x2="3443.5" y1="582.2578" y2="582.2578"/><ellipse cx="3288.5" cy="593.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3297.5" y="596.4683">set_style() : void</text><ellipse cx="3288.5" cy="606.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3297.5" y="609.2729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="282" x="2707" y="942.4531"/><ellipse cx="2806.75" cy="958.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2809.7188,964.0938 Q2809.1406,964.3906 2808.5,964.5313 Q2807.8594,964.6875 2807.1563,964.6875 Q2804.6563,964.6875 2803.3281,963.0469 Q2802.0156,961.3906 2802.0156,958.2656 Q2802.0156,955.1406 2803.3281,953.4844 Q2804.6563,951.8281 2807.1563,951.8281 Q2807.8594,951.8281 2808.5,951.9844 Q2809.1563,952.1406 2809.7188,952.4375 L2809.7188,955.1563 Q2809.0938,954.5781 2808.5,954.3125 Q2807.9063,954.0313 2807.2813,954.0313 Q2805.9375,954.0313 2805.25,955.1094 Q2804.5625,956.1719 2804.5625,958.2656 Q2804.5625,960.3594 2805.25,961.4375 Q2805.9375,962.5 2807.2813,962.5 Q2807.9063,962.5 2808.5,962.2344 Q2809.0938,961.9531 2809.7188,961.375 L2809.7188,964.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="2827.25" y="962.6074">relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2708" x2="2988" y1="974.4531" y2="974.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2713" y="980.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2715" y="982.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2727" y="988.6636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2713" y="993.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2715" y="995.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2727" y="1001.4683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2713" y="1006.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2715" y="1008.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2727" y="1014.2729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2713" y="1018.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2715" y="1020.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2727" y="1027.0776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2708" x2="2988" y1="1033.6719" y2="1033.6719"/><ellipse cx="2718" cy="1044.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2727" y="1047.8823">relationship() : void</text><ellipse cx="2718" cy="1057.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2727" y="1060.687">~relationship() = default : void</text><ellipse cx="2718" cy="1070.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2727" y="1073.4917">set_type() : void</text><ellipse cx="2718" cy="1083.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2727" y="1086.2964">type() const : common::model::relationship_t</text><ellipse cx="2718" cy="1095.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2727" y="1099.1011">set_destination() : void</text><ellipse cx="2718" cy="1108.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2727" y="1111.9058">destination() const : common::id_t</text><ellipse cx="2718" cy="1121.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2727" y="1124.7104">set_multiplicity_source() : void</text><ellipse cx="2718" cy="1134.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2727" y="1137.5151">multiplicity_source() const : std::string</text><ellipse cx="2718" cy="1147.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2727" y="1150.3198">set_multiplicity_destination() : void</text><ellipse cx="2718" cy="1159.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2727" y="1163.1245">multiplicity_destination() const : std::string</text><ellipse cx="2718" cy="1172.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2727" y="1175.9292">set_label() : void</text><ellipse cx="2718" cy="1185.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2727" y="1188.7339">label() const : std::string</text><ellipse cx="2718" cy="1198.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2727" y="1201.5386">set_access() : void</text><ellipse cx="2718" cy="1211.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="2727" y="1214.3433">access() const : common::model::access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="2643" y="407.4531"/><ellipse cx="2759.75" cy="423.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2762.7188,429.0938 Q2762.1406,429.3906 2761.5,429.5313 Q2760.8594,429.6875 2760.1563,429.6875 Q2757.6563,429.6875 2756.3281,428.0469 Q2755.0156,426.3906 2755.0156,423.2656 Q2755.0156,420.1406 2756.3281,418.4844 Q2757.6563,416.8281 2760.1563,416.8281 Q2760.8594,416.8281 2761.5,416.9844 Q2762.1563,417.1406 2762.7188,417.4375 L2762.7188,420.1563 Q2762.0938,419.5781 2761.5,419.3125 Q2760.9063,419.0313 2760.2813,419.0313 Q2758.9375,419.0313 2758.25,420.1094 Q2757.5625,421.1719 2757.5625,423.2656 Q2757.5625,425.3594 2758.25,426.4375 Q2758.9375,427.5 2760.2813,427.5 Q2760.9063,427.5 2761.5,427.2344 Q2762.0938,426.9531 2762.7188,426.375 L2762.7188,429.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="2780.25" y="427.6074">diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2644" x2="2992" y1="439.4531" y2="439.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2649" y="445.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2651" y="447.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="2663" y="453.6636">id_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2649" y="458.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2651" y="460.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2663" y="466.4683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2649" y="471.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2651" y="473.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2663" y="479.2729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2649" y="483.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2651" y="485.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2663" y="492.0776">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2649" y="496.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2651" y="498.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="2663" y="504.8823">m_nextId : std::atomic_uint64_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2644" x2="2992" y1="511.4766" y2="511.4766"/><ellipse cx="2654" cy="522.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2663" y="525.687">diagram_element() : void</text><ellipse cx="2654" cy="535.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="2663" y="538.4917">~diagram_element() = default : void</text><ellipse cx="2654" cy="548.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="2663" y="551.2964">id() const : common::model::diagram_element::id_t</text><ellipse cx="2654" cy="560.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2663" y="564.1011">set_id() : void</text><ellipse cx="2654" cy="573.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2663" y="576.9058">alias() const : std::string</text><ellipse cx="2654" cy="586.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2663" y="589.7104">set_name() : void</text><ellipse cx="2654" cy="599.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2663" y="602.5151">name() const : std::string</text><ellipse cx="2654" cy="612.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2663" y="615.3198">full_name() const : std::string</text><ellipse cx="2654" cy="624.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2663" y="628.1245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="2654" cy="637.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="2663" y="640.9292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="2654" cy="650.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2663" y="653.7339">add_relationship() : void</text><ellipse cx="2654" cy="663.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2663" y="666.5386">append() : void</text><ellipse cx="2654" cy="676.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2663" y="679.3433">context() const : inja::json</text><ellipse cx="2654" cy="688.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2663" y="692.1479">is_nested() const : bool</text><ellipse cx="2654" cy="701.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2663" y="704.9526">nested() : void</text><ellipse cx="2654" cy="714.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2663" y="717.7573">complete() const : bool</text><ellipse cx="2654" cy="727.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2663" y="730.562">complete() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="459" y="413.9531"/><ellipse cx="543.25" cy="429.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M546.2188,435.5938 Q545.6406,435.8906 545,436.0313 Q544.3594,436.1875 543.6563,436.1875 Q541.1563,436.1875 539.8281,434.5469 Q538.5156,432.8906 538.5156,429.7656 Q538.5156,426.6406 539.8281,424.9844 Q541.1563,423.3281 543.6563,423.3281 Q544.3594,423.3281 545,423.4844 Q545.6563,423.6406 546.2188,423.9375 L546.2188,426.6563 Q545.5938,426.0781 545,425.8125 Q544.4063,425.5313 543.7813,425.5313 Q542.4375,425.5313 541.75,426.6094 Q541.0625,427.6719 541.0625,429.7656 Q541.0625,431.8594 541.75,432.9375 Q542.4375,434 543.7813,434 Q544.4063,434 545,433.7344 Q545.5938,433.4531 546.2188,432.875 L546.2188,435.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="563.75" y="434.1074">nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="717" y="410.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="718" y="423.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="460" x2="754" y1="445.9531" y2="445.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="465" y="451.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="467" y="453.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="479" y="460.1636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="460" x2="754" y1="466.7578" y2="466.7578"/><ellipse cx="470" cy="477.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="479" y="480.9683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="470" cy="490.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="479" y="493.7729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="470" cy="503.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="479" y="506.5776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="470" cy="516.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="479" y="519.3823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="470" cy="528.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="479" y="532.187">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="470" cy="541.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="479" y="544.9917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="470" cy="554.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="479" y="557.7964">has_element() const : bool</text><ellipse cx="470" cy="567.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="479" y="570.6011">is_empty() const : bool</text><ellipse cx="470" cy="580.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="479" y="583.4058">begin() : auto</text><ellipse cx="470" cy="593" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="479" y="596.2104">end() : auto</text><ellipse cx="470" cy="605.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="479" y="609.0151">cbegin() const : auto</text><ellipse cx="470" cy="618.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="479" y="621.8198">cend() const : auto</text><ellipse cx="470" cy="631.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="479" y="634.6245">begin() const : auto</text><ellipse cx="470" cy="644.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="479" y="647.4292">end() const : auto</text><ellipse cx="470" cy="657.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="479" y="660.2339">print_tree() : void</text><ellipse cx="470" cy="669.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="479" y="673.0386">add_element() : _Bool</text><ellipse cx="470" cy="682.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="479" y="685.8433">add_element() : _Bool</text><ellipse cx="470" cy="695.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="479" y="698.6479">get_element() : auto</text><ellipse cx="470" cy="708.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="479" y="711.4526">get_element_parent() : auto</text><ellipse cx="470" cy="721.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="479" y="724.2573">get_element() : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="3145" y="1541.4531"/><ellipse cx="3160" cy="1557.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3164.1094,1563.4531 L3156.3906,1563.4531 L3156.3906,1551.0625 L3164.1094,1551.0625 L3164.1094,1553.2188 L3158.8438,1553.2188 L3158.8438,1555.8906 L3163.6094,1555.8906 L3163.6094,1558.0469 L3158.8438,1558.0469 L3158.8438,1561.2969 L3164.1094,1561.2969 L3164.1094,1563.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="3174" y="1561.6074">source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3146" x2="3254" y1="1573.4531" y2="1573.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="3151" y="1587.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="3151" y="1600.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3151" y="1613.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3146" x2="3254" y1="1619.8672" y2="1619.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="790.5" y="541.9531"/><ellipse cx="845.25" cy="557.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M848.2188,563.5938 Q847.6406,563.8906 847,564.0313 Q846.3594,564.1875 845.6563,564.1875 Q843.1563,564.1875 841.8281,562.5469 Q840.5156,560.8906 840.5156,557.7656 Q840.5156,554.6406 841.8281,552.9844 Q843.1563,551.3281 845.6563,551.3281 Q846.3594,551.3281 847,551.4844 Q847.6563,551.6406 848.2188,551.9375 L848.2188,554.6563 Q847.5938,554.0781 847,553.8125 Q846.4063,553.5313 845.7813,553.5313 Q844.4375,553.5313 843.75,554.6094 Q843.0625,555.6719 843.0625,557.7656 Q843.0625,559.8594 843.75,560.9375 Q844.4375,562 845.7813,562 Q846.4063,562 847,561.7344 Q847.5938,561.4531 848.2188,560.875 L848.2188,563.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="865.75" y="562.1074">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="791.5" x2="982.5" y1="573.9531" y2="573.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="796.5" y="579.9531"/><ellipse cx="801.5" cy="584.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="810.5" y="588.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="791.5" x2="982.5" y1="594.7578" y2="594.7578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="309" x="2801.5" y="1560.4531"/><ellipse cx="2816.5" cy="1576.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2819.4688,1582.0938 Q2818.8906,1582.3906 2818.25,1582.5313 Q2817.6094,1582.6875 2816.9063,1582.6875 Q2814.4063,1582.6875 2813.0781,1581.0469 Q2811.7656,1579.3906 2811.7656,1576.2656 Q2811.7656,1573.1406 2813.0781,1571.4844 Q2814.4063,1569.8281 2816.9063,1569.8281 Q2817.6094,1569.8281 2818.25,1569.9844 Q2818.9063,1570.1406 2819.4688,1570.4375 L2819.4688,1573.1563 Q2818.8438,1572.5781 2818.25,1572.3125 Q2817.6563,1572.0313 2817.0313,1572.0313 Q2815.6875,1572.0313 2815,1573.1094 Q2814.3125,1574.1719 2814.3125,1576.2656 Q2814.3125,1578.3594 2815,1579.4375 Q2815.6875,1580.5 2817.0313,1580.5 Q2817.6563,1580.5 2818.25,1580.2344 Q2818.8438,1579.9531 2819.4688,1579.375 L2819.4688,1582.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="2830.5" y="1580.6074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="2867.5" y="1557.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="2868.5" y="1569.5918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2802.5" x2="3109.5" y1="1592.4531" y2="1592.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2802.5" x2="3109.5" y1="1600.4531" y2="1600.4531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="441" x="3024.5" y="942.4531"/><ellipse cx="3207.25" cy="958.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3210.2188,964.0938 Q3209.6406,964.3906 3209,964.5313 Q3208.3594,964.6875 3207.6563,964.6875 Q3205.1563,964.6875 3203.8281,963.0469 Q3202.5156,961.3906 3202.5156,958.2656 Q3202.5156,955.1406 3203.8281,953.4844 Q3205.1563,951.8281 3207.6563,951.8281 Q3208.3594,951.8281 3209,951.9844 Q3209.6563,952.1406 3210.2188,952.4375 L3210.2188,955.1563 Q3209.5938,954.5781 3209,954.3125 Q3208.4063,954.0313 3207.7813,954.0313 Q3206.4375,954.0313 3205.75,955.1094 Q3205.0625,956.1719 3205.0625,958.2656 Q3205.0625,960.3594 3205.75,961.4375 Q3206.4375,962.5 3207.7813,962.5 Q3208.4063,962.5 3209,962.2344 Q3209.5938,961.9531 3210.2188,961.375 L3210.2188,964.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="3227.75" y="962.6074">source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3025.5" x2="3464.5" y1="974.4531" y2="974.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3030.5" y="980.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3032.5" y="982.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3044.5" y="988.6636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3025.5" x2="3464.5" y1="995.2578" y2="995.2578"/><ellipse cx="3035.5" cy="1006.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3044.5" y="1009.4683">source_file() = default : void</text><ellipse cx="3035.5" cy="1019.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3044.5" y="1022.2729">source_file() : void</text><ellipse cx="3035.5" cy="1031.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="3044.5" y="1035.0776">set_path() : void</text><ellipse cx="3035.5" cy="1044.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3044.5" y="1047.8823">set_absolute() : void</text><ellipse cx="3035.5" cy="1057.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3044.5" y="1060.687">is_absolute() const : bool</text><ellipse cx="3035.5" cy="1070.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3044.5" y="1073.4917">set_type() : void</text><ellipse cx="3035.5" cy="1083.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="3044.5" y="1086.2964">type() const : common::model::source_file_t</text><ellipse cx="3035.5" cy="1095.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3044.5" y="1099.1011">source_file() : void</text><ellipse cx="3035.5" cy="1108.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3044.5" y="1111.9058">source_file() = default : void</text><ellipse cx="3035.5" cy="1121.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3044.5" y="1124.7104">operator=() : common::model::source_file &amp;</text><ellipse cx="3035.5" cy="1134.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3044.5" y="1137.5151">operator=() : common::model::source_file &amp;</text><ellipse cx="3035.5" cy="1147.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3044.5" y="1150.3198">operator==() const : bool</text><ellipse cx="3035.5" cy="1159.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="3044.5" y="1163.1245">path() const : const common::model::filesystem_path &amp;</text><ellipse cx="3035.5" cy="1172.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3044.5" y="1175.9292">full_name() const : std::string</text><ellipse cx="3035.5" cy="1185.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="3044.5" y="1188.7339">full_path() const : common::model::path&lt;common::model::fs_path_sep&gt;</text><ellipse cx="3035.5" cy="1198.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="3044.5" y="1201.5386">add_file() : void</text><ellipse cx="3035.5" cy="1211.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="3044.5" y="1214.3433">fs_path() const : std::filesystem::path</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="201.6563" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="405" x="3500.5" y="980.4531"/><ellipse cx="3673.25" cy="996.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3676.2188,1002.0938 Q3675.6406,1002.3906 3675,1002.5313 Q3674.3594,1002.6875 3673.6563,1002.6875 Q3671.1563,1002.6875 3669.8281,1001.0469 Q3668.5156,999.3906 3668.5156,996.2656 Q3668.5156,993.1406 3669.8281,991.4844 Q3671.1563,989.8281 3673.6563,989.8281 Q3674.3594,989.8281 3675,989.9844 Q3675.6563,990.1406 3676.2188,990.4375 L3676.2188,993.1563 Q3675.5938,992.5781 3675,992.3125 Q3674.4063,992.0313 3673.7813,992.0313 Q3672.4375,992.0313 3671.75,993.1094 Q3671.0625,994.1719 3671.0625,996.2656 Q3671.0625,998.3594 3671.75,999.4375 Q3672.4375,1000.5 3673.7813,1000.5 Q3674.4063,1000.5 3675,1000.2344 Q3675.5938,999.9531 3676.2188,999.375 L3676.2188,1002.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="3693.75" y="1000.6074">element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3501.5" x2="3904.5" y1="1012.4531" y2="1012.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3501.5" x2="3904.5" y1="1020.4531" y2="1020.4531"/><ellipse cx="3511.5" cy="1031.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="3520.5" y="1034.6636">element() : void</text><ellipse cx="3511.5" cy="1044.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3520.5" y="1047.4683">~element() = default : void</text><ellipse cx="3511.5" cy="1057.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="3520.5" y="1060.2729">name_and_ns() const : std::string</text><ellipse cx="3511.5" cy="1069.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3520.5" y="1073.0776">set_namespace() : void</text><ellipse cx="3511.5" cy="1082.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="3520.5" y="1085.8823">get_namespace() const : common::model::namespace_</text><ellipse cx="3511.5" cy="1095.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="3520.5" y="1098.687">get_relative_namespace() const : common::model::namespace_</text><ellipse cx="3511.5" cy="1108.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="3520.5" y="1111.4917">path() const : const common::model::namespace_ &amp;</text><ellipse cx="3511.5" cy="1121.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3520.5" y="1124.2964">full_name() const : std::string</text><ellipse cx="3511.5" cy="1133.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3520.5" y="1137.1011">full_name_no_ns() const : std::string</text><ellipse cx="3511.5" cy="1146.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3520.5" y="1149.9058">set_using_namespaces() : void</text><ellipse cx="3511.5" cy="1159.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="3520.5" y="1162.7104">using_namespace() const : const common::model::namespace_ &amp;</text><ellipse cx="3511.5" cy="1172.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3520.5" y="1175.5151">context() const : inja::json</text></a><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="463" x="3479.5" y="394.9531"/><ellipse cx="3681.25" cy="410.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3681.3594,406.2969 L3680.2031,411.375 L3682.5313,411.375 L3681.3594,406.2969 Z M3679.875,404.0625 L3682.8594,404.0625 L3686.2188,416.4531 L3683.7656,416.4531 L3683,413.3906 L3679.7188,413.3906 L3678.9688,416.4531 L3676.5313,416.4531 L3679.875,404.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="3701.75" y="415.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3480.5" x2="3941.5" y1="426.9531" y2="426.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3485.5" y="432.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3487.5" y="434.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3499.5" y="441.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3485.5" y="445.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3487.5" y="447.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3499.5" y="453.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3480.5" x2="3941.5" y1="460.5625" y2="460.5625"/><ellipse cx="3490.5" cy="471.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3499.5" y="474.7729">diagram() : void</text><ellipse cx="3490.5" cy="484.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3499.5" y="487.5776">~diagram() : void</text><ellipse cx="3490.5" cy="497.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="3499.5" y="500.3823">type() const = 0 : common::model::diagram_t</text><ellipse cx="3490.5" cy="509.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="3499.5" y="513.187">get() const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="3490.5" cy="522.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="3499.5" y="525.9917">get() const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="3490.5" cy="535.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3499.5" y="538.7964">diagram() : void</text><ellipse cx="3490.5" cy="548.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3499.5" y="551.6011">diagram() : void</text><ellipse cx="3490.5" cy="561.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3499.5" y="564.4058">operator=() : common::model::diagram &amp;</text><ellipse cx="3490.5" cy="574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3499.5" y="577.2104">operator=() : common::model::diagram &amp;</text><ellipse cx="3490.5" cy="586.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3499.5" y="590.0151">set_name() : void</text><ellipse cx="3490.5" cy="599.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3499.5" y="602.8198">name() const : std::string</text><ellipse cx="3490.5" cy="612.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="3499.5" y="615.6245">set_filter() : void</text><ellipse cx="3490.5" cy="625.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3499.5" y="628.4292">set_complete() : void</text><ellipse cx="3490.5" cy="638.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3499.5" y="641.2339">complete() const : bool</text><ellipse cx="3490.5" cy="650.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="654.0386">should_include() const : bool</text><ellipse cx="3490.5" cy="663.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="666.8433">should_include() const : bool</text><ellipse cx="3490.5" cy="676.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="679.6479">should_include() const : bool</text><ellipse cx="3490.5" cy="689.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="692.4526">should_include() const : bool</text><ellipse cx="3490.5" cy="702.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="705.2573">should_include() const : bool</text><ellipse cx="3490.5" cy="714.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="718.062">should_include() const : bool</text><ellipse cx="3490.5" cy="727.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3499.5" y="730.8667">has_element() const : bool</text><ellipse cx="3490.5" cy="740.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3499.5" y="743.6714">should_include() const : bool</text><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="176.0469" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="3677.5" y="1496.4531"/><ellipse cx="3778.75" cy="1512.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3781.7188,1518.0938 Q3781.1406,1518.3906 3780.5,1518.5313 Q3779.8594,1518.6875 3779.1563,1518.6875 Q3776.6563,1518.6875 3775.3281,1517.0469 Q3774.0156,1515.3906 3774.0156,1512.2656 Q3774.0156,1509.1406 3775.3281,1507.4844 Q3776.6563,1505.8281 3779.1563,1505.8281 Q3779.8594,1505.8281 3780.5,1505.9844 Q3781.1563,1506.1406 3781.7188,1506.4375 L3781.7188,1509.1563 Q3781.0938,1508.5781 3780.5,1508.3125 Q3779.9063,1508.0313 3779.2813,1508.0313 Q3777.9375,1508.0313 3777.25,1509.1094 Q3776.5625,1510.1719 3776.5625,1512.2656 Q3776.5625,1514.3594 3777.25,1515.4375 Q3777.9375,1516.5 3779.2813,1516.5 Q3779.9063,1516.5 3780.5,1516.2344 Q3781.0938,1515.9531 3781.7188,1515.375 L3781.7188,1518.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="3799.25" y="1516.6074">package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3678.5" x2="3941.5" y1="1528.4531" y2="1528.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3683.5" y="1534.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3685.5" y="1536.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3697.5" y="1542.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3678.5" x2="3941.5" y1="1549.2578" y2="1549.2578"/><ellipse cx="3688.5" cy="1560.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3697.5" y="1563.4683">package() : void</text><ellipse cx="3688.5" cy="1573.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3697.5" y="1576.2729">package() : void</text><ellipse cx="3688.5" cy="1585.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3697.5" y="1589.0776">package() = default : void</text><ellipse cx="3688.5" cy="1598.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3697.5" y="1601.8823">operator=() : common::model::package &amp;</text><ellipse cx="3688.5" cy="1611.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3697.5" y="1614.687">operator=() : common::model::package &amp;</text><ellipse cx="3688.5" cy="1624.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3697.5" y="1627.4917">full_name() const : std::string</text><ellipse cx="3688.5" cy="1637.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3697.5" y="1640.2964">is_deprecated() const : bool</text><ellipse cx="3688.5" cy="1649.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3697.5" y="1653.1011">set_deprecated() : void</text><ellipse cx="3688.5" cy="1662.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3697.5" y="1665.9058">add_package() : void</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L30" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L30" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="2494.5" y="167.4531"/><ellipse cx="2542.25" cy="183.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2545.2188,189.0938 Q2544.6406,189.3906 2544,189.5313 Q2543.3594,189.6875 2542.6563,189.6875 Q2540.1563,189.6875 2538.8281,188.0469 Q2537.5156,186.3906 2537.5156,183.2656 Q2537.5156,180.1406 2538.8281,178.4844 Q2540.1563,176.8281 2542.6563,176.8281 Q2543.3594,176.8281 2544,176.9844 Q2544.6563,177.1406 2545.2188,177.4375 L2545.2188,180.1563 Q2544.5938,179.5781 2544,179.3125 Q2543.4063,179.0313 2542.7813,179.0313 Q2541.4375,179.0313 2540.75,180.1094 Q2540.0625,181.1719 2540.0625,183.2656 Q2540.0625,185.3594 2540.75,186.4375 Q2541.4375,187.5 2542.7813,187.5 Q2543.4063,187.5 2544,187.2344 Q2544.5938,186.9531 2545.2188,186.375 L2545.2188,189.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="2562.75" y="187.6074">diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2495.5" x2="2682.5" y1="199.4531" y2="199.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2495.5" x2="2682.5" y1="207.4531" y2="207.4531"/><ellipse cx="2505.5" cy="218.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2514.5" y="221.6636">diagram_filter() : void</text><ellipse cx="2505.5" cy="231.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2514.5" y="234.4683">add_inclusive_filter() : void</text><ellipse cx="2505.5" cy="244.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2514.5" y="247.2729">add_exclusive_filter() : void</text><ellipse cx="2505.5" cy="256.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2514.5" y="260.0776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2502.5" y="266.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2514.5" y="272.8823">init_filters() : void</text><ellipse cx="2505.5" cy="282.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2514.5" y="285.687">should_include() : _Bool</text></a><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="71" x="1080.5" y="1044.4531"/><ellipse cx="1095.5" cy="1060.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1099.6094,1066.4531 L1091.8906,1066.4531 L1091.8906,1054.0625 L1099.6094,1054.0625 L1099.6094,1056.2188 L1094.3438,1056.2188 L1094.3438,1058.8906 L1099.1094,1058.8906 L1099.1094,1061.0469 L1094.3438,1061.0469 L1094.3438,1064.2969 L1099.6094,1064.2969 L1099.6094,1066.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="1109.5" y="1064.6074">filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1081.5" x2="1150.5" y1="1076.4531" y2="1076.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="1086.5" y="1090.6636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="1086.5" y="1103.4683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1081.5" x2="1150.5" y1="1110.0625" y2="1110.0625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="176.0469" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="241" x="1415.5" y="484.4531"/><ellipse cx="1496.25" cy="500.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1499.2188,506.0938 Q1498.6406,506.3906 1498,506.5313 Q1497.3594,506.6875 1496.6563,506.6875 Q1494.1563,506.6875 1492.8281,505.0469 Q1491.5156,503.3906 1491.5156,500.2656 Q1491.5156,497.1406 1492.8281,495.4844 Q1494.1563,493.8281 1496.6563,493.8281 Q1497.3594,493.8281 1498,493.9844 Q1498.6563,494.1406 1499.2188,494.4375 L1499.2188,497.1563 Q1498.5938,496.5781 1498,496.3125 Q1497.4063,496.0313 1496.7813,496.0313 Q1495.4375,496.0313 1494.75,497.1094 Q1494.0625,498.1719 1494.0625,500.2656 Q1494.0625,502.3594 1494.75,503.4375 Q1495.4375,504.5 1496.7813,504.5 Q1497.4063,504.5 1498,504.2344 Q1498.5938,503.9531 1499.2188,503.375 L1499.2188,506.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="1516.75" y="504.6074">filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1416.5" x2="1655.5" y1="516.4531" y2="516.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1416.5" x2="1655.5" y1="524.4531" y2="524.4531"/><ellipse cx="1426.5" cy="535.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1435.5" y="538.6636">filter_visitor() : void</text><ellipse cx="1426.5" cy="548.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1435.5" y="551.4683">~filter_visitor() = default : void</text><ellipse cx="1426.5" cy="561.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1435.5" y="564.2729">match() const : tvl::value_t</text><ellipse cx="1426.5" cy="573.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1435.5" y="577.0776">match() const : tvl::value_t</text><ellipse cx="1426.5" cy="586.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1435.5" y="589.8823">match() const : tvl::value_t</text><ellipse cx="1426.5" cy="599.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1435.5" y="602.687">match() const : tvl::value_t</text><ellipse cx="1426.5" cy="612.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1435.5" y="615.4917">match() const : tvl::value_t</text><ellipse cx="1426.5" cy="625.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1435.5" y="628.2964">is_inclusive() const : bool</text><ellipse cx="1426.5" cy="637.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1435.5" y="641.1011">is_exclusive() const : bool</text><ellipse cx="1426.5" cy="650.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1435.5" y="653.9058">type() const : common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="197" x="1186.5" y="1031.9531"/><ellipse cx="1246.75" cy="1047.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1249.7188,1053.5938 Q1249.1406,1053.8906 1248.5,1054.0313 Q1247.8594,1054.1875 1247.1563,1054.1875 Q1244.6563,1054.1875 1243.3281,1052.5469 Q1242.0156,1050.8906 1242.0156,1047.7656 Q1242.0156,1044.6406 1243.3281,1042.9844 Q1244.6563,1041.3281 1247.1563,1041.3281 Q1247.8594,1041.3281 1248.5,1041.4844 Q1249.1563,1041.6406 1249.7188,1041.9375 L1249.7188,1044.6563 Q1249.0938,1044.0781 1248.5,1043.8125 Q1247.9063,1043.5313 1247.2813,1043.5313 Q1245.9375,1043.5313 1245.25,1044.6094 Q1244.5625,1045.6719 1244.5625,1047.7656 Q1244.5625,1049.8594 1245.25,1050.9375 Q1245.9375,1052 1247.2813,1052 Q1247.9063,1052 1248.5,1051.7344 Q1249.0938,1051.4531 1249.7188,1050.875 L1249.7188,1053.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1267.25" y="1052.1074">anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1187.5" x2="1382.5" y1="1063.9531" y2="1063.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1187.5" x2="1382.5" y1="1071.9531" y2="1071.9531"/><ellipse cx="1197.5" cy="1082.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1206.5" y="1086.1636">anyof_filter() : void</text><ellipse cx="1197.5" cy="1095.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1206.5" y="1098.9683">~anyof_filter() = default : void</text><ellipse cx="1197.5" cy="1108.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1206.5" y="1111.7729">match() const : tvl::value_t</text><ellipse cx="1197.5" cy="1121.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1206.5" y="1124.5776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="2440" y="1031.9531"/><ellipse cx="2498.25" cy="1047.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2501.2188,1053.5938 Q2500.6406,1053.8906 2500,1054.0313 Q2499.3594,1054.1875 2498.6563,1054.1875 Q2496.1563,1054.1875 2494.8281,1052.5469 Q2493.5156,1050.8906 2493.5156,1047.7656 Q2493.5156,1044.6406 2494.8281,1042.9844 Q2496.1563,1041.3281 2498.6563,1041.3281 Q2499.3594,1041.3281 2500,1041.4844 Q2500.6563,1041.6406 2501.2188,1041.9375 L2501.2188,1044.6563 Q2500.5938,1044.0781 2500,1043.8125 Q2499.4063,1043.5313 2498.7813,1043.5313 Q2497.4375,1043.5313 2496.75,1044.6094 Q2496.0625,1045.6719 2496.0625,1047.7656 Q2496.0625,1049.8594 2496.75,1050.9375 Q2497.4375,1052 2498.7813,1052 Q2499.4063,1052 2500,1051.7344 Q2500.5938,1051.4531 2501.2188,1050.875 L2501.2188,1053.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="2518.75" y="1052.1074">namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2441" x2="2671" y1="1063.9531" y2="1063.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2441" x2="2671" y1="1071.9531" y2="1071.9531"/><ellipse cx="2451" cy="1082.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2460" y="1086.1636">namespace_filter() : void</text><ellipse cx="2451" cy="1095.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2460" y="1098.9683">~namespace_filter() = default : void</text><ellipse cx="2451" cy="1108.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2460" y="1111.7729">match() const : tvl::value_t</text><ellipse cx="2451" cy="1121.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2460" y="1124.5776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="1418.5" y="1031.9531"/><ellipse cx="1489.25" cy="1047.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1492.2188,1053.5938 Q1491.6406,1053.8906 1491,1054.0313 Q1490.3594,1054.1875 1489.6563,1054.1875 Q1487.1563,1054.1875 1485.8281,1052.5469 Q1484.5156,1050.8906 1484.5156,1047.7656 Q1484.5156,1044.6406 1485.8281,1042.9844 Q1487.1563,1041.3281 1489.6563,1041.3281 Q1490.3594,1041.3281 1491,1041.4844 Q1491.6563,1041.6406 1492.2188,1041.9375 L1492.2188,1044.6563 Q1491.5938,1044.0781 1491,1043.8125 Q1490.4063,1043.5313 1489.7813,1043.5313 Q1488.4375,1043.5313 1487.75,1044.6094 Q1487.0625,1045.6719 1487.0625,1047.7656 Q1487.0625,1049.8594 1487.75,1050.9375 Q1488.4375,1052 1489.7813,1052 Q1490.4063,1052 1491,1051.7344 Q1491.5938,1051.4531 1492.2188,1050.875 L1492.2188,1053.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="1509.75" y="1052.1074">element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1419.5" x2="1652.5" y1="1063.9531" y2="1063.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1424.5" y="1069.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1426.5" y="1071.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1438.5" y="1078.1636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1419.5" x2="1652.5" y1="1084.7578" y2="1084.7578"/><ellipse cx="1429.5" cy="1095.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1438.5" y="1098.9683">element_filter() : void</text><ellipse cx="1429.5" cy="1108.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1438.5" y="1111.7729">~element_filter() = default : void</text><ellipse cx="1429.5" cy="1121.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1438.5" y="1124.5776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="217" x="1688.5" y="1031.9531"/><ellipse cx="1748.25" cy="1047.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1751.2188,1053.5938 Q1750.6406,1053.8906 1750,1054.0313 Q1749.3594,1054.1875 1748.6563,1054.1875 Q1746.1563,1054.1875 1744.8281,1052.5469 Q1743.5156,1050.8906 1743.5156,1047.7656 Q1743.5156,1044.6406 1744.8281,1042.9844 Q1746.1563,1041.3281 1748.6563,1041.3281 Q1749.3594,1041.3281 1750,1041.4844 Q1750.6563,1041.6406 1751.2188,1041.9375 L1751.2188,1044.6563 Q1750.5938,1044.0781 1750,1043.8125 Q1749.4063,1043.5313 1748.7813,1043.5313 Q1747.4375,1043.5313 1746.75,1044.6094 Q1746.0625,1045.6719 1746.0625,1047.7656 Q1746.0625,1049.8594 1746.75,1050.9375 Q1747.4375,1052 1748.7813,1052 Q1749.4063,1052 1750,1051.7344 Q1750.5938,1051.4531 1751.2188,1050.875 L1751.2188,1053.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="1768.75" y="1052.1074">subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1689.5" x2="1904.5" y1="1063.9531" y2="1063.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1694.5" y="1069.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1696.5" y="1071.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1708.5" y="1078.1636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1689.5" x2="1904.5" y1="1084.7578" y2="1084.7578"/><ellipse cx="1699.5" cy="1095.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1708.5" y="1098.9683">subclass_filter() : void</text><ellipse cx="1699.5" cy="1108.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1708.5" y="1111.7729">~subclass_filter() = default : void</text><ellipse cx="1699.5" cy="1121.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1708.5" y="1124.5776">match() const : tvl::value_t</text><!--MD5=[017a9910fffd6e456b2b03918511ff35]
class C_0001412380775311155780--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="176.0469" id="C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.5;" width="482" x="330" y="993.4531"/><ellipse cx="390.75" cy="1009.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M393.7188,1015.0938 Q393.1406,1015.3906 392.5,1015.5313 Q391.8594,1015.6875 391.1563,1015.6875 Q388.6563,1015.6875 387.3281,1014.0469 Q386.0156,1012.3906 386.0156,1009.2656 Q386.0156,1006.1406 387.3281,1004.4844 Q388.6563,1002.8281 391.1563,1002.8281 Q391.8594,1002.8281 392.5,1002.9844 Q393.1563,1003.1406 393.7188,1003.4375 L393.7188,1006.1563 Q393.0938,1005.5781 392.5,1005.3125 Q391.9063,1005.0313 391.2813,1005.0313 Q389.9375,1005.0313 389.25,1006.1094 Q388.5625,1007.1719 388.5625,1009.2656 Q388.5625,1011.3594 389.25,1012.4375 Q389.9375,1013.5 391.2813,1013.5 Q391.9063,1013.5 392.5,1013.2344 Q393.0938,1012.9531 393.7188,1012.375 L393.7188,1015.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="411.25" y="1013.6074">edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="223" x="592" y="990.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="221" x="593" y="1002.5918">DiagramT,ElementT,MatchOverrideT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="331" x2="811" y1="1025.4531" y2="1025.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="336" y="1031.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1033.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="350" y="1039.6636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="336" y="1044.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1046.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="350" y="1052.4683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="336" y="1057.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1059.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="350" y="1065.2729">matching_elements_ : common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="336" y="1069.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1071.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="350" y="1078.0776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="331" x2="811" y1="1084.6719" y2="1084.6719"/><ellipse cx="341" cy="1095.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="350" y="1098.8823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="341" cy="1108.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="350" y="1111.687">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="341" cy="1121.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="350" y="1124.4917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1131.0859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="350" y="1137.2964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1143.8906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="350" y="1150.1011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="338" y="1156.6953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="350" y="1162.9058">add_adjacent() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="233" x="61.5" y="1038.4531"/><ellipse cx="119.75" cy="1054.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M122.7188,1060.0938 Q122.1406,1060.3906 121.5,1060.5313 Q120.8594,1060.6875 120.1563,1060.6875 Q117.6563,1060.6875 116.3281,1059.0469 Q115.0156,1057.3906 115.0156,1054.2656 Q115.0156,1051.1406 116.3281,1049.4844 Q117.6563,1047.8281 120.1563,1047.8281 Q120.8594,1047.8281 121.5,1047.9844 Q122.1563,1048.1406 122.7188,1048.4375 L122.7188,1051.1563 Q122.0938,1050.5781 121.5,1050.3125 Q120.9063,1050.0313 120.2813,1050.0313 Q118.9375,1050.0313 118.25,1051.1094 Q117.5625,1052.1719 117.5625,1054.2656 Q117.5625,1056.3594 118.25,1057.4375 Q118.9375,1058.5 120.2813,1058.5 Q120.9063,1058.5 121.5,1058.2344 Q122.0938,1057.9531 122.7188,1057.375 L122.7188,1060.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="140.25" y="1058.6074">relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="62.5" x2="293.5" y1="1070.4531" y2="1070.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="62.5" x2="293.5" y1="1078.4531" y2="1078.4531"/><ellipse cx="72.5" cy="1089.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="81.5" y="1092.6636">relationship_filter() : void</text><ellipse cx="72.5" cy="1102.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="81.5" y="1105.4683">~relationship_filter() = default : void</text><ellipse cx="72.5" cy="1115.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="81.5" y="1118.2729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="2199" y="1038.4531"/><ellipse cx="2258.75" cy="1054.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2261.7188,1060.0938 Q2261.1406,1060.3906 2260.5,1060.5313 Q2259.8594,1060.6875 2259.1563,1060.6875 Q2256.6563,1060.6875 2255.3281,1059.0469 Q2254.0156,1057.3906 2254.0156,1054.2656 Q2254.0156,1051.1406 2255.3281,1049.4844 Q2256.6563,1047.8281 2259.1563,1047.8281 Q2259.8594,1047.8281 2260.5,1047.9844 Q2261.1563,1048.1406 2261.7188,1048.4375 L2261.7188,1051.1563 Q2261.0938,1050.5781 2260.5,1050.3125 Q2259.9063,1050.0313 2259.2813,1050.0313 Q2257.9375,1050.0313 2257.25,1051.1094 Q2256.5625,1052.1719 2256.5625,1054.2656 Q2256.5625,1056.3594 2257.25,1057.4375 Q2257.9375,1058.5 2259.2813,1058.5 Q2259.9063,1058.5 2260.5,1058.2344 Q2261.0938,1057.9531 2261.7188,1057.375 L2261.7188,1060.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="2279.25" y="1058.6074">access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2200" x2="2404" y1="1070.4531" y2="1070.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2200" x2="2404" y1="1078.4531" y2="1078.4531"/><ellipse cx="2210" cy="1089.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2219" y="1092.6636">access_filter() : void</text><ellipse cx="2210" cy="1102.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2219" y="1105.4683">~access_filter() = default : void</text><ellipse cx="2210" cy="1115.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2219" y="1118.2729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="223" x="1940.5" y="1031.9531"/><ellipse cx="2007.25" cy="1047.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2010.2188,1053.5938 Q2009.6406,1053.8906 2009,1054.0313 Q2008.3594,1054.1875 2007.6563,1054.1875 Q2005.1563,1054.1875 2003.8281,1052.5469 Q2002.5156,1050.8906 2002.5156,1047.7656 Q2002.5156,1044.6406 2003.8281,1042.9844 Q2005.1563,1041.3281 2007.6563,1041.3281 Q2008.3594,1041.3281 2009,1041.4844 Q2009.6563,1041.6406 2010.2188,1041.9375 L2010.2188,1044.6563 Q2009.5938,1044.0781 2009,1043.8125 Q2008.4063,1043.5313 2007.7813,1043.5313 Q2006.4375,1043.5313 2005.75,1044.6094 Q2005.0625,1045.6719 2005.0625,1047.7656 Q2005.0625,1049.8594 2005.75,1050.9375 Q2006.4375,1052 2007.7813,1052 Q2008.4063,1052 2009,1051.7344 Q2009.5938,1051.4531 2010.2188,1050.875 L2010.2188,1053.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="2027.75" y="1052.1074">context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1941.5" x2="2162.5" y1="1063.9531" y2="1063.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1946.5" y="1069.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1948.5" y="1071.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1960.5" y="1078.1636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1941.5" x2="2162.5" y1="1084.7578" y2="1084.7578"/><ellipse cx="1951.5" cy="1095.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1960.5" y="1098.9683">context_filter() : void</text><ellipse cx="1951.5" cy="1108.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1960.5" y="1111.7729">~context_filter() = default : void</text><ellipse cx="1951.5" cy="1121.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1960.5" y="1124.5776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13hnggj44fbpl)" height="86.4141" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="847" y="1038.4531"/><ellipse cx="906.75" cy="1054.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M909.7188,1060.0938 Q909.1406,1060.3906 908.5,1060.5313 Q907.8594,1060.6875 907.1563,1060.6875 Q904.6563,1060.6875 903.3281,1059.0469 Q902.0156,1057.3906 902.0156,1054.2656 Q902.0156,1051.1406 903.3281,1049.4844 Q904.6563,1047.8281 907.1563,1047.8281 Q907.8594,1047.8281 908.5,1047.9844 Q909.1563,1048.1406 909.7188,1048.4375 L909.7188,1051.1563 Q909.0938,1050.5781 908.5,1050.3125 Q907.9063,1050.0313 907.2813,1050.0313 Q905.9375,1050.0313 905.25,1051.1094 Q904.5625,1052.1719 904.5625,1054.2656 Q904.5625,1056.3594 905.25,1057.4375 Q905.9375,1058.5 907.2813,1058.5 Q907.9063,1058.5 908.5,1058.2344 Q909.0938,1057.9531 909.7188,1057.375 L909.7188,1060.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="927.25" y="1058.6074">paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="848" x2="1044" y1="1070.4531" y2="1070.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="848" x2="1044" y1="1078.4531" y2="1078.4531"/><ellipse cx="858" cy="1089.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="867" y="1092.6636">paths_filter() : void</text><ellipse cx="858" cy="1102.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="867" y="1105.4683">~paths_filter() = default : void</text><ellipse cx="858" cy="1115.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="867" y="1118.2729">match() const : tvl::value_t</text></a><!--MD5=[4e47031bec214ae962be33b6c59dc38d]
reverse link C_0000605866861866358037 to C_0002077031342744882956--><path d="M5104.01,1502.8231 C5081.08,1443.5031 5040.67,1367.4631 4976,1330.9531 C4922.98,1301.0231 2831.83,1293.2731 2784,1330.9531 C2721.07,1380.5431 2716,1482.7431 2718.86,1541.0931 " fill="none" id="C_0000605866861866358037&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5108.64,1515.2131,5110.2894,1508.1932,5104.4439,1503.9707,5102.7945,1510.9906,5108.64,1515.2131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3520.5" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3530.5" y="1296.02">access_</text><!--MD5=[0fe97a7a5a0fa9da8660a2a2ab9fd9eb]
reverse link C_0001117102382624673118 to C_0000605866861866358037--><path d="M3525.88,258.0731 C3871.17,306.9931 4464.3,441.5431 4807,804.9531 C5006.19,1016.1731 5090.08,1367.8931 5117.71,1515.2431 " fill="none" id="C_0001117102382624673118&lt;-C_0000605866861866358037" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3524.9,265.0031,3506.06,255.3131,3526.83,251.1331,3524.9,265.0031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f0387d9954afcf30c87ff075e3f6770a]
reverse link C_0000895261582183440230 to C_0000605866861866358037--><path d="M3178.61,665.1231 C3198.74,697.4031 3225.86,730.4631 3260,749.9531 C3324.2,786.5931 3858.89,768.1531 3923,804.9531 C4133.87,926.0031 4043.55,1105.6531 4237,1252.9531 C4286.55,1290.6831 4307.91,1287.8431 4369,1299.9531 C4435.24,1313.0831 4918.03,1295.3131 4976,1329.9531 C5044.4,1370.8231 5086.06,1455.1331 5108.29,1515.2931 " fill="none" id="C_0000895261582183440230&lt;-C_0000605866861866358037" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3172.57,668.6631,3168.43,647.8831,3184.62,661.5431,3172.57,668.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d8e4acfe1535dd965012bd96698e8da6]
reverse link C_0000605866861866358037 to C_0001796282762108527255--><path d="M5282.38,1656.6231 C5393.44,1714.1831 5541.32,1803.9431 5643,1915.9531 C5688.7,1966.2931 5722.58,2036.1131 5743.81,2088.6731 " fill="none" id="C_0000605866861866358037&lt;-C_0001796282762108527255" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5279.15,1662.8331,5264.53,1647.4931,5285.53,1650.3731,5279.15,1662.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[49e40832bb4395e11a452c757e23014c]
reverse link C_0001639764337680852102 to C_0001639764337680852102--><path d="M4790.55,2126.1031 C4804.86,2134.9831 4813.5,2147.5931 4813.5,2163.9531 C4813.5,2184.4831 4799.9,2199.1131 4778.55,2207.8531 " fill="none" id="C_0001639764337680852102&lt;-C_0001639764337680852102" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4778.55,2120.0531,4782.1062,2126.3264,4789.2646,2125.4566,4785.7085,2119.1833,4778.55,2120.0531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4821.5" y="2161.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="4831.5" y="2168.52">template_params_</text><!--MD5=[1fd672dd170cf971b3d52d9ff5204cc3]
reverse link C_0001117102382624673118 to C_0000605669033368926050--><path d="M3526.32,237.3731 C4206.82,257.0731 5932,330.7531 5932,571.4531 C5932,571.4531 5932,571.4531 5932,2164.9531 C5932,2296.9831 5965.81,2347.2731 5897,2459.9531 C5872.66,2499.8031 5832.43,2530.9631 5793.58,2553.8031 " fill="none" id="C_0001117102382624673118&lt;-C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3526.04,244.3731,3506.24,236.8031,3526.44,230.3731,3526.04,244.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a2a1be26813a0a0e30d0157a4feeeb92]
reverse link C_0000204145716468348671 to C_0000605669033368926050--><path d="M5523.45,2321.1831 C5561.12,2386.2531 5603.44,2459.3531 5635.46,2514.6531 " fill="none" id="C_0000204145716468348671&lt;-C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5516.72,2309.5531,5516.2562,2316.7493,5522.7205,2319.9452,5523.1842,2312.749,5516.72,2309.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5621" y="2474.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="82" x="5631" y="2481.02">parameters_</text><!--MD5=[319ad9cfab865c6a4b42924a2f265e34]
reverse link C_0000605866861866358037 to C_0000204145716468348671--><path d="M5174.29,1671.4831 C5222.41,1762.9031 5299.33,1909.0131 5356.8,2018.2031 " fill="none" id="C_0000605866861866358037&lt;-C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5168.04,1674.6431,5164.92,1653.6831,5180.43,1668.1231,5168.04,1674.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8d30afa063382889315c705989a7065a]
reverse link C_0002097158357956220758 to C_0002077031342744882956--><path d="M4112.55,2052.2431 C4073.84,2001.4331 4021.06,1945.9131 3959,1915.9531 C3723.36,1802.1831 2984.13,2007.5331 2784,1838.9531 C2722.55,1787.1931 2716.99,1685.3331 2719.36,1627.7431 " fill="none" id="C_0002097158357956220758&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4120.35,2062.6731,4119.9611,2055.4725,4113.1648,2053.0621,4113.5537,2060.2627,4120.35,2062.6731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3836" y="1875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3846" y="1882.02">access_</text><!--MD5=[02be11655739622e036245b0eb8a50f3]
reverse link C_0001292034357466653182 to C_0001796282762108527255--><path d="M4440.23,1830.4431 C4445.41,1833.4631 4450.66,1836.3031 4456,1838.9531 C4505.06,1863.3031 4893.34,1865.4431 4948,1868.9531 C5025.24,1873.9231 5578.33,1873.4231 5643,1915.9531 C5702.53,1955.0931 5735.64,2031.3331 5753.01,2088.8031 " fill="none" id="C_0001292034357466653182&lt;-C_0001796282762108527255" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4429.02,1823.5631,4432.043,1830.11,4439.2489,1829.8376,4436.226,1823.2907,4429.02,1823.5631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5448" y="1875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="69" x="5458" y="1882.02">members_</text><!--MD5=[5772835d8c5fc770ec72554e912856e1]
reverse link C_0001292034357466653182 to C_0000204145716468348671--><path d="M4440.43,1830.0531 C4445.55,1833.1931 4450.74,1836.1631 4456,1838.9531 C4618.06,1924.8431 4683.48,1867.8231 4866,1885.9531 C4945.22,1893.8231 5152.2,1879.5431 5223,1915.9531 C5269.17,1939.7031 5309.34,1978.4031 5341.83,2018.2031 " fill="none" id="C_0001292034357466653182&lt;-C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4429.35,1822.9331,4432.2327,1829.543,4439.4429,1829.4242,4436.5601,1822.8144,4429.35,1822.9331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4869" y="1875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="64" x="4879" y="1882.02">methods_</text><!--MD5=[e6e969555e980a24e5c05aceb3b1be10]
reverse link C_0001292034357466653182 to C_0002097158357956220758--><path d="M4139.16,1852.3431 C4138.02,1857.9031 4136.96,1863.4431 4136,1868.9531 C4124.76,1933.3731 4136.11,2005.9131 4150.46,2062.8231 " fill="none" id="C_0001292034357466653182&lt;-C_0002097158357956220758" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4141.99,1839.3231,4136.8081,1844.3379,4139.4441,1851.05,4144.626,1846.0352,4141.99,1839.3231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4139" y="1875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="4149" y="1882.02">bases_</text><!--MD5=[6c601cf10173bacc52ca62444b91f42a]
reverse link C_0001292034357466653182 to C_0001639764337680852102--><path d="M4215.62,1851.4031 C4220.61,1863.6031 4226.99,1875.2131 4235,1885.9531 C4263,1923.4831 4296.2,1891.2831 4336,1915.9531 C4342.35,1919.8931 4348.64,1924.0431 4354.85,1928.3931 " fill="none" id="C_0001292034357466653182&lt;-C_0001639764337680852102" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4211.09,1839.0231,4209.3991,1846.0332,4215.2195,1850.2902,4216.9104,1843.2802,4211.09,1839.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4238" y="1875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4248" y="1882.02">templates_</text><!--MD5=[abaf0fa9d7aab18275802463a955a74d]
reverse link C_0001292034357466653182 to C_0001012510589658886782--><path d="M4322.13,1849.3731 C4333.49,1863.1831 4346.38,1875.5931 4361,1885.9531 C4469.58,1962.8531 4846.63,1844.7031 4959,1915.9531 C5024.29,1957.3531 5059.4,2042.6031 5076.63,2101.2731 " fill="none" id="C_0001292034357466653182&lt;-C_0001012510589658886782" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4314.13,1839.0831,4314.6597,1846.2747,4321.5019,1848.5518,4320.9722,1841.3602,4314.13,1839.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4364" y="1875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="4374" y="1882.02">type_aliases_</text><!--MD5=[4018109609f1a98320137cbe86d3b254]
reverse link C_0002069520381434407937 to C_0001292034357466653182--><path d="M3824.98,1196.6831 C3890.55,1258.0831 3972.89,1335.1931 4046.76,1404.3631 " fill="none" id="C_0002069520381434407937&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3819.79,1201.4131,3809.98,1182.6331,3829.36,1191.1931,3819.79,1201.4131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1de74a5a0bafa25219efbd6fc8924314]
reverse link C_0002077846075979426940 to C_0001292034357466653182--><path d="M3378.93,634.7931 C3394.14,674.9231 3420.27,724.4831 3462,749.9531 C3525.13,788.4931 4072.35,730.1231 4127,779.9531 C4206.18,852.1531 4230.45,1122.4731 4237.11,1329.8431 " fill="none" id="C_0002077846075979426940&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3372.25,636.8931,3372.23,615.7031,3385.46,632.2531,3372.25,636.8931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c22089b7714b620a371fadcc922a5ed]
reverse link C_0002069520381434407937 to C_0000724392977093650506--><path d="M3855.33,1193.5331 C3919.88,1234.5731 3997.9,1276.7231 4075,1299.9531 C4188.37,1334.1231 4502.7,1273.8931 4607,1329.9531 C4676.99,1367.5731 4728.26,1443.7031 4759.6,1502.7531 " fill="none" id="C_0002069520381434407937&lt;-C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3851.36,1199.3031,3838.36,1182.5631,3858.96,1187.5431,3851.36,1199.3031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[51c9aec8324745136c18c88ab3ea6908]
reverse link C_0002077846075979426940 to C_0000724392977093650506--><path d="M3378.92,634.8131 C3394.11,674.9631 3420.25,724.5231 3462,749.9531 C3580.74,822.2631 4610.68,709.7631 4712,804.9531 C4905.19,986.4631 4852.81,1343.1531 4816.87,1502.8331 " fill="none" id="C_0002077846075979426940&lt;-C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3372.23,636.9131,3372.22,615.7231,3385.44,632.2831,3372.23,636.9131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9452464bdcc5aa227509a6b1c470963f]
reverse link C_0000914432076690777687 to C_0001292034357466653182--><path d="M4387.95,1265.1231 C4378,1286.2531 4367.72,1308.0731 4357.42,1329.9331 " fill="none" id="C_0000914432076690777687&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4393.61,1253.1131,4387.437,1256.8407,4388.5036,1263.9724,4394.6766,1260.2449,4393.61,1253.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4380" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="4390" y="1296.02">classes_</text><!--MD5=[c4e61d953c70a4da21cd642647a4e85b]
reverse link C_0000914432076690777687 to C_0000724392977093650506--><path d="M4590.74,1264.0831 C4643.38,1345.9931 4702.87,1438.5531 4744.2,1502.8531 " fill="none" id="C_0000914432076690777687&lt;-C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4583.69,1253.1131,4583.567,1260.3232,4590.1751,1263.2098,4590.2981,1255.9998,4583.69,1253.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4609" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="4619" y="1296.02">enums_</text><!--MD5=[35055a644e6ee2571444a17639cdcb24]
reverse link C_0000914432076690777687 to C_0001012510589658886782--><path d="M4459.31,1266.4731 C4447.87,1463.0331 4444.32,1757.3431 4517,1838.9531 C4550.15,1876.1831 4918.61,1886.7331 4959,1915.9531 C5021.05,1960.8331 5056.71,2043.9831 5074.97,2101.3231 " fill="none" id="C_0000914432076690777687&lt;-C_0001012510589658886782" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4460.09,1253.3731,4455.7409,1259.1251,4459.3776,1265.352,4463.7267,1259.6,4460.09,1253.3731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4520" y="1582.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="4530" y="1589.02">type_aliases_</text><!--MD5=[0aa646b37725dc55b8a82c6eac2e4aae]
reverse link C_0000197068985320835874 to C_0000914432076690777687--><path d="M3961.43,654.3131 C4042.17,686.6231 4129.47,728.5431 4202,779.9531 C4253.09,816.1731 4301.54,863.5231 4343,909.8931 " fill="none" id="C_0000197068985320835874&lt;-C_0000914432076690777687" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3958.73,660.7831,3942.69,646.9431,3963.86,647.7531,3958.73,660.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M3455.69,1608.8031 C3433.66,1658.6831 3379.83,1780.6031 3328.25,1897.4231 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3334.64,1900.2731,3320.16,1915.7431,3321.83,1894.6231,3334.64,1900.2731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M2724.88,1228.9231 C2713.71,1237.8531 2702.05,1246.0131 2690,1252.9531 C2607.89,1300.2731 2575.16,1282.5431 2482,1299.9531 C1755.44,1435.7331 863.65,1547.8331 629.51,1576.4031 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2735,1220.5231,2727.8284,1221.2772,2725.7662,1228.1872,2732.9378,1227.4331,2735,1220.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2618" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2628" y="1296.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M2808.61,1233.0831 C2800.38,1265.0431 2791.83,1298.5931 2784,1329.9531 C2765.47,1404.1731 2744.82,1490.8831 2732.93,1541.2331 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2811.87,1220.4531,2806.4943,1225.2596,2808.8635,1232.0704,2814.2392,1227.2639,2811.87,1220.4531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2797" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2807" y="1296.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M2983.86,268.2431 C2834.83,294.8931 2671.19,336.4631 2626,394.9531 C2529.53,519.8031 2560.16,606.5631 2626,749.9531 C2641.65,784.0331 2666.1,776.0431 2690,804.9531 C2724.34,846.4931 2755.49,896.4831 2780.88,942.4031 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2982.92,261.2931,3003.83,264.7431,2985.34,275.0831,2982.92,261.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M3340.91,634.3431 C3324.98,673.2131 3298.85,721.4731 3260,749.9531 C3167.19,817.9831 3099.93,737.0931 3007,804.9531 C2959.95,839.3131 2924.67,892.1431 2899.46,942.3831 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3334.41,631.7431,3348.13,615.5931,3347.48,636.7731,3334.41,631.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M2828.51,750.9931 C2832.22,813.7531 2836.34,883.3631 2839.83,942.3631 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2827.72,737.7131,2824.0764,743.936,2828.4193,749.6927,2832.0628,743.4698,2827.72,737.7131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2834" y="786.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2844" y="793.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M3100.82,329.5031 C3070.46,350.3131 3039.27,372.7231 3011,394.9531 C3005.11,399.5831 2999.18,404.3531 2993.23,409.2131 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3097.1,323.5631,3117.58,318.1131,3104.97,335.1431,3097.1,323.5631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M2966.31,1608.8031 C2988.34,1658.6831 3042.17,1780.6031 3093.75,1897.4231 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3100.17,1894.6231,3101.84,1915.7431,3087.36,1900.2731,3100.17,1894.6231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M3158.57,1232.2831 C3090.83,1349.7131 3002.67,1502.5431 2969.45,1560.1331 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3165.26,1220.6831,3158.7958,1223.879,3159.2595,1231.0752,3165.7238,1227.8793,3165.26,1220.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3129" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="3139" y="1296.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M3226.95,1233.9331 C3225.18,1250.4631 3223.49,1267.0531 3222,1282.9531 C3213.37,1374.8731 3206.18,1482.8831 3202.55,1541.1031 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3228.39,1220.7031,3223.7673,1226.2376,3227.0981,1232.6334,3231.7208,1227.0989,3228.39,1220.7031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3225" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3235" y="1296.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M2969.52,753.3631 C3021.86,815.5031 3079.63,884.1031 3128.7,942.3631 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2963.87,757.5131,2956.34,737.7131,2974.58,748.5031,2963.87,757.5131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M3346.76,635.6931 C3329.39,711.6031 3299.52,842.1531 3276.62,942.2331 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3340.03,633.7431,3351.31,615.8031,3353.67,636.8631,3340.03,633.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1bd93a173dba52ae25f3e9452d57eb86]
reverse link C_0000895261582183440230 to C_0000785714713072053129--><path d="M3155.42,667.5831 C3172.17,744.7831 3196.12,855.1631 3215.04,942.3731 " fill="none" id="C_0000895261582183440230&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3148.51,668.7431,3151.11,647.7231,3162.19,665.7831,3148.51,668.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M3542.46,1191.6631 C3514.9,1218.1631 3490.03,1248.8331 3474,1282.9531 C3429.62,1377.4231 3449.7,1507.6931 3460.61,1560.1631 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3552.3,1182.4631,3545.1847,1183.6347,3543.5295,1190.6533,3550.6448,1189.4817,3552.3,1182.4631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3477" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="3487" y="1296.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M3650.03,1194.4231 C3593.21,1314.5431 3507.06,1496.6531 3476.89,1560.4231 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3655.61,1182.6331,3649.4279,1186.3455,3650.4769,1193.4799,3656.659,1189.7675,3655.61,1182.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3608" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="3618" y="1296.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M3004.98,747.1031 C3006.98,748.0831 3008.99,749.0331 3011,749.9531 C3172.97,824.0731 3232.01,776.9331 3409,796.9531 C3425.44,798.8131 3468.5,796.9931 3483,804.9531 C3555.29,844.6631 3612.43,918.9031 3650.34,980.3131 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3001.54,753.2031,2987.2,737.6031,3008.14,740.8531,3001.54,753.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17fdd0dd15c2164793acaf4e4273a1ea]
reverse link C_0000895261582183440230 to C_0002069520381434407937--><path d="M3181.87,664.7231 C3202.03,695.9231 3228.32,728.3631 3260,749.9531 C3344.36,807.4431 3397.02,749.9231 3483,804.9531 C3551.18,848.5931 3607.63,920.6731 3646.27,980.1531 " fill="none" id="C_0000895261582183440230&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3175.84,668.2831,3171.3,647.5931,3187.76,660.9331,3175.84,668.2831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M3467.1,397.1731 C3465.4,396.4131 3463.7,395.6831 3462,394.9531 C3265.31,310.9831 3197.7,354.5931 2987,317.9531 C2882.65,299.8031 2764.19,273.1231 2683.84,254.0931 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3479.16,402.7131,3475.3781,396.5733,3468.256,397.7028,3472.0379,403.8426,3479.16,402.7131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3379" y="354.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3389" y="361.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M2683.75,252.3431 C2764.31,270.3631 2883.09,296.5531 2987,317.9531 C3094.74,340.1431 3121.4,347.4431 3230,364.9531 C3332.64,381.5031 3365.16,357.1031 3462,394.9531 C3466.26,396.6131 3470.51,398.3731 3474.76,400.2031 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3479.36,402.2231,3472.7369,394.9337,3474.7845,400.207,3469.5112,402.2546,3479.36,402.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3233" y="354.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="3243" y="361.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M3766.27,1200.8731 C3777.79,1227.2231 3788.28,1255.5031 3795,1282.9531 C3812.23,1353.3531 3815.19,1435.7131 3814.29,1496.3931 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3759.83,1203.6231,3757.94,1182.5131,3772.58,1197.8331,3759.83,1203.6231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M3379.83,634.5631 C3395.35,674.1431 3421.49,723.1331 3462,749.9531 C3548.02,806.9131 3854.5,727.8031 3923,804.9531 C4096.29,1000.1531 3947.85,1337.8131 3861.48,1496.4131 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3373.25,636.9431,3372.96,615.7531,3386.4,632.1331,3373.25,636.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M2481.63,260.5931 C2400.19,283.4431 2285.65,316.3731 2186,347.9531 C2000.15,406.8431 1786.78,481.5931 1656.71,527.9831 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2494.15,257.0831,2487.2944,254.847,2482.5935,260.3153,2489.4491,262.5514,2494.15,257.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2189" y="354.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="2199" y="361.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M2482.16,278.8131 C2419.57,305.9231 2338.59,339.4131 2265,364.9531 C2054.05,438.1731 1802.33,505.0831 1656.66,541.8631 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2494.42,273.4831,2487.3222,272.21,2483.417,278.2722,2490.5149,279.5453,2494.42,273.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2312" y="354.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="2322" y="361.02">exclusive_</text><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M1403.1,624.7731 C1322.93,662.5931 1225.66,721.9531 1169,804.9531 C1118.6,878.7631 1113.22,988.3131 1114.22,1044.4431 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1415.3,619.1231,1408.1735,618.0215,1404.4157,624.1761,1411.5422,625.2777,1415.3,619.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1186" y="786.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1196" y="793.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M1295.82,1018.9331 C1308.45,956.2931 1332.9,857.6331 1373,779.9531 C1394.84,737.6431 1425.92,695.5531 1455.1,660.5131 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1293.3,1031.7231,1298.3847,1026.6098,1295.6204,1019.9496,1290.5357,1025.0629,1293.3,1031.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1376" y="786.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="1386" y="793.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M1508.89,679.7031 C1493.16,721.7331 1469.09,767.0531 1433,796.9531 C1421.71,806.3031 1412.13,795.4131 1401,804.9531 C1332.44,863.7231 1303.49,969.8731 1291.98,1031.8531 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1502.33,677.2631,1515.54,660.6931,1515.54,681.8831,1502.33,677.2631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M2585.74,1142.4631 C2608.51,1181.3431 2643.85,1229.0431 2690,1252.9531 C2805.58,1312.8331 3162.55,1217.3831 3275,1282.9531 C3384.47,1346.7931 3441.1,1501.0831 3459.31,1560.0231 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2579.22,1130.9731,2578.7033,1138.1657,2585.1438,1141.409,2585.6605,1134.2165,2579.22,1130.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3301" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="3311" y="1296.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M1676.9,574.9531 C1866.82,584.1331 2206.09,626.6031 2423,804.9531 C2494.38,863.6431 2530.17,969.8331 2545.78,1031.8331 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1676.42,581.9431,1656.74,574.0831,1677.03,567.9531,1676.42,581.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M1536,680.8431 C1536,789.1831 1536,951.5831 1536,1031.9031 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1529,680.6131,1536,660.6131,1543,680.6131,1529,680.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M1599.83,677.8531 C1623.11,717.2131 1649.08,762.6831 1671,804.9531 C1711.38,882.8031 1752.61,976.1231 1776.46,1031.7331 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1593.73,681.2931,1589.52,660.5231,1605.76,674.1331,1593.73,681.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a6800652bce38258685a15b776b4573]
reverse link C_0001412380775311155780 to C_0000229140160180072950--><path d="M571,1182.8831 C571,1272.3131 571,1402.1431 571,1489.5331 " fill="none" id="C_0001412380775311155780&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="571,1169.7231,567,1175.7231,571,1181.7231,575,1175.7231,571,1169.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="574" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="584" y="1296.02">relationship_</text><!--MD5=[9f380ab2801284f963616461f482de06]
reverse link C_0000469458052685692314 to C_0001412380775311155780--><path d="M1395.99,620.0331 C1288.13,655.8231 1135.23,706.3531 1001,749.9531 C924.67,774.7431 896.83,762.0631 829,804.9531 C751.05,854.2431 680.82,932.6131 633.39,993.1831 " fill="none" id="C_0000469458052685692314&lt;-C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1394.07,613.2931,1415.26,613.6331,1398.48,626.5831,1394.07,613.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M219.35,1135.1731 C289.47,1224.5531 431.89,1406.1131 512.3,1508.6231 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="211.17,1124.7331,211.7281,1131.9226,218.5792,1134.1726,218.0211,1126.9831,211.17,1124.7331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="343" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="353" y="1296.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M1396.58,629.6531 C1290.04,670.0831 1138.59,722.1831 1001,749.9531 C850.44,780.3431 438.87,718.3631 312,804.9531 C232.05,859.5231 198.05,975.7431 185.07,1038.3831 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1394.09,623.1131,1415.27,622.5131,1399.09,636.1931,1394.09,623.1131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2323.25,1136.7931 C2342.69,1182.7831 2374.29,1249.1331 2413,1299.9531 C2492.99,1404.9631 2614.84,1503.2031 2679.36,1551.7531 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2318.21,1124.6831,2316.8182,1131.7586,2322.8141,1135.7647,2324.2059,1128.6892,2318.21,1124.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2416" y="1289.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2426" y="1296.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M1676.77,591.1131 C1819.98,615.8831 2040.32,673.6931 2181,804.9531 C2249.47,868.8331 2281.38,978.3231 2294.36,1038.2431 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1675.23,597.9531,1656.65,587.7631,1677.53,584.1431,1675.23,597.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M1674.91,631.3831 C1755.65,670.6931 1854.63,729.2931 1923,804.9531 C1983.64,872.0531 2020.87,972.6631 2038.88,1031.9231 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1671.69,637.6031,1656.66,622.6731,1677.72,624.9731,1671.69,637.6031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M1396.13,612.5731 C1292.36,647.8931 1153.72,709.2431 1063,804.9531 C999.37,872.0831 967.66,979.0531 954.24,1038.0031 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1394.22,605.8231,1415.41,606.1731,1398.64,619.1131,1394.22,605.8231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[120b0415c0ab60622f87b0ee8fb71e6e]
link C_0001623832985137466228 to C_0001331923285602672865--><!--MD5=[3359e37b007906b74888278e0c289ade]
link C_0000911024010877522257 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[f48b281689db7de69bf6203bc197e55c]
@startuml
title clang-uml class diagram model
package [class_diagram] as C_0002240167036201725606 {
package [model] as C_0000897124234964432620 {
class "type_alias" as C_0001012510589658886782
class C_0001012510589658886782 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L24{type_alias}]] {
+set_alias() : void
+alias() const : std::string
+set_underlying_type() : void
+underlying_type() const : std::string
-alias_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L33{alias_}]]]
-underlying_type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/type_alias.h#L34{underlying_type_}]]]
}
class "class_element" as C_0000605866861866358037
class C_0000605866861866358037 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L29{class_element}]] {
+class_element() : void
+access() const : common::model::access_t
+name() const : std::string
+type() const : std::string
+context() const : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L43{name_}]]]
-type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_element.h#L44{type_}]]]
}
class "class_member" as C_0001796282762108527255
class C_0001796282762108527255 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L26{class_member}]] {
+class_member() : void
+~class_member() = default : void
+is_relationship() const : bool
+is_relationship() : void
+is_static() const : bool
+is_static() : void
-is_relationship_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L40{is_relationship_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_member.h#L41{is_static_}]]]
}
class "template_parameter" as C_0001639764337680852102
class C_0001639764337680852102 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L34{@brief Represents template parameter or template argument This class can represent both template parameter and template arguments, including variadic parameters and instantiations with nested templates}]] {
+template_parameter() : void
+template_parameter() = default : void
+set_type() : void
+type() const : std::string
+set_id() : void
+id() const : std::optional<int64_t>
+set_name() : void
+name() const : std::string
+set_default_value() : void
+default_value() const : std::string
+is_variadic() : void
+is_variadic() const : bool
+is_pack() : void
+is_pack() const : bool
+is_specialization_of() const : bool
+is_template_parameter() const : bool
+is_template_parameter() : void
+is_template_template_parameter() const : bool
+is_template_template_parameter() : void
+to_string() const : std::string
+add_template_param() : void
+add_template_param() : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+find_nested_relationships() const : bool
-type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L105{Represents the type of non-type template parameters e.g. 'int'}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L108{The name of the parameter (e.g. 'T' or 'N')}]]]
-default_value_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L111{Default value of the template parameter}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L115{Whether the template parameter is a regular template parameter When false, it is a non-type template parameter}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L119{Whether the template parameter is a template template parameter Can only be true when is_template_parameter_ is true}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L122{Whether the template parameter is variadic}]]]
-is_pack_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L125{Whether the argument specializes argument pack from parent template}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/template_parameter.h#L130{id_}]]]
}
class "method_parameter" as C_0000605669033368926050
class C_0000605669033368926050 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L28{method_parameter}]] {
+set_type() : void
+type() const : std::string
+set_name() : void
+name() const : std::string
+set_default_value() : void
+default_value() const : std::string
+to_string() const : std::string
-type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L43{type_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L44{name_}]]]
-default_value_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/method_parameter.h#L45{default_value_}]]]
}
class "class_method" as C_0000204145716468348671
class C_0000204145716468348671 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L28{class_method}]] {
+class_method() : void
+~class_method() = default : void
+is_pure_virtual() const : bool
+is_pure_virtual() : void
+is_virtual() const : bool
+is_virtual() : void
+is_const() const : bool
+is_const() : void
+is_defaulted() const : bool
+is_defaulted() : void
+is_static() const : bool
+is_static() : void
+parameters() const : const std::vector<method_parameter> &
+add_parameter() : void
-is_pure_virtual_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L55{is_pure_virtual_}]]]
-is_virtual_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L56{is_virtual_}]]]
-is_const_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L57{is_const_}]]]
-is_defaulted_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L58{is_defaulted_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_method.h#L59{is_static_}]]]
}
class "class_parent" as C_0002097158357956220758
class C_0002097158357956220758 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L27{class_parent}]] {
+set_name() : void
+name() const : std::string
+id() const : common::id_t
+set_id() : void
+set_id() : void
+is_virtual() : void
+is_virtual() const : bool
+set_access() : void
+access() const : common::model::access_t
-id_ : common::id_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L44{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L45{name_}]]]
-is_virtual_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class_parent.h#L46{is_virtual_}]]]
}
class "class_" as C_0001292034357466653182
class C_0001292034357466653182 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L35{class_}]] {
+class_() : void
+class_() : void
+class_() : void
+operator=() : class_diagram::model::class_ &
+operator=() : class_diagram::model::class_ &
+is_struct() const : bool
+is_struct() : void
+is_template() const : bool
+is_template() : void
+is_template_instantiation() const : bool
+is_template_instantiation() : void
+add_member() : void
+add_method() : void
+add_parent() : void
+add_template() : void
+members() const : const std::vector<class_member> &
+methods() const : const std::vector<class_method> &
+parents() const : const std::vector<class_parent> &
+templates() const : const std::vector<template_parameter> &
+set_base_template() : void
+base_template() const : std::string
+add_type_alias() : void
+full_name() const : std::string
+full_name_no_ns() const : std::string
+is_abstract() const : bool
+is_alias() const : bool
+is_alias() : void
+find_relationships() : void
+calculate_template_specialization_match() const : int
-render_template_params() const : std::ostringstream &
-is_struct_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L92{is_struct_}]]]
-is_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L93{is_template_}]]]
-is_template_instantiation_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L94{is_template_instantiation_}]]]
-is_alias_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L95{is_alias_}]]]
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L100{base_template_full_name_}]]]
-full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/class.h#L103{full_name_}]]]
}
class "enum_" as C_0000724392977093650506
class C_0000724392977093650506 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L27{enum_}]] {
+enum_() : void
+enum_() : void
+enum_() : void
+operator=() : class_diagram::model::enum_ &
+operator=() : class_diagram::model::enum_ &
+full_name() const : std::string
+constants() : std::vector<std::string> &
+constants() const : const std::vector<std::string> &
-constants_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/enum.h#L47{constants_}]]]
}
class "diagram" as C_0000914432076690777687
class C_0000914432076690777687 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/class_diagram/model/diagram.h#L34{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : class_diagram::model::diagram &
+operator=() = default : class_diagram::model::diagram &
+type() const : common::model::diagram_t
+get() const : common::optional_ref<common::model::diagram_element>
+get() const : common::optional_ref<common::model::diagram_element>
+classes() const : const common::reference_vector<class_> &
+enums() const : const common::reference_vector<enum_> &
+has_class() const : bool
+has_enum() const : bool
+get_class() const : common::optional_ref<class_>
+get_class() const : common::optional_ref<class_>
+get_enum() const : common::optional_ref<enum_>
+get_enum() const : common::optional_ref<enum_>
+add_type_alias() : void
+add_class() : bool
+add_enum() : bool
+add_package() : bool
+to_alias() const : std::string
+get_parents() const : void
+has_element() const : bool
}
}
}
package [common] as C_0000316605034920222648 {
package [model] as C_0000083721806430512831 {
enum "diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
}
enum "relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
}
enum "message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42{message_t}]] {
kCall
kReturn
}
class "decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<std::string>
+set_comment() : void
-comment_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55{comment_}]]]
}
class "source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+line() const : unsigned int
+set_line() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43{file_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44{line_}]]]
}
class "path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216{path_}]]]
}
class "ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29{value}]]]
}
class "path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30{style_}]]]
}
class "relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : common::model::relationship_t
+set_destination() : void
+destination() const : common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64{label_}]]]
}
class "diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81{complete_}]]]
{static} -m_nextId : std::atomic_uint64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83{m_nextId}]]]
}
class "nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element() : _Bool
+add_element() : _Bool
+get_element() : auto
+get_element_parent() : auto
+get_element() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171{elements_}]]]
}
enum "source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40{value}]]]
}
class "path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : common::model::source_file &
+operator=() : common::model::source_file &
+operator==() const : bool
+path() const : const common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : common::model::path<common::model::fs_path_sep>
+add_file() : void
+fs_path() const : std::filesystem::path
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120{is_absolute_}]]]
}
class "element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : common::model::namespace_
+get_relative_namespace() const : common::model::namespace_
+path() const : const common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+set_using_namespaces() : void
+using_namespace() const : const common::model::namespace_ &
+context() const : inja::json
}
abstract "diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : common::model::diagram_t
{abstract} +get() const = 0 : common::optional_ref<common::model::diagram_element>
{abstract} +get() const = 0 : common::optional_ref<common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : common::model::diagram &
+operator=() : common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80{complete_}]]]
}
class "package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : common::model::package &
+operator=() : common::model::package &
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54{is_deprecated_}]]]
}
class "diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L30{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include() : _Bool
}
enum "filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36{filter_t}]] {
kInclusive
kExclusive
}
class "filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : common::model::filter_t
}
class "anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123{elements_}]]]
}
class "subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134{roots_}]]]
}
class "edge_traversal_filter<DiagramT,ElementT,MatchOverrideT>" as C_0001412380775311155780
class C_0001412380775311155780 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274{initialized_}]]]
-matching_elements_ : common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276{forward_}]]]
}
class "relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311{context_}]]]
}
class "paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
}
}
}
C_0000605866861866358037 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0000605866861866358037
C_0000895261582183440230 <|- - C_0000605866861866358037
C_0000605866861866358037 <|- - C_0001796282762108527255
C_0001639764337680852102 o- - C_0001639764337680852102 : -template_params_
C_0001117102382624673118 <|- - C_0000605669033368926050
C_0000204145716468348671 o- - C_0000605669033368926050 : -parameters_
C_0000605866861866358037 <|- - C_0000204145716468348671
C_0002097158357956220758 o- - C_0002077031342744882956 : -access_
C_0001292034357466653182 o- - C_0001796282762108527255 : -members_
C_0001292034357466653182 o- - C_0000204145716468348671 : -methods_
C_0001292034357466653182 o- - C_0002097158357956220758 : -bases_
C_0001292034357466653182 o- - C_0001639764337680852102 : -templates_
C_0001292034357466653182 o- - C_0001012510589658886782 : -type_aliases_
C_0002069520381434407937 <|- - C_0001292034357466653182
C_0002077846075979426940 <|- - C_0001292034357466653182
C_0002069520381434407937 <|- - C_0000724392977093650506
C_0002077846075979426940 <|- - C_0000724392977093650506
C_0000914432076690777687 o- - C_0001292034357466653182 : -classes_
C_0000914432076690777687 o- - C_0000724392977093650506 : -enums_
C_0000914432076690777687 o- - C_0001012510589658886782 : -type_aliases_
C_0000197068985320835874 <|- - C_0000914432076690777687
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000895261582183440230 <|- - C_0000785714713072053129
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000895261582183440230 <|- - C_0002069520381434407937
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0001412380775311155780 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001412380775311155780
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>