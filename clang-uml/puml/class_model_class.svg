<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4120px" preserveAspectRatio="none" style="width:6511px;height:4120px;" version="1.1" viewBox="0 0 6511 4120" width="6511px" zoomAndPan="magnify"><defs><filter height="300%" id="f2plqtv20eqfa" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="271" x="3078.5" y="16.708">clang-uml class diagram model</text><!--MD5=[7ba9c127878a642fef3f451151dda753]
cluster C_0000316605034920222648--><polygon fill="#FFFFFF" filter="url(#f2plqtv20eqfa)" points="22,44.9531,95,44.9531,102,67.25,5155,67.25,5155,3850.9531,22,3850.9531,22,44.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="102" y1="67.25" y2="67.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="67" x="26" y="59.9482">common</text><!--MD5=[f7110622f5be760311cd0491b75bf8f9]
cluster C_0000083721806430512831--><polygon fill="#FFFFFF" filter="url(#f2plqtv20eqfa)" points="46,87.9531,100,87.9531,107,110.25,5131,110.25,5131,3826.9531,46,3826.9531,46,87.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="46" x2="107" y1="110.25" y2="110.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="50" y="102.9482">model</text><!--MD5=[09e992b259734a9820adb2642bf347d2]
cluster C_0002240167036201725606--><polygon fill="#FFFFFF" filter="url(#f2plqtv20eqfa)" points="5179,1451.9531,5295,1451.9531,5302,1474.25,6340,1474.25,6340,4108.9531,5179,4108.9531,5179,1451.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="5179" x2="5302" y1="1474.25" y2="1474.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="110" x="5183" y="1466.9482">class_diagram</text><!--MD5=[5d123d1ba3dda692cf099252127394e7]
cluster C_0000897124234964432620--><polygon fill="#FFFFFF" filter="url(#f2plqtv20eqfa)" points="5203,1494.9531,5257,1494.9531,5264,1517.25,6316,1517.25,6316,4084.9531,5203,4084.9531,5203,1494.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="5203" x2="5264" y1="1517.25" y2="1517.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="5207" y="1509.9482">model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="777" y="238.4531"/><ellipse cx="792" cy="254.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M796.1094,260.4531 L788.3906,260.4531 L788.3906,248.0625 L796.1094,248.0625 L796.1094,250.2188 L790.8438,250.2188 L790.8438,252.8906 L795.6094,252.8906 L795.6094,255.0469 L790.8438,255.0469 L790.8438,258.2969 L796.1094,258.2969 L796.1094,260.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="806" y="258.6074">diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="778" x2="870" y1="270.4531" y2="270.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="783" y="284.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="783" y="297.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="783" y="310.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="783" y="323.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="778" x2="870" y1="329.6719" y2="329.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="87" x="4338.5" y="2800.9531"/><ellipse cx="4353.5" cy="2816.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4357.6094,2822.9531 L4349.8906,2822.9531 L4349.8906,2810.5625 L4357.6094,2810.5625 L4357.6094,2812.7188 L4352.3438,2812.7188 L4352.3438,2815.3906 L4357.1094,2815.3906 L4357.1094,2817.5469 L4352.3438,2817.5469 L4352.3438,2820.7969 L4357.6094,2820.7969 L4357.6094,2822.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="4367.5" y="2821.1074">access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4339.5" x2="4424.5" y1="2832.9531" y2="2832.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="4344.5" y="2847.1636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4344.5" y="2859.9683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="4344.5" y="2872.7729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="4344.5" y="2885.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4339.5" x2="4424.5" y1="2892.1719" y2="2892.1719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="1062.5" y="2749.4531"/><ellipse cx="1077.5" cy="2765.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1081.6094,2771.4531 L1073.8906,2771.4531 L1073.8906,2759.0625 L1081.6094,2759.0625 L1081.6094,2761.2188 L1076.3438,2761.2188 L1076.3438,2763.8906 L1081.1094,2763.8906 L1081.1094,2766.0469 L1076.3438,2766.0469 L1076.3438,2769.2969 L1081.6094,2769.2969 L1081.6094,2771.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="1091.5" y="2769.6074">relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.5" x2="1178.5" y1="2781.4531" y2="2781.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1068.5" y="2795.6636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1068.5" y="2808.4683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1068.5" y="2821.2729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="1068.5" y="2834.0776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1068.5" y="2846.8823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1068.5" y="2859.687">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1068.5" y="2872.4917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1068.5" y="2885.2964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="1068.5" y="2898.1011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1068.5" y="2910.9058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1068.5" y="2923.7104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="1068.5" y="2936.5151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.5" x2="1178.5" y1="2943.1094" y2="2943.1094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="906.5" y="122.9531"/><ellipse cx="923.75" cy="138.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M927.8594,144.9531 L920.1406,144.9531 L920.1406,132.5625 L927.8594,132.5625 L927.8594,134.7188 L922.5938,134.7188 L922.5938,137.3906 L927.3594,137.3906 L927.3594,139.5469 L922.5938,139.5469 L922.5938,142.7969 L927.8594,142.7969 L927.8594,144.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="938.25" y="143.1074">message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="907.5" x2="1010.5" y1="154.9531" y2="154.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="912.5" y="169.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="912.5" y="181.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="912.5" y="194.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="912.5" y="207.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="912.5" y="220.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="912.5" y="233.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="912.5" y="245.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="912.5" y="258.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="912.5" y="271.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="912.5" y="284.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="912.5" y="297.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="912.5" y="310.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="912.5" y="322.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="912.5" y="335.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="912.5" y="348.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="912.5" y="361.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="912.5" y="374.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="912.5" y="386.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="912.5" y="399.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="912.5" y="412.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="912.5" y="425.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="912.5" y="438.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="907.5" x2="1010.5" y1="444.6563" y2="444.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="144" x="1047" y="250.9531"/><ellipse cx="1062" cy="266.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1066.1094,272.9531 L1058.3906,272.9531 L1058.3906,260.5625 L1066.1094,260.5625 L1066.1094,262.7188 L1060.8438,262.7188 L1060.8438,265.3906 L1065.6094,265.3906 L1065.6094,267.5469 L1060.8438,267.5469 L1060.8438,270.7969 L1066.1094,270.7969 L1066.1094,272.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1076" y="271.1074">message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1048" x2="1190" y1="282.9531" y2="282.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1053" y="297.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="1053" y="309.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1048" x2="1190" y1="316.5625" y2="316.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="4026" y="193.4531"/><ellipse cx="4211.75" cy="209.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4214.7188,215.0938 Q4214.1406,215.3906 4213.5,215.5313 Q4212.8594,215.6875 4212.1563,215.6875 Q4209.6563,215.6875 4208.3281,214.0469 Q4207.0156,212.3906 4207.0156,209.2656 Q4207.0156,206.1406 4208.3281,204.4844 Q4209.6563,202.8281 4212.1563,202.8281 Q4212.8594,202.8281 4213.5,202.9844 Q4214.1563,203.1406 4214.7188,203.4375 L4214.7188,206.1563 Q4214.0938,205.5781 4213.5,205.3125 Q4212.9063,205.0313 4212.2813,205.0313 Q4210.9375,205.0313 4210.25,206.1094 Q4209.5625,207.1719 4209.5625,209.2656 Q4209.5625,211.3594 4210.25,212.4375 Q4210.9375,213.5 4212.2813,213.5 Q4212.9063,213.5 4213.5,213.2344 Q4214.0938,212.9531 4214.7188,212.375 L4214.7188,215.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="4232.25" y="213.6074">decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4027" x2="4527" y1="225.4531" y2="225.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4032" y="231.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4034" y="233.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="4046" y="239.6636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4032" y="244.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4034" y="246.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4046" y="252.4683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4027" x2="4527" y1="259.0625" y2="259.0625"/><ellipse cx="4037" cy="270.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4046" y="273.2729">skip() const : bool</text><ellipse cx="4037" cy="282.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4046" y="286.0776">skip_relationship() const : bool</text><ellipse cx="4037" cy="295.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="4046" y="298.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="4037" cy="308.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4046" y="311.687">style_spec() const : std::string</text><ellipse cx="4037" cy="321.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="4046" y="324.4917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="4037" cy="334.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4046" y="337.2964">add_decorators() : void</text><ellipse cx="4037" cy="346.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4046" y="350.1011">append() : void</text><ellipse cx="4037" cy="359.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4046" y="362.9058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="4037" cy="372.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="4046" y="375.7104">set_comment() : void</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="3485" y="174.4531"/><ellipse cx="3558.25" cy="190.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3561.2188,196.0938 Q3560.6406,196.3906 3560,196.5313 Q3559.3594,196.6875 3558.6563,196.6875 Q3556.1563,196.6875 3554.8281,195.0469 Q3553.5156,193.3906 3553.5156,190.2656 Q3553.5156,187.1406 3554.8281,185.4844 Q3556.1563,183.8281 3558.6563,183.8281 Q3559.3594,183.8281 3560,183.9844 Q3560.6563,184.1406 3561.2188,184.4375 L3561.2188,187.1563 Q3560.5938,186.5781 3560,186.3125 Q3559.4063,186.0313 3558.7813,186.0313 Q3557.4375,186.0313 3556.75,187.1094 Q3556.0625,188.1719 3556.0625,190.2656 Q3556.0625,192.3594 3556.75,193.4375 Q3557.4375,194.5 3558.7813,194.5 Q3559.4063,194.5 3560,194.2344 Q3560.5938,193.9531 3561.2188,193.375 L3561.2188,196.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="3578.75" y="194.6074">source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3486" x2="3738" y1="206.4531" y2="206.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3491" y="212.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3493" y="214.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3505" y="220.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3491" y="225.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3493" y="227.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3505" y="233.4683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3491" y="238.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3493" y="240.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3505" y="246.2729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3491" y="250.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3493" y="252.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3505" y="259.0776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3486" x2="3738" y1="265.6719" y2="265.6719"/><ellipse cx="3496" cy="276.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="3505" y="279.8823">source_location() = default : void</text><ellipse cx="3496" cy="289.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3505" y="292.687">source_location() : void</text><ellipse cx="3496" cy="302.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3505" y="305.4917">file() const : const std::string &amp;</text><ellipse cx="3496" cy="315.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3505" y="318.2964">set_file() : void</text><ellipse cx="3496" cy="327.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="3505" y="331.1011">file_relative() const : const std::string &amp;</text><ellipse cx="3496" cy="340.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3505" y="343.9058">set_file_relative() : void</text><ellipse cx="3496" cy="353.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3505" y="356.7104">line() const : unsigned int</text><ellipse cx="3496" cy="366.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="3505" y="369.5151">set_line() : void</text><ellipse cx="3496" cy="379.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="3505" y="382.3198">location_id() const : unsigned int</text><ellipse cx="3496" cy="391.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3505" y="395.1245">set_location_id() : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="3727.5" y="3314.9531"/><ellipse cx="3945.25" cy="3330.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3948.2188,3336.5938 Q3947.6406,3336.8906 3947,3337.0313 Q3946.3594,3337.1875 3945.6563,3337.1875 Q3943.1563,3337.1875 3941.8281,3335.5469 Q3940.5156,3333.8906 3940.5156,3330.7656 Q3940.5156,3327.6406 3941.8281,3325.9844 Q3943.1563,3324.3281 3945.6563,3324.3281 Q3946.3594,3324.3281 3947,3324.4844 Q3947.6563,3324.6406 3948.2188,3324.9375 L3948.2188,3327.6563 Q3947.5938,3327.0781 3947,3326.8125 Q3946.4063,3326.5313 3945.7813,3326.5313 Q3944.4375,3326.5313 3943.75,3327.6094 Q3943.0625,3328.6719 3943.0625,3330.7656 Q3943.0625,3332.8594 3943.75,3333.9375 Q3944.4375,3335 3945.7813,3335 Q3946.4063,3335 3947,3334.7344 Q3947.5938,3334.4531 3948.2188,3333.875 L3948.2188,3336.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="3965.75" y="3335.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="4205.5" y="3311.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="4206.5" y="3324.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3728.5" x2="4227.5" y1="3346.9531" y2="3346.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3733.5" y="3352.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3735.5" y="3354.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="3747.5" y="3361.1636">path_ : common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3728.5" x2="4227.5" y1="3367.7578" y2="3367.7578"/><ellipse cx="3738.5" cy="3378.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3747.5" y="3381.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="3738.5" cy="3391.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3747.5" y="3394.7729">path&lt;Sep&gt;() : void</text><ellipse cx="3738.5" cy="3404.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3747.5" y="3407.5776">path&lt;Sep&gt;() : void</text><ellipse cx="3738.5" cy="3417.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3747.5" y="3420.3823">path&lt;Sep&gt;() : void</text><ellipse cx="3738.5" cy="3429.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="3747.5" y="3433.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="3738.5" cy="3442.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3747.5" y="3445.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="3738.5" cy="3455.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="3747.5" y="3458.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="3738.5" cy="3468.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3747.5" y="3471.6011">path&lt;Sep&gt;() : void</text><ellipse cx="3738.5" cy="3481.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3747.5" y="3484.4058">path&lt;Sep&gt;() : void</text><ellipse cx="3738.5" cy="3494" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3747.5" y="3497.2104">to_string() const : std::string</text><ellipse cx="3738.5" cy="3506.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3747.5" y="3510.0151">is_empty() const : bool</text><ellipse cx="3738.5" cy="3519.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3747.5" y="3522.8198">size() const : size_t</text><ellipse cx="3738.5" cy="3532.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="3747.5" y="3535.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="3738.5" cy="3545.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3747.5" y="3548.4292">operator|=() : void</text><ellipse cx="3738.5" cy="3558.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="3747.5" y="3561.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="3738.5" cy="3570.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3747.5" y="3574.0386">operator|=() : void</text><ellipse cx="3738.5" cy="3583.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="3747.5" y="3586.8433">operator[]() : std::string &amp;</text><ellipse cx="3738.5" cy="3596.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="3747.5" y="3599.6479">operator[]() const : const std::string &amp;</text><ellipse cx="3738.5" cy="3609.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3747.5" y="3612.4526">append() : void</text><ellipse cx="3738.5" cy="3622.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3747.5" y="3625.2573">append() : void</text><ellipse cx="3738.5" cy="3634.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="3747.5" y="3638.062">pop_back() : void</text><ellipse cx="3738.5" cy="3647.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="3747.5" y="3650.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="3738.5" cy="3660.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3747.5" y="3663.6714">starts_with() const : bool</text><ellipse cx="3738.5" cy="3673.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3747.5" y="3676.4761">ends_with() const : bool</text><ellipse cx="3738.5" cy="3686.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3747.5" y="3689.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="3738.5" cy="3698.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3747.5" y="3702.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="3738.5" cy="3711.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3747.5" y="3714.8901">relative() const : std::string</text><ellipse cx="3738.5" cy="3724.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3747.5" y="3727.6948">name() const : std::string</text><ellipse cx="3738.5" cy="3737.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="3747.5" y="3740.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="3738.5" cy="3750.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="3747.5" y="3753.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="3738.5" cy="3762.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="3747.5" y="3766.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="3738.5" cy="3775.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="3747.5" y="3778.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="3738.5" cy="3788.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="3747.5" y="3791.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="3738.5" cy="3801.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="3747.5" y="3804.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="727.5" y="952.4531"/><ellipse cx="761.85" cy="968.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M764.8188,974.0938 Q764.2406,974.3906 763.6,974.5313 Q762.9594,974.6875 762.2563,974.6875 Q759.7563,974.6875 758.4281,973.0469 Q757.1156,971.3906 757.1156,968.2656 Q757.1156,965.1406 758.4281,963.4844 Q759.7563,961.8281 762.2563,961.8281 Q762.9594,961.8281 763.6,961.9844 Q764.2563,962.1406 764.8188,962.4375 L764.8188,965.1563 Q764.1938,964.5781 763.6,964.3125 Q763.0063,964.0313 762.3813,964.0313 Q761.0375,964.0313 760.35,965.1094 Q759.6625,966.1719 759.6625,968.2656 Q759.6625,970.3594 760.35,971.4375 Q761.0375,972.5 762.3813,972.5 Q763.0063,972.5 763.6,972.2344 Q764.1938,971.9531 764.8188,971.375 L764.8188,974.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="780.15" y="972.6074">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="728.5" x2="919.5" y1="984.4531" y2="984.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="733.5" y="990.4531"/><ellipse cx="738.5" cy="995.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="747.5" y="998.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="728.5" x2="919.5" y1="1005.2578" y2="1005.2578"/><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="4912.5" y="2049.9531"/><ellipse cx="4927.5" cy="2065.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4931.6094,2071.9531 L4923.8906,2071.9531 L4923.8906,2059.5625 L4931.6094,2059.5625 L4931.6094,2061.7188 L4926.3438,2061.7188 L4926.3438,2064.3906 L4931.1094,2064.3906 L4931.1094,2066.5469 L4926.3438,2066.5469 L4926.3438,2069.7969 L4931.6094,2069.7969 L4931.6094,2071.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="4941.5" y="2070.1074">template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4913.5" x2="5114.5" y1="2081.9531" y2="2081.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4918.5" y="2096.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4918.5" y="2108.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4918.5" y="2121.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="4918.5" y="2134.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4918.5" y="2147.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4913.5" x2="5114.5" y1="2153.9766" y2="2153.9766"/></a><!--MD5=[90017e9468cbeb0bc9373ae936737720]
class C_0002193110380171976294--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" target="_top" title="rpqualifier" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" xlink:show="new" xlink:title="rpqualifier" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.5;" width="113" x="4760.5" y="2800.9531"/><ellipse cx="4783.6" cy="2816.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4787.7094,2822.9531 L4779.9906,2822.9531 L4779.9906,2810.5625 L4787.7094,2810.5625 L4787.7094,2812.7188 L4782.4438,2812.7188 L4782.4438,2815.3906 L4787.2094,2815.3906 L4787.2094,2817.5469 L4782.4438,2817.5469 L4782.4438,2820.7969 L4787.7094,2820.7969 L4787.7094,2822.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="4799.4" y="2821.1074">rpqualifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4761.5" x2="4872.5" y1="2832.9531" y2="2832.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4766.5" y="2847.1636">kLValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4766.5" y="2859.9683">kRValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="4766.5" y="2872.7729">kPointer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="4766.5" y="2885.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4761.5" x2="4872.5" y1="2892.1719" y2="2892.1719"/></a><!--MD5=[5e78f8fc55e497bc4b976d966927ffe8]
class C_0000845978329661395972--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" target="_top" title="context" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="137.6328" id="C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.5;" width="190" x="4687" y="2036.9531"/><ellipse cx="4754.25" cy="2052.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4757.2188,2058.5938 Q4756.6406,2058.8906 4756,2059.0313 Q4755.3594,2059.1875 4754.6563,2059.1875 Q4752.1563,2059.1875 4750.8281,2057.5469 Q4749.5156,2055.8906 4749.5156,2052.7656 Q4749.5156,2049.6406 4750.8281,2047.9844 Q4752.1563,2046.3281 4754.6563,2046.3281 Q4755.3594,2046.3281 4756,2046.4844 Q4756.6563,2046.6406 4757.2188,2046.9375 L4757.2188,2049.6563 Q4756.5938,2049.0781 4756,2048.8125 Q4755.4063,2048.5313 4754.7813,2048.5313 Q4753.4375,2048.5313 4752.75,2049.6094 Q4752.0625,2050.6719 4752.0625,2052.7656 Q4752.0625,2054.8594 4752.75,2055.9375 Q4753.4375,2057 4754.7813,2057 Q4755.4063,2057 4756,2056.7344 Q4756.5938,2056.4531 4757.2188,2055.875 L4757.2188,2058.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="4774.75" y="2057.1074">context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4688" x2="4876" y1="2068.9531" y2="2068.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4693" y="2074.9531"/><ellipse cx="4698" cy="2079.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="4707" y="2083.1636">is_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4693" y="2087.7578"/><ellipse cx="4698" cy="2092.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="4707" y="2095.9683">is_volatile : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4693" y="2100.5625"/><ellipse cx="4698" cy="2105.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4707" y="2108.7729">is_ref_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4693" y="2113.3672"/><ellipse cx="4698" cy="2118.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4707" y="2121.5776">is_ref_volatile : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4688" x2="4876" y1="2128.1719" y2="2128.1719"/><ellipse cx="4698" cy="2139.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4707" y="2142.3823">to_string() const : std::string</text><ellipse cx="4698" cy="2151.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4707" y="2155.187">operator==() const : bool</text><ellipse cx="4698" cy="2164.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4707" y="2167.9917">operator!=() const : bool</text><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3985" y="2826.4531"/><ellipse cx="4000" cy="2842.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4002.9688,2848.0938 Q4002.3906,2848.3906 4001.75,2848.5313 Q4001.1094,2848.6875 4000.4063,2848.6875 Q3997.9063,2848.6875 3996.5781,2847.0469 Q3995.2656,2845.3906 3995.2656,2842.2656 Q3995.2656,2839.1406 3996.5781,2837.4844 Q3997.9063,2835.8281 4000.4063,2835.8281 Q4001.1094,2835.8281 4001.75,2835.9844 Q4002.4063,2836.1406 4002.9688,2836.4375 L4002.9688,2839.1563 Q4002.3438,2838.5781 4001.75,2838.3125 Q4001.1563,2838.0313 4000.5313,2838.0313 Q3999.1875,2838.0313 3998.5,2839.1094 Q3997.8125,2840.1719 3997.8125,2842.2656 Q3997.8125,2844.3594 3998.5,2845.4375 Q3999.1875,2846.5 4000.5313,2846.5 Q4001.1563,2846.5 4001.75,2846.2344 Q4002.3438,2845.9531 4002.9688,2845.375 L4002.9688,2848.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="4014" y="2846.6074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="225" x="4051" y="2823.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="4052" y="2835.5918">common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3986" x2="4272" y1="2858.4531" y2="2858.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3986" x2="4272" y1="2866.4531" y2="2866.4531"/><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="905.9141" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="3940.5" y="529.9531"/><ellipse cx="4089.75" cy="545.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4092.7188,551.5938 Q4092.1406,551.8906 4091.5,552.0313 Q4090.8594,552.1875 4090.1563,552.1875 Q4087.6563,552.1875 4086.3281,550.5469 Q4085.0156,548.8906 4085.0156,545.7656 Q4085.0156,542.6406 4086.3281,540.9844 Q4087.6563,539.3281 4090.1563,539.3281 Q4090.8594,539.3281 4091.5,539.4844 Q4092.1563,539.6406 4092.7188,539.9375 L4092.7188,542.6563 Q4092.0938,542.0781 4091.5,541.8125 Q4090.9063,541.5313 4090.2813,541.5313 Q4088.9375,541.5313 4088.25,542.6094 Q4087.5625,543.6719 4087.5625,545.7656 Q4087.5625,547.8594 4088.25,548.9375 Q4088.9375,550 4090.2813,550 Q4090.9063,550 4091.5,549.7344 Q4092.0938,549.4531 4092.7188,548.875 L4092.7188,551.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="4110.25" y="550.1074">template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3941.5" x2="4374.5" y1="561.9531" y2="561.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="567.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="569.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3960.5" y="576.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="580.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="582.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="3960.5" y="588.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="593.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="595.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="3960.5" y="601.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="606.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="608.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3960.5" y="614.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="619.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="621.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="3960.5" y="627.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="631.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="633.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3960.5" y="640.187">is_ellipsis_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="644.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="646.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3960.5" y="652.9917">is_noexcept_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="657.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="659.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3960.5" y="665.7964">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="670.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="672.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3960.5" y="678.6011">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="683.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="685.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="3960.5" y="691.4058">is_data_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="696"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="698"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3960.5" y="704.2104">is_member_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="708.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="710.8047"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="3960.5" y="717.0151">is_array_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="721.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="723.6094"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="3960.5" y="729.8198">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="734.4141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="736.4141"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3960.5" y="742.6245">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.5" y="747.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="749.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3960.5" y="755.4292">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3941.5" x2="4374.5" y1="762.0234" y2="762.0234"/><ellipse cx="3951.5" cy="773.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="353" x="3960.5" y="776.2339">make_template_type() : common::model::template_parameter</text><ellipse cx="3951.5" cy="785.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="409" x="3960.5" y="789.0386">make_template_template_type() : common::model::template_parameter</text><ellipse cx="3951.5" cy="798.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="380" x="3960.5" y="801.8433">make_non_type_template() : common::model::template_parameter</text><ellipse cx="3951.5" cy="811.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="328" x="3960.5" y="814.6479">make_argument() : common::model::template_parameter</text><ellipse cx="3951.5" cy="824.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="396" x="3960.5" y="827.4526">make_unexposed_argument() : common::model::template_parameter</text><ellipse cx="3951.5" cy="837.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3960.5" y="840.2573">set_type() : void</text><ellipse cx="3951.5" cy="849.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="3960.5" y="853.062">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="3951.5" cy="862.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3960.5" y="865.8667">set_id() : void</text><ellipse cx="3951.5" cy="875.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="3960.5" y="878.6714">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="3951.5" cy="888.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3960.5" y="891.4761">set_name() : void</text><ellipse cx="3951.5" cy="901.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="3960.5" y="904.2808">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="3951.5" cy="913.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3960.5" y="917.0854">set_default_value() : void</text><ellipse cx="3951.5" cy="926.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="3960.5" y="929.8901">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="3951.5" cy="939.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="3960.5" y="942.6948">is_variadic() : void</text><ellipse cx="3951.5" cy="952.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="3960.5" y="955.4995">is_variadic() const : bool</text><ellipse cx="3951.5" cy="965.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3960.5" y="968.3042">calculate_specialization_match() const : int</text><ellipse cx="3951.5" cy="977.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="3960.5" y="981.1089">is_template_parameter() const : bool</text><ellipse cx="3951.5" cy="990.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3960.5" y="993.9136">is_template_parameter() : void</text><ellipse cx="3951.5" cy="1003.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="3960.5" y="1006.7183">is_template_template_parameter() const : bool</text><ellipse cx="3951.5" cy="1016.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="3960.5" y="1019.5229">is_template_template_parameter() : void</text><ellipse cx="3951.5" cy="1029.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3960.5" y="1032.3276">to_string() const : std::string</text><ellipse cx="3951.5" cy="1041.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3960.5" y="1045.1323">add_template_param() : void</text><ellipse cx="3951.5" cy="1054.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3960.5" y="1057.937">add_template_param() : void</text><ellipse cx="3951.5" cy="1067.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="3960.5" y="1070.7417">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="3951.5" cy="1080.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3960.5" y="1083.5464">clear_params() : void</text><ellipse cx="3951.5" cy="1093.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3960.5" y="1096.3511">is_association() const : bool</text><ellipse cx="3951.5" cy="1105.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3960.5" y="1109.1558">is_specialization() const : bool</text><ellipse cx="3951.5" cy="1118.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3960.5" y="1121.9604">is_same_specialization() const : bool</text><ellipse cx="3951.5" cy="1131.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="3960.5" y="1134.7651">find_nested_relationships() const : bool</text><ellipse cx="3951.5" cy="1144.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3960.5" y="1147.5698">set_concept_constraint() : void</text><ellipse cx="3951.5" cy="1157.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="3960.5" y="1160.3745">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="3951.5" cy="1169.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="3960.5" y="1173.1792">kind() const : common::model::template_parameter_kind_t</text><ellipse cx="3951.5" cy="1182.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3960.5" y="1185.9839">set_kind() : void</text><ellipse cx="3951.5" cy="1195.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3960.5" y="1198.7886">is_unexposed() const : bool</text><ellipse cx="3951.5" cy="1208.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="3960.5" y="1211.5933">set_unexposed() : void</text><ellipse cx="3951.5" cy="1221.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3960.5" y="1224.3979">is_function_template() : void</text><ellipse cx="3951.5" cy="1233.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="3960.5" y="1237.2026">is_function_template() const : bool</text><ellipse cx="3951.5" cy="1246.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3960.5" y="1250.0073">is_member_pointer() : void</text><ellipse cx="3951.5" cy="1259.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="3960.5" y="1262.812">is_member_pointer() const : bool</text><ellipse cx="3951.5" cy="1272.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3960.5" y="1275.6167">is_data_pointer() : void</text><ellipse cx="3951.5" cy="1285.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3960.5" y="1288.4214">is_data_pointer() const : bool</text><ellipse cx="3951.5" cy="1298.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="3960.5" y="1301.2261">is_array() : void</text><ellipse cx="3951.5" cy="1310.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3960.5" y="1314.0308">is_array() const : bool</text><ellipse cx="3951.5" cy="1323.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="3960.5" y="1326.8354">push_context() : void</text><ellipse cx="3951.5" cy="1336.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="3960.5" y="1339.6401">deduced_context() const : const std::deque&lt;context&gt; &amp;</text><ellipse cx="3951.5" cy="1349.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="3960.5" y="1352.4448">deduced_context() : void</text><ellipse cx="3951.5" cy="1362.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3960.5" y="1365.2495">is_ellipsis() : void</text><ellipse cx="3951.5" cy="1374.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3960.5" y="1378.0542">is_ellipsis() const : bool</text><ellipse cx="3951.5" cy="1387.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3960.5" y="1390.8589">is_noexcept() : void</text><ellipse cx="3951.5" cy="1400.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3960.5" y="1403.6636">is_noexcept() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="1410.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="3960.5" y="1416.4683">template_parameter() = default : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="1423.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="3960.5" y="1429.2729">deduced_context_str() const : std::string</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="167" x="3738.5" y="939.9531"/><ellipse cx="3767" cy="955.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3769.9688,961.5938 Q3769.3906,961.8906 3768.75,962.0313 Q3768.1094,962.1875 3767.4063,962.1875 Q3764.9063,962.1875 3763.5781,960.5469 Q3762.2656,958.8906 3762.2656,955.7656 Q3762.2656,952.6406 3763.5781,950.9844 Q3764.9063,949.3281 3767.4063,949.3281 Q3768.1094,949.3281 3768.75,949.4844 Q3769.4063,949.6406 3769.9688,949.9375 L3769.9688,952.6563 Q3769.3438,952.0781 3768.75,951.8125 Q3768.1563,951.5313 3767.5313,951.5313 Q3766.1875,951.5313 3765.5,952.6094 Q3764.8125,953.6719 3764.8125,955.7656 Q3764.8125,957.8594 3765.5,958.9375 Q3766.1875,960 3767.5313,960 Q3768.1563,960 3768.75,959.7344 Q3769.3438,959.4531 3769.9688,958.875 L3769.9688,961.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="3784" y="960.1074">stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3739.5" x2="3904.5" y1="971.9531" y2="971.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3744.5" y="977.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3746.5" y="979.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3758.5" y="986.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3739.5" x2="3904.5" y1="992.7578" y2="992.7578"/><ellipse cx="3749.5" cy="1003.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3758.5" y="1006.9683">set_style() : void</text><ellipse cx="3749.5" cy="1016.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3758.5" y="1019.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="282" x="3892" y="1966.9531"/><ellipse cx="3991.75" cy="1982.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3994.7188,1988.5938 Q3994.1406,1988.8906 3993.5,1989.0313 Q3992.8594,1989.1875 3992.1563,1989.1875 Q3989.6563,1989.1875 3988.3281,1987.5469 Q3987.0156,1985.8906 3987.0156,1982.7656 Q3987.0156,1979.6406 3988.3281,1977.9844 Q3989.6563,1976.3281 3992.1563,1976.3281 Q3992.8594,1976.3281 3993.5,1976.4844 Q3994.1563,1976.6406 3994.7188,1976.9375 L3994.7188,1979.6563 Q3994.0938,1979.0781 3993.5,1978.8125 Q3992.9063,1978.5313 3992.2813,1978.5313 Q3990.9375,1978.5313 3990.25,1979.6094 Q3989.5625,1980.6719 3989.5625,1982.7656 Q3989.5625,1984.8594 3990.25,1985.9375 Q3990.9375,1987 3992.2813,1987 Q3992.9063,1987 3993.5,1986.7344 Q3994.0938,1986.4531 3994.7188,1985.875 L3994.7188,1988.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="4012.25" y="1987.1074">relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3893" x2="4173" y1="1998.9531" y2="1998.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3898" y="2004.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3900" y="2006.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3912" y="2013.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3898" y="2017.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3900" y="2019.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3912" y="2025.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3898" y="2030.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3900" y="2032.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3912" y="2038.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3898" y="2043.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3900" y="2045.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3912" y="2051.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3893" x2="4173" y1="2058.1719" y2="2058.1719"/><ellipse cx="3903" cy="2069.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3912" y="2072.3823">relationship() : void</text><ellipse cx="3903" cy="2081.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3912" y="2085.187">~relationship() = default : void</text><ellipse cx="3903" cy="2094.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3912" y="2097.9917">set_type() : void</text><ellipse cx="3903" cy="2107.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3912" y="2110.7964">type() const : common::model::relationship_t</text><ellipse cx="3903" cy="2120.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3912" y="2123.6011">set_destination() : void</text><ellipse cx="3903" cy="2133.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3912" y="2136.4058">destination() const : common::id_t</text><ellipse cx="3903" cy="2146" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="3912" y="2149.2104">set_multiplicity_source() : void</text><ellipse cx="3903" cy="2158.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3912" y="2162.0151">multiplicity_source() const : std::string</text><ellipse cx="3903" cy="2171.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="3912" y="2174.8198">set_multiplicity_destination() : void</text><ellipse cx="3903" cy="2184.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="3912" y="2187.6245">multiplicity_destination() const : std::string</text><ellipse cx="3903" cy="2197.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3912" y="2200.4292">set_label() : void</text><ellipse cx="3903" cy="2210.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3912" y="2213.2339">label() const : std::string</text><ellipse cx="3903" cy="2222.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3912" y="2226.0386">set_access() : void</text><ellipse cx="3903" cy="2235.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="3912" y="2238.8433">access() const : common::model::access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="3317" y="817.9531"/><ellipse cx="3433.75" cy="833.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3436.7188,839.5938 Q3436.1406,839.8906 3435.5,840.0313 Q3434.8594,840.1875 3434.1563,840.1875 Q3431.6563,840.1875 3430.3281,838.5469 Q3429.0156,836.8906 3429.0156,833.7656 Q3429.0156,830.6406 3430.3281,828.9844 Q3431.6563,827.3281 3434.1563,827.3281 Q3434.8594,827.3281 3435.5,827.4844 Q3436.1563,827.6406 3436.7188,827.9375 L3436.7188,830.6563 Q3436.0938,830.0781 3435.5,829.8125 Q3434.9063,829.5313 3434.2813,829.5313 Q3432.9375,829.5313 3432.25,830.6094 Q3431.5625,831.6719 3431.5625,833.7656 Q3431.5625,835.8594 3432.25,836.9375 Q3432.9375,838 3434.2813,838 Q3434.9063,838 3435.5,837.7344 Q3436.0938,837.4531 3436.7188,836.875 L3436.7188,839.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="3454.25" y="838.1074">diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3318" x2="3666" y1="849.9531" y2="849.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3323" y="855.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3325" y="857.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="3337" y="864.1636">id_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3323" y="868.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3325" y="870.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3337" y="876.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3323" y="881.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3325" y="883.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3337" y="889.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3323" y="894.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3325" y="896.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3337" y="902.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3318" x2="3666" y1="909.1719" y2="909.1719"/><ellipse cx="3328" cy="920.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3337" y="923.3823">diagram_element() : void</text><ellipse cx="3328" cy="932.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="3337" y="936.187">~diagram_element() = default : void</text><ellipse cx="3328" cy="945.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="3337" y="948.9917">id() const : common::model::diagram_element::id_t</text><ellipse cx="3328" cy="958.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3337" y="961.7964">set_id() : void</text><ellipse cx="3328" cy="971.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3337" y="974.6011">alias() const : std::string</text><ellipse cx="3328" cy="984.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3337" y="987.4058">set_name() : void</text><ellipse cx="3328" cy="997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3337" y="1000.2104">name() const : std::string</text><ellipse cx="3328" cy="1009.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="3337" y="1013.0151">type_name() const : std::string</text><ellipse cx="3328" cy="1022.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3337" y="1025.8198">full_name() const : std::string</text><ellipse cx="3328" cy="1035.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3337" y="1038.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="3328" cy="1048.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="3337" y="1051.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="3328" cy="1061.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="3337" y="1064.2339">add_relationship() : void</text><ellipse cx="3328" cy="1073.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3337" y="1077.0386">append() : void</text><ellipse cx="3328" cy="1086.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3337" y="1089.8433">context() const : inja::json</text><ellipse cx="3328" cy="1099.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3337" y="1102.6479">is_nested() const : bool</text><ellipse cx="3328" cy="1112.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3337" y="1115.4526">nested() : void</text><ellipse cx="3328" cy="1125.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3337" y="1128.2573">complete() const : bool</text><ellipse cx="3328" cy="1137.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3337" y="1141.062">complete() : void</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="405" x="4209.5" y="2011.4531"/><ellipse cx="4382.25" cy="2027.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4385.2188,2033.0938 Q4384.6406,2033.3906 4384,2033.5313 Q4383.3594,2033.6875 4382.6563,2033.6875 Q4380.1563,2033.6875 4378.8281,2032.0469 Q4377.5156,2030.3906 4377.5156,2027.2656 Q4377.5156,2024.1406 4378.8281,2022.4844 Q4380.1563,2020.8281 4382.6563,2020.8281 Q4383.3594,2020.8281 4384,2020.9844 Q4384.6563,2021.1406 4385.2188,2021.4375 L4385.2188,2024.1563 Q4384.5938,2023.5781 4384,2023.3125 Q4383.4063,2023.0313 4382.7813,2023.0313 Q4381.4375,2023.0313 4380.75,2024.1094 Q4380.0625,2025.1719 4380.0625,2027.2656 Q4380.0625,2029.3594 4380.75,2030.4375 Q4381.4375,2031.5 4382.7813,2031.5 Q4383.4063,2031.5 4384,2031.2344 Q4384.5938,2030.9531 4385.2188,2030.375 L4385.2188,2033.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="4402.75" y="2031.6074">element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4210.5" x2="4613.5" y1="2043.4531" y2="2043.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4210.5" x2="4613.5" y1="2051.4531" y2="2051.4531"/><ellipse cx="4220.5" cy="2062.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="4229.5" y="2065.6636">element() : void</text><ellipse cx="4220.5" cy="2075.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4229.5" y="2078.4683">~element() = default : void</text><ellipse cx="4220.5" cy="2088.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4229.5" y="2091.2729">name_and_ns() const : std::string</text><ellipse cx="4220.5" cy="2100.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="4229.5" y="2104.0776">set_namespace() : void</text><ellipse cx="4220.5" cy="2113.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="4229.5" y="2116.8823">get_namespace() const : common::model::namespace_</text><ellipse cx="4220.5" cy="2126.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="4229.5" y="2129.687">get_relative_namespace() const : common::model::namespace_</text><ellipse cx="4220.5" cy="2139.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="4229.5" y="2142.4917">path() const : const common::model::namespace_ &amp;</text><ellipse cx="4220.5" cy="2152.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4229.5" y="2155.2964">full_name() const : std::string</text><ellipse cx="4220.5" cy="2164.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4229.5" y="2168.1011">full_name_no_ns() const : std::string</text><ellipse cx="4220.5" cy="2177.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="4229.5" y="2180.9058">using_namespace() const : const common::model::namespace_ &amp;</text><ellipse cx="4220.5" cy="2190.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4229.5" y="2193.7104">context() const : inja::json</text></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="4689.5" y="199.9531"/><ellipse cx="4853.75" cy="215.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4856.7188,221.5938 Q4856.1406,221.8906 4855.5,222.0313 Q4854.8594,222.1875 4854.1563,222.1875 Q4851.6563,222.1875 4850.3281,220.5469 Q4849.0156,218.8906 4849.0156,215.7656 Q4849.0156,212.6406 4850.3281,210.9844 Q4851.6563,209.3281 4854.1563,209.3281 Q4854.8594,209.3281 4855.5,209.4844 Q4856.1563,209.6406 4856.7188,209.9375 L4856.7188,212.6563 Q4856.0938,212.0781 4855.5,211.8125 Q4854.9063,211.5313 4854.2813,211.5313 Q4852.9375,211.5313 4852.25,212.6094 Q4851.5625,213.6719 4851.5625,215.7656 Q4851.5625,217.8594 4852.25,218.9375 Q4852.9375,220 4854.2813,220 Q4854.9063,220 4855.5,219.7344 Q4856.0938,219.4531 4856.7188,218.875 L4856.7188,221.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="4874.25" y="220.1074">template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4690.5" x2="5113.5" y1="231.9531" y2="231.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4695.5" y="237.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4697.5" y="239.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4709.5" y="246.1636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4695.5" y="250.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4697.5" y="252.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4709.5" y="258.9683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4690.5" x2="5113.5" y1="265.5625" y2="265.5625"/><ellipse cx="4700.5" cy="276.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="4709.5" y="279.7729">render_template_params() const : std::ostream &amp;</text><ellipse cx="4700.5" cy="289.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4709.5" y="292.5776">set_base_template() : void</text><ellipse cx="4700.5" cy="302.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4709.5" y="305.3823">base_template() const : std::string</text><ellipse cx="4700.5" cy="314.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="4709.5" y="318.187">add_template() : void</text><ellipse cx="4700.5" cy="327.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="4709.5" y="330.9917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="4700.5" cy="340.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4709.5" y="343.7964">calculate_template_specialization_match() const : int</text><ellipse cx="4700.5" cy="353.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4709.5" y="356.6011">is_implicit() const : bool</text><ellipse cx="4700.5" cy="366.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4709.5" y="369.4058">set_implicit() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="956" y="824.4531"/><ellipse cx="1040.25" cy="840.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1043.2188,846.0938 Q1042.6406,846.3906 1042,846.5313 Q1041.3594,846.6875 1040.6563,846.6875 Q1038.1563,846.6875 1036.8281,845.0469 Q1035.5156,843.3906 1035.5156,840.2656 Q1035.5156,837.1406 1036.8281,835.4844 Q1038.1563,833.8281 1040.6563,833.8281 Q1041.3594,833.8281 1042,833.9844 Q1042.6563,834.1406 1043.2188,834.4375 L1043.2188,837.1563 Q1042.5938,836.5781 1042,836.3125 Q1041.4063,836.0313 1040.7813,836.0313 Q1039.4375,836.0313 1038.75,837.1094 Q1038.0625,838.1719 1038.0625,840.2656 Q1038.0625,842.3594 1038.75,843.4375 Q1039.4375,844.5 1040.7813,844.5 Q1041.4063,844.5 1042,844.2344 Q1042.5938,843.9531 1043.2188,843.375 L1043.2188,846.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="1060.75" y="844.6074">nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="1214" y="821.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="1215" y="833.5918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="957" x2="1251" y1="856.4531" y2="856.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="962" y="862.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="964" y="864.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="976" y="870.6636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="957" x2="1251" y1="877.2578" y2="877.2578"/><ellipse cx="967" cy="888.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="976" y="891.4683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="967" cy="901.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="976" y="904.2729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="967" cy="913.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="976" y="917.0776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="967" cy="926.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="976" y="929.8823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="967" cy="939.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="976" y="942.687">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="967" cy="952.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="976" y="955.4917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="967" cy="965.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="976" y="968.2964">has_element() const : bool</text><ellipse cx="967" cy="977.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="976" y="981.1011">is_empty() const : bool</text><ellipse cx="967" cy="990.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="976" y="993.9058">begin() : auto</text><ellipse cx="967" cy="1003.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="976" y="1006.7104">end() : auto</text><ellipse cx="967" cy="1016.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="976" y="1019.5151">cbegin() const : auto</text><ellipse cx="967" cy="1029.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="976" y="1032.3198">cend() const : auto</text><ellipse cx="967" cy="1041.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="976" y="1045.1245">begin() const : auto</text><ellipse cx="967" cy="1054.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="976" y="1057.9292">end() const : auto</text><ellipse cx="967" cy="1067.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="976" y="1070.7339">print_tree() : void</text><ellipse cx="967" cy="1080.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="976" y="1083.5386">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="967" cy="1093.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="976" y="1096.3433">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="967" cy="1105.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="976" y="1109.1479">get_element&lt;V=T&gt;() : auto</text><ellipse cx="967" cy="1118.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="976" y="1121.9526">get_element_parent&lt;V=T&gt;() : auto</text><ellipse cx="967" cy="1131.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="976" y="1134.7573">get_element&lt;V=T&gt;() : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="3559" y="2807.4531"/><ellipse cx="3574" cy="2823.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3578.1094,2829.4531 L3570.3906,2829.4531 L3570.3906,2817.0625 L3578.1094,2817.0625 L3578.1094,2819.2188 L3572.8438,2819.2188 L3572.8438,2821.8906 L3577.6094,2821.8906 L3577.6094,2824.0469 L3572.8438,2824.0469 L3572.8438,2827.2969 L3578.1094,2827.2969 L3578.1094,2829.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="3588" y="2827.6074">source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3560" x2="3668" y1="2839.4531" y2="2839.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="3565" y="2853.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="3565" y="2866.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3565" y="2879.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3560" x2="3668" y1="2885.8672" y2="2885.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="1287.5" y="952.4531"/><ellipse cx="1342.25" cy="968.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1345.2188,974.0938 Q1344.6406,974.3906 1344,974.5313 Q1343.3594,974.6875 1342.6563,974.6875 Q1340.1563,974.6875 1338.8281,973.0469 Q1337.5156,971.3906 1337.5156,968.2656 Q1337.5156,965.1406 1338.8281,963.4844 Q1340.1563,961.8281 1342.6563,961.8281 Q1343.3594,961.8281 1344,961.9844 Q1344.6563,962.1406 1345.2188,962.4375 L1345.2188,965.1563 Q1344.5938,964.5781 1344,964.3125 Q1343.4063,964.0313 1342.7813,964.0313 Q1341.4375,964.0313 1340.75,965.1094 Q1340.0625,966.1719 1340.0625,968.2656 Q1340.0625,970.3594 1340.75,971.4375 Q1341.4375,972.5 1342.7813,972.5 Q1343.4063,972.5 1344,972.2344 Q1344.5938,971.9531 1345.2188,971.375 L1345.2188,974.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="1362.75" y="972.6074">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1288.5" x2="1479.5" y1="984.4531" y2="984.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1293.5" y="990.4531"/><ellipse cx="1298.5" cy="995.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="1307.5" y="998.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1288.5" x2="1479.5" y1="1005.2578" y2="1005.2578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="245" x="3704.5" y="2826.4531"/><ellipse cx="3719.5" cy="2842.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3722.4688,2848.0938 Q3721.8906,2848.3906 3721.25,2848.5313 Q3720.6094,2848.6875 3719.9063,2848.6875 Q3717.4063,2848.6875 3716.0781,2847.0469 Q3714.7656,2845.3906 3714.7656,2842.2656 Q3714.7656,2839.1406 3716.0781,2837.4844 Q3717.4063,2835.8281 3719.9063,2835.8281 Q3720.6094,2835.8281 3721.25,2835.9844 Q3721.9063,2836.1406 3722.4688,2836.4375 L3722.4688,2839.1563 Q3721.8438,2838.5781 3721.25,2838.3125 Q3720.6563,2838.0313 3720.0313,2838.0313 Q3718.6875,2838.0313 3718,2839.1094 Q3717.3125,2840.1719 3717.3125,2842.2656 Q3717.3125,2844.3594 3718,2845.4375 Q3718.6875,2846.5 3720.0313,2846.5 Q3720.6563,2846.5 3721.25,2846.2344 Q3721.8438,2845.9531 3722.4688,2845.375 L3722.4688,2848.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="3733.5" y="2846.6074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="182" x="3770.5" y="2823.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="180" x="3771.5" y="2835.5918">common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3705.5" x2="3948.5" y1="2858.4531" y2="2858.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3705.5" x2="3948.5" y1="2866.4531" y2="2866.4531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="441" x="3415.5" y="1966.9531"/><ellipse cx="3598.25" cy="1982.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3601.2188,1988.5938 Q3600.6406,1988.8906 3600,1989.0313 Q3599.3594,1989.1875 3598.6563,1989.1875 Q3596.1563,1989.1875 3594.8281,1987.5469 Q3593.5156,1985.8906 3593.5156,1982.7656 Q3593.5156,1979.6406 3594.8281,1977.9844 Q3596.1563,1976.3281 3598.6563,1976.3281 Q3599.3594,1976.3281 3600,1976.4844 Q3600.6563,1976.6406 3601.2188,1976.9375 L3601.2188,1979.6563 Q3600.5938,1979.0781 3600,1978.8125 Q3599.4063,1978.5313 3598.7813,1978.5313 Q3597.4375,1978.5313 3596.75,1979.6094 Q3596.0625,1980.6719 3596.0625,1982.7656 Q3596.0625,1984.8594 3596.75,1985.9375 Q3597.4375,1987 3598.7813,1987 Q3599.4063,1987 3600,1986.7344 Q3600.5938,1986.4531 3601.2188,1985.875 L3601.2188,1988.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="3618.75" y="1987.1074">source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3416.5" x2="3855.5" y1="1998.9531" y2="1998.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3421.5" y="2004.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3423.5" y="2006.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3435.5" y="2013.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3416.5" x2="3855.5" y1="2019.7578" y2="2019.7578"/><ellipse cx="3426.5" cy="2030.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3435.5" y="2033.9683">source_file() = default : void</text><ellipse cx="3426.5" cy="2043.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3435.5" y="2046.7729">source_file() : void</text><ellipse cx="3426.5" cy="2056.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="3435.5" y="2059.5776">set_path() : void</text><ellipse cx="3426.5" cy="2069.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3435.5" y="2072.3823">set_absolute() : void</text><ellipse cx="3426.5" cy="2081.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3435.5" y="2085.187">is_absolute() const : bool</text><ellipse cx="3426.5" cy="2094.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3435.5" y="2097.9917">set_type() : void</text><ellipse cx="3426.5" cy="2107.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="3435.5" y="2110.7964">type() const : common::model::source_file_t</text><ellipse cx="3426.5" cy="2120.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3435.5" y="2123.6011">source_file() : void</text><ellipse cx="3426.5" cy="2133.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="3435.5" y="2136.4058">source_file() = default : void</text><ellipse cx="3426.5" cy="2146" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3435.5" y="2149.2104">operator=() : common::model::source_file &amp;</text><ellipse cx="3426.5" cy="2158.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3435.5" y="2162.0151">operator=() : common::model::source_file &amp;</text><ellipse cx="3426.5" cy="2171.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3435.5" y="2174.8198">operator==() const : bool</text><ellipse cx="3426.5" cy="2184.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="3435.5" y="2187.6245">path() const : const common::model::filesystem_path &amp;</text><ellipse cx="3426.5" cy="2197.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3435.5" y="2200.4292">full_name() const : std::string</text><ellipse cx="3426.5" cy="2210.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="3435.5" y="2213.2339">full_path() const : common::model::path&lt;common::model::fs_path_sep&gt;</text><ellipse cx="3426.5" cy="2222.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="3435.5" y="2226.0386">fs_path() const : std::filesystem::path</text><ellipse cx="3426.5" cy="2235.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3435.5" y="2238.8433">context() const : inja::json</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="541" x="4573.5" y="792.4531"/><ellipse cx="4814.25" cy="808.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4814.3594,803.7969 L4813.2031,808.875 L4815.5313,808.875 L4814.3594,803.7969 Z M4812.875,801.5625 L4815.8594,801.5625 L4819.2188,813.9531 L4816.7656,813.9531 L4816,810.8906 L4812.7188,810.8906 L4811.9688,813.9531 L4809.5313,813.9531 L4812.875,801.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="4834.75" y="812.6074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4574.5" x2="5113.5" y1="824.4531" y2="824.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4579.5" y="830.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4581.5" y="832.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4593.5" y="838.6636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4579.5" y="843.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4581.5" y="845.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4593.5" y="851.4683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4574.5" x2="5113.5" y1="858.0625" y2="858.0625"/><ellipse cx="4584.5" cy="869.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4593.5" y="872.2729">diagram() : void</text><ellipse cx="4584.5" cy="881.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4593.5" y="885.0776">~diagram() : void</text><ellipse cx="4584.5" cy="894.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="4593.5" y="897.8823">type() const = 0 : common::model::diagram_t</text><ellipse cx="4584.5" cy="907.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="4593.5" y="910.687">get() const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="4584.5" cy="920.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="4593.5" y="923.4917">get() const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="4584.5" cy="933.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="4593.5" y="936.2964">get_with_namespace() const : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="4584.5" cy="945.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4593.5" y="949.1011">diagram() : void</text><ellipse cx="4584.5" cy="958.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4593.5" y="961.9058">diagram() : void</text><ellipse cx="4584.5" cy="971.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4593.5" y="974.7104">operator=() : common::model::diagram &amp;</text><ellipse cx="4584.5" cy="984.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4593.5" y="987.5151">operator=() : common::model::diagram &amp;</text><ellipse cx="4584.5" cy="997.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4593.5" y="1000.3198">set_name() : void</text><ellipse cx="4584.5" cy="1009.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4593.5" y="1013.1245">name() const : std::string</text><ellipse cx="4584.5" cy="1022.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4593.5" y="1025.9292">set_filter() : void</text><ellipse cx="4584.5" cy="1035.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4593.5" y="1038.7339">set_complete() : void</text><ellipse cx="4584.5" cy="1048.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4593.5" y="1051.5386">complete() const : bool</text><ellipse cx="4584.5" cy="1061.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1064.3433">should_include() const : bool</text><ellipse cx="4584.5" cy="1073.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1077.1479">should_include() const : bool</text><ellipse cx="4584.5" cy="1086.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1089.9526">should_include() const : bool</text><ellipse cx="4584.5" cy="1099.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1102.7573">should_include() const : bool</text><ellipse cx="4584.5" cy="1112.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1115.562">should_include() const : bool</text><ellipse cx="4584.5" cy="1125.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1128.3667">should_include() const : bool</text><ellipse cx="4584.5" cy="1137.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4593.5" y="1141.1714">has_element() const : bool</text><ellipse cx="4584.5" cy="1150.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4593.5" y="1153.9761">should_include() const : bool</text><ellipse cx="4584.5" cy="1163.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4593.5" y="1166.7808">context() const = 0 : inja::json</text><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="4460.5" y="2755.9531"/><ellipse cx="4561.75" cy="2771.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4564.7188,2777.5938 Q4564.1406,2777.8906 4563.5,2778.0313 Q4562.8594,2778.1875 4562.1563,2778.1875 Q4559.6563,2778.1875 4558.3281,2776.5469 Q4557.0156,2774.8906 4557.0156,2771.7656 Q4557.0156,2768.6406 4558.3281,2766.9844 Q4559.6563,2765.3281 4562.1563,2765.3281 Q4562.8594,2765.3281 4563.5,2765.4844 Q4564.1563,2765.6406 4564.7188,2765.9375 L4564.7188,2768.6563 Q4564.0938,2768.0781 4563.5,2767.8125 Q4562.9063,2767.5313 4562.2813,2767.5313 Q4560.9375,2767.5313 4560.25,2768.6094 Q4559.5625,2769.6719 4559.5625,2771.7656 Q4559.5625,2773.8594 4560.25,2774.9375 Q4560.9375,2776 4562.2813,2776 Q4562.9063,2776 4563.5,2775.7344 Q4564.0938,2775.4531 4564.7188,2774.875 L4564.7188,2777.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="4582.25" y="2776.1074">package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4461.5" x2="4724.5" y1="2787.9531" y2="2787.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4466.5" y="2793.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4468.5" y="2795.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4480.5" y="2802.1636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4461.5" x2="4724.5" y1="2808.7578" y2="2808.7578"/><ellipse cx="4471.5" cy="2819.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4480.5" y="2822.9683">package() : void</text><ellipse cx="4471.5" cy="2832.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4480.5" y="2835.7729">package() : void</text><ellipse cx="4471.5" cy="2845.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4480.5" y="2848.5776">package() = default : void</text><ellipse cx="4471.5" cy="2858.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4480.5" y="2861.3823">operator=() : common::model::package &amp;</text><ellipse cx="4471.5" cy="2870.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4480.5" y="2874.187">operator=() : common::model::package &amp;</text><ellipse cx="4471.5" cy="2883.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4480.5" y="2886.9917">type_name() const : std::string</text><ellipse cx="4471.5" cy="2896.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4480.5" y="2899.7964">full_name() const : std::string</text><ellipse cx="4471.5" cy="2909.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4480.5" y="2912.6011">is_deprecated() const : bool</text><ellipse cx="4471.5" cy="2922.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4480.5" y="2925.4058">set_deprecated() : void</text><ellipse cx="4471.5" cy="2935" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="4480.5" y="2938.2104">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="71" x="2265.5" y="2068.9531"/><ellipse cx="2280.5" cy="2084.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2284.6094,2090.9531 L2276.8906,2090.9531 L2276.8906,2078.5625 L2284.6094,2078.5625 L2284.6094,2080.7188 L2279.3438,2080.7188 L2279.3438,2083.3906 L2284.1094,2083.3906 L2284.1094,2085.5469 L2279.3438,2085.5469 L2279.3438,2088.7969 L2284.6094,2088.7969 L2284.6094,2090.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="2294.5" y="2089.1074">filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2266.5" x2="2335.5" y1="2100.9531" y2="2100.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2271.5" y="2115.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="2271.5" y="2127.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2266.5" x2="2335.5" y1="2134.5625" y2="2134.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="241" x="2180.5" y="888.4531"/><ellipse cx="2261.25" cy="904.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2264.2188,910.0938 Q2263.6406,910.3906 2263,910.5313 Q2262.3594,910.6875 2261.6563,910.6875 Q2259.1563,910.6875 2257.8281,909.0469 Q2256.5156,907.3906 2256.5156,904.2656 Q2256.5156,901.1406 2257.8281,899.4844 Q2259.1563,897.8281 2261.6563,897.8281 Q2262.3594,897.8281 2263,897.9844 Q2263.6563,898.1406 2264.2188,898.4375 L2264.2188,901.1563 Q2263.5938,900.5781 2263,900.3125 Q2262.4063,900.0313 2261.7813,900.0313 Q2260.4375,900.0313 2259.75,901.1094 Q2259.0625,902.1719 2259.0625,904.2656 Q2259.0625,906.3594 2259.75,907.4375 Q2260.4375,908.5 2261.7813,908.5 Q2262.4063,908.5 2263,908.2344 Q2263.5938,907.9531 2264.2188,907.375 L2264.2188,910.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="2281.75" y="908.6074">filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2181.5" x2="2420.5" y1="920.4531" y2="920.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2181.5" x2="2420.5" y1="928.4531" y2="928.4531"/><ellipse cx="2191.5" cy="939.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2200.5" y="942.6636">filter_visitor() : void</text><ellipse cx="2191.5" cy="952.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2200.5" y="955.4683">~filter_visitor() = default : void</text><ellipse cx="2191.5" cy="965.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2200.5" y="968.2729">match() const : tvl::value_t</text><ellipse cx="2191.5" cy="977.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2200.5" y="981.0776">match() const : tvl::value_t</text><ellipse cx="2191.5" cy="990.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2200.5" y="993.8823">match() const : tvl::value_t</text><ellipse cx="2191.5" cy="1003.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2200.5" y="1006.687">match() const : tvl::value_t</text><ellipse cx="2191.5" cy="1016.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2200.5" y="1019.4917">match() const : tvl::value_t</text><ellipse cx="2191.5" cy="1029.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2200.5" y="1032.2964">match() const : tvl::value_t</text><ellipse cx="2191.5" cy="1041.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2200.5" y="1045.1011">is_inclusive() const : bool</text><ellipse cx="2191.5" cy="1054.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="2200.5" y="1057.9058">is_exclusive() const : bool</text><ellipse cx="2191.5" cy="1067.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2200.5" y="1070.7104">type() const : common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="197" x="2371.5" y="2056.4531"/><ellipse cx="2431.75" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2434.7188,2078.0938 Q2434.1406,2078.3906 2433.5,2078.5313 Q2432.8594,2078.6875 2432.1563,2078.6875 Q2429.6563,2078.6875 2428.3281,2077.0469 Q2427.0156,2075.3906 2427.0156,2072.2656 Q2427.0156,2069.1406 2428.3281,2067.4844 Q2429.6563,2065.8281 2432.1563,2065.8281 Q2432.8594,2065.8281 2433.5,2065.9844 Q2434.1563,2066.1406 2434.7188,2066.4375 L2434.7188,2069.1563 Q2434.0938,2068.5781 2433.5,2068.3125 Q2432.9063,2068.0313 2432.2813,2068.0313 Q2430.9375,2068.0313 2430.25,2069.1094 Q2429.5625,2070.1719 2429.5625,2072.2656 Q2429.5625,2074.3594 2430.25,2075.4375 Q2430.9375,2076.5 2432.2813,2076.5 Q2432.9063,2076.5 2433.5,2076.2344 Q2434.0938,2075.9531 2434.7188,2075.375 L2434.7188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="2452.25" y="2076.6074">anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2372.5" x2="2567.5" y1="2088.4531" y2="2088.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2372.5" x2="2567.5" y1="2096.4531" y2="2096.4531"/><ellipse cx="2382.5" cy="2107.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="2391.5" y="2110.6636">anyof_filter() : void</text><ellipse cx="2382.5" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2391.5" y="2123.4683">~anyof_filter() = default : void</text><ellipse cx="2382.5" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2391.5" y="2136.2729">match() const : tvl::value_t</text><ellipse cx="2382.5" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2391.5" y="2149.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="1432" y="2056.4531"/><ellipse cx="1490.25" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1493.2188,2078.0938 Q1492.6406,2078.3906 1492,2078.5313 Q1491.3594,2078.6875 1490.6563,2078.6875 Q1488.1563,2078.6875 1486.8281,2077.0469 Q1485.5156,2075.3906 1485.5156,2072.2656 Q1485.5156,2069.1406 1486.8281,2067.4844 Q1488.1563,2065.8281 1490.6563,2065.8281 Q1491.3594,2065.8281 1492,2065.9844 Q1492.6563,2066.1406 1493.2188,2066.4375 L1493.2188,2069.1563 Q1492.5938,2068.5781 1492,2068.3125 Q1491.4063,2068.0313 1490.7813,2068.0313 Q1489.4375,2068.0313 1488.75,2069.1094 Q1488.0625,2070.1719 1488.0625,2072.2656 Q1488.0625,2074.3594 1488.75,2075.4375 Q1489.4375,2076.5 1490.7813,2076.5 Q1491.4063,2076.5 1492,2076.2344 Q1492.5938,2075.9531 1493.2188,2075.375 L1493.2188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="1510.75" y="2076.6074">namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1433" x2="1663" y1="2088.4531" y2="2088.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1433" x2="1663" y1="2096.4531" y2="2096.4531"/><ellipse cx="1443" cy="2107.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1452" y="2110.6636">namespace_filter() : void</text><ellipse cx="1443" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1452" y="2123.4683">~namespace_filter() = default : void</text><ellipse cx="1443" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1452" y="2136.2729">match() const : tvl::value_t</text><ellipse cx="1443" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1452" y="2149.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="2603.5" y="2056.4531"/><ellipse cx="2674.25" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2677.2188,2078.0938 Q2676.6406,2078.3906 2676,2078.5313 Q2675.3594,2078.6875 2674.6563,2078.6875 Q2672.1563,2078.6875 2670.8281,2077.0469 Q2669.5156,2075.3906 2669.5156,2072.2656 Q2669.5156,2069.1406 2670.8281,2067.4844 Q2672.1563,2065.8281 2674.6563,2065.8281 Q2675.3594,2065.8281 2676,2065.9844 Q2676.6563,2066.1406 2677.2188,2066.4375 L2677.2188,2069.1563 Q2676.5938,2068.5781 2676,2068.3125 Q2675.4063,2068.0313 2674.7813,2068.0313 Q2673.4375,2068.0313 2672.75,2069.1094 Q2672.0625,2070.1719 2672.0625,2072.2656 Q2672.0625,2074.3594 2672.75,2075.4375 Q2673.4375,2076.5 2674.7813,2076.5 Q2675.4063,2076.5 2676,2076.2344 Q2676.5938,2075.9531 2677.2188,2075.375 L2677.2188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="2694.75" y="2076.6074">element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2604.5" x2="2837.5" y1="2088.4531" y2="2088.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2609.5" y="2094.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2611.5" y="2096.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2623.5" y="2102.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2604.5" x2="2837.5" y1="2109.2578" y2="2109.2578"/><ellipse cx="2614.5" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2623.5" y="2123.4683">element_filter() : void</text><ellipse cx="2614.5" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2623.5" y="2136.2729">~element_filter() = default : void</text><ellipse cx="2614.5" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2623.5" y="2149.0776">match() const : tvl::value_t</text><!--MD5=[97547c2450036638bcec6f72d4b27f74]
class C_0002051668456717902300--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" target="_top" title="element_type_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="element_type_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="3115.5" y="2056.4531"/><ellipse cx="3184.75" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3187.7188,2078.0938 Q3187.1406,2078.3906 3186.5,2078.5313 Q3185.8594,2078.6875 3185.1563,2078.6875 Q3182.6563,2078.6875 3181.3281,2077.0469 Q3180.0156,2075.3906 3180.0156,2072.2656 Q3180.0156,2069.1406 3181.3281,2067.4844 Q3182.6563,2065.8281 3185.1563,2065.8281 Q3185.8594,2065.8281 3186.5,2065.9844 Q3187.1563,2066.1406 3187.7188,2066.4375 L3187.7188,2069.1563 Q3187.0938,2068.5781 3186.5,2068.3125 Q3185.9063,2068.0313 3185.2813,2068.0313 Q3183.9375,2068.0313 3183.25,2069.1094 Q3182.5625,2070.1719 3182.5625,2072.2656 Q3182.5625,2074.3594 3183.25,2075.4375 Q3183.9375,2076.5 3185.2813,2076.5 Q3185.9063,2076.5 3186.5,2076.2344 Q3187.0938,2075.9531 3187.7188,2075.375 L3187.7188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="3205.25" y="2076.6074">element_type_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3116.5" x2="3379.5" y1="2088.4531" y2="2088.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3121.5" y="2094.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3123.5" y="2096.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3135.5" y="2102.6636">element_types_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3116.5" x2="3379.5" y1="2109.2578" y2="2109.2578"/><ellipse cx="3126.5" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3135.5" y="2123.4683">element_type_filter() : void</text><ellipse cx="3126.5" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="3135.5" y="2136.2729">~element_type_filter() = default : void</text><ellipse cx="3126.5" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3135.5" y="2149.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="217" x="62.5" y="2056.4531"/><ellipse cx="122.25" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M125.2188,2078.0938 Q124.6406,2078.3906 124,2078.5313 Q123.3594,2078.6875 122.6563,2078.6875 Q120.1563,2078.6875 118.8281,2077.0469 Q117.5156,2075.3906 117.5156,2072.2656 Q117.5156,2069.1406 118.8281,2067.4844 Q120.1563,2065.8281 122.6563,2065.8281 Q123.3594,2065.8281 124,2065.9844 Q124.6563,2066.1406 125.2188,2066.4375 L125.2188,2069.1563 Q124.5938,2068.5781 124,2068.3125 Q123.4063,2068.0313 122.7813,2068.0313 Q121.4375,2068.0313 120.75,2069.1094 Q120.0625,2070.1719 120.0625,2072.2656 Q120.0625,2074.3594 120.75,2075.4375 Q121.4375,2076.5 122.7813,2076.5 Q123.4063,2076.5 124,2076.2344 Q124.5938,2075.9531 125.2188,2075.375 L125.2188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="142.75" y="2076.6074">subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63.5" x2="278.5" y1="2088.4531" y2="2088.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="2094.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="2096.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="82.5" y="2102.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="63.5" x2="278.5" y1="2109.2578" y2="2109.2578"/><ellipse cx="73.5" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="82.5" y="2123.4683">subclass_filter() : void</text><ellipse cx="73.5" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="82.5" y="2136.2729">~subclass_filter() = default : void</text><ellipse cx="73.5" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="82.5" y="2149.0776">match() const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="227" x="582.5" y="2056.4531"/><ellipse cx="650.25" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M653.2188,2078.0938 Q652.6406,2078.3906 652,2078.5313 Q651.3594,2078.6875 650.6563,2078.6875 Q648.1563,2078.6875 646.8281,2077.0469 Q645.5156,2075.3906 645.5156,2072.2656 Q645.5156,2069.1406 646.8281,2067.4844 Q648.1563,2065.8281 650.6563,2065.8281 Q651.3594,2065.8281 652,2065.9844 Q652.6563,2066.1406 653.2188,2066.4375 L653.2188,2069.1563 Q652.5938,2068.5781 652,2068.3125 Q651.4063,2068.0313 650.7813,2068.0313 Q649.4375,2068.0313 648.75,2069.1094 Q648.0625,2070.1719 648.0625,2072.2656 Q648.0625,2074.3594 648.75,2075.4375 Q649.4375,2076.5 650.7813,2076.5 Q651.4063,2076.5 652,2076.2344 Q652.5938,2075.9531 653.2188,2075.375 L653.2188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="670.75" y="2076.6074">parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="583.5" x2="808.5" y1="2088.4531" y2="2088.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="588.5" y="2094.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="590.5" y="2096.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="602.5" y="2102.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="583.5" x2="808.5" y1="2109.2578" y2="2109.2578"/><ellipse cx="593.5" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="602.5" y="2123.4683">parents_filter() : void</text><ellipse cx="593.5" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="602.5" y="2136.2729">~parents_filter() = default : void</text><ellipse cx="593.5" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="602.5" y="2149.0776">match() const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="552" x="845" y="2017.9531"/><ellipse cx="860" cy="2033.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M862.9688,2039.5938 Q862.3906,2039.8906 861.75,2040.0313 Q861.1094,2040.1875 860.4063,2040.1875 Q857.9063,2040.1875 856.5781,2038.5469 Q855.2656,2036.8906 855.2656,2033.7656 Q855.2656,2030.6406 856.5781,2028.9844 Q857.9063,2027.3281 860.4063,2027.3281 Q861.1094,2027.3281 861.75,2027.4844 Q862.4063,2027.6406 862.9688,2027.9375 L862.9688,2030.6563 Q862.3438,2030.0781 861.75,2029.8125 Q861.1563,2029.5313 860.5313,2029.5313 Q859.1875,2029.5313 858.5,2030.6094 Q857.8125,2031.6719 857.8125,2033.7656 Q857.8125,2035.8594 858.5,2036.9375 Q859.1875,2038 860.5313,2038 Q861.1563,2038 861.75,2037.7344 Q862.3438,2037.4531 862.9688,2036.875 L862.9688,2039.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="874" y="2038.1074">edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="1009" y="2014.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="1010" y="2027.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="846" x2="1396" y1="2049.9531" y2="2049.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="851" y="2055.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2057.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="865" y="2064.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="851" y="2068.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2070.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="865" y="2076.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="851" y="2081.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2083.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="865" y="2089.7729">matching_elements_ : common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="851" y="2094.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2096.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="865" y="2102.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="846" x2="1396" y1="2109.1719" y2="2109.1719"/><ellipse cx="856" cy="2120.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="865" y="2123.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="856" cy="2132.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="865" y="2136.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="856" cy="2145.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="865" y="2148.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2155.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="865" y="2161.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2168.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="865" y="2174.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="853" y="2181.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="865" y="2187.4058">add_adjacent&lt;C,D&gt;() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="233" x="314.5" y="2062.9531"/><ellipse cx="372.75" cy="2078.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M375.7188,2084.5938 Q375.1406,2084.8906 374.5,2085.0313 Q373.8594,2085.1875 373.1563,2085.1875 Q370.6563,2085.1875 369.3281,2083.5469 Q368.0156,2081.8906 368.0156,2078.7656 Q368.0156,2075.6406 369.3281,2073.9844 Q370.6563,2072.3281 373.1563,2072.3281 Q373.8594,2072.3281 374.5,2072.4844 Q375.1563,2072.6406 375.7188,2072.9375 L375.7188,2075.6563 Q375.0938,2075.0781 374.5,2074.8125 Q373.9063,2074.5313 373.2813,2074.5313 Q371.9375,2074.5313 371.25,2075.6094 Q370.5625,2076.6719 370.5625,2078.7656 Q370.5625,2080.8594 371.25,2081.9375 Q371.9375,2083 373.2813,2083 Q373.9063,2083 374.5,2082.7344 Q375.0938,2082.4531 375.7188,2081.875 L375.7188,2084.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="393.25" y="2083.1074">relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="315.5" x2="546.5" y1="2094.9531" y2="2094.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="315.5" x2="546.5" y1="2102.9531" y2="2102.9531"/><ellipse cx="325.5" cy="2113.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="334.5" y="2117.1636">relationship_filter() : void</text><ellipse cx="325.5" cy="2126.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="334.5" y="2129.9683">~relationship_filter() = default : void</text><ellipse cx="325.5" cy="2139.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="334.5" y="2142.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="2874" y="2062.9531"/><ellipse cx="2933.75" cy="2078.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2936.7188,2084.5938 Q2936.1406,2084.8906 2935.5,2085.0313 Q2934.8594,2085.1875 2934.1563,2085.1875 Q2931.6563,2085.1875 2930.3281,2083.5469 Q2929.0156,2081.8906 2929.0156,2078.7656 Q2929.0156,2075.6406 2930.3281,2073.9844 Q2931.6563,2072.3281 2934.1563,2072.3281 Q2934.8594,2072.3281 2935.5,2072.4844 Q2936.1563,2072.6406 2936.7188,2072.9375 L2936.7188,2075.6563 Q2936.0938,2075.0781 2935.5,2074.8125 Q2934.9063,2074.5313 2934.2813,2074.5313 Q2932.9375,2074.5313 2932.25,2075.6094 Q2931.5625,2076.6719 2931.5625,2078.7656 Q2931.5625,2080.8594 2932.25,2081.9375 Q2932.9375,2083 2934.2813,2083 Q2934.9063,2083 2935.5,2082.7344 Q2936.0938,2082.4531 2936.7188,2081.875 L2936.7188,2084.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="2954.25" y="2083.1074">access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2875" x2="3079" y1="2094.9531" y2="2094.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2875" x2="3079" y1="2102.9531" y2="2102.9531"/><ellipse cx="2885" cy="2113.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2894" y="2117.1636">access_filter() : void</text><ellipse cx="2885" cy="2126.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2894" y="2129.9683">~access_filter() = default : void</text><ellipse cx="2885" cy="2139.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2894" y="2142.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="223" x="1699.5" y="2056.4531"/><ellipse cx="1766.25" cy="2072.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1769.2188,2078.0938 Q1768.6406,2078.3906 1768,2078.5313 Q1767.3594,2078.6875 1766.6563,2078.6875 Q1764.1563,2078.6875 1762.8281,2077.0469 Q1761.5156,2075.3906 1761.5156,2072.2656 Q1761.5156,2069.1406 1762.8281,2067.4844 Q1764.1563,2065.8281 1766.6563,2065.8281 Q1767.3594,2065.8281 1768,2065.9844 Q1768.6563,2066.1406 1769.2188,2066.4375 L1769.2188,2069.1563 Q1768.5938,2068.5781 1768,2068.3125 Q1767.4063,2068.0313 1766.7813,2068.0313 Q1765.4375,2068.0313 1764.75,2069.1094 Q1764.0625,2070.1719 1764.0625,2072.2656 Q1764.0625,2074.3594 1764.75,2075.4375 Q1765.4375,2076.5 1766.7813,2076.5 Q1767.4063,2076.5 1768,2076.2344 Q1768.5938,2075.9531 1769.2188,2075.375 L1769.2188,2078.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="1786.75" y="2076.6074">context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1700.5" x2="1921.5" y1="2088.4531" y2="2088.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1705.5" y="2094.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1707.5" y="2096.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1719.5" y="2102.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1700.5" x2="1921.5" y1="2109.2578" y2="2109.2578"/><ellipse cx="1710.5" cy="2120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1719.5" y="2123.4683">context_filter() : void</text><ellipse cx="1710.5" cy="2133.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1719.5" y="2136.2729">~context_filter() = default : void</text><ellipse cx="1710.5" cy="2145.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1719.5" y="2149.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="1957.5" y="2043.4531"/><ellipse cx="2054.75" cy="2059.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2057.7188,2065.0938 Q2057.1406,2065.3906 2056.5,2065.5313 Q2055.8594,2065.6875 2055.1563,2065.6875 Q2052.6563,2065.6875 2051.3281,2064.0469 Q2050.0156,2062.3906 2050.0156,2059.2656 Q2050.0156,2056.1406 2051.3281,2054.4844 Q2052.6563,2052.8281 2055.1563,2052.8281 Q2055.8594,2052.8281 2056.5,2052.9844 Q2057.1563,2053.1406 2057.7188,2053.4375 L2057.7188,2056.1563 Q2057.0938,2055.5781 2056.5,2055.3125 Q2055.9063,2055.0313 2055.2813,2055.0313 Q2053.9375,2055.0313 2053.25,2056.1094 Q2052.5625,2057.1719 2052.5625,2059.2656 Q2052.5625,2061.3594 2053.25,2062.4375 Q2053.9375,2063.5 2055.2813,2063.5 Q2055.9063,2063.5 2056.5,2063.2344 Q2057.0938,2062.9531 2057.7188,2062.375 L2057.7188,2065.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="2075.25" y="2063.6074">paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1958.5" x2="2229.5" y1="2075.4531" y2="2075.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1963.5" y="2081.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1965.5" y="2083.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1977.5" y="2089.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1963.5" y="2094.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1965.5" y="2096.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1977.5" y="2102.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1958.5" x2="2229.5" y1="2109.0625" y2="2109.0625"/><ellipse cx="1968.5" cy="2120.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1977.5" y="2123.2729">paths_filter() : void</text><ellipse cx="1968.5" cy="2132.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1977.5" y="2136.0776">~paths_filter() = default : void</text><ellipse cx="1968.5" cy="2145.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1977.5" y="2148.8823">match() const : tvl::value_t</text><ellipse cx="1968.5" cy="2158.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1977.5" y="2161.687">match() const : tvl::value_t</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="3143.5" y="225.4531"/><ellipse cx="3191.25" cy="241.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3194.2188,247.0938 Q3193.6406,247.3906 3193,247.5313 Q3192.3594,247.6875 3191.6563,247.6875 Q3189.1563,247.6875 3187.8281,246.0469 Q3186.5156,244.3906 3186.5156,241.2656 Q3186.5156,238.1406 3187.8281,236.4844 Q3189.1563,234.8281 3191.6563,234.8281 Q3192.3594,234.8281 3193,234.9844 Q3193.6563,235.1406 3194.2188,235.4375 L3194.2188,238.1563 Q3193.5938,237.5781 3193,237.3125 Q3192.4063,237.0313 3191.7813,237.0313 Q3190.4375,237.0313 3189.75,238.1094 Q3189.0625,239.1719 3189.0625,241.2656 Q3189.0625,243.3594 3189.75,244.4375 Q3190.4375,245.5 3191.7813,245.5 Q3192.4063,245.5 3193,245.2344 Q3193.5938,244.9531 3194.2188,244.375 L3194.2188,247.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="3211.75" y="245.6074">diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3144.5" x2="3331.5" y1="257.4531" y2="257.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3144.5" x2="3331.5" y1="265.4531" y2="265.4531"/><ellipse cx="3154.5" cy="276.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3163.5" y="279.6636">diagram_filter() : void</text><ellipse cx="3154.5" cy="289.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3163.5" y="292.4683">add_inclusive_filter() : void</text><ellipse cx="3154.5" cy="302.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3163.5" y="305.2729">add_exclusive_filter() : void</text><ellipse cx="3154.5" cy="314.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3163.5" y="318.0776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3151.5" y="324.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3163.5" y="330.8823">init_filters() : void</text><ellipse cx="3154.5" cy="340.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3163.5" y="343.687">should_include&lt;T&gt;() : _Bool</text></a><!--MD5=[b486570858fa145169115e7c774ba114]
class C_0000605866861866358037--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L29" target="_top" title="class_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L29" xlink:show="new" xlink:title="class_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="176.0469" id="C_0000605866861866358037" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="5989.5" y="2402.9531"/><ellipse cx="6076.25" cy="2418.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6079.2188,2424.5938 Q6078.6406,2424.8906 6078,2425.0313 Q6077.3594,2425.1875 6076.6563,2425.1875 Q6074.1563,2425.1875 6072.8281,2423.5469 Q6071.5156,2421.8906 6071.5156,2418.7656 Q6071.5156,2415.6406 6072.8281,2413.9844 Q6074.1563,2412.3281 6076.6563,2412.3281 Q6077.3594,2412.3281 6078,2412.4844 Q6078.6563,2412.6406 6079.2188,2412.9375 L6079.2188,2415.6563 Q6078.5938,2415.0781 6078,2414.8125 Q6077.4063,2414.5313 6076.7813,2414.5313 Q6075.4375,2414.5313 6074.75,2415.6094 Q6074.0625,2416.6719 6074.0625,2418.7656 Q6074.0625,2420.8594 6074.75,2421.9375 Q6075.4375,2423 6076.7813,2423 Q6077.4063,2423 6078,2422.7344 Q6078.5938,2422.4531 6079.2188,2421.875 L6079.2188,2424.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="6096.75" y="2423.1074">class_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5990.5" x2="6259.5" y1="2434.9531" y2="2434.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L48" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L48" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5995.5" y="2440.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5997.5" y="2442.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L48" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L48" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="6009.5" y="2449.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L49" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L49" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5995.5" y="2453.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5997.5" y="2455.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L49" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L49" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6009.5" y="2461.9683">type_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5990.5" x2="6259.5" y1="2468.5625" y2="2468.5625"/><ellipse cx="6000.5" cy="2479.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6009.5" y="2482.7729">class_element() : void</text><ellipse cx="6000.5" cy="2492.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6009.5" y="2495.5776">~class_element() = default : void</text><ellipse cx="6000.5" cy="2505.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="6009.5" y="2508.3823">access() const : common::model::access_t</text><ellipse cx="6000.5" cy="2517.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6009.5" y="2521.187">name() const : std::string</text><ellipse cx="6000.5" cy="2530.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="6009.5" y="2533.9917">set_name() : void</text><ellipse cx="6000.5" cy="2543.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="6009.5" y="2546.7964">type() const : std::string</text><ellipse cx="6000.5" cy="2556.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6009.5" y="2559.6011">set_type() : void</text><ellipse cx="6000.5" cy="2569.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="6009.5" y="2572.4058">context() const : inja::json</text><!--MD5=[a2b7048e31aebc0ffeb4eb6e2a1be8d2]
class C_0001796282762108527255--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L26" target="_top" title="class_member" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L26" xlink:show="new" xlink:title="class_member" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="124.8281" id="C_0001796282762108527255" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="5691" y="3076.9531"/><ellipse cx="5751.25" cy="3092.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5754.2188,3098.5938 Q5753.6406,3098.8906 5753,3099.0313 Q5752.3594,3099.1875 5751.6563,3099.1875 Q5749.1563,3099.1875 5747.8281,3097.5469 Q5746.5156,3095.8906 5746.5156,3092.7656 Q5746.5156,3089.6406 5747.8281,3087.9844 Q5749.1563,3086.3281 5751.6563,3086.3281 Q5752.3594,3086.3281 5753,3086.4844 Q5753.6563,3086.6406 5754.2188,3086.9375 L5754.2188,3089.6563 Q5753.5938,3089.0781 5753,3088.8125 Q5752.4063,3088.5313 5751.7813,3088.5313 Q5750.4375,3088.5313 5749.75,3089.6094 Q5749.0625,3090.6719 5749.0625,3092.7656 Q5749.0625,3094.8594 5749.75,3095.9375 Q5750.4375,3097 5751.7813,3097 Q5752.4063,3097 5753,3096.7344 Q5753.5938,3096.4531 5754.2188,3095.875 L5754.2188,3098.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="5771.75" y="3097.1074">class_member</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5692" x2="5908" y1="3108.9531" y2="3108.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L37" target="_top" title="is_relationship_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L37" xlink:show="new" xlink:title="is_relationship_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5697" y="3114.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5699" y="3116.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L37" target="_top" title="is_relationship_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L37" xlink:show="new" xlink:title="is_relationship_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5711" y="3123.1636">is_relationship_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L38" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L38" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5697" y="3127.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5699" y="3129.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L38" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L38" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5711" y="3135.9683">is_static_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5692" x2="5908" y1="3142.5625" y2="3142.5625"/><ellipse cx="5702" cy="3153.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5711" y="3156.7729">class_member() : void</text><ellipse cx="5702" cy="3166.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="5711" y="3169.5776">~class_member() = default : void</text><ellipse cx="5702" cy="3179.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5711" y="3182.3823">is_static() const : bool</text><ellipse cx="5702" cy="3191.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5711" y="3195.187">is_static() : void</text><!--MD5=[5992c67bed5fafc2309ff7d957956f6e]
class C_0000605669033368926050--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L28" target="_top" title="method_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L28" xlink:show="new" xlink:title="method_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="201.6563" id="C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.5;" width="234" x="5990" y="3866.9531"/><ellipse cx="6042.75" cy="3882.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6045.7188,3888.5938 Q6045.1406,3888.8906 6044.5,3889.0313 Q6043.8594,3889.1875 6043.1563,3889.1875 Q6040.6563,3889.1875 6039.3281,3887.5469 Q6038.0156,3885.8906 6038.0156,3882.7656 Q6038.0156,3879.6406 6039.3281,3877.9844 Q6040.6563,3876.3281 6043.1563,3876.3281 Q6043.8594,3876.3281 6044.5,3876.4844 Q6045.1563,3876.6406 6045.7188,3876.9375 L6045.7188,3879.6563 Q6045.0938,3879.0781 6044.5,3878.8125 Q6043.9063,3878.5313 6043.2813,3878.5313 Q6041.9375,3878.5313 6041.25,3879.6094 Q6040.5625,3880.6719 6040.5625,3882.7656 Q6040.5625,3884.8594 6041.25,3885.9375 Q6041.9375,3887 6043.2813,3887 Q6043.9063,3887 6044.5,3886.7344 Q6045.0938,3886.4531 6045.7188,3885.875 L6045.7188,3888.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="6063.25" y="3887.1074">method_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5991" x2="6223" y1="3898.9531" y2="3898.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L47" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L47" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5996" y="3904.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5998" y="3906.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L47" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L47" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6010" y="3913.1636">type_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L48" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L48" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5996" y="3917.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5998" y="3919.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L48" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L48" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="6010" y="3925.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L49" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L49" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5996" y="3930.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5998" y="3932.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L49" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L49" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6010" y="3938.7729">default_value_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5991" x2="6223" y1="3945.3672" y2="3945.3672"/><ellipse cx="6001" cy="3956.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6010" y="3959.5776">method_parameter() = default : void</text><ellipse cx="6001" cy="3969.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6010" y="3972.3823">method_parameter() : void</text><ellipse cx="6001" cy="3981.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6010" y="3985.187">set_type() : void</text><ellipse cx="6001" cy="3994.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="6010" y="3997.9917">type() const : std::string</text><ellipse cx="6001" cy="4007.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="6010" y="4010.7964">set_name() : void</text><ellipse cx="6001" cy="4020.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6010" y="4023.6011">name() const : std::string</text><ellipse cx="6001" cy="4033.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="6010" y="4036.4058">set_default_value() : void</text><ellipse cx="6001" cy="4046" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="6010" y="4049.2104">default_value() const : std::string</text><ellipse cx="6001" cy="4058.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6010" y="4062.0151">to_string() const : std::string</text><!--MD5=[3fbd1476055f798f732379619b702fab]
class C_0000204145716468348671--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L32" target="_top" title="class_method" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L32" xlink:show="new" xlink:title="class_method" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="291.2891" id="C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.5;" width="385" x="5914.5" y="2993.9531"/><ellipse cx="6059.75" cy="3009.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6062.7188,3015.5938 Q6062.1406,3015.8906 6061.5,3016.0313 Q6060.8594,3016.1875 6060.1563,3016.1875 Q6057.6563,3016.1875 6056.3281,3014.5469 Q6055.0156,3012.8906 6055.0156,3009.7656 Q6055.0156,3006.6406 6056.3281,3004.9844 Q6057.6563,3003.3281 6060.1563,3003.3281 Q6060.8594,3003.3281 6061.5,3003.4844 Q6062.1563,3003.6406 6062.7188,3003.9375 L6062.7188,3006.6563 Q6062.0938,3006.0781 6061.5,3005.8125 Q6060.9063,3005.5313 6060.2813,3005.5313 Q6058.9375,3005.5313 6058.25,3006.6094 Q6057.5625,3007.6719 6057.5625,3009.7656 Q6057.5625,3011.8594 6058.25,3012.9375 Q6058.9375,3014 6060.2813,3014 Q6060.9063,3014 6061.5,3013.7344 Q6062.0938,3013.4531 6062.7188,3012.875 L6062.7188,3015.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="6080.25" y="3014.1074">class_method</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5915.5" x2="6298.5" y1="3025.9531" y2="3025.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L60" target="_top" title="is_pure_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L60" xlink:show="new" xlink:title="is_pure_virtual_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5920.5" y="3031.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5922.5" y="3033.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L60" target="_top" title="is_pure_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L60" xlink:show="new" xlink:title="is_pure_virtual_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="5934.5" y="3040.1636">is_pure_virtual_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L61" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L61" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5920.5" y="3044.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5922.5" y="3046.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L61" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L61" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5934.5" y="3052.9683">is_virtual_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L62" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L62" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5920.5" y="3057.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5922.5" y="3059.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L62" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L62" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5934.5" y="3065.7729">is_const_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L63" target="_top" title="is_defaulted_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L63" xlink:show="new" xlink:title="is_defaulted_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5920.5" y="3070.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5922.5" y="3072.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L63" target="_top" title="is_defaulted_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L63" xlink:show="new" xlink:title="is_defaulted_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="5934.5" y="3078.5776">is_defaulted_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L64" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L64" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5920.5" y="3083.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5922.5" y="3085.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L64" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L64" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5934.5" y="3091.3823">is_static_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5915.5" x2="6298.5" y1="3097.9766" y2="3097.9766"/><ellipse cx="5925.5" cy="3108.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="5934.5" y="3112.187">class_method() : void</text><ellipse cx="5925.5" cy="3121.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="5934.5" y="3124.9917">~class_method() = default : void</text><ellipse cx="5925.5" cy="3134.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5934.5" y="3137.7964">is_pure_virtual() const : bool</text><ellipse cx="5925.5" cy="3147.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5934.5" y="3150.6011">is_pure_virtual() : void</text><ellipse cx="5925.5" cy="3160.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5934.5" y="3163.4058">is_virtual() const : bool</text><ellipse cx="5925.5" cy="3173" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5934.5" y="3176.2104">is_virtual() : void</text><ellipse cx="5925.5" cy="3185.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5934.5" y="3189.0151">is_const() const : bool</text><ellipse cx="5925.5" cy="3198.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5934.5" y="3201.8198">is_const() : void</text><ellipse cx="5925.5" cy="3211.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5934.5" y="3214.6245">is_defaulted() const : bool</text><ellipse cx="5925.5" cy="3224.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5934.5" y="3227.4292">is_defaulted() : void</text><ellipse cx="5925.5" cy="3237.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5934.5" y="3240.2339">is_static() const : bool</text><ellipse cx="5925.5" cy="3249.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5934.5" y="3253.0386">is_static() : void</text><ellipse cx="5925.5" cy="3262.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="5934.5" y="3265.8433">parameters() const : const std::vector&lt;method_parameter&gt; &amp;</text><ellipse cx="5925.5" cy="3275.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5934.5" y="3278.6479">add_parameter() : void</text><!--MD5=[2868650fca262846bc3d725c06fe497c]
class C_0002097158357956220758--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L27" target="_top" title="class_parent" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L27" xlink:show="new" xlink:title="class_parent" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="188.8516" id="C_0002097158357956220758" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="5219.5" y="3044.9531"/><ellipse cx="5310.75" cy="3060.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5313.7188,3066.5938 Q5313.1406,3066.8906 5312.5,3067.0313 Q5311.8594,3067.1875 5311.1563,3067.1875 Q5308.6563,3067.1875 5307.3281,3065.5469 Q5306.0156,3063.8906 5306.0156,3060.7656 Q5306.0156,3057.6406 5307.3281,3055.9844 Q5308.6563,3054.3281 5311.1563,3054.3281 Q5311.8594,3054.3281 5312.5,3054.4844 Q5313.1563,3054.6406 5313.7188,3054.9375 L5313.7188,3057.6563 Q5313.0938,3057.0781 5312.5,3056.8125 Q5311.9063,3056.5313 5311.2813,3056.5313 Q5309.9375,3056.5313 5309.25,3057.6094 Q5308.5625,3058.6719 5308.5625,3060.7656 Q5308.5625,3062.8594 5309.25,3063.9375 Q5309.9375,3065 5311.2813,3065 Q5311.9063,3065 5312.5,3064.7344 Q5313.0938,3064.4531 5313.7188,3063.875 L5313.7188,3066.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="5331.25" y="3065.1074">class_parent</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220.5" x2="5489.5" y1="3076.9531" y2="3076.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L42" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L42" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5225.5" y="3082.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227.5" y="3084.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L42" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L42" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5239.5" y="3091.1636">id_ : common::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L43" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L43" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5225.5" y="3095.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227.5" y="3097.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L43" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L43" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5239.5" y="3103.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L44" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L44" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5225.5" y="3108.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227.5" y="3110.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L44" target="_top" title="is_virtual_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L44" xlink:show="new" xlink:title="is_virtual_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5239.5" y="3116.7729">is_virtual_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220.5" x2="5489.5" y1="3123.3672" y2="3123.3672"/><ellipse cx="5230.5" cy="3134.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5239.5" y="3137.5776">set_name() : void</text><ellipse cx="5230.5" cy="3147.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5239.5" y="3150.3823">name() const : std::string</text><ellipse cx="5230.5" cy="3159.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5239.5" y="3163.187">id() const : common::id_t</text><ellipse cx="5230.5" cy="3172.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5239.5" y="3175.9917">set_id() : void</text><ellipse cx="5230.5" cy="3185.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5239.5" y="3188.7964">is_virtual() : void</text><ellipse cx="5230.5" cy="3198.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5239.5" y="3201.6011">is_virtual() const : bool</text><ellipse cx="5230.5" cy="3211.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5239.5" y="3214.4058">set_access() : void</text><ellipse cx="5230.5" cy="3224" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="5239.5" y="3227.2104">access() const : common::model::access_t</text><!--MD5=[ae47341ca1a22ddcd7d0b4ea2daf1996]
class C_0001292034357466653182--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L35" target="_top" title="class_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L35" xlink:show="new" xlink:title="class_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="432.1406" id="C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.5;" width="348" x="5636" y="2274.9531"/><ellipse cx="5786.75" cy="2290.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5789.7188,2296.5938 Q5789.1406,2296.8906 5788.5,2297.0313 Q5787.8594,2297.1875 5787.1563,2297.1875 Q5784.6563,2297.1875 5783.3281,2295.5469 Q5782.0156,2293.8906 5782.0156,2290.7656 Q5782.0156,2287.6406 5783.3281,2285.9844 Q5784.6563,2284.3281 5787.1563,2284.3281 Q5787.8594,2284.3281 5788.5,2284.4844 Q5789.1563,2284.6406 5789.7188,2284.9375 L5789.7188,2287.6563 Q5789.0938,2287.0781 5788.5,2286.8125 Q5787.9063,2286.5313 5787.2813,2286.5313 Q5785.9375,2286.5313 5785.25,2287.6094 Q5784.5625,2288.6719 5784.5625,2290.7656 Q5784.5625,2292.8594 5785.25,2293.9375 Q5785.9375,2295 5787.2813,2295 Q5787.9063,2295 5788.5,2294.7344 Q5789.0938,2294.4531 5789.7188,2293.875 L5789.7188,2296.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="5807.25" y="2295.1074">class_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5637" x2="5983" y1="2306.9531" y2="2306.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L86" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L86" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5642" y="2312.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5644" y="2314.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L86" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L86" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5656" y="2321.1636">is_struct_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L87" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L87" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5642" y="2325.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5644" y="2327.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L87" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L87" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="5656" y="2333.9683">is_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L88" target="_top" title="is_union_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L88" xlink:show="new" xlink:title="is_union_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5642" y="2338.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5644" y="2340.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L88" target="_top" title="is_union_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L88" xlink:show="new" xlink:title="is_union_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5656" y="2346.7729">is_union_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L92" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L92" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5642" y="2351.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5644" y="2353.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L92" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L92" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="5656" y="2359.5776">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L94" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L94" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5642" y="2364.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5644" y="2366.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L94" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L94" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="5656" y="2372.3823">full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L96" target="_top" title="template_specialization_found_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L96" xlink:show="new" xlink:title="template_specialization_found_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5642" y="2376.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5644" y="2378.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L96" target="_top" title="template_specialization_found_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L96" xlink:show="new" xlink:title="template_specialization_found_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="5656" y="2385.187">template_specialization_found_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5637" x2="5983" y1="2391.7813" y2="2391.7813"/><ellipse cx="5647" cy="2402.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5656" y="2405.9917">class_() : void</text><ellipse cx="5647" cy="2415.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5656" y="2418.7964">class_() : void</text><ellipse cx="5647" cy="2428.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5656" y="2431.6011">class_() : void</text><ellipse cx="5647" cy="2441.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="5656" y="2444.4058">operator=() : class_diagram::model::class_ &amp;</text><ellipse cx="5647" cy="2454" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="5656" y="2457.2104">operator=() : class_diagram::model::class_ &amp;</text><ellipse cx="5647" cy="2466.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5656" y="2470.0151">type_name() const : std::string</text><ellipse cx="5647" cy="2479.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5656" y="2482.8198">is_struct() const : bool</text><ellipse cx="5647" cy="2492.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="5656" y="2495.6245">is_struct() : void</text><ellipse cx="5647" cy="2505.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5656" y="2508.4292">is_template() const : bool</text><ellipse cx="5647" cy="2518.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5656" y="2521.2339">is_template() : void</text><ellipse cx="5647" cy="2530.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5656" y="2534.0386">is_union() const : bool</text><ellipse cx="5647" cy="2543.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5656" y="2546.8433">is_union() : void</text><ellipse cx="5647" cy="2556.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="5656" y="2559.6479">add_member() : void</text><ellipse cx="5647" cy="2569.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="5656" y="2572.4526">add_method() : void</text><ellipse cx="5647" cy="2582.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="5656" y="2585.2573">add_parent() : void</text><ellipse cx="5647" cy="2594.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5656" y="2598.062">members() const : const std::vector&lt;class_member&gt; &amp;</text><ellipse cx="5647" cy="2607.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5656" y="2610.8667">methods() const : const std::vector&lt;class_method&gt; &amp;</text><ellipse cx="5647" cy="2620.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="5656" y="2623.6714">parents() const : const std::vector&lt;class_parent&gt; &amp;</text><ellipse cx="5647" cy="2633.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5656" y="2636.4761">full_name() const : std::string</text><ellipse cx="5647" cy="2646.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5656" y="2649.2808">full_name_no_ns() const : std::string</text><ellipse cx="5647" cy="2658.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5656" y="2662.0854">is_abstract() const : bool</text><ellipse cx="5647" cy="2671.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5656" y="2674.8901">calculate_template_specialization_match() const : int</text><ellipse cx="5647" cy="2684.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5656" y="2687.6948">template_specialization_found() : void</text><ellipse cx="5647" cy="2697.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="5656" y="2700.4995">template_specialization_found() const : bool</text><!--MD5=[4cbe40d2cb39dcf6a958985b2659bdb7]
class C_0000273196721973298858--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L32" target="_top" title="requires_expression" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L32" xlink:show="new" xlink:title="requires_expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="60.8047" id="C_0000273196721973298858" style="stroke: #A80036; stroke-width: 1.5;" width="253" x="5219.5" y="1702.9531"/><ellipse cx="5278.75" cy="1718.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5281.7188,1724.5938 Q5281.1406,1724.8906 5280.5,1725.0313 Q5279.8594,1725.1875 5279.1563,1725.1875 Q5276.6563,1725.1875 5275.3281,1723.5469 Q5274.0156,1721.8906 5274.0156,1718.7656 Q5274.0156,1715.6406 5275.3281,1713.9844 Q5276.6563,1712.3281 5279.1563,1712.3281 Q5279.8594,1712.3281 5280.5,1712.4844 Q5281.1563,1712.6406 5281.7188,1712.9375 L5281.7188,1715.6563 Q5281.0938,1715.0781 5280.5,1714.8125 Q5279.9063,1714.5313 5279.2813,1714.5313 Q5277.9375,1714.5313 5277.25,1715.6094 Q5276.5625,1716.6719 5276.5625,1718.7656 Q5276.5625,1720.8594 5277.25,1721.9375 Q5277.9375,1723 5279.2813,1723 Q5279.9063,1723 5280.5,1722.7344 Q5281.0938,1722.4531 5281.7188,1721.875 L5281.7188,1724.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="126" x="5299.25" y="1723.1074">requires_expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220.5" x2="5471.5" y1="1734.9531" y2="1734.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L34" target="_top" title="requirements" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L34" xlink:show="new" xlink:title="requirements" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5225.5" y="1740.9531"/><ellipse cx="5230.5" cy="1745.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L34" target="_top" title="requirements" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L34" xlink:show="new" xlink:title="requirements" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="5239.5" y="1749.1636">requirements : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220.5" x2="5471.5" y1="1755.7578" y2="1755.7578"/><!--MD5=[dd3d40541e24383f89990969973b4760]
class C_0001374849051752224500--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L37" target="_top" title="concept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L37" xlink:show="new" xlink:title="concept_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="227.2656" id="C_0001374849051752224500" style="stroke: #A80036; stroke-width: 1.5;" width="439" x="5219.5" y="2736.9531"/><ellipse cx="5406.25" cy="2752.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5409.2188,2758.5938 Q5408.6406,2758.8906 5408,2759.0313 Q5407.3594,2759.1875 5406.6563,2759.1875 Q5404.1563,2759.1875 5402.8281,2757.5469 Q5401.5156,2755.8906 5401.5156,2752.7656 Q5401.5156,2749.6406 5402.8281,2747.9844 Q5404.1563,2746.3281 5406.6563,2746.3281 Q5407.3594,2746.3281 5408,2746.4844 Q5408.6563,2746.6406 5409.2188,2746.9375 L5409.2188,2749.6563 Q5408.5938,2749.0781 5408,2748.8125 Q5407.4063,2748.5313 5406.7813,2748.5313 Q5405.4375,2748.5313 5404.75,2749.6094 Q5404.0625,2750.6719 5404.0625,2752.7656 Q5404.0625,2754.8594 5404.75,2755.9375 Q5405.4375,2757 5406.7813,2757 Q5407.4063,2757 5408,2756.7344 Q5408.5938,2756.4531 5409.2188,2755.875 L5409.2188,2758.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="5426.75" y="2757.1074">concept_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220.5" x2="5657.5" y1="2768.9531" y2="2768.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L65" target="_top" title="requires_expression_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L65" xlink:show="new" xlink:title="requires_expression_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5225.5" y="2774.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227.5" y="2776.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L65" target="_top" title="requires_expression_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L65" xlink:show="new" xlink:title="requires_expression_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5239.5" y="2783.1636">requires_expression_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L69" target="_top" title="requires_statements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L69" xlink:show="new" xlink:title="requires_statements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5225.5" y="2787.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5227.5" y="2789.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L69" target="_top" title="requires_statements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L69" xlink:show="new" xlink:title="requires_statements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="5239.5" y="2795.9683">requires_statements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5220.5" x2="5657.5" y1="2802.5625" y2="2802.5625"/><ellipse cx="5230.5" cy="2813.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5239.5" y="2816.7729">concept_() : void</text><ellipse cx="5230.5" cy="2826.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="5239.5" y="2829.5776">concept_() : void</text><ellipse cx="5230.5" cy="2839.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5239.5" y="2842.3823">concept_() = default : void</text><ellipse cx="5230.5" cy="2851.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="5239.5" y="2855.187">operator=() : class_diagram::model::concept_ &amp;</text><ellipse cx="5230.5" cy="2864.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="5239.5" y="2867.9917">operator=() : class_diagram::model::concept_ &amp;</text><ellipse cx="5230.5" cy="2877.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5239.5" y="2880.7964">type_name() const : std::string</text><ellipse cx="5230.5" cy="2890.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5239.5" y="2893.6011">full_name() const : std::string</text><ellipse cx="5230.5" cy="2903.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5239.5" y="2906.4058">full_name_no_ns() const : std::string</text><ellipse cx="5230.5" cy="2916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5239.5" y="2919.2104">add_parameter() : void</text><ellipse cx="5230.5" cy="2928.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="5239.5" y="2932.0151">requires_parameters() const : const std::vector&lt;method_parameter&gt; &amp;</text><ellipse cx="5230.5" cy="2941.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5239.5" y="2944.8198">add_statement() : void</text><ellipse cx="5230.5" cy="2954.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="5239.5" y="2957.6245">requires_statements() const : const std::vector&lt;std::string&gt; &amp;</text><!--MD5=[ad7c1a05bec632e2a3018185b58507d2]
class C_0000724392977093650506--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L27" target="_top" title="enum_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L27" xlink:show="new" xlink:title="enum_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="176.0469" id="C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="5307" y="2402.9531"/><ellipse cx="5444.25" cy="2418.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5447.2188,2424.5938 Q5446.6406,2424.8906 5446,2425.0313 Q5445.3594,2425.1875 5444.6563,2425.1875 Q5442.1563,2425.1875 5440.8281,2423.5469 Q5439.5156,2421.8906 5439.5156,2418.7656 Q5439.5156,2415.6406 5440.8281,2413.9844 Q5442.1563,2412.3281 5444.6563,2412.3281 Q5445.3594,2412.3281 5446,2412.4844 Q5446.6563,2412.6406 5447.2188,2412.9375 L5447.2188,2415.6563 Q5446.5938,2415.0781 5446,2414.8125 Q5445.4063,2414.5313 5444.7813,2414.5313 Q5443.4375,2414.5313 5442.75,2415.6094 Q5442.0625,2416.6719 5442.0625,2418.7656 Q5442.0625,2420.8594 5442.75,2421.9375 Q5443.4375,2423 5444.7813,2423 Q5445.4063,2423 5446,2422.7344 Q5446.5938,2422.4531 5447.2188,2421.875 L5447.2188,2424.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="5464.75" y="2423.1074">enum_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5308" x2="5630" y1="2434.9531" y2="2434.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L49" target="_top" title="constants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L49" xlink:show="new" xlink:title="constants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5313" y="2440.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5315" y="2442.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L49" target="_top" title="constants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L49" xlink:show="new" xlink:title="constants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="5327" y="2449.1636">constants_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5308" x2="5630" y1="2455.7578" y2="2455.7578"/><ellipse cx="5318" cy="2466.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5327" y="2469.9683">enum_() : void</text><ellipse cx="5318" cy="2479.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5327" y="2482.7729">enum_() : void</text><ellipse cx="5318" cy="2492.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5327" y="2495.5776">enum_() : void</text><ellipse cx="5318" cy="2505.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="5327" y="2508.3823">operator=() : class_diagram::model::enum_ &amp;</text><ellipse cx="5318" cy="2517.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="5327" y="2521.187">operator=() : class_diagram::model::enum_ &amp;</text><ellipse cx="5318" cy="2530.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5327" y="2533.9917">type_name() const : std::string</text><ellipse cx="5318" cy="2543.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5327" y="2546.7964">full_name() const : std::string</text><ellipse cx="5318" cy="2556.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="5327" y="2559.6011">constants() : std::vector&lt;std::string&gt; &amp;</text><ellipse cx="5318" cy="2569.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5327" y="2572.4058">constants() const : const std::vector&lt;std::string&gt; &amp;</text><!--MD5=[01d3c478a0ba4034ff864e8146f50cf4]
class C_0000914432076690777687--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f2plqtv20eqfa)" height="406.5313" id="C_0000914432076690777687" style="stroke: #A80036; stroke-width: 1.5;" width="440" x="5478" y="1529.9531"/><ellipse cx="5668.25" cy="1545.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5671.2188,1551.5938 Q5670.6406,1551.8906 5670,1552.0313 Q5669.3594,1552.1875 5668.6563,1552.1875 Q5666.1563,1552.1875 5664.8281,1550.5469 Q5663.5156,1548.8906 5663.5156,1545.7656 Q5663.5156,1542.6406 5664.8281,1540.9844 Q5666.1563,1539.3281 5668.6563,1539.3281 Q5669.3594,1539.3281 5670,1539.4844 Q5670.6563,1539.6406 5671.2188,1539.9375 L5671.2188,1542.6563 Q5670.5938,1542.0781 5670,1541.8125 Q5669.4063,1541.5313 5668.7813,1541.5313 Q5667.4375,1541.5313 5666.75,1542.6094 Q5666.0625,1543.6719 5666.0625,1545.7656 Q5666.0625,1547.8594 5666.75,1548.9375 Q5667.4375,1550 5668.7813,1550 Q5669.4063,1550 5670,1549.7344 Q5670.5938,1549.4531 5671.2188,1548.875 L5671.2188,1551.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5688.75" y="1550.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5479" x2="5917" y1="1561.9531" y2="1561.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5479" x2="5917" y1="1569.9531" y2="1569.9531"/><ellipse cx="5489" cy="1580.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5498" y="1584.1636">diagram() = default : void</text><ellipse cx="5489" cy="1593.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5498" y="1596.9683">diagram() : void</text><ellipse cx="5489" cy="1606.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5498" y="1609.7729">diagram() = default : void</text><ellipse cx="5489" cy="1619.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5498" y="1622.5776">operator=() : class_diagram::model::diagram &amp;</text><ellipse cx="5489" cy="1632.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="5498" y="1635.3823">operator=() = default : class_diagram::model::diagram &amp;</text><ellipse cx="5489" cy="1644.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="5498" y="1648.187">type() const : common::model::diagram_t</text><ellipse cx="5489" cy="1657.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="5498" y="1660.9917">get() const : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="5489" cy="1670.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="5498" y="1673.7964">get() const : common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="5489" cy="1683.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="5498" y="1686.6011">classes() const : const common::reference_vector&lt;class_&gt; &amp;</text><ellipse cx="5489" cy="1696.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="5498" y="1699.4058">enums() const : const common::reference_vector&lt;enum_&gt; &amp;</text><ellipse cx="5489" cy="1709" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="5498" y="1712.2104">concepts() const : const common::reference_vector&lt;concept_&gt; &amp;</text><ellipse cx="5489" cy="1721.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5498" y="1725.0151">has_class() const : bool</text><ellipse cx="5489" cy="1734.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5498" y="1737.8198">has_enum() const : bool</text><ellipse cx="5489" cy="1747.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="5498" y="1750.6245">has_concept() const : bool</text><ellipse cx="5489" cy="1760.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="5498" y="1763.4292">get_class() const : common::optional_ref&lt;class_&gt;</text><ellipse cx="5489" cy="1773.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="5498" y="1776.2339">get_class() const : common::optional_ref&lt;class_&gt;</text><ellipse cx="5489" cy="1785.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5498" y="1789.0386">get_enum() const : common::optional_ref&lt;enum_&gt;</text><ellipse cx="5489" cy="1798.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5498" y="1801.8433">get_enum() const : common::optional_ref&lt;enum_&gt;</text><ellipse cx="5489" cy="1811.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="5498" y="1814.6479">get_concept() const : common::optional_ref&lt;concept_&gt;</text><ellipse cx="5489" cy="1824.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="5498" y="1827.4526">get_concept() const : common::optional_ref&lt;concept_&gt;</text><ellipse cx="5489" cy="1837.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5498" y="1840.2573">add_class() : bool</text><ellipse cx="5489" cy="1849.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="5498" y="1853.062">add_enum() : bool</text><ellipse cx="5489" cy="1862.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5498" y="1865.8667">add_concept() : bool</text><ellipse cx="5489" cy="1875.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="5498" y="1878.6714">add_package() : bool</text><ellipse cx="5489" cy="1888.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5498" y="1891.4761">to_alias() const : std::string</text><ellipse cx="5489" cy="1901.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5498" y="1904.2808">get_parents() const : void</text><ellipse cx="5489" cy="1913.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="5498" y="1917.0854">has_element() const : bool</text><ellipse cx="5489" cy="1926.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5498" y="1929.8901">context() const : inja::json</text></a><!--MD5=[d3aab55902f013c3cb0f0512036c505c]
reverse link C_0000845978329661395972 to C_0002193110380171976294--><path d="M4785.83,2188.2131 C4793.12,2342.9531 4808.81,2675.6431 4814.7,2800.6431 " fill="none" id="C_0000845978329661395972&lt;-C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4785.21,2175.1431,4781.498,2181.3254,4785.777,2187.1297,4789.489,2180.9474,4785.21,2175.1431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4815" cy="2491.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="13" x="4822" y="2495.52">pr</text><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M4124.06,2874.6931 C4110.18,2939.9931 4069.57,3131.1031 4034.68,3295.2631 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4041.51,3296.7731,4030.51,3314.8831,4027.82,3293.8631,4041.51,3296.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M4385.05,1311.1831 C4435.28,1361.4531 4492.67,1406.3931 4556,1435.9531 C4572.37,1443.5931 4867.17,1432.3431 4881,1443.9531 C5062.31,1596.1831 5040.15,1920.4531 5022.85,2049.9031 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4375.75,1301.7431,4377.1092,1308.825,4384.169,1310.2941,4382.8099,1303.2123,4375.75,1301.7431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5037" y="1731.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="5047" y="1738.02">kind_</text><!--MD5=[7566fda333217dfb046318d35641bbd5]
reverse link C_0000178138562743079529 to C_0000845978329661395972--><path d="M4385.02,1307.1631 C4435.45,1358.2231 4492.92,1404.4731 4556,1435.9531 C4576.74,1446.3031 4642.77,1428.4531 4660,1443.9531 C4829.51,1596.4231 4811.34,1901.1631 4793.23,2036.9531 " fill="none" id="C_0000178138562743079529&lt;-C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4375.69,1297.5731,4377.0107,1304.6623,4384.0625,1306.1697,4382.7418,1299.0806,4375.69,1297.5731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4807" y="1731.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="4817" y="1738.02">context_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M4385.98,916.9731 C4401.24,932.2331 4410.5,954.2231 4410.5,982.9531 C4410.5,1017.6431 4397,1042.5131 4375.73,1057.5531 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4375.73,908.3531,4377.7435,915.2774,4384.9096,916.0819,4382.8961,909.1577,4375.73,908.3531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4418.5" y="980.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="4428.5" y="987.52">template_params_</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M4030.05,2258.1731 C4025.23,2425.6831 4012.74,2676.3631 3981,2706.9531 C3967.91,2719.5731 1586.65,2828.2931 1179.79,2846.7831 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4030.42,2245.0131,4026.2503,2250.8964,4030.0773,2257.0082,4034.247,2251.1249,4030.42,2245.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4032" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4042" y="2495.52">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M4185.92,2241.8731 C4187.94,2242.9331 4189.97,2243.9631 4192,2244.9531 C4253.45,2275.0531 4297.82,2223.5631 4343,2274.9531 C4377.33,2313.9931 4381.62,2668.8531 4382.02,2800.5531 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4174.43,2235.4931,4177.7337,2241.9029,4184.9211,2241.3186,4181.6174,2234.9088,4174.43,2235.4931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4384" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="4394" y="2495.52">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M4006.54,339.0631 C3898.77,373.7231 3785.27,432.0531 3721,529.9531 C3665.76,614.1031 3703.81,1336.7631 3721,1435.9531 C3761.37,1668.9331 3785.31,1730.1731 3900,1936.9531 C3905.5,1946.8731 3911.58,1956.8131 3918.02,1966.6331 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4004.7,332.3031,4025.88,333.0731,4008.84,345.6831,4004.7,332.3031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M3833.65,1045.8631 C3866.57,1220.7331 3960.84,1721.5831 4006.96,1966.5931 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3826.77,1047.1431,3829.95,1026.1931,3840.53,1044.5531,3826.77,1047.1431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M3485.16,1161.5631 C3479.81,1406.9731 3486.71,1831.5131 3592,1936.9531 C3636.53,1981.5431 3816.21,1941.8131 3874,1966.9531 C3880.03,1969.5731 3886,1972.5131 3891.89,1975.7131 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3485.46,1148.2031,3481.3225,1154.1091,3485.1828,1160.1999,3489.3204,1154.2939,3485.46,1148.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3595" y="1731.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="3605" y="1738.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M4006.32,369.0831 C3868.87,411.7331 3725.64,460.0131 3701,482.9531 C3694.26,489.2231 3617.42,674.8931 3558.85,817.9231 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4004.49,362.3131,4025.66,363.1031,4008.62,375.6931,4004.49,362.3131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M3517.42,419.3231 C3506.57,439.7831 3497.19,461.3331 3491,482.9531 C3459.91,591.5331 3460.75,718.9431 3469.06,817.8431 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3511.42,415.7031,3527.29,401.6531,3523.64,422.5331,3511.42,415.7031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M4332.77,2212.1731 C4320.96,2232.1531 4310.32,2253.5431 4303,2274.9531 C4240.69,2457.2631 4346.66,2531.5231 4267,2706.9531 C4244,2757.5931 4195.1,2801.0531 4162.13,2826.2331 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4339.63,2200.8931,4333.0951,2203.942,4333.3961,2211.1468,4339.9309,2208.0979,4339.63,2200.8931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4306" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="4316" y="2495.52">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M4258.38,2207.5031 C4236.41,2220.6531 4213.85,2233.5031 4192,2244.9531 C4162.02,2260.6631 4140.63,2246.6931 4122,2274.9531 C4061.12,2367.2831 4110.96,2730.7131 4125.39,2826.3131 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4269.81,2200.6131,4262.6062,2200.2878,4259.5352,2206.8123,4266.739,2207.1376,4269.81,2200.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4125" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="4135" y="2495.52">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M3567.52,1166.4131 C3607.12,1252.1031 3660.09,1353.3231 3721,1435.9531 C3891.67,1667.4631 4145.5,1890.3031 4293.32,2011.3331 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3561.09,1169.2031,3559.15,1148.1031,3573.83,1163.3831,3561.09,1169.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M4749.58,383.5831 C4687.04,425.2831 4615.51,476.8431 4556,529.9531 C4493.79,585.4731 4431.71,650.2631 4375.72,713.1731 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4760.74,376.1731,4753.5289,376.1577,4750.7412,382.8082,4757.9523,382.8236,4760.74,376.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4611" y="489.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4621" y="496.02">templates_</text><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M3831.94,2874.6931 C3845.82,2939.9931 3886.43,3131.1031 3921.32,3295.2631 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="3928.18,3293.8631,3925.49,3314.8831,3914.49,3296.7731,3928.18,3293.8631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M3682.25,2257.8831 C3683.88,2263.6331 3685.47,2269.3431 3687,2274.9531 C3745.21,2487.8531 3804.39,2748.3631 3821.86,2826.3531 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3678.64,2245.2131,3676.4422,2252.0812,3681.9367,2256.7514,3684.1344,2249.8834,3678.64,2245.2131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3795" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="3805" y="2495.52">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M3631.51,2258.3431 C3626.39,2431.1231 3618.33,2703.2131 3615.25,2807.1631 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3631.9,2245.3031,3627.7236,2251.1817,3631.5437,2257.2978,3635.7201,2251.4192,3631.9,2245.3031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3633" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3643" y="2495.52">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M3460.21,1168.0831 C3433.99,1364.6131 3414.07,1682.1431 3504,1936.9531 C3507.58,1947.0931 3512.04,1957.1031 3517.14,1966.8631 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3453.32,1166.8331,3462.97,1147.9731,3467.18,1168.7431,3453.32,1166.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M3811.68,1046.1231 C3782.63,1221.2431 3699.59,1721.7031 3658.96,1966.5931 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3804.81,1044.7731,3814.99,1026.1931,3818.62,1047.0631,3804.81,1044.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4768.17,780.3231 C4721.89,687.0031 4652.71,584.8531 4556,529.9531 C4456.24,473.3231 3632.44,537.3831 3524,499.9531 C3435.63,469.4531 3351.69,401.1531 3297.89,350.4831 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4773.98,792.2431,4774.9447,785.0968,4768.7192,781.4578,4767.7545,788.6041,4773.98,792.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3527" y="489.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3537" y="496.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M3303.27,350.4631 C3346.49,387.1631 3406.39,430.8131 3468,452.9531 C3696.1,534.9331 4347.74,405.9431 4556,529.9531 C4653.49,588.0031 4723.45,693.3031 4769.99,787.6731 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4772.32,792.4431,4771.9483,782.6013,4770.1183,787.954,4764.7656,786.124,4772.32,792.4431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4484" y="489.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4494" y="496.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M4441.24,2220.2331 C4445.89,2238.5131 4450.61,2257.2531 4455,2274.9531 C4496.99,2444.2031 4544.06,2642.0131 4570.96,2755.8131 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4434.4,2221.7431,4436.24,2200.6331,4447.97,2218.2831,4434.4,2221.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M3816.37,1046.4931 C3811.32,1144.1831 3817.19,1332.4931 3923,1435.9531 C3935.96,1448.6331 3946.52,1436.3831 3963,1443.9531 C4305.98,1601.4431 4466.61,1627.7131 4632,1966.9531 C4698.62,2103.5931 4638.67,2557.8531 4608.23,2755.8431 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3809.41,1045.7631,3817.65,1026.2431,3823.38,1046.6431,3809.41,1045.7631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M2301,1090.6531 C2301,1333.4131 2301,1917.7331 2301,2068.8131 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2301,1077.6031,2297,1083.6031,2301,1089.6031,2305,1083.6031,2301,1077.6031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2304" y="1731.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2314" y="1738.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M2439.92,2044.2531 C2425.75,2012.9531 2410.01,1973.7231 2401,1936.9531 C2348.62,1723.2531 2379.06,1662.7631 2356,1443.9531 C2342.62,1316.9731 2324.68,1170.5831 2312.99,1077.6931 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2445.46,2056.2731,2446.5824,2049.1499,2440.4388,2045.3741,2439.3164,2052.4974,2445.46,2056.2731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2404" y="1731.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="2414" y="1738.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M2351.45,1096.1731 C2389.77,1187.6831 2439.43,1321.3731 2461,1443.9531 C2500.78,1670.0131 2483.9,1946.2931 2474.61,2056.3531 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2344.94,1098.7431,2343.58,1077.5931,2357.83,1093.2831,2344.94,1098.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M1592.02,2165.5831 C1615.8,2193.4331 1647.36,2224.9331 1682,2244.9531 C2406.42,2663.6131 2680.53,2576.5131 3507,2706.9531 C3608.19,2722.9231 3870.29,2703.1731 3967,2736.9531 C4021.95,2756.1531 4075.36,2799.4631 4105.04,2826.3931 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1583.62,2155.5131,1584.3963,2162.6823,1591.3126,2164.7231,1590.5363,2157.5539,1583.62,2155.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3510" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="3520" y="2495.52">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M2184.3,1092.0031 C2092.9,1180.6631 1966.52,1312.5631 1876,1443.9531 C1729.74,1656.2631 1610.73,1943.2631 1566.52,2056.3131 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2179.69,1086.7231,2198.94,1077.8831,2189.4,1096.8031,2179.69,1086.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M2346.12,1096.0631 C2383.29,1188.9931 2436.99,1324.7031 2482,1443.9531 C2568.07,1672.0031 2665.34,1946.6031 2703.92,2056.2731 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2339.62,1098.6531,2338.69,1077.4831,2352.62,1093.4531,2339.62,1098.6531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc75b97331daf477f1c24925190464b7]
reverse link C_0000469458052685692314 to C_0002051668456717902300--><path d="M2408.1,1091.8731 C2497.6,1183.4431 2627.36,1319.4031 2734,1443.9531 C2923.56,1665.3631 3131.48,1945.4131 3212.73,2056.4431 " fill="none" id="C_0000469458052685692314&lt;-C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2403.08,1096.7531,2394.09,1077.5731,2413.08,1086.9631,2403.08,1096.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M2164.73,1089.4531 C2012.13,1200.4131 1752.69,1368.1431 1498,1435.9531 C1470.16,1443.3631 485.06,1428.1031 461,1443.9531 C244.9,1586.3131 188.74,1929.1031 175.1,2056.3431 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2160.71,1083.7231,2180.98,1077.5631,2168.98,1095.0231,2160.71,1083.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M2164.12,1088.6931 C2011.24,1198.7831 1751.78,1365.5631 1498,1435.9531 C1467.9,1444.3031 1244.91,1429.9231 1217,1443.9531 C947.1,1579.6631 773.33,1927.3031 716.46,2056.0431 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2160.1,1082.9631,2180.4,1076.8931,2168.32,1094.2931,2160.1,1082.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M1121,2207.6931 C1121,2349.8431 1121,2607.6931 1121,2749.4431 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1121,2194.3131,1117,2200.3131,1121,2206.3131,1125,2200.3131,1121,2194.3131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1124" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1134" y="2495.52">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M2162.61,1056.3731 C2014.73,1137.9331 1778.49,1280.6131 1607,1443.9531 C1418.39,1623.6031 1251.24,1883.8931 1171.14,2017.9431 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2159.29,1050.2031,2180.19,1046.7331,2166.02,1062.4831,2159.29,1050.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M479.29,2158.9231 C602.59,2291.5931 928.69,2642.5031 1062.47,2786.4731 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="470.07,2149.0031,471.2252,2156.1211,478.24,2157.7924,477.0847,2150.6745,470.07,2149.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="974" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="984" y="2495.52">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M2164.35,1089.5431 C2011.67,1200.3731 1752.39,1367.7831 1498,1435.9531 C1478.39,1441.2131 784.25,1433.2431 767,1443.9531 C537.07,1586.7431 458.18,1940.8431 437.33,2062.8431 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2160.34,1083.8131,2180.61,1077.6631,2168.6,1095.1131,2160.34,1083.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M3008.04,2160.0931 C3029.15,2190.8131 3060.1,2226.8631 3098,2244.9531 C3173.46,2280.9831 3787.91,2218.9331 3850,2274.9531 C3994.01,2404.8931 3770.56,2574.2231 3912,2706.9531 C3973.61,2764.7631 4216.25,2697.5831 4291,2736.9531 C4318,2751.1731 4339.87,2777.2431 4355.4,2800.7031 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3000.71,2149.0631,3000.6968,2156.2742,3007.3482,2159.0599,3007.3613,2151.8488,3000.71,2149.0631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3915" y="2488.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3925" y="2495.52">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M2368.13,1094.9131 C2424.47,1188.0631 2507.04,1324.6631 2579,1443.9531 C2719.98,1677.6531 2888.66,1958.0631 2951.65,2062.7931 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2362.11,1098.4931,2357.75,1077.7531,2374.09,1091.2431,2362.11,1098.4931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M2252.02,1096.0131 C2147.32,1335.5331 1905.34,1889.1331 1832.27,2056.2931 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2245.64,1093.1231,2260.07,1077.6031,2258.47,1098.7331,2245.64,1093.1231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M2280.07,1097.3131 C2236.81,1331.5431 2138.84,1862.1431 2105.42,2043.1231 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2273.19,1095.9931,2283.71,1077.6031,2286.96,1098.5431,2273.19,1095.9931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M3143.94,358.5231 C2972.79,485.1031 2610.72,752.8831 2421.66,892.7131 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3154.44,350.7531,3147.2376,351.1072,3144.7943,357.8918,3151.9967,357.5377,3154.44,350.7531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2964" y="489.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="2974" y="496.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M3131.63,337.6831 C3057.02,373.7531 2956.29,426.2831 2874,482.9531 C2692.57,607.9031 2504,782.1831 2394.83,888.2631 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3143.38,332.0431,3136.2395,331.0362,3132.5638,337.2402,3139.7042,338.2471,3143.38,332.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2877" y="489.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="2887" y="496.02">exclusive_</text><!--MD5=[4e47031bec214ae962be33b6c59dc38d]
reverse link C_0000605866861866358037 to C_0002077031342744882956--><path d="M6086.76,2590.8731 C6064.38,2634.5531 6031.44,2681.6431 5986,2706.9531 C5911.1,2748.6731 4516.24,2692.3831 4443,2736.9531 C4419.85,2751.0431 4404.91,2777.2531 4395.61,2800.8331 " fill="none" id="C_0000605866861866358037&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6092.65,2578.9631,6086.4049,2582.5685,6087.331,2589.7199,6093.5761,2586.1145,6092.65,2578.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0fe97a7a5a0fa9da8660a2a2ab9fd9eb]
reverse link C_0001117102382624673118 to C_0000605866861866358037--><path d="M4480.73,390.4131 C4540.87,415.6831 4607.8,439.4131 4672,452.9531 C4745.62,468.4831 5972.08,430.4731 6026,482.9531 C6095.75,550.8331 6119.13,2025.8331 6123.98,2402.8331 " fill="none" id="C_0001117102382624673118&lt;-C_0000605866861866358037" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4477.93,396.8231,4462.29,382.5231,4483.43,383.9531,4477.93,396.8231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f0387d9954afcf30c87ff075e3f6770a]
reverse link C_0000895261582183440230 to C_0000605866861866358037--><path d="M3757.52,363.3931 C3830.95,397.2131 3922.57,433.8531 4009,452.9531 C4253.25,506.9331 4907.74,419.1531 5132,529.9531 C5635.36,778.6431 5765.61,935.6331 6004,1443.9531 C6044.39,1530.0731 6099.08,2167.5131 6118.12,2402.9231 " fill="none" id="C_0000895261582183440230&lt;-C_0000605866861866358037" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3754.43,369.6731,3739.26,354.8731,3760.35,356.9931,3754.43,369.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d8e4acfe1535dd965012bd96698e8da6]
reverse link C_0000605866861866358037 to C_0001796282762108527255--><path d="M6127.5,2599.4931 C6129.46,2730.4031 6128.68,2937.4431 6105,2963.9531 C6047.46,3028.3631 5987.47,2950.2131 5913,2993.9531 C5879.64,3013.5531 5852.49,3047.0931 5833.17,3076.9331 " fill="none" id="C_0000605866861866358037&lt;-C_0001796282762108527255" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6120.49,2599.2831,6127.16,2579.1731,6134.49,2599.0531,6120.49,2599.2831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1fd672dd170cf971b3d52d9ff5204cc3]
reverse link C_0001117102382624673118 to C_0000605669033368926050--><path d="M4480.72,390.4331 C4540.86,415.7031 4607.8,439.4331 4672,452.9531 C4822.51,484.6531 5916.29,418.6131 6056,482.9531 C6081.45,494.6731 6087.07,504.1631 6098,529.9531 C6176.8,715.8031 6143.07,1235.1731 6164,1435.9531 C6249.51,2256.0931 6392.18,2463.8031 6317,3284.9531 C6293.35,3543.2931 6329.55,3628.1931 6211,3858.9531 C6209.63,3861.6131 6208.18,3864.2531 6206.65,3866.8731 " fill="none" id="C_0001117102382624673118&lt;-C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4477.92,396.8431,4462.29,382.5431,4483.43,383.9731,4477.92,396.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a2a1be26813a0a0e30d0157a4feeeb92]
reverse link C_0000204145716468348671 to C_0000605669033368926050--><path d="M6107,3298.5131 C6107,3466.0131 6107,3725.4231 6107,3866.7731 " fill="none" id="C_0000204145716468348671&lt;-C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6107,3285.3631,6103,3291.3631,6107,3297.3631,6111,3291.3631,6107,3285.3631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6110" y="3560.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="82" x="6120" y="3567.52">parameters_</text><!--MD5=[319ad9cfab865c6a4b42924a2f265e34]
reverse link C_0000605866861866358037 to C_0000204145716468348671--><path d="M6132.87,2599.0631 C6138.53,2694.8431 6143.61,2838.9631 6134,2963.9531 C6133.25,2973.7331 6132.26,2983.7931 6131.11,2993.9131 " fill="none" id="C_0000605866861866358037&lt;-C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6125.89,2599.4831,6131.65,2579.0931,6139.86,2598.6231,6125.89,2599.4831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a1db1d9650f85b3167a87ae281cd12a2]
reverse link C_0000464715462505216589 to C_0000204145716468348671--><path d="M5134.83,291.8631 C5486.7,302.2331 6125.34,346.5131 6241,529.9531 C6499.13,939.3431 6411.53,2235.3031 6303,2706.9531 C6279.94,2807.1831 6232.67,2912.4131 6190.33,2993.8531 " fill="none" id="C_0000464715462505216589&lt;-C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5134.47,298.8531,5114.67,291.2931,5134.86,284.8631,5134.47,298.8531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8d30afa063382889315c705989a7065a]
reverse link C_0002097158357956220758 to C_0002077031342744882956--><path d="M5224.26,3038.0031 C5194.98,3020.2331 5163.06,3004.1631 5131,2993.9531 C5058.09,2970.7431 4507.88,3004.5131 4443,2963.9531 C4420.11,2949.6431 4405.21,2923.5731 4395.87,2900.1331 " fill="none" id="C_0002097158357956220758&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5235.34,3044.8931,5232.3529,3038.3298,5225.1455,3038.5628,5228.1327,3045.1261,5235.34,3044.8931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[02be11655739622e036245b0eb8a50f3]
reverse link C_0001292034357466653182 to C_0001796282762108527255--><path d="M5806.46,2720.5931 C5804.5,2847.2631 5802.22,2995.1831 5800.96,3076.6731 " fill="none" id="C_0001292034357466653182&lt;-C_0001796282762108527255" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5806.67,2707.2331,5802.5782,2713.1709,5806.4854,2719.2317,5810.5772,2713.2939,5806.67,2707.2331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5809" y="2848.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="69" x="5819" y="2855.02">members_</text><!--MD5=[5772835d8c5fc770ec72554e912856e1]
reverse link C_0001292034357466653182 to C_0000204145716468348671--><path d="M5914.38,2719.1631 C5956.33,2810.4731 6003.44,2913.0331 6040.57,2993.8631 " fill="none" id="C_0001292034357466653182&lt;-C_0000204145716468348671" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5908.9,2707.2331,5907.7705,2714.3552,5913.9103,2718.1371,5915.0398,2711.015,5908.9,2707.2331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6022" y="2848.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="64" x="6032" y="2855.02">methods_</text><!--MD5=[e6e969555e980a24e5c05aceb3b1be10]
reverse link C_0001292034357466653182 to C_0002097158357956220758--><path d="M5739.87,2719.8831 C5738.22,2725.6231 5736.59,2731.3231 5735,2736.9531 C5706.63,2837.2531 5752.95,2893.6331 5676,2963.9531 C5615.8,3018.9631 5567.22,2956.1031 5495,2993.9531 C5470.71,3006.6831 5448.16,3025.1931 5428.55,3044.7431 " fill="none" id="C_0001292034357466653182&lt;-C_0002097158357956220758" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5743.53,2707.2431,5738.0194,2711.8943,5740.1933,2718.7699,5745.7039,2714.1187,5743.53,2707.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5738" y="2848.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="5748" y="2855.02">bases_</text><!--MD5=[4018109609f1a98320137cbe86d3b254]
reverse link C_0002069520381434407937 to C_0001292034357466653182--><path d="M4577.6,2209.6631 C4607.41,2223.9931 4638.91,2236.6431 4670,2244.9531 C4773.31,2272.5631 5535.95,2227.9331 5632,2274.9531 C5633.31,2275.5931 5634.61,2276.2431 5635.9,2276.9131 " fill="none" id="C_0002069520381434407937&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4574.07,2215.7231,4559.28,2200.5531,4580.31,2203.1931,4574.07,2215.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1de74a5a0bafa25219efbd6fc8924314]
reverse link C_0002077846075979426940 to C_0001292034357466653182--><path d="M3814.33,1046.4931 C3805.96,1146.9431 3806.72,1342.4131 3923,1435.9531 C3945.04,1453.6831 5940.03,1423.9131 5960,1443.9531 C6037.32,1521.5731 5971.37,1827.9931 5960,1936.9531 C5945.48,2076.1031 5932.45,2110.1531 5895,2244.9531 C5892.29,2254.7131 5889.4,2264.6531 5886.38,2274.6631 " fill="none" id="C_0002077846075979426940&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3807.39,1045.5331,3816.25,1026.2831,3821.33,1046.8531,3807.39,1045.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[37b81943733c6f0afb346b14cdc09a31]
reverse link C_0000464715462505216589 to C_0001292034357466653182--><path d="M5134.64,295.1131 C5429.9,308.4131 5914.36,350.3931 6026,482.9531 C6442.33,977.2931 6063.93,1293.4431 6004,1936.9531 C5991.12,2075.2531 5998.15,2114.3031 5951,2244.9531 C5947.42,2254.8731 5943.44,2264.8631 5939.17,2274.8331 " fill="none" id="C_0000464715462505216589&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5134.28,302.1031,5114.6,294.2431,5134.88,288.1231,5134.28,302.1031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afa1dbec02a122343a00c678857bc2bf]
reverse link C_0000273196721973298858 to C_0000178138562743079529--><path d="M5339.81,1689.7931 C5327.69,1623.8131 5294.06,1498.9231 5208,1443.9531 C5177.47,1424.4531 4588.92,1451.0731 4556,1435.9531 C4488.66,1405.0231 4428.1,1356.5731 4375.73,1302.6731 " fill="none" id="C_0000273196721973298858&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5342.08,1702.9231,5344.9999,1696.3296,5340.0367,1691.0984,5337.1168,1697.6918,5342.08,1702.9231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0c79e628aa5f95d0c0c248dfe6cd9ac4]
reverse link C_0001374849051752224500 to C_0000605669033368926050--><path d="M5487.66,2976.8131 C5489.25,2982.5631 5490.71,2988.3031 5492,2993.9531 C5520.89,3120.5931 5468.18,3165.4231 5519,3284.9531 C5623.52,3530.7931 5850.48,3752.2931 5989.86,3872.4231 " fill="none" id="C_0001374849051752224500&lt;-C_0000605669033368926050" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5483.99,2964.1931,5481.8233,2971.071,5487.3389,2975.7164,5489.5055,2968.8385,5483.99,2964.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5522" y="3137.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="141" x="5532" y="3144.02">requires_parameters_</text><!--MD5=[cf69ebad9c135069927ecc8912486131]
reverse link C_0002069520381434407937 to C_0001374849051752224500--><path d="M4585.63,2209.4231 C4613.22,2222.8731 4641.92,2235.3031 4670,2244.9531 C4744.22,2270.4531 4777.43,2233.4031 4844,2274.9531 C5044.91,2400.3631 4975.76,2553.3131 5156,2706.9531 C5175.36,2723.4531 5196.96,2738.6531 5219.37,2752.4631 " fill="none" id="C_0002069520381434407937&lt;-C_0001374849051752224500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4582.45,2215.6631,4567.69,2200.4631,4588.71,2203.1331,4582.45,2215.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[306ac7020e3b65bfcf4fa2a5c5f508b9]
reverse link C_0002077846075979426940 to C_0001374849051752224500--><path d="M3814.36,1046.4531 C3806.03,1146.8531 3806.86,1342.2431 3923,1435.9531 C3948.21,1456.2931 5064.73,1422.5031 5089,1443.9531 C5301.07,1631.4131 5112.82,2461.6231 5254,2706.9531 C5259.97,2717.3231 5267.01,2727.1931 5274.81,2736.5331 " fill="none" id="C_0002077846075979426940&lt;-C_0001374849051752224500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3807.42,1045.5031,3816.27,1026.2531,3821.36,1046.8231,3807.42,1045.5031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c4287a760a24872c540bdd439fc98865]
reverse link C_0000464715462505216589 to C_0001374849051752224500--><path d="M5134.88,296.2431 C5467.75,312.4331 6052.4,364.3131 6169,529.9531 C6238.68,628.9431 6345.41,2619.2231 6262,2706.9531 C6216.47,2754.8431 5731.97,2720.3731 5668,2736.9531 C5664.89,2737.7631 5661.77,2738.6131 5658.65,2739.5031 " fill="none" id="C_0000464715462505216589&lt;-C_0001374849051752224500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5134.45,303.2331,5114.8,295.2931,5135.11,289.2431,5134.45,303.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c22089b7714b620a371fadcc922a5ed]
reverse link C_0002069520381434407937 to C_0000724392977093650506--><path d="M4579.31,2209.4831 C4608.65,2223.6231 4639.56,2236.2631 4670,2244.9531 C4867.44,2301.3131 4935.83,2211.1931 5131,2274.9531 C5215.45,2302.5431 5299.79,2356.1331 5363.09,2402.9131 " fill="none" id="C_0002069520381434407937&lt;-C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4576.05,2215.6731,4561.26,2200.5031,4582.28,2203.1431,4576.05,2215.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[51c9aec8324745136c18c88ab3ea6908]
reverse link C_0002077846075979426940 to C_0000724392977093650506--><path d="M3814.33,1046.4931 C3805.96,1146.9431 3806.73,1342.4131 3923,1435.9531 C3944.6,1453.3331 5899.44,1424.3131 5919,1443.9531 C5996.31,1521.5731 5945.57,1830.6731 5919,1936.9531 C5915.34,1951.6131 5908.37,1952.8231 5903,1966.9531 C5857.84,2085.7531 5929.75,2159.1431 5836,2244.9531 C5769.37,2305.9431 5712.9,2229.2331 5635,2274.9531 C5583.86,2304.9731 5542.9,2357.3731 5514.47,2402.9331 " fill="none" id="C_0002077846075979426940&lt;-C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3807.39,1045.5331,3816.25,1026.2831,3821.33,1046.8531,3807.39,1045.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9452464bdcc5aa227509a6b1c470963f]
reverse link C_0000914432076690777687 to C_0001292034357466653182--><path d="M5730.01,1950.3531 C5745.08,2052.0331 5763.02,2173.0131 5778.08,2274.6331 " fill="none" id="C_0000914432076690777687&lt;-C_0001292034357466653182" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5728.09,1937.4131,5725.0101,1943.9334,5729.8443,1949.2842,5732.9242,1942.7639,5728.09,1937.4131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5773" y="2103.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="5783" y="2110.52">classes_</text><!--MD5=[c4e61d953c70a4da21cd642647a4e85b]
reverse link C_0000914432076690777687 to C_0000724392977093650506--><path d="M5632.67,1949.9731 C5587.15,2100.1731 5528.81,2292.6231 5495.5,2402.5231 " fill="none" id="C_0000914432076690777687&lt;-C_0000724392977093650506" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5636.48,1937.4131,5630.9101,1941.9931,5632.9955,1948.8961,5638.5654,1944.3161,5636.48,1937.4131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5626" y="2103.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="5636" y="2110.52">enums_</text><!--MD5=[808c8f39a5394d6c458b88b196a0956a]
reverse link C_0000914432076690777687 to C_0001374849051752224500--><path d="M5476.89,1947.3631 C5471.76,1953.8631 5466.79,1960.4031 5462,1966.9531 C5371.49,2090.8631 5341.64,2125.7031 5306,2274.9531 C5261.4,2461.7031 5235.59,2528.3331 5306,2706.9531 C5310.03,2717.1831 5315.19,2727.1131 5321.11,2736.6531 " fill="none" id="C_0000914432076690777687&lt;-C_0001374849051752224500" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5485.07,1937.1731,5478.195,1939.3489,5477.5592,1946.5319,5484.4342,1944.3561,5485.07,1937.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5465" y="2103.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="5475" y="2110.52">concepts_</text><!--MD5=[0aa646b37725dc55b8a82c6eac2e4aae]
reverse link C_0000197068985320835874 to C_0000914432076690777687--><path d="M5131.33,1168.2731 C5243.79,1246.7631 5370.39,1343.3631 5474,1443.9531 C5501.07,1470.2331 5527.66,1499.8831 5552.52,1529.9131 " fill="none" id="C_0000197068985320835874&lt;-C_0000914432076690777687" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5127.28,1173.9831,5114.85,1156.8331,5135.27,1162.4831,5127.28,1173.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[5b7e032bd111ee92656b8900da6e57da]
link C_0001623832985137466228 to C_0000202859212831973510--><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[1f5eafc0483201003cfbb0e51ce3c06b]
@startuml
title clang-uml class diagram model
package [common] as C_0000316605034920222648 {
package [model] as C_0000083721806430512831 {
enum "diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+set_comment() : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+file_relative() const : const std::string &
+set_file_relative() : void
+line() const : unsigned int
+set_line() : void
+location_id() const : unsigned int
+set_location_id() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55{hash_}]]]
}
class "path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224{path_}]]]
}
class "ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29{value}]]]
}
enum "template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
enum "rpqualifier" as C_0002193110380171976294
enum C_0002193110380171976294 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "context" as C_0000845978329661395972
class C_0000845978329661395972 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46{context}]] {
+to_string() const : std::string
+operator==() const : bool
+operator!=() const : bool
+is_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47{is_const}]]]
+is_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48{is_volatile}]]]
+is_ref_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49{is_ref_const}]]]
+is_ref_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50{is_ref_volatile}]]]
}
class "path<common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67{template_parameter}]] {
{static} +make_template_type() : common::model::template_parameter
{static} +make_template_template_type() : common::model::template_parameter
{static} +make_non_type_template() : common::model::template_parameter
{static} +make_argument() : common::model::template_parameter
{static} +make_unexposed_argument() : common::model::template_parameter
+set_type() : void
+type() const : std::optional<std::string>
+set_id() : void
+id() const : const std::optional<int64_t> &
+set_name() : void
+name() const : std::optional<std::string>
+set_default_value() : void
+default_value() const : const std::optional<std::string> &
+is_variadic() : void
+is_variadic() const : bool
+calculate_specialization_match() const : int
+is_template_parameter() const : bool
+is_template_parameter() : void
+is_template_template_parameter() const : bool
+is_template_template_parameter() : void
+to_string() const : std::string
+add_template_param() : void
+add_template_param() : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+is_association() const : bool
+is_specialization() const : bool
+is_same_specialization() const : bool
+find_nested_relationships() const : bool
+set_concept_constraint() : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : common::model::template_parameter_kind_t
+set_kind() : void
+is_unexposed() const : bool
+set_unexposed() : void
+is_function_template() : void
+is_function_template() const : bool
+is_member_pointer() : void
+is_member_pointer() const : bool
+is_data_pointer() : void
+is_data_pointer() const : bool
+is_array() : void
+is_array() const : bool
+push_context() : void
+deduced_context() const : const std::deque<context> &
+deduced_context() : void
+is_ellipsis() : void
+is_ellipsis() const : bool
+is_noexcept() : void
+is_noexcept() const : bool
-template_parameter() = default : void
-deduced_context_str() const : std::string
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201{is_template_template_parameter_}]]]
-is_ellipsis_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203{is_ellipsis_}]]]
-is_noexcept_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205{is_noexcept_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210{is_function_template_}]]]
-is_data_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212{is_data_pointer_}]]]
-is_member_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214{is_member_pointer_}]]]
-is_array_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216{is_array_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231{is_unexposed_}]]]
}
class "stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30{style_}]]]
}
class "relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : common::model::relationship_t
+set_destination() : void
+destination() const : common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64{label_}]]]
}
class "diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+type_name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : common::model::namespace_
+get_relative_namespace() const : common::model::namespace_
+path() const : const common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const common::model::namespace_ &
+context() const : inja::json
}
class "template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params() const : std::ostream &
+set_base_template() : void
+base_template() const : std::string
+add_template() : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+set_implicit() : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+get_element<V=T>() : auto
+get_element_parent<V=T>() : auto
+get_element<V=T>() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45{value}]]]
}
class "path<common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : common::model::source_file &
+operator=() : common::model::source_file &
+operator==() const : bool
+path() const : const common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : common::model::path<common::model::fs_path_sep>
+fs_path() const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : common::model::diagram_t
{abstract} +get() const = 0 : common::optional_ref<common::model::diagram_element>
{abstract} +get() const = 0 : common::optional_ref<common::model::diagram_element>
+get_with_namespace() const : common::optional_ref<common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : common::model::diagram &
+operator=() : common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87{complete_}]]]
}
class "package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : common::model::package &
+operator=() : common::model::package &
+type_name() const : std::string
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : common::model::filter_t
}
class "anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "element_type_filter" as C_0002051668456717902300
class C_0002051668456717902300 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130{element_type_filter}]] {
+element_type_filter() : void
+~element_type_filter() = default : void
+match() const : tvl::value_t
-element_types_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138{element_types_}]]]
}
class "subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149{roots_}]]]
}
class "parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
+match() const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160{children_}]]]
}
class "edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent<C,D>() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300{initialized_}]]]
-matching_elements_ : common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302{forward_}]]]
}
class "relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337{context_}]]]
}
class "paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354{root_}]]]
}
class "diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include<T>() : _Bool
}
}
}
package [class_diagram] as C_0002240167036201725606 {
package [model] as C_0000897124234964432620 {
class "class_element" as C_0000605866861866358037
class C_0000605866861866358037 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L29{class_element}]] {
+class_element() : void
+~class_element() = default : void
+access() const : common::model::access_t
+name() const : std::string
+set_name() : void
+type() const : std::string
+set_type() : void
+context() const : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L48{name_}]]]
-type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_element.h#L49{type_}]]]
}
class "class_member" as C_0001796282762108527255
class C_0001796282762108527255 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L26{class_member}]] {
+class_member() : void
+~class_member() = default : void
+is_static() const : bool
+is_static() : void
-is_relationship_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L37{is_relationship_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_member.h#L38{is_static_}]]]
}
class "method_parameter" as C_0000605669033368926050
class C_0000605669033368926050 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L28{method_parameter}]] {
+method_parameter() = default : void
+method_parameter() : void
+set_type() : void
+type() const : std::string
+set_name() : void
+name() const : std::string
+set_default_value() : void
+default_value() const : std::string
+to_string() const : std::string
-type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L47{type_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L48{name_}]]]
-default_value_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/method_parameter.h#L49{default_value_}]]]
}
class "class_method" as C_0000204145716468348671
class C_0000204145716468348671 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L32{class_method}]] {
+class_method() : void
+~class_method() = default : void
+is_pure_virtual() const : bool
+is_pure_virtual() : void
+is_virtual() const : bool
+is_virtual() : void
+is_const() const : bool
+is_const() : void
+is_defaulted() const : bool
+is_defaulted() : void
+is_static() const : bool
+is_static() : void
+parameters() const : const std::vector<method_parameter> &
+add_parameter() : void
-is_pure_virtual_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L60{is_pure_virtual_}]]]
-is_virtual_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L61{is_virtual_}]]]
-is_const_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L62{is_const_}]]]
-is_defaulted_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L63{is_defaulted_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_method.h#L64{is_static_}]]]
}
class "class_parent" as C_0002097158357956220758
class C_0002097158357956220758 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L27{class_parent}]] {
+set_name() : void
+name() const : std::string
+id() const : common::id_t
+set_id() : void
+is_virtual() : void
+is_virtual() const : bool
+set_access() : void
+access() const : common::model::access_t
-id_ : common::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L42{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L43{name_}]]]
-is_virtual_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class_parent.h#L44{is_virtual_}]]]
}
class "class_" as C_0001292034357466653182
class C_0001292034357466653182 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L35{class_}]] {
+class_() : void
+class_() : void
+class_() : void
+operator=() : class_diagram::model::class_ &
+operator=() : class_diagram::model::class_ &
+type_name() const : std::string
+is_struct() const : bool
+is_struct() : void
+is_template() const : bool
+is_template() : void
+is_union() const : bool
+is_union() : void
+add_member() : void
+add_method() : void
+add_parent() : void
+members() const : const std::vector<class_member> &
+methods() const : const std::vector<class_method> &
+parents() const : const std::vector<class_parent> &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+is_abstract() const : bool
+calculate_template_specialization_match() const : int
+template_specialization_found() : void
+template_specialization_found() const : bool
-is_struct_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L86{is_struct_}]]]
-is_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L87{is_template_}]]]
-is_union_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L88{is_union_}]]]
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L92{base_template_full_name_}]]]
-full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L94{full_name_}]]]
-template_specialization_found_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/class.h#L96{template_specialization_found_}]]]
}
class "requires_expression" as C_0000273196721973298858
class C_0000273196721973298858 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L32{requires_expression}]] {
+requirements : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L34{requirements}]]]
}
class "concept_" as C_0001374849051752224500
class C_0001374849051752224500 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L37{concept_}]] {
+concept_() : void
+concept_() : void
+concept_() = default : void
+operator=() : class_diagram::model::concept_ &
+operator=() : class_diagram::model::concept_ &
+type_name() const : std::string
+full_name() const : std::string
+full_name_no_ns() const : std::string
+add_parameter() : void
+requires_parameters() const : const std::vector<method_parameter> &
+add_statement() : void
+requires_statements() const : const std::vector<std::string> &
-requires_expression_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L65{requires_expression_}]]]
-requires_statements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/concept.h#L69{requires_statements_}]]]
}
class "enum_" as C_0000724392977093650506
class C_0000724392977093650506 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L27{enum_}]] {
+enum_() : void
+enum_() : void
+enum_() : void
+operator=() : class_diagram::model::enum_ &
+operator=() : class_diagram::model::enum_ &
+type_name() const : std::string
+full_name() const : std::string
+constants() : std::vector<std::string> &
+constants() const : const std::vector<std::string> &
-constants_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/enum.h#L49{constants_}]]]
}
class "diagram" as C_0000914432076690777687
class C_0000914432076690777687 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/class_diagram/model/diagram.h#L34{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : class_diagram::model::diagram &
+operator=() = default : class_diagram::model::diagram &
+type() const : common::model::diagram_t
+get() const : common::optional_ref<common::model::diagram_element>
+get() const : common::optional_ref<common::model::diagram_element>
+classes() const : const common::reference_vector<class_> &
+enums() const : const common::reference_vector<enum_> &
+concepts() const : const common::reference_vector<concept_> &
+has_class() const : bool
+has_enum() const : bool
+has_concept() const : bool
+get_class() const : common::optional_ref<class_>
+get_class() const : common::optional_ref<class_>
+get_enum() const : common::optional_ref<enum_>
+get_enum() const : common::optional_ref<enum_>
+get_concept() const : common::optional_ref<concept_>
+get_concept() const : common::optional_ref<concept_>
+add_class() : bool
+add_enum() : bool
+add_concept() : bool
+add_package() : bool
+to_alias() const : std::string
+get_parents() const : void
+has_element() const : bool
+context() const : inja::json
}
}
}
C_0000845978329661395972 o- - C_0002193110380171976294 : +pr
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000845978329661395972 : -context_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0002051668456717902300
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0000605866861866358037 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0000605866861866358037
C_0000895261582183440230 <|- - C_0000605866861866358037
C_0000605866861866358037 <|- - C_0001796282762108527255
C_0001117102382624673118 <|- - C_0000605669033368926050
C_0000204145716468348671 o- - C_0000605669033368926050 : -parameters_
C_0000605866861866358037 <|- - C_0000204145716468348671
C_0000464715462505216589 <|- - C_0000204145716468348671
C_0002097158357956220758 o- - C_0002077031342744882956 : -access_
C_0001292034357466653182 o- - C_0001796282762108527255 : -members_
C_0001292034357466653182 o- - C_0000204145716468348671 : -methods_
C_0001292034357466653182 o- - C_0002097158357956220758 : -bases_
C_0002069520381434407937 <|- - C_0001292034357466653182
C_0002077846075979426940 <|- - C_0001292034357466653182
C_0000464715462505216589 <|- - C_0001292034357466653182
C_0000273196721973298858 o- - C_0000178138562743079529 : +parameter
C_0001374849051752224500 o- - C_0000605669033368926050 : -requires_parameters_
C_0002069520381434407937 <|- - C_0001374849051752224500
C_0002077846075979426940 <|- - C_0001374849051752224500
C_0000464715462505216589 <|- - C_0001374849051752224500
C_0002069520381434407937 <|- - C_0000724392977093650506
C_0002077846075979426940 <|- - C_0000724392977093650506
C_0000914432076690777687 o- - C_0001292034357466653182 : -classes_
C_0000914432076690777687 o- - C_0000724392977093650506 : -enums_
C_0000914432076690777687 o- - C_0001374849051752224500 : -concepts_
C_0000197068985320835874 <|- - C_0000914432076690777687

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>