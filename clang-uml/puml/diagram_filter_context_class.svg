<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="913px" preserveAspectRatio="none" style="width:1133px;height:913px;" version="1.1" viewBox="0 0 1133 913" width="1133px" zoomAndPan="magnify"><defs><filter height="300%" id="f1s514kmc4c195" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="257" x="442" y="16.708">Diagram filter context model</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="classclanguml_1_1common_1_1model_1_1diagram.html" target="_top" title="Base class for all diagram models" xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1diagram.html" xlink:show="new" xlink:title="Base class for all diagram models" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s514kmc4c195)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="832" x="273.5" y="28.9531"/><ellipse cx="606.25" cy="44.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M606.3594,40.2969 L605.2031,45.375 L607.5313,45.375 L606.3594,40.2969 Z M604.875,38.0625 L607.8594,38.0625 L611.2188,50.4531 L608.7656,50.4531 L608,47.3906 L604.7188,47.3906 L603.9688,50.4531 L601.5313,50.4531 L604.875,38.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="626.75" y="49.1074">common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="274.5" x2="1104.5" y1="60.9531" y2="60.9531"/></a><a href="" target="_top" title="Whether the diagram is complete." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Whether the diagram is complete." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="66.9531"/><ellipse cx="284.5" cy="71.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Whether the diagram is complete." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Whether the diagram is complete." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="293.5" y="75.1636">complete() const : bool</text></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="79.7578"/><ellipse cx="284.5" cy="84.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="293.5" y="87.9683">context() const = 0 : inja::json</text></a><a href="" target="_top" title="filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="92.5625"/><ellipse cx="284.5" cy="97.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="293.5" y="100.7729">filter() const : const diagram_filter &amp;</text></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="105.3672"/><ellipse cx="284.5" cy="110.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="293.5" y="113.5776">finalize() : void</text></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="118.1719"/><ellipse cx="284.5" cy="123.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="600" x="293.5" y="126.3823">get(const std::string &amp; full_name) const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="130.9766"/><ellipse cx="284.5" cy="135.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="578" x="293.5" y="139.187">get(diagram_element::id_t id) const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="get_with_namespace" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_with_namespace" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="143.7813"/><ellipse cx="284.5" cy="148.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get_with_namespace" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_with_namespace" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="806" x="293.5" y="151.9917">get_with_namespace(const std::string &amp; name, const namespace_ &amp; ns) const : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="has_element" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="has_element" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="156.5859"/><ellipse cx="284.5" cy="161.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="has_element" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="has_element" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="293.5" y="164.7964">has_element(const diagram_element::id_t) const : bool</text></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="169.3906"/><ellipse cx="284.5" cy="174.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="293.5" y="177.6011">name() const : std::string</text></a><a href="" target="_top" title="Set diagram in a complete state." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set diagram in a complete state." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="182.1953"/><ellipse cx="284.5" cy="187.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set diagram in a complete state." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set diagram in a complete state." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="293.5" y="190.4058">set_complete(bool complete) : void</text></a><a href="" target="_top" title="set_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="195"/><ellipse cx="284.5" cy="200" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="293.5" y="203.2104">set_filter(std::unique_ptr&lt;diagram_filter&gt; filter) : void</text></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="207.8047"/><ellipse cx="284.5" cy="212.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="293.5" y="216.0151">set_name(const std::string &amp; name) : void</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="220.6094"/><ellipse cx="284.5" cy="225.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="293.5" y="228.8198">should_include(const element &amp; e) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="233.4141"/><ellipse cx="284.5" cy="238.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="293.5" y="241.6245">should_include(const namespace_ &amp; ns) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="246.2188"/><ellipse cx="284.5" cy="251.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="293.5" y="254.4292">should_include(const source_file &amp; path) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="259.0234"/><ellipse cx="284.5" cy="264.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="293.5" y="267.2339">should_include(relationship r) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="271.8281"/><ellipse cx="284.5" cy="276.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="293.5" y="280.0386">should_include(relationship_t r) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="284.6328"/><ellipse cx="284.5" cy="289.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="293.5" y="292.8433">should_include(access_t s) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="297.4375"/><ellipse cx="284.5" cy="302.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="293.5" y="305.6479">should_include(const std::string &amp; s) const = deleted : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="310.2422"/><ellipse cx="284.5" cy="315.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="293.5" y="318.4526">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text></a><a href="" target="_top" title="Return type of the diagram." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return type of the diagram." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="323.0469"/><ellipse cx="284.5" cy="328.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Return type of the diagram." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return type of the diagram." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="293.5" y="331.2573">type() const = 0 : diagram_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="274.5" x2="1104.5" y1="337.8516" y2="337.8516"/><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="343.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="281.5" y="345.8516"/></a><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="293.5" y="352.062">complete_ : bool</text></a><a href="" target="_top" title="filter_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="356.6563"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="281.5" y="358.6563"/></a><a href="" target="_top" title="filter_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="293.5" y="364.8667">filter_ : std::unique_ptr&lt;diagram_filter&gt;</text></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="279.5" y="369.4609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="281.5" y="371.4609"/></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="293.5" y="377.6714">name_ : std::string</text></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="classclanguml_1_1common_1_1model_1_1filter__visitor.html" target="_top" title="Base class for any diagram filter." xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1filter__visitor.html" xlink:show="new" xlink:title="Base class for any diagram filter." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s514kmc4c195)" height="214.4609" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="574" x="548.5" y="687.9531"/><ellipse cx="742.25" cy="703.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M745.2188,709.5938 Q744.6406,709.8906 744,710.0313 Q743.3594,710.1875 742.6563,710.1875 Q740.1563,710.1875 738.8281,708.5469 Q737.5156,706.8906 737.5156,703.7656 Q737.5156,700.6406 738.8281,698.9844 Q740.1563,697.3281 742.6563,697.3281 Q743.3594,697.3281 744,697.4844 Q744.6563,697.6406 745.2188,697.9375 L745.2188,700.6563 Q744.5938,700.0781 744,699.8125 Q743.4063,699.5313 742.7813,699.5313 Q741.4375,699.5313 740.75,700.6094 Q740.0625,701.6719 740.0625,703.7656 Q740.0625,705.8594 740.75,706.9375 Q741.4375,708 742.7813,708 Q743.4063,708 744,707.7344 Q744.5938,707.4531 745.2188,706.875 L745.2188,709.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="178" x="762.75" y="708.1074">common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="549.5" x2="1121.5" y1="719.9531" y2="719.9531"/></a><a href="" target="_top" title="is_exclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_exclusive" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="725.9531"/><ellipse cx="559.5" cy="730.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="is_exclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_exclusive" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="568.5" y="734.1636">is_exclusive() const : bool</text></a><a href="" target="_top" title="is_inclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_inclusive" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="738.7578"/><ellipse cx="559.5" cy="743.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="is_inclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_inclusive" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="568.5" y="746.9683">is_inclusive() const : bool</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="751.5625"/><ellipse cx="559.5" cy="756.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="568.5" y="759.7729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="764.3672"/><ellipse cx="559.5" cy="769.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="568.5" y="772.5776">match(const diagram &amp; d, const common::model::relationship_t &amp; r) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="777.1719"/><ellipse cx="559.5" cy="782.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="568.5" y="785.3823">match(const diagram &amp; d, const common::model::access_t &amp; a) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="789.9766"/><ellipse cx="559.5" cy="794.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="568.5" y="798.187">match(const diagram &amp; d, const common::model::namespace_ &amp; ns) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="802.7813"/><ellipse cx="559.5" cy="807.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="568.5" y="810.9917">match(const diagram &amp; d, const common::model::source_file &amp; f) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="815.5859"/><ellipse cx="559.5" cy="820.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="568.5" y="823.7964">match(const diagram &amp; d, const common::model::source_location &amp; f) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="828.3906"/><ellipse cx="559.5" cy="833.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="568.5" y="836.6011">match(const diagram &amp; d, const class_diagram::model::class_method &amp; m) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="841.1953"/><ellipse cx="559.5" cy="846.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="548" x="568.5" y="849.4058">match(const diagram &amp; d, const class_diagram::model::class_member &amp; m) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="854"/><ellipse cx="559.5" cy="859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="545" x="568.5" y="862.2104">match(const diagram &amp; d, const sequence_diagram::model::participant &amp; p) const : tvl::value_t</text></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="866.8047"/><ellipse cx="559.5" cy="871.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="568.5" y="875.0151">type() const : filter_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="549.5" x2="1121.5" y1="881.6094" y2="881.6094"/><a href="" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="554.5" y="887.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="556.5" y="889.6094"/></a><a href="" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="568.5" y="895.8198">type_ : filter_t</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="classclanguml_1_1common_1_1model_1_1diagram__filter.html" target="_top" title="Composite of all diagrams filters." xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1diagram__filter.html" xlink:show="new" xlink:title="Composite of all diagrams filters." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s514kmc4c195)" height="150.4375" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="360.5" y="460.9531"/><ellipse cx="500.25" cy="476.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M503.2188,482.5938 Q502.6406,482.8906 502,483.0313 Q501.3594,483.1875 500.6563,483.1875 Q498.1563,483.1875 496.8281,481.5469 Q495.5156,479.8906 495.5156,476.7656 Q495.5156,473.6406 496.8281,471.9844 Q498.1563,470.3281 500.6563,470.3281 Q501.3594,470.3281 502,470.4844 Q502.6563,470.6406 503.2188,470.9375 L503.2188,473.6563 Q502.5938,473.0781 502,472.8125 Q501.4063,472.5313 500.7813,472.5313 Q499.4375,472.5313 498.75,473.6094 Q498.0625,474.6719 498.0625,476.7656 Q498.0625,478.8594 498.75,479.9375 Q499.4375,481 500.7813,481 Q501.4063,481 502,480.7344 Q502.5938,480.4531 503.2188,479.875 L503.2188,482.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="192" x="520.75" y="481.1074">common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="361.5" x2="839.5" y1="492.9531" y2="492.9531"/></a><a href="" target="_top" title="add_exclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_exclusive_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="498.9531"/><ellipse cx="371.5" cy="503.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="add_exclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_exclusive_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="380.5" y="507.1636">add_exclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text></a><a href="" target="_top" title="add_inclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_inclusive_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="511.7578"/><ellipse cx="371.5" cy="516.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="add_inclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_inclusive_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="380.5" y="519.9683">add_inclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text></a><a href="" target="_top" title="Initialize filters." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize filters." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="524.5625"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="368.5" y="526.5625"/></a><a href="" target="_top" title="Initialize filters." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize filters." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="380.5" y="532.7729">init_filters(const config::diagram &amp; c) : void</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="537.3672"/><ellipse cx="371.5" cy="542.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="380.5" y="545.5776">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text></a><ellipse cx="371.5" cy="555.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="380.5" y="558.3823">should_include&lt;T&gt;(const T &amp; e) const : _Bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="361.5" x2="839.5" y1="564.9766" y2="564.9766"/><a href="" target="_top" title="diagram_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="diagram_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="570.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="368.5" y="572.9766"/></a><a href="" target="_top" title="diagram_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="diagram_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="380.5" y="579.187">diagram_ : const common::model::diagram &amp;</text></a><a href="" target="_top" title="exclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="exclusive_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="583.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="368.5" y="585.7813"/></a><a href="" target="_top" title="exclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="exclusive_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="380.5" y="591.9917">exclusive_ : std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt;</text></a><a href="" target="_top" title="inclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="inclusive_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="366.5" y="596.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="368.5" y="598.5859"/></a><a href="" target="_top" title="inclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="inclusive_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="380.5" y="604.7964">inclusive_ : std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt;</text></a><!--MD5=[ae7762d6dc8ec1ee432785f9a7101014]
class C_0000400244097365422548--><a href="structclanguml_1_1config_1_1diagram.html" target="_top" title="Common diagram configuration type" xlink:actuate="onRequest" xlink:href="structclanguml_1_1config_1_1diagram.html" xlink:show="new" xlink:title="Common diagram configuration type" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1s514kmc4c195)" height="150.4375" id="C_0000400244097365422548" style="stroke: #A80036; stroke-width: 1.5;" width="507" x="6" y="719.9531"/><ellipse cx="206.75" cy="735.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M206.8594,731.2969 L205.7031,736.375 L208.0313,736.375 L206.8594,731.2969 Z M205.375,729.0625 L208.3594,729.0625 L211.7188,741.4531 L209.2656,741.4531 L208.5,738.3906 L205.2188,738.3906 L204.4688,741.4531 L202.0313,741.4531 L205.375,729.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="227.25" y="740.1074">config::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="512" y1="751.9531" y2="751.9531"/></a><a href="" target="_top" title="get_together_group" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_together_group" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="757.9531"/><ellipse cx="17" cy="762.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get_together_group" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_together_group" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="481" x="26" y="766.1636">get_together_group(const std::string &amp; full_name) const : std::optional&lt;std::string&gt;</text></a><a href="" target="_top" title="Returns list of translation unit paths" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns list of translation unit paths" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="770.7578"/><ellipse cx="17" cy="775.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Returns list of translation unit paths" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns list of translation unit paths" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="26" y="778.9683">get_translation_units() const : std::vector&lt;std::string&gt;</text></a><a href="" target="_top" title="Initialize predefined set of C++ type aliases" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize predefined set of C++ type aliases" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="783.5625"/><ellipse cx="17" cy="788.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Initialize predefined set of C++ type aliases" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize predefined set of C++ type aliases" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="791.7729">initialize_type_aliases() : void</text></a><a href="" target="_top" title="Make path relative to the `relative_to` config option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Make path relative to the `relative_to` config option" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="796.3672"/><ellipse cx="17" cy="801.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Make path relative to the `relative_to` config option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Make path relative to the `relative_to` config option" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="26" y="804.5776">make_path_relative(const std::filesystem::path &amp; p) const : std::filesystem::path</text></a><a href="" target="_top" title="Returns absolute path of the `relative_to` option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns absolute path of the `relative_to` option" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="809.1719"/><ellipse cx="17" cy="814.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Returns absolute path of the `relative_to` option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns absolute path of the `relative_to` option" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="817.3823">root_directory() const : std::filesystem::path</text></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="821.9766"/><ellipse cx="17" cy="826.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="26" y="830.187">type() const = 0 : common::model::diagram_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="512" y1="836.7813" y2="836.7813"/><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="842.7813"/><ellipse cx="17" cy="847.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="26" y="850.9917">name : std::string</text></a><a href="" target="_top" title="title" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="title" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="855.5859"/><ellipse cx="17" cy="860.5859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="title" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="title" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="863.7964">title : option&lt;std::string&gt;</text></a><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M601.63,396.7331 C600.1,402.4931 598.72,408.2431 597.5,413.9531 C594.31,428.9531 593.18,445.2431 593.2,460.8631 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="605.21,384.1131,599.7269,388.7966,601.9412,395.6593,607.4243,390.9758,605.21,384.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="600.5" y="420.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="610.5" y="427.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M639.21,460.6931 C643.44,450.8531 647.35,440.7731 650.5,430.9531 C654.79,417.5931 658.64,403.6231 662.09,389.4731 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="663.34,384.2431,657.3414,392.0545,662.1677,389.1038,665.1184,393.9301,663.34,384.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="657.5" y="420.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="667.5" y="427.02">diagram_</text><!--MD5=[b20cde3b1639d6cf1a1e38aa171d6b26]
link C_0000469458052685692314 to C_0000197068985320835874--><path d="M861.32,687.9231 C872.95,621.4031 879.69,534.5931 857.5,460.9531 C850.11,436.4231 839.49,412.0931 827.12,388.7531 " fill="none" id="C_0000469458052685692314-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="824.63,384.1031,825.3541,393.9253,826.9911,388.5105,832.4059,390.1476,824.63,384.1031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eaf865eeab14312af446ab4325231cd2]
link C_0002054140694270036745 to C_0000400244097365422548--><path d="M501.87,611.2931 C457.95,644.3831 406.25,683.3531 361.9,716.7731 " fill="none" id="C_0002054140694270036745-&gt;C_0000400244097365422548" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="357.91,719.7831,367.5011,717.5447,361.898,716.7671,362.6755,711.164,357.91,719.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M686.96,620.4231 C693.65,627.2931 700.23,634.1931 706.5,640.9531 C720.32,655.8531 734.56,671.9431 748.31,687.8831 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="677.79,611.0931,679.1437,618.176,686.2025,619.6506,684.8487,612.5677,677.79,611.0931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="723.5" y="647.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="733.5" y="654.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M604.86,623.7131 C608.05,635.8531 612.73,647.6731 619.5,657.9531 C626.45,668.5031 634.52,678.3831 643.39,687.6231 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="602.05,611.0031,599.4372,617.7242,604.6364,622.7211,607.2492,616,602.05,611.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="622.5" y="647.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="632.5" y="654.02">exclusive_</text><!--MD5=[bcb5f0df5b64908b489b236653edcc10]
@startuml
title Diagram filter context model
abstract "common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[classclanguml_1_1common_1_1model_1_1diagram.html{Base class for all diagram models}]] {
+complete() const : bool [[[{Whether the diagram is complete.}]]]
{abstract} +context() const = 0 : inja::json [[[{context}]]]
+filter() const : const diagram_filter & [[[{filter}]]]
+finalize() : void [[[{Once the diagram is complete, run any final processing.}]]]
{abstract} +get(const std::string & full_name) const = 0 : common::optional_ref<common::model::diagram_element> [[[{get}]]]
{abstract} +get(diagram_element::id_t id) const = 0 : common::optional_ref<common::model::diagram_element> [[[{get}]]]
+get_with_namespace(const std::string & name, const namespace_ & ns) const : common::optional_ref<common::model::diagram_element> [[[{get_with_namespace}]]]
+has_element(const diagram_element::id_t) const : bool [[[{has_element}]]]
+name() const : std::string [[[{name}]]]
+set_complete(bool complete) : void [[[{Set diagram in a complete state.}]]]
+set_filter(std::unique_ptr<diagram_filter> filter) : void [[[{set_filter}]]]
+set_name(const std::string & name) : void [[[{set_name}]]]
+should_include(const element & e) const : bool [[[{should_include}]]]
+should_include(const namespace_ & ns) const : bool [[[{should_include}]]]
+should_include(const source_file & path) const : bool [[[{should_include}]]]
+should_include(relationship r) const : bool [[[{should_include}]]]
+should_include(relationship_t r) const : bool [[[{should_include}]]]
+should_include(access_t s) const : bool [[[{should_include}]]]
+should_include(const std::string & s) const = deleted : bool [[[{should_include}]]]
+should_include(const namespace_ & ns, const std::string & name) const : bool [[[{should_include}]]]
{abstract} +type() const = 0 : diagram_t [[[{Return type of the diagram.}]]]
__
-complete_ : bool [[[{complete_}]]]
-filter_ : std::unique_ptr<diagram_filter> [[[{filter_}]]]
-name_ : std::string [[[{name_}]]]
}
class "common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[classclanguml_1_1common_1_1model_1_1filter__visitor.html{Base class for any diagram filter.}]] {
+is_exclusive() const : bool [[[{is_exclusive}]]]
+is_inclusive() const : bool [[[{is_inclusive}]]]
+match(const diagram & d, const common::model::element & e) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const common::model::relationship_t & r) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const common::model::access_t & a) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const common::model::namespace_ & ns) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const common::model::source_file & f) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const common::model::source_location & f) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const class_diagram::model::class_method & m) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const class_diagram::model::class_member & m) const : tvl::value_t [[[{match}]]]
+match(const diagram & d, const sequence_diagram::model::participant & p) const : tvl::value_t [[[{match}]]]
+type() const : filter_t [[[{type}]]]
__
-type_ : filter_t [[[{type_}]]]
}
class "common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[classclanguml_1_1common_1_1model_1_1diagram__filter.html{Composite of all diagrams filters.}]] {
+add_exclusive_filter(std::unique_ptr<filter_visitor> fv) : void [[[{add_exclusive_filter}]]]
+add_inclusive_filter(std::unique_ptr<filter_visitor> fv) : void [[[{add_inclusive_filter}]]]
-init_filters(const config::diagram & c) : void [[[{Initialize filters.}]]]
+should_include(const namespace_ & ns, const std::string & name) const : bool [[[{should_include}]]]
+should_include<T>(const T & e) const : _Bool
__
-diagram_ : const common::model::diagram & [[[{diagram_}]]]
-exclusive_ : std::vector<std::unique_ptr<filter_visitor>> [[[{exclusive_}]]]
-inclusive_ : std::vector<std::unique_ptr<filter_visitor>> [[[{inclusive_}]]]
}
abstract "config::diagram" as C_0000400244097365422548
abstract C_0000400244097365422548 [[structclanguml_1_1config_1_1diagram.html{Common diagram configuration type}]] {
+get_together_group(const std::string & full_name) const : std::optional<std::string> [[[{get_together_group}]]]
+get_translation_units() const : std::vector<std::string> [[[{Returns list of translation unit paths}]]]
+initialize_type_aliases() : void [[[{Initialize predefined set of C++ type aliases}]]]
+make_path_relative(const std::filesystem::path & p) const : std::filesystem::path [[[{Make path relative to the `relative_to` config option}]]]
+root_directory() const : std::filesystem::path [[[{Returns absolute path of the `relative_to` option}]]]
{abstract} +type() const = 0 : common::model::diagram_t [[[{type}]]]
__
+name : std::string [[[{name}]]]
+title : option<std::string> [[[{title}]]]
}
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0000469458052685692314 ..> C_0000197068985320835874
C_0002054140694270036745 ..> C_0000400244097365422548
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.20.1+1-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>