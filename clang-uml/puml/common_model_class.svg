<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1826px" preserveAspectRatio="none" style="width:7875px;height:1826px;" version="1.1" viewBox="0 0 7875 1826" width="7875px" zoomAndPan="magnify"><defs><filter height="300%" id="ft6m47squsiof" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="307" x="3787.5" y="16.708">clang-uml common diagram model</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="542" x="1184" y="1318.9531"/><ellipse cx="1422.25" cy="1334.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1425.2188,1340.5938 Q1424.6406,1340.8906 1424,1341.0313 Q1423.3594,1341.1875 1422.6563,1341.1875 Q1420.1563,1341.1875 1418.8281,1339.5469 Q1417.5156,1337.8906 1417.5156,1334.7656 Q1417.5156,1331.6406 1418.8281,1329.9844 Q1420.1563,1328.3281 1422.6563,1328.3281 Q1423.3594,1328.3281 1424,1328.4844 Q1424.6563,1328.6406 1425.2188,1328.9375 L1425.2188,1331.6563 Q1424.5938,1331.0781 1424,1330.8125 Q1423.4063,1330.5313 1422.7813,1330.5313 Q1421.4375,1330.5313 1420.75,1331.6094 Q1420.0625,1332.6719 1420.0625,1334.7656 Q1420.0625,1336.8594 1420.75,1337.9375 Q1421.4375,1339 1422.7813,1339 Q1423.4063,1339 1424,1338.7344 Q1424.5938,1338.4531 1425.2188,1337.875 L1425.2188,1340.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="1442.75" y="1339.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1703" y="1315.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1704" y="1328.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1185" x2="1725" y1="1350.9531" y2="1350.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1190" y="1356.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1192" y="1358.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1204" y="1365.1636">path_ : path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1185" x2="1725" y1="1371.7578" y2="1371.7578"/><ellipse cx="1195" cy="1382.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1204" y="1385.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="1195" cy="1395.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1204" y="1398.7729">path&lt;Sep&gt;(const std::string &amp; ns) : void</text><ellipse cx="1195" cy="1408.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="516" x="1204" y="1411.5776">path&lt;Sep&gt;(container_type::const_iterator begin, container_type::const_iterator end) : void</text><ellipse cx="1195" cy="1421.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="1204" y="1424.3823">path&lt;Sep&gt;(const path&lt;Sep&gt; &amp; right) : void</text><ellipse cx="1195" cy="1433.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="1204" y="1437.187">operator=(const path&lt;Sep&gt; &amp; right) = default : path&lt;Sep&gt; &amp;</text><ellipse cx="1195" cy="1446.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1204" y="1449.9917">path&lt;Sep&gt;(path&lt;Sep&gt; &amp;&amp; right) = default : void</text><ellipse cx="1195" cy="1459.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="1204" y="1462.7964">operator=(path&lt;Sep&gt; &amp;&amp; right) = default : path&lt;Sep&gt; &amp;</text><ellipse cx="1195" cy="1472.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="1204" y="1475.6011">path&lt;Sep&gt;(std::initializer_list&lt;std::string&gt; ns) : void</text><ellipse cx="1195" cy="1485.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1204" y="1488.4058">path&lt;Sep&gt;(const std::vector&lt;std::string&gt; &amp; ns) : void</text><ellipse cx="1195" cy="1498" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1204" y="1501.2104">to_string() const : std::string</text><ellipse cx="1195" cy="1510.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1204" y="1514.0151">is_empty() const : bool</text><ellipse cx="1195" cy="1523.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1204" y="1526.8198">size() const : size_t</text><ellipse cx="1195" cy="1536.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="1204" y="1539.6245">operator|(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="1195" cy="1549.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1204" y="1552.4292">operator|=(const path&lt;Sep&gt; &amp; right) : void</text><ellipse cx="1195" cy="1562.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="1204" y="1565.2339">operator|(const std::string &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="1195" cy="1574.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1204" y="1578.0386">operator|=(const std::string &amp; right) : void</text><ellipse cx="1195" cy="1587.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1204" y="1590.8433">operator[](const int index) : std::string &amp;</text><ellipse cx="1195" cy="1600.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="1204" y="1603.6479">operator[](const int index) const : const std::string &amp;</text><ellipse cx="1195" cy="1613.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1204" y="1616.4526">append(const std::string &amp; ns) : void</text><ellipse cx="1195" cy="1626.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1204" y="1629.2573">append(const path&lt;Sep&gt; &amp; ns) : void</text><ellipse cx="1195" cy="1638.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1204" y="1642.062">pop_back() : void</text><ellipse cx="1195" cy="1651.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="1204" y="1654.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="1195" cy="1664.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="1204" y="1667.6714">starts_with(const path&lt;Sep&gt; &amp; right) const : bool</text><ellipse cx="1195" cy="1677.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1204" y="1680.4761">ends_with(const path&lt;Sep&gt; &amp; right) const : bool</text><ellipse cx="1195" cy="1690.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="1204" y="1693.2808">common_path(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="1195" cy="1702.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="1204" y="1706.0854">relative_to(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="1195" cy="1715.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="1204" y="1718.8901">relative(const std::string &amp; name) const : std::string</text><ellipse cx="1195" cy="1728.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1204" y="1731.6948">name() const : std::string</text><ellipse cx="1195" cy="1741.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="1204" y="1744.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="1195" cy="1754.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="1204" y="1757.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="1195" cy="1766.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="1204" y="1770.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="1195" cy="1779.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="1204" y="1782.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="1195" cy="1792.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="1204" y="1795.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="1195" cy="1805.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="1204" y="1808.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="132.5" y="86.4531"/><ellipse cx="166.85" cy="102.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M169.8188,108.0938 Q169.2406,108.3906 168.6,108.5313 Q167.9594,108.6875 167.2563,108.6875 Q164.7563,108.6875 163.4281,107.0469 Q162.1156,105.3906 162.1156,102.2656 Q162.1156,99.1406 163.4281,97.4844 Q164.7563,95.8281 167.2563,95.8281 Q167.9594,95.8281 168.6,95.9844 Q169.2563,96.1406 169.8188,96.4375 L169.8188,99.1563 Q169.1938,98.5781 168.6,98.3125 Q168.0063,98.0313 167.3813,98.0313 Q166.0375,98.0313 165.35,99.1094 Q164.6625,100.1719 164.6625,102.2656 Q164.6625,104.3594 165.35,105.4375 Q166.0375,106.5 167.3813,106.5 Q168.0063,106.5 168.6,106.2344 Q169.1938,105.9531 169.8188,105.375 L169.8188,108.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="185.15" y="106.6074">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="133.5" x2="324.5" y1="118.4531" y2="118.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="138.5" y="124.4531"/><ellipse cx="143.5" cy="129.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="152.5" y="132.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="133.5" x2="324.5" y1="139.2578" y2="139.2578"/><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="361" y="67.4531"/><ellipse cx="376" cy="83.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.1094,89.4531 L372.3906,89.4531 L372.3906,77.0625 L380.1094,77.0625 L380.1094,79.2188 L374.8438,79.2188 L374.8438,81.8906 L379.6094,81.8906 L379.6094,84.0469 L374.8438,84.0469 L374.8438,87.2969 L380.1094,87.2969 L380.1094,89.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="390" y="87.6074">diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="362" x2="454" y1="99.4531" y2="99.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="367" y="113.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="367" y="126.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="367" y="139.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="367" y="152.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="362" x2="454" y1="158.6719" y2="158.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="86.4141" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="87" x="2083.5" y="1120.4531"/><ellipse cx="2098.5" cy="1136.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2102.6094,1142.4531 L2094.8906,1142.4531 L2094.8906,1130.0625 L2102.6094,1130.0625 L2102.6094,1132.2188 L2097.3438,1132.2188 L2097.3438,1134.8906 L2102.1094,1134.8906 L2102.1094,1137.0469 L2097.3438,1137.0469 L2097.3438,1140.2969 L2102.6094,1140.2969 L2102.6094,1142.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="2112.5" y="1140.6074">access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2084.5" x2="2169.5" y1="1152.4531" y2="1152.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2089.5" y="1166.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2089.5" y="1179.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2089.5" y="1192.2729">kPrivate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2084.5" x2="2169.5" y1="1198.8672" y2="1198.8672"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="188.8516" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="5087.5" y="1068.9531"/><ellipse cx="5102.5" cy="1084.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5106.6094,1090.9531 L5098.8906,1090.9531 L5098.8906,1078.5625 L5106.6094,1078.5625 L5106.6094,1080.7188 L5101.3438,1080.7188 L5101.3438,1083.3906 L5106.1094,1083.3906 L5106.1094,1085.5469 L5101.3438,1085.5469 L5101.3438,1088.7969 L5106.6094,1088.7969 L5106.6094,1090.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="5116.5" y="1089.1074">relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5088.5" x2="5203.5" y1="1100.9531" y2="1100.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="5093.5" y="1115.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="5093.5" y="1127.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5093.5" y="1140.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="5093.5" y="1153.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5093.5" y="1166.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5093.5" y="1179.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5093.5" y="1191.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5093.5" y="1204.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="5093.5" y="1217.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="5093.5" y="1230.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="5093.5" y="1243.2104">kDependency</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5088.5" x2="5203.5" y1="1249.8047" y2="1249.8047"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="73.6094" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="100" x="490" y="79.9531"/><ellipse cx="505" cy="95.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M509.1094,101.9531 L501.3906,101.9531 L501.3906,89.5625 L509.1094,89.5625 L509.1094,91.7188 L503.8438,91.7188 L503.8438,94.3906 L508.6094,94.3906 L508.6094,96.5469 L503.8438,96.5469 L503.8438,99.7969 L509.1094,99.7969 L509.1094,101.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="519" y="100.1074">message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="491" x2="589" y1="111.9531" y2="111.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="496" y="126.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="496" y="138.9683">kReturn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="491" x2="589" y1="145.5625" y2="145.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="176.0469" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="1416.5" y="28.9531"/><ellipse cx="1642.75" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1645.7188,50.5938 Q1645.1406,50.8906 1644.5,51.0313 Q1643.8594,51.1875 1643.1563,51.1875 Q1640.6563,51.1875 1639.3281,49.5469 Q1638.0156,47.8906 1638.0156,44.7656 Q1638.0156,41.6406 1639.3281,39.9844 Q1640.6563,38.3281 1643.1563,38.3281 Q1643.8594,38.3281 1644.5,38.4844 Q1645.1563,38.6406 1645.7188,38.9375 L1645.7188,41.6563 Q1645.0938,41.0781 1644.5,40.8125 Q1643.9063,40.5313 1643.2813,40.5313 Q1641.9375,40.5313 1641.25,41.6094 Q1640.5625,42.6719 1640.5625,44.7656 Q1640.5625,46.8594 1641.25,47.9375 Q1641.9375,49 1643.2813,49 Q1643.9063,49 1644.5,48.7344 Q1645.0938,48.4531 1645.7188,47.875 L1645.7188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="1663.25" y="49.1074">decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1417.5" x2="1998.5" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1422.5" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1424.5" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1436.5" y="75.1636">comment_ : std::optional&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1417.5" x2="1998.5" y1="81.7578" y2="81.7578"/><ellipse cx="1427.5" cy="92.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1436.5" y="95.9683">skip() const : bool</text><ellipse cx="1427.5" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1436.5" y="108.7729">skip_relationship() const : bool</text><ellipse cx="1427.5" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1436.5" y="121.5776">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1427.5" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1436.5" y="134.3823">style_spec() const : std::string</text><ellipse cx="1427.5" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1436.5" y="147.187">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1427.5" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="1436.5" y="159.9917">add_decorators(const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp; decorators) : void</text><ellipse cx="1427.5" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1436.5" y="172.7964">append(const decorated_element &amp; de) : void</text><ellipse cx="1427.5" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="1436.5" y="185.6011">comment() const : std::optional&lt;std::string&gt;</text><ellipse cx="1427.5" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1436.5" y="198.4058">set_comment(const std::string &amp; c) : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="715.5" y="416.4531"/><ellipse cx="788.25" cy="432.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M791.2188,438.0938 Q790.6406,438.3906 790,438.5313 Q789.3594,438.6875 788.6563,438.6875 Q786.1563,438.6875 784.8281,437.0469 Q783.5156,435.3906 783.5156,432.2656 Q783.5156,429.1406 784.8281,427.4844 Q786.1563,425.8281 788.6563,425.8281 Q789.3594,425.8281 790,425.9844 Q790.6563,426.1406 791.2188,426.4375 L791.2188,429.1563 Q790.5938,428.5781 790,428.3125 Q789.4063,428.0313 788.7813,428.0313 Q787.4375,428.0313 786.75,429.1094 Q786.0625,430.1719 786.0625,432.2656 Q786.0625,434.3594 786.75,435.4375 Q787.4375,436.5 788.7813,436.5 Q789.4063,436.5 790,436.2344 Q790.5938,435.9531 791.2188,435.375 L791.2188,438.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="808.75" y="436.6074">stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="716.5" x2="973.5" y1="448.4531" y2="448.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="721.5" y="454.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="723.5" y="456.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="735.5" y="462.6636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="716.5" x2="973.5" y1="469.2578" y2="469.2578"/><ellipse cx="726.5" cy="480.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="735.5" y="483.4683">set_style(const std::string &amp; style) : void</text><ellipse cx="726.5" cy="493.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="735.5" y="496.2729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="1318" x="1122" y="713.9531"/><ellipse cx="1739.75" cy="729.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1742.7188,735.5938 Q1742.1406,735.8906 1741.5,736.0313 Q1740.8594,736.1875 1740.1563,736.1875 Q1737.6563,736.1875 1736.3281,734.5469 Q1735.0156,732.8906 1735.0156,729.7656 Q1735.0156,726.6406 1736.3281,724.9844 Q1737.6563,723.3281 1740.1563,723.3281 Q1740.8594,723.3281 1741.5,723.4844 Q1742.1563,723.6406 1742.7188,723.9375 L1742.7188,726.6563 Q1742.0938,726.0781 1741.5,725.8125 Q1740.9063,725.5313 1740.2813,725.5313 Q1738.9375,725.5313 1738.25,726.6094 Q1737.5625,727.6719 1737.5625,729.7656 Q1737.5625,731.8594 1738.25,732.9375 Q1738.9375,734 1740.2813,734 Q1740.9063,734 1741.5,733.7344 Q1742.0938,733.4531 1742.7188,732.875 L1742.7188,735.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="1760.25" y="734.1074">relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1123" x2="2439" y1="745.9531" y2="745.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1128" y="751.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1130" y="753.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1142" y="760.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1128" y="764.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1130" y="766.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1142" y="772.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1128" y="777.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1130" y="779.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1142" y="785.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1128" y="790.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1130" y="792.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1142" y="798.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1123" x2="2439" y1="805.1719" y2="805.1719"/><ellipse cx="1133" cy="816.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="665" x="1142" y="819.3823">relationship(relationship_t type, int64_t destination, access_t access = access_t::kPublic, const std::string &amp; label =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1811" y="819.3823">, const std::string &amp; multiplicity_source =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2119" y="819.3823">, const std::string &amp; multiplicity_destination = "") : void</text><ellipse cx="1133" cy="828.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1142" y="832.187">~relationship() = default : void</text><ellipse cx="1133" cy="841.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1142" y="844.9917">set_type(relationship_t type) : void</text><ellipse cx="1133" cy="854.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1142" y="857.7964">type() const : relationship_t</text><ellipse cx="1133" cy="867.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1142" y="870.6011">set_destination(int64_t destination) : void</text><ellipse cx="1133" cy="880.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1142" y="883.4058">destination() const : clanguml::common::id_t</text><ellipse cx="1133" cy="893" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1142" y="896.2104">set_multiplicity_source(const std::string &amp; multiplicity_source) : void</text><ellipse cx="1133" cy="905.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1142" y="909.0151">multiplicity_source() const : std::string</text><ellipse cx="1133" cy="918.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="1142" y="921.8198">set_multiplicity_destination(const std::string &amp; multiplicity_destination) : void</text><ellipse cx="1133" cy="931.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1142" y="934.6245">multiplicity_destination() const : std::string</text><ellipse cx="1133" cy="944.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1142" y="947.4292">set_label(const std::string &amp; label) : void</text><ellipse cx="1133" cy="957.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1142" y="960.2339">label() const : std::string</text><ellipse cx="1133" cy="969.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1142" y="973.0386">set_access(access_t scope) : void</text><ellipse cx="1133" cy="982.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1142" y="985.8433">access() const : access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="1990" y="294.4531"/><ellipse cx="2106.75" cy="310.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2109.7188,316.0938 Q2109.1406,316.3906 2108.5,316.5313 Q2107.8594,316.6875 2107.1563,316.6875 Q2104.6563,316.6875 2103.3281,315.0469 Q2102.0156,313.3906 2102.0156,310.2656 Q2102.0156,307.1406 2103.3281,305.4844 Q2104.6563,303.8281 2107.1563,303.8281 Q2107.8594,303.8281 2108.5,303.9844 Q2109.1563,304.1406 2109.7188,304.4375 L2109.7188,307.1563 Q2109.0938,306.5781 2108.5,306.3125 Q2107.9063,306.0313 2107.2813,306.0313 Q2105.9375,306.0313 2105.25,307.1094 Q2104.5625,308.1719 2104.5625,310.2656 Q2104.5625,312.3594 2105.25,313.4375 Q2105.9375,314.5 2107.2813,314.5 Q2107.9063,314.5 2108.5,314.2344 Q2109.0938,313.9531 2109.7188,313.375 L2109.7188,316.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="2127.25" y="314.6074">diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1991" x2="2339" y1="326.4531" y2="326.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="332.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="334.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2010" y="340.6636">id_ : diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="345.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="347.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2010" y="353.4683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="358.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="360.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2010" y="366.2729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="370.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="372.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2010" y="379.0776">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="383.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="385.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="2010" y="391.8823">m_nextId : std::atomic_uint64_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1991" x2="2339" y1="398.4766" y2="398.4766"/><ellipse cx="2001" cy="409.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2010" y="412.687">diagram_element() : void</text><ellipse cx="2001" cy="422.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="2010" y="425.4917">~diagram_element() = default : void</text><ellipse cx="2001" cy="435.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2010" y="438.2964">id() const : diagram_element::id_t</text><ellipse cx="2001" cy="447.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2010" y="451.1011">set_id(diagram_element::id_t id) : void</text><ellipse cx="2001" cy="460.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2010" y="463.9058">alias() const : std::string</text><ellipse cx="2001" cy="473.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2010" y="476.7104">set_name(const std::string &amp; name) : void</text><ellipse cx="2001" cy="486.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2010" y="489.5151">name() const : std::string</text><ellipse cx="2001" cy="499.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2010" y="502.3198">full_name(bool ) const : std::string</text><ellipse cx="2001" cy="511.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2010" y="515.1245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="2001" cy="524.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="2010" y="527.9292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="2001" cy="537.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2010" y="540.7339">add_relationship(relationship &amp;&amp; cr) : void</text><ellipse cx="2001" cy="550.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2010" y="553.5386">append(const decorated_element &amp; e) : void</text><ellipse cx="2001" cy="563.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2010" y="566.3433">context() const : inja::json</text><ellipse cx="2001" cy="575.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2010" y="579.1479">is_nested() const : bool</text><ellipse cx="2001" cy="588.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2010" y="591.9526">nested(bool nested) : void</text><ellipse cx="2001" cy="601.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2010" y="604.7573">complete() const : bool</text><ellipse cx="2001" cy="614.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2010" y="617.562">complete(bool completed) : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="6" y="300.9531"/><ellipse cx="165.25" cy="316.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M168.2188,322.5938 Q167.6406,322.8906 167,323.0313 Q166.3594,323.1875 165.6563,323.1875 Q163.1563,323.1875 161.8281,321.5469 Q160.5156,319.8906 160.5156,316.7656 Q160.5156,313.6406 161.8281,311.9844 Q163.1563,310.3281 165.6563,310.3281 Q166.3594,310.3281 167,310.4844 Q167.6563,310.6406 168.2188,310.9375 L168.2188,313.6563 Q167.5938,313.0781 167,312.8125 Q166.4063,312.5313 165.7813,312.5313 Q164.4375,312.5313 163.75,313.6094 Q163.0625,314.6719 163.0625,316.7656 Q163.0625,318.8594 163.75,319.9375 Q164.4375,321 165.7813,321 Q166.4063,321 167,320.7344 Q167.5938,320.4531 168.2188,319.875 L168.2188,322.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="185.75" y="321.1074">nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="414" y="297.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="415" y="310.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="451" y1="332.9531" y2="332.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="338.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="340.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26" y="347.1636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="451" y1="353.7578" y2="353.7578"/><ellipse cx="17" cy="364.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="26" y="367.9683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="17" cy="377.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="26" y="380.7729">nested_trait&lt;T, Path&gt;(const nested_trait&lt;T,Path&gt; &amp; ) : void</text><ellipse cx="17" cy="390.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="26" y="393.5776">nested_trait&lt;T, Path&gt;(nested_trait&lt;T,Path&gt; &amp;&amp; ) = default : void</text><ellipse cx="17" cy="403.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="26" y="406.3823">operator=(const nested_trait&lt;T,Path&gt; &amp; ) : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="17" cy="415.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="26" y="419.187">operator=(nested_trait&lt;T,Path&gt; &amp;&amp; ) = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="17" cy="428.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26" y="431.9917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="17" cy="441.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="26" y="444.7964">has_element(const std::string &amp; name) const : bool</text><ellipse cx="17" cy="454.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="26" y="457.6011">is_empty() const : bool</text><ellipse cx="17" cy="467.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="26" y="470.4058">begin() : auto</text><ellipse cx="17" cy="480" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="483.2104">end() : auto</text><ellipse cx="17" cy="492.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="496.0151">cbegin() const : auto</text><ellipse cx="17" cy="505.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="508.8198">cend() const : auto</text><ellipse cx="17" cy="518.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="26" y="521.6245">begin() const : auto</text><ellipse cx="17" cy="531.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="534.4292">end() const : auto</text><ellipse cx="17" cy="544.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="26" y="547.2339">print_tree(const int level) : void</text><ellipse cx="17" cy="556.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="26" y="560.0386">add_element(std::unique_ptr&lt;V&gt; p) : _Bool</text><ellipse cx="17" cy="569.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="26" y="572.8433">add_element(const Path &amp; path, std::unique_ptr&lt;V&gt; p) : _Bool</text><ellipse cx="17" cy="582.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="26" y="585.6479">get_element(const Path &amp; path) : auto</text><ellipse cx="17" cy="595.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="26" y="598.4526">get_element_parent(const T &amp; element) : auto</text><ellipse cx="17" cy="608.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="26" y="611.2573">get_element(const std::string &amp; name) : auto</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="150.4375" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="359" x="1595.5" y="384.4531"/><ellipse cx="1721.25" cy="400.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1724.2188,406.0938 Q1723.6406,406.3906 1723,406.5313 Q1722.3594,406.6875 1721.6563,406.6875 Q1719.1563,406.6875 1717.8281,405.0469 Q1716.5156,403.3906 1716.5156,400.2656 Q1716.5156,397.1406 1717.8281,395.4844 Q1719.1563,393.8281 1721.6563,393.8281 Q1722.3594,393.8281 1723,393.9844 Q1723.6563,394.1406 1724.2188,394.4375 L1724.2188,397.1563 Q1723.5938,396.5781 1723,396.3125 Q1722.4063,396.0313 1721.7813,396.0313 Q1720.4375,396.0313 1719.75,397.1094 Q1719.0625,398.1719 1719.0625,400.2656 Q1719.0625,402.3594 1719.75,403.4375 Q1720.4375,404.5 1721.7813,404.5 Q1722.4063,404.5 1723,404.2344 Q1723.5938,403.9531 1724.2188,403.375 L1724.2188,406.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="1741.75" y="404.6074">source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1596.5" x2="1953.5" y1="416.4531" y2="416.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1601.5" y="422.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1603.5" y="424.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1615.5" y="430.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1601.5" y="435.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1603.5" y="437.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1615.5" y="443.4683">line_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1596.5" x2="1953.5" y1="450.0625" y2="450.0625"/><ellipse cx="1606.5" cy="461.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1615.5" y="464.2729">source_location() = default : void</text><ellipse cx="1606.5" cy="473.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="1615.5" y="477.0776">source_location(const std::string &amp; f, unsigned int l) : void</text><ellipse cx="1606.5" cy="486.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1615.5" y="489.8823">file() const : const std::string &amp;</text><ellipse cx="1606.5" cy="499.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1615.5" y="502.687">set_file(const std::string &amp; file) : void</text><ellipse cx="1606.5" cy="512.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1615.5" y="515.4917">line() const : unsigned int</text><ellipse cx="1606.5" cy="525.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1615.5" y="528.2964">set_line(const unsigned int line) : void</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="423" y="1120.4531"/><ellipse cx="438" cy="1136.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M442.1094,1142.4531 L434.3906,1142.4531 L434.3906,1130.0625 L442.1094,1130.0625 L442.1094,1132.2188 L436.8438,1132.2188 L436.8438,1134.8906 L441.6094,1134.8906 L441.6094,1137.0469 L436.8438,1137.0469 L436.8438,1140.2969 L442.1094,1140.2969 L442.1094,1142.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="452" y="1140.6074">source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="424" x2="532" y1="1152.4531" y2="1152.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="429" y="1166.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="429" y="1179.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="429" y="1192.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="424" x2="532" y1="1198.8672" y2="1198.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="487.5" y="428.9531"/><ellipse cx="542.25" cy="444.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M545.2188,450.5938 Q544.6406,450.8906 544,451.0313 Q543.3594,451.1875 542.6563,451.1875 Q540.1563,451.1875 538.8281,449.5469 Q537.5156,447.8906 537.5156,444.7656 Q537.5156,441.6406 538.8281,439.9844 Q540.1563,438.3281 542.6563,438.3281 Q543.3594,438.3281 544,438.4844 Q544.6563,438.6406 545.2188,438.9375 L545.2188,441.6563 Q544.5938,441.0781 544,440.8125 Q543.4063,440.5313 542.7813,440.5313 Q541.4375,440.5313 540.75,441.6094 Q540.0625,442.6719 540.0625,444.7656 Q540.0625,446.8594 540.75,447.9375 Q541.4375,449 542.7813,449 Q543.4063,449 544,448.7344 Q544.5938,448.4531 545.2188,447.875 L545.2188,450.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="562.75" y="449.1074">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="488.5" x2="679.5" y1="460.9531" y2="460.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="493.5" y="466.9531"/><ellipse cx="498.5" cy="471.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="507.5" y="475.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="488.5" x2="679.5" y1="481.7578" y2="481.7578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="938" y="1139.4531"/><ellipse cx="953" cy="1155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M955.9688,1161.0938 Q955.3906,1161.3906 954.75,1161.5313 Q954.1094,1161.6875 953.4063,1161.6875 Q950.9063,1161.6875 949.5781,1160.0469 Q948.2656,1158.3906 948.2656,1155.2656 Q948.2656,1152.1406 949.5781,1150.4844 Q950.9063,1148.8281 953.4063,1148.8281 Q954.1094,1148.8281 954.75,1148.9844 Q955.4063,1149.1406 955.9688,1149.4375 L955.9688,1152.1563 Q955.3438,1151.5781 954.75,1151.3125 Q954.1563,1151.0313 953.5313,1151.0313 Q952.1875,1151.0313 951.5,1152.1094 Q950.8125,1153.1719 950.8125,1155.2656 Q950.8125,1157.3594 951.5,1158.4375 Q952.1875,1159.5 953.5313,1159.5 Q954.1563,1159.5 954.75,1159.2344 Q955.3438,1158.9531 955.9688,1158.375 L955.9688,1161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="967" y="1159.6074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="1004" y="1136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="1005" y="1148.5918">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="939" x2="1075" y1="1171.4531" y2="1171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="939" x2="1075" y1="1179.4531" y2="1179.4531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="484" x="603" y="713.9531"/><ellipse cx="807.25" cy="729.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M810.2188,735.5938 Q809.6406,735.8906 809,736.0313 Q808.3594,736.1875 807.6563,736.1875 Q805.1563,736.1875 803.8281,734.5469 Q802.5156,732.8906 802.5156,729.7656 Q802.5156,726.6406 803.8281,724.9844 Q805.1563,723.3281 807.6563,723.3281 Q808.3594,723.3281 809,723.4844 Q809.6563,723.6406 810.2188,723.9375 L810.2188,726.6563 Q809.5938,726.0781 809,725.8125 Q808.4063,725.5313 807.7813,725.5313 Q806.4375,725.5313 805.75,726.6094 Q805.0625,727.6719 805.0625,729.7656 Q805.0625,731.8594 805.75,732.9375 Q806.4375,734 807.7813,734 Q808.4063,734 809,733.7344 Q809.5938,733.4531 810.2188,732.875 L810.2188,735.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="827.75" y="734.1074">source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="604" x2="1086" y1="745.9531" y2="745.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="609" y="751.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="611" y="753.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="623" y="760.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="604" x2="1086" y1="766.7578" y2="766.7578"/><ellipse cx="614" cy="777.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="623" y="780.9683">source_file() = default : void</text><ellipse cx="614" cy="790.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="623" y="793.7729">source_file(const std::filesystem::path &amp; p) : void</text><ellipse cx="614" cy="803.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="623" y="806.5776">set_path(const filesystem_path &amp; p) : void</text><ellipse cx="614" cy="816.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="623" y="819.3823">set_absolute() : void</text><ellipse cx="614" cy="828.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="623" y="832.187">is_absolute() const : bool</text><ellipse cx="614" cy="841.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="623" y="844.9917">set_type(source_file_t type) : void</text><ellipse cx="614" cy="854.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="623" y="857.7964">type() const : source_file_t</text><ellipse cx="614" cy="867.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="623" y="870.6011">source_file(const source_file &amp; ) : void</text><ellipse cx="614" cy="880.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="623" y="883.4058">source_file(source_file &amp;&amp; ) = default : void</text><ellipse cx="614" cy="893" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="623" y="896.2104">operator=(const source_file &amp; ) : source_file &amp;</text><ellipse cx="614" cy="905.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="623" y="909.0151">operator=(source_file &amp;&amp; ) : source_file &amp;</text><ellipse cx="614" cy="918.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="623" y="921.8198">operator==(const source_file &amp; right) const : bool</text><ellipse cx="614" cy="931.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="623" y="934.6245">path() const : const filesystem_path &amp;</text><ellipse cx="614" cy="944.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="623" y="947.4292">full_name(bool ) const : std::string</text><ellipse cx="614" cy="957.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="623" y="960.2339">full_path() const : path&lt;fs_path_sep&gt;</text><ellipse cx="614" cy="969.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="623" y="973.0386">add_file(std::unique_ptr&lt;source_file&gt; &amp;&amp; f) : void</text><ellipse cx="614" cy="982.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="623" y="985.8433">fs_path(const std::filesystem::path &amp; base = = {}) const : std::filesystem::path</text><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="181" x="2555.5" y="1139.4531"/><ellipse cx="2570.5" cy="1155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2573.4688,1161.0938 Q2572.8906,1161.3906 2572.25,1161.5313 Q2571.6094,1161.6875 2570.9063,1161.6875 Q2568.4063,1161.6875 2567.0781,1160.0469 Q2565.7656,1158.3906 2565.7656,1155.2656 Q2565.7656,1152.1406 2567.0781,1150.4844 Q2568.4063,1148.8281 2570.9063,1148.8281 Q2571.6094,1148.8281 2572.25,1148.9844 Q2572.9063,1149.1406 2573.4688,1149.4375 L2573.4688,1152.1563 Q2572.8438,1151.5781 2572.25,1151.3125 Q2571.6563,1151.0313 2571.0313,1151.0313 Q2569.6875,1151.0313 2569,1152.1094 Q2568.3125,1153.1719 2568.3125,1155.2656 Q2568.3125,1157.3594 2569,1158.4375 Q2569.6875,1159.5 2571.0313,1159.5 Q2571.6563,1159.5 2572.25,1159.2344 Q2572.8438,1158.9531 2573.4688,1158.375 L2573.4688,1161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="2584.5" y="1159.6074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="118" x="2621.5" y="1136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="116" x="2622.5" y="1148.5918">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2556.5" x2="2735.5" y1="1171.4531" y2="1171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2556.5" x2="2735.5" y1="1179.4531" y2="1179.4531"/><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="597" x="4991.5" y="281.9531"/><ellipse cx="5260.25" cy="297.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5260.3594,293.2969 L5259.2031,298.375 L5261.5313,298.375 L5260.3594,293.2969 Z M5258.875,291.0625 L5261.8594,291.0625 L5265.2188,303.4531 L5262.7656,303.4531 L5262,300.3906 L5258.7188,300.3906 L5257.9688,303.4531 L5255.5313,303.4531 L5258.875,291.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="5280.75" y="302.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4992.5" x2="5587.5" y1="313.9531" y2="313.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4997.5" y="319.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4999.5" y="321.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5011.5" y="328.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4997.5" y="332.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4999.5" y="334.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5011.5" y="340.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4992.5" x2="5587.5" y1="347.5625" y2="347.5625"/><ellipse cx="5002.5" cy="358.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5011.5" y="361.7729">diagram() : void</text><ellipse cx="5002.5" cy="371.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5011.5" y="374.5776">~diagram() : void</text><ellipse cx="5002.5" cy="384.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="5011.5" y="387.3823">type() const = 0 : diagram_t</text><ellipse cx="5002.5" cy="396.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="559" x="5011.5" y="400.187">get(const std::string &amp; full_name) const = 0 : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="5002.5" cy="409.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="5011.5" y="412.9917">get(const diagram_element::id_t id) const = 0 : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="5002.5" cy="422.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5011.5" y="425.7964">diagram(const diagram &amp; ) : void</text><ellipse cx="5002.5" cy="435.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="5011.5" y="438.6011">diagram(diagram &amp;&amp; ) : void</text><ellipse cx="5002.5" cy="448.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="5011.5" y="451.4058">operator=(const diagram &amp; ) : diagram &amp;</text><ellipse cx="5002.5" cy="461" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="5011.5" y="464.2104">operator=(diagram &amp;&amp; ) : diagram &amp;</text><ellipse cx="5002.5" cy="473.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="5011.5" y="477.0151">set_name(const std::string &amp; name) : void</text><ellipse cx="5002.5" cy="486.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5011.5" y="489.8198">name() const : std::string</text><ellipse cx="5002.5" cy="499.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="5011.5" y="502.6245">set_filter(std::unique_ptr&lt;diagram_filter&gt; filter) : void</text><ellipse cx="5002.5" cy="512.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="5011.5" y="515.4292">set_complete(bool complete) : void</text><ellipse cx="5002.5" cy="525.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="5011.5" y="528.2339">complete() const : bool</text><ellipse cx="5002.5" cy="537.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="5011.5" y="541.0386">should_include(const element &amp; e) const : bool</text><ellipse cx="5002.5" cy="550.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="5011.5" y="553.8433">should_include(const std::string &amp; e) const : bool</text><ellipse cx="5002.5" cy="563.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="5011.5" y="566.6479">should_include(const source_file &amp; path) const : bool</text><ellipse cx="5002.5" cy="576.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="5011.5" y="579.4526">should_include(const relationship r) const : bool</text><ellipse cx="5002.5" cy="589.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="5011.5" y="592.2573">should_include(const relationship_t r) const : bool</text><ellipse cx="5002.5" cy="601.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="5011.5" y="605.062">should_include(const access_t s) const : bool</text><ellipse cx="5002.5" cy="614.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="5011.5" y="617.8667">has_element(const diagram_element::id_t id) const : bool</text><ellipse cx="5002.5" cy="627.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="5011.5" y="630.6714">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="201.6563" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="343" x="2474.5" y="751.9531"/><ellipse cx="2616.25" cy="767.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2619.2188,773.5938 Q2618.6406,773.8906 2618,774.0313 Q2617.3594,774.1875 2616.6563,774.1875 Q2614.1563,774.1875 2612.8281,772.5469 Q2611.5156,770.8906 2611.5156,767.7656 Q2611.5156,764.6406 2612.8281,762.9844 Q2614.1563,761.3281 2616.6563,761.3281 Q2617.3594,761.3281 2618,761.4844 Q2618.6563,761.6406 2619.2188,761.9375 L2619.2188,764.6563 Q2618.5938,764.0781 2618,763.8125 Q2617.4063,763.5313 2616.7813,763.5313 Q2615.4375,763.5313 2614.75,764.6094 Q2614.0625,765.6719 2614.0625,767.7656 Q2614.0625,769.8594 2614.75,770.9375 Q2615.4375,772 2616.7813,772 Q2617.4063,772 2618,771.7344 Q2618.5938,771.4531 2619.2188,770.875 L2619.2188,773.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="2636.75" y="772.1074">element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2475.5" x2="2816.5" y1="783.9531" y2="783.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2475.5" x2="2816.5" y1="791.9531" y2="791.9531"/><ellipse cx="2485.5" cy="802.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="2494.5" y="806.1636">element(const namespace_ &amp; using_namespace) : void</text><ellipse cx="2485.5" cy="815.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2494.5" y="818.9683">~element() = default : void</text><ellipse cx="2485.5" cy="828.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2494.5" y="831.7729">name_and_ns() const : std::string</text><ellipse cx="2485.5" cy="841.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2494.5" y="844.5776">set_namespace(const namespace_ &amp; ns) : void</text><ellipse cx="2485.5" cy="854.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2494.5" y="857.3823">get_namespace() const : namespace_</text><ellipse cx="2485.5" cy="866.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="2494.5" y="870.187">get_relative_namespace() const : namespace_</text><ellipse cx="2485.5" cy="879.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="2494.5" y="882.9917">path() const : const namespace_ &amp;</text><ellipse cx="2485.5" cy="892.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2494.5" y="895.7964">full_name(bool ) const : std::string</text><ellipse cx="2485.5" cy="905.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2494.5" y="908.6011">full_name_no_ns() const : std::string</text><ellipse cx="2485.5" cy="918.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="2494.5" y="921.4058">set_using_namespaces(const namespace_ &amp; un) : void</text><ellipse cx="2485.5" cy="931" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="2494.5" y="934.2104">using_namespace() const : const namespace_ &amp;</text><ellipse cx="2485.5" cy="943.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2494.5" y="947.0151">context() const : inja::json</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="176.0469" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="444" x="1440" y="1075.4531"/><ellipse cx="1630.75" cy="1091.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1633.7188,1097.0938 Q1633.1406,1097.3906 1632.5,1097.5313 Q1631.8594,1097.6875 1631.1563,1097.6875 Q1628.6563,1097.6875 1627.3281,1096.0469 Q1626.0156,1094.3906 1626.0156,1091.2656 Q1626.0156,1088.1406 1627.3281,1086.4844 Q1628.6563,1084.8281 1631.1563,1084.8281 Q1631.8594,1084.8281 1632.5,1084.9844 Q1633.1563,1085.1406 1633.7188,1085.4375 L1633.7188,1088.1563 Q1633.0938,1087.5781 1632.5,1087.3125 Q1631.9063,1087.0313 1631.2813,1087.0313 Q1629.9375,1087.0313 1629.25,1088.1094 Q1628.5625,1089.1719 1628.5625,1091.2656 Q1628.5625,1093.3594 1629.25,1094.4375 Q1629.9375,1095.5 1631.2813,1095.5 Q1631.9063,1095.5 1632.5,1095.2344 Q1633.0938,1094.9531 1633.7188,1094.375 L1633.7188,1097.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="1651.25" y="1095.6074">package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1441" x2="1883" y1="1107.4531" y2="1107.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1446" y="1113.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1448" y="1115.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1460" y="1121.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1441" x2="1883" y1="1128.2578" y2="1128.2578"/><ellipse cx="1451" cy="1139.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="1460" y="1142.4683">package(const common::model::namespace_ &amp; using_namespace) : void</text><ellipse cx="1451" cy="1152.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1460" y="1155.2729">package(const package &amp; ) : void</text><ellipse cx="1451" cy="1164.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1460" y="1168.0776">package(package &amp;&amp; ) = default : void</text><ellipse cx="1451" cy="1177.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1460" y="1180.8823">operator=(const package &amp; ) : package &amp;</text><ellipse cx="1451" cy="1190.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="1460" y="1193.687">operator=(package &amp;&amp; ) : package &amp;</text><ellipse cx="1451" cy="1203.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1460" y="1206.4917">full_name(bool relative) const : std::string</text><ellipse cx="1451" cy="1216.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1460" y="1219.2964">is_deprecated() const : bool</text><ellipse cx="1451" cy="1228.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1460" y="1232.1011">set_deprecated(bool deprecated) : void</text><ellipse cx="1451" cy="1241.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="1460" y="1244.9058">add_package(std::unique_ptr&lt;common::model::package&gt; &amp;&amp; p) : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="71" x="7243.5" y="815.9531"/><ellipse cx="7258.5" cy="831.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7262.6094,837.9531 L7254.8906,837.9531 L7254.8906,825.5625 L7262.6094,825.5625 L7262.6094,827.7188 L7257.3438,827.7188 L7257.3438,830.3906 L7262.1094,830.3906 L7262.1094,832.5469 L7257.3438,832.5469 L7257.3438,835.7969 L7262.6094,835.7969 L7262.6094,837.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="7272.5" y="836.1074">filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7244.5" x2="7313.5" y1="847.9531" y2="847.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="7249.5" y="862.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="7249.5" y="874.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7244.5" x2="7313.5" y1="881.5625" y2="881.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="176.0469" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="531" x="5623.5" y="371.4531"/><ellipse cx="5849.25" cy="387.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5852.2188,393.0938 Q5851.6406,393.3906 5851,393.5313 Q5850.3594,393.6875 5849.6563,393.6875 Q5847.1563,393.6875 5845.8281,392.0469 Q5844.5156,390.3906 5844.5156,387.2656 Q5844.5156,384.1406 5845.8281,382.4844 Q5847.1563,380.8281 5849.6563,380.8281 Q5850.3594,380.8281 5851,380.9844 Q5851.6563,381.1406 5852.2188,381.4375 L5852.2188,384.1563 Q5851.5938,383.5781 5851,383.3125 Q5850.4063,383.0313 5849.7813,383.0313 Q5848.4375,383.0313 5847.75,384.1094 Q5847.0625,385.1719 5847.0625,387.2656 Q5847.0625,389.3594 5847.75,390.4375 Q5848.4375,391.5 5849.7813,391.5 Q5850.4063,391.5 5851,391.2344 Q5851.5938,390.9531 5852.2188,390.375 L5852.2188,393.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="5869.75" y="391.6074">filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5624.5" x2="6153.5" y1="403.4531" y2="403.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5624.5" x2="6153.5" y1="411.4531" y2="411.4531"/><ellipse cx="5634.5" cy="422.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5643.5" y="425.6636">filter_visitor(filter_t type) : void</text><ellipse cx="5634.5" cy="435.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5643.5" y="438.4683">~filter_visitor() = default : void</text><ellipse cx="5634.5" cy="448.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="5643.5" y="451.2729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text><ellipse cx="5634.5" cy="460.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="5643.5" y="464.0776">match(const diagram &amp; d, const common::model::relationship_t &amp; r) const : tvl::value_t</text><ellipse cx="5634.5" cy="473.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="5643.5" y="476.8823">match(const diagram &amp; d, const common::model::access_t &amp; a) const : tvl::value_t</text><ellipse cx="5634.5" cy="486.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="5643.5" y="489.687">match(const diagram &amp; d, const common::model::namespace_ &amp; ns) const : tvl::value_t</text><ellipse cx="5634.5" cy="499.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="5643.5" y="502.4917">match(const diagram &amp; d, const common::model::source_file &amp; f) const : tvl::value_t</text><ellipse cx="5634.5" cy="512.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5643.5" y="515.2964">is_inclusive() const : bool</text><ellipse cx="5634.5" cy="524.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5643.5" y="528.1011">is_exclusive() const : bool</text><ellipse cx="5634.5" cy="537.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5643.5" y="540.9058">type() const : filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="514" x="7350" y="803.4531"/><ellipse cx="7568.75" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7571.7188,825.0938 Q7571.1406,825.3906 7570.5,825.5313 Q7569.8594,825.6875 7569.1563,825.6875 Q7566.6563,825.6875 7565.3281,824.0469 Q7564.0156,822.3906 7564.0156,819.2656 Q7564.0156,816.1406 7565.3281,814.4844 Q7566.6563,812.8281 7569.1563,812.8281 Q7569.8594,812.8281 7570.5,812.9844 Q7571.1563,813.1406 7571.7188,813.4375 L7571.7188,816.1563 Q7571.0938,815.5781 7570.5,815.3125 Q7569.9063,815.0313 7569.2813,815.0313 Q7567.9375,815.0313 7567.25,816.1094 Q7566.5625,817.1719 7566.5625,819.2656 Q7566.5625,821.3594 7567.25,822.4375 Q7567.9375,823.5 7569.2813,823.5 Q7569.9063,823.5 7570.5,823.2344 Q7571.0938,822.9531 7571.7188,822.375 L7571.7188,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="7589.25" y="823.6074">anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7351" x2="7863" y1="835.4531" y2="835.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7351" x2="7863" y1="843.4531" y2="843.4531"/><ellipse cx="7361" cy="854.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="7370" y="857.6636">anyof_filter(filter_t type, std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt; filters) : void</text><ellipse cx="7361" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="7370" y="870.4683">~anyof_filter() = default : void</text><ellipse cx="7361" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="7370" y="883.2729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text><ellipse cx="7361" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="7370" y="896.0776">match(const diagram &amp; d, const common::model::source_file &amp; e) const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="3290.5" y="803.4531"/><ellipse cx="3466.25" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3469.2188,825.0938 Q3468.6406,825.3906 3468,825.5313 Q3467.3594,825.6875 3466.6563,825.6875 Q3464.1563,825.6875 3462.8281,824.0469 Q3461.5156,822.3906 3461.5156,819.2656 Q3461.5156,816.1406 3462.8281,814.4844 Q3464.1563,812.8281 3466.6563,812.8281 Q3467.3594,812.8281 3468,812.9844 Q3468.6563,813.1406 3469.2188,813.4375 L3469.2188,816.1563 Q3468.5938,815.5781 3468,815.3125 Q3467.4063,815.0313 3466.7813,815.0313 Q3465.4375,815.0313 3464.75,816.1094 Q3464.0625,817.1719 3464.0625,819.2656 Q3464.0625,821.3594 3464.75,822.4375 Q3465.4375,823.5 3466.7813,823.5 Q3467.4063,823.5 3468,823.2344 Q3468.5938,822.9531 3469.2188,822.375 L3469.2188,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="3486.75" y="823.6074">namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3291.5" x2="3756.5" y1="835.4531" y2="835.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3291.5" x2="3756.5" y1="843.4531" y2="843.4531"/><ellipse cx="3301.5" cy="854.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="3310.5" y="857.6636">namespace_filter(filter_t type, std::vector&lt;namespace_&gt; namespaces) : void</text><ellipse cx="3301.5" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3310.5" y="870.4683">~namespace_filter() = default : void</text><ellipse cx="3301.5" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="3310.5" y="883.2729">match(const diagram &amp; d, const namespace_ &amp; ns) const : tvl::value_t</text><ellipse cx="3301.5" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3310.5" y="896.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="414" x="3793" y="803.4531"/><ellipse cx="3953.25" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3956.2188,825.0938 Q3955.6406,825.3906 3955,825.5313 Q3954.3594,825.6875 3953.6563,825.6875 Q3951.1563,825.6875 3949.8281,824.0469 Q3948.5156,822.3906 3948.5156,819.2656 Q3948.5156,816.1406 3949.8281,814.4844 Q3951.1563,812.8281 3953.6563,812.8281 Q3954.3594,812.8281 3955,812.9844 Q3955.6563,813.1406 3956.2188,813.4375 L3956.2188,816.1563 Q3955.5938,815.5781 3955,815.3125 Q3954.4063,815.0313 3953.7813,815.0313 Q3952.4375,815.0313 3951.75,816.1094 Q3951.0625,817.1719 3951.0625,819.2656 Q3951.0625,821.3594 3951.75,822.4375 Q3952.4375,823.5 3953.7813,823.5 Q3954.4063,823.5 3955,823.2344 Q3955.5938,822.9531 3956.2188,822.375 L3956.2188,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="3973.75" y="823.6074">element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3794" x2="4206" y1="835.4531" y2="835.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3799" y="841.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3801" y="843.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3813" y="849.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3794" x2="4206" y1="856.2578" y2="856.2578"/><ellipse cx="3804" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="3813" y="870.4683">element_filter(filter_t type, std::vector&lt;std::string&gt; elements) : void</text><ellipse cx="3804" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3813" y="883.2729">~element_filter() = default : void</text><ellipse cx="3804" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3813" y="896.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="398" x="4242" y="803.4531"/><ellipse cx="4392.25" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4395.2188,825.0938 Q4394.6406,825.3906 4394,825.5313 Q4393.3594,825.6875 4392.6563,825.6875 Q4390.1563,825.6875 4388.8281,824.0469 Q4387.5156,822.3906 4387.5156,819.2656 Q4387.5156,816.1406 4388.8281,814.4844 Q4390.1563,812.8281 4392.6563,812.8281 Q4393.3594,812.8281 4394,812.9844 Q4394.6563,813.1406 4395.2188,813.4375 L4395.2188,816.1563 Q4394.5938,815.5781 4394,815.3125 Q4393.4063,815.0313 4392.7813,815.0313 Q4391.4375,815.0313 4390.75,816.1094 Q4390.0625,817.1719 4390.0625,819.2656 Q4390.0625,821.3594 4390.75,822.4375 Q4391.4375,823.5 4392.7813,823.5 Q4393.4063,823.5 4394,823.2344 Q4394.5938,822.9531 4395.2188,822.375 L4395.2188,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="4412.75" y="823.6074">subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4243" x2="4639" y1="835.4531" y2="835.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4248" y="841.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4250" y="843.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4262" y="849.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4243" x2="4639" y1="856.2578" y2="856.2578"/><ellipse cx="4253" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="4262" y="870.4683">subclass_filter(filter_t type, std::vector&lt;std::string&gt; roots) : void</text><ellipse cx="4253" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4262" y="883.2729">~subclass_filter() = default : void</text><ellipse cx="4253" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4262" y="896.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[017a9910fffd6e456b2b03918511ff35]
class C_0001412380775311155780--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="176.0469" id="C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.5;" width="942" x="4675" y="764.9531"/><ellipse cx="4965.75" cy="780.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4968.7188,786.5938 Q4968.1406,786.8906 4967.5,787.0313 Q4966.8594,787.1875 4966.1563,787.1875 Q4963.6563,787.1875 4962.3281,785.5469 Q4961.0156,783.8906 4961.0156,780.7656 Q4961.0156,777.6406 4962.3281,775.9844 Q4963.6563,774.3281 4966.1563,774.3281 Q4966.8594,774.3281 4967.5,774.4844 Q4968.1563,774.6406 4968.7188,774.9375 L4968.7188,777.6563 Q4968.0938,777.0781 4967.5,776.8125 Q4966.9063,776.5313 4966.2813,776.5313 Q4964.9375,776.5313 4964.25,777.6094 Q4963.5625,778.6719 4963.5625,780.7656 Q4963.5625,782.8594 4964.25,783.9375 Q4964.9375,785 4966.2813,785 Q4966.9063,785 4967.5,784.7344 Q4968.0938,784.4531 4968.7188,783.875 L4968.7188,786.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="4986.25" y="785.1074">edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="223" x="5397" y="761.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="221" x="5398" y="774.0918">DiagramT,ElementT,MatchOverrideT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4676" x2="5616" y1="796.9531" y2="796.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4681" y="802.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="804.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4695" y="811.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4681" y="815.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="817.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4695" y="823.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4681" y="828.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="830.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="4695" y="836.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4681" y="841.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="843.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4695" y="849.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4676" x2="5616" y1="856.1719" y2="856.1719"/><ellipse cx="4686" cy="867.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="916" x="4695" y="870.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;(filter_t type, relationship_t relationship, std::vector&lt;std::string&gt; roots, bool forward = false) : void</text><ellipse cx="4686" cy="879.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="4695" y="883.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="4686" cy="892.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="4695" y="895.9917">match(const diagram &amp; d, const MatchOverrideT &amp; e) const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="902.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="4695" y="908.7964">add_parents(const DiagramT &amp; cd) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="915.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4695" y="921.6011">init(const DiagramT &amp; cd) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4683" y="928.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="4695" y="934.4058">add_adjacent(const C &amp; from, const D &amp; to, const std::vector&lt;relationship_t&gt; &amp; relationships) : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="5652" y="809.9531"/><ellipse cx="5830.75" cy="825.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5833.7188,831.5938 Q5833.1406,831.8906 5832.5,832.0313 Q5831.8594,832.1875 5831.1563,832.1875 Q5828.6563,832.1875 5827.3281,830.5469 Q5826.0156,828.8906 5826.0156,825.7656 Q5826.0156,822.6406 5827.3281,820.9844 Q5828.6563,819.3281 5831.1563,819.3281 Q5831.8594,819.3281 5832.5,819.4844 Q5833.1563,819.6406 5833.7188,819.9375 L5833.7188,822.6563 Q5833.0938,822.0781 5832.5,821.8125 Q5831.9063,821.5313 5831.2813,821.5313 Q5829.9375,821.5313 5829.25,822.6094 Q5828.5625,823.6719 5828.5625,825.7656 Q5828.5625,827.8594 5829.25,828.9375 Q5829.9375,830 5831.2813,830 Q5831.9063,830 5832.5,829.7344 Q5833.0938,829.4531 5833.7188,828.875 L5833.7188,831.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="5851.25" y="830.1074">relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5653" x2="6125" y1="841.9531" y2="841.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5653" x2="6125" y1="849.9531" y2="849.9531"/><ellipse cx="5663" cy="860.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="5672" y="864.1636">relationship_filter(filter_t type, std::vector&lt;relationship_t&gt; relationships) : void</text><ellipse cx="5663" cy="873.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5672" y="876.9683">~relationship_filter() = default : void</text><ellipse cx="5663" cy="886.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="5672" y="889.7729">match(const diagram &amp; d, const relationship_t &amp; r) const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="402" x="2853" y="809.9531"/><ellipse cx="3010.75" cy="825.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3013.7188,831.5938 Q3013.1406,831.8906 3012.5,832.0313 Q3011.8594,832.1875 3011.1563,832.1875 Q3008.6563,832.1875 3007.3281,830.5469 Q3006.0156,828.8906 3006.0156,825.7656 Q3006.0156,822.6406 3007.3281,820.9844 Q3008.6563,819.3281 3011.1563,819.3281 Q3011.8594,819.3281 3012.5,819.4844 Q3013.1563,819.6406 3013.7188,819.9375 L3013.7188,822.6563 Q3013.0938,822.0781 3012.5,821.8125 Q3011.9063,821.5313 3011.2813,821.5313 Q3009.9375,821.5313 3009.25,822.6094 Q3008.5625,823.6719 3008.5625,825.7656 Q3008.5625,827.8594 3009.25,828.9375 Q3009.9375,830 3011.2813,830 Q3011.9063,830 3012.5,829.7344 Q3013.0938,829.4531 3013.7188,828.875 L3013.7188,831.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="3031.25" y="830.1074">access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2854" x2="3254" y1="841.9531" y2="841.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2854" x2="3254" y1="849.9531" y2="849.9531"/><ellipse cx="2864" cy="860.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2873" y="864.1636">access_filter(filter_t type, std::vector&lt;access_t&gt; access) : void</text><ellipse cx="2864" cy="873.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2873" y="876.9683">~access_filter() = default : void</text><ellipse cx="2864" cy="886.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2873" y="889.7729">match(const diagram &amp; d, const access_t &amp; a) const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="397" x="6161.5" y="803.4531"/><ellipse cx="6315.25" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6318.2188,825.0938 Q6317.6406,825.3906 6317,825.5313 Q6316.3594,825.6875 6315.6563,825.6875 Q6313.1563,825.6875 6311.8281,824.0469 Q6310.5156,822.3906 6310.5156,819.2656 Q6310.5156,816.1406 6311.8281,814.4844 Q6313.1563,812.8281 6315.6563,812.8281 Q6316.3594,812.8281 6317,812.9844 Q6317.6563,813.1406 6318.2188,813.4375 L6318.2188,816.1563 Q6317.5938,815.5781 6317,815.3125 Q6316.4063,815.0313 6315.7813,815.0313 Q6314.4375,815.0313 6313.75,816.1094 Q6313.0625,817.1719 6313.0625,819.2656 Q6313.0625,821.3594 6313.75,822.4375 Q6314.4375,823.5 6315.7813,823.5 Q6316.4063,823.5 6317,823.2344 Q6317.5938,822.9531 6318.2188,822.375 L6318.2188,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="6335.75" y="823.6074">context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6162.5" x2="6557.5" y1="835.4531" y2="835.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6167.5" y="841.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6169.5" y="843.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6181.5" y="849.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6162.5" x2="6557.5" y1="856.2578" y2="856.2578"/><ellipse cx="6172.5" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="6181.5" y="870.4683">context_filter(filter_t type, std::vector&lt;std::string&gt; context) : void</text><ellipse cx="6172.5" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="6181.5" y="883.2729">~context_filter() = default : void</text><ellipse cx="6172.5" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="6181.5" y="896.0776">match(const diagram &amp; d, const element &amp; r) const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="86.4141" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="615" x="6593.5" y="809.9531"/><ellipse cx="6861.75" cy="825.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6864.7188,831.5938 Q6864.1406,831.8906 6863.5,832.0313 Q6862.8594,832.1875 6862.1563,832.1875 Q6859.6563,832.1875 6858.3281,830.5469 Q6857.0156,828.8906 6857.0156,825.7656 Q6857.0156,822.6406 6858.3281,820.9844 Q6859.6563,819.3281 6862.1563,819.3281 Q6862.8594,819.3281 6863.5,819.4844 Q6864.1563,819.6406 6864.7188,819.9375 L6864.7188,822.6563 Q6864.0938,822.0781 6863.5,821.8125 Q6862.9063,821.5313 6862.2813,821.5313 Q6860.9375,821.5313 6860.25,822.6094 Q6859.5625,823.6719 6859.5625,825.7656 Q6859.5625,827.8594 6860.25,828.9375 Q6860.9375,830 6862.2813,830 Q6862.9063,830 6863.5,829.7344 Q6864.0938,829.4531 6864.7188,828.875 L6864.7188,831.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="6882.25" y="830.1074">paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6594.5" x2="7207.5" y1="841.9531" y2="841.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6594.5" x2="7207.5" y1="849.9531" y2="849.9531"/><ellipse cx="6604.5" cy="860.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="589" x="6613.5" y="864.1636">paths_filter(filter_t type, const std::filesystem::path &amp; root, std::vector&lt;std::filesystem::path&gt; p) : void</text><ellipse cx="6604.5" cy="873.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="6613.5" y="876.9683">~paths_filter() = default : void</text><ellipse cx="6604.5" cy="886.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="6613.5" y="889.7729">match(const diagram &amp; d, const common::model::source_file &amp; r) const : tvl::value_t</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ft6m47squsiof)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="511" x="5386.5" y="54.4531"/><ellipse cx="5595.25" cy="70.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5598.2188,76.0938 Q5597.6406,76.3906 5597,76.5313 Q5596.3594,76.6875 5595.6563,76.6875 Q5593.1563,76.6875 5591.8281,75.0469 Q5590.5156,73.3906 5590.5156,70.2656 Q5590.5156,67.1406 5591.8281,65.4844 Q5593.1563,63.8281 5595.6563,63.8281 Q5596.3594,63.8281 5597,63.9844 Q5597.6563,64.1406 5598.2188,64.4375 L5598.2188,67.1563 Q5597.5938,66.5781 5597,66.3125 Q5596.4063,66.0313 5595.7813,66.0313 Q5594.4375,66.0313 5593.75,67.1094 Q5593.0625,68.1719 5593.0625,70.2656 Q5593.0625,72.3594 5593.75,73.4375 Q5594.4375,74.5 5595.7813,74.5 Q5596.4063,74.5 5597,74.2344 Q5597.5938,73.9531 5598.2188,73.375 L5598.2188,76.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="5615.75" y="74.6074">diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5387.5" x2="5896.5" y1="86.4531" y2="86.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5387.5" x2="5896.5" y1="94.4531" y2="94.4531"/><ellipse cx="5397.5" cy="105.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="5406.5" y="108.6636">diagram_filter(const common::model::diagram &amp; d, const config::diagram &amp; c) : void</text><ellipse cx="5397.5" cy="118.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="5406.5" y="121.4683">add_inclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text><ellipse cx="5397.5" cy="131.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="5406.5" y="134.2729">add_exclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text><ellipse cx="5397.5" cy="143.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="5406.5" y="147.0776">should_include(namespace_ ns, const std::string &amp; name) const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5394.5" y="153.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5406.5" y="159.8823">init_filters(const config::diagram &amp; c) : void</text><ellipse cx="5397.5" cy="169.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="5406.5" y="172.687">should_include(const T &amp; e) : _Bool</text></a><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M2306.79,994.7731 C2386.79,1012.1731 2468.74,1027.7431 2547,1038.9531 C3061.52,1112.6331 4751.18,1153.6431 5087.48,1161.1831 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2293.97,991.9731,2298.9792,997.1604,2305.6941,994.5316,2300.6849,989.3443,2293.97,991.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2550" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2560" y="1035.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M1945.58,1000.6931 C1996.32,1045.9331 2048.02,1092.0331 2083.19,1123.3931 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1935.78,991.9631,1937.5981,998.9413,1944.7387,999.9469,1942.9206,992.9688,1935.78,991.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1988" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="1998" y="1035.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1609.87,221.2231 C1596.81,240.1731 1585.39,260.7231 1578,281.9531 C1526.11,430.9531 1519.72,490.3331 1578,636.9531 C1588.86,664.2631 1605.01,690.1131 1623.55,713.7831 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1604.26,217.0231,1621.71,204.9931,1615.57,225.2731,1604.26,217.0231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M964.2,510.3131 C1086.34,561.3931 1281.75,643.1331 1450.82,713.8531 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="961.36,516.7131,945.61,502.5331,966.76,503.7931,961.36,516.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1999.79,633.9431 C1983.37,650.9031 1966.9,667.8031 1951,683.9531 C1941.39,693.7131 1931.44,703.7431 1921.39,713.8231 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2008.9,624.5231,2001.8542,626.0581,2000.5611,633.1523,2007.6069,631.6173,2008.9,624.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1966" y="673.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1976" y="680.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1875.84,215.7131 C1908.47,236.5231 1941.88,259.1331 1972,281.9531 C1977.97,286.4731 1983.98,291.1531 1989.98,295.9331 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1872.05,221.6031,1858.87,205.0131,1879.52,209.7631,1872.05,221.6031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M1032.7,1187.4831 C1061.71,1213.4831 1112.27,1258.7931 1168.55,1309.2331 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1173.54,1304.3031,1183.76,1322.8631,1164.19,1314.7331,1173.54,1304.3031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M923.55,1003.5431 C951.23,1056.2431 979.28,1109.6631 994.78,1139.1831 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="917.47,991.9631,916.72,999.1351,923.0519,1002.5859,923.8019,995.4139,917.47,991.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="944" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="954" y="1035.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M670.75,1000.4331 C618.55,1044.3031 565.36,1089.0231 528.11,1120.3331 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="680.82,991.9631,673.6534,992.7626,671.6349,999.6854,678.8016,998.886,680.82,991.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="643" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="653" y="1035.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1978.6,633.9331 C1976.41,634.9731 1974.21,635.9831 1972,636.9531 C1617.52,792.9731 1475.23,603.5731 1104,713.9531 C1098.38,715.6231 1092.75,717.4231 1087.11,719.3331 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1975.57,627.6131,1996.54,624.5631,1982.05,640.0231,1975.57,627.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M845,522.8131 C845,574.0131 845,648.4231 845,713.5531 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="838,522.7231,845,502.7231,852,522.7231,838,522.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1bd93a173dba52ae25f3e9452d57eb86]
reverse link C_0000895261582183440230 to C_0000785714713072053129--><path d="M1576.01,528.0631 C1441.05,575.7531 1259.57,643.4731 1104,713.9531 C1098.43,716.4731 1092.81,719.0631 1087.17,721.7131 " fill="none" id="C_0000895261582183440230&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1573.97,521.3531,1595.16,521.3131,1578.62,534.5631,1573.97,521.3531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M2577.69,1187.4831 C2419.89,1240.6731 2022.38,1374.6831 1745.44,1468.0431 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1747.32,1474.7931,1726.13,1474.5531,1742.85,1461.5331,1747.32,1474.7931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M5482.6,272.1531 C5517.14,238.7331 5550.82,206.1531 5578.26,179.6131 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5472.84,281.5931,5479.9342,280.3001,5481.4692,273.2542,5474.375,274.5473,5472.84,281.5931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5522" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="5532" y="248.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M5502.13,179.6031 C5475.07,195.2831 5448.25,213.7931 5426,234.9531 C5412.46,247.8331 5399.76,262.3331 5387.98,277.6231 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5384.69,281.9531,5393.32,277.2072,5387.7151,277.972,5386.9502,272.3671,5384.69,281.9531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5429" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="5439" y="248.02">diagram_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M2607,967.3231 C2602.8,990.9031 2601.23,1015.6631 2605,1038.9531 C2610.84,1075.0831 2625.71,1114.9431 2635.84,1139.3431 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2609.59,954.3631,2604.4932,959.4643,2607.2417,966.1311,2612.3385,961.0299,2609.59,954.3631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2608" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="2618" y="1035.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M2646,967.3731 C2646,1030.2531 2646,1102.9031 2646,1139.2331 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2646,954.1131,2642,960.1131,2646,966.1131,2650,960.1131,2646,954.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2649" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="2659" y="1035.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M2355.79,615.7431 C2412.11,661.5831 2472.23,710.5131 2523.06,751.8931 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2351.11,620.9531,2340.01,602.9031,2359.94,610.0931,2351.11,620.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17fdd0dd15c2164793acaf4e4273a1ea]
reverse link C_0000895261582183440230 to C_0002069520381434407937--><path d="M1819.14,552.2431 C1847.43,600.2831 1889.02,655.0031 1943,683.9531 C2043.83,738.0331 2349.31,675.3131 2457,713.9531 C2482.33,723.0431 2507.21,736.6731 2530.18,751.8731 " fill="none" id="C_0000895261582183440230&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1812.89,555.4131,1809.14,534.5631,1825.08,548.5231,1812.89,555.4131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M2508.72,964.9031 C2491.93,975.1831 2474.51,984.5131 2457,991.9531 C2385.58,1022.2931 2361.17,1007.1431 2285,1021.9531 C2151.4,1047.9331 2002.69,1081.3031 1884.07,1108.9931 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2504.99,958.9731,2525.61,954.1031,2512.53,970.7731,2504.99,958.9731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M802.96,518.8831 C775.38,555.0931 737.25,601.3131 698,636.9531 C653.01,677.8031 613.4,660.2231 585,713.9531 C527.25,823.1831 504.45,898.2631 585,991.9531 C659.44,1078.5231 980.22,1051.1431 1093,1068.9531 C1207.46,1087.0331 1334.74,1107.8731 1439.84,1125.2931 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="797.64,514.3231,815.24,502.5231,808.84,522.7231,797.64,514.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M6167.67,481.5931 C6511.16,512.9331 7068.78,582.6731 7226,713.9531 C7256.34,739.2831 7269.35,784.0831 7274.91,815.7531 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6154.53,480.4031,6160.1455,484.9271,6166.4813,481.4836,6160.8658,476.9596,6154.53,480.4031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7178" y="673.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="7188" y="680.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M7516.29,796.7331 C7442.41,754.3731 7334,698.0531 7232,666.9531 C6867.87,555.9231 6429.15,502.8131 6154.57,478.7231 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7527.85,803.4031,7524.6541,796.9389,7517.458,797.4027,7520.6538,803.8669,7527.85,803.4031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7277" y="673.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="7287" y="680.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M6174.71,485.5531 C6534.83,519.8731 7131.73,586.4731 7338,666.9531 C7419.84,698.8831 7501.19,759.9731 7552.64,803.2031 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6173.79,492.4931,6154.54,483.6331,6175.11,478.5531,6173.79,492.4931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M3435.2,909.2831 C3388.03,936.9331 3328.3,969.2431 3272,991.9531 C3087.76,1066.2831 2860.25,1119.1231 2736.54,1144.8031 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3446.61,902.5431,3439.4094,902.154,3436.2807,908.651,3443.4813,909.0401,3446.61,902.5431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3193" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="3203" y="1035.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M5763.26,558.9531 C5716.52,589.9531 5661.34,620.4031 5606,636.9531 C5469.7,677.7031 4468.05,659.2331 4326,666.9531 C4080.58,680.2831 4010.24,642.7531 3775,713.9531 C3709.56,733.7631 3642,772.1031 3593.49,803.3531 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5759.61,552.9731,5780.09,547.5331,5767.47,564.5531,5759.61,552.9731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M5762.52,558.9931 C5715.9,589.8231 5660.99,620.1431 5606,636.9531 C5516.37,664.3431 4856.55,661.2131 4763,666.9531 C4522.99,681.6831 4452.29,638.4131 4224,713.9531 C4164.37,733.6831 4104.18,772.0331 4061.23,803.3031 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5758.82,553.0431,5779.31,547.6331,5766.67,564.6431,5758.82,553.0431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M5760.51,558.6231 C5714.19,588.9831 5659.98,619.1031 5606,636.9531 C5204.23,769.7831 5058.05,578.9331 4657,713.9531 C4599.01,733.4731 4541,771.8331 4499.72,803.1731 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5756.68,552.7631,5777.2,547.4531,5764.47,564.3931,5756.68,552.7631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a6800652bce38258685a15b776b4573]
reverse link C_0001412380775311155780 to C_0000229140160180072950--><path d="M5146,954.4331 C5146,991.1931 5146,1032.6131 5146,1068.7531 " fill="none" id="C_0001412380775311155780&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5146,941.1231,5142,947.1231,5146,953.1231,5150,947.1231,5146,941.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5149" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="5159" y="1035.02">relationship_</text><!--MD5=[9f380ab2801284f963616461f482de06]
reverse link C_0000469458052685692314 to C_0001412380775311155780--><path d="M5739.7,558.2431 C5697.12,584.8431 5650.26,612.9231 5606,636.9531 C5522.43,682.3331 5427.61,727.6431 5345.86,764.8831 " fill="none" id="C_0000469458052685692314&lt;-C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5736.06,552.2531,5756.72,547.5431,5743.51,564.1131,5736.06,552.2531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M5807.01,902.6731 C5757.83,930.7931 5693.46,965.6731 5634,991.9531 C5483.16,1058.6031 5297.44,1117.4131 5204.63,1145.3031 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5818.54,896.0431,5811.3445,895.5686,5808.139,902.028,5815.3344,902.5026,5818.54,896.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5560" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="5570" y="1035.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M5889,567.8231 C5889,647.7631 5889,752.5831 5889,809.9431 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5882,567.8231,5889,547.8231,5896,567.8231,5882,567.8231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2993.25,904.0731 C2951.49,935.4031 2893.25,973.2431 2835,991.9531 C2620.51,1060.8431 2541.87,948.2131 2329,1021.9531 C2268.25,1042.9931 2209.11,1087.8531 2170.69,1121.2531 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3003.77,896.0531,2996.5734,896.5101,2994.2272,903.3288,3001.4239,902.8719,3003.77,896.0531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2332" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2342" y="1035.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M5763.94,558.7231 C5717.07,589.8931 5661.63,620.5031 5606,636.9531 C5514.67,663.9631 3987.13,662.5131 3892,666.9531 C3616.4,679.8131 3534.98,627.4131 3273,713.9531 C3210.06,734.7431 3146.95,777.3931 3104.75,809.8031 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5760,552.9331,5780.47,547.4731,5767.88,564.5131,5760,552.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M6009.43,560.5531 C6103,638.3331 6228.71,742.8231 6301.39,803.2331 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6004.73,565.7531,5993.82,547.5831,6013.68,554.9831,6004.73,565.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M6152.83,554.4431 C6281.1,600.9931 6437.17,658.9031 6576,713.9531 C6653.64,744.7431 6740.7,781.8431 6805.15,809.8231 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6150.13,560.9131,6133.71,547.5131,6154.9,547.7531,6150.13,560.9131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5694.46,190.2631 C5732.84,243.1831 5785.1,315.2231 5825.79,371.3131 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5686.73,179.6131,5687.0177,186.8185,5693.7794,189.3242,5693.4918,182.1189,5686.73,179.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5739" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5749" y="248.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5770.6,187.3031 C5788.67,201.2331 5805.61,217.1531 5819,234.9531 C5848.83,274.5931 5866.12,327.2031 5876.06,371.4331 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5760.16,179.5531,5762.5869,186.3436,5769.7884,186.7151,5767.3615,179.9246,5760.16,179.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5832" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="5842" y="248.02">exclusive_</text><!--MD5=[2c62a15d45a0107b907e7ad5d924f7ad]
link C_0001331923285602672865 to C_0000911024010877522257--><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[642177fa6430f9ffc695c73d94d96036]
@startuml
title clang-uml common diagram model
class "path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>(const std::string & ns) : void
+path<Sep>(container_type::const_iterator begin, container_type::const_iterator end) : void
+path<Sep>(const path<Sep> & right) : void
+operator=(const path<Sep> & right) = default : path<Sep> &
+path<Sep>(path<Sep> && right) = default : void
+operator=(path<Sep> && right) = default : path<Sep> &
+path<Sep>(std::initializer_list<std::string> ns) : void
+path<Sep>(const std::vector<std::string> & ns) : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|(const path<Sep> & right) const : path<Sep>
+operator|=(const path<Sep> & right) : void
+operator|(const std::string & right) const : path<Sep>
+operator|=(const std::string & right) : void
+operator[](const int index) : std::string &
+operator[](const int index) const : const std::string &
+append(const std::string & ns) : void
+append(const path<Sep> & ns) : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with(const path<Sep> & right) const : bool
+ends_with(const path<Sep> & right) const : bool
+common_path(const path<Sep> & right) const : path<Sep>
+relative_to(const path<Sep> & right) const : path<Sep>
+relative(const std::string & name) const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : path::container_type [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216{path_}]]]
}
class "ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29{value}]]]
}
enum "diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
}
enum "relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
}
enum "message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42{message_t}]] {
kCall
kReturn
}
class "decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators(const std::vector<std::shared_ptr<decorators::decorator>> & decorators) : void
+append(const decorated_element & de) : void
+comment() const : std::optional<std::string>
+set_comment(const std::string & c) : void
-comment_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55{comment_}]]]
}
class "stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style(const std::string & style) : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30{style_}]]]
}
class "relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28{relationship}]] {
+relationship(relationship_t type, int64_t destination, access_t access = access_t::kPublic, const std::string & label = "", const std::string & multiplicity_source = "", const std::string & multiplicity_destination = "") : void
+~relationship() = default : void
+set_type(relationship_t type) : void
+type() const : relationship_t
+set_destination(int64_t destination) : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source(const std::string & multiplicity_source) : void
+multiplicity_source() const : std::string
+set_multiplicity_destination(const std::string & multiplicity_destination) : void
+multiplicity_destination() const : std::string
+set_label(const std::string & label) : void
+label() const : std::string
+set_access(access_t scope) : void
+access() const : access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64{label_}]]]
}
class "diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : diagram_element::id_t
+set_id(diagram_element::id_t id) : void
+alias() const : std::string
+set_name(const std::string & name) : void
+name() const : std::string
+full_name(bool ) const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship(relationship && cr) : void
+append(const decorated_element & e) : void
+context() const : inja::json
+is_nested() const : bool
+nested(bool nested) : void
+complete() const : bool
+complete(bool completed) : void
-id_ : diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81{complete_}]]]
{static} -m_nextId : std::atomic_uint64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83{m_nextId}]]]
}
class "nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>(const nested_trait<T,Path> & ) : void
+nested_trait<T, Path>(nested_trait<T,Path> && ) = default : void
+operator=(const nested_trait<T,Path> & ) : nested_trait<T,Path> &
+operator=(nested_trait<T,Path> && ) = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element(const std::string & name) const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree(const int level) : void
+add_element(std::unique_ptr<V> p) : _Bool
+add_element(const Path & path, std::unique_ptr<V> p) : _Bool
+get_element(const Path & path) : auto
+get_element_parent(const T & element) : auto
+get_element(const std::string & name) : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171{elements_}]]]
}
class "source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24{source_location}]] {
+source_location() = default : void
+source_location(const std::string & f, unsigned int l) : void
+file() const : const std::string &
+set_file(const std::string & file) : void
+line() const : unsigned int
+set_line(const unsigned int line) : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43{file_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44{line_}]]]
}
enum "source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40{value}]]]
}
class "path<fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45{source_file}]] {
+source_file() = default : void
+source_file(const std::filesystem::path & p) : void
+set_path(const filesystem_path & p) : void
+set_absolute() : void
+is_absolute() const : bool
+set_type(source_file_t type) : void
+type() const : source_file_t
+source_file(const source_file & ) : void
+source_file(source_file && ) = default : void
+operator=(const source_file & ) : source_file &
+operator=(source_file && ) : source_file &
+operator==(const source_file & right) const : bool
+path() const : const filesystem_path &
+full_name(bool ) const : std::string
+full_path() const : path<fs_path_sep>
+add_file(std::unique_ptr<source_file> && f) : void
+fs_path(const std::filesystem::path & base = = {}) const : std::filesystem::path
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120{is_absolute_}]]]
}
class "path<ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
abstract "diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : diagram_t
{abstract} +get(const std::string & full_name) const = 0 : clanguml::common::optional_ref<diagram_element>
{abstract} +get(const diagram_element::id_t id) const = 0 : clanguml::common::optional_ref<diagram_element>
+diagram(const diagram & ) : void
+diagram(diagram && ) : void
+operator=(const diagram & ) : diagram &
+operator=(diagram && ) : diagram &
+set_name(const std::string & name) : void
+name() const : std::string
+set_filter(std::unique_ptr<diagram_filter> filter) : void
+set_complete(bool complete) : void
+complete() const : bool
+should_include(const element & e) const : bool
+should_include(const std::string & e) const : bool
+should_include(const source_file & path) const : bool
+should_include(const relationship r) const : bool
+should_include(const relationship_t r) const : bool
+should_include(const access_t s) const : bool
+has_element(const diagram_element::id_t id) const : bool
+should_include(const namespace_ & ns, const std::string & name) const : bool
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80{complete_}]]]
}
class "element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35{element}]] {
+element(const namespace_ & using_namespace) : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace(const namespace_ & ns) : void
+get_namespace() const : namespace_
+get_relative_namespace() const : namespace_
+path() const : const namespace_ &
+full_name(bool ) const : std::string
+full_name_no_ns() const : std::string
+set_using_namespaces(const namespace_ & un) : void
+using_namespace() const : const namespace_ &
+context() const : inja::json
}
class "package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34{package}]] {
+package(const common::model::namespace_ & using_namespace) : void
+package(const package & ) : void
+package(package && ) = default : void
+operator=(const package & ) : package &
+operator=(package && ) : package &
+full_name(bool relative) const : std::string
+is_deprecated() const : bool
+set_deprecated(bool deprecated) : void
+add_package(std::unique_ptr<common::model::package> && p) : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54{is_deprecated_}]]]
}
enum "filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36{filter_t}]] {
kInclusive
kExclusive
}
class "filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56{filter_visitor}]] {
+filter_visitor(filter_t type) : void
+~filter_visitor() = default : void
+match(const diagram & d, const common::model::element & e) const : tvl::value_t
+match(const diagram & d, const common::model::relationship_t & r) const : tvl::value_t
+match(const diagram & d, const common::model::access_t & a) const : tvl::value_t
+match(const diagram & d, const common::model::namespace_ & ns) const : tvl::value_t
+match(const diagram & d, const common::model::source_file & f) const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : filter_t
}
class "anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86{anyof_filter}]] {
+anyof_filter(filter_t type, std::vector<std::unique_ptr<filter_visitor>> filters) : void
+~anyof_filter() = default : void
+match(const diagram & d, const common::model::element & e) const : tvl::value_t
+match(const diagram & d, const common::model::source_file & e) const : tvl::value_t
}
class "namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102{namespace_filter}]] {
+namespace_filter(filter_t type, std::vector<namespace_> namespaces) : void
+~namespace_filter() = default : void
+match(const diagram & d, const namespace_ & ns) const : tvl::value_t
+match(const diagram & d, const element & e) const : tvl::value_t
}
class "element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115{element_filter}]] {
+element_filter(filter_t type, std::vector<std::string> elements) : void
+~element_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123{elements_}]]]
}
class "subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126{subclass_filter}]] {
+subclass_filter(filter_t type, std::vector<std::string> roots) : void
+~subclass_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134{roots_}]]]
}
class "edge_traversal_filter<DiagramT,ElementT,MatchOverrideT>" as C_0001412380775311155780
class C_0001412380775311155780 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>(filter_t type, relationship_t relationship, std::vector<std::string> roots, bool forward = false) : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match(const diagram & d, const MatchOverrideT & e) const : tvl::value_t
-add_parents(const DiagramT & cd) const : void
-init(const DiagramT & cd) const : void
-add_adjacent(const C & from, const D & to, const std::vector<relationship_t> & relationships) : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276{forward_}]]]
}
class "relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279{relationship_filter}]] {
+relationship_filter(filter_t type, std::vector<relationship_t> relationships) : void
+~relationship_filter() = default : void
+match(const diagram & d, const relationship_t & r) const : tvl::value_t
}
class "access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292{access_filter}]] {
+access_filter(filter_t type, std::vector<access_t> access) : void
+~access_filter() = default : void
+match(const diagram & d, const access_t & a) const : tvl::value_t
}
class "context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303{context_filter}]] {
+context_filter(filter_t type, std::vector<std::string> context) : void
+~context_filter() = default : void
+match(const diagram & d, const element & r) const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311{context_}]]]
}
class "paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314{paths_filter}]] {
+paths_filter(filter_t type, const std::filesystem::path & root, std::vector<std::filesystem::path> p) : void
+~paths_filter() = default : void
+match(const diagram & d, const common::model::source_file & r) const : tvl::value_t
}
class "diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328{diagram_filter}]] {
+diagram_filter(const common::model::diagram & d, const config::diagram & c) : void
+add_inclusive_filter(std::unique_ptr<filter_visitor> fv) : void
+add_exclusive_filter(std::unique_ptr<filter_visitor> fv) : void
+should_include(namespace_ ns, const std::string & name) const : bool
-init_filters(const config::diagram & c) : void
+should_include(const T & e) : _Bool
}
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000895261582183440230 <|- - C_0000785714713072053129
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000895261582183440230 <|- - C_0002069520381434407937
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0001412380775311155780 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001412380775311155780
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>