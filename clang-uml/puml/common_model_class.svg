<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2262px" preserveAspectRatio="none" style="width:9152px;height:2262px;" version="1.1" viewBox="0 0 9152 2262" width="9152px" zoomAndPan="magnify"><defs><filter height="300%" id="fj0ac5z7eksem" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="307" x="4429" y="16.708">clang-uml common diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="55.5" y="144.4531"/><ellipse cx="70.5" cy="160.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M74.6094,166.4531 L66.8906,166.4531 L66.8906,154.0625 L74.6094,154.0625 L74.6094,156.2188 L69.3438,156.2188 L69.3438,158.8906 L74.1094,158.8906 L74.1094,161.0469 L69.3438,161.0469 L69.3438,164.2969 L74.6094,164.2969 L74.6094,166.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="84.5" y="164.6074">diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="56.5" x2="148.5" y1="176.4531" y2="176.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="61.5" y="190.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="61.5" y="203.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="61.5" y="216.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="61.5" y="229.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="56.5" x2="148.5" y1="235.6719" y2="235.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="87" x="2325" y="1543.4531"/><ellipse cx="2340" cy="1559.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2344.1094,1565.4531 L2336.3906,1565.4531 L2336.3906,1553.0625 L2344.1094,1553.0625 L2344.1094,1555.2188 L2338.8438,1555.2188 L2338.8438,1557.8906 L2343.6094,1557.8906 L2343.6094,1560.0469 L2338.8438,1560.0469 L2338.8438,1563.2969 L2344.1094,1563.2969 L2344.1094,1565.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="2354" y="1563.6074">access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2326" x2="2411" y1="1575.4531" y2="1575.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2331" y="1589.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2331" y="1602.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2331" y="1615.2729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2331" y="1628.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2326" x2="2411" y1="1634.6719" y2="1634.6719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="3784" y="1491.9531"/><ellipse cx="3799" cy="1507.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3803.1094,1513.9531 L3795.3906,1513.9531 L3795.3906,1501.5625 L3803.1094,1501.5625 L3803.1094,1503.7188 L3797.8438,1503.7188 L3797.8438,1506.3906 L3802.6094,1506.3906 L3802.6094,1508.5469 L3797.8438,1508.5469 L3797.8438,1511.7969 L3803.1094,1511.7969 L3803.1094,1513.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="3813" y="1512.1074">relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3785" x2="3900" y1="1523.9531" y2="1523.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="3790" y="1538.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="3790" y="1550.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3790" y="1563.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3790" y="1576.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="3790" y="1589.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3790" y="1602.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="3790" y="1614.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3790" y="1627.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3790" y="1640.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="3790" y="1653.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="3790" y="1666.2104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3790" y="1679.0151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3785" x2="3900" y1="1685.6094" y2="1685.6094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="185" y="28.9531"/><ellipse cx="202.25" cy="44.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M206.3594,50.9531 L198.6406,50.9531 L198.6406,38.5625 L206.3594,38.5625 L206.3594,40.7188 L201.0938,40.7188 L201.0938,43.3906 L205.8594,43.3906 L205.8594,45.5469 L201.0938,45.5469 L201.0938,48.7969 L206.3594,48.7969 L206.3594,50.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="216.75" y="49.1074">message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="186" x2="289" y1="60.9531" y2="60.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="191" y="75.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="191" y="87.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="191" y="100.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="191" y="113.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="191" y="126.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="191" y="139.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="191" y="151.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="191" y="164.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="191" y="177.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="191" y="190.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="191" y="203.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="191" y="216.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="191" y="228.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="191" y="241.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="191" y="254.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="191" y="267.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="191" y="280.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="191" y="292.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="191" y="305.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="191" y="318.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="191" y="331.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="191" y="344.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="186" x2="289" y1="350.6563" y2="350.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="144" x="325.5" y="156.9531"/><ellipse cx="340.5" cy="172.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M344.6094,178.9531 L336.8906,178.9531 L336.8906,166.5625 L344.6094,166.5625 L344.6094,168.7188 L339.3438,168.7188 L339.3438,171.3906 L344.1094,171.3906 L344.1094,173.5469 L339.3438,173.5469 L339.3438,176.7969 L344.6094,176.7969 L344.6094,178.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="354.5" y="177.1074">message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="326.5" x2="468.5" y1="188.9531" y2="188.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="331.5" y="203.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="331.5" y="215.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="326.5" x2="468.5" y1="222.5625" y2="222.5625"/></a><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="542" x="775.5" y="1754.9531"/><ellipse cx="1013.75" cy="1770.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1016.7188,1776.5938 Q1016.1406,1776.8906 1015.5,1777.0313 Q1014.8594,1777.1875 1014.1563,1777.1875 Q1011.6563,1777.1875 1010.3281,1775.5469 Q1009.0156,1773.8906 1009.0156,1770.7656 Q1009.0156,1767.6406 1010.3281,1765.9844 Q1011.6563,1764.3281 1014.1563,1764.3281 Q1014.8594,1764.3281 1015.5,1764.4844 Q1016.1563,1764.6406 1016.7188,1764.9375 L1016.7188,1767.6563 Q1016.0938,1767.0781 1015.5,1766.8125 Q1014.9063,1766.5313 1014.2813,1766.5313 Q1012.9375,1766.5313 1012.25,1767.6094 Q1011.5625,1768.6719 1011.5625,1770.7656 Q1011.5625,1772.8594 1012.25,1773.9375 Q1012.9375,1775 1014.2813,1775 Q1014.9063,1775 1015.5,1774.7344 Q1016.0938,1774.4531 1016.7188,1773.875 L1016.7188,1776.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="1034.25" y="1775.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1294.5" y="1751.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1295.5" y="1764.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="776.5" x2="1316.5" y1="1786.9531" y2="1786.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="781.5" y="1792.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="783.5" y="1794.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="795.5" y="1801.1636">path_ : path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="776.5" x2="1316.5" y1="1807.7578" y2="1807.7578"/><ellipse cx="786.5" cy="1818.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="795.5" y="1821.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="786.5" cy="1831.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="795.5" y="1834.7729">path&lt;Sep&gt;(const std::string &amp; ns) : void</text><ellipse cx="786.5" cy="1844.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="516" x="795.5" y="1847.5776">path&lt;Sep&gt;(container_type::const_iterator begin, container_type::const_iterator end) : void</text><ellipse cx="786.5" cy="1857.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="795.5" y="1860.3823">path&lt;Sep&gt;(const path&lt;Sep&gt; &amp; right) : void</text><ellipse cx="786.5" cy="1869.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="795.5" y="1873.187">operator=(const path&lt;Sep&gt; &amp; right) = default : path&lt;Sep&gt; &amp;</text><ellipse cx="786.5" cy="1882.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="795.5" y="1885.9917">path&lt;Sep&gt;(path&lt;Sep&gt; &amp;&amp; right) = default : void</text><ellipse cx="786.5" cy="1895.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="795.5" y="1898.7964">operator=(path&lt;Sep&gt; &amp;&amp; right) = default : path&lt;Sep&gt; &amp;</text><ellipse cx="786.5" cy="1908.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="795.5" y="1911.6011">path&lt;Sep&gt;(std::initializer_list&lt;std::string&gt; ns) : void</text><ellipse cx="786.5" cy="1921.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="795.5" y="1924.4058">path&lt;Sep&gt;(const std::vector&lt;std::string&gt; &amp; ns) : void</text><ellipse cx="786.5" cy="1934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="795.5" y="1937.2104">to_string() const : std::string</text><ellipse cx="786.5" cy="1946.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="795.5" y="1950.0151">is_empty() const : bool</text><ellipse cx="786.5" cy="1959.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="795.5" y="1962.8198">size() const : size_t</text><ellipse cx="786.5" cy="1972.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="795.5" y="1975.6245">operator|(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="1985.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="795.5" y="1988.4292">operator|=(const path&lt;Sep&gt; &amp; right) : void</text><ellipse cx="786.5" cy="1998.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="795.5" y="2001.2339">operator|(const std::string &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2010.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="795.5" y="2014.0386">operator|=(const std::string &amp; right) : void</text><ellipse cx="786.5" cy="2023.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="795.5" y="2026.8433">operator[](const int index) : std::string &amp;</text><ellipse cx="786.5" cy="2036.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="795.5" y="2039.6479">operator[](const int index) const : const std::string &amp;</text><ellipse cx="786.5" cy="2049.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="795.5" y="2052.4526">append(const std::string &amp; ns) : void</text><ellipse cx="786.5" cy="2062.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="795.5" y="2065.2573">append(const path&lt;Sep&gt; &amp; ns) : void</text><ellipse cx="786.5" cy="2074.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="795.5" y="2078.062">pop_back() : void</text><ellipse cx="786.5" cy="2087.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="795.5" y="2090.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="786.5" cy="2100.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="795.5" y="2103.6714">starts_with(const path&lt;Sep&gt; &amp; right) const : bool</text><ellipse cx="786.5" cy="2113.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="795.5" y="2116.4761">ends_with(const path&lt;Sep&gt; &amp; right) const : bool</text><ellipse cx="786.5" cy="2126.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="795.5" y="2129.2808">common_path(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2138.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="795.5" y="2142.0854">relative_to(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2151.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="795.5" y="2154.8901">relative(const std::string &amp; name) const : std::string</text><ellipse cx="786.5" cy="2164.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="795.5" y="2167.6948">name() const : std::string</text><ellipse cx="786.5" cy="2177.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="795.5" y="2180.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="786.5" cy="2190.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="795.5" y="2193.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="786.5" cy="2202.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="795.5" y="2206.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="786.5" cy="2215.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="795.5" y="2218.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="786.5" cy="2228.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="795.5" y="2231.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="786.5" cy="2241.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="795.5" y="2244.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="6" y="717.4531"/><ellipse cx="40.35" cy="733.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43.3188,739.0938 Q42.7406,739.3906 42.1,739.5313 Q41.4594,739.6875 40.7563,739.6875 Q38.2563,739.6875 36.9281,738.0469 Q35.6156,736.3906 35.6156,733.2656 Q35.6156,730.1406 36.9281,728.4844 Q38.2563,726.8281 40.7563,726.8281 Q41.4594,726.8281 42.1,726.9844 Q42.7563,727.1406 43.3188,727.4375 L43.3188,730.1563 Q42.6938,729.5781 42.1,729.3125 Q41.5063,729.0313 40.8813,729.0313 Q39.5375,729.0313 38.85,730.1094 Q38.1625,731.1719 38.1625,733.2656 Q38.1625,735.3594 38.85,736.4375 Q39.5375,737.5 40.8813,737.5 Q41.5063,737.5 42.1,737.2344 Q42.6938,736.9531 43.3188,736.375 L43.3188,739.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="58.65" y="737.6074">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="198" y1="749.4531" y2="749.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="755.4531"/><ellipse cx="17" cy="760.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="26" y="763.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="198" y1="770.2578" y2="770.2578"/><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="8195" y="1219.9531"/><ellipse cx="8210" cy="1235.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8214.1094,1241.9531 L8206.3906,1241.9531 L8206.3906,1229.5625 L8214.1094,1229.5625 L8214.1094,1231.7188 L8208.8438,1231.7188 L8208.8438,1234.3906 L8213.6094,1234.3906 L8213.6094,1236.5469 L8208.8438,1236.5469 L8208.8438,1239.7969 L8214.1094,1239.7969 L8214.1094,1241.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="8224" y="1240.1074">template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8196" x2="8397" y1="1251.9531" y2="1251.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="8201" y="1266.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="8201" y="1278.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="8201" y="1291.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="8201" y="1304.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="8201" y="1317.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8196" x2="8397" y1="1323.9766" y2="1323.9766"/></a><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="181" x="1366" y="1568.9531"/><ellipse cx="1381" cy="1584.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1383.9688,1590.5938 Q1383.3906,1590.8906 1382.75,1591.0313 Q1382.1094,1591.1875 1381.4063,1591.1875 Q1378.9063,1591.1875 1377.5781,1589.5469 Q1376.2656,1587.8906 1376.2656,1584.7656 Q1376.2656,1581.6406 1377.5781,1579.9844 Q1378.9063,1578.3281 1381.4063,1578.3281 Q1382.1094,1578.3281 1382.75,1578.4844 Q1383.4063,1578.6406 1383.9688,1578.9375 L1383.9688,1581.6563 Q1383.3438,1581.0781 1382.75,1580.8125 Q1382.1563,1580.5313 1381.5313,1580.5313 Q1380.1875,1580.5313 1379.5,1581.6094 Q1378.8125,1582.6719 1378.8125,1584.7656 Q1378.8125,1586.8594 1379.5,1587.9375 Q1380.1875,1589 1381.5313,1589 Q1382.1563,1589 1382.75,1588.7344 Q1383.3438,1588.4531 1383.9688,1587.875 L1383.9688,1590.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="1395" y="1589.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="118" x="1432" y="1565.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="116" x="1433" y="1578.0918">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1367" x2="1546" y1="1600.9531" y2="1600.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1367" x2="1546" y1="1608.9531" y2="1608.9531"/><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="624.2109" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="1340" x="7626.5" y="435.9531"/><ellipse cx="8228.25" cy="451.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8231.2188,457.5938 Q8230.6406,457.8906 8230,458.0313 Q8229.3594,458.1875 8228.6563,458.1875 Q8226.1563,458.1875 8224.8281,456.5469 Q8223.5156,454.8906 8223.5156,451.7656 Q8223.5156,448.6406 8224.8281,446.9844 Q8226.1563,445.3281 8228.6563,445.3281 Q8229.3594,445.3281 8230,445.4844 Q8230.6563,445.6406 8231.2188,445.9375 L8231.2188,448.6563 Q8230.5938,448.0781 8230,447.8125 Q8229.4063,447.5313 8228.7813,447.5313 Q8227.4375,447.5313 8226.75,448.6094 Q8226.0625,449.6719 8226.0625,451.7656 Q8226.0625,453.8594 8226.75,454.9375 Q8227.4375,456 8228.7813,456 Q8229.4063,456 8230,455.7344 Q8230.5938,455.4531 8231.2188,454.875 L8231.2188,457.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="8248.75" y="456.1074">template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7627.5" x2="8965.5" y1="467.9531" y2="467.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="473.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="475.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="7646.5" y="482.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="486.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="488.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7646.5" y="494.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="499.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="501.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="7646.5" y="507.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="512.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="514.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="7646.5" y="520.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="525.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="527.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="7646.5" y="533.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="537.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="539.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="7646.5" y="546.187">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="550.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="552.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7646.5" y="558.9917">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="563.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="565.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="7646.5" y="571.7964">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="576.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="578.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="7646.5" y="584.6011">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7632.5" y="589.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="591.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7646.5" y="597.4058">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7627.5" x2="8965.5" y1="604" y2="604"/><ellipse cx="7637.5" cy="615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="866" x="7646.5" y="618.2104">make_template_type(const std::string &amp; name, const std::optional&lt;std::string&gt; &amp; default_value = = {}, bool is_variadic = false) : template_parameter</text><ellipse cx="7637.5" cy="627.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="922" x="7646.5" y="631.0151">make_template_template_type(const std::string &amp; name, const std::optional&lt;std::string&gt; &amp; default_value = = {}, bool is_variadic = false) : template_parameter</text><ellipse cx="7637.5" cy="640.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1126" x="7646.5" y="643.8198">make_non_type_template(const std::string &amp; type, const std::optional&lt;std::string&gt; &amp; name, const std::optional&lt;std::string&gt; &amp; default_value = = {}, bool is_variadic = false) : template_parameter</text><ellipse cx="7637.5" cy="653.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="692" x="7646.5" y="656.6245">make_argument(const std::string &amp; type, const std::optional&lt;std::string&gt; &amp; default_value = = {}) : template_parameter</text><ellipse cx="7637.5" cy="666.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="760" x="7646.5" y="669.4292">make_unexposed_argument(const std::string &amp; type, const std::optional&lt;std::string&gt; &amp; default_value = = {}) : template_parameter</text><ellipse cx="7637.5" cy="679.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="7646.5" y="682.2339">set_type(const std::string &amp; type) : void</text><ellipse cx="7637.5" cy="691.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="7646.5" y="695.0386">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="7637.5" cy="704.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7646.5" y="707.8433">set_id(const int64_t id) : void</text><ellipse cx="7637.5" cy="717.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="7646.5" y="720.6479">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="7637.5" cy="730.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="7646.5" y="733.4526">set_name(const std::string &amp; name) : void</text><ellipse cx="7637.5" cy="743.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="7646.5" y="746.2573">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="7637.5" cy="755.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="7646.5" y="759.062">set_default_value(const std::string &amp; value) : void</text><ellipse cx="7637.5" cy="768.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="7646.5" y="771.8667">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="7637.5" cy="781.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="7646.5" y="784.6714">is_variadic(bool is_variadic) : void</text><ellipse cx="7637.5" cy="794.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="7646.5" y="797.4761">is_variadic() const : bool</text><ellipse cx="7637.5" cy="807.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="7646.5" y="810.2808">calculate_specialization_match(const template_parameter &amp; base_template_parameter) const : int</text><ellipse cx="7637.5" cy="819.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="7646.5" y="823.0854">is_template_parameter() const : bool</text><ellipse cx="7637.5" cy="832.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="7646.5" y="835.8901">is_template_parameter(bool is_template_parameter) : void</text><ellipse cx="7637.5" cy="845.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="7646.5" y="848.6948">is_template_template_parameter() const : bool</text><ellipse cx="7637.5" cy="858.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="7646.5" y="861.4995">is_template_template_parameter(bool is_template_template_parameter) : void</text><ellipse cx="7637.5" cy="871.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="470" x="7646.5" y="874.3042">to_string(const namespace_ &amp; using_namespace, bool relative) const : std::string</text><ellipse cx="7637.5" cy="883.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="7646.5" y="887.1089">add_template_param(template_parameter &amp;&amp; ct) : void</text><ellipse cx="7637.5" cy="896.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="7646.5" y="899.9136">add_template_param(const template_parameter &amp; ct) : void</text><ellipse cx="7637.5" cy="909.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="7646.5" y="912.7183">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="7637.5" cy="922.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7646.5" y="925.5229">clear_params() : void</text><ellipse cx="7637.5" cy="935.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1314" x="7646.5" y="938.3276">find_nested_relationships(std::vector&lt;std::pair&lt;int64_t,common::model::relationship_t&gt;&gt; &amp; nested_relationships, common::model::relationship_t hint, const std::function&lt;bool (const std::string &amp;)&gt; &amp; should_include) const : bool</text><ellipse cx="7637.5" cy="947.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="7646.5" y="951.1323">set_concept_constraint(std::string constraint) : void</text><ellipse cx="7637.5" cy="960.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="7646.5" y="963.937">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="7637.5" cy="973.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="7646.5" y="976.7417">kind() const : template_parameter_kind_t</text><ellipse cx="7637.5" cy="986.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="7646.5" y="989.5464">set_kind(template_parameter_kind_t kind) : void</text><ellipse cx="7637.5" cy="999.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="7646.5" y="1002.3511">is_unexposed() const : bool</text><ellipse cx="7637.5" cy="1011.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="7646.5" y="1015.1558">set_unexposed(bool unexposed) : void</text><ellipse cx="7637.5" cy="1024.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="7646.5" y="1027.9604">set_function_template(bool ft) : void</text><ellipse cx="7637.5" cy="1037.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="7646.5" y="1040.7651">is_function_template() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7634.5" y="1047.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="7646.5" y="1053.5698">template_parameter() = default : void</text><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="1323" y="99.4531"/><ellipse cx="1549.25" cy="115.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1552.2188,121.0938 Q1551.6406,121.3906 1551,121.5313 Q1550.3594,121.6875 1549.6563,121.6875 Q1547.1563,121.6875 1545.8281,120.0469 Q1544.5156,118.3906 1544.5156,115.2656 Q1544.5156,112.1406 1545.8281,110.4844 Q1547.1563,108.8281 1549.6563,108.8281 Q1550.3594,108.8281 1551,108.9844 Q1551.6563,109.1406 1552.2188,109.4375 L1552.2188,112.1563 Q1551.5938,111.5781 1551,111.3125 Q1550.4063,111.0313 1549.7813,111.0313 Q1548.4375,111.0313 1547.75,112.1094 Q1547.0625,113.1719 1547.0625,115.2656 Q1547.0625,117.3594 1547.75,118.4375 Q1548.4375,119.5 1549.7813,119.5 Q1550.4063,119.5 1551,119.2344 Q1551.5938,118.9531 1552.2188,118.375 L1552.2188,121.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="1569.75" y="119.6074">decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1324" x2="1905" y1="131.4531" y2="131.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1329" y="137.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1331" y="139.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1343" y="145.6636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1329" y="150.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1331" y="152.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1343" y="158.4683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1324" x2="1905" y1="165.0625" y2="165.0625"/><ellipse cx="1334" cy="176.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1343" y="179.2729">skip() const : bool</text><ellipse cx="1334" cy="188.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1343" y="192.0776">skip_relationship() const : bool</text><ellipse cx="1334" cy="201.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1343" y="204.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1334" cy="214.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1343" y="217.687">style_spec() const : std::string</text><ellipse cx="1334" cy="227.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1343" y="230.4917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1334" cy="240.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="1343" y="243.2964">add_decorators(const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp; decorators) : void</text><ellipse cx="1334" cy="252.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1343" y="256.1011">append(const decorated_element &amp; de) : void</text><ellipse cx="1334" cy="265.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1343" y="268.9058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1334" cy="278.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1343" y="281.7104">set_comment(const comment_t &amp; c) : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="944" y="704.9531"/><ellipse cx="1016.75" cy="720.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1019.7188,726.5938 Q1019.1406,726.8906 1018.5,727.0313 Q1017.8594,727.1875 1017.1563,727.1875 Q1014.6563,727.1875 1013.3281,725.5469 Q1012.0156,723.8906 1012.0156,720.7656 Q1012.0156,717.6406 1013.3281,715.9844 Q1014.6563,714.3281 1017.1563,714.3281 Q1017.8594,714.3281 1018.5,714.4844 Q1019.1563,714.6406 1019.7188,714.9375 L1019.7188,717.6563 Q1019.0938,717.0781 1018.5,716.8125 Q1017.9063,716.5313 1017.2813,716.5313 Q1015.9375,716.5313 1015.25,717.6094 Q1014.5625,718.6719 1014.5625,720.7656 Q1014.5625,722.8594 1015.25,723.9375 Q1015.9375,725 1017.2813,725 Q1017.9063,725 1018.5,724.7344 Q1019.0938,724.4531 1019.7188,723.875 L1019.7188,726.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="1037.25" y="725.1074">stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="945" x2="1202" y1="736.9531" y2="736.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="950" y="742.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="952" y="744.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="964" y="751.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="945" x2="1202" y1="757.7578" y2="757.7578"/><ellipse cx="955" cy="768.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="964" y="771.9683">set_style(const std::string &amp; style) : void</text><ellipse cx="955" cy="781.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="964" y="784.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="1164" x="1466.5" y="1136.9531"/><ellipse cx="2007.25" cy="1152.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2010.2188,1158.5938 Q2009.6406,1158.8906 2009,1159.0313 Q2008.3594,1159.1875 2007.6563,1159.1875 Q2005.1563,1159.1875 2003.8281,1157.5469 Q2002.5156,1155.8906 2002.5156,1152.7656 Q2002.5156,1149.6406 2003.8281,1147.9844 Q2005.1563,1146.3281 2007.6563,1146.3281 Q2008.3594,1146.3281 2009,1146.4844 Q2009.6563,1146.6406 2010.2188,1146.9375 L2010.2188,1149.6563 Q2009.5938,1149.0781 2009,1148.8125 Q2008.4063,1148.5313 2007.7813,1148.5313 Q2006.4375,1148.5313 2005.75,1149.6094 Q2005.0625,1150.6719 2005.0625,1152.7656 Q2005.0625,1154.8594 2005.75,1155.9375 Q2006.4375,1157 2007.7813,1157 Q2008.4063,1157 2009,1156.7344 Q2009.5938,1156.4531 2010.2188,1155.875 L2010.2188,1158.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="2027.75" y="1157.1074">relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1467.5" x2="2629.5" y1="1168.9531" y2="1168.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1174.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1176.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1486.5" y="1183.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1187.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1189.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1486.5" y="1195.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1200.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1202.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1486.5" y="1208.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1213.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1215.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1486.5" y="1221.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1467.5" x2="2629.5" y1="1228.1719" y2="1228.1719"/><ellipse cx="1477.5" cy="1239.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="616" x="1486.5" y="1242.3823">relationship(relationship_t type, int64_t destination, access_t access = access_t::kPublic, std::string label =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="2106.5" y="1242.3823">, std::string multiplicity_source =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2358.5" y="1242.3823">, std::string multiplicity_destination = "") : void</text><ellipse cx="1477.5" cy="1251.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1486.5" y="1255.187">~relationship() = default : void</text><ellipse cx="1477.5" cy="1264.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1486.5" y="1267.9917">set_type(relationship_t type) : void</text><ellipse cx="1477.5" cy="1277.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1486.5" y="1280.7964">type() const : relationship_t</text><ellipse cx="1477.5" cy="1290.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1486.5" y="1293.6011">set_destination(int64_t destination) : void</text><ellipse cx="1477.5" cy="1303.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1486.5" y="1306.4058">destination() const : clanguml::common::id_t</text><ellipse cx="1477.5" cy="1316" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1486.5" y="1319.2104">set_multiplicity_source(const std::string &amp; multiplicity_source) : void</text><ellipse cx="1477.5" cy="1328.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1486.5" y="1332.0151">multiplicity_source() const : std::string</text><ellipse cx="1477.5" cy="1341.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="1486.5" y="1344.8198">set_multiplicity_destination(const std::string &amp; multiplicity_destination) : void</text><ellipse cx="1477.5" cy="1354.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1486.5" y="1357.6245">multiplicity_destination() const : std::string</text><ellipse cx="1477.5" cy="1367.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1486.5" y="1370.4292">set_label(const std::string &amp; label) : void</text><ellipse cx="1477.5" cy="1380.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1486.5" y="1383.2339">label() const : std::string</text><ellipse cx="1477.5" cy="1392.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1486.5" y="1396.0386">set_access(access_t scope) : void</text><ellipse cx="1477.5" cy="1405.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1486.5" y="1408.8433">access() const : access_t</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1941.5" y="80.4531"/><ellipse cx="2042.75" cy="96.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2045.7188,102.0938 Q2045.1406,102.3906 2044.5,102.5313 Q2043.8594,102.6875 2043.1563,102.6875 Q2040.6563,102.6875 2039.3281,101.0469 Q2038.0156,99.3906 2038.0156,96.2656 Q2038.0156,93.1406 2039.3281,91.4844 Q2040.6563,89.8281 2043.1563,89.8281 Q2043.8594,89.8281 2044.5,89.9844 Q2045.1563,90.1406 2045.7188,90.4375 L2045.7188,93.1563 Q2045.0938,92.5781 2044.5,92.3125 Q2043.9063,92.0313 2043.2813,92.0313 Q2041.9375,92.0313 2041.25,93.1094 Q2040.5625,94.1719 2040.5625,96.2656 Q2040.5625,98.3594 2041.25,99.4375 Q2041.9375,100.5 2043.2813,100.5 Q2043.9063,100.5 2044.5,100.2344 Q2045.0938,99.9531 2045.7188,99.375 L2045.7188,102.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="2063.25" y="100.6074">source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1942.5" x2="2250.5" y1="112.4531" y2="112.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="118.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="120.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1961.5" y="126.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="131.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="133.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1961.5" y="139.4683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="144.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="146.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1961.5" y="152.2729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="156.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="158.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1961.5" y="165.0776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1942.5" x2="2250.5" y1="171.6719" y2="171.6719"/><ellipse cx="1952.5" cy="182.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1961.5" y="185.8823">source_location() = default : void</text><ellipse cx="1952.5" cy="195.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="1961.5" y="198.687">source_location(std::string f, unsigned int l) : void</text><ellipse cx="1952.5" cy="208.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1961.5" y="211.4917">file() const : const std::string &amp;</text><ellipse cx="1952.5" cy="221.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1961.5" y="224.2964">set_file(const std::string &amp; file) : void</text><ellipse cx="1952.5" cy="233.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="1961.5" y="237.1011">file_relative() const : const std::string &amp;</text><ellipse cx="1952.5" cy="246.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1961.5" y="249.9058">set_file_relative(const std::string &amp; file) : void</text><ellipse cx="1952.5" cy="259.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1961.5" y="262.7104">line() const : unsigned int</text><ellipse cx="1952.5" cy="272.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1961.5" y="275.5151">set_line(const unsigned int line) : void</text><ellipse cx="1952.5" cy="285.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1961.5" y="288.3198">location_id() const : unsigned int</text><ellipse cx="1952.5" cy="297.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1961.5" y="301.1245">set_location_id(unsigned int h) : void</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="1667.5" y="582.9531"/><ellipse cx="1784.25" cy="598.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1787.2188,604.5938 Q1786.6406,604.8906 1786,605.0313 Q1785.3594,605.1875 1784.6563,605.1875 Q1782.1563,605.1875 1780.8281,603.5469 Q1779.5156,601.8906 1779.5156,598.7656 Q1779.5156,595.6406 1780.8281,593.9844 Q1782.1563,592.3281 1784.6563,592.3281 Q1785.3594,592.3281 1786,592.4844 Q1786.6563,592.6406 1787.2188,592.9375 L1787.2188,595.6563 Q1786.5938,595.0781 1786,594.8125 Q1785.4063,594.5313 1784.7813,594.5313 Q1783.4375,594.5313 1782.75,595.6094 Q1782.0625,596.6719 1782.0625,598.7656 Q1782.0625,600.8594 1782.75,601.9375 Q1783.4375,603 1784.7813,603 Q1785.4063,603 1786,602.7344 Q1786.5938,602.4531 1787.2188,601.875 L1787.2188,604.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="1804.75" y="603.1074">diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1668.5" x2="2016.5" y1="614.9531" y2="614.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="620.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="622.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1687.5" y="629.1636">id_ : diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="633.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="635.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1687.5" y="641.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="646.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="648.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1687.5" y="654.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="659.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="661.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1687.5" y="667.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1668.5" x2="2016.5" y1="674.1719" y2="674.1719"/><ellipse cx="1678.5" cy="685.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1687.5" y="688.3823">diagram_element() : void</text><ellipse cx="1678.5" cy="697.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1687.5" y="701.187">~diagram_element() = default : void</text><ellipse cx="1678.5" cy="710.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1687.5" y="713.9917">id() const : diagram_element::id_t</text><ellipse cx="1678.5" cy="723.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1687.5" y="726.7964">set_id(diagram_element::id_t id) : void</text><ellipse cx="1678.5" cy="736.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1687.5" y="739.6011">alias() const : std::string</text><ellipse cx="1678.5" cy="749.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1687.5" y="752.4058">set_name(const std::string &amp; name) : void</text><ellipse cx="1678.5" cy="762" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1687.5" y="765.2104">name() const : std::string</text><ellipse cx="1678.5" cy="774.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1687.5" y="778.0151">type_name() const : std::string</text><ellipse cx="1678.5" cy="787.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1687.5" y="790.8198">full_name(bool ) const : std::string</text><ellipse cx="1678.5" cy="800.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1687.5" y="803.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1678.5" cy="813.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1687.5" y="816.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1678.5" cy="826.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1687.5" y="829.2339">add_relationship(relationship &amp;&amp; cr) : void</text><ellipse cx="1678.5" cy="838.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1687.5" y="842.0386">append(const decorated_element &amp; e) : void</text><ellipse cx="1678.5" cy="851.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1687.5" y="854.8433">context() const : inja::json</text><ellipse cx="1678.5" cy="864.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1687.5" y="867.6479">is_nested() const : bool</text><ellipse cx="1678.5" cy="877.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1687.5" y="880.4526">nested(bool nested) : void</text><ellipse cx="1678.5" cy="890.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1687.5" y="893.2573">complete() const : bool</text><ellipse cx="1678.5" cy="902.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1687.5" y="906.062">complete(bool completed) : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="234.5" y="589.4531"/><ellipse cx="393.75" cy="605.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M396.7188,611.0938 Q396.1406,611.3906 395.5,611.5313 Q394.8594,611.6875 394.1563,611.6875 Q391.6563,611.6875 390.3281,610.0469 Q389.0156,608.3906 389.0156,605.2656 Q389.0156,602.1406 390.3281,600.4844 Q391.6563,598.8281 394.1563,598.8281 Q394.8594,598.8281 395.5,598.9844 Q396.1563,599.1406 396.7188,599.4375 L396.7188,602.1563 Q396.0938,601.5781 395.5,601.3125 Q394.9063,601.0313 394.2813,601.0313 Q392.9375,601.0313 392.25,602.1094 Q391.5625,603.1719 391.5625,605.2656 Q391.5625,607.3594 392.25,608.4375 Q392.9375,609.5 394.2813,609.5 Q394.9063,609.5 395.5,609.2344 Q396.0938,608.9531 396.7188,608.375 L396.7188,611.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="414.25" y="609.6074">nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="642.5" y="586.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="643.5" y="598.5918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="235.5" x2="679.5" y1="621.4531" y2="621.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="240.5" y="627.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242.5" y="629.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="254.5" y="635.6636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="235.5" x2="679.5" y1="642.2578" y2="642.2578"/><ellipse cx="245.5" cy="653.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="254.5" y="656.4683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="245.5" cy="666.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="254.5" y="669.2729">nested_trait&lt;T, Path&gt;(const nested_trait&lt;T,Path&gt; &amp; ) : void</text><ellipse cx="245.5" cy="678.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="254.5" y="682.0776">nested_trait&lt;T, Path&gt;(nested_trait&lt;T,Path&gt; &amp;&amp; ) = default : void</text><ellipse cx="245.5" cy="691.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="254.5" y="694.8823">operator=(const nested_trait&lt;T,Path&gt; &amp; ) : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="245.5" cy="704.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="254.5" y="707.687">operator=(nested_trait&lt;T,Path&gt; &amp;&amp; ) = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="245.5" cy="717.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="254.5" y="720.4917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="245.5" cy="730.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="254.5" y="733.2964">has_element(const std::string &amp; name) const : bool</text><ellipse cx="245.5" cy="742.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="254.5" y="746.1011">is_empty() const : bool</text><ellipse cx="245.5" cy="755.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="254.5" y="758.9058">begin() : auto</text><ellipse cx="245.5" cy="768.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="254.5" y="771.7104">end() : auto</text><ellipse cx="245.5" cy="781.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="254.5" y="784.5151">cbegin() const : auto</text><ellipse cx="245.5" cy="794.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="254.5" y="797.3198">cend() const : auto</text><ellipse cx="245.5" cy="806.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="254.5" y="810.1245">begin() const : auto</text><ellipse cx="245.5" cy="819.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="254.5" y="822.9292">end() const : auto</text><ellipse cx="245.5" cy="832.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="254.5" y="835.7339">print_tree(const int level) : void</text><ellipse cx="245.5" cy="845.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="254.5" y="848.5386">add_element&lt;V=T&gt;(std::unique_ptr&lt;V&gt; p) : _Bool</text><ellipse cx="245.5" cy="858.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="254.5" y="861.3433">add_element&lt;V=T&gt;(const Path &amp; path, std::unique_ptr&lt;V&gt; p) : _Bool</text><ellipse cx="245.5" cy="870.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="254.5" y="874.1479">get_element&lt;V=T&gt;(const Path &amp; path) : auto</text><ellipse cx="245.5" cy="883.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="254.5" y="886.9526">get_element_parent&lt;V=T&gt;(const T &amp; element) : auto</text><ellipse cx="245.5" cy="896.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="254.5" y="899.7573">get_element&lt;V=T&gt;(const std::string &amp; name) : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="741.5" y="1549.9531"/><ellipse cx="756.5" cy="1565.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M760.6094,1571.9531 L752.8906,1571.9531 L752.8906,1559.5625 L760.6094,1559.5625 L760.6094,1561.7188 L755.3438,1561.7188 L755.3438,1564.3906 L760.1094,1564.3906 L760.1094,1566.5469 L755.3438,1566.5469 L755.3438,1569.7969 L760.6094,1569.7969 L760.6094,1571.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="770.5" y="1570.1074">source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="742.5" x2="850.5" y1="1581.9531" y2="1581.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="747.5" y="1596.1636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="747.5" y="1608.9683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="747.5" y="1621.7729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="742.5" x2="850.5" y1="1628.3672" y2="1628.3672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="716" y="717.4531"/><ellipse cx="770.75" cy="733.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M773.7188,739.0938 Q773.1406,739.3906 772.5,739.5313 Q771.8594,739.6875 771.1563,739.6875 Q768.6563,739.6875 767.3281,738.0469 Q766.0156,736.3906 766.0156,733.2656 Q766.0156,730.1406 767.3281,728.4844 Q768.6563,726.8281 771.1563,726.8281 Q771.8594,726.8281 772.5,726.9844 Q773.1563,727.1406 773.7188,727.4375 L773.7188,730.1563 Q773.0938,729.5781 772.5,729.3125 Q771.9063,729.0313 771.2813,729.0313 Q769.9375,729.0313 769.25,730.1094 Q768.5625,731.1719 768.5625,733.2656 Q768.5625,735.3594 769.25,736.4375 Q769.9375,737.5 771.2813,737.5 Q771.9063,737.5 772.5,737.2344 Q773.0938,736.9531 773.7188,736.375 L773.7188,739.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="791.25" y="737.6074">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="717" x2="908" y1="749.4531" y2="749.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="722" y="755.4531"/><ellipse cx="727" cy="760.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="736" y="763.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="717" x2="908" y1="770.2578" y2="770.2578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="568.5" y="1568.9531"/><ellipse cx="583.5" cy="1584.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M586.4688,1590.5938 Q585.8906,1590.8906 585.25,1591.0313 Q584.6094,1591.1875 583.9063,1591.1875 Q581.4063,1591.1875 580.0781,1589.5469 Q578.7656,1587.8906 578.7656,1584.7656 Q578.7656,1581.6406 580.0781,1579.9844 Q581.4063,1578.3281 583.9063,1578.3281 Q584.6094,1578.3281 585.25,1578.4844 Q585.9063,1578.6406 586.4688,1578.9375 L586.4688,1581.6563 Q585.8438,1581.0781 585.25,1580.8125 Q584.6563,1580.5313 584.0313,1580.5313 Q582.6875,1580.5313 582,1581.6094 Q581.3125,1582.6719 581.3125,1584.7656 Q581.3125,1586.8594 582,1587.9375 Q582.6875,1589 584.0313,1589 Q584.6563,1589 585.25,1588.7344 Q585.8438,1588.4531 586.4688,1587.875 L586.4688,1590.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="597.5" y="1589.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="634.5" y="1565.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="635.5" y="1578.0918">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="569.5" x2="705.5" y1="1600.9531" y2="1600.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="569.5" x2="705.5" y1="1608.9531" y2="1608.9531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="484" x="536.5" y="1136.9531"/><ellipse cx="740.75" cy="1152.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M743.7188,1158.5938 Q743.1406,1158.8906 742.5,1159.0313 Q741.8594,1159.1875 741.1563,1159.1875 Q738.6563,1159.1875 737.3281,1157.5469 Q736.0156,1155.8906 736.0156,1152.7656 Q736.0156,1149.6406 737.3281,1147.9844 Q738.6563,1146.3281 741.1563,1146.3281 Q741.8594,1146.3281 742.5,1146.4844 Q743.1563,1146.6406 743.7188,1146.9375 L743.7188,1149.6563 Q743.0938,1149.0781 742.5,1148.8125 Q741.9063,1148.5313 741.2813,1148.5313 Q739.9375,1148.5313 739.25,1149.6094 Q738.5625,1150.6719 738.5625,1152.7656 Q738.5625,1154.8594 739.25,1155.9375 Q739.9375,1157 741.2813,1157 Q741.9063,1157 742.5,1156.7344 Q743.0938,1156.4531 743.7188,1155.875 L743.7188,1158.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="761.25" y="1157.1074">source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="537.5" x2="1019.5" y1="1168.9531" y2="1168.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="542.5" y="1174.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="544.5" y="1176.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="556.5" y="1183.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="537.5" x2="1019.5" y1="1189.7578" y2="1189.7578"/><ellipse cx="547.5" cy="1200.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="556.5" y="1203.9683">source_file() = default : void</text><ellipse cx="547.5" cy="1213.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="556.5" y="1216.7729">source_file(const std::filesystem::path &amp; p) : void</text><ellipse cx="547.5" cy="1226.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="556.5" y="1229.5776">set_path(const filesystem_path &amp; p) : void</text><ellipse cx="547.5" cy="1239.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="556.5" y="1242.3823">set_absolute() : void</text><ellipse cx="547.5" cy="1251.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="556.5" y="1255.187">is_absolute() const : bool</text><ellipse cx="547.5" cy="1264.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="556.5" y="1267.9917">set_type(source_file_t type) : void</text><ellipse cx="547.5" cy="1277.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="556.5" y="1280.7964">type() const : source_file_t</text><ellipse cx="547.5" cy="1290.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="556.5" y="1293.6011">source_file(const source_file &amp; ) : void</text><ellipse cx="547.5" cy="1303.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="556.5" y="1306.4058">source_file(source_file &amp;&amp; ) = default : void</text><ellipse cx="547.5" cy="1316" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="556.5" y="1319.2104">operator=(const source_file &amp; ) : source_file &amp;</text><ellipse cx="547.5" cy="1328.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="556.5" y="1332.0151">operator=(source_file &amp;&amp; ) : source_file &amp;</text><ellipse cx="547.5" cy="1341.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="556.5" y="1344.8198">operator==(const source_file &amp; right) const : bool</text><ellipse cx="547.5" cy="1354.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="556.5" y="1357.6245">path() const : const filesystem_path &amp;</text><ellipse cx="547.5" cy="1367.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="556.5" y="1370.4292">full_name(bool ) const : std::string</text><ellipse cx="547.5" cy="1380.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="556.5" y="1383.2339">full_path() const : path&lt;fs_path_sep&gt;</text><ellipse cx="547.5" cy="1392.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="556.5" y="1396.0386">fs_path(const std::filesystem::path &amp; base = = {}) const : std::filesystem::path</text><ellipse cx="547.5" cy="1405.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="556.5" y="1408.8433">context() const : inja::json</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="305" x="1127" y="1181.4531"/><ellipse cx="1249.75" cy="1197.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1252.7188,1203.0938 Q1252.1406,1203.3906 1251.5,1203.5313 Q1250.8594,1203.6875 1250.1563,1203.6875 Q1247.6563,1203.6875 1246.3281,1202.0469 Q1245.0156,1200.3906 1245.0156,1197.2656 Q1245.0156,1194.1406 1246.3281,1192.4844 Q1247.6563,1190.8281 1250.1563,1190.8281 Q1250.8594,1190.8281 1251.5,1190.9844 Q1252.1563,1191.1406 1252.7188,1191.4375 L1252.7188,1194.1563 Q1252.0938,1193.5781 1251.5,1193.3125 Q1250.9063,1193.0313 1250.2813,1193.0313 Q1248.9375,1193.0313 1248.25,1194.1094 Q1247.5625,1195.1719 1247.5625,1197.2656 Q1247.5625,1199.3594 1248.25,1200.4375 Q1248.9375,1201.5 1250.2813,1201.5 Q1250.9063,1201.5 1251.5,1201.2344 Q1252.0938,1200.9531 1252.7188,1200.375 L1252.7188,1203.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="1270.25" y="1201.6074">element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1128" x2="1431" y1="1213.4531" y2="1213.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1128" x2="1431" y1="1221.4531" y2="1221.4531"/><ellipse cx="1138" cy="1232.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1147" y="1235.6636">element(namespace_ using_namespace) : void</text><ellipse cx="1138" cy="1245.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1147" y="1248.4683">~element() = default : void</text><ellipse cx="1138" cy="1258.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1147" y="1261.2729">name_and_ns() const : std::string</text><ellipse cx="1138" cy="1270.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1147" y="1274.0776">set_namespace(const namespace_ &amp; ns) : void</text><ellipse cx="1138" cy="1283.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1147" y="1286.8823">get_namespace() const : namespace_</text><ellipse cx="1138" cy="1296.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="1147" y="1299.687">get_relative_namespace() const : namespace_</text><ellipse cx="1138" cy="1309.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1147" y="1312.4917">path() const : const namespace_ &amp;</text><ellipse cx="1138" cy="1322.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1147" y="1325.2964">full_name(bool ) const : std::string</text><ellipse cx="1138" cy="1334.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1147" y="1338.1011">full_name_no_ns() const : std::string</text><ellipse cx="1138" cy="1347.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1147" y="1350.9058">using_namespace() const : const namespace_ &amp;</text><ellipse cx="1138" cy="1360.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1147" y="1363.7104">context() const : inja::json</text></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="842" x="7875.5" y="105.9531"/><ellipse cx="8248.25" cy="121.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8251.2188,127.5938 Q8250.6406,127.8906 8250,128.0313 Q8249.3594,128.1875 8248.6563,128.1875 Q8246.1563,128.1875 8244.8281,126.5469 Q8243.5156,124.8906 8243.5156,121.7656 Q8243.5156,118.6406 8244.8281,116.9844 Q8246.1563,115.3281 8248.6563,115.3281 Q8249.3594,115.3281 8250,115.4844 Q8250.6563,115.6406 8251.2188,115.9375 L8251.2188,118.6563 Q8250.5938,118.0781 8250,117.8125 Q8249.4063,117.5313 8248.7813,117.5313 Q8247.4375,117.5313 8246.75,118.6094 Q8246.0625,119.6719 8246.0625,121.7656 Q8246.0625,123.8594 8246.75,124.9375 Q8247.4375,126 8248.7813,126 Q8249.4063,126 8250,125.7344 Q8250.5938,125.4531 8251.2188,124.875 L8251.2188,127.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="8268.75" y="126.1074">template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7876.5" x2="8716.5" y1="137.9531" y2="137.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7881.5" y="143.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7883.5" y="145.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="7895.5" y="152.1636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7881.5" y="156.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7883.5" y="158.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="7895.5" y="164.9683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7876.5" x2="8716.5" y1="171.5625" y2="171.5625"/><ellipse cx="7886.5" cy="182.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="816" x="7895.5" y="185.7729">render_template_params(std::ostream &amp; ostr, const common::model::namespace_ &amp; using_namespace, bool relative) const : std::ostream &amp;</text><ellipse cx="7886.5" cy="195.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="7895.5" y="198.5776">set_base_template(const std::string &amp; full_name) : void</text><ellipse cx="7886.5" cy="208.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7895.5" y="211.3823">base_template() const : std::string</text><ellipse cx="7886.5" cy="220.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="7895.5" y="224.187">add_template(template_parameter &amp;&amp; tmplt) : void</text><ellipse cx="7886.5" cy="233.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="7895.5" y="236.9917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="7886.5" cy="246.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="7895.5" y="249.7964">calculate_template_specialization_match(const template_trait &amp; other) const : int</text><ellipse cx="7886.5" cy="259.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7895.5" y="262.6011">is_implicit() const : bool</text><ellipse cx="7886.5" cy="272.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="7895.5" y="275.4058">set_implicit(bool implicit) : void</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="791" x="4340" y="557.4531"/><ellipse cx="4705.75" cy="573.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4705.8594,568.7969 L4704.7031,573.875 L4707.0313,573.875 L4705.8594,568.7969 Z M4704.375,566.5625 L4707.3594,566.5625 L4710.7188,578.9531 L4708.2656,578.9531 L4707.5,575.8906 L4704.2188,575.8906 L4703.4688,578.9531 L4701.0313,578.9531 L4704.375,566.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="4726.25" y="577.6074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4341" x2="5130" y1="589.4531" y2="589.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4346" y="595.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4348" y="597.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4360" y="603.6636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4346" y="608.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4348" y="610.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4360" y="616.4683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4341" x2="5130" y1="623.0625" y2="623.0625"/><ellipse cx="4351" cy="634.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4360" y="637.2729">diagram() : void</text><ellipse cx="4351" cy="646.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4360" y="650.0776">~diagram() : void</text><ellipse cx="4351" cy="659.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4360" y="662.8823">type() const = 0 : diagram_t</text><ellipse cx="4351" cy="672.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="559" x="4360" y="675.687">get(const std::string &amp; full_name) const = 0 : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="4351" cy="685.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="537" x="4360" y="688.4917">get(diagram_element::id_t id) const = 0 : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="4351" cy="698.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="765" x="4360" y="701.2964">get_with_namespace(const std::string &amp; name, const namespace_ &amp; ns) const : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="4351" cy="710.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4360" y="714.1011">diagram(const diagram &amp; ) : void</text><ellipse cx="4351" cy="723.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4360" y="726.9058">diagram(diagram &amp;&amp; ) : void</text><ellipse cx="4351" cy="736.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4360" y="739.7104">operator=(const diagram &amp; ) : diagram &amp;</text><ellipse cx="4351" cy="749.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4360" y="752.5151">operator=(diagram &amp;&amp; ) : diagram &amp;</text><ellipse cx="4351" cy="762.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="4360" y="765.3198">set_name(const std::string &amp; name) : void</text><ellipse cx="4351" cy="774.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4360" y="778.1245">name() const : std::string</text><ellipse cx="4351" cy="787.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4360" y="790.9292">set_filter(std::unique_ptr&lt;diagram_filter&gt; filter) : void</text><ellipse cx="4351" cy="800.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="4360" y="803.7339">set_complete(bool complete) : void</text><ellipse cx="4351" cy="813.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4360" y="816.5386">complete() const : bool</text><ellipse cx="4351" cy="826.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="4360" y="829.3433">should_include(const element &amp; e) const : bool</text><ellipse cx="4351" cy="838.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="4360" y="842.1479">should_include(const std::string &amp; e) const : bool</text><ellipse cx="4351" cy="851.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4360" y="854.9526">should_include(const source_file &amp; path) const : bool</text><ellipse cx="4351" cy="864.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4360" y="867.7573">should_include(relationship r) const : bool</text><ellipse cx="4351" cy="877.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4360" y="880.562">should_include(relationship_t r) const : bool</text><ellipse cx="4351" cy="890.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4360" y="893.3667">should_include(access_t s) const : bool</text><ellipse cx="4351" cy="902.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="4360" y="906.1714">has_element(const diagram_element::id_t ) const : bool</text><ellipse cx="4351" cy="915.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="4360" y="918.9761">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text><ellipse cx="4351" cy="928.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4360" y="931.7808">context() const = 0 : inja::json</text><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="444" x="886.5" y="1498.4531"/><ellipse cx="1077.25" cy="1514.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1080.2188,1520.0938 Q1079.6406,1520.3906 1079,1520.5313 Q1078.3594,1520.6875 1077.6563,1520.6875 Q1075.1563,1520.6875 1073.8281,1519.0469 Q1072.5156,1517.3906 1072.5156,1514.2656 Q1072.5156,1511.1406 1073.8281,1509.4844 Q1075.1563,1507.8281 1077.6563,1507.8281 Q1078.3594,1507.8281 1079,1507.9844 Q1079.6563,1508.1406 1080.2188,1508.4375 L1080.2188,1511.1563 Q1079.5938,1510.5781 1079,1510.3125 Q1078.4063,1510.0313 1077.7813,1510.0313 Q1076.4375,1510.0313 1075.75,1511.1094 Q1075.0625,1512.1719 1075.0625,1514.2656 Q1075.0625,1516.3594 1075.75,1517.4375 Q1076.4375,1518.5 1077.7813,1518.5 Q1078.4063,1518.5 1079,1518.2344 Q1079.5938,1517.9531 1080.2188,1517.375 L1080.2188,1520.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="1097.75" y="1518.6074">package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="887.5" x2="1329.5" y1="1530.4531" y2="1530.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="892.5" y="1536.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="894.5" y="1538.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="906.5" y="1544.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="887.5" x2="1329.5" y1="1551.2578" y2="1551.2578"/><ellipse cx="897.5" cy="1562.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="906.5" y="1565.4683">package(const common::model::namespace_ &amp; using_namespace) : void</text><ellipse cx="897.5" cy="1575.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="906.5" y="1578.2729">package(const package &amp; ) : void</text><ellipse cx="897.5" cy="1587.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="906.5" y="1591.0776">package(package &amp;&amp; ) = default : void</text><ellipse cx="897.5" cy="1600.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="906.5" y="1603.8823">operator=(const package &amp; ) : package &amp;</text><ellipse cx="897.5" cy="1613.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="906.5" y="1616.687">operator=(package &amp;&amp; ) : package &amp;</text><ellipse cx="897.5" cy="1626.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="906.5" y="1629.4917">type_name() const : std::string</text><ellipse cx="897.5" cy="1639.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="906.5" y="1642.2964">full_name(bool relative) const : std::string</text><ellipse cx="897.5" cy="1651.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="906.5" y="1655.1011">is_deprecated() const : bool</text><ellipse cx="897.5" cy="1664.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="906.5" y="1667.9058">set_deprecated(bool deprecated) : void</text><ellipse cx="897.5" cy="1677.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="906.5" y="1680.7104">add_package(std::unique_ptr&lt;common::model::package&gt; &amp;&amp; p) : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="71" x="5247" y="1238.9531"/><ellipse cx="5262" cy="1254.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5266.1094,1260.9531 L5258.3906,1260.9531 L5258.3906,1248.5625 L5266.1094,1248.5625 L5266.1094,1250.7188 L5260.8438,1250.7188 L5260.8438,1253.3906 L5265.6094,1253.3906 L5265.6094,1255.5469 L5260.8438,1255.5469 L5260.8438,1258.7969 L5266.1094,1258.7969 L5266.1094,1260.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="5276" y="1259.1074">filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5248" x2="5317" y1="1270.9531" y2="1270.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="5253" y="1285.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="5253" y="1297.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5248" x2="5317" y1="1304.5625" y2="1304.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="538" x="5166.5" y="653.4531"/><ellipse cx="5395.75" cy="669.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5398.7188,675.0938 Q5398.1406,675.3906 5397.5,675.5313 Q5396.8594,675.6875 5396.1563,675.6875 Q5393.6563,675.6875 5392.3281,674.0469 Q5391.0156,672.3906 5391.0156,669.2656 Q5391.0156,666.1406 5392.3281,664.4844 Q5393.6563,662.8281 5396.1563,662.8281 Q5396.8594,662.8281 5397.5,662.9844 Q5398.1563,663.1406 5398.7188,663.4375 L5398.7188,666.1563 Q5398.0938,665.5781 5397.5,665.3125 Q5396.9063,665.0313 5396.2813,665.0313 Q5394.9375,665.0313 5394.25,666.1094 Q5393.5625,667.1719 5393.5625,669.2656 Q5393.5625,671.3594 5394.25,672.4375 Q5394.9375,673.5 5396.2813,673.5 Q5396.9063,673.5 5397.5,673.2344 Q5398.0938,672.9531 5398.7188,672.375 L5398.7188,675.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="5416.25" y="673.6074">filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5167.5" x2="5703.5" y1="685.4531" y2="685.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5167.5" x2="5703.5" y1="693.4531" y2="693.4531"/><ellipse cx="5177.5" cy="704.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5186.5" y="707.6636">filter_visitor(filter_t type) : void</text><ellipse cx="5177.5" cy="717.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5186.5" y="720.4683">~filter_visitor() = default : void</text><ellipse cx="5177.5" cy="730.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="5186.5" y="733.2729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text><ellipse cx="5177.5" cy="742.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="5186.5" y="746.0776">match(const diagram &amp; d, const common::model::relationship_t &amp; r) const : tvl::value_t</text><ellipse cx="5177.5" cy="755.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="5186.5" y="758.8823">match(const diagram &amp; d, const common::model::access_t &amp; a) const : tvl::value_t</text><ellipse cx="5177.5" cy="768.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="5186.5" y="771.687">match(const diagram &amp; d, const common::model::namespace_ &amp; ns) const : tvl::value_t</text><ellipse cx="5177.5" cy="781.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="5186.5" y="784.4917">match(const diagram &amp; d, const common::model::source_file &amp; f) const : tvl::value_t</text><ellipse cx="5177.5" cy="794.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="5186.5" y="797.2964">match(const diagram &amp; d, const common::model::source_location &amp; f) const : tvl::value_t</text><ellipse cx="5177.5" cy="806.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5186.5" y="810.1011">is_inclusive() const : bool</text><ellipse cx="5177.5" cy="819.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5186.5" y="822.9058">is_exclusive() const : bool</text><ellipse cx="5177.5" cy="832.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5186.5" y="835.7104">type() const : filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="514" x="7645.5" y="1226.4531"/><ellipse cx="7864.25" cy="1242.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7867.2188,1248.0938 Q7866.6406,1248.3906 7866,1248.5313 Q7865.3594,1248.6875 7864.6563,1248.6875 Q7862.1563,1248.6875 7860.8281,1247.0469 Q7859.5156,1245.3906 7859.5156,1242.2656 Q7859.5156,1239.1406 7860.8281,1237.4844 Q7862.1563,1235.8281 7864.6563,1235.8281 Q7865.3594,1235.8281 7866,1235.9844 Q7866.6563,1236.1406 7867.2188,1236.4375 L7867.2188,1239.1563 Q7866.5938,1238.5781 7866,1238.3125 Q7865.4063,1238.0313 7864.7813,1238.0313 Q7863.4375,1238.0313 7862.75,1239.1094 Q7862.0625,1240.1719 7862.0625,1242.2656 Q7862.0625,1244.3594 7862.75,1245.4375 Q7863.4375,1246.5 7864.7813,1246.5 Q7865.4063,1246.5 7866,1246.2344 Q7866.5938,1245.9531 7867.2188,1245.375 L7867.2188,1248.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="7884.75" y="1246.6074">anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7646.5" x2="8158.5" y1="1258.4531" y2="1258.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7646.5" x2="8158.5" y1="1266.4531" y2="1266.4531"/><ellipse cx="7656.5" cy="1277.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="7665.5" y="1280.6636">anyof_filter(filter_t type, std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt; filters) : void</text><ellipse cx="7656.5" cy="1290.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="7665.5" y="1293.4683">~anyof_filter() = default : void</text><ellipse cx="7656.5" cy="1303.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="7665.5" y="1306.2729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text><ellipse cx="7656.5" cy="1315.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="7665.5" y="1319.0776">match(const diagram &amp; d, const common::model::source_file &amp; e) const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="3103" y="1226.4531"/><ellipse cx="3278.75" cy="1242.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3281.7188,1248.0938 Q3281.1406,1248.3906 3280.5,1248.5313 Q3279.8594,1248.6875 3279.1563,1248.6875 Q3276.6563,1248.6875 3275.3281,1247.0469 Q3274.0156,1245.3906 3274.0156,1242.2656 Q3274.0156,1239.1406 3275.3281,1237.4844 Q3276.6563,1235.8281 3279.1563,1235.8281 Q3279.8594,1235.8281 3280.5,1235.9844 Q3281.1563,1236.1406 3281.7188,1236.4375 L3281.7188,1239.1563 Q3281.0938,1238.5781 3280.5,1238.3125 Q3279.9063,1238.0313 3279.2813,1238.0313 Q3277.9375,1238.0313 3277.25,1239.1094 Q3276.5625,1240.1719 3276.5625,1242.2656 Q3276.5625,1244.3594 3277.25,1245.4375 Q3277.9375,1246.5 3279.2813,1246.5 Q3279.9063,1246.5 3280.5,1246.2344 Q3281.0938,1245.9531 3281.7188,1245.375 L3281.7188,1248.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="3299.25" y="1246.6074">namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3104" x2="3569" y1="1258.4531" y2="1258.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3104" x2="3569" y1="1266.4531" y2="1266.4531"/><ellipse cx="3114" cy="1277.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="3123" y="1280.6636">namespace_filter(filter_t type, std::vector&lt;namespace_&gt; namespaces) : void</text><ellipse cx="3114" cy="1290.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3123" y="1293.4683">~namespace_filter() = default : void</text><ellipse cx="3114" cy="1303.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="3123" y="1306.2729">match(const diagram &amp; d, const namespace_ &amp; ns) const : tvl::value_t</text><ellipse cx="3114" cy="1315.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3123" y="1319.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="414" x="6330.5" y="1226.4531"/><ellipse cx="6490.75" cy="1242.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6493.7188,1248.0938 Q6493.1406,1248.3906 6492.5,1248.5313 Q6491.8594,1248.6875 6491.1563,1248.6875 Q6488.6563,1248.6875 6487.3281,1247.0469 Q6486.0156,1245.3906 6486.0156,1242.2656 Q6486.0156,1239.1406 6487.3281,1237.4844 Q6488.6563,1235.8281 6491.1563,1235.8281 Q6491.8594,1235.8281 6492.5,1235.9844 Q6493.1563,1236.1406 6493.7188,1236.4375 L6493.7188,1239.1563 Q6493.0938,1238.5781 6492.5,1238.3125 Q6491.9063,1238.0313 6491.2813,1238.0313 Q6489.9375,1238.0313 6489.25,1239.1094 Q6488.5625,1240.1719 6488.5625,1242.2656 Q6488.5625,1244.3594 6489.25,1245.4375 Q6489.9375,1246.5 6491.2813,1246.5 Q6491.9063,1246.5 6492.5,1246.2344 Q6493.0938,1245.9531 6493.7188,1245.375 L6493.7188,1248.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="6511.25" y="1246.6074">element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6331.5" x2="6743.5" y1="1258.4531" y2="1258.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6336.5" y="1264.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6338.5" y="1266.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6350.5" y="1272.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6331.5" x2="6743.5" y1="1279.2578" y2="1279.2578"/><ellipse cx="6341.5" cy="1290.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="6350.5" y="1293.4683">element_filter(filter_t type, std::vector&lt;std::string&gt; elements) : void</text><ellipse cx="6341.5" cy="1303.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6350.5" y="1306.2729">~element_filter() = default : void</text><ellipse cx="6341.5" cy="1315.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6350.5" y="1319.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="398" x="6779.5" y="1226.4531"/><ellipse cx="6929.75" cy="1242.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6932.7188,1248.0938 Q6932.1406,1248.3906 6931.5,1248.5313 Q6930.8594,1248.6875 6930.1563,1248.6875 Q6927.6563,1248.6875 6926.3281,1247.0469 Q6925.0156,1245.3906 6925.0156,1242.2656 Q6925.0156,1239.1406 6926.3281,1237.4844 Q6927.6563,1235.8281 6930.1563,1235.8281 Q6930.8594,1235.8281 6931.5,1235.9844 Q6932.1563,1236.1406 6932.7188,1236.4375 L6932.7188,1239.1563 Q6932.0938,1238.5781 6931.5,1238.3125 Q6930.9063,1238.0313 6930.2813,1238.0313 Q6928.9375,1238.0313 6928.25,1239.1094 Q6927.5625,1240.1719 6927.5625,1242.2656 Q6927.5625,1244.3594 6928.25,1245.4375 Q6928.9375,1246.5 6930.2813,1246.5 Q6930.9063,1246.5 6931.5,1246.2344 Q6932.0938,1245.9531 6932.7188,1245.375 L6932.7188,1248.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="6950.25" y="1246.6074">subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6780.5" x2="7176.5" y1="1258.4531" y2="1258.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6785.5" y="1264.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6787.5" y="1266.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6799.5" y="1272.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6780.5" x2="7176.5" y1="1279.2578" y2="1279.2578"/><ellipse cx="6790.5" cy="1290.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="6799.5" y="1293.4683">subclass_filter(filter_t type, std::vector&lt;std::string&gt; roots) : void</text><ellipse cx="6790.5" cy="1303.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="6799.5" y="1306.2729">~subclass_filter() = default : void</text><ellipse cx="6790.5" cy="1315.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6799.5" y="1319.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="398" x="7212.5" y="1226.4531"/><ellipse cx="7365.75" cy="1242.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7368.7188,1248.0938 Q7368.1406,1248.3906 7367.5,1248.5313 Q7366.8594,1248.6875 7366.1563,1248.6875 Q7363.6563,1248.6875 7362.3281,1247.0469 Q7361.0156,1245.3906 7361.0156,1242.2656 Q7361.0156,1239.1406 7362.3281,1237.4844 Q7363.6563,1235.8281 7366.1563,1235.8281 Q7366.8594,1235.8281 7367.5,1235.9844 Q7368.1563,1236.1406 7368.7188,1236.4375 L7368.7188,1239.1563 Q7368.0938,1238.5781 7367.5,1238.3125 Q7366.9063,1238.0313 7366.2813,1238.0313 Q7364.9375,1238.0313 7364.25,1239.1094 Q7363.5625,1240.1719 7363.5625,1242.2656 Q7363.5625,1244.3594 7364.25,1245.4375 Q7364.9375,1246.5 7366.2813,1246.5 Q7366.9063,1246.5 7367.5,1246.2344 Q7368.0938,1245.9531 7368.7188,1245.375 L7368.7188,1248.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="7386.25" y="1246.6074">parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7213.5" x2="7609.5" y1="1258.4531" y2="1258.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7218.5" y="1264.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7220.5" y="1266.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="7232.5" y="1272.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7213.5" x2="7609.5" y1="1279.2578" y2="1279.2578"/><ellipse cx="7223.5" cy="1290.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="7232.5" y="1293.4683">parents_filter(filter_t type, std::vector&lt;std::string&gt; roots) : void</text><ellipse cx="7223.5" cy="1303.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="7232.5" y="1306.2729">~parents_filter() = default : void</text><ellipse cx="7223.5" cy="1315.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="7232.5" y="1319.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="942" x="5353.5" y="1187.9531"/><ellipse cx="5560.25" cy="1203.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5563.2188,1209.5938 Q5562.6406,1209.8906 5562,1210.0313 Q5561.3594,1210.1875 5560.6563,1210.1875 Q5558.1563,1210.1875 5556.8281,1208.5469 Q5555.5156,1206.8906 5555.5156,1203.7656 Q5555.5156,1200.6406 5556.8281,1198.9844 Q5558.1563,1197.3281 5560.6563,1197.3281 Q5561.3594,1197.3281 5562,1197.4844 Q5562.6563,1197.6406 5563.2188,1197.9375 L5563.2188,1200.6563 Q5562.5938,1200.0781 5562,1199.8125 Q5561.4063,1199.5313 5560.7813,1199.5313 Q5559.4375,1199.5313 5558.75,1200.6094 Q5558.0625,1201.6719 5558.0625,1203.7656 Q5558.0625,1205.8594 5558.75,1206.9375 Q5559.4375,1208 5560.7813,1208 Q5561.4063,1208 5562,1207.7344 Q5562.5938,1207.4531 5563.2188,1206.875 L5563.2188,1209.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="5580.75" y="1208.1074">edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="5907.5" y="1184.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5908.5" y="1197.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5354.5" x2="6294.5" y1="1219.9531" y2="1219.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5359.5" y="1225.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1227.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5373.5" y="1234.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5359.5" y="1238.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1240.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5373.5" y="1246.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5359.5" y="1251.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1253.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="5373.5" y="1259.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5359.5" y="1264.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1266.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5373.5" y="1272.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5354.5" x2="6294.5" y1="1279.1719" y2="1279.1719"/><ellipse cx="5364.5" cy="1290.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="916" x="5373.5" y="1293.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;(filter_t type, relationship_t relationship, std::vector&lt;std::string&gt; roots, bool forward = false) : void</text><ellipse cx="5364.5" cy="1302.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="5373.5" y="1306.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="5364.5" cy="1315.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="5373.5" y="1318.9917">match(const diagram &amp; d, const MatchOverrideT &amp; e) const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1325.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="5373.5" y="1331.7964">add_parents(const DiagramT &amp; cd) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1338.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="5373.5" y="1344.6011">init(const DiagramT &amp; cd) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="1351.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="623" x="5373.5" y="1357.4058">add_adjacent&lt;C,D&gt;(const C &amp; from, const D &amp; to, const std::vector&lt;relationship_t&gt; &amp; relationships) : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="3605.5" y="1232.9531"/><ellipse cx="3784.25" cy="1248.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3787.2188,1254.5938 Q3786.6406,1254.8906 3786,1255.0313 Q3785.3594,1255.1875 3784.6563,1255.1875 Q3782.1563,1255.1875 3780.8281,1253.5469 Q3779.5156,1251.8906 3779.5156,1248.7656 Q3779.5156,1245.6406 3780.8281,1243.9844 Q3782.1563,1242.3281 3784.6563,1242.3281 Q3785.3594,1242.3281 3786,1242.4844 Q3786.6563,1242.6406 3787.2188,1242.9375 L3787.2188,1245.6563 Q3786.5938,1245.0781 3786,1244.8125 Q3785.4063,1244.5313 3784.7813,1244.5313 Q3783.4375,1244.5313 3782.75,1245.6094 Q3782.0625,1246.6719 3782.0625,1248.7656 Q3782.0625,1250.8594 3782.75,1251.9375 Q3783.4375,1253 3784.7813,1253 Q3785.4063,1253 3786,1252.7344 Q3786.5938,1252.4531 3787.2188,1251.875 L3787.2188,1254.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="3804.75" y="1253.1074">relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3606.5" x2="4078.5" y1="1264.9531" y2="1264.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3606.5" x2="4078.5" y1="1272.9531" y2="1272.9531"/><ellipse cx="3616.5" cy="1283.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="3625.5" y="1287.1636">relationship_filter(filter_t type, std::vector&lt;relationship_t&gt; relationships) : void</text><ellipse cx="3616.5" cy="1296.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="3625.5" y="1299.9683">~relationship_filter() = default : void</text><ellipse cx="3616.5" cy="1309.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="3625.5" y="1312.7729">match(const diagram &amp; d, const relationship_t &amp; r) const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="402" x="2665.5" y="1232.9531"/><ellipse cx="2823.25" cy="1248.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2826.2188,1254.5938 Q2825.6406,1254.8906 2825,1255.0313 Q2824.3594,1255.1875 2823.6563,1255.1875 Q2821.1563,1255.1875 2819.8281,1253.5469 Q2818.5156,1251.8906 2818.5156,1248.7656 Q2818.5156,1245.6406 2819.8281,1243.9844 Q2821.1563,1242.3281 2823.6563,1242.3281 Q2824.3594,1242.3281 2825,1242.4844 Q2825.6563,1242.6406 2826.2188,1242.9375 L2826.2188,1245.6563 Q2825.5938,1245.0781 2825,1244.8125 Q2824.4063,1244.5313 2823.7813,1244.5313 Q2822.4375,1244.5313 2821.75,1245.6094 Q2821.0625,1246.6719 2821.0625,1248.7656 Q2821.0625,1250.8594 2821.75,1251.9375 Q2822.4375,1253 2823.7813,1253 Q2824.4063,1253 2825,1252.7344 Q2825.5938,1252.4531 2826.2188,1251.875 L2826.2188,1254.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="2843.75" y="1253.1074">access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2666.5" x2="3066.5" y1="1264.9531" y2="1264.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2666.5" x2="3066.5" y1="1272.9531" y2="1272.9531"/><ellipse cx="2676.5" cy="1283.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2685.5" y="1287.1636">access_filter(filter_t type, std::vector&lt;access_t&gt; access) : void</text><ellipse cx="2676.5" cy="1296.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2685.5" y="1299.9683">~access_filter() = default : void</text><ellipse cx="2676.5" cy="1309.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2685.5" y="1312.7729">match(const diagram &amp; d, const access_t &amp; a) const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="397" x="4115" y="1226.4531"/><ellipse cx="4268.75" cy="1242.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4271.7188,1248.0938 Q4271.1406,1248.3906 4270.5,1248.5313 Q4269.8594,1248.6875 4269.1563,1248.6875 Q4266.6563,1248.6875 4265.3281,1247.0469 Q4264.0156,1245.3906 4264.0156,1242.2656 Q4264.0156,1239.1406 4265.3281,1237.4844 Q4266.6563,1235.8281 4269.1563,1235.8281 Q4269.8594,1235.8281 4270.5,1235.9844 Q4271.1563,1236.1406 4271.7188,1236.4375 L4271.7188,1239.1563 Q4271.0938,1238.5781 4270.5,1238.3125 Q4269.9063,1238.0313 4269.2813,1238.0313 Q4267.9375,1238.0313 4267.25,1239.1094 Q4266.5625,1240.1719 4266.5625,1242.2656 Q4266.5625,1244.3594 4267.25,1245.4375 Q4267.9375,1246.5 4269.2813,1246.5 Q4269.9063,1246.5 4270.5,1246.2344 Q4271.0938,1245.9531 4271.7188,1245.375 L4271.7188,1248.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="4289.25" y="1246.6074">context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4116" x2="4511" y1="1258.4531" y2="1258.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4121" y="1264.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4123" y="1266.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4135" y="1272.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4116" x2="4511" y1="1279.2578" y2="1279.2578"/><ellipse cx="4126" cy="1290.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="4135" y="1293.4683">context_filter(filter_t type, std::vector&lt;std::string&gt; context) : void</text><ellipse cx="4126" cy="1303.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4135" y="1306.2729">~context_filter() = default : void</text><ellipse cx="4126" cy="1315.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="4135" y="1319.0776">match(const diagram &amp; d, const element &amp; r) const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="664" x="4547.5" y="1213.4531"/><ellipse cx="4840.25" cy="1229.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4843.2188,1235.0938 Q4842.6406,1235.3906 4842,1235.5313 Q4841.3594,1235.6875 4840.6563,1235.6875 Q4838.1563,1235.6875 4836.8281,1234.0469 Q4835.5156,1232.3906 4835.5156,1229.2656 Q4835.5156,1226.1406 4836.8281,1224.4844 Q4838.1563,1222.8281 4840.6563,1222.8281 Q4841.3594,1222.8281 4842,1222.9844 Q4842.6563,1223.1406 4843.2188,1223.4375 L4843.2188,1226.1563 Q4842.5938,1225.5781 4842,1225.3125 Q4841.4063,1225.0313 4840.7813,1225.0313 Q4839.4375,1225.0313 4838.75,1226.1094 Q4838.0625,1227.1719 4838.0625,1229.2656 Q4838.0625,1231.3594 4838.75,1232.4375 Q4839.4375,1233.5 4840.7813,1233.5 Q4841.4063,1233.5 4842,1233.2344 Q4842.5938,1232.9531 4843.2188,1232.375 L4843.2188,1235.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="4860.75" y="1233.6074">paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4548.5" x2="5210.5" y1="1245.4531" y2="1245.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4553.5" y="1251.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4555.5" y="1253.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4567.5" y="1259.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4553.5" y="1264.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4555.5" y="1266.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4567.5" y="1272.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4548.5" x2="5210.5" y1="1279.0625" y2="1279.0625"/><ellipse cx="4558.5" cy="1290.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="4567.5" y="1293.2729">paths_filter(filter_t type, const std::filesystem::path &amp; root, const std::vector&lt;std::filesystem::path&gt; &amp; p) : void</text><ellipse cx="4558.5" cy="1302.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="4567.5" y="1306.0776">~paths_filter() = default : void</text><ellipse cx="4558.5" cy="1315.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="4567.5" y="1318.8823">match(const diagram &amp; d, const common::model::source_file &amp; r) const : tvl::value_t</text><ellipse cx="4558.5" cy="1328.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="4567.5" y="1331.687">match(const diagram &amp; d, const common::model::source_location &amp; sl) const : tvl::value_t</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L346" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L346" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fj0ac5z7eksem)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="511" x="4757" y="131.4531"/><ellipse cx="4965.75" cy="147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4968.7188,153.0938 Q4968.1406,153.3906 4967.5,153.5313 Q4966.8594,153.6875 4966.1563,153.6875 Q4963.6563,153.6875 4962.3281,152.0469 Q4961.0156,150.3906 4961.0156,147.2656 Q4961.0156,144.1406 4962.3281,142.4844 Q4963.6563,140.8281 4966.1563,140.8281 Q4966.8594,140.8281 4967.5,140.9844 Q4968.1563,141.1406 4968.7188,141.4375 L4968.7188,144.1563 Q4968.0938,143.5781 4967.5,143.3125 Q4966.9063,143.0313 4966.2813,143.0313 Q4964.9375,143.0313 4964.25,144.1094 Q4963.5625,145.1719 4963.5625,147.2656 Q4963.5625,149.3594 4964.25,150.4375 Q4964.9375,151.5 4966.2813,151.5 Q4966.9063,151.5 4967.5,151.2344 Q4968.0938,150.9531 4968.7188,150.375 L4968.7188,153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="4986.25" y="151.6074">diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4758" x2="5267" y1="163.4531" y2="163.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4758" x2="5267" y1="171.4531" y2="171.4531"/><ellipse cx="4768" cy="182.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="4777" y="185.6636">diagram_filter(const common::model::diagram &amp; d, const config::diagram &amp; c) : void</text><ellipse cx="4768" cy="195.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="4777" y="198.4683">add_inclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text><ellipse cx="4768" cy="208.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="4777" y="211.2729">add_exclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text><ellipse cx="4768" cy="220.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="4777" y="224.0776">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4765" y="230.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4777" y="236.8823">init_filters(const config::diagram &amp; c) : void</text><ellipse cx="4768" cy="246.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4777" y="249.687">should_include&lt;T&gt;(const T &amp; e) : _Bool</text></a><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M1433.28,1617.0531 C1406.86,1643.3431 1360.65,1689.3331 1309.16,1740.5731 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1313.99,1745.6431,1294.88,1754.7831,1304.12,1735.7231,1313.99,1745.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M8296.5,1073.5131 C8296.5,1129.9531 8296.5,1182.3931 8296.5,1219.6131 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8296.5,1060.2531,8292.5,1066.2531,8296.5,1072.2531,8300.5,1066.2531,8296.5,1060.2531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8299.5" y="1096.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="8309.5" y="1103.02">kind_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M8978.55,717.8731 C8993.31,726.3731 9001.5,736.4031 9001.5,747.9531 C9001.5,762.3131 8988.85,774.3131 8966.66,783.9531 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8966.66,711.9531,8970.2469,718.2088,8977.401,717.3039,8973.8141,711.0482,8966.66,711.9531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9009.5" y="745.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="9019.5" y="752.52">template_params_</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M2643.86,1414.4131 C2645.07,1414.5931 2646.29,1414.7731 2647.5,1414.9531 C2841.39,1443.7131 2893.15,1419.5031 3087.5,1444.9531 C3349.34,1479.2331 3657.16,1548.2731 3783.69,1577.9131 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2630.8,1412.4131,2636.1289,1417.2714,2642.663,1414.221,2637.3341,1409.3627,2630.8,1412.4131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3194.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3204.5" y="1458.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M2198.36,1424.4731 C2244.47,1469.8631 2291.7,1516.3531 2324.66,1548.8031 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2188.86,1415.1131,2190.3346,1422.1718,2197.4175,1423.5256,2195.9429,1416.4669,2188.86,1415.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2231.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2241.5" y="1458.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1586.05,308.0531 C1548.64,483.7531 1503.5,826.3031 1649.5,1059.9531 C1667.74,1089.1431 1691.4,1114.6431 1718.1,1136.8531 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1579.22,306.5431,1590.33,288.5031,1592.89,309.5331,1579.22,306.5431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1140.25,803.8231 C1235.16,879.8131 1416.69,1017.7631 1588.5,1106.9531 C1608.4,1117.2831 1629.09,1127.2731 1650.18,1136.8731 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1135.58,809.0531,1124.39,791.0631,1144.36,798.1531,1135.58,809.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1911.65,925.5131 C1938.6,994.3431 1969.04,1072.0531 1994.35,1136.6831 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1906.83,913.2231,1905.2955,920.2691,1911.2093,924.3955,1912.7438,917.3496,1906.83,913.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1985.5" y="1096.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1995.5" y="1103.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1660.82,307.0931 C1693.58,386.4031 1738.02,493.9931 1774.75,582.9231 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1654.34,309.7531,1653.18,288.5931,1667.28,304.4031,1654.34,309.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M2036.09,326.2331 C2000.72,403.1131 1955.72,500.8931 1918.02,582.8331 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2029.92,322.9031,2044.64,307.6531,2042.64,328.7531,2029.92,322.9031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M656.34,1617.1531 C673.37,1637.7931 699.37,1668.5531 723.5,1693.9531 C738.11,1709.3331 753.28,1724.9431 768.74,1740.5531 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="773.86,1735.7831,783,1754.8931,763.93,1745.6531,773.86,1735.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M711.25,1427.1931 C686.64,1482.1831 661.49,1538.3531 647.85,1568.8231 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="716.66,1415.1131,710.5576,1418.9551,711.757,1426.0658,717.8594,1422.2238,716.66,1415.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="703.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="713.5" y="1458.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M787.15,1428.3031 C789.7,1472.9631 792.29,1518.2731 794.09,1549.8631 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="786.4,1415.1131,782.7492,1421.3318,787.0853,1427.0935,790.7361,1420.8749,786.4,1415.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="792.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="802.5" y="1458.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1649.29,846.2331 C1526.63,907.8231 1364.45,988.9531 1220.5,1059.9531 C1155.83,1091.8431 1085.7,1126.1131 1020.75,1157.7031 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1646.46,839.8231,1667.48,837.1031,1652.75,852.3331,1646.46,839.8231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1048.34,809.5131 C1021.06,873.2731 974.89,975.8731 926.5,1059.9531 C911.86,1085.3831 895.16,1111.7031 878.38,1136.8431 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1041.92,806.7131,1056.18,791.0331,1054.81,812.1831,1041.92,806.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1376.24,1380.9731 C1391.66,1401.1631 1406.21,1422.9231 1417.5,1444.9531 C1438.39,1485.7231 1448.88,1538.7531 1453.47,1568.6931 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1368.12,1370.5631,1368.6608,1377.7539,1375.5064,1380.0204,1374.9657,1372.8296,1368.12,1370.5631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1427.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="1437.5" y="1458.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1253.8,1383.9531 C1252.8,1411.2831 1257.17,1439.3131 1272.5,1461.9531 C1292.63,1491.6831 1317.11,1472.8431 1347.5,1491.9531 C1381.85,1513.5531 1415.32,1546.5831 1435.91,1568.7031 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1254.7,1370.6231,1250.3068,1376.3415,1253.8956,1382.5961,1258.2888,1376.8777,1254.7,1370.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1275.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="1285.5" y="1458.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M1833.27,932.8031 C1820.46,997.0831 1794.52,1063.8831 1743.5,1106.9531 C1693.15,1149.4631 1509.37,1111.7131 1448.5,1136.9531 C1422.61,1147.6931 1397.56,1163.7531 1375.04,1181.1631 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1826.4,931.4131,1836.83,912.9731,1840.18,933.8931,1826.4,931.4131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M8296.5,295.2531 C8296.5,335.8231 8296.5,385.0731 8296.5,435.9331 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8296.5,282.1131,8292.5,288.1131,8296.5,294.1131,8300.5,288.1131,8296.5,282.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8299.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="8309.5" y="402.02">templates_</text><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4786.25,544.8631 C4803.33,492.4331 4824.97,437.1731 4851.5,388.9531 C4878.09,340.6331 4917.5,292.8831 4950.68,256.8431 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4782.23,557.4231,4787.8663,552.9251,4785.882,545.9924,4780.2458,550.4904,4782.23,557.4231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4854.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4864.5" y="402.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4981.53,256.6631 C4945.75,327.9831 4885.09,448.8531 4832.96,552.7331 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4830.64,557.3531,4838.2506,551.1018,4832.8818,552.8838,4831.0998,547.515,4830.64,557.3531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4918.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4928.5" y="402.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M1218.95,1388.4831 C1199.44,1424.4331 1178.03,1463.8731 1159.29,1498.3831 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1212.96,1384.8431,1228.66,1370.6131,1225.27,1391.5231,1212.96,1384.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M1076.09,811.4331 C1082.18,958.0431 1097.41,1324.8331 1104.61,1498.2731 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1069.08,811.3231,1075.25,791.0431,1083.07,810.7431,1069.08,811.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M5404.53,855.4331 C5369.87,974.5631 5315.63,1161.0431 5292.98,1238.9131 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5408.23,842.6931,5402.7145,847.3385,5404.8811,854.2164,5410.3967,849.571,5408.23,842.6931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5335.5" y="1096.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="5345.5" y="1103.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M7809.72,1219.9031 C7757.73,1191.2631 7690.78,1157.9331 7627.5,1136.9531 C6956.19,914.3831 6124.53,811.7431 5704.81,771.3131 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7821.25,1226.3131,7817.9497,1219.9016,7810.762,1220.482,7814.0623,1226.8936,7821.25,1226.3131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7516.5" y="1096.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="7526.5" y="1103.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M5724.73,762.1531 C6143.96,788.5431 6940.04,866.1231 7577.5,1089.9531 C7672.14,1123.1831 7770.92,1183.6831 7834.38,1226.4431 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5724.27,769.1331,5704.74,760.9131,5725.14,755.1631,5724.27,769.1331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M3254.59,1332.5131 C3207.01,1361.9831 3144.72,1395.9431 3084.5,1414.9531 C2904.12,1471.9031 2849.76,1443.5231 2661.5,1461.9531 C2504.35,1477.3431 2464.6,1476.0731 2307.5,1491.9531 C2029.99,1520.0131 1702.48,1560.6131 1547.08,1580.3331 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3265.74,1325.5231,3258.5316,1325.3254,3255.5766,1331.9032,3262.785,1332.101,3265.74,1325.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2960.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="2970.5" y="1458.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M5367.49,859.4931 C5316.84,930.7931 5240.67,1017.8131 5148.5,1059.9531 C5054.07,1103.1231 4318.18,1084.4031 4214.5,1089.9531 C3935.45,1104.8831 3855.38,1057.3731 3587.5,1136.9531 C3521.84,1156.4631 3454.16,1194.9331 3405.66,1226.3031 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5362.01,855.1031,5379.18,842.6731,5373.51,863.0931,5362.01,855.1031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M5688.45,850.2931 C5865.95,923.9531 6107.29,1029.2431 6312.5,1136.9531 C6364.44,1164.2131 6420.69,1198.7131 6463.95,1226.3931 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5685.65,856.7131,5669.85,842.5931,5691,843.7731,5685.65,856.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M5724.62,808.7331 C5998.98,871.1731 6419.11,981.7731 6761.5,1136.9531 C6815.18,1161.2831 6871.19,1197.2131 6912.87,1226.3131 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5722.67,815.4731,5704.71,804.2331,5725.76,801.8231,5722.67,815.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M5724.54,781.2831 C6080.89,828.1531 6700.03,932.6731 7194.5,1136.9531 C7249.79,1159.7931 7306.66,1196.5331 7348.3,1226.3631 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5723.54,788.2031,5704.61,778.6831,5725.35,774.3231,5723.54,788.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M5532,1367.5731 C5467.72,1385.2131 5399.68,1402.1731 5335.5,1414.9531 C4783.52,1524.8531 4102.19,1575.1931 3901.01,1588.3331 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5544.8,1364.0331,5537.9522,1361.7732,5533.2323,1367.2251,5540.0802,1369.485,5544.8,1364.0331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5137.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="5147.5" y="1458.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M5516.81,858.8931 C5589.08,956.6231 5693.33,1097.5931 5760,1187.7331 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5511.09,862.9331,5504.82,842.6931,5522.34,854.6031,5511.09,862.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M3842.5,1332.1331 C3842.5,1376.1331 3842.5,1438.9131 3842.5,1491.7431 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3842.5,1319.1131,3838.5,1325.1131,3842.5,1331.1131,3846.5,1325.1131,3842.5,1319.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3845.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="3855.5" y="1458.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M5366.6,859.3831 C5315.78,930.1931 5239.77,1016.6731 5148.5,1059.9531 C5048.12,1107.5531 4760.3,1081.9031 4649.5,1089.9531 C4403.93,1107.7831 4333.41,1066.4331 4097.5,1136.9531 C4026.48,1158.1831 3952.8,1200.6431 3903.01,1232.8931 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5361.1,855.0231,5378.33,842.6831,5372.56,863.0731,5361.1,855.0231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2788.59,1326.2331 C2682.51,1393.3331 2496.24,1511.1531 2412.02,1564.4231 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2799.85,1319.1131,2792.641,1318.9372,2789.706,1325.524,2796.915,1325.6999,2799.85,1319.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2591.5" y="1451.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2601.5" y="1458.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M5367.9,859.4631 C5317.31,930.9831 5241.06,1018.2631 5148.5,1059.9531 C5075.54,1092.8131 3788.42,1086.1131 3708.5,1089.9531 C3431.14,1103.2931 3349.18,1049.9231 3085.5,1136.9531 C3022.55,1157.7331 2959.44,1200.3731 2917.25,1232.7931 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5362.43,855.0631,5379.56,842.5931,5373.94,863.0231,5362.43,855.0631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M5364.64,858.9431 C5313.43,928.6831 5237.74,1014.1031 5148.5,1059.9531 C4901.91,1186.6531 4790.29,1042.8931 4529.5,1136.9531 C4472.36,1157.5631 4414.74,1195.4231 4373.41,1226.2831 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5359.11,854.6431,5376.48,842.5031,5370.48,862.8231,5359.11,854.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M5342.32,857.8431 C5287.93,919.3331 5216.77,996.3631 5148.5,1059.9531 C5089.33,1115.0631 5017.6,1171.9531 4963.09,1213.3631 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5337.3,852.9531,5355.77,842.5631,5347.81,862.2031,5337.3,852.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5046.78,268.5731 C5067.56,310.3231 5095.9,362.7031 5126.5,405.9531 C5162.26,456.4931 5268,570.8431 5345.86,653.2031 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5041,256.8131,5040.0634,263.9631,5046.3031,267.5777,5047.2398,260.4277,5041,256.8131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5129.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5139.5" y="402.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5090.57,266.0631 C5127.34,301.3431 5170.67,345.6131 5205.5,388.9531 C5273.41,473.4631 5339.04,578.7231 5382.69,653.1731 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5080.88,256.8331,5082.4697,263.8668,5089.5737,265.1047,5087.9841,258.071,5080.88,256.8331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5216.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="5226.5" y="402.02">exclusive_</text><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[5b7e032bd111ee92656b8900da6e57da]
link C_0001623832985137466228 to C_0000202859212831973510--><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[878febbdf537b6c5c35122c32f488b9f]
@startuml
title clang-uml common diagram model
enum "diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>(const std::string & ns) : void
+path<Sep>(container_type::const_iterator begin, container_type::const_iterator end) : void
+path<Sep>(const path<Sep> & right) : void
+operator=(const path<Sep> & right) = default : path<Sep> &
+path<Sep>(path<Sep> && right) = default : void
+operator=(path<Sep> && right) = default : path<Sep> &
+path<Sep>(std::initializer_list<std::string> ns) : void
+path<Sep>(const std::vector<std::string> & ns) : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|(const path<Sep> & right) const : path<Sep>
+operator|=(const path<Sep> & right) : void
+operator|(const std::string & right) const : path<Sep>
+operator|=(const std::string & right) : void
+operator[](const int index) : std::string &
+operator[](const int index) const : const std::string &
+append(const std::string & ns) : void
+append(const path<Sep> & ns) : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with(const path<Sep> & right) const : bool
+ends_with(const path<Sep> & right) const : bool
+common_path(const path<Sep> & right) const : path<Sep>
+relative_to(const path<Sep> & right) const : path<Sep>
+relative(const std::string & name) const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : path::container_type [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224{path_}]]]
}
class "ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29{value}]]]
}
enum "template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
class "path<ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45{template_parameter}]] {
{static} +make_template_type(const std::string & name, const std::optional<std::string> & default_value = = {}, bool is_variadic = false) : template_parameter
{static} +make_template_template_type(const std::string & name, const std::optional<std::string> & default_value = = {}, bool is_variadic = false) : template_parameter
{static} +make_non_type_template(const std::string & type, const std::optional<std::string> & name, const std::optional<std::string> & default_value = = {}, bool is_variadic = false) : template_parameter
{static} +make_argument(const std::string & type, const std::optional<std::string> & default_value = = {}) : template_parameter
{static} +make_unexposed_argument(const std::string & type, const std::optional<std::string> & default_value = = {}) : template_parameter
+set_type(const std::string & type) : void
+type() const : std::optional<std::string>
+set_id(const int64_t id) : void
+id() const : const std::optional<int64_t> &
+set_name(const std::string & name) : void
+name() const : std::optional<std::string>
+set_default_value(const std::string & value) : void
+default_value() const : const std::optional<std::string> &
+is_variadic(bool is_variadic) : void
+is_variadic() const : bool
+calculate_specialization_match(const template_parameter & base_template_parameter) const : int
+is_template_parameter() const : bool
+is_template_parameter(bool is_template_parameter) : void
+is_template_template_parameter() const : bool
+is_template_template_parameter(bool is_template_template_parameter) : void
+to_string(const namespace_ & using_namespace, bool relative) const : std::string
+add_template_param(template_parameter && ct) : void
+add_template_param(const template_parameter & ct) : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+find_nested_relationships(std::vector<std::pair<int64_t,common::model::relationship_t>> & nested_relationships, common::model::relationship_t hint, const std::function<bool (const std::string &)> & should_include) const : bool
+set_concept_constraint(std::string constraint) : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : template_parameter_kind_t
+set_kind(template_parameter_kind_t kind) : void
+is_unexposed() const : bool
+set_unexposed(bool unexposed) : void
+set_function_template(bool ft) : void
+is_function_template() const : bool
-template_parameter() = default : void
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206{is_template_template_parameter_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211{is_function_template_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223{is_unexposed_}]]]
}
class "decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators(const std::vector<std::shared_ptr<decorators::decorator>> & decorators) : void
+append(const decorated_element & de) : void
+comment() const : std::optional<comment_t>
+set_comment(const comment_t & c) : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style(const std::string & style) : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30{style_}]]]
}
class "relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28{relationship}]] {
+relationship(relationship_t type, int64_t destination, access_t access = access_t::kPublic, std::string label = "", std::string multiplicity_source = "", std::string multiplicity_destination = "") : void
+~relationship() = default : void
+set_type(relationship_t type) : void
+type() const : relationship_t
+set_destination(int64_t destination) : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source(const std::string & multiplicity_source) : void
+multiplicity_source() const : std::string
+set_multiplicity_destination(const std::string & multiplicity_destination) : void
+multiplicity_destination() const : std::string
+set_label(const std::string & label) : void
+label() const : std::string
+set_access(access_t scope) : void
+access() const : access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64{label_}]]]
}
class "source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location(std::string f, unsigned int l) : void
+file() const : const std::string &
+set_file(const std::string & file) : void
+file_relative() const : const std::string &
+set_file_relative(const std::string & file) : void
+line() const : unsigned int
+set_line(const unsigned int line) : void
+location_id() const : unsigned int
+set_location_id(unsigned int h) : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55{hash_}]]]
}
class "diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : diagram_element::id_t
+set_id(diagram_element::id_t id) : void
+alias() const : std::string
+set_name(const std::string & name) : void
+name() const : std::string
+type_name() const : std::string
+full_name(bool ) const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship(relationship && cr) : void
+append(const decorated_element & e) : void
+context() const : inja::json
+is_nested() const : bool
+nested(bool nested) : void
+complete() const : bool
+complete(bool completed) : void
-id_ : diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>(const nested_trait<T,Path> & ) : void
+nested_trait<T, Path>(nested_trait<T,Path> && ) = default : void
+operator=(const nested_trait<T,Path> & ) : nested_trait<T,Path> &
+operator=(nested_trait<T,Path> && ) = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element(const std::string & name) const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree(const int level) : void
+add_element<V=T>(std::unique_ptr<V> p) : _Bool
+add_element<V=T>(const Path & path, std::unique_ptr<V> p) : _Bool
+get_element<V=T>(const Path & path) : auto
+get_element_parent<V=T>(const T & element) : auto
+get_element<V=T>(const std::string & name) : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45{value}]]]
}
class "path<fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file(const std::filesystem::path & p) : void
+set_path(const filesystem_path & p) : void
+set_absolute() : void
+is_absolute() const : bool
+set_type(source_file_t type) : void
+type() const : source_file_t
+source_file(const source_file & ) : void
+source_file(source_file && ) = default : void
+operator=(const source_file & ) : source_file &
+operator=(source_file && ) : source_file &
+operator==(const source_file & right) const : bool
+path() const : const filesystem_path &
+full_name(bool ) const : std::string
+full_path() const : path<fs_path_sep>
+fs_path(const std::filesystem::path & base = = {}) const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131{is_absolute_}]]]
}
class "element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35{element}]] {
+element(namespace_ using_namespace) : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace(const namespace_ & ns) : void
+get_namespace() const : namespace_
+get_relative_namespace() const : namespace_
+path() const : const namespace_ &
+full_name(bool ) const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const namespace_ &
+context() const : inja::json
}
class "template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params(std::ostream & ostr, const common::model::namespace_ & using_namespace, bool relative) const : std::ostream &
+set_base_template(const std::string & full_name) : void
+base_template() const : std::string
+add_template(template_parameter && tmplt) : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match(const template_trait & other) const : int
+is_implicit() const : bool
+set_implicit(bool implicit) : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
abstract "diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : diagram_t
{abstract} +get(const std::string & full_name) const = 0 : clanguml::common::optional_ref<diagram_element>
{abstract} +get(diagram_element::id_t id) const = 0 : clanguml::common::optional_ref<diagram_element>
+get_with_namespace(const std::string & name, const namespace_ & ns) const : clanguml::common::optional_ref<diagram_element>
+diagram(const diagram & ) : void
+diagram(diagram && ) : void
+operator=(const diagram & ) : diagram &
+operator=(diagram && ) : diagram &
+set_name(const std::string & name) : void
+name() const : std::string
+set_filter(std::unique_ptr<diagram_filter> filter) : void
+set_complete(bool complete) : void
+complete() const : bool
+should_include(const element & e) const : bool
+should_include(const std::string & e) const : bool
+should_include(const source_file & path) const : bool
+should_include(relationship r) const : bool
+should_include(relationship_t r) const : bool
+should_include(access_t s) const : bool
+has_element(const diagram_element::id_t ) const : bool
+should_include(const namespace_ & ns, const std::string & name) const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87{complete_}]]]
}
class "package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34{package}]] {
+package(const common::model::namespace_ & using_namespace) : void
+package(const package & ) : void
+package(package && ) = default : void
+operator=(const package & ) : package &
+operator=(package && ) : package &
+type_name() const : std::string
+full_name(bool relative) const : std::string
+is_deprecated() const : bool
+set_deprecated(bool deprecated) : void
+add_package(std::unique_ptr<common::model::package> && p) : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor(filter_t type) : void
+~filter_visitor() = default : void
+match(const diagram & d, const common::model::element & e) const : tvl::value_t
+match(const diagram & d, const common::model::relationship_t & r) const : tvl::value_t
+match(const diagram & d, const common::model::access_t & a) const : tvl::value_t
+match(const diagram & d, const common::model::namespace_ & ns) const : tvl::value_t
+match(const diagram & d, const common::model::source_file & f) const : tvl::value_t
+match(const diagram & d, const common::model::source_location & f) const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : filter_t
}
class "anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter(filter_t type, std::vector<std::unique_ptr<filter_visitor>> filters) : void
+~anyof_filter() = default : void
+match(const diagram & d, const common::model::element & e) const : tvl::value_t
+match(const diagram & d, const common::model::source_file & e) const : tvl::value_t
}
class "namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter(filter_t type, std::vector<namespace_> namespaces) : void
+~namespace_filter() = default : void
+match(const diagram & d, const namespace_ & ns) const : tvl::value_t
+match(const diagram & d, const element & e) const : tvl::value_t
}
class "element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter(filter_t type, std::vector<std::string> elements) : void
+~element_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130{subclass_filter}]] {
+subclass_filter(filter_t type, std::vector<std::string> roots) : void
+~subclass_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138{roots_}]]]
}
class "parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141{parents_filter}]] {
+parents_filter(filter_t type, std::vector<std::string> roots) : void
+~parents_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149{children_}]]]
}
class "edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>(filter_t type, relationship_t relationship, std::vector<std::string> roots, bool forward = false) : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match(const diagram & d, const MatchOverrideT & e) const : tvl::value_t
-add_parents(const DiagramT & cd) const : void
-init(const DiagramT & cd) const : void
-add_adjacent<C,D>(const C & from, const D & to, const std::vector<relationship_t> & relationships) : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291{forward_}]]]
}
class "relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294{relationship_filter}]] {
+relationship_filter(filter_t type, std::vector<relationship_t> relationships) : void
+~relationship_filter() = default : void
+match(const diagram & d, const relationship_t & r) const : tvl::value_t
}
class "access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307{access_filter}]] {
+access_filter(filter_t type, std::vector<access_t> access) : void
+~access_filter() = default : void
+match(const diagram & d, const access_t & a) const : tvl::value_t
}
class "context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318{context_filter}]] {
+context_filter(filter_t type, std::vector<std::string> context) : void
+~context_filter() = default : void
+match(const diagram & d, const element & r) const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326{context_}]]]
}
class "paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329{paths_filter}]] {
+paths_filter(filter_t type, const std::filesystem::path & root, const std::vector<std::filesystem::path> & p) : void
+~paths_filter() = default : void
+match(const diagram & d, const common::model::source_file & r) const : tvl::value_t
+match(const diagram & d, const common::model::source_location & sl) const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343{root_}]]]
}
class "diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L346{diagram_filter}]] {
+diagram_filter(const common::model::diagram & d, const config::diagram & c) : void
+add_inclusive_filter(std::unique_ptr<filter_visitor> fv) : void
+add_exclusive_filter(std::unique_ptr<filter_visitor> fv) : void
+should_include(const namespace_ & ns, const std::string & name) const : bool
-init_filters(const config::diagram & c) : void
+should_include<T>(const T & e) : _Bool
}
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>