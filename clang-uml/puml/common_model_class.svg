<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2544px" preserveAspectRatio="none" style="width:9752px;height:2544px;" version="1.1" viewBox="0 0 9752 2544" width="9752px" zoomAndPan="magnify"><defs><filter height="300%" id="fxz0hh69jp3wf" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="307" x="4729" y="16.708">clang-uml common diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="55.5" y="144.4531"/><ellipse cx="70.5" cy="160.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M74.6094,166.4531 L66.8906,166.4531 L66.8906,154.0625 L74.6094,154.0625 L74.6094,156.2188 L69.3438,156.2188 L69.3438,158.8906 L74.1094,158.8906 L74.1094,161.0469 L69.3438,161.0469 L69.3438,164.2969 L74.6094,164.2969 L74.6094,166.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="84.5" y="164.6074">diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="56.5" x2="148.5" y1="176.4531" y2="176.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="61.5" y="190.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="61.5" y="203.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="61.5" y="216.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="61.5" y="229.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="56.5" x2="148.5" y1="235.6719" y2="235.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="87" x="2325" y="1825.4531"/><ellipse cx="2340" cy="1841.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2344.1094,1847.4531 L2336.3906,1847.4531 L2336.3906,1835.0625 L2344.1094,1835.0625 L2344.1094,1837.2188 L2338.8438,1837.2188 L2338.8438,1839.8906 L2343.6094,1839.8906 L2343.6094,1842.0469 L2338.8438,1842.0469 L2338.8438,1845.2969 L2344.1094,1845.2969 L2344.1094,1847.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="2354" y="1845.6074">access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2326" x2="2411" y1="1857.4531" y2="1857.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2331" y="1871.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2331" y="1884.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2331" y="1897.2729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2331" y="1910.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2326" x2="2411" y1="1916.6719" y2="1916.6719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="7630" y="1773.9531"/><ellipse cx="7645" cy="1789.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7649.1094,1795.9531 L7641.3906,1795.9531 L7641.3906,1783.5625 L7649.1094,1783.5625 L7649.1094,1785.7188 L7643.8438,1785.7188 L7643.8438,1788.3906 L7648.6094,1788.3906 L7648.6094,1790.5469 L7643.8438,1790.5469 L7643.8438,1793.7969 L7649.1094,1793.7969 L7649.1094,1795.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="7659" y="1794.1074">relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7631" x2="7746" y1="1805.9531" y2="1805.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7636" y="1820.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="7636" y="1832.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="7636" y="1845.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7636" y="1858.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="7636" y="1871.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="7636" y="1884.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7636" y="1896.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="7636" y="1909.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="7636" y="1922.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="7636" y="1935.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="7636" y="1948.2104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="7636" y="1961.0151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7631" x2="7746" y1="1967.6094" y2="1967.6094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="185" y="28.9531"/><ellipse cx="202.25" cy="44.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M206.3594,50.9531 L198.6406,50.9531 L198.6406,38.5625 L206.3594,38.5625 L206.3594,40.7188 L201.0938,40.7188 L201.0938,43.3906 L205.8594,43.3906 L205.8594,45.5469 L201.0938,45.5469 L201.0938,48.7969 L206.3594,48.7969 L206.3594,50.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="216.75" y="49.1074">message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="186" x2="289" y1="60.9531" y2="60.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="191" y="75.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="191" y="87.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="191" y="100.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="191" y="113.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="191" y="126.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="191" y="139.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="191" y="151.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="191" y="164.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="191" y="177.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="191" y="190.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="191" y="203.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="191" y="216.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="191" y="228.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="191" y="241.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="191" y="254.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="191" y="267.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="191" y="280.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="191" y="292.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="191" y="305.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="191" y="318.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="191" y="331.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="191" y="344.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="186" x2="289" y1="350.6563" y2="350.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="144" x="325.5" y="156.9531"/><ellipse cx="340.5" cy="172.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M344.6094,178.9531 L336.8906,178.9531 L336.8906,166.5625 L344.6094,166.5625 L344.6094,168.7188 L339.3438,168.7188 L339.3438,171.3906 L344.1094,171.3906 L344.1094,173.5469 L339.3438,173.5469 L339.3438,176.7969 L344.6094,176.7969 L344.6094,178.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="354.5" y="177.1074">message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="326.5" x2="468.5" y1="188.9531" y2="188.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="331.5" y="203.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="331.5" y="215.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="326.5" x2="468.5" y1="222.5625" y2="222.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="583" x="1323" y="99.4531"/><ellipse cx="1549.25" cy="115.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1552.2188,121.0938 Q1551.6406,121.3906 1551,121.5313 Q1550.3594,121.6875 1549.6563,121.6875 Q1547.1563,121.6875 1545.8281,120.0469 Q1544.5156,118.3906 1544.5156,115.2656 Q1544.5156,112.1406 1545.8281,110.4844 Q1547.1563,108.8281 1549.6563,108.8281 Q1550.3594,108.8281 1551,108.9844 Q1551.6563,109.1406 1552.2188,109.4375 L1552.2188,112.1563 Q1551.5938,111.5781 1551,111.3125 Q1550.4063,111.0313 1549.7813,111.0313 Q1548.4375,111.0313 1547.75,112.1094 Q1547.0625,113.1719 1547.0625,115.2656 Q1547.0625,117.3594 1547.75,118.4375 Q1548.4375,119.5 1549.7813,119.5 Q1550.4063,119.5 1551,119.2344 Q1551.5938,118.9531 1552.2188,118.375 L1552.2188,121.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="1569.75" y="119.6074">decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1324" x2="1905" y1="131.4531" y2="131.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1329" y="137.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1331" y="139.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1343" y="145.6636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1329" y="150.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1331" y="152.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1343" y="158.4683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1324" x2="1905" y1="165.0625" y2="165.0625"/><ellipse cx="1334" cy="176.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1343" y="179.2729">skip() const : bool</text><ellipse cx="1334" cy="188.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1343" y="192.0776">skip_relationship() const : bool</text><ellipse cx="1334" cy="201.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1343" y="204.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1334" cy="214.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1343" y="217.687">style_spec() const : std::string</text><ellipse cx="1334" cy="227.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1343" y="230.4917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1334" cy="240.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="1343" y="243.2964">add_decorators(const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp; decorators) : void</text><ellipse cx="1334" cy="252.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1343" y="256.1011">append(const decorated_element &amp; de) : void</text><ellipse cx="1334" cy="265.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1343" y="268.9058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1334" cy="278.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1343" y="281.7104">set_comment(const comment_t &amp; c) : void</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1941.5" y="80.4531"/><ellipse cx="2042.75" cy="96.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2045.7188,102.0938 Q2045.1406,102.3906 2044.5,102.5313 Q2043.8594,102.6875 2043.1563,102.6875 Q2040.6563,102.6875 2039.3281,101.0469 Q2038.0156,99.3906 2038.0156,96.2656 Q2038.0156,93.1406 2039.3281,91.4844 Q2040.6563,89.8281 2043.1563,89.8281 Q2043.8594,89.8281 2044.5,89.9844 Q2045.1563,90.1406 2045.7188,90.4375 L2045.7188,93.1563 Q2045.0938,92.5781 2044.5,92.3125 Q2043.9063,92.0313 2043.2813,92.0313 Q2041.9375,92.0313 2041.25,93.1094 Q2040.5625,94.1719 2040.5625,96.2656 Q2040.5625,98.3594 2041.25,99.4375 Q2041.9375,100.5 2043.2813,100.5 Q2043.9063,100.5 2044.5,100.2344 Q2045.0938,99.9531 2045.7188,99.375 L2045.7188,102.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="99" x="2063.25" y="100.6074">source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1942.5" x2="2250.5" y1="112.4531" y2="112.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="118.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="120.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1961.5" y="126.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="131.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="133.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1961.5" y="139.4683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="144.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="146.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1961.5" y="152.2729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1947.5" y="156.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1949.5" y="158.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1961.5" y="165.0776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1942.5" x2="2250.5" y1="171.6719" y2="171.6719"/><ellipse cx="1952.5" cy="182.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1961.5" y="185.8823">source_location() = default : void</text><ellipse cx="1952.5" cy="195.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="1961.5" y="198.687">source_location(std::string f, unsigned int l) : void</text><ellipse cx="1952.5" cy="208.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1961.5" y="211.4917">file() const : const std::string &amp;</text><ellipse cx="1952.5" cy="221.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1961.5" y="224.2964">set_file(const std::string &amp; file) : void</text><ellipse cx="1952.5" cy="233.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="1961.5" y="237.1011">file_relative() const : const std::string &amp;</text><ellipse cx="1952.5" cy="246.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1961.5" y="249.9058">set_file_relative(const std::string &amp; file) : void</text><ellipse cx="1952.5" cy="259.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1961.5" y="262.7104">line() const : unsigned int</text><ellipse cx="1952.5" cy="272.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1961.5" y="275.5151">set_line(const unsigned int line) : void</text><ellipse cx="1952.5" cy="285.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1961.5" y="288.3198">location_id() const : unsigned int</text><ellipse cx="1952.5" cy="297.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1961.5" y="301.1245">set_location_id(unsigned int h) : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="542" x="775.5" y="2036.9531"/><ellipse cx="1013.75" cy="2052.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1016.7188,2058.5938 Q1016.1406,2058.8906 1015.5,2059.0313 Q1014.8594,2059.1875 1014.1563,2059.1875 Q1011.6563,2059.1875 1010.3281,2057.5469 Q1009.0156,2055.8906 1009.0156,2052.7656 Q1009.0156,2049.6406 1010.3281,2047.9844 Q1011.6563,2046.3281 1014.1563,2046.3281 Q1014.8594,2046.3281 1015.5,2046.4844 Q1016.1563,2046.6406 1016.7188,2046.9375 L1016.7188,2049.6563 Q1016.0938,2049.0781 1015.5,2048.8125 Q1014.9063,2048.5313 1014.2813,2048.5313 Q1012.9375,2048.5313 1012.25,2049.6094 Q1011.5625,2050.6719 1011.5625,2052.7656 Q1011.5625,2054.8594 1012.25,2055.9375 Q1012.9375,2057 1014.2813,2057 Q1014.9063,2057 1015.5,2056.7344 Q1016.0938,2056.4531 1016.7188,2055.875 L1016.7188,2058.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="1034.25" y="2057.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1294.5" y="2033.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1295.5" y="2046.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="776.5" x2="1316.5" y1="2068.9531" y2="2068.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="781.5" y="2074.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="783.5" y="2076.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="795.5" y="2083.1636">path_ : path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="776.5" x2="1316.5" y1="2089.7578" y2="2089.7578"/><ellipse cx="786.5" cy="2100.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="795.5" y="2103.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="786.5" cy="2113.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="795.5" y="2116.7729">path&lt;Sep&gt;(const std::string &amp; ns) : void</text><ellipse cx="786.5" cy="2126.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="516" x="795.5" y="2129.5776">path&lt;Sep&gt;(container_type::const_iterator begin, container_type::const_iterator end) : void</text><ellipse cx="786.5" cy="2139.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="795.5" y="2142.3823">path&lt;Sep&gt;(const path&lt;Sep&gt; &amp; right) : void</text><ellipse cx="786.5" cy="2151.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="795.5" y="2155.187">operator=(const path&lt;Sep&gt; &amp; right) = default : path&lt;Sep&gt; &amp;</text><ellipse cx="786.5" cy="2164.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="795.5" y="2167.9917">path&lt;Sep&gt;(path&lt;Sep&gt; &amp;&amp; right) = default : void</text><ellipse cx="786.5" cy="2177.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="795.5" y="2180.7964">operator=(path&lt;Sep&gt; &amp;&amp; right) = default : path&lt;Sep&gt; &amp;</text><ellipse cx="786.5" cy="2190.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="795.5" y="2193.6011">path&lt;Sep&gt;(std::initializer_list&lt;std::string&gt; ns) : void</text><ellipse cx="786.5" cy="2203.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="795.5" y="2206.4058">path&lt;Sep&gt;(const std::vector&lt;std::string&gt; &amp; ns) : void</text><ellipse cx="786.5" cy="2216" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="795.5" y="2219.2104">to_string() const : std::string</text><ellipse cx="786.5" cy="2228.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="795.5" y="2232.0151">is_empty() const : bool</text><ellipse cx="786.5" cy="2241.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="795.5" y="2244.8198">size() const : size_t</text><ellipse cx="786.5" cy="2254.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="795.5" y="2257.6245">operator|(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2267.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="795.5" y="2270.4292">operator|=(const path&lt;Sep&gt; &amp; right) : void</text><ellipse cx="786.5" cy="2280.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="795.5" y="2283.2339">operator|(const std::string &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2292.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="795.5" y="2296.0386">operator|=(const std::string &amp; right) : void</text><ellipse cx="786.5" cy="2305.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="795.5" y="2308.8433">operator[](const int index) : std::string &amp;</text><ellipse cx="786.5" cy="2318.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="795.5" y="2321.6479">operator[](const int index) const : const std::string &amp;</text><ellipse cx="786.5" cy="2331.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="795.5" y="2334.4526">append(const std::string &amp; ns) : void</text><ellipse cx="786.5" cy="2344.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="795.5" y="2347.2573">append(const path&lt;Sep&gt; &amp; ns) : void</text><ellipse cx="786.5" cy="2356.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="795.5" y="2360.062">pop_back() : void</text><ellipse cx="786.5" cy="2369.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="795.5" y="2372.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="786.5" cy="2382.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="795.5" y="2385.6714">starts_with(const path&lt;Sep&gt; &amp; right) const : bool</text><ellipse cx="786.5" cy="2395.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="795.5" y="2398.4761">ends_with(const path&lt;Sep&gt; &amp; right) const : bool</text><ellipse cx="786.5" cy="2408.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="795.5" y="2411.2808">common_path(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2420.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="795.5" y="2424.0854">relative_to(const path&lt;Sep&gt; &amp; right) const : path&lt;Sep&gt;</text><ellipse cx="786.5" cy="2433.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="795.5" y="2436.8901">relative(const std::string &amp; name) const : std::string</text><ellipse cx="786.5" cy="2446.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="795.5" y="2449.6948">name() const : std::string</text><ellipse cx="786.5" cy="2459.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="795.5" y="2462.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="786.5" cy="2472.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="795.5" y="2475.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="786.5" cy="2484.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="795.5" y="2488.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="786.5" cy="2497.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="795.5" y="2500.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="786.5" cy="2510.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="795.5" y="2513.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="786.5" cy="2523.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="795.5" y="2526.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="6" y="858.4531"/><ellipse cx="40.35" cy="874.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M43.3188,880.0938 Q42.7406,880.3906 42.1,880.5313 Q41.4594,880.6875 40.7563,880.6875 Q38.2563,880.6875 36.9281,879.0469 Q35.6156,877.3906 35.6156,874.2656 Q35.6156,871.1406 36.9281,869.4844 Q38.2563,867.8281 40.7563,867.8281 Q41.4594,867.8281 42.1,867.9844 Q42.7563,868.1406 43.3188,868.4375 L43.3188,871.1563 Q42.6938,870.5781 42.1,870.3125 Q41.5063,870.0313 40.8813,870.0313 Q39.5375,870.0313 38.85,871.1094 Q38.1625,872.1719 38.1625,874.2656 Q38.1625,876.3594 38.85,877.4375 Q39.5375,878.5 40.8813,878.5 Q41.5063,878.5 42.1,878.2344 Q42.6938,877.9531 43.3188,877.375 L43.3188,880.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="58.65" y="878.6074">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="198" y1="890.4531" y2="890.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="896.4531"/><ellipse cx="17" cy="901.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="26" y="904.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="198" y1="911.2578" y2="911.2578"/><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="8704" y="1501.9531"/><ellipse cx="8719" cy="1517.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8723.1094,1523.9531 L8715.3906,1523.9531 L8715.3906,1511.5625 L8723.1094,1511.5625 L8723.1094,1513.7188 L8717.8438,1513.7188 L8717.8438,1516.3906 L8722.6094,1516.3906 L8722.6094,1518.5469 L8717.8438,1518.5469 L8717.8438,1521.7969 L8723.1094,1521.7969 L8723.1094,1523.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="8733" y="1522.1074">template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8705" x2="8906" y1="1533.9531" y2="1533.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="8710" y="1548.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="8710" y="1560.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="8710" y="1573.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="8710" y="1586.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="8710" y="1599.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8705" x2="8906" y1="1605.9766" y2="1605.9766"/></a><!--MD5=[90017e9468cbeb0bc9373ae936737720]
class C_0002193110380171976294--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" target="_top" title="rpqualifier" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" xlink:show="new" xlink:title="rpqualifier" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.5;" width="113" x="9028" y="1825.4531"/><ellipse cx="9051.1" cy="1841.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9055.2094,1847.4531 L9047.4906,1847.4531 L9047.4906,1835.0625 L9055.2094,1835.0625 L9055.2094,1837.2188 L9049.9438,1837.2188 L9049.9438,1839.8906 L9054.7094,1839.8906 L9054.7094,1842.0469 L9049.9438,1842.0469 L9049.9438,1845.2969 L9055.2094,1845.2969 L9055.2094,1847.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="9066.9" y="1845.6074">rpqualifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9029" x2="9140" y1="1857.4531" y2="1857.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="9034" y="1871.6636">kLValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="9034" y="1884.4683">kRValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="9034" y="1897.2729">kPointer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="9034" y="1910.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9029" x2="9140" y1="1916.6719" y2="1916.6719"/></a><!--MD5=[5e78f8fc55e497bc4b976d966927ffe8]
class C_0000845978329661395972--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" target="_top" title="context" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="137.6328" id="C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.5;" width="285" x="8942" y="1488.9531"/><ellipse cx="9056.75" cy="1504.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9059.7188,1510.5938 Q9059.1406,1510.8906 9058.5,1511.0313 Q9057.8594,1511.1875 9057.1563,1511.1875 Q9054.6563,1511.1875 9053.3281,1509.5469 Q9052.0156,1507.8906 9052.0156,1504.7656 Q9052.0156,1501.6406 9053.3281,1499.9844 Q9054.6563,1498.3281 9057.1563,1498.3281 Q9057.8594,1498.3281 9058.5,1498.4844 Q9059.1563,1498.6406 9059.7188,1498.9375 L9059.7188,1501.6563 Q9059.0938,1501.0781 9058.5,1500.8125 Q9057.9063,1500.5313 9057.2813,1500.5313 Q9055.9375,1500.5313 9055.25,1501.6094 Q9054.5625,1502.6719 9054.5625,1504.7656 Q9054.5625,1506.8594 9055.25,1507.9375 Q9055.9375,1509 9057.2813,1509 Q9057.9063,1509 9058.5,1508.7344 Q9059.0938,1508.4531 9059.7188,1507.875 L9059.7188,1510.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="9077.25" y="1509.1074">context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8943" x2="9226" y1="1520.9531" y2="1520.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8948" y="1526.9531"/><ellipse cx="8953" cy="1531.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="8962" y="1535.1636">is_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8948" y="1539.7578"/><ellipse cx="8953" cy="1544.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="8962" y="1547.9683">is_volatile : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8948" y="1552.5625"/><ellipse cx="8953" cy="1557.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="8962" y="1560.7729">is_ref_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8948" y="1565.3672"/><ellipse cx="8953" cy="1570.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="8962" y="1573.5776">is_ref_volatile : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="8943" x2="9226" y1="1580.1719" y2="1580.1719"/><ellipse cx="8953" cy="1591.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="8962" y="1594.3823">to_string() const : std::string</text><ellipse cx="8953" cy="1603.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="8962" y="1607.187">operator==(const context &amp; rhs) const : bool</text><ellipse cx="8953" cy="1616.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="8962" y="1619.9917">operator!=(const context &amp; rhs) const : bool</text><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="181" x="1366" y="1850.9531"/><ellipse cx="1381" cy="1866.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1383.9688,1872.5938 Q1383.3906,1872.8906 1382.75,1873.0313 Q1382.1094,1873.1875 1381.4063,1873.1875 Q1378.9063,1873.1875 1377.5781,1871.5469 Q1376.2656,1869.8906 1376.2656,1866.7656 Q1376.2656,1863.6406 1377.5781,1861.9844 Q1378.9063,1860.3281 1381.4063,1860.3281 Q1382.1094,1860.3281 1382.75,1860.4844 Q1383.4063,1860.6406 1383.9688,1860.9375 L1383.9688,1863.6563 Q1383.3438,1863.0781 1382.75,1862.8125 Q1382.1563,1862.5313 1381.5313,1862.5313 Q1380.1875,1862.5313 1379.5,1863.6094 Q1378.8125,1864.6719 1378.8125,1866.7656 Q1378.8125,1868.8594 1379.5,1869.9375 Q1380.1875,1871 1381.5313,1871 Q1382.1563,1871 1382.75,1870.7344 Q1383.3438,1870.4531 1383.9688,1869.875 L1383.9688,1872.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="1395" y="1871.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="118" x="1432" y="1847.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="116" x="1433" y="1860.0918">ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1367" x2="1546" y1="1882.9531" y2="1882.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1367" x2="1546" y1="1890.9531" y2="1890.9531"/><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="905.9141" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="1340" x="8226.5" y="435.9531"/><ellipse cx="8828.25" cy="451.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8831.2188,457.5938 Q8830.6406,457.8906 8830,458.0313 Q8829.3594,458.1875 8828.6563,458.1875 Q8826.1563,458.1875 8824.8281,456.5469 Q8823.5156,454.8906 8823.5156,451.7656 Q8823.5156,448.6406 8824.8281,446.9844 Q8826.1563,445.3281 8828.6563,445.3281 Q8829.3594,445.3281 8830,445.4844 Q8830.6563,445.6406 8831.2188,445.9375 L8831.2188,448.6563 Q8830.5938,448.0781 8830,447.8125 Q8829.4063,447.5313 8828.7813,447.5313 Q8827.4375,447.5313 8826.75,448.6094 Q8826.0625,449.6719 8826.0625,451.7656 Q8826.0625,453.8594 8826.75,454.9375 Q8827.4375,456 8828.7813,456 Q8829.4063,456 8830,455.7344 Q8830.5938,455.4531 8831.2188,454.875 L8831.2188,457.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="128" x="8848.75" y="456.1074">template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8227.5" x2="9565.5" y1="467.9531" y2="467.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="473.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="475.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="8246.5" y="482.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="486.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="488.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="8246.5" y="494.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="499.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="501.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="8246.5" y="507.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="512.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="514.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="8246.5" y="520.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="525.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="527.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="8246.5" y="533.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="537.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="539.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="8246.5" y="546.187">is_ellipsis_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="550.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="552.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="8246.5" y="558.9917">is_noexcept_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="563.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="565.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="8246.5" y="571.7964">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="576.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="578.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="8246.5" y="584.6011">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="589.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="591.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="8246.5" y="597.4058">is_data_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="602"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="604"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="8246.5" y="610.2104">is_member_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="614.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="616.8047"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="8246.5" y="623.0151">is_array_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="627.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="629.6094"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="8246.5" y="635.8198">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="640.4141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="642.4141"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="8246.5" y="648.6245">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8232.5" y="653.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="655.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="8246.5" y="661.4292">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="8227.5" x2="9565.5" y1="668.0234" y2="668.0234"/><ellipse cx="8237.5" cy="679.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="866" x="8246.5" y="682.2339">make_template_type(const std::string &amp; name, const std::optional&lt;std::string&gt; &amp; default_value = = {}, bool is_variadic = false) : template_parameter</text><ellipse cx="8237.5" cy="691.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="922" x="8246.5" y="695.0386">make_template_template_type(const std::string &amp; name, const std::optional&lt;std::string&gt; &amp; default_value = = {}, bool is_variadic = false) : template_parameter</text><ellipse cx="8237.5" cy="704.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1126" x="8246.5" y="707.8433">make_non_type_template(const std::string &amp; type, const std::optional&lt;std::string&gt; &amp; name, const std::optional&lt;std::string&gt; &amp; default_value = = {}, bool is_variadic = false) : template_parameter</text><ellipse cx="8237.5" cy="717.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="692" x="8246.5" y="720.6479">make_argument(const std::string &amp; type, const std::optional&lt;std::string&gt; &amp; default_value = = {}) : template_parameter</text><ellipse cx="8237.5" cy="730.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="760" x="8246.5" y="733.4526">make_unexposed_argument(const std::string &amp; type, const std::optional&lt;std::string&gt; &amp; default_value = = {}) : template_parameter</text><ellipse cx="8237.5" cy="743.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8246.5" y="746.2573">set_type(const std::string &amp; type) : void</text><ellipse cx="8237.5" cy="755.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8246.5" y="759.062">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="8237.5" cy="768.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="8246.5" y="771.8667">set_id(const int64_t id) : void</text><ellipse cx="8237.5" cy="781.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="8246.5" y="784.6714">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="8237.5" cy="794.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="8246.5" y="797.4761">set_name(const std::string &amp; name) : void</text><ellipse cx="8237.5" cy="807.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="8246.5" y="810.2808">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="8237.5" cy="819.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="8246.5" y="823.0854">set_default_value(const std::string &amp; value) : void</text><ellipse cx="8237.5" cy="832.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="8246.5" y="835.8901">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="8237.5" cy="845.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="8246.5" y="848.6948">is_variadic(bool is_variadic) : void</text><ellipse cx="8237.5" cy="858.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="8246.5" y="861.4995">is_variadic() const : bool</text><ellipse cx="8237.5" cy="871.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="8246.5" y="874.3042">calculate_specialization_match(const template_parameter &amp; base_template_parameter) const : int</text><ellipse cx="8237.5" cy="883.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="8246.5" y="887.1089">is_template_parameter() const : bool</text><ellipse cx="8237.5" cy="896.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="8246.5" y="899.9136">is_template_parameter(bool is_template_parameter) : void</text><ellipse cx="8237.5" cy="909.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="8246.5" y="912.7183">is_template_template_parameter() const : bool</text><ellipse cx="8237.5" cy="922.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="8246.5" y="925.5229">is_template_template_parameter(bool is_template_template_parameter) : void</text><ellipse cx="8237.5" cy="935.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="8246.5" y="938.3276">to_string(const namespace_ &amp; using_namespace, bool relative, bool skip_qualifiers = false) const : std::string</text><ellipse cx="8237.5" cy="947.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="8246.5" y="951.1323">add_template_param(template_parameter &amp;&amp; ct) : void</text><ellipse cx="8237.5" cy="960.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="8246.5" y="963.937">add_template_param(const template_parameter &amp; ct) : void</text><ellipse cx="8237.5" cy="973.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="8246.5" y="976.7417">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="8237.5" cy="986.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="8246.5" y="989.5464">clear_params() : void</text><ellipse cx="8237.5" cy="999.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="8246.5" y="1002.3511">is_association() const : bool</text><ellipse cx="8237.5" cy="1011.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="8246.5" y="1015.1558">is_specialization() const : bool</text><ellipse cx="8237.5" cy="1024.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="8246.5" y="1027.9604">is_same_specialization(const template_parameter &amp; other) const : bool</text><ellipse cx="8237.5" cy="1037.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1314" x="8246.5" y="1040.7651">find_nested_relationships(std::vector&lt;std::pair&lt;int64_t,common::model::relationship_t&gt;&gt; &amp; nested_relationships, common::model::relationship_t hint, const std::function&lt;bool (const std::string &amp;)&gt; &amp; should_include) const : bool</text><ellipse cx="8237.5" cy="1050.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="8246.5" y="1053.5698">set_concept_constraint(std::string constraint) : void</text><ellipse cx="8237.5" cy="1063.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="8246.5" y="1066.3745">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="8237.5" cy="1075.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="8246.5" y="1079.1792">kind() const : template_parameter_kind_t</text><ellipse cx="8237.5" cy="1088.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="8246.5" y="1091.9839">set_kind(template_parameter_kind_t kind) : void</text><ellipse cx="8237.5" cy="1101.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="8246.5" y="1104.7886">is_unexposed() const : bool</text><ellipse cx="8237.5" cy="1114.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="8246.5" y="1117.5933">set_unexposed(bool unexposed) : void</text><ellipse cx="8237.5" cy="1127.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="8246.5" y="1130.3979">is_function_template(bool ft) : void</text><ellipse cx="8237.5" cy="1139.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="8246.5" y="1143.2026">is_function_template() const : bool</text><ellipse cx="8237.5" cy="1152.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="8246.5" y="1156.0073">is_member_pointer(bool m) : void</text><ellipse cx="8237.5" cy="1165.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="8246.5" y="1168.812">is_member_pointer() const : bool</text><ellipse cx="8237.5" cy="1178.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="8246.5" y="1181.6167">is_data_pointer(bool m) : void</text><ellipse cx="8237.5" cy="1191.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="8246.5" y="1194.4214">is_data_pointer() const : bool</text><ellipse cx="8237.5" cy="1204.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="8246.5" y="1207.2261">is_array(bool a) : void</text><ellipse cx="8237.5" cy="1216.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="8246.5" y="1220.0308">is_array() const : bool</text><ellipse cx="8237.5" cy="1229.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="8246.5" y="1232.8354">push_context(const context &amp; q) : void</text><ellipse cx="8237.5" cy="1242.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="8246.5" y="1245.6401">deduced_context() const : const std::deque&lt;context&gt; &amp;</text><ellipse cx="8237.5" cy="1255.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="8246.5" y="1258.4448">deduced_context(const std::deque&lt;context&gt; &amp; c) : void</text><ellipse cx="8237.5" cy="1268.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="8246.5" y="1271.2495">is_ellipsis(bool e) : void</text><ellipse cx="8237.5" cy="1280.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="8246.5" y="1284.0542">is_ellipsis() const : bool</text><ellipse cx="8237.5" cy="1293.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="8246.5" y="1296.8589">is_noexcept(bool e) : void</text><ellipse cx="8237.5" cy="1306.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="8246.5" y="1309.6636">is_noexcept() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="1316.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="8246.5" y="1322.4683">template_parameter() = default : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8234.5" y="1329.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="8246.5" y="1335.2729">deduced_context_str() const : std::string</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="944" y="845.9531"/><ellipse cx="1016.75" cy="861.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1019.7188,867.5938 Q1019.1406,867.8906 1018.5,868.0313 Q1017.8594,868.1875 1017.1563,868.1875 Q1014.6563,868.1875 1013.3281,866.5469 Q1012.0156,864.8906 1012.0156,861.7656 Q1012.0156,858.6406 1013.3281,856.9844 Q1014.6563,855.3281 1017.1563,855.3281 Q1017.8594,855.3281 1018.5,855.4844 Q1019.1563,855.6406 1019.7188,855.9375 L1019.7188,858.6563 Q1019.0938,858.0781 1018.5,857.8125 Q1017.9063,857.5313 1017.2813,857.5313 Q1015.9375,857.5313 1015.25,858.6094 Q1014.5625,859.6719 1014.5625,861.7656 Q1014.5625,863.8594 1015.25,864.9375 Q1015.9375,866 1017.2813,866 Q1017.9063,866 1018.5,865.7344 Q1019.0938,865.4531 1019.7188,864.875 L1019.7188,867.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="1037.25" y="866.1074">stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="945" x2="1202" y1="877.9531" y2="877.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="950" y="883.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="952" y="885.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="964" y="892.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="945" x2="1202" y1="898.7578" y2="898.7578"/><ellipse cx="955" cy="909.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="964" y="912.9683">set_style(const std::string &amp; style) : void</text><ellipse cx="955" cy="922.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="964" y="925.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="1164" x="1466.5" y="1418.9531"/><ellipse cx="2007.25" cy="1434.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2010.2188,1440.5938 Q2009.6406,1440.8906 2009,1441.0313 Q2008.3594,1441.1875 2007.6563,1441.1875 Q2005.1563,1441.1875 2003.8281,1439.5469 Q2002.5156,1437.8906 2002.5156,1434.7656 Q2002.5156,1431.6406 2003.8281,1429.9844 Q2005.1563,1428.3281 2007.6563,1428.3281 Q2008.3594,1428.3281 2009,1428.4844 Q2009.6563,1428.6406 2010.2188,1428.9375 L2010.2188,1431.6563 Q2009.5938,1431.0781 2009,1430.8125 Q2008.4063,1430.5313 2007.7813,1430.5313 Q2006.4375,1430.5313 2005.75,1431.6094 Q2005.0625,1432.6719 2005.0625,1434.7656 Q2005.0625,1436.8594 2005.75,1437.9375 Q2006.4375,1439 2007.7813,1439 Q2008.4063,1439 2009,1438.7344 Q2009.5938,1438.4531 2010.2188,1437.875 L2010.2188,1440.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="2027.75" y="1439.1074">relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1467.5" x2="2629.5" y1="1450.9531" y2="1450.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1456.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1458.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1486.5" y="1465.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1469.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1471.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1486.5" y="1477.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1482.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1484.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1486.5" y="1490.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.5" y="1495.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1474.5" y="1497.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1486.5" y="1503.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1467.5" x2="2629.5" y1="1510.1719" y2="1510.1719"/><ellipse cx="1477.5" cy="1521.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="616" x="1486.5" y="1524.3823">relationship(relationship_t type, int64_t destination, access_t access = access_t::kPublic, std::string label =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="2106.5" y="1524.3823">, std::string multiplicity_source =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2358.5" y="1524.3823">, std::string multiplicity_destination = "") : void</text><ellipse cx="1477.5" cy="1533.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1486.5" y="1537.187">~relationship() = default : void</text><ellipse cx="1477.5" cy="1546.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1486.5" y="1549.9917">set_type(relationship_t type) : void</text><ellipse cx="1477.5" cy="1559.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1486.5" y="1562.7964">type() const : relationship_t</text><ellipse cx="1477.5" cy="1572.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1486.5" y="1575.6011">set_destination(int64_t destination) : void</text><ellipse cx="1477.5" cy="1585.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1486.5" y="1588.4058">destination() const : clanguml::common::id_t</text><ellipse cx="1477.5" cy="1598" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1486.5" y="1601.2104">set_multiplicity_source(const std::string &amp; multiplicity_source) : void</text><ellipse cx="1477.5" cy="1610.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1486.5" y="1614.0151">multiplicity_source() const : std::string</text><ellipse cx="1477.5" cy="1623.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="1486.5" y="1626.8198">set_multiplicity_destination(const std::string &amp; multiplicity_destination) : void</text><ellipse cx="1477.5" cy="1636.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1486.5" y="1639.6245">multiplicity_destination() const : std::string</text><ellipse cx="1477.5" cy="1649.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1486.5" y="1652.4292">set_label(const std::string &amp; label) : void</text><ellipse cx="1477.5" cy="1662.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1486.5" y="1665.2339">label() const : std::string</text><ellipse cx="1477.5" cy="1674.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1486.5" y="1678.0386">set_access(access_t scope) : void</text><ellipse cx="1477.5" cy="1687.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1486.5" y="1690.8433">access() const : access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="1667.5" y="723.9531"/><ellipse cx="1784.25" cy="739.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1787.2188,745.5938 Q1786.6406,745.8906 1786,746.0313 Q1785.3594,746.1875 1784.6563,746.1875 Q1782.1563,746.1875 1780.8281,744.5469 Q1779.5156,742.8906 1779.5156,739.7656 Q1779.5156,736.6406 1780.8281,734.9844 Q1782.1563,733.3281 1784.6563,733.3281 Q1785.3594,733.3281 1786,733.4844 Q1786.6563,733.6406 1787.2188,733.9375 L1787.2188,736.6563 Q1786.5938,736.0781 1786,735.8125 Q1785.4063,735.5313 1784.7813,735.5313 Q1783.4375,735.5313 1782.75,736.6094 Q1782.0625,737.6719 1782.0625,739.7656 Q1782.0625,741.8594 1782.75,742.9375 Q1783.4375,744 1784.7813,744 Q1785.4063,744 1786,743.7344 Q1786.5938,743.4531 1787.2188,742.875 L1787.2188,745.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="1804.75" y="744.1074">diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1668.5" x2="2016.5" y1="755.9531" y2="755.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="761.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="763.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1687.5" y="770.1636">id_ : diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="774.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="776.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1687.5" y="782.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="787.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="789.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1687.5" y="795.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1673.5" y="800.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1675.5" y="802.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1687.5" y="808.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1668.5" x2="2016.5" y1="815.1719" y2="815.1719"/><ellipse cx="1678.5" cy="826.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1687.5" y="829.3823">diagram_element() : void</text><ellipse cx="1678.5" cy="838.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1687.5" y="842.187">~diagram_element() = default : void</text><ellipse cx="1678.5" cy="851.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1687.5" y="854.9917">id() const : diagram_element::id_t</text><ellipse cx="1678.5" cy="864.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1687.5" y="867.7964">set_id(diagram_element::id_t id) : void</text><ellipse cx="1678.5" cy="877.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1687.5" y="880.6011">alias() const : std::string</text><ellipse cx="1678.5" cy="890.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1687.5" y="893.4058">set_name(const std::string &amp; name) : void</text><ellipse cx="1678.5" cy="903" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1687.5" y="906.2104">name() const : std::string</text><ellipse cx="1678.5" cy="915.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1687.5" y="919.0151">type_name() const : std::string</text><ellipse cx="1678.5" cy="928.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1687.5" y="931.8198">full_name(bool ) const : std::string</text><ellipse cx="1678.5" cy="941.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1687.5" y="944.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1678.5" cy="954.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1687.5" y="957.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1678.5" cy="967.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1687.5" y="970.2339">add_relationship(relationship &amp;&amp; cr) : void</text><ellipse cx="1678.5" cy="979.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1687.5" y="983.0386">append(const decorated_element &amp; e) : void</text><ellipse cx="1678.5" cy="992.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1687.5" y="995.8433">context() const : inja::json</text><ellipse cx="1678.5" cy="1005.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1687.5" y="1008.6479">is_nested() const : bool</text><ellipse cx="1678.5" cy="1018.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1687.5" y="1021.4526">nested(bool nested) : void</text><ellipse cx="1678.5" cy="1031.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1687.5" y="1034.2573">complete() const : bool</text><ellipse cx="1678.5" cy="1043.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1687.5" y="1047.062">complete(bool completed) : void</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="305" x="1127" y="1463.4531"/><ellipse cx="1249.75" cy="1479.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1252.7188,1485.0938 Q1252.1406,1485.3906 1251.5,1485.5313 Q1250.8594,1485.6875 1250.1563,1485.6875 Q1247.6563,1485.6875 1246.3281,1484.0469 Q1245.0156,1482.3906 1245.0156,1479.2656 Q1245.0156,1476.1406 1246.3281,1474.4844 Q1247.6563,1472.8281 1250.1563,1472.8281 Q1250.8594,1472.8281 1251.5,1472.9844 Q1252.1563,1473.1406 1252.7188,1473.4375 L1252.7188,1476.1563 Q1252.0938,1475.5781 1251.5,1475.3125 Q1250.9063,1475.0313 1250.2813,1475.0313 Q1248.9375,1475.0313 1248.25,1476.1094 Q1247.5625,1477.1719 1247.5625,1479.2656 Q1247.5625,1481.3594 1248.25,1482.4375 Q1248.9375,1483.5 1250.2813,1483.5 Q1250.9063,1483.5 1251.5,1483.2344 Q1252.0938,1482.9531 1252.7188,1482.375 L1252.7188,1485.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="1270.25" y="1483.6074">element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1128" x2="1431" y1="1495.4531" y2="1495.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1128" x2="1431" y1="1503.4531" y2="1503.4531"/><ellipse cx="1138" cy="1514.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1147" y="1517.6636">element(namespace_ using_namespace) : void</text><ellipse cx="1138" cy="1527.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1147" y="1530.4683">~element() = default : void</text><ellipse cx="1138" cy="1540.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1147" y="1543.2729">name_and_ns() const : std::string</text><ellipse cx="1138" cy="1552.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1147" y="1556.0776">set_namespace(const namespace_ &amp; ns) : void</text><ellipse cx="1138" cy="1565.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1147" y="1568.8823">get_namespace() const : namespace_</text><ellipse cx="1138" cy="1578.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="1147" y="1581.687">get_relative_namespace() const : namespace_</text><ellipse cx="1138" cy="1591.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1147" y="1594.4917">path() const : const namespace_ &amp;</text><ellipse cx="1138" cy="1604.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1147" y="1607.2964">full_name(bool ) const : std::string</text><ellipse cx="1138" cy="1616.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1147" y="1620.1011">full_name_no_ns() const : std::string</text><ellipse cx="1138" cy="1629.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1147" y="1632.9058">using_namespace() const : const namespace_ &amp;</text><ellipse cx="1138" cy="1642.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1147" y="1645.7104">context() const : inja::json</text></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="842" x="8475.5" y="105.9531"/><ellipse cx="8848.25" cy="121.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8851.2188,127.5938 Q8850.6406,127.8906 8850,128.0313 Q8849.3594,128.1875 8848.6563,128.1875 Q8846.1563,128.1875 8844.8281,126.5469 Q8843.5156,124.8906 8843.5156,121.7656 Q8843.5156,118.6406 8844.8281,116.9844 Q8846.1563,115.3281 8848.6563,115.3281 Q8849.3594,115.3281 8850,115.4844 Q8850.6563,115.6406 8851.2188,115.9375 L8851.2188,118.6563 Q8850.5938,118.0781 8850,117.8125 Q8849.4063,117.5313 8848.7813,117.5313 Q8847.4375,117.5313 8846.75,118.6094 Q8846.0625,119.6719 8846.0625,121.7656 Q8846.0625,123.8594 8846.75,124.9375 Q8847.4375,126 8848.7813,126 Q8849.4063,126 8850,125.7344 Q8850.5938,125.4531 8851.2188,124.875 L8851.2188,127.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="8868.75" y="126.1074">template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8476.5" x2="9316.5" y1="137.9531" y2="137.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8481.5" y="143.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8483.5" y="145.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="8495.5" y="152.1636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="8481.5" y="156.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8483.5" y="158.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="8495.5" y="164.9683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="8476.5" x2="9316.5" y1="171.5625" y2="171.5625"/><ellipse cx="8486.5" cy="182.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="816" x="8495.5" y="185.7729">render_template_params(std::ostream &amp; ostr, const common::model::namespace_ &amp; using_namespace, bool relative) const : std::ostream &amp;</text><ellipse cx="8486.5" cy="195.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="8495.5" y="198.5776">set_base_template(const std::string &amp; full_name) : void</text><ellipse cx="8486.5" cy="208.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="8495.5" y="211.3823">base_template() const : std::string</text><ellipse cx="8486.5" cy="220.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="8495.5" y="224.187">add_template(template_parameter &amp;&amp; tmplt) : void</text><ellipse cx="8486.5" cy="233.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="8495.5" y="236.9917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="8486.5" cy="246.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="8495.5" y="249.7964">calculate_template_specialization_match(const template_trait &amp; other) const : int</text><ellipse cx="8486.5" cy="259.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="8495.5" y="262.6011">is_implicit() const : bool</text><ellipse cx="8486.5" cy="272.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="8495.5" y="275.4058">set_implicit(bool implicit) : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="234.5" y="730.4531"/><ellipse cx="393.75" cy="746.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M396.7188,752.0938 Q396.1406,752.3906 395.5,752.5313 Q394.8594,752.6875 394.1563,752.6875 Q391.6563,752.6875 390.3281,751.0469 Q389.0156,749.3906 389.0156,746.2656 Q389.0156,743.1406 390.3281,741.4844 Q391.6563,739.8281 394.1563,739.8281 Q394.8594,739.8281 395.5,739.9844 Q396.1563,740.1406 396.7188,740.4375 L396.7188,743.1563 Q396.0938,742.5781 395.5,742.3125 Q394.9063,742.0313 394.2813,742.0313 Q392.9375,742.0313 392.25,743.1094 Q391.5625,744.1719 391.5625,746.2656 Q391.5625,748.3594 392.25,749.4375 Q392.9375,750.5 394.2813,750.5 Q394.9063,750.5 395.5,750.2344 Q396.0938,749.9531 396.7188,749.375 L396.7188,752.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="414.25" y="750.6074">nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="642.5" y="727.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="643.5" y="739.5918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="235.5" x2="679.5" y1="762.4531" y2="762.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="240.5" y="768.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="242.5" y="770.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="254.5" y="776.6636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="235.5" x2="679.5" y1="783.2578" y2="783.2578"/><ellipse cx="245.5" cy="794.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="254.5" y="797.4683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="245.5" cy="807.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="254.5" y="810.2729">nested_trait&lt;T, Path&gt;(const nested_trait&lt;T,Path&gt; &amp; ) : void</text><ellipse cx="245.5" cy="819.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="254.5" y="823.0776">nested_trait&lt;T, Path&gt;(nested_trait&lt;T,Path&gt; &amp;&amp; ) = default : void</text><ellipse cx="245.5" cy="832.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="254.5" y="835.8823">operator=(const nested_trait&lt;T,Path&gt; &amp; ) : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="245.5" cy="845.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="254.5" y="848.687">operator=(nested_trait&lt;T,Path&gt; &amp;&amp; ) = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="245.5" cy="858.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="254.5" y="861.4917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="245.5" cy="871.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="254.5" y="874.2964">has_element(const std::string &amp; name) const : bool</text><ellipse cx="245.5" cy="883.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="254.5" y="887.1011">is_empty() const : bool</text><ellipse cx="245.5" cy="896.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="254.5" y="899.9058">begin() : auto</text><ellipse cx="245.5" cy="909.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="254.5" y="912.7104">end() : auto</text><ellipse cx="245.5" cy="922.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="254.5" y="925.5151">cbegin() const : auto</text><ellipse cx="245.5" cy="935.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="254.5" y="938.3198">cend() const : auto</text><ellipse cx="245.5" cy="947.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="254.5" y="951.1245">begin() const : auto</text><ellipse cx="245.5" cy="960.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="254.5" y="963.9292">end() const : auto</text><ellipse cx="245.5" cy="973.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="254.5" y="976.7339">print_tree(const int level) : void</text><ellipse cx="245.5" cy="986.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="254.5" y="989.5386">add_element&lt;V=T&gt;(std::unique_ptr&lt;V&gt; p) : _Bool</text><ellipse cx="245.5" cy="999.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="254.5" y="1002.3433">add_element&lt;V=T&gt;(const Path &amp; path, std::unique_ptr&lt;V&gt; p) : _Bool</text><ellipse cx="245.5" cy="1011.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="254.5" y="1015.1479">get_element&lt;V=T&gt;(const Path &amp; path) : auto</text><ellipse cx="245.5" cy="1024.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="254.5" y="1027.9526">get_element_parent&lt;V=T&gt;(const T &amp; element) : auto</text><ellipse cx="245.5" cy="1037.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="254.5" y="1040.7573">get_element&lt;V=T&gt;(const std::string &amp; name) : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="741.5" y="1831.9531"/><ellipse cx="756.5" cy="1847.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M760.6094,1853.9531 L752.8906,1853.9531 L752.8906,1841.5625 L760.6094,1841.5625 L760.6094,1843.7188 L755.3438,1843.7188 L755.3438,1846.3906 L760.1094,1846.3906 L760.1094,1848.5469 L755.3438,1848.5469 L755.3438,1851.7969 L760.6094,1851.7969 L760.6094,1853.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="770.5" y="1852.1074">source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="742.5" x2="850.5" y1="1863.9531" y2="1863.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="747.5" y="1878.1636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="747.5" y="1890.9683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="747.5" y="1903.7729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="742.5" x2="850.5" y1="1910.3672" y2="1910.3672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="716" y="858.4531"/><ellipse cx="770.75" cy="874.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M773.7188,880.0938 Q773.1406,880.3906 772.5,880.5313 Q771.8594,880.6875 771.1563,880.6875 Q768.6563,880.6875 767.3281,879.0469 Q766.0156,877.3906 766.0156,874.2656 Q766.0156,871.1406 767.3281,869.4844 Q768.6563,867.8281 771.1563,867.8281 Q771.8594,867.8281 772.5,867.9844 Q773.1563,868.1406 773.7188,868.4375 L773.7188,871.1563 Q773.0938,870.5781 772.5,870.3125 Q771.9063,870.0313 771.2813,870.0313 Q769.9375,870.0313 769.25,871.1094 Q768.5625,872.1719 768.5625,874.2656 Q768.5625,876.3594 769.25,877.4375 Q769.9375,878.5 771.2813,878.5 Q771.9063,878.5 772.5,878.2344 Q773.0938,877.9531 773.7188,877.375 L773.7188,880.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="791.25" y="878.6074">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="717" x2="908" y1="890.4531" y2="890.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="722" y="896.4531"/><ellipse cx="727" cy="901.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="736" y="904.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="717" x2="908" y1="911.2578" y2="911.2578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="568.5" y="1850.9531"/><ellipse cx="583.5" cy="1866.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M586.4688,1872.5938 Q585.8906,1872.8906 585.25,1873.0313 Q584.6094,1873.1875 583.9063,1873.1875 Q581.4063,1873.1875 580.0781,1871.5469 Q578.7656,1869.8906 578.7656,1866.7656 Q578.7656,1863.6406 580.0781,1861.9844 Q581.4063,1860.3281 583.9063,1860.3281 Q584.6094,1860.3281 585.25,1860.4844 Q585.9063,1860.6406 586.4688,1860.9375 L586.4688,1863.6563 Q585.8438,1863.0781 585.25,1862.8125 Q584.6563,1862.5313 584.0313,1862.5313 Q582.6875,1862.5313 582,1863.6094 Q581.3125,1864.6719 581.3125,1866.7656 Q581.3125,1868.8594 582,1869.9375 Q582.6875,1871 584.0313,1871 Q584.6563,1871 585.25,1870.7344 Q585.8438,1870.4531 586.4688,1869.875 L586.4688,1872.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="597.5" y="1871.1074">path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="634.5" y="1847.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="635.5" y="1860.0918">fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="569.5" x2="705.5" y1="1882.9531" y2="1882.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="569.5" x2="705.5" y1="1890.9531" y2="1890.9531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="484" x="536.5" y="1418.9531"/><ellipse cx="740.75" cy="1434.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M743.7188,1440.5938 Q743.1406,1440.8906 742.5,1441.0313 Q741.8594,1441.1875 741.1563,1441.1875 Q738.6563,1441.1875 737.3281,1439.5469 Q736.0156,1437.8906 736.0156,1434.7656 Q736.0156,1431.6406 737.3281,1429.9844 Q738.6563,1428.3281 741.1563,1428.3281 Q741.8594,1428.3281 742.5,1428.4844 Q743.1563,1428.6406 743.7188,1428.9375 L743.7188,1431.6563 Q743.0938,1431.0781 742.5,1430.8125 Q741.9063,1430.5313 741.2813,1430.5313 Q739.9375,1430.5313 739.25,1431.6094 Q738.5625,1432.6719 738.5625,1434.7656 Q738.5625,1436.8594 739.25,1437.9375 Q739.9375,1439 741.2813,1439 Q741.9063,1439 742.5,1438.7344 Q743.0938,1438.4531 743.7188,1437.875 L743.7188,1440.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="761.25" y="1439.1074">source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="537.5" x2="1019.5" y1="1450.9531" y2="1450.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="542.5" y="1456.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="544.5" y="1458.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="556.5" y="1465.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="537.5" x2="1019.5" y1="1471.7578" y2="1471.7578"/><ellipse cx="547.5" cy="1482.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="556.5" y="1485.9683">source_file() = default : void</text><ellipse cx="547.5" cy="1495.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="556.5" y="1498.7729">source_file(const std::filesystem::path &amp; p) : void</text><ellipse cx="547.5" cy="1508.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="556.5" y="1511.5776">set_path(const filesystem_path &amp; p) : void</text><ellipse cx="547.5" cy="1521.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="556.5" y="1524.3823">set_absolute() : void</text><ellipse cx="547.5" cy="1533.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="556.5" y="1537.187">is_absolute() const : bool</text><ellipse cx="547.5" cy="1546.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="556.5" y="1549.9917">set_type(source_file_t type) : void</text><ellipse cx="547.5" cy="1559.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="556.5" y="1562.7964">type() const : source_file_t</text><ellipse cx="547.5" cy="1572.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="556.5" y="1575.6011">source_file(const source_file &amp; ) : void</text><ellipse cx="547.5" cy="1585.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="556.5" y="1588.4058">source_file(source_file &amp;&amp; ) = default : void</text><ellipse cx="547.5" cy="1598" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="556.5" y="1601.2104">operator=(const source_file &amp; ) : source_file &amp;</text><ellipse cx="547.5" cy="1610.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="556.5" y="1614.0151">operator=(source_file &amp;&amp; ) : source_file &amp;</text><ellipse cx="547.5" cy="1623.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="556.5" y="1626.8198">operator==(const source_file &amp; right) const : bool</text><ellipse cx="547.5" cy="1636.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="556.5" y="1639.6245">path() const : const filesystem_path &amp;</text><ellipse cx="547.5" cy="1649.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="556.5" y="1652.4292">full_name(bool ) const : std::string</text><ellipse cx="547.5" cy="1662.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="556.5" y="1665.2339">full_path() const : path&lt;fs_path_sep&gt;</text><ellipse cx="547.5" cy="1674.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="556.5" y="1678.0386">fs_path(const std::filesystem::path &amp; base = = {}) const : std::filesystem::path</text><ellipse cx="547.5" cy="1687.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="556.5" y="1690.8433">context() const : inja::json</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="791" x="4533" y="698.4531"/><ellipse cx="4898.75" cy="714.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4898.8594,709.7969 L4897.7031,714.875 L4900.0313,714.875 L4898.8594,709.7969 Z M4897.375,707.5625 L4900.3594,707.5625 L4903.7188,719.9531 L4901.2656,719.9531 L4900.5,716.8906 L4897.2188,716.8906 L4896.4688,719.9531 L4894.0313,719.9531 L4897.375,707.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="4919.25" y="718.6074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4534" x2="5323" y1="730.4531" y2="730.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4539" y="736.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4541" y="738.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4553" y="744.6636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4539" y="749.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4541" y="751.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4553" y="757.4683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4534" x2="5323" y1="764.0625" y2="764.0625"/><ellipse cx="4544" cy="775.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4553" y="778.2729">diagram() : void</text><ellipse cx="4544" cy="787.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4553" y="791.0776">~diagram() : void</text><ellipse cx="4544" cy="800.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4553" y="803.8823">type() const = 0 : diagram_t</text><ellipse cx="4544" cy="813.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="559" x="4553" y="816.687">get(const std::string &amp; full_name) const = 0 : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="4544" cy="826.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="537" x="4553" y="829.4917">get(diagram_element::id_t id) const = 0 : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="4544" cy="839.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="765" x="4553" y="842.2964">get_with_namespace(const std::string &amp; name, const namespace_ &amp; ns) const : clanguml::common::optional_ref&lt;diagram_element&gt;</text><ellipse cx="4544" cy="851.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4553" y="855.1011">diagram(const diagram &amp; ) : void</text><ellipse cx="4544" cy="864.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4553" y="867.9058">diagram(diagram &amp;&amp; ) : void</text><ellipse cx="4544" cy="877.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4553" y="880.7104">operator=(const diagram &amp; ) : diagram &amp;</text><ellipse cx="4544" cy="890.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4553" y="893.5151">operator=(diagram &amp;&amp; ) : diagram &amp;</text><ellipse cx="4544" cy="903.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="4553" y="906.3198">set_name(const std::string &amp; name) : void</text><ellipse cx="4544" cy="915.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4553" y="919.1245">name() const : std::string</text><ellipse cx="4544" cy="928.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4553" y="931.9292">set_filter(std::unique_ptr&lt;diagram_filter&gt; filter) : void</text><ellipse cx="4544" cy="941.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="4553" y="944.7339">set_complete(bool complete) : void</text><ellipse cx="4544" cy="954.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4553" y="957.5386">complete() const : bool</text><ellipse cx="4544" cy="967.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="4553" y="970.3433">should_include(const element &amp; e) const : bool</text><ellipse cx="4544" cy="979.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="4553" y="983.1479">should_include(const std::string &amp; e) const : bool</text><ellipse cx="4544" cy="992.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4553" y="995.9526">should_include(const source_file &amp; path) const : bool</text><ellipse cx="4544" cy="1005.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4553" y="1008.7573">should_include(relationship r) const : bool</text><ellipse cx="4544" cy="1018.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4553" y="1021.562">should_include(relationship_t r) const : bool</text><ellipse cx="4544" cy="1031.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4553" y="1034.3667">should_include(access_t s) const : bool</text><ellipse cx="4544" cy="1043.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="4553" y="1047.1714">has_element(const diagram_element::id_t ) const : bool</text><ellipse cx="4544" cy="1056.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="4553" y="1059.9761">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text><ellipse cx="4544" cy="1069.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4553" y="1072.7808">context() const = 0 : inja::json</text><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="444" x="886.5" y="1780.4531"/><ellipse cx="1077.25" cy="1796.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1080.2188,1802.0938 Q1079.6406,1802.3906 1079,1802.5313 Q1078.3594,1802.6875 1077.6563,1802.6875 Q1075.1563,1802.6875 1073.8281,1801.0469 Q1072.5156,1799.3906 1072.5156,1796.2656 Q1072.5156,1793.1406 1073.8281,1791.4844 Q1075.1563,1789.8281 1077.6563,1789.8281 Q1078.3594,1789.8281 1079,1789.9844 Q1079.6563,1790.1406 1080.2188,1790.4375 L1080.2188,1793.1563 Q1079.5938,1792.5781 1079,1792.3125 Q1078.4063,1792.0313 1077.7813,1792.0313 Q1076.4375,1792.0313 1075.75,1793.1094 Q1075.0625,1794.1719 1075.0625,1796.2656 Q1075.0625,1798.3594 1075.75,1799.4375 Q1076.4375,1800.5 1077.7813,1800.5 Q1078.4063,1800.5 1079,1800.2344 Q1079.5938,1799.9531 1080.2188,1799.375 L1080.2188,1802.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="1097.75" y="1800.6074">package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="887.5" x2="1329.5" y1="1812.4531" y2="1812.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="892.5" y="1818.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="894.5" y="1820.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="906.5" y="1826.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="887.5" x2="1329.5" y1="1833.2578" y2="1833.2578"/><ellipse cx="897.5" cy="1844.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="906.5" y="1847.4683">package(const common::model::namespace_ &amp; using_namespace) : void</text><ellipse cx="897.5" cy="1857.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="906.5" y="1860.2729">package(const package &amp; ) : void</text><ellipse cx="897.5" cy="1869.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="906.5" y="1873.0776">package(package &amp;&amp; ) = default : void</text><ellipse cx="897.5" cy="1882.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="906.5" y="1885.8823">operator=(const package &amp; ) : package &amp;</text><ellipse cx="897.5" cy="1895.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="906.5" y="1898.687">operator=(package &amp;&amp; ) : package &amp;</text><ellipse cx="897.5" cy="1908.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="906.5" y="1911.4917">type_name() const : std::string</text><ellipse cx="897.5" cy="1921.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="906.5" y="1924.2964">full_name(bool relative) const : std::string</text><ellipse cx="897.5" cy="1933.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="906.5" y="1937.1011">is_deprecated() const : bool</text><ellipse cx="897.5" cy="1946.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="906.5" y="1949.9058">set_deprecated(bool deprecated) : void</text><ellipse cx="897.5" cy="1959.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="906.5" y="1962.7104">add_package(std::unique_ptr&lt;common::model::package&gt; &amp;&amp; p) : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="71" x="6562" y="1520.9531"/><ellipse cx="6577" cy="1536.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6581.1094,1542.9531 L6573.3906,1542.9531 L6573.3906,1530.5625 L6581.1094,1530.5625 L6581.1094,1532.7188 L6575.8438,1532.7188 L6575.8438,1535.3906 L6580.6094,1535.3906 L6580.6094,1537.5469 L6575.8438,1537.5469 L6575.8438,1540.7969 L6581.1094,1540.7969 L6581.1094,1542.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="6591" y="1541.1074">filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6563" x2="6632" y1="1552.9531" y2="1552.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="6568" y="1567.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6568" y="1579.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6563" x2="6632" y1="1586.5625" y2="1586.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="538" x="5359.5" y="794.4531"/><ellipse cx="5588.75" cy="810.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5591.7188,816.0938 Q5591.1406,816.3906 5590.5,816.5313 Q5589.8594,816.6875 5589.1563,816.6875 Q5586.6563,816.6875 5585.3281,815.0469 Q5584.0156,813.3906 5584.0156,810.2656 Q5584.0156,807.1406 5585.3281,805.4844 Q5586.6563,803.8281 5589.1563,803.8281 Q5589.8594,803.8281 5590.5,803.9844 Q5591.1563,804.1406 5591.7188,804.4375 L5591.7188,807.1563 Q5591.0938,806.5781 5590.5,806.3125 Q5589.9063,806.0313 5589.2813,806.0313 Q5587.9375,806.0313 5587.25,807.1094 Q5586.5625,808.1719 5586.5625,810.2656 Q5586.5625,812.3594 5587.25,813.4375 Q5587.9375,814.5 5589.2813,814.5 Q5589.9063,814.5 5590.5,814.2344 Q5591.0938,813.9531 5591.7188,813.375 L5591.7188,816.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="5609.25" y="814.6074">filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5360.5" x2="5896.5" y1="826.4531" y2="826.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5360.5" x2="5896.5" y1="834.4531" y2="834.4531"/><ellipse cx="5370.5" cy="845.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5379.5" y="848.6636">filter_visitor(filter_t type) : void</text><ellipse cx="5370.5" cy="858.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5379.5" y="861.4683">~filter_visitor() = default : void</text><ellipse cx="5370.5" cy="871.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="5379.5" y="874.2729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text><ellipse cx="5370.5" cy="883.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="501" x="5379.5" y="887.0776">match(const diagram &amp; d, const common::model::relationship_t &amp; r) const : tvl::value_t</text><ellipse cx="5370.5" cy="896.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="5379.5" y="899.8823">match(const diagram &amp; d, const common::model::access_t &amp; a) const : tvl::value_t</text><ellipse cx="5370.5" cy="909.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="5379.5" y="912.687">match(const diagram &amp; d, const common::model::namespace_ &amp; ns) const : tvl::value_t</text><ellipse cx="5370.5" cy="922.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="5379.5" y="925.4917">match(const diagram &amp; d, const common::model::source_file &amp; f) const : tvl::value_t</text><ellipse cx="5370.5" cy="935.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="5379.5" y="938.2964">match(const diagram &amp; d, const common::model::source_location &amp; f) const : tvl::value_t</text><ellipse cx="5370.5" cy="947.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5379.5" y="951.1011">is_inclusive() const : bool</text><ellipse cx="5370.5" cy="960.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5379.5" y="963.9058">is_exclusive() const : bool</text><ellipse cx="5370.5" cy="973.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5379.5" y="976.7104">type() const : filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="514" x="6668.5" y="1508.4531"/><ellipse cx="6887.25" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6890.2188,1530.0938 Q6889.6406,1530.3906 6889,1530.5313 Q6888.3594,1530.6875 6887.6563,1530.6875 Q6885.1563,1530.6875 6883.8281,1529.0469 Q6882.5156,1527.3906 6882.5156,1524.2656 Q6882.5156,1521.1406 6883.8281,1519.4844 Q6885.1563,1517.8281 6887.6563,1517.8281 Q6888.3594,1517.8281 6889,1517.9844 Q6889.6563,1518.1406 6890.2188,1518.4375 L6890.2188,1521.1563 Q6889.5938,1520.5781 6889,1520.3125 Q6888.4063,1520.0313 6887.7813,1520.0313 Q6886.4375,1520.0313 6885.75,1521.1094 Q6885.0625,1522.1719 6885.0625,1524.2656 Q6885.0625,1526.3594 6885.75,1527.4375 Q6886.4375,1528.5 6887.7813,1528.5 Q6888.4063,1528.5 6889,1528.2344 Q6889.5938,1527.9531 6890.2188,1527.375 L6890.2188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="6907.75" y="1528.6074">anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6669.5" x2="7181.5" y1="1540.4531" y2="1540.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6669.5" x2="7181.5" y1="1548.4531" y2="1548.4531"/><ellipse cx="6679.5" cy="1559.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="6688.5" y="1562.6636">anyof_filter(filter_t type, std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt; filters) : void</text><ellipse cx="6679.5" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6688.5" y="1575.4683">~anyof_filter() = default : void</text><ellipse cx="6679.5" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="6688.5" y="1588.2729">match(const diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text><ellipse cx="6679.5" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="6688.5" y="1601.0776">match(const diagram &amp; d, const common::model::source_file &amp; e) const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="467" x="3103" y="1508.4531"/><ellipse cx="3278.75" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3281.7188,1530.0938 Q3281.1406,1530.3906 3280.5,1530.5313 Q3279.8594,1530.6875 3279.1563,1530.6875 Q3276.6563,1530.6875 3275.3281,1529.0469 Q3274.0156,1527.3906 3274.0156,1524.2656 Q3274.0156,1521.1406 3275.3281,1519.4844 Q3276.6563,1517.8281 3279.1563,1517.8281 Q3279.8594,1517.8281 3280.5,1517.9844 Q3281.1563,1518.1406 3281.7188,1518.4375 L3281.7188,1521.1563 Q3281.0938,1520.5781 3280.5,1520.3125 Q3279.9063,1520.0313 3279.2813,1520.0313 Q3277.9375,1520.0313 3277.25,1521.1094 Q3276.5625,1522.1719 3276.5625,1524.2656 Q3276.5625,1526.3594 3277.25,1527.4375 Q3277.9375,1528.5 3279.2813,1528.5 Q3279.9063,1528.5 3280.5,1528.2344 Q3281.0938,1527.9531 3281.7188,1527.375 L3281.7188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="107" x="3299.25" y="1528.6074">namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3104" x2="3569" y1="1540.4531" y2="1540.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3104" x2="3569" y1="1548.4531" y2="1548.4531"/><ellipse cx="3114" cy="1559.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="3123" y="1562.6636">namespace_filter(filter_t type, std::vector&lt;namespace_&gt; namespaces) : void</text><ellipse cx="3114" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3123" y="1575.4683">~namespace_filter() = default : void</text><ellipse cx="3114" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="3123" y="1588.2729">match(const diagram &amp; d, const namespace_ &amp; ns) const : tvl::value_t</text><ellipse cx="3114" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3123" y="1601.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="414" x="3605.5" y="1508.4531"/><ellipse cx="3765.75" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3768.7188,1530.0938 Q3768.1406,1530.3906 3767.5,1530.5313 Q3766.8594,1530.6875 3766.1563,1530.6875 Q3763.6563,1530.6875 3762.3281,1529.0469 Q3761.0156,1527.3906 3761.0156,1524.2656 Q3761.0156,1521.1406 3762.3281,1519.4844 Q3763.6563,1517.8281 3766.1563,1517.8281 Q3766.8594,1517.8281 3767.5,1517.9844 Q3768.1563,1518.1406 3768.7188,1518.4375 L3768.7188,1521.1563 Q3768.0938,1520.5781 3767.5,1520.3125 Q3766.9063,1520.0313 3766.2813,1520.0313 Q3764.9375,1520.0313 3764.25,1521.1094 Q3763.5625,1522.1719 3763.5625,1524.2656 Q3763.5625,1526.3594 3764.25,1527.4375 Q3764.9375,1528.5 3766.2813,1528.5 Q3766.9063,1528.5 3767.5,1528.2344 Q3768.0938,1527.9531 3768.7188,1527.375 L3768.7188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="3786.25" y="1528.6074">element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3606.5" x2="4018.5" y1="1540.4531" y2="1540.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3611.5" y="1546.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3613.5" y="1548.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3625.5" y="1554.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3606.5" x2="4018.5" y1="1561.2578" y2="1561.2578"/><ellipse cx="3616.5" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="3625.5" y="1575.4683">element_filter(filter_t type, std::vector&lt;std::string&gt; elements) : void</text><ellipse cx="3616.5" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3625.5" y="1588.2729">~element_filter() = default : void</text><ellipse cx="3616.5" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3625.5" y="1601.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[97547c2450036638bcec6f72d4b27f74]
class C_0002051668456717902300--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" target="_top" title="element_type_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="element_type_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="4054.5" y="1508.4531"/><ellipse cx="4228.25" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4231.2188,1530.0938 Q4230.6406,1530.3906 4230,1530.5313 Q4229.3594,1530.6875 4228.6563,1530.6875 Q4226.1563,1530.6875 4224.8281,1529.0469 Q4223.5156,1527.3906 4223.5156,1524.2656 Q4223.5156,1521.1406 4224.8281,1519.4844 Q4226.1563,1517.8281 4228.6563,1517.8281 Q4229.3594,1517.8281 4230,1517.9844 Q4230.6563,1518.1406 4231.2188,1518.4375 L4231.2188,1521.1563 Q4230.5938,1520.5781 4230,1520.3125 Q4229.4063,1520.0313 4228.7813,1520.0313 Q4227.4375,1520.0313 4226.75,1521.1094 Q4226.0625,1522.1719 4226.0625,1524.2656 Q4226.0625,1526.3594 4226.75,1527.4375 Q4227.4375,1528.5 4228.7813,1528.5 Q4229.4063,1528.5 4230,1528.2344 Q4230.5938,1527.9531 4231.2188,1527.375 L4231.2188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="4248.75" y="1528.6074">element_type_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4055.5" x2="4527.5" y1="1540.4531" y2="1540.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4060.5" y="1546.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4062.5" y="1548.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4074.5" y="1554.6636">element_types_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4055.5" x2="4527.5" y1="1561.2578" y2="1561.2578"/><ellipse cx="4065.5" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="4074.5" y="1575.4683">element_type_filter(filter_t type, std::vector&lt;std::string&gt; element_types) : void</text><ellipse cx="4065.5" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4074.5" y="1588.2729">~element_type_filter() = default : void</text><ellipse cx="4065.5" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4074.5" y="1601.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="398" x="4563.5" y="1508.4531"/><ellipse cx="4713.75" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4716.7188,1530.0938 Q4716.1406,1530.3906 4715.5,1530.5313 Q4714.8594,1530.6875 4714.1563,1530.6875 Q4711.6563,1530.6875 4710.3281,1529.0469 Q4709.0156,1527.3906 4709.0156,1524.2656 Q4709.0156,1521.1406 4710.3281,1519.4844 Q4711.6563,1517.8281 4714.1563,1517.8281 Q4714.8594,1517.8281 4715.5,1517.9844 Q4716.1563,1518.1406 4716.7188,1518.4375 L4716.7188,1521.1563 Q4716.0938,1520.5781 4715.5,1520.3125 Q4714.9063,1520.0313 4714.2813,1520.0313 Q4712.9375,1520.0313 4712.25,1521.1094 Q4711.5625,1522.1719 4711.5625,1524.2656 Q4711.5625,1526.3594 4712.25,1527.4375 Q4712.9375,1528.5 4714.2813,1528.5 Q4714.9063,1528.5 4715.5,1528.2344 Q4716.0938,1527.9531 4716.7188,1527.375 L4716.7188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="4734.25" y="1528.6074">subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4564.5" x2="4960.5" y1="1540.4531" y2="1540.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4569.5" y="1546.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4571.5" y="1548.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4583.5" y="1554.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4564.5" x2="4960.5" y1="1561.2578" y2="1561.2578"/><ellipse cx="4574.5" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="4583.5" y="1575.4683">subclass_filter(filter_t type, std::vector&lt;std::string&gt; roots) : void</text><ellipse cx="4574.5" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4583.5" y="1588.2729">~subclass_filter() = default : void</text><ellipse cx="4574.5" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4583.5" y="1601.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="398" x="4996.5" y="1508.4531"/><ellipse cx="5149.75" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5152.7188,1530.0938 Q5152.1406,1530.3906 5151.5,1530.5313 Q5150.8594,1530.6875 5150.1563,1530.6875 Q5147.6563,1530.6875 5146.3281,1529.0469 Q5145.0156,1527.3906 5145.0156,1524.2656 Q5145.0156,1521.1406 5146.3281,1519.4844 Q5147.6563,1517.8281 5150.1563,1517.8281 Q5150.8594,1517.8281 5151.5,1517.9844 Q5152.1563,1518.1406 5152.7188,1518.4375 L5152.7188,1521.1563 Q5152.0938,1520.5781 5151.5,1520.3125 Q5150.9063,1520.0313 5150.2813,1520.0313 Q5148.9375,1520.0313 5148.25,1521.1094 Q5147.5625,1522.1719 5147.5625,1524.2656 Q5147.5625,1526.3594 5148.25,1527.4375 Q5148.9375,1528.5 5150.2813,1528.5 Q5150.9063,1528.5 5151.5,1528.2344 Q5152.0938,1527.9531 5152.7188,1527.375 L5152.7188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="5170.25" y="1528.6074">parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4997.5" x2="5393.5" y1="1540.4531" y2="1540.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5002.5" y="1546.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5004.5" y="1548.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="5016.5" y="1554.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4997.5" x2="5393.5" y1="1561.2578" y2="1561.2578"/><ellipse cx="5007.5" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="5016.5" y="1575.4683">parents_filter(filter_t type, std::vector&lt;std::string&gt; roots) : void</text><ellipse cx="5007.5" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="5016.5" y="1588.2729">~parents_filter() = default : void</text><ellipse cx="5007.5" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5016.5" y="1601.0776">match(const diagram &amp; d, const element &amp; e) const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="942" x="7217.5" y="1469.9531"/><ellipse cx="7424.25" cy="1485.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7427.2188,1491.5938 Q7426.6406,1491.8906 7426,1492.0313 Q7425.3594,1492.1875 7424.6563,1492.1875 Q7422.1563,1492.1875 7420.8281,1490.5469 Q7419.5156,1488.8906 7419.5156,1485.7656 Q7419.5156,1482.6406 7420.8281,1480.9844 Q7422.1563,1479.3281 7424.6563,1479.3281 Q7425.3594,1479.3281 7426,1479.4844 Q7426.6563,1479.6406 7427.2188,1479.9375 L7427.2188,1482.6563 Q7426.5938,1482.0781 7426,1481.8125 Q7425.4063,1481.5313 7424.7813,1481.5313 Q7423.4375,1481.5313 7422.75,1482.6094 Q7422.0625,1483.6719 7422.0625,1485.7656 Q7422.0625,1487.8594 7422.75,1488.9375 Q7423.4375,1490 7424.7813,1490 Q7425.4063,1490 7426,1489.7344 Q7426.5938,1489.4531 7427.2188,1488.875 L7427.2188,1491.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127" x="7444.75" y="1490.1074">edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="7771.5" y="1466.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="7772.5" y="1479.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7218.5" x2="8158.5" y1="1501.9531" y2="1501.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7223.5" y="1507.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1509.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="7237.5" y="1516.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7223.5" y="1520.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1522.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="7237.5" y="1528.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7223.5" y="1533.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1535.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="7237.5" y="1541.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7223.5" y="1546.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1548.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="7237.5" y="1554.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7218.5" x2="8158.5" y1="1561.1719" y2="1561.1719"/><ellipse cx="7228.5" cy="1572.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="916" x="7237.5" y="1575.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;(filter_t type, relationship_t relationship, std::vector&lt;std::string&gt; roots, bool forward = false) : void</text><ellipse cx="7228.5" cy="1584.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="7237.5" y="1588.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="7228.5" cy="1597.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="7237.5" y="1600.9917">match(const diagram &amp; d, const MatchOverrideT &amp; e) const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1607.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="7237.5" y="1613.7964">add_parents(const DiagramT &amp; cd) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1620.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="7237.5" y="1626.6011">init(const DiagramT &amp; cd) const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7225.5" y="1633.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="623" x="7237.5" y="1639.4058">add_adjacent&lt;C,D&gt;(const C &amp; from, const D &amp; to, const std::vector&lt;relationship_t&gt; &amp; relationships) : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="8194.5" y="1514.9531"/><ellipse cx="8373.25" cy="1530.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8376.2188,1536.5938 Q8375.6406,1536.8906 8375,1537.0313 Q8374.3594,1537.1875 8373.6563,1537.1875 Q8371.1563,1537.1875 8369.8281,1535.5469 Q8368.5156,1533.8906 8368.5156,1530.7656 Q8368.5156,1527.6406 8369.8281,1525.9844 Q8371.1563,1524.3281 8373.6563,1524.3281 Q8374.3594,1524.3281 8375,1524.4844 Q8375.6563,1524.6406 8376.2188,1524.9375 L8376.2188,1527.6563 Q8375.5938,1527.0781 8375,1526.8125 Q8374.4063,1526.5313 8373.7813,1526.5313 Q8372.4375,1526.5313 8371.75,1527.6094 Q8371.0625,1528.6719 8371.0625,1530.7656 Q8371.0625,1532.8594 8371.75,1533.9375 Q8372.4375,1535 8373.7813,1535 Q8374.4063,1535 8375,1534.7344 Q8375.5938,1534.4531 8376.2188,1533.875 L8376.2188,1536.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="8393.75" y="1535.1074">relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8195.5" x2="8667.5" y1="1546.9531" y2="1546.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8195.5" x2="8667.5" y1="1554.9531" y2="1554.9531"/><ellipse cx="8205.5" cy="1565.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="8214.5" y="1569.1636">relationship_filter(filter_t type, std::vector&lt;relationship_t&gt; relationships) : void</text><ellipse cx="8205.5" cy="1578.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="8214.5" y="1581.9683">~relationship_filter() = default : void</text><ellipse cx="8205.5" cy="1591.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="8214.5" y="1594.7729">match(const diagram &amp; d, const relationship_t &amp; r) const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="402" x="2665.5" y="1514.9531"/><ellipse cx="2823.25" cy="1530.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2826.2188,1536.5938 Q2825.6406,1536.8906 2825,1537.0313 Q2824.3594,1537.1875 2823.6563,1537.1875 Q2821.1563,1537.1875 2819.8281,1535.5469 Q2818.5156,1533.8906 2818.5156,1530.7656 Q2818.5156,1527.6406 2819.8281,1525.9844 Q2821.1563,1524.3281 2823.6563,1524.3281 Q2824.3594,1524.3281 2825,1524.4844 Q2825.6563,1524.6406 2826.2188,1524.9375 L2826.2188,1527.6563 Q2825.5938,1527.0781 2825,1526.8125 Q2824.4063,1526.5313 2823.7813,1526.5313 Q2822.4375,1526.5313 2821.75,1527.6094 Q2821.0625,1528.6719 2821.0625,1530.7656 Q2821.0625,1532.8594 2821.75,1533.9375 Q2822.4375,1535 2823.7813,1535 Q2824.4063,1535 2825,1534.7344 Q2825.5938,1534.4531 2826.2188,1533.875 L2826.2188,1536.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="2843.75" y="1535.1074">access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2666.5" x2="3066.5" y1="1546.9531" y2="1546.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2666.5" x2="3066.5" y1="1554.9531" y2="1554.9531"/><ellipse cx="2676.5" cy="1565.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2685.5" y="1569.1636">access_filter(filter_t type, std::vector&lt;access_t&gt; access) : void</text><ellipse cx="2676.5" cy="1578.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2685.5" y="1581.9683">~access_filter() = default : void</text><ellipse cx="2676.5" cy="1591.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2685.5" y="1594.7729">match(const diagram &amp; d, const access_t &amp; a) const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="397" x="5430" y="1508.4531"/><ellipse cx="5583.75" cy="1524.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5586.7188,1530.0938 Q5586.1406,1530.3906 5585.5,1530.5313 Q5584.8594,1530.6875 5584.1563,1530.6875 Q5581.6563,1530.6875 5580.3281,1529.0469 Q5579.0156,1527.3906 5579.0156,1524.2656 Q5579.0156,1521.1406 5580.3281,1519.4844 Q5581.6563,1517.8281 5584.1563,1517.8281 Q5584.8594,1517.8281 5585.5,1517.9844 Q5586.1563,1518.1406 5586.7188,1518.4375 L5586.7188,1521.1563 Q5586.0938,1520.5781 5585.5,1520.3125 Q5584.9063,1520.0313 5584.2813,1520.0313 Q5582.9375,1520.0313 5582.25,1521.1094 Q5581.5625,1522.1719 5581.5625,1524.2656 Q5581.5625,1526.3594 5582.25,1527.4375 Q5582.9375,1528.5 5584.2813,1528.5 Q5584.9063,1528.5 5585.5,1528.2344 Q5586.0938,1527.9531 5586.7188,1527.375 L5586.7188,1530.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="5604.25" y="1528.6074">context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5431" x2="5826" y1="1540.4531" y2="1540.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5436" y="1546.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5438" y="1548.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="5450" y="1554.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5431" x2="5826" y1="1561.2578" y2="1561.2578"/><ellipse cx="5441" cy="1572.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="5450" y="1575.4683">context_filter(filter_t type, std::vector&lt;std::string&gt; context) : void</text><ellipse cx="5441" cy="1585.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5450" y="1588.2729">~context_filter() = default : void</text><ellipse cx="5441" cy="1597.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="5450" y="1601.0776">match(const diagram &amp; d, const element &amp; r) const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="664" x="5862.5" y="1495.4531"/><ellipse cx="6155.25" cy="1511.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6158.2188,1517.0938 Q6157.6406,1517.3906 6157,1517.5313 Q6156.3594,1517.6875 6155.6563,1517.6875 Q6153.1563,1517.6875 6151.8281,1516.0469 Q6150.5156,1514.3906 6150.5156,1511.2656 Q6150.5156,1508.1406 6151.8281,1506.4844 Q6153.1563,1504.8281 6155.6563,1504.8281 Q6156.3594,1504.8281 6157,1504.9844 Q6157.6563,1505.1406 6158.2188,1505.4375 L6158.2188,1508.1563 Q6157.5938,1507.5781 6157,1507.3125 Q6156.4063,1507.0313 6155.7813,1507.0313 Q6154.4375,1507.0313 6153.75,1508.1094 Q6153.0625,1509.1719 6153.0625,1511.2656 Q6153.0625,1513.3594 6153.75,1514.4375 Q6154.4375,1515.5 6155.7813,1515.5 Q6156.4063,1515.5 6157,1515.2344 Q6157.5938,1514.9531 6158.2188,1514.375 L6158.2188,1517.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="6175.75" y="1515.6074">paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5863.5" x2="6525.5" y1="1527.4531" y2="1527.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5868.5" y="1533.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5870.5" y="1535.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5882.5" y="1541.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5868.5" y="1546.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5870.5" y="1548.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5882.5" y="1554.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5863.5" x2="6525.5" y1="1561.0625" y2="1561.0625"/><ellipse cx="5873.5" cy="1572.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="5882.5" y="1575.2729">paths_filter(filter_t type, const std::filesystem::path &amp; root, const std::vector&lt;std::filesystem::path&gt; &amp; p) : void</text><ellipse cx="5873.5" cy="1584.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="5882.5" y="1588.0776">~paths_filter() = default : void</text><ellipse cx="5873.5" cy="1597.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="5882.5" y="1600.8823">match(const diagram &amp; d, const common::model::source_file &amp; r) const : tvl::value_t</text><ellipse cx="5873.5" cy="1610.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="5882.5" y="1613.687">match(const diagram &amp; d, const common::model::source_location &amp; sl) const : tvl::value_t</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fxz0hh69jp3wf)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="511" x="5091" y="131.4531"/><ellipse cx="5299.75" cy="147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5302.7188,153.0938 Q5302.1406,153.3906 5301.5,153.5313 Q5300.8594,153.6875 5300.1563,153.6875 Q5297.6563,153.6875 5296.3281,152.0469 Q5295.0156,150.3906 5295.0156,147.2656 Q5295.0156,144.1406 5296.3281,142.4844 Q5297.6563,140.8281 5300.1563,140.8281 Q5300.8594,140.8281 5301.5,140.9844 Q5302.1563,141.1406 5302.7188,141.4375 L5302.7188,144.1563 Q5302.0938,143.5781 5301.5,143.3125 Q5300.9063,143.0313 5300.2813,143.0313 Q5298.9375,143.0313 5298.25,144.1094 Q5297.5625,145.1719 5297.5625,147.2656 Q5297.5625,149.3594 5298.25,150.4375 Q5298.9375,151.5 5300.2813,151.5 Q5300.9063,151.5 5301.5,151.2344 Q5302.0938,150.9531 5302.7188,150.375 L5302.7188,153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="5320.25" y="151.6074">diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5092" x2="5601" y1="163.4531" y2="163.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5092" x2="5601" y1="171.4531" y2="171.4531"/><ellipse cx="5102" cy="182.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="5111" y="185.6636">diagram_filter(const common::model::diagram &amp; d, const config::diagram &amp; c) : void</text><ellipse cx="5102" cy="195.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="5111" y="198.4683">add_inclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text><ellipse cx="5102" cy="208.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="5111" y="211.2729">add_exclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text><ellipse cx="5102" cy="220.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="5111" y="224.0776">should_include(const namespace_ &amp; ns, const std::string &amp; name) const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5099" y="230.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5111" y="236.8823">init_filters(const config::diagram &amp; c) : void</text><ellipse cx="5102" cy="246.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="5111" y="249.687">should_include&lt;T&gt;(const T &amp; e) : _Bool</text></a><!--MD5=[d3aab55902f013c3cb0f0512036c505c]
reverse link C_0000845978329661395972 to C_0002193110380171976294--><path d="M9084.5,1640.6231 C9084.5,1699.1631 9084.5,1776.0531 9084.5,1825.2431 " fill="none" id="C_0000845978329661395972&lt;-C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9084.5,1627.3031,9080.5,1633.3031,9084.5,1639.3031,9088.5,1633.3031,9084.5,1627.3031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9090.5" cy="1736.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="13" x="9097.5" y="1740.02">pr</text><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M1433.28,1899.0531 C1406.86,1925.3431 1360.65,1971.3331 1309.16,2022.5731 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1313.99,2027.6431,1294.88,2036.7831,1304.12,2017.7231,1313.99,2027.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M8833.03,1355.1531 C8825.09,1413.3531 8818.02,1465.1831 8813.03,1501.7331 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8834.79,1342.2431,8830.0152,1347.6469,8833.1669,1354.1328,8837.9417,1348.729,8834.79,1342.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8833.5" y="1378.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="8843.5" y="1385.02">kind_</text><!--MD5=[7566fda333217dfb046318d35641bbd5]
reverse link C_0000178138562743079529 to C_0000845978329661395972--><path d="M9027.51,1354.7731 C9042.09,1406.4831 9055.25,1453.1931 9065.25,1488.6531 " fill="none" id="C_0000178138562743079529&lt;-C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9023.98,1342.2431,9021.7584,1349.1035,9027.2366,1353.7928,9029.4582,1346.9324,9023.98,1342.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9036.5" y="1378.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="9046.5" y="1385.02">context_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M9577.68,846.1531 C9592.99,858.2031 9601.5,872.4631 9601.5,888.9531 C9601.5,909.0531 9588.85,925.8531 9566.66,939.3531 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9566.66,838.5531,9569.3256,845.2535,9576.5358,845.3699,9573.8702,838.6696,9566.66,838.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9609.5" y="886.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="9619.5" y="893.52">template_params_</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M2643.85,1696.4731 C2645.07,1696.6331 2646.28,1696.7931 2647.5,1696.9531 C2907.16,1731.1031 7084.4,1856.0131 7629.92,1872.2131 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2630.77,1694.6831,2636.1745,1699.4571,2642.66,1696.3045,2637.2554,1691.5305,2630.77,1694.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3614.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3624.5" y="1740.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M2198.36,1706.4731 C2244.47,1751.8631 2291.7,1798.3531 2324.66,1830.8031 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2188.86,1697.1131,2190.3346,1704.1718,2197.4175,1705.5256,2195.9429,1698.4669,2188.86,1697.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2231.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2241.5" y="1740.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1583.47,308.1631 C1530.52,526.7231 1446.89,1014.0831 1649.5,1341.9531 C1667.49,1371.0731 1690.89,1396.5031 1717.34,1418.6531 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1576.74,306.2331,1588.33,288.4931,1590.33,309.5931,1576.74,306.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1119.04,947.8731 C1202.16,1050.1031 1388.45,1263.5631 1588.5,1388.9531 C1605.25,1399.4531 1622.75,1409.4331 1640.73,1418.8931 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1113.47,952.1231,1106.36,932.1531,1124.37,943.3331,1113.47,952.1231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1897.05,1066.5931 C1931.11,1176.8731 1974.32,1316.7831 2005.87,1418.9131 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1893.16,1053.9731,1891.1059,1060.8855,1896.6964,1065.4402,1898.7506,1058.5278,1893.16,1053.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1996.5" y="1378.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2006.5" y="1385.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1651.72,308.0831 C1688.88,421.0231 1746.37,595.7731 1788.53,723.9231 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1644.97,309.9631,1645.37,288.7731,1658.27,305.5831,1644.97,309.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M2048.14,326.8931 C2006.81,439.6631 1947.14,602.4531 1902.72,723.6531 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2041.67,324.2031,2055.13,307.8331,2054.81,329.0231,2041.67,324.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1376.24,1662.9731 C1391.66,1683.1631 1406.21,1704.9231 1417.5,1726.9531 C1438.39,1767.7231 1448.88,1820.7531 1453.47,1850.6931 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1368.12,1652.5631,1368.6608,1659.7539,1375.5064,1662.0204,1374.9657,1654.8296,1368.12,1652.5631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1427.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="1437.5" y="1740.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1253.8,1665.9531 C1252.8,1693.2831 1257.17,1721.3131 1272.5,1743.9531 C1292.63,1773.6831 1317.11,1754.8431 1347.5,1773.9531 C1381.85,1795.5531 1415.32,1828.5831 1435.91,1850.7031 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1254.7,1652.6231,1250.3068,1658.3415,1253.8956,1664.5961,1258.2888,1658.8777,1254.7,1652.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1275.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="1285.5" y="1740.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M1855.98,1074.2431 C1853.12,1181.6531 1829.29,1310.9131 1743.5,1388.9531 C1694.76,1433.2931 1509.37,1393.7131 1448.5,1418.9531 C1422.61,1429.6931 1397.56,1445.7531 1375.04,1463.1631 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1848.98,1074.0031,1856.28,1054.1131,1862.98,1074.2131,1848.98,1074.0031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M8896.5,295.1431 C8896.5,334.8731 8896.5,383.5531 8896.5,435.7731 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8896.5,282.0231,8892.5,288.0231,8896.5,294.0231,8900.5,288.0231,8896.5,282.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8899.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="8909.5" y="402.02">templates_</text><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M656.34,1899.1531 C673.37,1919.7931 699.37,1950.5531 723.5,1975.9531 C738.11,1991.3331 753.28,2006.9431 768.74,2022.5531 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="773.86,2017.7831,783,2036.8931,763.93,2027.6531,773.86,2017.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M711.25,1709.1931 C686.64,1764.1831 661.49,1820.3531 647.85,1850.8231 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="716.66,1697.1131,710.5576,1700.9551,711.757,1708.0658,717.8594,1704.2238,716.66,1697.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="703.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="713.5" y="1740.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M787.15,1710.3031 C789.7,1754.9631 792.29,1800.2731 794.09,1831.8631 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="786.4,1697.1131,782.7492,1703.3318,787.0853,1709.0935,790.7361,1702.8749,786.4,1697.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="792.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="802.5" y="1740.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1651.3,1042.3931 C1531.24,1134.6631 1371.11,1251.5531 1220.5,1341.9531 C1157.39,1379.8331 1086.64,1416.5931 1020.55,1448.6831 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1647.11,1036.7831,1667.22,1030.1231,1655.65,1047.8731,1647.11,1036.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1059.47,951.5931 C1037.88,1040.6831 992.02,1209.2731 926.5,1341.9531 C913.76,1367.7531 898.23,1393.9831 882.09,1418.8431 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1052.69,949.8531,1064.13,932.0231,1066.31,953.1031,1052.69,949.8531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M5049.82,686.8231 C5137.95,540.7031 5251.5,352.4631 5309.22,256.7531 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5042.98,698.1531,5049.5045,695.0821,5049.1791,687.8784,5042.6547,690.9494,5042.98,698.1531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5226.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="5236.5" y="402.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M5267.14,256.5131 C5225.6,291.8231 5176.29,338.9831 5141.5,388.9531 C5076.93,481.6931 5026.1,597.1131 4990.31,693.5731 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4988.51,698.4431,4995.3896,691.3954,4990.2484,693.7551,4987.8887,688.6139,4988.51,698.4431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5144.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="5154.5" y="402.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M1218.95,1670.4831 C1199.44,1706.4331 1178.03,1745.8731 1159.29,1780.3831 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1212.96,1666.8431,1228.66,1652.6131,1225.27,1673.5231,1212.96,1666.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M1075.72,952.3231 C1081.68,1119.9931 1098.09,1581.2431 1105.17,1780.3831 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1068.72,952.4731,1075,932.2331,1082.71,951.9731,1068.72,952.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M5898.42,988.6031 C6100.33,1074.6231 6370.35,1217.4231 6543.5,1418.9531 C6568.73,1448.3231 6582.96,1490.8531 6590.4,1520.9231 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5886.44,983.5231,5890.4044,989.5467,5897.4894,988.204,5893.525,982.1804,5886.44,983.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6508.5" y="1378.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="6518.5" y="1385.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M6878.81,1498.0131 C6845.07,1458.3831 6796.59,1407.1531 6745.5,1371.9531 C6479.93,1189.0031 6133.79,1052.8231 5897.67,972.7031 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6887.28,1508.0831,6886.4866,1500.9158,6879.5654,1498.8915,6880.3588,1506.0589,6887.28,1508.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6771.5" y="1378.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="6781.5" y="1385.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M5828.5,992.8031 C6112.35,1138.7831 6620.89,1400.3031 6830.85,1508.2731 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5825.13,998.9431,5810.55,983.5731,5831.54,986.4931,5825.13,998.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M3254.59,1614.5131 C3207.01,1643.9831 3144.72,1677.9431 3084.5,1696.9531 C2904.12,1753.9031 2849.76,1725.5231 2661.5,1743.9531 C2504.35,1759.3431 2464.6,1758.0731 2307.5,1773.9531 C2029.99,1802.0131 1702.48,1842.6131 1547.08,1862.3331 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3265.74,1607.5231,3258.5316,1607.3254,3255.5766,1613.9032,3262.785,1614.101,3265.74,1607.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2960.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="2970.5" y="1740.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M5591.82,1002.3731 C5549.97,1110.4431 5470.15,1267.9631 5341.5,1341.9531 C5304.25,1363.3831 4611.44,1370.0931 4568.5,1371.9531 C4132.41,1390.8631 4007.57,1300.3031 3587.5,1418.9531 C3521.1,1437.7031 3452.94,1476.6731 3404.44,1508.4231 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5585.34,999.7131,5598.95,983.4631,5598.44,1004.6531,5585.34,999.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M5591.31,1002.3031 C5549.17,1109.9331 5469.21,1266.7831 5341.5,1341.9531 C5310.21,1360.3731 4071.13,1408.0331 4036.5,1418.9531 C3976.17,1437.9831 3915.55,1476.8131 3872.62,1508.4531 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5584.83,999.6631,5598.5,983.4731,5597.91,1004.6531,5584.83,999.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc75b97331daf477f1c24925190464b7]
reverse link C_0000469458052685692314 to C_0002051668456717902300--><path d="M5590.32,1002.2331 C5547.61,1109.0631 5467.41,1264.6231 5341.5,1341.9531 C5265.78,1388.4531 4630.47,1392.9431 4545.5,1418.9531 C4479.64,1439.1131 4411.39,1477.3231 4362.24,1508.4331 " fill="none" id="C_0000469458052685692314&lt;-C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5583.82,999.6331,5597.61,983.5431,5596.86,1004.7231,5583.82,999.6331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M5587.03,1002.3631 C5542.54,1106.8331 5461.65,1258.5031 5341.5,1341.9531 C5206.04,1436.0331 5131.12,1356.4431 4978.5,1418.9531 C4923.32,1441.5531 4866.73,1478.3031 4825.32,1508.2031 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5580.63,999.5231,5594.79,983.7531,5593.55,1004.9031,5580.63,999.5231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M5559.46,1000.7731 C5501.91,1092.6531 5417.36,1226.4431 5341.5,1341.9531 C5303.73,1399.4631 5259.15,1464.7531 5229.27,1508.1431 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5553.7,996.7931,5570.24,983.5531,5565.57,1004.2131,5553.7,996.7931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M7688.5,1659.5231 C7688.5,1696.1031 7688.5,1737.4131 7688.5,1773.9331 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7688.5,1646.2831,7684.5,1652.2831,7688.5,1658.2831,7692.5,1652.2831,7688.5,1646.2831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7691.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="7701.5" y="1740.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M5916.59,983.2331 C6315.54,1112.4131 7030.88,1344.0231 7419.46,1469.8431 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5914.42,989.8831,5897.54,977.0631,5918.73,976.5631,5914.42,989.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M8349.13,1607.5631 C8299.94,1635.5731 8235.7,1670.3731 8176.5,1696.9531 C8025.43,1764.7831 7839.81,1826.4331 7747.07,1855.8231 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8360.67,1600.9631,8353.4757,1600.4709,8350.2543,1606.9225,8357.4486,1607.4147,8360.67,1600.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8101.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="8111.5" y="1740.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M5917.85,922.1631 C6398.48,981.7531 7386.69,1130.3131 8176.5,1418.9531 C8244.46,1443.7931 8316.51,1484.2431 8366.61,1514.9531 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5916.8,929.0831,5897.8,919.6931,5918.51,915.1931,5916.8,929.0831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2788.59,1608.2331 C2682.51,1675.3331 2496.24,1793.1531 2412.02,1846.4231 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2799.85,1601.1131,2792.641,1600.9372,2789.706,1607.524,2796.915,1607.6999,2799.85,1601.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2591.5" y="1733.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2601.5" y="1740.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M5592.32,1002.4431 C5550.76,1110.9631 5471.09,1269.1631 5341.5,1341.9531 C5302.21,1364.0231 3764.52,1369.8731 3719.5,1371.9531 C3437.25,1385.0131 3353.87,1330.5731 3085.5,1418.9531 C3022.54,1439.6831 2959.43,1482.3431 2917.24,1514.7731 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5585.85,999.7631,5599.39,983.4631,5598.97,1004.6531,5585.85,999.7631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M5628.5,1003.8831 C5628.5,1151.5831 5628.5,1402.7031 5628.5,1508.1031 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5621.5,1003.7531,5628.5,983.7531,5635.5,1003.7531,5621.5,1003.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M5721.21,999.2131 C5841.14,1140.5331 6046,1381.9531 6141.98,1495.0631 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5715.7,1003.5331,5708.09,983.7531,5726.37,994.4731,5715.7,1003.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5403.51,267.2831 C5429.16,302.4631 5458.17,346.2931 5478.5,388.9531 C5542.62,523.4931 5586.33,691.5331 5609.35,794.2331 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5395.68,256.6531,5396.023,263.8561,5402.8038,266.3098,5402.4608,259.1069,5395.68,256.6531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5487.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5497.5" y="402.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5357.75,269.4331 C5365.09,310.3931 5376.17,361.7231 5391.5,405.9531 C5440.2,546.4931 5520.21,699.0131 5573.62,794.0231 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5355.5,256.5231,5352.5943,263.1229,5357.5689,268.3434,5360.4745,261.7437,5355.5,256.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5394.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="5404.5" y="402.02">exclusive_</text><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[5b7e032bd111ee92656b8900da6e57da]
link C_0001623832985137466228 to C_0000202859212831973510--><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[bc4955a7f9e570c6929f34774fe76f0c]
@startuml
title clang-uml common diagram model
enum "diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators(const std::vector<std::shared_ptr<decorators::decorator>> & decorators) : void
+append(const decorated_element & de) : void
+comment() const : std::optional<comment_t>
+set_comment(const comment_t & c) : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location(std::string f, unsigned int l) : void
+file() const : const std::string &
+set_file(const std::string & file) : void
+file_relative() const : const std::string &
+set_file_relative(const std::string & file) : void
+line() const : unsigned int
+set_line(const unsigned int line) : void
+location_id() const : unsigned int
+set_location_id(unsigned int h) : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55{hash_}]]]
}
class "path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>(const std::string & ns) : void
+path<Sep>(container_type::const_iterator begin, container_type::const_iterator end) : void
+path<Sep>(const path<Sep> & right) : void
+operator=(const path<Sep> & right) = default : path<Sep> &
+path<Sep>(path<Sep> && right) = default : void
+operator=(path<Sep> && right) = default : path<Sep> &
+path<Sep>(std::initializer_list<std::string> ns) : void
+path<Sep>(const std::vector<std::string> & ns) : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|(const path<Sep> & right) const : path<Sep>
+operator|=(const path<Sep> & right) : void
+operator|(const std::string & right) const : path<Sep>
+operator|=(const std::string & right) : void
+operator[](const int index) : std::string &
+operator[](const int index) const : const std::string &
+append(const std::string & ns) : void
+append(const path<Sep> & ns) : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with(const path<Sep> & right) const : bool
+ends_with(const path<Sep> & right) const : bool
+common_path(const path<Sep> & right) const : path<Sep>
+relative_to(const path<Sep> & right) const : path<Sep>
+relative(const std::string & name) const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : path::container_type [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224{path_}]]]
}
class "ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29{value}]]]
}
enum "template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
enum "rpqualifier" as C_0002193110380171976294
enum C_0002193110380171976294 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "context" as C_0000845978329661395972
class C_0000845978329661395972 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46{context}]] {
+to_string() const : std::string
+operator==(const context & rhs) const : bool
+operator!=(const context & rhs) const : bool
+is_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47{is_const}]]]
+is_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48{is_volatile}]]]
+is_ref_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49{is_ref_const}]]]
+is_ref_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50{is_ref_volatile}]]]
}
class "path<ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67{template_parameter}]] {
{static} +make_template_type(const std::string & name, const std::optional<std::string> & default_value = = {}, bool is_variadic = false) : template_parameter
{static} +make_template_template_type(const std::string & name, const std::optional<std::string> & default_value = = {}, bool is_variadic = false) : template_parameter
{static} +make_non_type_template(const std::string & type, const std::optional<std::string> & name, const std::optional<std::string> & default_value = = {}, bool is_variadic = false) : template_parameter
{static} +make_argument(const std::string & type, const std::optional<std::string> & default_value = = {}) : template_parameter
{static} +make_unexposed_argument(const std::string & type, const std::optional<std::string> & default_value = = {}) : template_parameter
+set_type(const std::string & type) : void
+type() const : std::optional<std::string>
+set_id(const int64_t id) : void
+id() const : const std::optional<int64_t> &
+set_name(const std::string & name) : void
+name() const : std::optional<std::string>
+set_default_value(const std::string & value) : void
+default_value() const : const std::optional<std::string> &
+is_variadic(bool is_variadic) : void
+is_variadic() const : bool
+calculate_specialization_match(const template_parameter & base_template_parameter) const : int
+is_template_parameter() const : bool
+is_template_parameter(bool is_template_parameter) : void
+is_template_template_parameter() const : bool
+is_template_template_parameter(bool is_template_template_parameter) : void
+to_string(const namespace_ & using_namespace, bool relative, bool skip_qualifiers = false) const : std::string
+add_template_param(template_parameter && ct) : void
+add_template_param(const template_parameter & ct) : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+is_association() const : bool
+is_specialization() const : bool
+is_same_specialization(const template_parameter & other) const : bool
+find_nested_relationships(std::vector<std::pair<int64_t,common::model::relationship_t>> & nested_relationships, common::model::relationship_t hint, const std::function<bool (const std::string &)> & should_include) const : bool
+set_concept_constraint(std::string constraint) : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : template_parameter_kind_t
+set_kind(template_parameter_kind_t kind) : void
+is_unexposed() const : bool
+set_unexposed(bool unexposed) : void
+is_function_template(bool ft) : void
+is_function_template() const : bool
+is_member_pointer(bool m) : void
+is_member_pointer() const : bool
+is_data_pointer(bool m) : void
+is_data_pointer() const : bool
+is_array(bool a) : void
+is_array() const : bool
+push_context(const context & q) : void
+deduced_context() const : const std::deque<context> &
+deduced_context(const std::deque<context> & c) : void
+is_ellipsis(bool e) : void
+is_ellipsis() const : bool
+is_noexcept(bool e) : void
+is_noexcept() const : bool
-template_parameter() = default : void
-deduced_context_str() const : std::string
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201{is_template_template_parameter_}]]]
-is_ellipsis_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203{is_ellipsis_}]]]
-is_noexcept_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205{is_noexcept_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210{is_function_template_}]]]
-is_data_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212{is_data_pointer_}]]]
-is_member_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214{is_member_pointer_}]]]
-is_array_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216{is_array_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231{is_unexposed_}]]]
}
class "stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style(const std::string & style) : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30{style_}]]]
}
class "relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28{relationship}]] {
+relationship(relationship_t type, int64_t destination, access_t access = access_t::kPublic, std::string label = "", std::string multiplicity_source = "", std::string multiplicity_destination = "") : void
+~relationship() = default : void
+set_type(relationship_t type) : void
+type() const : relationship_t
+set_destination(int64_t destination) : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source(const std::string & multiplicity_source) : void
+multiplicity_source() const : std::string
+set_multiplicity_destination(const std::string & multiplicity_destination) : void
+multiplicity_destination() const : std::string
+set_label(const std::string & label) : void
+label() const : std::string
+set_access(access_t scope) : void
+access() const : access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64{label_}]]]
}
class "diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : diagram_element::id_t
+set_id(diagram_element::id_t id) : void
+alias() const : std::string
+set_name(const std::string & name) : void
+name() const : std::string
+type_name() const : std::string
+full_name(bool ) const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship(relationship && cr) : void
+append(const decorated_element & e) : void
+context() const : inja::json
+is_nested() const : bool
+nested(bool nested) : void
+complete() const : bool
+complete(bool completed) : void
-id_ : diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35{element}]] {
+element(namespace_ using_namespace) : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace(const namespace_ & ns) : void
+get_namespace() const : namespace_
+get_relative_namespace() const : namespace_
+path() const : const namespace_ &
+full_name(bool ) const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const namespace_ &
+context() const : inja::json
}
class "template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params(std::ostream & ostr, const common::model::namespace_ & using_namespace, bool relative) const : std::ostream &
+set_base_template(const std::string & full_name) : void
+base_template() const : std::string
+add_template(template_parameter && tmplt) : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match(const template_trait & other) const : int
+is_implicit() const : bool
+set_implicit(bool implicit) : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>(const nested_trait<T,Path> & ) : void
+nested_trait<T, Path>(nested_trait<T,Path> && ) = default : void
+operator=(const nested_trait<T,Path> & ) : nested_trait<T,Path> &
+operator=(nested_trait<T,Path> && ) = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element(const std::string & name) const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree(const int level) : void
+add_element<V=T>(std::unique_ptr<V> p) : _Bool
+add_element<V=T>(const Path & path, std::unique_ptr<V> p) : _Bool
+get_element<V=T>(const Path & path) : auto
+get_element_parent<V=T>(const T & element) : auto
+get_element<V=T>(const std::string & name) : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45{value}]]]
}
class "path<fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file(const std::filesystem::path & p) : void
+set_path(const filesystem_path & p) : void
+set_absolute() : void
+is_absolute() const : bool
+set_type(source_file_t type) : void
+type() const : source_file_t
+source_file(const source_file & ) : void
+source_file(source_file && ) = default : void
+operator=(const source_file & ) : source_file &
+operator=(source_file && ) : source_file &
+operator==(const source_file & right) const : bool
+path() const : const filesystem_path &
+full_name(bool ) const : std::string
+full_path() const : path<fs_path_sep>
+fs_path(const std::filesystem::path & base = = {}) const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : diagram_t
{abstract} +get(const std::string & full_name) const = 0 : clanguml::common::optional_ref<diagram_element>
{abstract} +get(diagram_element::id_t id) const = 0 : clanguml::common::optional_ref<diagram_element>
+get_with_namespace(const std::string & name, const namespace_ & ns) const : clanguml::common::optional_ref<diagram_element>
+diagram(const diagram & ) : void
+diagram(diagram && ) : void
+operator=(const diagram & ) : diagram &
+operator=(diagram && ) : diagram &
+set_name(const std::string & name) : void
+name() const : std::string
+set_filter(std::unique_ptr<diagram_filter> filter) : void
+set_complete(bool complete) : void
+complete() const : bool
+should_include(const element & e) const : bool
+should_include(const std::string & e) const : bool
+should_include(const source_file & path) const : bool
+should_include(relationship r) const : bool
+should_include(relationship_t r) const : bool
+should_include(access_t s) const : bool
+has_element(const diagram_element::id_t ) const : bool
+should_include(const namespace_ & ns, const std::string & name) const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87{complete_}]]]
}
class "package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34{package}]] {
+package(const common::model::namespace_ & using_namespace) : void
+package(const package & ) : void
+package(package && ) = default : void
+operator=(const package & ) : package &
+operator=(package && ) : package &
+type_name() const : std::string
+full_name(bool relative) const : std::string
+is_deprecated() const : bool
+set_deprecated(bool deprecated) : void
+add_package(std::unique_ptr<common::model::package> && p) : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor(filter_t type) : void
+~filter_visitor() = default : void
+match(const diagram & d, const common::model::element & e) const : tvl::value_t
+match(const diagram & d, const common::model::relationship_t & r) const : tvl::value_t
+match(const diagram & d, const common::model::access_t & a) const : tvl::value_t
+match(const diagram & d, const common::model::namespace_ & ns) const : tvl::value_t
+match(const diagram & d, const common::model::source_file & f) const : tvl::value_t
+match(const diagram & d, const common::model::source_location & f) const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : filter_t
}
class "anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter(filter_t type, std::vector<std::unique_ptr<filter_visitor>> filters) : void
+~anyof_filter() = default : void
+match(const diagram & d, const common::model::element & e) const : tvl::value_t
+match(const diagram & d, const common::model::source_file & e) const : tvl::value_t
}
class "namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter(filter_t type, std::vector<namespace_> namespaces) : void
+~namespace_filter() = default : void
+match(const diagram & d, const namespace_ & ns) const : tvl::value_t
+match(const diagram & d, const element & e) const : tvl::value_t
}
class "element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter(filter_t type, std::vector<std::string> elements) : void
+~element_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "element_type_filter" as C_0002051668456717902300
class C_0002051668456717902300 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130{element_type_filter}]] {
+element_type_filter(filter_t type, std::vector<std::string> element_types) : void
+~element_type_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-element_types_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138{element_types_}]]]
}
class "subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141{subclass_filter}]] {
+subclass_filter(filter_t type, std::vector<std::string> roots) : void
+~subclass_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149{roots_}]]]
}
class "parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152{parents_filter}]] {
+parents_filter(filter_t type, std::vector<std::string> roots) : void
+~parents_filter() = default : void
+match(const diagram & d, const element & e) const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160{children_}]]]
}
class "edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>(filter_t type, relationship_t relationship, std::vector<std::string> roots, bool forward = false) : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match(const diagram & d, const MatchOverrideT & e) const : tvl::value_t
-add_parents(const DiagramT & cd) const : void
-init(const DiagramT & cd) const : void
-add_adjacent<C,D>(const C & from, const D & to, const std::vector<relationship_t> & relationships) : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302{forward_}]]]
}
class "relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305{relationship_filter}]] {
+relationship_filter(filter_t type, std::vector<relationship_t> relationships) : void
+~relationship_filter() = default : void
+match(const diagram & d, const relationship_t & r) const : tvl::value_t
}
class "access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318{access_filter}]] {
+access_filter(filter_t type, std::vector<access_t> access) : void
+~access_filter() = default : void
+match(const diagram & d, const access_t & a) const : tvl::value_t
}
class "context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329{context_filter}]] {
+context_filter(filter_t type, std::vector<std::string> context) : void
+~context_filter() = default : void
+match(const diagram & d, const element & r) const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337{context_}]]]
}
class "paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340{paths_filter}]] {
+paths_filter(filter_t type, const std::filesystem::path & root, const std::vector<std::filesystem::path> & p) : void
+~paths_filter() = default : void
+match(const diagram & d, const common::model::source_file & r) const : tvl::value_t
+match(const diagram & d, const common::model::source_location & sl) const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354{root_}]]]
}
class "diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357{diagram_filter}]] {
+diagram_filter(const common::model::diagram & d, const config::diagram & c) : void
+add_inclusive_filter(std::unique_ptr<filter_visitor> fv) : void
+add_exclusive_filter(std::unique_ptr<filter_visitor> fv) : void
+should_include(const namespace_ & ns, const std::string & name) const : bool
-init_filters(const config::diagram & c) : void
+should_include<T>(const T & e) : _Bool
}
C_0000845978329661395972 o- - C_0002193110380171976294 : +pr
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000845978329661395972 : -context_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0002051668456717902300
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>