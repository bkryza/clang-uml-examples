<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3608px" preserveAspectRatio="none" style="width:7604px;height:3608px;" version="1.1" viewBox="0 0 7604 3608" width="7604px" zoomAndPan="magnify"><defs><filter height="300%" id="f1piyy2ecq8uua" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="314" x="3648.5" y="16.708">clang-uml sequence diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="336.5" y="152.4531"/><ellipse cx="351.5" cy="168.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M355.6094,174.4531 L347.8906,174.4531 L347.8906,162.0625 L355.6094,162.0625 L355.6094,164.2188 L350.3438,164.2188 L350.3438,166.8906 L355.1094,166.8906 L355.1094,169.0469 L350.3438,169.0469 L350.3438,172.2969 L355.6094,172.2969 L355.6094,174.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="365.5" y="172.6074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="337.5" x2="600.5" y1="184.4531" y2="184.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="342.5" y="198.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="342.5" y="211.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="342.5" y="224.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="342.5" y="237.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="337.5" x2="600.5" y1="243.6719" y2="243.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="3113" y="1693.9531"/><ellipse cx="3128" cy="1709.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3132.1094,1715.9531 L3124.3906,1715.9531 L3124.3906,1703.5625 L3132.1094,1703.5625 L3132.1094,1705.7188 L3126.8438,1705.7188 L3126.8438,1708.3906 L3131.6094,1708.3906 L3131.6094,1710.5469 L3126.8438,1710.5469 L3126.8438,1713.7969 L3132.1094,1713.7969 L3132.1094,1715.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="3142" y="1714.1074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3114" x2="3370" y1="1725.9531" y2="1725.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="3119" y="1740.1636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3119" y="1752.9683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="3119" y="1765.7729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="3119" y="1778.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3114" x2="3370" y1="1785.1719" y2="1785.1719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4877" y="1642.4531"/><ellipse cx="4892" cy="1658.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4896.1094,1664.4531 L4888.3906,1664.4531 L4888.3906,1652.0625 L4896.1094,1652.0625 L4896.1094,1654.2188 L4890.8438,1654.2188 L4890.8438,1656.8906 L4895.6094,1656.8906 L4895.6094,1659.0469 L4890.8438,1659.0469 L4890.8438,1662.2969 L4896.1094,1662.2969 L4896.1094,1664.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4906" y="1662.6074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4878" x2="5164" y1="1674.4531" y2="1674.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="4883" y="1688.6636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="4883" y="1701.4683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4883" y="1714.2729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4883" y="1727.0776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="4883" y="1739.8823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4883" y="1752.687">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4883" y="1765.4917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4883" y="1778.2964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="4883" y="1791.1011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="4883" y="1803.9058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="4883" y="1816.7104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="4883" y="1829.5151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4878" x2="5164" y1="1836.1094" y2="1836.1094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="2105.5" y="3090.9531"/><ellipse cx="2120.5" cy="3106.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2124.6094,3112.9531 L2116.8906,3112.9531 L2116.8906,3100.5625 L2124.6094,3100.5625 L2124.6094,3102.7188 L2119.3438,3102.7188 L2119.3438,3105.3906 L2124.1094,3105.3906 L2124.1094,3107.5469 L2119.3438,3107.5469 L2119.3438,3110.7969 L2124.6094,3110.7969 L2124.6094,3112.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="2134.5" y="3111.1074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2106.5" x2="2375.5" y1="3122.9531" y2="3122.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="2111.5" y="3137.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2111.5" y="3149.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="2111.5" y="3162.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="2111.5" y="3175.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="2111.5" y="3188.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="2111.5" y="3201.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2111.5" y="3213.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="2111.5" y="3226.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="2111.5" y="3239.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="2111.5" y="3252.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2111.5" y="3265.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2111.5" y="3278.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2111.5" y="3290.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="2111.5" y="3303.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2111.5" y="3316.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2111.5" y="3329.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2111.5" y="3342.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="2111.5" y="3354.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="2111.5" y="3367.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2111.5" y="3380.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2111.5" y="3393.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2111.5" y="3406.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2106.5" x2="2375.5" y1="3412.6563" y2="3412.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="2411.5" y="3218.9531"/><ellipse cx="2426.5" cy="3234.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2430.6094,3240.9531 L2422.8906,3240.9531 L2422.8906,3228.5625 L2430.6094,3228.5625 L2430.6094,3230.7188 L2425.3438,3230.7188 L2425.3438,3233.3906 L2430.1094,3233.3906 L2430.1094,3235.5469 L2425.3438,3235.5469 L2425.3438,3238.7969 L2430.6094,3238.7969 L2430.6094,3240.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="283" x="2440.5" y="3239.1074">clanguml::common::model::message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2412.5" x2="2725.5" y1="3250.9531" y2="3250.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="2417.5" y="3265.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="2417.5" y="3277.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2412.5" x2="2725.5" y1="3284.5625" y2="3284.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="1379" y="107.4531"/><ellipse cx="1479.25" cy="123.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1482.2188,129.0938 Q1481.6406,129.3906 1481,129.5313 Q1480.3594,129.6875 1479.6563,129.6875 Q1477.1563,129.6875 1475.8281,128.0469 Q1474.5156,126.3906 1474.5156,123.2656 Q1474.5156,120.1406 1475.8281,118.4844 Q1477.1563,116.8281 1479.6563,116.8281 Q1480.3594,116.8281 1481,116.9844 Q1481.6563,117.1406 1482.2188,117.4375 L1482.2188,120.1563 Q1481.5938,119.5781 1481,119.3125 Q1480.4063,119.0313 1479.7813,119.0313 Q1478.4375,119.0313 1477.75,120.1094 Q1477.0625,121.1719 1477.0625,123.2656 Q1477.0625,125.3594 1477.75,126.4375 Q1478.4375,127.5 1479.7813,127.5 Q1480.4063,127.5 1481,127.2344 Q1481.5938,126.9531 1482.2188,126.375 L1482.2188,129.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="1499.75" y="127.6074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1380" x2="1880" y1="139.4531" y2="139.4531"/><ellipse cx="1390" cy="150.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1399" y="153.6636">add_decorators() : void</text><ellipse cx="1390" cy="163.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1399" y="166.4683">append() : void</text><ellipse cx="1390" cy="176.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1399" y="179.2729">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1390" cy="188.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1399" y="192.0776">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1390" cy="201.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1399" y="204.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1390" cy="214.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1399" y="217.687">set_comment() : void</text><ellipse cx="1390" cy="227.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1399" y="230.4917">skip() const : bool</text><ellipse cx="1390" cy="240.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1399" y="243.2964">skip_relationship() const : bool</text><ellipse cx="1390" cy="252.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1399" y="256.1011">style_spec() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1380" x2="1880" y1="262.6953" y2="262.6953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1385" y="268.6953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1387" y="270.6953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1399" y="276.9058">comment_ : std::optional&lt;comment_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1385" y="281.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1387" y="283.5"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1399" y="289.7104">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="1609" y="607.4531"/><ellipse cx="1624" cy="623.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1626.9688,629.0938 Q1626.3906,629.3906 1625.75,629.5313 Q1625.1094,629.6875 1624.4063,629.6875 Q1621.9063,629.6875 1620.5781,628.0469 Q1619.2656,626.3906 1619.2656,623.2656 Q1619.2656,620.1406 1620.5781,618.4844 Q1621.9063,616.8281 1624.4063,616.8281 Q1625.1094,616.8281 1625.75,616.9844 Q1626.4063,617.1406 1626.9688,617.4375 L1626.9688,620.1563 Q1626.3438,619.5781 1625.75,619.3125 Q1625.1563,619.0313 1624.5313,619.0313 Q1623.1875,619.0313 1622.5,620.1094 Q1621.8125,621.1719 1621.8125,623.2656 Q1621.8125,625.3594 1622.5,626.4375 Q1623.1875,627.5 1624.5313,627.5 Q1625.1563,627.5 1625.75,627.2344 Q1626.3438,626.9531 1626.9688,626.375 L1626.9688,629.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="1638" y="627.6074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1610" x2="1916" y1="639.4531" y2="639.4531"/><ellipse cx="1620" cy="650.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1629" y="653.6636">set_style() : void</text><ellipse cx="1620" cy="663.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1629" y="666.4683">style() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1610" x2="1916" y1="673.0625" y2="673.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1615" y="679.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1617" y="681.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1629" y="687.2729">style_ : std::string</text></a><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="286.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="396" x="2891" y="1013.4531"/><ellipse cx="2962.25" cy="1029.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2965.2188,1035.0938 Q2964.6406,1035.3906 2964,1035.5313 Q2963.3594,1035.6875 2962.6563,1035.6875 Q2960.1563,1035.6875 2958.8281,1034.0469 Q2957.5156,1032.3906 2957.5156,1029.2656 Q2957.5156,1026.1406 2958.8281,1024.4844 Q2960.1563,1022.8281 2962.6563,1022.8281 Q2963.3594,1022.8281 2964,1022.9844 Q2964.6563,1023.1406 2965.2188,1023.4375 L2965.2188,1026.1563 Q2964.5938,1025.5781 2964,1025.3125 Q2963.4063,1025.0313 2962.7813,1025.0313 Q2961.4375,1025.0313 2960.75,1026.1094 Q2960.0625,1027.1719 2960.0625,1029.2656 Q2960.0625,1031.3594 2960.75,1032.4375 Q2961.4375,1033.5 2962.7813,1033.5 Q2963.4063,1033.5 2964,1033.2344 Q2964.5938,1032.9531 2965.2188,1032.375 L2965.2188,1035.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="2982.75" y="1033.6074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2892" x2="3286" y1="1045.4531" y2="1045.4531"/><ellipse cx="2902" cy="1056.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2911" y="1059.6636">relationship() : void</text><ellipse cx="2902" cy="1069.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2911" y="1072.4683">~relationship() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2892" x2="3286" y1="1079.0625" y2="1079.0625"/><ellipse cx="2902" cy="1090.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2911" y="1093.2729">access() const noexcept : clanguml::common::model::access_t</text><ellipse cx="2902" cy="1102.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2911" y="1106.0776">destination() const : clanguml::common::id_t</text><ellipse cx="2902" cy="1115.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2911" y="1118.8823">label() const : std::string</text><ellipse cx="2902" cy="1128.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2911" y="1131.687">multiplicity_destination() const : std::string</text><ellipse cx="2902" cy="1141.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2911" y="1144.4917">multiplicity_source() const : std::string</text><ellipse cx="2902" cy="1154.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2911" y="1157.2964">set_access() noexcept : void</text><ellipse cx="2902" cy="1166.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2911" y="1170.1011">set_destination() : void</text><ellipse cx="2902" cy="1179.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2911" y="1182.9058">set_label() : void</text><ellipse cx="2902" cy="1192.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2911" y="1195.7104">set_multiplicity_destination() : void</text><ellipse cx="2902" cy="1205.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2911" y="1208.5151">set_multiplicity_source() : void</text><ellipse cx="2902" cy="1218.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2911" y="1221.3198">set_type() noexcept : void</text><ellipse cx="2902" cy="1230.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="2911" y="1234.1245">type() const noexcept : clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2892" x2="3286" y1="1240.7188" y2="1240.7188"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2897" y="1246.7188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2899" y="1248.7188"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2911" y="1254.9292">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2897" y="1259.5234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2899" y="1261.5234"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2911" y="1267.7339">label_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2897" y="1272.3281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2899" y="1274.3281"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2911" y="1280.5386">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2897" y="1285.1328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2899" y="1287.1328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2911" y="1293.3433">multiplicity_source_ : std::string</text></a><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="235.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="1990" y="84.4531"/><ellipse cx="2005" cy="100.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2007.9688,106.0938 Q2007.3906,106.3906 2006.75,106.5313 Q2006.1094,106.6875 2005.4063,106.6875 Q2002.9063,106.6875 2001.5781,105.0469 Q2000.2656,103.3906 2000.2656,100.2656 Q2000.2656,97.1406 2001.5781,95.4844 Q2002.9063,93.8281 2005.4063,93.8281 Q2006.1094,93.8281 2006.75,93.9844 Q2007.4063,94.1406 2007.9688,94.4375 L2007.9688,97.1563 Q2007.3438,96.5781 2006.75,96.3125 Q2006.1563,96.0313 2005.5313,96.0313 Q2004.1875,96.0313 2003.5,97.1094 Q2002.8125,98.1719 2002.8125,100.2656 Q2002.8125,102.3594 2003.5,103.4375 Q2004.1875,104.5 2005.5313,104.5 Q2006.1563,104.5 2006.75,104.2344 Q2007.3438,103.9531 2007.9688,103.375 L2007.9688,106.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="2019" y="104.6074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1991" x2="2291" y1="116.4531" y2="116.4531"/><ellipse cx="2001" cy="127.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2010" y="130.6636">source_location() = default : void</text><ellipse cx="2001" cy="140.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2010" y="143.4683">source_location() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1991" x2="2291" y1="150.0625" y2="150.0625"/><ellipse cx="2001" cy="161.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2010" y="164.2729">file() const : const std::string &amp;</text><ellipse cx="2001" cy="173.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2010" y="177.0776">file_relative() const : const std::string &amp;</text><ellipse cx="2001" cy="186.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2010" y="189.8823">line() const : unsigned int</text><ellipse cx="2001" cy="199.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2010" y="202.687">location_id() const : unsigned int</text><ellipse cx="2001" cy="212.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2010" y="215.4917">set_file() : void</text><ellipse cx="2001" cy="225.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2010" y="228.2964">set_file_relative() : void</text><ellipse cx="2001" cy="237.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2010" y="241.1011">set_line() : void</text><ellipse cx="2001" cy="250.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2010" y="253.9058">set_location_id() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1991" x2="2291" y1="260.5" y2="260.5"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="266.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="268.5"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2010" y="274.7104">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="279.3047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="281.3047"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2010" y="287.5151">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="292.1094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="294.1094"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2010" y="300.3198">hash_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1996" y="304.9141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1998" y="306.9141"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2010" y="313.1245">line_ : unsigned int</text></a><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="337.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="1952.5" y="481.4531"/><ellipse cx="1997.25" cy="497.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2000.2188,503.0938 Q1999.6406,503.3906 1999,503.5313 Q1998.3594,503.6875 1997.6563,503.6875 Q1995.1563,503.6875 1993.8281,502.0469 Q1992.5156,500.3906 1992.5156,497.2656 Q1992.5156,494.1406 1993.8281,492.4844 Q1995.1563,490.8281 1997.6563,490.8281 Q1998.3594,490.8281 1999,490.9844 Q1999.6563,491.1406 2000.2188,491.4375 L2000.2188,494.1563 Q1999.5938,493.5781 1999,493.3125 Q1998.4063,493.0313 1997.7813,493.0313 Q1996.4375,493.0313 1995.75,494.1094 Q1995.0625,495.1719 1995.0625,497.2656 Q1995.0625,499.3594 1995.75,500.4375 Q1996.4375,501.5 1997.7813,501.5 Q1998.4063,501.5 1999,501.2344 Q1999.5938,500.9531 2000.2188,500.375 L2000.2188,503.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="2017.75" y="501.6074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1953.5" x2="2328.5" y1="513.4531" y2="513.4531"/><ellipse cx="1963.5" cy="524.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1972.5" y="527.6636">diagram_element() : void</text><ellipse cx="1963.5" cy="537.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1972.5" y="540.4683">~diagram_element() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1953.5" x2="2328.5" y1="547.0625" y2="547.0625"/><ellipse cx="1963.5" cy="558.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1972.5" y="561.2729">add_relationship() : void</text><ellipse cx="1963.5" cy="570.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1972.5" y="574.0776">alias() const : std::string</text><ellipse cx="1963.5" cy="583.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1972.5" y="586.8823">append() : void</text><ellipse cx="1963.5" cy="596.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1972.5" y="599.687">complete() const : bool</text><ellipse cx="1963.5" cy="609.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1972.5" y="612.4917">complete() : void</text><ellipse cx="1963.5" cy="622.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1972.5" y="625.2964">context() const : inja::json</text><ellipse cx="1963.5" cy="634.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1972.5" y="638.1011">full_name() const : std::string</text><ellipse cx="1963.5" cy="647.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="1972.5" y="650.9058">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="1963.5" cy="660.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1972.5" y="663.7104">is_nested() const : bool</text><ellipse cx="1963.5" cy="673.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1972.5" y="676.5151">name() const : std::string</text><ellipse cx="1963.5" cy="686.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1972.5" y="689.3198">nested() : void</text><ellipse cx="1963.5" cy="698.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1972.5" y="702.1245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1963.5" cy="711.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1972.5" y="714.9292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1963.5" cy="724.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1972.5" y="727.7339">set_id() : void</text><ellipse cx="1963.5" cy="737.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1972.5" y="740.5386">set_name() : void</text><ellipse cx="1963.5" cy="750.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1972.5" y="753.3433">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1953.5" x2="2328.5" y1="759.9375" y2="759.9375"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1958.5" y="765.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1960.5" y="767.9375"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1972.5" y="774.1479">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1958.5" y="778.7422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1960.5" y="780.7422"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="1972.5" y="786.9526">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1958.5" y="791.5469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1960.5" y="793.5469"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1972.5" y="799.7573">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1958.5" y="804.3516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1960.5" y="806.3516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1972.5" y="812.562">nested_ : bool</text></a><!--MD5=[5b6d29821e498683759dae39d058a0bd]
class C_0002031918453259559099--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L28" target="_top" title="path_type" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L28" xlink:show="new" xlink:title="path_type" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="73.6094" id="C_0002031918453259559099" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1835.5" y="2519.9531"/><ellipse cx="1850.5" cy="2535.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1854.6094,2541.9531 L1846.8906,2541.9531 L1846.8906,2529.5625 L1854.6094,2529.5625 L1854.6094,2531.7188 L1849.3438,2531.7188 L1849.3438,2534.3906 L1854.1094,2534.3906 L1854.1094,2536.5469 L1849.3438,2536.5469 L1849.3438,2539.7969 L1854.6094,2539.7969 L1854.6094,2541.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="1864.5" y="2540.1074">clanguml::common::model::path_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1836.5" x2="2099.5" y1="2551.9531" y2="2551.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1841.5" y="2566.1636">kNamespace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1841.5" y="2578.9683">kFilesystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1836.5" x2="2099.5" y1="2585.5625" y2="2585.5625"/></a><!--MD5=[84ee75f83c3c126eb45e1cb912bd00ce]
class C_0000844837292165721774--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L30" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L30" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="558.5781" id="C_0000844837292165721774" style="stroke: #A80036; stroke-width: 1.5;" width="413" x="1761.5" y="1463.9531"/><ellipse cx="1863.75" cy="1479.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1866.7188,1485.5938 Q1866.1406,1485.8906 1865.5,1486.0313 Q1864.8594,1486.1875 1864.1563,1486.1875 Q1861.6563,1486.1875 1860.3281,1484.5469 Q1859.0156,1482.8906 1859.0156,1479.7656 Q1859.0156,1476.6406 1860.3281,1474.9844 Q1861.6563,1473.3281 1864.1563,1473.3281 Q1864.8594,1473.3281 1865.5,1473.4844 Q1866.1563,1473.6406 1866.7188,1473.9375 L1866.7188,1476.6563 Q1866.0938,1476.0781 1865.5,1475.8125 Q1864.9063,1475.5313 1864.2813,1475.5313 Q1862.9375,1475.5313 1862.25,1476.6094 Q1861.5625,1477.6719 1861.5625,1479.7656 Q1861.5625,1481.8594 1862.25,1482.9375 Q1862.9375,1484 1864.2813,1484 Q1864.9063,1484 1865.5,1483.7344 Q1866.0938,1483.4531 1866.7188,1482.875 L1866.7188,1485.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1884.25" y="1484.1074">clanguml::common::model::path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1762.5" x2="2173.5" y1="1495.9531" y2="1495.9531"/><ellipse cx="1772.5" cy="1506.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1781.5" y="1510.1636">path() : void</text><ellipse cx="1772.5" cy="1519.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1781.5" y="1522.9683">path() : void</text><ellipse cx="1772.5" cy="1532.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1781.5" y="1535.7729">path() : void</text><ellipse cx="1772.5" cy="1545.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1781.5" y="1548.5776">path() = default : void</text><ellipse cx="1772.5" cy="1558.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1781.5" y="1561.3823">path() noexcept = default : void</text><ellipse cx="1772.5" cy="1570.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1781.5" y="1574.187">path() : void</text><ellipse cx="1772.5" cy="1583.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1781.5" y="1586.9917">path() : void</text><ellipse cx="1772.5" cy="1596.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1781.5" y="1599.7964">~path() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1762.5" x2="2173.5" y1="1606.3906" y2="1606.3906"/><ellipse cx="1772.5" cy="1617.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1781.5" y="1620.6011">operator=() : clanguml::common::model::path &amp;</text><ellipse cx="1772.5" cy="1630.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="1781.5" y="1633.4058">operator=() noexcept = default : clanguml::common::model::path &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1762.5" x2="2173.5" y1="1640" y2="1640"/><ellipse cx="1772.5" cy="1651" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1781.5" y="1654.2104">operator[]() : std::string &amp;</text><ellipse cx="1772.5" cy="1663.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1781.5" y="1667.0151">operator[]() const : const std::string &amp;</text><ellipse cx="1772.5" cy="1676.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="1781.5" y="1679.8198">operator|() const : clanguml::common::model::path</text><ellipse cx="1772.5" cy="1689.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="1781.5" y="1692.6245">operator|() const : clanguml::common::model::path</text><ellipse cx="1772.5" cy="1702.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1781.5" y="1705.4292">operator|=() : void</text><ellipse cx="1772.5" cy="1715.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1781.5" y="1718.2339">operator|=() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1762.5" x2="2173.5" y1="1724.8281" y2="1724.8281"/><ellipse cx="1772.5" cy="1735.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1781.5" y="1739.0386">append() : void</text><ellipse cx="1772.5" cy="1748.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1781.5" y="1751.8433">append() : void</text><ellipse cx="1772.5" cy="1761.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="1781.5" y="1764.6479">begin() const : path::container_type::const_iterator</text><ellipse cx="1772.5" cy="1774.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1781.5" y="1777.4526">begin() : path::container_type::iterator</text><ellipse cx="1772.5" cy="1787.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="1781.5" y="1790.2573">cbegin() const : path::container_type::const_iterator</text><ellipse cx="1772.5" cy="1799.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="1781.5" y="1803.062">cend() const : path::container_type::const_iterator</text><ellipse cx="1772.5" cy="1812.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="1781.5" y="1815.8667">common_path() const : clanguml::common::model::path</text><ellipse cx="1772.5" cy="1825.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1781.5" y="1828.6714">end() const : path::container_type::const_iterator</text><ellipse cx="1772.5" cy="1838.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1781.5" y="1841.4761">end() : path::container_type::iterator</text><ellipse cx="1772.5" cy="1851.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1781.5" y="1854.2808">ends_with() const : bool</text><ellipse cx="1772.5" cy="1863.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1781.5" y="1867.0854">is_empty() const : bool</text><ellipse cx="1772.5" cy="1876.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1781.5" y="1879.8901">name() const : std::string</text><ellipse cx="1772.5" cy="1889.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1781.5" y="1892.6948">parent() const : std::optional&lt;path&gt;</text><ellipse cx="1772.5" cy="1902.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1781.5" y="1905.4995">pop_back() : void</text><ellipse cx="1772.5" cy="1915.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1781.5" y="1918.3042">relative() const : std::string</text><ellipse cx="1772.5" cy="1927.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1781.5" y="1931.1089">relative_to() const : clanguml::common::model::path</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1769.5" y="1937.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1781.5" y="1943.9136">separator() const : const char *</text><ellipse cx="1772.5" cy="1953.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1781.5" y="1956.7183">size() const : size_t</text><ellipse cx="1772.5" cy="1966.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1781.5" y="1969.5229">starts_with() const : bool</text><ellipse cx="1772.5" cy="1979.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1781.5" y="1982.3276">to_string() const : std::string</text><ellipse cx="1772.5" cy="1991.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1781.5" y="1995.1323">type() const : clanguml::common::model::path_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1762.5" x2="2173.5" y1="2001.7266" y2="2001.7266"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1767.5" y="2007.7266"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1769.5" y="2009.7266"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="1781.5" y="2015.937">path_ : clanguml::common::model::path::container_type</text></a><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="636.5" y="171.4531"/><ellipse cx="651.5" cy="187.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M654.4688,193.0938 Q653.8906,193.3906 653.25,193.5313 Q652.6094,193.6875 651.9063,193.6875 Q649.4063,193.6875 648.0781,192.0469 Q646.7656,190.3906 646.7656,187.2656 Q646.7656,184.1406 648.0781,182.4844 Q649.4063,180.8281 651.9063,180.8281 Q652.6094,180.8281 653.25,180.9844 Q653.9063,181.1406 654.4688,181.4375 L654.4688,184.1563 Q653.8438,183.5781 653.25,183.3125 Q652.6563,183.0313 652.0313,183.0313 Q650.6875,183.0313 650,184.1094 Q649.3125,185.1719 649.3125,187.2656 Q649.3125,189.3594 650,190.4375 Q650.6875,191.5 652.0313,191.5 Q652.6563,191.5 653.25,191.2344 Q653.8438,190.9531 654.4688,190.375 L654.4688,193.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="665.5" y="191.6074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="637.5" x2="956.5" y1="203.4531" y2="203.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="637.5" x2="956.5" y1="211.4531" y2="211.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="642.5" y="217.4531"/><ellipse cx="647.5" cy="222.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="656.5" y="225.6636">value : const std::string_view</text></a><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="196.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="1624" y="1057.9531"/><ellipse cx="1740.75" cy="1073.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1743.7188,1079.5938 Q1743.1406,1079.8906 1742.5,1080.0313 Q1741.8594,1080.1875 1741.1563,1080.1875 Q1738.6563,1080.1875 1737.3281,1078.5469 Q1736.0156,1076.8906 1736.0156,1073.7656 Q1736.0156,1070.6406 1737.3281,1068.9844 Q1738.6563,1067.3281 1741.1563,1067.3281 Q1741.8594,1067.3281 1742.5,1067.4844 Q1743.1563,1067.6406 1743.7188,1067.9375 L1743.7188,1070.6563 Q1743.0938,1070.0781 1742.5,1069.8125 Q1741.9063,1069.5313 1741.2813,1069.5313 Q1739.9375,1069.5313 1739.25,1070.6094 Q1738.5625,1071.6719 1738.5625,1073.7656 Q1738.5625,1075.8594 1739.25,1076.9375 Q1739.9375,1078 1741.2813,1078 Q1741.9063,1078 1742.5,1077.7344 Q1743.0938,1077.4531 1743.7188,1076.875 L1743.7188,1079.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="1761.25" y="1078.1074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1625" x2="2087" y1="1089.9531" y2="1089.9531"/><ellipse cx="1635" cy="1100.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1644" y="1104.1636">element() : void</text><ellipse cx="1635" cy="1113.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1644" y="1116.9683">~element() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1625" x2="2087" y1="1123.5625" y2="1123.5625"/><ellipse cx="1635" cy="1134.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1644" y="1137.7729">context() const : inja::json</text><ellipse cx="1635" cy="1147.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1644" y="1150.5776">full_name() const : std::string</text><ellipse cx="1635" cy="1160.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1644" y="1163.3823">full_name_no_ns() const : std::string</text><ellipse cx="1635" cy="1172.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="1644" y="1176.187">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="1635" cy="1185.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="1644" y="1188.9917">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="1635" cy="1198.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1644" y="1201.7964">name_and_ns() const : std::string</text><ellipse cx="1635" cy="1211.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1644" y="1214.6011">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="1635" cy="1224.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1644" y="1227.4058">set_namespace() : void</text><ellipse cx="1635" cy="1237" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="1644" y="1240.2104">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1625" x2="2087" y1="1246.8047" y2="1246.8047"/></a><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L31" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L31" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="374" x="892" y="3199.9531"/><ellipse cx="907" cy="3215.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M911.1094,3221.9531 L903.3906,3221.9531 L903.3906,3209.5625 L911.1094,3209.5625 L911.1094,3211.7188 L905.8438,3211.7188 L905.8438,3214.3906 L910.6094,3214.3906 L910.6094,3216.5469 L905.8438,3216.5469 L905.8438,3219.7969 L911.1094,3219.7969 L911.1094,3221.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="342" x="921" y="3220.1074">clanguml::common::model::template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="893" x2="1265" y1="3231.9531" y2="3231.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="898" y="3246.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="898" y="3258.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="898" y="3271.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="898" y="3284.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="898" y="3297.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="893" x2="1265" y1="3303.9766" y2="3303.9766"/></a><!--MD5=[90017e9468cbeb0bc9373ae936737720]
class C_0002193110380171976294--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L40" target="_top" title="rpqualifier" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L40" xlink:show="new" xlink:title="rpqualifier" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="99.2188" id="C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="1293" y="3497.9531"/><ellipse cx="1308" cy="3513.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1312.1094,3519.9531 L1304.3906,3519.9531 L1304.3906,3507.5625 L1312.1094,3507.5625 L1312.1094,3509.7188 L1306.8438,3509.7188 L1306.8438,3512.3906 L1311.6094,3512.3906 L1311.6094,3514.5469 L1306.8438,3514.5469 L1306.8438,3517.7969 L1312.1094,3517.7969 L1312.1094,3519.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="234" x="1322" y="3518.1074">clanguml::common::model::rpqualifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1294" x2="1558" y1="3529.9531" y2="3529.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1299" y="3544.1636">kLValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1299" y="3556.9683">kRValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="1299" y="3569.7729">kPointer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1299" y="3582.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1294" x2="1558" y1="3589.1719" y2="3589.1719"/></a><!--MD5=[5e78f8fc55e497bc4b976d966927ffe8]
class C_0000845978329661395972--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L46" target="_top" title="context" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L46" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="145.6328" id="C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="1301" y="3182.9531"/><ellipse cx="1316" cy="3198.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1318.9688,3204.5938 Q1318.3906,3204.8906 1317.75,3205.0313 Q1317.1094,3205.1875 1316.4063,3205.1875 Q1313.9063,3205.1875 1312.5781,3203.5469 Q1311.2656,3201.8906 1311.2656,3198.7656 Q1311.2656,3195.6406 1312.5781,3193.9844 Q1313.9063,3192.3281 1316.4063,3192.3281 Q1317.1094,3192.3281 1317.75,3192.4844 Q1318.4063,3192.6406 1318.9688,3192.9375 L1318.9688,3195.6563 Q1318.3438,3195.0781 1317.75,3194.8125 Q1317.1563,3194.5313 1316.5313,3194.5313 Q1315.1875,3194.5313 1314.5,3195.6094 Q1313.8125,3196.6719 1313.8125,3198.7656 Q1313.8125,3200.8594 1314.5,3201.9375 Q1315.1875,3203 1316.5313,3203 Q1317.1563,3203 1317.75,3202.7344 Q1318.3438,3202.4531 1318.9688,3201.875 L1318.9688,3204.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="1330" y="3203.1074">clanguml::common::model::context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1302" x2="1550" y1="3214.9531" y2="3214.9531"/><ellipse cx="1312" cy="3225.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1321" y="3229.1636">operator!=() const : bool</text><ellipse cx="1312" cy="3238.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1321" y="3241.9683">operator==() const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1302" x2="1550" y1="3248.5625" y2="3248.5625"/><ellipse cx="1312" cy="3259.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1321" y="3262.7729">to_string() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1302" x2="1550" y1="3269.3672" y2="3269.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1307" y="3275.3672"/><ellipse cx="1312" cy="3280.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1321" y="3283.5776">is_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1307" y="3288.1719"/><ellipse cx="1312" cy="3293.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1321" y="3296.3823">is_ref_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1307" y="3300.9766"/><ellipse cx="1312" cy="3305.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1321" y="3309.187">is_ref_volatile : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1307" y="3313.7813"/><ellipse cx="1312" cy="3318.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1321" y="3321.9917">is_volatile : bool</text></a><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L67" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L67" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="913.9141" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="853" y="2099.9531"/><ellipse cx="946.25" cy="2115.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M949.2188,2121.5938 Q948.6406,2121.8906 948,2122.0313 Q947.3594,2122.1875 946.6563,2122.1875 Q944.1563,2122.1875 942.8281,2120.5469 Q941.5156,2118.8906 941.5156,2115.7656 Q941.5156,2112.6406 942.8281,2110.9844 Q944.1563,2109.3281 946.6563,2109.3281 Q947.3594,2109.3281 948,2109.4844 Q948.6563,2109.6406 949.2188,2109.9375 L949.2188,2112.6563 Q948.5938,2112.0781 948,2111.8125 Q947.4063,2111.5313 946.7813,2111.5313 Q945.4375,2111.5313 944.75,2112.6094 Q944.0625,2113.6719 944.0625,2115.7656 Q944.0625,2117.8594 944.75,2118.9375 Q945.4375,2120 946.7813,2120 Q947.4063,2120 948,2119.7344 Q948.5938,2119.4531 949.2188,2118.875 L949.2188,2121.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="966.75" y="2120.1074">clanguml::common::model::template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="854" x2="1346" y1="2131.9531" y2="2131.9531"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2139.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="873" y="2146.1636">template_parameter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="854" x2="1346" y1="2152.7578" y2="2152.7578"/><ellipse cx="864" cy="2163.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="873" y="2166.9683">add_template_param() : void</text><ellipse cx="864" cy="2176.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="873" y="2179.7729">add_template_param() : void</text><ellipse cx="864" cy="2189.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="873" y="2192.5776">calculate_specialization_match() const : int</text><ellipse cx="864" cy="2202.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="873" y="2205.3823">clear_params() : void</text><ellipse cx="864" cy="2214.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="873" y="2218.187">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="864" cy="2227.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="873" y="2230.9917">deduced_context() : void</text><ellipse cx="864" cy="2240.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="873" y="2243.7964">deduced_context() const : const std::deque&lt;context&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2250.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="873" y="2256.6011">deduced_context_str() const : std::string</text><ellipse cx="864" cy="2266.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="873" y="2269.4058">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="864" cy="2279" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="873" y="2282.2104">find_nested_relationships() const : bool</text><ellipse cx="864" cy="2291.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="873" y="2295.0151">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="864" cy="2304.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="873" y="2307.8198">is_array() const : bool</text><ellipse cx="864" cy="2317.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="873" y="2320.6245">is_array() : void</text><ellipse cx="864" cy="2330.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="873" y="2333.4292">is_association() const : bool</text><ellipse cx="864" cy="2343.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="873" y="2346.2339">is_data_pointer() : void</text><ellipse cx="864" cy="2355.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="873" y="2359.0386">is_data_pointer() const : bool</text><ellipse cx="864" cy="2368.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="873" y="2371.8433">is_ellipsis() : void</text><ellipse cx="864" cy="2381.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="873" y="2384.6479">is_ellipsis() const : bool</text><ellipse cx="864" cy="2394.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="873" y="2397.4526">is_function_template() const : bool</text><ellipse cx="864" cy="2407.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="873" y="2410.2573">is_function_template() : void</text><ellipse cx="864" cy="2419.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="873" y="2423.062">is_member_pointer() : void</text><ellipse cx="864" cy="2432.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="873" y="2435.8667">is_member_pointer() const : bool</text><ellipse cx="864" cy="2445.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="873" y="2448.6714">is_noexcept() const : bool</text><ellipse cx="864" cy="2458.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="873" y="2461.4761">is_noexcept() : void</text><ellipse cx="864" cy="2471.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="873" y="2474.2808">is_same_specialization() const : bool</text><ellipse cx="864" cy="2483.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="873" y="2487.0854">is_specialization() const : bool</text><ellipse cx="864" cy="2496.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="873" y="2499.8901">is_template_parameter() : void</text><ellipse cx="864" cy="2509.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="873" y="2512.6948">is_template_parameter() const : bool</text><ellipse cx="864" cy="2522.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="873" y="2525.4995">is_template_template_parameter() : void</text><ellipse cx="864" cy="2535.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="873" y="2538.3042">is_template_template_parameter() const : bool</text><ellipse cx="864" cy="2547.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="873" y="2551.1089">is_unexposed() const : bool</text><ellipse cx="864" cy="2560.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="873" y="2563.9136">is_variadic() noexcept : void</text><ellipse cx="864" cy="2573.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="873" y="2576.7183">is_variadic() const noexcept : bool</text><ellipse cx="864" cy="2586.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="873" y="2589.5229">kind() const : clanguml::common::model::template_parameter_kind_t</text><ellipse cx="864" cy="2599.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="873" y="2602.3276">make_argument() : clanguml::common::model::template_parameter</text><ellipse cx="864" cy="2611.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="439" x="873" y="2615.1323">make_non_type_template() : clanguml::common::model::template_parameter</text><ellipse cx="864" cy="2624.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="873" y="2627.937">make_template_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="864" cy="2637.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="412" x="873" y="2640.7417">make_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="864" cy="2650.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="873" y="2653.5464">make_unexposed_argument() : clanguml::common::model::template_parameter</text><ellipse cx="864" cy="2663.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="873" y="2666.3511">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="864" cy="2675.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="873" y="2679.1558">push_context() : void</text><ellipse cx="864" cy="2688.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="873" y="2691.9604">set_concept_constraint() : void</text><ellipse cx="864" cy="2701.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="873" y="2704.7651">set_default_value() : void</text><ellipse cx="864" cy="2714.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="873" y="2717.5698">set_id() : void</text><ellipse cx="864" cy="2727.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="873" y="2730.3745">set_kind() : void</text><ellipse cx="864" cy="2739.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="873" y="2743.1792">set_name() : void</text><ellipse cx="864" cy="2752.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="873" y="2755.9839">set_type() : void</text><ellipse cx="864" cy="2765.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="873" y="2768.7886">set_unexposed() : void</text><ellipse cx="864" cy="2778.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="873" y="2781.5933">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="864" cy="2791.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="873" y="2794.3979">to_string() const : std::string</text><ellipse cx="864" cy="2803.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="873" y="2807.2026">type() const : std::optional&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="854" x2="1346" y1="2813.7969" y2="2813.7969"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2819.7969"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2821.7969"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="873" y="2828.0073">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2832.6016"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2834.6016"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="873" y="2840.812">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2845.4063"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2847.4063"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="873" y="2853.6167">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2858.2109"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2860.2109"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="873" y="2866.4214">is_array_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2871.0156"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2873.0156"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="873" y="2879.2261">is_data_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2883.8203"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2885.8203"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="873" y="2892.0308">is_ellipsis_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2896.625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2898.625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="873" y="2904.8354">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2909.4297"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2911.4297"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="873" y="2917.6401">is_member_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2922.2344"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2924.2344"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="873" y="2930.4448">is_noexcept_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2935.0391"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2937.0391"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="873" y="2943.2495">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2947.8438"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2949.8438"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="873" y="2956.0542">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2960.6484"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2962.6484"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="873" y="2968.8589">is_unexposed_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2973.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2975.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="873" y="2981.6636">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2986.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="2988.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="873" y="2994.4683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="859" y="2999.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="861" y="3001.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="873" y="3007.2729">type_ : std::optional&lt;std::string&gt;</text></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="567.5" y="1655.4531"/><ellipse cx="646.25" cy="1671.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M649.2188,1677.0938 Q648.6406,1677.3906 648,1677.5313 Q647.3594,1677.6875 646.6563,1677.6875 Q644.1563,1677.6875 642.8281,1676.0469 Q641.5156,1674.3906 641.5156,1671.2656 Q641.5156,1668.1406 642.8281,1666.4844 Q644.1563,1664.8281 646.6563,1664.8281 Q647.3594,1664.8281 648,1664.9844 Q648.6563,1665.1406 649.2188,1665.4375 L649.2188,1668.1563 Q648.5938,1667.5781 648,1667.3125 Q647.4063,1667.0313 646.7813,1667.0313 Q645.4375,1667.0313 644.75,1668.1094 Q644.0625,1669.1719 644.0625,1671.2656 Q644.0625,1673.3594 644.75,1674.4375 Q645.4375,1675.5 646.7813,1675.5 Q647.4063,1675.5 648,1675.2344 Q648.5938,1674.9531 649.2188,1674.375 L649.2188,1677.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="666.75" y="1675.6074">clanguml::common::model::template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="568.5" x2="991.5" y1="1687.4531" y2="1687.4531"/><ellipse cx="578.5" cy="1698.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="587.5" y="1701.6636">add_template() : void</text><ellipse cx="578.5" cy="1711.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="587.5" y="1714.4683">base_template() const : std::string</text><ellipse cx="578.5" cy="1724.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="587.5" y="1727.2729">calculate_template_specialization_match() const : int</text><ellipse cx="578.5" cy="1736.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="587.5" y="1740.0776">is_implicit() const : bool</text><ellipse cx="578.5" cy="1749.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="587.5" y="1752.8823">render_template_params() const : std::ostream &amp;</text><ellipse cx="578.5" cy="1762.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="587.5" y="1765.687">set_base_template() : void</text><ellipse cx="578.5" cy="1775.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="587.5" y="1778.4917">set_implicit() : void</text><ellipse cx="578.5" cy="1788.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="587.5" y="1791.2964">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="568.5" x2="991.5" y1="1797.8906" y2="1797.8906"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="573.5" y="1803.8906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="575.5" y="1805.8906"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="587.5" y="1812.1011">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="573.5" y="1816.6953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="575.5" y="1818.6953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="587.5" y="1824.9058">is_implicit_ : bool</text></a><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="345.7031" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="351" x="992.5" y="28.9531"/><ellipse cx="1020.55" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1023.5188,50.5938 Q1022.9406,50.8906 1022.3,51.0313 Q1021.6594,51.1875 1020.9563,51.1875 Q1018.4563,51.1875 1017.1281,49.5469 Q1015.8156,47.8906 1015.8156,44.7656 Q1015.8156,41.6406 1017.1281,39.9844 Q1018.4563,38.3281 1020.9563,38.3281 Q1021.6594,38.3281 1022.3,38.4844 Q1022.9563,38.6406 1023.5188,38.9375 L1023.5188,41.6563 Q1022.8938,41.0781 1022.3,40.8125 Q1021.7063,40.5313 1021.0813,40.5313 Q1019.7375,40.5313 1019.05,41.6094 Q1018.3625,42.6719 1018.3625,44.7656 Q1018.3625,46.8594 1019.05,47.9375 Q1019.7375,49 1021.0813,49 Q1021.7063,49 1022.3,48.7344 Q1022.8938,48.4531 1023.5188,47.875 L1023.5188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="1037.45" y="49.1074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="1305.5" y="25.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="1306.5" y="38.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="993.5" x2="1342.5" y1="60.9531" y2="60.9531"/><ellipse cx="1003.5" cy="71.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1012.5" y="75.1636">nested_trait() = default : void</text><ellipse cx="1003.5" cy="84.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1012.5" y="87.9683">nested_trait() = deleted : void</text><ellipse cx="1003.5" cy="97.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1012.5" y="100.7729">nested_trait() noexcept = default : void</text><ellipse cx="1003.5" cy="110.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1012.5" y="113.5776">~nested_trait() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="993.5" x2="1342.5" y1="120.1719" y2="120.1719"/><ellipse cx="1003.5" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="1012.5" y="134.3823">operator=() = deleted : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="1003.5" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="1012.5" y="147.187">operator=() noexcept = default : nested_trait&lt;T,Path&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="993.5" x2="1342.5" y1="153.7813" y2="153.7813"/><ellipse cx="1003.5" cy="164.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1012.5" y="167.9917">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="1003.5" cy="177.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1012.5" y="180.7964">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="1003.5" cy="190.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1012.5" y="193.6011">all_of&lt;F&gt;() const : _Bool</text><ellipse cx="1003.5" cy="203.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1012.5" y="206.4058">begin() : auto</text><ellipse cx="1003.5" cy="216" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1012.5" y="219.2104">begin() const : auto</text><ellipse cx="1003.5" cy="228.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1012.5" y="232.0151">cbegin() const : auto</text><ellipse cx="1003.5" cy="241.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1012.5" y="244.8198">cend() const : auto</text><ellipse cx="1003.5" cy="254.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1012.5" y="257.6245">end() : auto</text><ellipse cx="1003.5" cy="267.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1012.5" y="270.4292">end() const : auto</text><ellipse cx="1003.5" cy="280.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1012.5" y="283.2339">get_element&lt;V=T&gt;() const : auto</text><ellipse cx="1003.5" cy="292.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1012.5" y="296.0386">get_element&lt;V=T&gt;() const : auto</text><ellipse cx="1003.5" cy="305.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1012.5" y="308.8433">get_element_parent&lt;V=T&gt;() const : auto</text><ellipse cx="1003.5" cy="318.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1012.5" y="321.6479">has_element() const : bool</text><ellipse cx="1003.5" cy="331.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1012.5" y="334.4526">is_empty() const : bool</text><ellipse cx="1003.5" cy="344.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1012.5" y="347.2573">print_tree() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="993.5" x2="1342.5" y1="353.8516" y2="353.8516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="998.5" y="359.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1000.5" y="361.8516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1012.5" y="368.062">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="1027.5" y="1700.4531"/><ellipse cx="1042.5" cy="1716.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1046.6094,1722.4531 L1038.8906,1722.4531 L1038.8906,1710.0625 L1046.6094,1710.0625 L1046.6094,1712.2188 L1041.3438,1712.2188 L1041.3438,1714.8906 L1046.1094,1714.8906 L1046.1094,1717.0469 L1041.3438,1717.0469 L1041.3438,1720.2969 L1046.6094,1720.2969 L1046.6094,1722.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="1056.5" y="1720.6074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1028.5" x2="1307.5" y1="1732.4531" y2="1732.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="1033.5" y="1746.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1033.5" y="1759.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1033.5" y="1772.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1028.5" x2="1307.5" y1="1778.8672" y2="1778.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="330" y="619.9531"/><ellipse cx="345" cy="635.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M347.9688,641.5938 Q347.3906,641.8906 346.75,642.0313 Q346.1094,642.1875 345.4063,642.1875 Q342.9063,642.1875 341.5781,640.5469 Q340.2656,638.8906 340.2656,635.7656 Q340.2656,632.6406 341.5781,630.9844 Q342.9063,629.3281 345.4063,629.3281 Q346.1094,629.3281 346.75,629.4844 Q347.4063,629.6406 347.9688,629.9375 L347.9688,632.6563 Q347.3438,632.0781 346.75,631.8125 Q346.1563,631.5313 345.5313,631.5313 Q344.1875,631.5313 343.5,632.6094 Q342.8125,633.6719 342.8125,635.7656 Q342.8125,637.8594 343.5,638.9375 Q344.1875,640 345.5313,640 Q346.1563,640 346.75,639.7344 Q347.3438,639.4531 347.9688,638.875 L347.9688,641.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="359" y="640.1074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="331" x2="607" y1="651.9531" y2="651.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="331" x2="607" y1="659.9531" y2="659.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="336" y="665.9531"/><ellipse cx="341" cy="670.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="350" y="674.1636">value : const std::string_view</text></a><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="302.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="404" x="1185" y="1005.4531"/><ellipse cx="1263.75" cy="1021.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1266.7188,1027.0938 Q1266.1406,1027.3906 1265.5,1027.5313 Q1264.8594,1027.6875 1264.1563,1027.6875 Q1261.6563,1027.6875 1260.3281,1026.0469 Q1259.0156,1024.3906 1259.0156,1021.2656 Q1259.0156,1018.1406 1260.3281,1016.4844 Q1261.6563,1014.8281 1264.1563,1014.8281 Q1264.8594,1014.8281 1265.5,1014.9844 Q1266.1563,1015.1406 1266.7188,1015.4375 L1266.7188,1018.1563 Q1266.0938,1017.5781 1265.5,1017.3125 Q1264.9063,1017.0313 1264.2813,1017.0313 Q1262.9375,1017.0313 1262.25,1018.1094 Q1261.5625,1019.1719 1261.5625,1021.2656 Q1261.5625,1023.3594 1262.25,1024.4375 Q1262.9375,1025.5 1264.2813,1025.5 Q1264.9063,1025.5 1265.5,1025.2344 Q1266.0938,1024.9531 1266.7188,1024.375 L1266.7188,1027.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="1284.25" y="1025.6074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1186" x2="1588" y1="1037.4531" y2="1037.4531"/><ellipse cx="1196" cy="1048.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1205" y="1051.6636">source_file() = default : void</text><ellipse cx="1196" cy="1061.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1205" y="1064.4683">source_file() : void</text><ellipse cx="1196" cy="1074.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1205" y="1077.2729">source_file() = deleted : void</text><ellipse cx="1196" cy="1086.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1205" y="1090.0776">source_file() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1186" x2="1588" y1="1096.6719" y2="1096.6719"/><ellipse cx="1196" cy="1107.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1205" y="1110.8823">operator=() = deleted : clanguml::common::model::source_file &amp;</text><ellipse cx="1196" cy="1120.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1205" y="1123.687">operator=() = deleted : clanguml::common::model::source_file &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1186" x2="1588" y1="1130.2813" y2="1130.2813"/><ellipse cx="1196" cy="1141.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1205" y="1144.4917">operator==() const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1186" x2="1588" y1="1151.0859" y2="1151.0859"/><ellipse cx="1196" cy="1162.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1205" y="1165.2964">context() const : inja::json</text><ellipse cx="1196" cy="1174.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1205" y="1178.1011">fs_path() const : std::filesystem::path</text><ellipse cx="1196" cy="1187.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1205" y="1190.9058">full_name() const : std::string</text><ellipse cx="1196" cy="1200.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="1205" y="1203.7104">full_path() const : clanguml::common::model::path</text><ellipse cx="1196" cy="1213.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1205" y="1216.5151">is_absolute() const : bool</text><ellipse cx="1196" cy="1226.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="1205" y="1229.3198">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="1196" cy="1238.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1205" y="1242.1245">set_absolute() : void</text><ellipse cx="1196" cy="1251.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1205" y="1254.9292">set_path() : void</text><ellipse cx="1196" cy="1264.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1205" y="1267.7339">set_type() : void</text><ellipse cx="1196" cy="1277.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1205" y="1280.5386">type() const : clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1186" x2="1588" y1="1287.1328" y2="1287.1328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1191" y="1293.1328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1193" y="1295.1328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1205" y="1301.3433">is_absolute_ : bool</text></a><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="396.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="659" x="4399.5" y="451.9531"/><ellipse cx="4613.75" cy="467.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4613.8594,463.2969 L4612.7031,468.375 L4615.0313,468.375 L4613.8594,463.2969 Z M4612.375,461.0625 L4615.3594,461.0625 L4618.7188,473.4531 L4616.2656,473.4531 L4615.5,470.3906 L4612.2188,470.3906 L4611.4688,473.4531 L4609.0313,473.4531 L4612.375,461.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="4634.25" y="472.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4400.5" x2="5057.5" y1="483.9531" y2="483.9531"/><ellipse cx="4410.5" cy="494.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4419.5" y="498.1636">diagram() : void</text><ellipse cx="4410.5" cy="507.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4419.5" y="510.9683">diagram() = deleted : void</text><ellipse cx="4410.5" cy="520.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4419.5" y="523.7729">diagram() noexcept : void</text><ellipse cx="4410.5" cy="533.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4419.5" y="536.5776">~diagram() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4400.5" x2="5057.5" y1="543.1719" y2="543.1719"/><ellipse cx="4410.5" cy="554.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="4419.5" y="557.3823">operator=() = deleted : clanguml::common::model::diagram &amp;</text><ellipse cx="4410.5" cy="566.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="4419.5" y="570.187">operator=() noexcept : clanguml::common::model::diagram &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4400.5" x2="5057.5" y1="576.7813" y2="576.7813"/><ellipse cx="4410.5" cy="587.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4419.5" y="590.9917">complete() const : bool</text><ellipse cx="4410.5" cy="600.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4419.5" y="603.7964">context() const = 0 : inja::json</text><ellipse cx="4410.5" cy="613.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4419.5" y="616.6011">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4410.5" cy="626.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4419.5" y="629.4058">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4410.5" cy="639" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="4419.5" y="642.2104">get_with_namespace() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4410.5" cy="651.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4419.5" y="655.0151">has_element() const : bool</text><ellipse cx="4410.5" cy="664.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4419.5" y="667.8198">name() const : std::string</text><ellipse cx="4410.5" cy="677.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4419.5" y="680.6245">set_complete() : void</text><ellipse cx="4410.5" cy="690.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4419.5" y="693.4292">set_filter() : void</text><ellipse cx="4410.5" cy="703.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4419.5" y="706.2339">set_name() : void</text><ellipse cx="4410.5" cy="715.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="719.0386">should_include() const : bool</text><ellipse cx="4410.5" cy="728.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="731.8433">should_include() const : bool</text><ellipse cx="4410.5" cy="741.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="744.6479">should_include() const : bool</text><ellipse cx="4410.5" cy="754.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="757.4526">should_include() const : bool</text><ellipse cx="4410.5" cy="767.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="770.2573">should_include() const : bool</text><ellipse cx="4410.5" cy="779.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="783.062">should_include() const : bool</text><ellipse cx="4410.5" cy="792.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4419.5" y="795.8667">should_include() const : bool</text><ellipse cx="4410.5" cy="805.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="4419.5" y="808.6714">type() const = 0 : clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4400.5" x2="5057.5" y1="815.2656" y2="815.2656"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4405.5" y="821.2656"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4407.5" y="823.2656"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4419.5" y="829.4761">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4405.5" y="834.0703"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4407.5" y="836.0703"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4419.5" y="842.2808">name_ : std::string</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L30" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L30" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="132.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4876" y="135.4531"/><ellipse cx="4891" cy="151.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4893.9688,157.0938 Q4893.3906,157.3906 4892.75,157.5313 Q4892.1094,157.6875 4891.4063,157.6875 Q4888.9063,157.6875 4887.5781,156.0469 Q4886.2656,154.3906 4886.2656,151.2656 Q4886.2656,148.1406 4887.5781,146.4844 Q4888.9063,144.8281 4891.4063,144.8281 Q4892.1094,144.8281 4892.75,144.9844 Q4893.4063,145.1406 4893.9688,145.4375 L4893.9688,148.1563 Q4893.3438,147.5781 4892.75,147.3125 Q4892.1563,147.0313 4891.5313,147.0313 Q4890.1875,147.0313 4889.5,148.1094 Q4888.8125,149.1719 4888.8125,151.2656 Q4888.8125,153.3594 4889.5,154.4375 Q4890.1875,155.5 4891.5313,155.5 Q4892.1563,155.5 4892.75,155.2344 Q4893.3438,154.9531 4893.9688,154.375 L4893.9688,157.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4905" y="155.6074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4877" x2="5163" y1="167.4531" y2="167.4531"/><ellipse cx="4887" cy="178.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4896" y="181.6636">diagram_filter() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4877" x2="5163" y1="188.2578" y2="188.2578"/><ellipse cx="4887" cy="199.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4896" y="202.4683">add_exclusive_filter() : void</text><ellipse cx="4887" cy="212.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4896" y="215.2729">add_inclusive_filter() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4884" y="221.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4896" y="228.0776">init_filters() : void</text><ellipse cx="4887" cy="237.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4896" y="240.8823">should_include() const : bool</text><ellipse cx="4887" cy="250.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4896" y="253.687">should_include&lt;T&gt;() const : _Bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4877" x2="5163" y1="260.2813" y2="260.2813"/></a><!--MD5=[7a65113fcf2e45c443974977561a90c9]
class C_0001786360230161561276--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L29" target="_top" title="element_view" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L29" xlink:show="new" xlink:title="element_view" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="99.2188" id="C_0001786360230161561276" style="stroke: #A80036; stroke-width: 1.5;" width="297" x="643.5" y="600.9531"/><ellipse cx="658.5" cy="616.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M661.4688,622.5938 Q660.8906,622.8906 660.25,623.0313 Q659.6094,623.1875 658.9063,623.1875 Q656.4063,623.1875 655.0781,621.5469 Q653.7656,619.8906 653.7656,616.7656 Q653.7656,613.6406 655.0781,611.9844 Q656.4063,610.3281 658.9063,610.3281 Q659.6094,610.3281 660.25,610.4844 Q660.9063,610.6406 661.4688,610.9375 L661.4688,613.6563 Q660.8438,613.0781 660.25,612.8125 Q659.6563,612.5313 659.0313,612.5313 Q657.6875,612.5313 657,613.6094 Q656.3125,614.6719 656.3125,616.7656 Q656.3125,618.8594 657,619.9375 Q657.6875,621 659.0313,621 Q659.6563,621 660.25,620.7344 Q660.8438,620.4531 661.4688,619.875 L661.4688,622.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="672.5" y="621.1074">clanguml::common::model::element_view</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="934.5" y="597.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="935.5" y="610.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="644.5" x2="939.5" y1="632.9531" y2="632.9531"/><ellipse cx="654.5" cy="643.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="663.5" y="647.1636">add() : void</text><ellipse cx="654.5" cy="656.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="663.5" y="659.9683">get() const : common::optional_ref&lt;T&gt;</text><ellipse cx="654.5" cy="669.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="663.5" y="672.7729">view() const : const reference_vector&lt;T&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="644.5" x2="939.5" y1="679.3672" y2="679.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="649.5" y="685.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="651.5" y="687.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="663.5" y="693.5776">elements_ : reference_vector&lt;T&gt;</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L35" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L35" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="204.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="383" x="1343.5" y="1640.9531"/><ellipse cx="1418.25" cy="1656.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1421.2188,1662.5938 Q1420.6406,1662.8906 1420,1663.0313 Q1419.3594,1663.1875 1418.6563,1663.1875 Q1416.1563,1663.1875 1414.8281,1661.5469 Q1413.5156,1659.8906 1413.5156,1656.7656 Q1413.5156,1653.6406 1414.8281,1651.9844 Q1416.1563,1650.3281 1418.6563,1650.3281 Q1419.3594,1650.3281 1420,1650.4844 Q1420.6563,1650.6406 1421.2188,1650.9375 L1421.2188,1653.6563 Q1420.5938,1653.0781 1420,1652.8125 Q1419.4063,1652.5313 1418.7813,1652.5313 Q1417.4375,1652.5313 1416.75,1653.6094 Q1416.0625,1654.6719 1416.0625,1656.7656 Q1416.0625,1658.8594 1416.75,1659.9375 Q1417.4375,1661 1418.7813,1661 Q1419.4063,1661 1420,1660.7344 Q1420.5938,1660.4531 1421.2188,1659.875 L1421.2188,1662.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="1438.75" y="1661.1074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1344.5" x2="1725.5" y1="1672.9531" y2="1672.9531"/><ellipse cx="1354.5" cy="1683.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1363.5" y="1687.1636">package() : void</text><ellipse cx="1354.5" cy="1696.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1363.5" y="1699.9683">package() = deleted : void</text><ellipse cx="1354.5" cy="1709.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1363.5" y="1712.7729">package() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1344.5" x2="1725.5" y1="1719.3672" y2="1719.3672"/><ellipse cx="1354.5" cy="1730.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="1363.5" y="1733.5776">operator=() = deleted : clanguml::common::model::package &amp;</text><ellipse cx="1354.5" cy="1743.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="1363.5" y="1746.3823">operator=() = deleted : clanguml::common::model::package &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1344.5" x2="1725.5" y1="1752.9766" y2="1752.9766"/><ellipse cx="1354.5" cy="1763.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1363.5" y="1767.187">add_package() : void</text><ellipse cx="1354.5" cy="1776.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1363.5" y="1779.9917">full_name() const : std::string</text><ellipse cx="1354.5" cy="1789.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1363.5" y="1792.7964">is_deprecated() const : bool</text><ellipse cx="1354.5" cy="1802.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1363.5" y="1805.6011">set_deprecated() : void</text><ellipse cx="1354.5" cy="1815.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1363.5" y="1818.4058">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1344.5" x2="1725.5" y1="1825" y2="1825"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1349.5" y="1831"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1351.5" y="1833"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1363.5" y="1839.2104">is_deprecated_ : bool</text></a><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="4588" y="1119.4531"/><ellipse cx="4603" cy="1135.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4607.1094,1141.4531 L4599.3906,1141.4531 L4599.3906,1129.0625 L4607.1094,1129.0625 L4607.1094,1131.2188 L4601.8438,1131.2188 L4601.8438,1133.8906 L4606.6094,1133.8906 L4606.6094,1136.0469 L4601.8438,1136.0469 L4601.8438,1139.2969 L4607.1094,1139.2969 L4607.1094,1141.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="4617" y="1139.6074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4589" x2="4829" y1="1151.4531" y2="1151.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="4594" y="1165.6636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="4594" y="1178.4683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4589" x2="4829" y1="1185.0625" y2="1185.0625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="196.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="5093" y="551.9531"/><ellipse cx="5119.7" cy="567.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5122.6688,573.5938 Q5122.0906,573.8906 5121.45,574.0313 Q5120.8094,574.1875 5120.1063,574.1875 Q5117.6063,574.1875 5116.2781,572.5469 Q5114.9656,570.8906 5114.9656,567.7656 Q5114.9656,564.6406 5116.2781,562.9844 Q5117.6063,561.3281 5120.1063,561.3281 Q5120.8094,561.3281 5121.45,561.4844 Q5122.1063,561.6406 5122.6688,561.9375 L5122.6688,564.6563 Q5122.0438,564.0781 5121.45,563.8125 Q5120.8563,563.5313 5120.2313,563.5313 Q5118.8875,563.5313 5118.2,564.6094 Q5117.5125,565.6719 5117.5125,567.7656 Q5117.5125,569.8594 5118.2,570.9375 Q5118.8875,572 5120.2313,572 Q5120.8563,572 5121.45,571.7344 Q5122.0438,571.4531 5122.6688,570.875 L5122.6688,573.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="5136.3" y="572.1074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5094" x2="5392" y1="583.9531" y2="583.9531"/><ellipse cx="5104" cy="594.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5113" y="598.1636">filter_visitor() : void</text><ellipse cx="5104" cy="607.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5113" y="610.9683">~filter_visitor() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5094" x2="5392" y1="617.5625" y2="617.5625"/><ellipse cx="5104" cy="628.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5113" y="631.7729">is_exclusive() const : bool</text><ellipse cx="5104" cy="641.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="5113" y="644.5776">is_inclusive() const : bool</text><ellipse cx="5104" cy="654.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5113" y="657.3823">match() const : tvl::value_t</text><ellipse cx="5104" cy="666.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5113" y="670.187">match() const : tvl::value_t</text><ellipse cx="5104" cy="679.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5113" y="682.9917">match() const : tvl::value_t</text><ellipse cx="5104" cy="692.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5113" y="695.7964">match() const : tvl::value_t</text><ellipse cx="5104" cy="705.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5113" y="708.6011">match() const : tvl::value_t</text><ellipse cx="5104" cy="718.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5113" y="721.4058">match() const : tvl::value_t</text><ellipse cx="5104" cy="731" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="5113" y="734.2104">type() const : clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5094" x2="5392" y1="740.8047" y2="740.8047"/></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="107.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="5969.5" y="1102.9531"/><ellipse cx="5984.5" cy="1118.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5987.4688,1124.5938 Q5986.8906,1124.8906 5986.25,1125.0313 Q5985.6094,1125.1875 5984.9063,1125.1875 Q5982.4063,1125.1875 5981.0781,1123.5469 Q5979.7656,1121.8906 5979.7656,1118.7656 Q5979.7656,1115.6406 5981.0781,1113.9844 Q5982.4063,1112.3281 5984.9063,1112.3281 Q5985.6094,1112.3281 5986.25,1112.4844 Q5986.9063,1112.6406 5987.4688,1112.9375 L5987.4688,1115.6563 Q5986.8438,1115.0781 5986.25,1114.8125 Q5985.6563,1114.5313 5985.0313,1114.5313 Q5983.6875,1114.5313 5983,1115.6094 Q5982.3125,1116.6719 5982.3125,1118.7656 Q5982.3125,1120.8594 5983,1121.9375 Q5983.6875,1123 5985.0313,1123 Q5985.6563,1123 5986.25,1122.7344 Q5986.8438,1122.4531 5987.4688,1121.875 L5987.4688,1124.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="5998.5" y="1123.1074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5970.5" x2="6239.5" y1="1134.9531" y2="1134.9531"/><ellipse cx="5980.5" cy="1145.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5989.5" y="1149.1636">anyof_filter() : void</text><ellipse cx="5980.5" cy="1158.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5989.5" y="1161.9683">~anyof_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5970.5" x2="6239.5" y1="1168.5625" y2="1168.5625"/><ellipse cx="5980.5" cy="1179.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5989.5" y="1182.7729">match() const : tvl::value_t</text><ellipse cx="5980.5" cy="1192.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5989.5" y="1195.5776">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5970.5" x2="6239.5" y1="1202.1719" y2="1202.1719"/></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="120.0234" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="6276" y="1096.4531"/><ellipse cx="6291" cy="1112.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6293.9688,1118.0938 Q6293.3906,1118.3906 6292.75,1118.5313 Q6292.1094,1118.6875 6291.4063,1118.6875 Q6288.9063,1118.6875 6287.5781,1117.0469 Q6286.2656,1115.3906 6286.2656,1112.2656 Q6286.2656,1109.1406 6287.5781,1107.4844 Q6288.9063,1105.8281 6291.4063,1105.8281 Q6292.1094,1105.8281 6292.75,1105.9844 Q6293.4063,1106.1406 6293.9688,1106.4375 L6293.9688,1109.1563 Q6293.3438,1108.5781 6292.75,1108.3125 Q6292.1563,1108.0313 6291.5313,1108.0313 Q6290.1875,1108.0313 6289.5,1109.1094 Q6288.8125,1110.1719 6288.8125,1112.2656 Q6288.8125,1114.3594 6289.5,1115.4375 Q6290.1875,1116.5 6291.5313,1116.5 Q6292.1563,1116.5 6292.75,1116.2344 Q6293.3438,1115.9531 6293.9688,1115.375 L6293.9688,1118.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="6305" y="1116.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6277" x2="6585" y1="1128.4531" y2="1128.4531"/><ellipse cx="6287" cy="1139.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6296" y="1142.6636">namespace_filter() : void</text><ellipse cx="6287" cy="1152.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="6296" y="1155.4683">~namespace_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6277" x2="6585" y1="1162.0625" y2="1162.0625"/><ellipse cx="6287" cy="1173.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6296" y="1176.2729">match() const : tvl::value_t</text><ellipse cx="6287" cy="1185.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6296" y="1189.0776">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6277" x2="6585" y1="1195.6719" y2="1195.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" target="_top" title="namespaces_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" xlink:show="new" xlink:title="namespaces_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6282" y="1201.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6284" y="1203.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" target="_top" title="namespaces_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" xlink:show="new" xlink:title="namespaces_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="6296" y="1209.8823">namespaces_ : std::vector&lt;namespace_&gt;</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="107.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="6621" y="1102.9531"/><ellipse cx="6636" cy="1118.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6638.9688,1124.5938 Q6638.3906,1124.8906 6637.75,1125.0313 Q6637.1094,1125.1875 6636.4063,1125.1875 Q6633.9063,1125.1875 6632.5781,1123.5469 Q6631.2656,1121.8906 6631.2656,1118.7656 Q6631.2656,1115.6406 6632.5781,1113.9844 Q6633.9063,1112.3281 6636.4063,1112.3281 Q6637.1094,1112.3281 6637.75,1112.4844 Q6638.4063,1112.6406 6638.9688,1112.9375 L6638.9688,1115.6563 Q6638.3438,1115.0781 6637.75,1114.8125 Q6637.1563,1114.5313 6636.5313,1114.5313 Q6635.1875,1114.5313 6634.5,1115.6094 Q6633.8125,1116.6719 6633.8125,1118.7656 Q6633.8125,1120.8594 6634.5,1121.9375 Q6635.1875,1123 6636.5313,1123 Q6637.1563,1123 6637.75,1122.7344 Q6638.3438,1122.4531 6638.9688,1121.875 L6638.9688,1124.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="6650" y="1123.1074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6622" x2="6908" y1="1134.9531" y2="1134.9531"/><ellipse cx="6632" cy="1145.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6641" y="1149.1636">element_filter() : void</text><ellipse cx="6632" cy="1158.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6641" y="1161.9683">~element_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6622" x2="6908" y1="1168.5625" y2="1168.5625"/><ellipse cx="6632" cy="1179.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6641" y="1182.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6622" x2="6908" y1="1189.3672" y2="1189.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6627" y="1195.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6629" y="1197.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6641" y="1203.5776">elements_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[97547c2450036638bcec6f72d4b27f74]
class C_0002051668456717902300--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L130" target="_top" title="element_type_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="element_type_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="107.2188" id="C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="6944.5" y="1102.9531"/><ellipse cx="6959.5" cy="1118.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6962.4688,1124.5938 Q6961.8906,1124.8906 6961.25,1125.0313 Q6960.6094,1125.1875 6959.9063,1125.1875 Q6957.4063,1125.1875 6956.0781,1123.5469 Q6954.7656,1121.8906 6954.7656,1118.7656 Q6954.7656,1115.6406 6956.0781,1113.9844 Q6957.4063,1112.3281 6959.9063,1112.3281 Q6960.6094,1112.3281 6961.25,1112.4844 Q6961.9063,1112.6406 6962.4688,1112.9375 L6962.4688,1115.6563 Q6961.8438,1115.0781 6961.25,1114.8125 Q6960.6563,1114.5313 6960.0313,1114.5313 Q6958.6875,1114.5313 6958,1115.6094 Q6957.3125,1116.6719 6957.3125,1118.7656 Q6957.3125,1120.8594 6958,1121.9375 Q6958.6875,1123 6960.0313,1123 Q6960.6563,1123 6961.25,1122.7344 Q6961.8438,1122.4531 6962.4688,1121.875 L6962.4688,1124.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="6973.5" y="1123.1074">clanguml::common::model::element_type_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6945.5" x2="7264.5" y1="1134.9531" y2="1134.9531"/><ellipse cx="6955.5" cy="1145.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6964.5" y="1149.1636">element_type_filter() : void</text><ellipse cx="6955.5" cy="1158.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="6964.5" y="1161.9683">~element_type_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6945.5" x2="7264.5" y1="1168.5625" y2="1168.5625"/><ellipse cx="6955.5" cy="1179.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6964.5" y="1182.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6945.5" x2="7264.5" y1="1189.3672" y2="1189.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6950.5" y="1195.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6952.5" y="1197.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="6964.5" y="1203.5776">element_types_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L141" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="107.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="7301" y="1102.9531"/><ellipse cx="7316" cy="1118.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7318.9688,1124.5938 Q7318.3906,1124.8906 7317.75,1125.0313 Q7317.1094,1125.1875 7316.4063,1125.1875 Q7313.9063,1125.1875 7312.5781,1123.5469 Q7311.2656,1121.8906 7311.2656,1118.7656 Q7311.2656,1115.6406 7312.5781,1113.9844 Q7313.9063,1112.3281 7316.4063,1112.3281 Q7317.1094,1112.3281 7317.75,1112.4844 Q7318.4063,1112.6406 7318.9688,1112.9375 L7318.9688,1115.6563 Q7318.3438,1115.0781 7317.75,1114.8125 Q7317.1563,1114.5313 7316.5313,1114.5313 Q7315.1875,1114.5313 7314.5,1115.6094 Q7313.8125,1116.6719 7313.8125,1118.7656 Q7313.8125,1120.8594 7314.5,1121.9375 Q7315.1875,1123 7316.5313,1123 Q7317.1563,1123 7317.75,1122.7344 Q7318.3438,1122.4531 7318.9688,1121.875 L7318.9688,1124.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="7330" y="1123.1074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7302" x2="7592" y1="1134.9531" y2="1134.9531"/><ellipse cx="7312" cy="1145.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="7321" y="1149.1636">subclass_filter() : void</text><ellipse cx="7312" cy="1158.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="7321" y="1161.9683">~subclass_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7302" x2="7592" y1="1168.5625" y2="1168.5625"/><ellipse cx="7312" cy="1179.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="7321" y="1182.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7302" x2="7592" y1="1189.3672" y2="1189.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7307" y="1195.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7309" y="1197.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="7321" y="1203.5776">roots_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L152" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L152" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="107.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="3639" y="1102.9531"/><ellipse cx="3654" cy="1118.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3656.9688,1124.5938 Q3656.3906,1124.8906 3655.75,1125.0313 Q3655.1094,1125.1875 3654.4063,1125.1875 Q3651.9063,1125.1875 3650.5781,1123.5469 Q3649.2656,1121.8906 3649.2656,1118.7656 Q3649.2656,1115.6406 3650.5781,1113.9844 Q3651.9063,1112.3281 3654.4063,1112.3281 Q3655.1094,1112.3281 3655.75,1112.4844 Q3656.4063,1112.6406 3656.9688,1112.9375 L3656.9688,1115.6563 Q3656.3438,1115.0781 3655.75,1114.8125 Q3655.1563,1114.5313 3654.5313,1114.5313 Q3653.1875,1114.5313 3652.5,1115.6094 Q3651.8125,1116.6719 3651.8125,1118.7656 Q3651.8125,1120.8594 3652.5,1121.9375 Q3653.1875,1123 3654.5313,1123 Q3655.1563,1123 3655.75,1122.7344 Q3656.3438,1122.4531 3656.9688,1121.875 L3656.9688,1124.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="3668" y="1123.1074">clanguml::common::model::parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3640" x2="3924" y1="1134.9531" y2="1134.9531"/><ellipse cx="3650" cy="1145.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3659" y="1149.1636">parents_filter() : void</text><ellipse cx="3650" cy="1158.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="3659" y="1161.9683">~parents_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3640" x2="3924" y1="1168.5625" y2="1168.5625"/><ellipse cx="3650" cy="1179.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3659" y="1182.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3640" x2="3924" y1="1189.3672" y2="1189.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3645" y="1195.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3647" y="1197.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="3659" y="1203.5776">children_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L165" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L165" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="184.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="5211.5" y="1064.4531"/><ellipse cx="5226.5" cy="1080.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5229.4688,1086.0938 Q5228.8906,1086.3906 5228.25,1086.5313 Q5227.6094,1086.6875 5226.9063,1086.6875 Q5224.4063,1086.6875 5223.0781,1085.0469 Q5221.7656,1083.3906 5221.7656,1080.2656 Q5221.7656,1077.1406 5223.0781,1075.4844 Q5224.4063,1073.8281 5226.9063,1073.8281 Q5227.6094,1073.8281 5228.25,1073.9844 Q5228.9063,1074.1406 5229.4688,1074.4375 L5229.4688,1077.1563 Q5228.8438,1076.5781 5228.25,1076.3125 Q5227.6563,1076.0313 5227.0313,1076.0313 Q5225.6875,1076.0313 5225,1077.1094 Q5224.3125,1078.1719 5224.3125,1080.2656 Q5224.3125,1082.3594 5225,1083.4375 Q5225.6875,1084.5 5227.0313,1084.5 Q5227.6563,1084.5 5228.25,1084.2344 Q5228.8438,1083.9531 5229.4688,1083.375 L5229.4688,1086.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="5240.5" y="1084.6074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="5546.5" y="1061.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5547.5" y="1073.5918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5212.5" x2="5933.5" y1="1096.4531" y2="1096.4531"/><ellipse cx="5222.5" cy="1107.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="5231.5" y="1110.6636">edge_traversal_filter() : void</text><ellipse cx="5222.5" cy="1120.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5231.5" y="1123.4683">~edge_traversal_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5212.5" x2="5933.5" y1="1130.0625" y2="1130.0625"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1138.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="5231.5" y="1144.2729">add_adjacent&lt;C,D&gt;() const : _Bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1150.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5231.5" y="1157.0776">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1163.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5231.5" y="1169.8823">init() const : void</text><ellipse cx="5222.5" cy="1179.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5231.5" y="1182.687">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5212.5" x2="5933.5" y1="1189.2813" y2="1189.2813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5217.5" y="1195.2813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1197.2813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="5231.5" y="1203.4917">forward_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5217.5" y="1208.0859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1210.0859"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5231.5" y="1216.2964">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5217.5" y="1220.8906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1222.8906"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="5231.5" y="1229.1011">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5217.5" y="1233.6953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1235.6953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5231.5" y="1241.9058">roots_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L305" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L305" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="94.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="4865.5" y="1109.4531"/><ellipse cx="4880.5" cy="1125.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4883.4688,1131.0938 Q4882.8906,1131.3906 4882.25,1131.5313 Q4881.6094,1131.6875 4880.9063,1131.6875 Q4878.4063,1131.6875 4877.0781,1130.0469 Q4875.7656,1128.3906 4875.7656,1125.2656 Q4875.7656,1122.1406 4877.0781,1120.4844 Q4878.4063,1118.8281 4880.9063,1118.8281 Q4881.6094,1118.8281 4882.25,1118.9844 Q4882.9063,1119.1406 4883.4688,1119.4375 L4883.4688,1122.1563 Q4882.8438,1121.5781 4882.25,1121.3125 Q4881.6563,1121.0313 4881.0313,1121.0313 Q4879.6875,1121.0313 4879,1122.1094 Q4878.3125,1123.1719 4878.3125,1125.2656 Q4878.3125,1127.3594 4879,1128.4375 Q4879.6875,1129.5 4881.0313,1129.5 Q4881.6563,1129.5 4882.25,1129.2344 Q4882.8438,1128.9531 4883.4688,1128.375 L4883.4688,1131.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="4894.5" y="1129.6074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4866.5" x2="5175.5" y1="1141.4531" y2="1141.4531"/><ellipse cx="4876.5" cy="1152.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4885.5" y="1155.6636">relationship_filter() : void</text><ellipse cx="4876.5" cy="1165.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4885.5" y="1168.4683">~relationship_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4866.5" x2="5175.5" y1="1175.0625" y2="1175.0625"/><ellipse cx="4876.5" cy="1186.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4885.5" y="1189.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4866.5" x2="5175.5" y1="1195.8672" y2="1195.8672"/></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L318" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="94.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="3322.5" y="1109.4531"/><ellipse cx="3337.5" cy="1125.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3340.4688,1131.0938 Q3339.8906,1131.3906 3339.25,1131.5313 Q3338.6094,1131.6875 3337.9063,1131.6875 Q3335.4063,1131.6875 3334.0781,1130.0469 Q3332.7656,1128.3906 3332.7656,1125.2656 Q3332.7656,1122.1406 3334.0781,1120.4844 Q3335.4063,1118.8281 3337.9063,1118.8281 Q3338.6094,1118.8281 3339.25,1118.9844 Q3339.9063,1119.1406 3340.4688,1119.4375 L3340.4688,1122.1563 Q3339.8438,1121.5781 3339.25,1121.3125 Q3338.6563,1121.0313 3338.0313,1121.0313 Q3336.6875,1121.0313 3336,1122.1094 Q3335.3125,1123.1719 3335.3125,1125.2656 Q3335.3125,1127.3594 3336,1128.4375 Q3336.6875,1129.5 3338.0313,1129.5 Q3338.6563,1129.5 3339.25,1129.2344 Q3339.8438,1128.9531 3340.4688,1128.375 L3340.4688,1131.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="3351.5" y="1129.6074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3323.5" x2="3602.5" y1="1141.4531" y2="1141.4531"/><ellipse cx="3333.5" cy="1152.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3342.5" y="1155.6636">access_filter() : void</text><ellipse cx="3333.5" cy="1165.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3342.5" y="1168.4683">~access_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3323.5" x2="3602.5" y1="1175.0625" y2="1175.0625"/><ellipse cx="3333.5" cy="1186.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3342.5" y="1189.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3323.5" x2="3602.5" y1="1195.8672" y2="1195.8672"/></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L329" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="107.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="3960" y="1102.9531"/><ellipse cx="3975" cy="1118.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3977.9688,1124.5938 Q3977.3906,1124.8906 3976.75,1125.0313 Q3976.1094,1125.1875 3975.4063,1125.1875 Q3972.9063,1125.1875 3971.5781,1123.5469 Q3970.2656,1121.8906 3970.2656,1118.7656 Q3970.2656,1115.6406 3971.5781,1113.9844 Q3972.9063,1112.3281 3975.4063,1112.3281 Q3976.1094,1112.3281 3976.75,1112.4844 Q3977.4063,1112.6406 3977.9688,1112.9375 L3977.9688,1115.6563 Q3977.3438,1115.0781 3976.75,1114.8125 Q3976.1563,1114.5313 3975.5313,1114.5313 Q3974.1875,1114.5313 3973.5,1115.6094 Q3972.8125,1116.6719 3972.8125,1118.7656 Q3972.8125,1120.8594 3973.5,1121.9375 Q3974.1875,1123 3975.5313,1123 Q3976.1563,1123 3976.75,1122.7344 Q3977.3438,1122.4531 3977.9688,1121.875 L3977.9688,1124.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="3989" y="1123.1074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3961" x2="4243" y1="1134.9531" y2="1134.9531"/><ellipse cx="3971" cy="1145.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3980" y="1149.1636">context_filter() : void</text><ellipse cx="3971" cy="1158.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="3980" y="1161.9683">~context_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3961" x2="4243" y1="1168.5625" y2="1168.5625"/><ellipse cx="3971" cy="1179.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3980" y="1182.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3961" x2="4243" y1="1189.3672" y2="1189.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3966" y="1195.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3968" y="1197.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3980" y="1203.5776">context_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L340" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L340" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="132.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="4279.5" y="1089.9531"/><ellipse cx="4294.5" cy="1105.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4297.4688,1111.5938 Q4296.8906,1111.8906 4296.25,1112.0313 Q4295.6094,1112.1875 4294.9063,1112.1875 Q4292.4063,1112.1875 4291.0781,1110.5469 Q4289.7656,1108.8906 4289.7656,1105.7656 Q4289.7656,1102.6406 4291.0781,1100.9844 Q4292.4063,1099.3281 4294.9063,1099.3281 Q4295.6094,1099.3281 4296.25,1099.4844 Q4296.9063,1099.6406 4297.4688,1099.9375 L4297.4688,1102.6563 Q4296.8438,1102.0781 4296.25,1101.8125 Q4295.6563,1101.5313 4295.0313,1101.5313 Q4293.6875,1101.5313 4293,1102.6094 Q4292.3125,1103.6719 4292.3125,1105.7656 Q4292.3125,1107.8594 4293,1108.9375 Q4293.6875,1110 4295.0313,1110 Q4295.6563,1110 4296.25,1109.7344 Q4296.8438,1109.4531 4297.4688,1108.875 L4297.4688,1111.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="4308.5" y="1110.1074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4280.5" x2="4551.5" y1="1121.9531" y2="1121.9531"/><ellipse cx="4290.5" cy="1132.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4299.5" y="1136.1636">paths_filter() : void</text><ellipse cx="4290.5" cy="1145.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="4299.5" y="1148.9683">~paths_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4280.5" x2="4551.5" y1="1155.5625" y2="1155.5625"/><ellipse cx="4290.5" cy="1166.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4299.5" y="1169.7729">match() const : tvl::value_t</text><ellipse cx="4290.5" cy="1179.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4299.5" y="1182.5776">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4280.5" x2="4551.5" y1="1189.1719" y2="1189.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4285.5" y="1195.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4287.5" y="1197.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4299.5" y="1203.3823">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4285.5" y="1207.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4287.5" y="1209.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4299.5" y="1216.187">root_ : std::filesystem::path</text></a><!--MD5=[505367997c2b7099e4ddff1763d1acb5]
class C_0001400215772842495226--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L31" target="_top" title="participant" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L31" xlink:show="new" xlink:title="participant" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="153.6328" id="C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="288" y="1666.4531"/><ellipse cx="371.75" cy="1682.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M374.7188,1688.0938 Q374.1406,1688.3906 373.5,1688.5313 Q372.8594,1688.6875 372.1563,1688.6875 Q369.6563,1688.6875 368.3281,1687.0469 Q367.0156,1685.3906 367.0156,1682.2656 Q367.0156,1679.1406 368.3281,1677.4844 Q369.6563,1675.8281 372.1563,1675.8281 Q372.8594,1675.8281 373.5,1675.9844 Q374.1563,1676.1406 374.7188,1676.4375 L374.7188,1679.1563 Q374.0938,1678.5781 373.5,1678.3125 Q372.9063,1678.0313 372.2813,1678.0313 Q370.9375,1678.0313 370.25,1679.1094 Q369.5625,1680.1719 369.5625,1682.2656 Q369.5625,1684.3594 370.25,1685.4375 Q370.9375,1686.5 372.2813,1686.5 Q372.9063,1686.5 373.5,1686.2344 Q374.0938,1685.9531 374.7188,1685.375 L374.7188,1688.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="392.25" y="1686.6074">participant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="289" x2="531" y1="1698.4531" y2="1698.4531"/><ellipse cx="299" cy="1709.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="308" y="1712.6636">participant() = deleted : void</text><ellipse cx="299" cy="1722.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="308" y="1725.4683">participant() noexcept = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="289" x2="531" y1="1732.0625" y2="1732.0625"/><ellipse cx="299" cy="1743.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="308" y="1746.2729">operator=() = deleted : participant &amp;</text><ellipse cx="299" cy="1755.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="308" y="1759.0776">operator=() = deleted : participant &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="289" x2="531" y1="1765.6719" y2="1765.6719"/><ellipse cx="299" cy="1776.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="308" y="1779.8823">to_string() const : std::string</text><ellipse cx="299" cy="1789.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="308" y="1792.687">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="289" x2="531" y1="1799.2813" y2="1799.2813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L55" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L55" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="294" y="1805.2813"/><ellipse cx="299" cy="1810.2813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L55" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L55" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="308" y="1813.4917">stereotype_ : participant::stereotype_t</text></a><!--MD5=[b48b235710cc2ee42c2ac80c0af2e984]
class C_0001483671267820004141--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L33" target="_top" title="participant##stereotype_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L33" xlink:show="new" xlink:title="participant##stereotype_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="150.4375" id="C_0001483671267820004141" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="316.5" y="1081.4531"/><ellipse cx="331.5" cy="1097.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M335.6094,1103.4531 L327.8906,1103.4531 L327.8906,1091.0625 L335.6094,1091.0625 L335.6094,1093.2188 L330.3438,1093.2188 L330.3438,1095.8906 L335.1094,1095.8906 L335.1094,1098.0469 L330.3438,1098.0469 L330.3438,1101.2969 L335.6094,1101.2969 L335.6094,1103.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="345.5" y="1101.6074">participant::stereotype_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="317.5" x2="502.5" y1="1113.4531" y2="1113.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="322.5" y="1127.6636">participant</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="322.5" y="1140.4683">actor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="322.5" y="1153.2729">boundary</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="322.5" y="1166.0776">control</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="322.5" y="1178.8823">entity</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="322.5" y="1191.687">database</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="322.5" y="1204.4917">collections</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="322.5" y="1217.2964">queue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="317.5" x2="502.5" y1="1223.8906" y2="1223.8906"/></a><!--MD5=[b4d475f36669eac2ac4b1a7424da64db]
class C_0000885514871619471610--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L58" target="_top" title="class_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L58" xlink:show="new" xlink:title="class_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="384.1172" id="C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="570.5" y="2364.9531"/><ellipse cx="670.75" cy="2380.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M673.7188,2386.5938 Q673.1406,2386.8906 672.5,2387.0313 Q671.8594,2387.1875 671.1563,2387.1875 Q668.6563,2387.1875 667.3281,2385.5469 Q666.0156,2383.8906 666.0156,2380.7656 Q666.0156,2377.6406 667.3281,2375.9844 Q668.6563,2374.3281 671.1563,2374.3281 Q671.8594,2374.3281 672.5,2374.4844 Q673.1563,2374.6406 673.7188,2374.9375 L673.7188,2377.6563 Q673.0938,2377.0781 672.5,2376.8125 Q671.9063,2376.5313 671.2813,2376.5313 Q669.9375,2376.5313 669.25,2377.6094 Q668.5625,2378.6719 668.5625,2380.7656 Q668.5625,2382.8594 669.25,2383.9375 Q669.9375,2385 671.2813,2385 Q671.9063,2385 672.5,2384.7344 Q673.0938,2384.4531 673.7188,2383.875 L673.7188,2386.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="691.25" y="2385.1074">class_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="571.5" x2="816.5" y1="2396.9531" y2="2396.9531"/><ellipse cx="581.5" cy="2407.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="590.5" y="2411.1636">class_() : void</text><ellipse cx="581.5" cy="2420.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="590.5" y="2423.9683">class_() = deleted : void</text><ellipse cx="581.5" cy="2433.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="590.5" y="2436.7729">class_() noexcept = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="571.5" x2="816.5" y1="2443.3672" y2="2443.3672"/><ellipse cx="581.5" cy="2454.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="590.5" y="2457.5776">operator=() = deleted : class_ &amp;</text><ellipse cx="581.5" cy="2467.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="590.5" y="2470.3823">operator=() = deleted : class_ &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="571.5" x2="816.5" y1="2476.9766" y2="2476.9766"/><ellipse cx="581.5" cy="2487.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="590.5" y="2491.187">full_name() const : std::string</text><ellipse cx="581.5" cy="2500.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="590.5" y="2503.9917">full_name_no_ns() const : std::string</text><ellipse cx="581.5" cy="2513.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="590.5" y="2516.7964">is_abstract() const : bool</text><ellipse cx="581.5" cy="2526.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="590.5" y="2529.6011">is_alias() const : bool</text><ellipse cx="581.5" cy="2539.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="590.5" y="2542.4058">is_alias() : void</text><ellipse cx="581.5" cy="2552" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="590.5" y="2555.2104">is_lambda() const : bool</text><ellipse cx="581.5" cy="2564.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="590.5" y="2568.0151">is_lambda() : void</text><ellipse cx="581.5" cy="2577.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="590.5" y="2580.8198">is_struct() const : bool</text><ellipse cx="581.5" cy="2590.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="590.5" y="2593.6245">is_struct() : void</text><ellipse cx="581.5" cy="2603.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="590.5" y="2606.4292">is_template() const : bool</text><ellipse cx="581.5" cy="2616.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="590.5" y="2619.2339">is_template() : void</text><ellipse cx="581.5" cy="2628.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="590.5" y="2632.0386">is_template_instantiation() const : bool</text><ellipse cx="581.5" cy="2641.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="590.5" y="2644.8433">is_template_instantiation() : void</text><ellipse cx="581.5" cy="2654.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="590.5" y="2657.6479">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="571.5" x2="816.5" y1="2664.2422" y2="2664.2422"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L101" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L101" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="576.5" y="2670.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="578.5" y="2672.2422"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L101" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L101" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="590.5" y="2678.4526">full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L98" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L98" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="576.5" y="2683.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="578.5" y="2685.0469"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L98" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L98" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="590.5" y="2691.2573">is_alias_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L99" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L99" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="576.5" y="2695.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="578.5" y="2697.8516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L99" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L99" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="590.5" y="2704.062">is_lambda_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L95" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L95" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="576.5" y="2708.6563"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="578.5" y="2710.6563"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L95" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L95" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="590.5" y="2716.8667">is_struct_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L96" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L96" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="576.5" y="2721.4609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="578.5" y="2723.4609"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L96" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L96" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="590.5" y="2729.6714">is_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L97" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L97" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="576.5" y="2734.2656"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="578.5" y="2736.2656"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L97" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L97" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="590.5" y="2742.4761">is_template_instantiation_ : bool</text></a><!--MD5=[de5a82e666bdb24735685a0a35a357d3]
class C_0001701531547288995691--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L104" target="_top" title="lambda" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L104" xlink:show="new" xlink:title="lambda" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="60.8047" id="C_0001701531547288995691" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="614" y="3225.4531"/><ellipse cx="687.75" cy="3241.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M690.7188,3247.0938 Q690.1406,3247.3906 689.5,3247.5313 Q688.8594,3247.6875 688.1563,3247.6875 Q685.6563,3247.6875 684.3281,3246.0469 Q683.0156,3244.3906 683.0156,3241.2656 Q683.0156,3238.1406 684.3281,3236.4844 Q685.6563,3234.8281 688.1563,3234.8281 Q688.8594,3234.8281 689.5,3234.9844 Q690.1563,3235.1406 690.7188,3235.4375 L690.7188,3238.1563 Q690.0938,3237.5781 689.5,3237.3125 Q688.9063,3237.0313 688.2813,3237.0313 Q686.9375,3237.0313 686.25,3238.1094 Q685.5625,3239.1719 685.5625,3241.2656 Q685.5625,3243.3594 686.25,3244.4375 Q686.9375,3245.5 688.2813,3245.5 Q688.9063,3245.5 689.5,3245.2344 Q690.0938,3244.9531 690.7188,3244.375 L690.7188,3247.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="708.25" y="3245.6074">lambda</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="615" x2="815" y1="3257.4531" y2="3257.4531"/><ellipse cx="625" cy="3268.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="634" y="3271.6636">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="615" x2="815" y1="3278.2578" y2="3278.2578"/></a><!--MD5=[fea9086604aaaceeec1cf807579b2064]
class C_0000232638456031681828--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L110" target="_top" title="function" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L110" xlink:show="new" xlink:title="function" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="332.8984" id="C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="57.5" y="2390.4531"/><ellipse cx="195.25" cy="2406.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M198.2188,2412.0938 Q197.6406,2412.3906 197,2412.5313 Q196.3594,2412.6875 195.6563,2412.6875 Q193.1563,2412.6875 191.8281,2411.0469 Q190.5156,2409.3906 190.5156,2406.2656 Q190.5156,2403.1406 191.8281,2401.4844 Q193.1563,2399.8281 195.6563,2399.8281 Q196.3594,2399.8281 197,2399.9844 Q197.6563,2400.1406 198.2188,2400.4375 L198.2188,2403.1563 Q197.5938,2402.5781 197,2402.3125 Q196.4063,2402.0313 195.7813,2402.0313 Q194.4375,2402.0313 193.75,2403.1094 Q193.0625,2404.1719 193.0625,2406.2656 Q193.0625,2408.3594 193.75,2409.4375 Q194.4375,2410.5 195.7813,2410.5 Q196.4063,2410.5 197,2410.2344 Q197.5938,2409.9531 198.2188,2409.375 L198.2188,2412.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="215.75" y="2410.6074">function</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="58.5" x2="391.5" y1="2422.4531" y2="2422.4531"/><ellipse cx="68.5" cy="2433.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="77.5" y="2436.6636">function() : void</text><ellipse cx="68.5" cy="2446.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="77.5" y="2449.4683">function() = deleted : void</text><ellipse cx="68.5" cy="2459.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="77.5" y="2462.2729">function() noexcept = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="58.5" x2="391.5" y1="2468.8672" y2="2468.8672"/><ellipse cx="68.5" cy="2479.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="77.5" y="2483.0776">operator=() = deleted : function &amp;</text><ellipse cx="68.5" cy="2492.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="77.5" y="2495.8823">operator=() = deleted : function &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="58.5" x2="391.5" y1="2502.4766" y2="2502.4766"/><ellipse cx="68.5" cy="2513.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="77.5" y="2516.687">add_parameter() : void</text><ellipse cx="68.5" cy="2526.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="77.5" y="2529.4917">full_name() const : std::string</text><ellipse cx="68.5" cy="2539.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="77.5" y="2542.2964">full_name_no_ns() const : std::string</text><ellipse cx="68.5" cy="2551.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="77.5" y="2555.1011">is_const() const : bool</text><ellipse cx="68.5" cy="2564.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="77.5" y="2567.9058">is_const() : void</text><ellipse cx="68.5" cy="2577.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="77.5" y="2580.7104">is_static() const : bool</text><ellipse cx="68.5" cy="2590.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="77.5" y="2593.5151">is_static() : void</text><ellipse cx="68.5" cy="2603.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="77.5" y="2606.3198">is_void() const : bool</text><ellipse cx="68.5" cy="2615.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="77.5" y="2619.1245">is_void() : void</text><ellipse cx="68.5" cy="2628.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="77.5" y="2631.9292">message_name() const : std::string</text><ellipse cx="68.5" cy="2641.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="77.5" y="2644.7339">parameters() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="68.5" cy="2654.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="77.5" y="2657.5386">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="58.5" x2="391.5" y1="2664.1328" y2="2664.1328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L145" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L145" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="63.5" y="2670.1328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="65.5" y="2672.1328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L145" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L145" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="77.5" y="2678.3433">is_const_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L147" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L147" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="63.5" y="2682.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="65.5" y="2684.9375"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L147" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L147" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="77.5" y="2691.1479">is_static_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L146" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L146" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="63.5" y="2695.7422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="65.5" y="2697.7422"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L146" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L146" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="77.5" y="2703.9526">is_void_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L148" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L148" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="63.5" y="2708.5469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="65.5" y="2710.5469"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L148" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L148" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="77.5" y="2716.7573">parameters_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[127e94f19f834191fca232f5c695c379]
class C_0001521646084824511527--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L111" target="_top" title="function##message_render_mode" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L111" xlink:show="new" xlink:title="function##message_render_mode" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="86.4141" id="C_0001521646084824511527" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="15.5" y="1700.4531"/><ellipse cx="30.5" cy="1716.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34.6094,1722.4531 L26.8906,1722.4531 L26.8906,1710.0625 L34.6094,1710.0625 L34.6094,1712.2188 L29.3438,1712.2188 L29.3438,1714.8906 L34.1094,1714.8906 L34.1094,1717.0469 L29.3438,1717.0469 L29.3438,1720.2969 L34.6094,1720.2969 L34.6094,1722.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="205" x="44.5" y="1720.6074">function::message_render_mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16.5" x2="251.5" y1="1732.4531" y2="1732.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="21.5" y="1746.6636">full</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="21.5" y="1759.4683">abbreviated</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="21.5" y="1772.2729">no_arguments</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16.5" x2="251.5" y1="1778.8672" y2="1778.8672"/></a><!--MD5=[78f12b5739bf72f527e2506c0e981f4b]
class C_0000817665972547784504--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L151" target="_top" title="method" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L151" xlink:show="new" xlink:title="method" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="307.2891" id="C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="6" y="3102.4531"/><ellipse cx="104.75" cy="3118.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M107.7188,3124.0938 Q107.1406,3124.3906 106.5,3124.5313 Q105.8594,3124.6875 105.1563,3124.6875 Q102.6563,3124.6875 101.3281,3123.0469 Q100.0156,3121.3906 100.0156,3118.2656 Q100.0156,3115.1406 101.3281,3113.4844 Q102.6563,3111.8281 105.1563,3111.8281 Q105.8594,3111.8281 106.5,3111.9844 Q107.1563,3112.1406 107.7188,3112.4375 L107.7188,3115.1563 Q107.0938,3114.5781 106.5,3114.3125 Q105.9063,3114.0313 105.2813,3114.0313 Q103.9375,3114.0313 103.25,3115.1094 Q102.5625,3116.1719 102.5625,3118.2656 Q102.5625,3120.3594 103.25,3121.4375 Q103.9375,3122.5 105.2813,3122.5 Q105.9063,3122.5 106.5,3122.2344 Q107.0938,3121.9531 107.7188,3121.375 L107.7188,3124.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="125.25" y="3122.6074">method</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="259" y1="3134.4531" y2="3134.4531"/><ellipse cx="17" cy="3145.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="26" y="3148.6636">method() : void</text><ellipse cx="17" cy="3158.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="3161.4683">method() = deleted : void</text><ellipse cx="17" cy="3171.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="26" y="3174.2729">method() noexcept = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7" x2="259" y1="3180.8672" y2="3180.8672"/><ellipse cx="17" cy="3191.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="3195.0776">operator=() = deleted : method &amp;</text><ellipse cx="17" cy="3204.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="3207.8823">operator=() = deleted : method &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7" x2="259" y1="3214.4766" y2="3214.4766"/><ellipse cx="17" cy="3225.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="3228.687">alias() const : std::string</text><ellipse cx="17" cy="3238.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="26" y="3241.4917">class_full_name() const : const auto &amp;</text><ellipse cx="17" cy="3251.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="26" y="3254.2964">class_id() const : diagram_element::id_t</text><ellipse cx="17" cy="3263.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="3267.1011">full_name() const : std::string</text><ellipse cx="17" cy="3276.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="26" y="3279.9058">message_name() const : std::string</text><ellipse cx="17" cy="3289.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="26" y="3292.7104">method_name() const : std::string</text><ellipse cx="17" cy="3302.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="3305.5151">set_class_full_name() : void</text><ellipse cx="17" cy="3315.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="26" y="3318.3198">set_class_id() : void</text><ellipse cx="17" cy="3327.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="3331.1245">set_method_name() : void</text><ellipse cx="17" cy="3340.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26" y="3343.9292">to_string() const : std::string</text><ellipse cx="17" cy="3353.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="26" y="3356.7339">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="259" y1="3363.3281" y2="3363.3281"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L184" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L184" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="3369.3281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="3371.3281"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L184" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L184" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="3377.5386">class_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L182" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L182" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="3382.1328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="3384.1328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L182" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L182" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="3390.3433">class_id_ : diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L183" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L183" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="3394.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="3396.9375"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L183" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L183" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="3403.1479">method_name_ : std::string</text></a><!--MD5=[32d760b788d79d5e0bfcc0697e979e7d]
class C_0002280191967493310558--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L187" target="_top" title="function_template" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L187" xlink:show="new" xlink:title="function_template" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="179.2422" id="C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="295" y="3166.4531"/><ellipse cx="376.25" cy="3182.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M379.2188,3188.0938 Q378.6406,3188.3906 378,3188.5313 Q377.3594,3188.6875 376.6563,3188.6875 Q374.1563,3188.6875 372.8281,3187.0469 Q371.5156,3185.3906 371.5156,3182.2656 Q371.5156,3179.1406 372.8281,3177.4844 Q374.1563,3175.8281 376.6563,3175.8281 Q377.3594,3175.8281 378,3175.9844 Q378.6563,3176.1406 379.2188,3176.4375 L379.2188,3179.1563 Q378.5938,3178.5781 378,3178.3125 Q377.4063,3178.0313 376.7813,3178.0313 Q375.4375,3178.0313 374.75,3179.1094 Q374.0625,3180.1719 374.0625,3182.2656 Q374.0625,3184.3594 374.75,3185.4375 Q375.4375,3186.5 376.7813,3186.5 Q377.4063,3186.5 378,3186.2344 Q378.5938,3185.9531 379.2188,3185.375 L379.2188,3188.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="396.75" y="3186.6074">function_template</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="296" x2="578" y1="3198.4531" y2="3198.4531"/><ellipse cx="306" cy="3209.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="315" y="3212.6636">function_template() : void</text><ellipse cx="306" cy="3222.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="315" y="3225.4683">function_template() = deleted : void</text><ellipse cx="306" cy="3235.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="315" y="3238.2729">function_template() noexcept = deleted : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="296" x2="578" y1="3244.8672" y2="3244.8672"/><ellipse cx="306" cy="3255.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="315" y="3259.0776">operator=() = deleted : function_template &amp;</text><ellipse cx="306" cy="3268.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="315" y="3271.8823">operator=() = deleted : function_template &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="296" x2="578" y1="3278.4766" y2="3278.4766"/><ellipse cx="306" cy="3289.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="315" y="3292.687">full_name() const : std::string</text><ellipse cx="306" cy="3302.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="315" y="3305.4917">full_name_no_ns() const : std::string</text><ellipse cx="306" cy="3315.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="315" y="3318.2964">message_name() const : std::string</text><ellipse cx="306" cy="3327.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="315" y="3331.1011">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="296" x2="578" y1="3337.6953" y2="3337.6953"/></a><!--MD5=[d938ea8dcef347175d1d053a93bab664]
class C_0002228653068706235818--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L28" target="_top" title="message" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L28" xlink:show="new" xlink:title="message" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="286.4844" id="C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="2216.5" y="2413.9531"/><ellipse cx="2372.25" cy="2429.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2375.2188,2435.5938 Q2374.6406,2435.8906 2374,2436.0313 Q2373.3594,2436.1875 2372.6563,2436.1875 Q2370.1563,2436.1875 2368.8281,2434.5469 Q2367.5156,2432.8906 2367.5156,2429.7656 Q2367.5156,2426.6406 2368.8281,2424.9844 Q2370.1563,2423.3281 2372.6563,2423.3281 Q2373.3594,2423.3281 2374,2423.4844 Q2374.6563,2423.6406 2375.2188,2423.9375 L2375.2188,2426.6563 Q2374.5938,2426.0781 2374,2425.8125 Q2373.4063,2425.5313 2372.7813,2425.5313 Q2371.4375,2425.5313 2370.75,2426.6094 Q2370.0625,2427.6719 2370.0625,2429.7656 Q2370.0625,2431.8594 2370.75,2432.9375 Q2371.4375,2434 2372.7813,2434 Q2373.4063,2434 2374,2433.7344 Q2374.5938,2433.4531 2375.2188,2432.875 L2375.2188,2435.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="2392.75" y="2434.1074">message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2217.5" x2="2592.5" y1="2445.9531" y2="2445.9531"/><ellipse cx="2227.5" cy="2456.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2236.5" y="2460.1636">message() = default : void</text><ellipse cx="2227.5" cy="2469.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2236.5" y="2472.9683">message() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2217.5" x2="2592.5" y1="2479.5625" y2="2479.5625"/><ellipse cx="2227.5" cy="2490.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2236.5" y="2493.7729">from() const : common::model::diagram_element::id_t</text><ellipse cx="2227.5" cy="2503.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2236.5" y="2506.5776">message_name() const : const std::string &amp;</text><ellipse cx="2227.5" cy="2516.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2236.5" y="2519.3823">message_scope() const : common::model::message_scope_t</text><ellipse cx="2227.5" cy="2528.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2236.5" y="2532.187">return_type() const : const std::string &amp;</text><ellipse cx="2227.5" cy="2541.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2236.5" y="2544.9917">set_from() : void</text><ellipse cx="2227.5" cy="2554.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2236.5" y="2557.7964">set_message_name() : void</text><ellipse cx="2227.5" cy="2567.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2236.5" y="2570.6011">set_message_scope() : void</text><ellipse cx="2227.5" cy="2580.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2236.5" y="2583.4058">set_return_type() : void</text><ellipse cx="2227.5" cy="2593" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="2236.5" y="2596.2104">set_to() : void</text><ellipse cx="2227.5" cy="2605.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2236.5" y="2609.0151">set_type() : void</text><ellipse cx="2227.5" cy="2618.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2236.5" y="2621.8198">to() const : common::model::diagram_element::id_t</text><ellipse cx="2227.5" cy="2631.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2236.5" y="2634.6245">type() const : common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2217.5" x2="2592.5" y1="2641.2188" y2="2641.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L56" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L56" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2222.5" y="2647.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2224.5" y="2649.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L56" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L56" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2236.5" y="2655.4292">from_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L65" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L65" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2222.5" y="2660.0234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2224.5" y="2662.0234"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L65" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L65" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2236.5" y="2668.2339">message_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L67" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L67" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2222.5" y="2672.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2224.5" y="2674.8281"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L67" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L67" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2236.5" y="2681.0386">return_type_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L58" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L58" xlink:show="new" xlink:title="to_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2222.5" y="2685.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2224.5" y="2687.6328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L58" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L58" xlink:show="new" xlink:title="to_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2236.5" y="2693.8433">to_ : common::model::diagram_element::id_t</text></a><!--MD5=[1f8594e8e98680e5eb77b5543c1d2d76]
class C_0000460030520790196523--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L28" target="_top" title="activity" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L28" xlink:show="new" xlink:title="activity" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="145.6328" id="C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="2319.5" y="1670.4531"/><ellipse cx="2461.25" cy="1686.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2464.2188,1692.0938 Q2463.6406,1692.3906 2463,1692.5313 Q2462.3594,1692.6875 2461.6563,1692.6875 Q2459.1563,1692.6875 2457.8281,1691.0469 Q2456.5156,1689.3906 2456.5156,1686.2656 Q2456.5156,1683.1406 2457.8281,1681.4844 Q2459.1563,1679.8281 2461.6563,1679.8281 Q2462.3594,1679.8281 2463,1679.9844 Q2463.6563,1680.1406 2464.2188,1680.4375 L2464.2188,1683.1563 Q2463.5938,1682.5781 2463,1682.3125 Q2462.4063,1682.0313 2461.7813,1682.0313 Q2460.4375,1682.0313 2459.75,1683.1094 Q2459.0625,1684.1719 2459.0625,1686.2656 Q2459.0625,1688.3594 2459.75,1689.4375 Q2460.4375,1690.5 2461.7813,1690.5 Q2462.4063,1690.5 2463,1690.2344 Q2463.5938,1689.9531 2464.2188,1689.375 L2464.2188,1692.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="2481.75" y="1690.6074">activity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2320.5" x2="2653.5" y1="1702.4531" y2="1702.4531"/><ellipse cx="2330.5" cy="1713.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2339.5" y="1716.6636">activity() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2320.5" x2="2653.5" y1="1723.2578" y2="1723.2578"/><ellipse cx="2330.5" cy="1734.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2339.5" y="1737.4683">add_message() : void</text><ellipse cx="2330.5" cy="1747.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2339.5" y="1750.2729">from() const : common::model::diagram_element::id_t</text><ellipse cx="2330.5" cy="1759.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2339.5" y="1763.0776">messages() : std::vector&lt;message&gt; &amp;</text><ellipse cx="2330.5" cy="1772.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2339.5" y="1775.8823">messages() const : const std::vector&lt;message&gt; &amp;</text><ellipse cx="2330.5" cy="1785.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2339.5" y="1788.687">set_from() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2320.5" x2="2653.5" y1="1795.2813" y2="1795.2813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L43" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L43" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2325.5" y="1801.2813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2327.5" y="1803.2813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L43" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L43" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2339.5" y="1809.4917">from_ : common::model::diagram_element::id_t</text></a><!--MD5=[4ac8ef68b016624e17a7e7cc10156a8f]
class C_0000924044572035510976--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L30" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L30" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1piyy2ecq8uua)" height="460.9453" id="C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.5;" width="661" x="2194.5" y="925.9531"/><ellipse cx="2495.25" cy="941.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2498.2188,947.5938 Q2497.6406,947.8906 2497,948.0313 Q2496.3594,948.1875 2495.6563,948.1875 Q2493.1563,948.1875 2491.8281,946.5469 Q2490.5156,944.8906 2490.5156,941.7656 Q2490.5156,938.6406 2491.8281,936.9844 Q2493.1563,935.3281 2495.6563,935.3281 Q2496.3594,935.3281 2497,935.4844 Q2497.6563,935.6406 2498.2188,935.9375 L2498.2188,938.6563 Q2497.5938,938.0781 2497,937.8125 Q2496.4063,937.5313 2495.7813,937.5313 Q2494.4375,937.5313 2493.75,938.6094 Q2493.0625,939.6719 2493.0625,941.7656 Q2493.0625,943.8594 2493.75,944.9375 Q2494.4375,946 2495.7813,946 Q2496.4063,946 2497,945.7344 Q2497.5938,945.4531 2498.2188,944.875 L2498.2188,947.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="2515.75" y="946.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2195.5" x2="2854.5" y1="957.9531" y2="957.9531"/><ellipse cx="2205.5" cy="968.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2214.5" y="972.1636">diagram() = default : void</text><ellipse cx="2205.5" cy="981.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2214.5" y="984.9683">diagram() = deleted : void</text><ellipse cx="2205.5" cy="994.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2214.5" y="997.7729">diagram() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2195.5" x2="2854.5" y1="1004.3672" y2="1004.3672"/><ellipse cx="2205.5" cy="1015.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2214.5" y="1018.5776">operator=() = deleted : diagram &amp;</text><ellipse cx="2205.5" cy="1028.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2214.5" y="1031.3823">operator=() = default : diagram &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2195.5" x2="2854.5" y1="1037.9766" y2="1037.9766"/><ellipse cx="2205.5" cy="1048.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="499" x="2214.5" y="1052.187">active_participants() const : const std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text><ellipse cx="2205.5" cy="1061.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="2214.5" y="1064.9917">active_participants() : std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text><ellipse cx="2205.5" cy="1074.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2214.5" y="1077.7964">add_active_participant() : void</text><ellipse cx="2205.5" cy="1087.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2214.5" y="1090.6011">add_block_message() : void</text><ellipse cx="2205.5" cy="1100.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2214.5" y="1103.4058">add_case_stmt_message() : void</text><ellipse cx="2205.5" cy="1113" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2214.5" y="1116.2104">add_message() : void</text><ellipse cx="2205.5" cy="1125.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2214.5" y="1129.0151">add_participant() : void</text><ellipse cx="2205.5" cy="1138.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2214.5" y="1141.8198">context() const : inja::json</text><ellipse cx="2205.5" cy="1151.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2214.5" y="1154.6245">end_block_message() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202.5" y="1161.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2214.5" y="1167.4292">fold_or_end_block_statement() const : void</text><ellipse cx="2205.5" cy="1177.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2214.5" y="1180.2339">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="2205.5" cy="1189.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2214.5" y="1193.0386">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="2205.5" cy="1202.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2214.5" y="1205.8433">get_activity() : activity &amp;</text><ellipse cx="2205.5" cy="1215.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2214.5" y="1218.6479">get_participant&lt;T&gt;() : common::optional_ref&lt;T&gt;</text><ellipse cx="2205.5" cy="1228.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="2214.5" y="1231.4526">get_participant&lt;T&gt;() const : common::optional_ref&lt;T&gt;</text><ellipse cx="2205.5" cy="1241.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2214.5" y="1244.2573">participants() : std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text><ellipse cx="2205.5" cy="1253.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="2214.5" y="1257.062">participants() const : const std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text><ellipse cx="2205.5" cy="1266.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2214.5" y="1269.8667">print() const : void</text><ellipse cx="2205.5" cy="1279.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="2214.5" y="1282.6714">sequences() : std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text><ellipse cx="2205.5" cy="1292.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="2214.5" y="1295.4761">sequences() const : const std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text><ellipse cx="2205.5" cy="1305.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2214.5" y="1308.2808">started() const : bool</text><ellipse cx="2205.5" cy="1317.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2214.5" y="1321.0854">started() : void</text><ellipse cx="2205.5" cy="1330.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2214.5" y="1333.8901">to_alias() const : std::string</text><ellipse cx="2205.5" cy="1343.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2214.5" y="1346.6948">type() const : common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2195.5" x2="2854.5" y1="1353.2891" y2="1353.2891"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L140" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L140" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2200.5" y="1359.2891"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202.5" y="1361.2891"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L140" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L140" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="2214.5" y="1367.4995">active_participants_ : std::set&lt;common::model::diagram_element::id_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L133" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L133" xlink:show="new" xlink:title="started_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2200.5" y="1372.0938"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2202.5" y="1374.0938"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L133" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L133" xlink:show="new" xlink:title="started_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2214.5" y="1380.3042">started_ : bool</text></a><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M3206.39,1309.2131 C3235.71,1338.8331 3269.13,1366.8931 3305,1386.9531 C3322.43,1396.7031 4466.66,1629.8131 4876.75,1713.1631 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3197.02,1299.5531,3198.3297,1306.6443,3205.3791,1308.1627,3204.0694,1301.0716,3197.02,1299.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3495" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3505" y="1430.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M3129.61,1312.7131 C3162.77,1439.5231 3207.58,1610.8431 3229.23,1693.6331 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3126.23,1299.8131,3123.8845,1306.6321,3129.2768,1311.4199,3131.6223,1304.6009,3126.23,1299.8131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3164" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3174" y="1430.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1580.1,315.0731 C1525.03,457.9931 1460.24,703.8931 1591,848.9531 C1686.54,954.9431 2743.05,866.9931 2873,925.9531 C2916.35,945.6231 2955.18,978.4231 2987.56,1013.1631 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1573.59,312.5031,1587.44,296.4631,1586.61,317.6431,1573.59,312.5031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1796.82,710.8531 C1826.71,757.1631 1874.87,818.5531 1935,848.9531 C2121.65,943.3231 2684.57,835.2131 2873,925.9531 C2915.4,946.3731 2953.68,978.9731 2985.84,1013.2631 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1790.72,714.3031,1786.09,693.6231,1802.61,706.8931,1790.72,714.3031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M2342.35,700.0931 C2496.31,743.4031 2709.25,816.9731 2873,925.9531 C2909.33,950.1331 2943.98,981.5131 2974.48,1013.2731 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2329.51,696.5031,2334.2183,701.965,2341.0709,699.7196,2336.3626,694.2577,2329.51,696.5031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2823" y="885.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2833" y="892.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1764.27,309.2931 C1817.83,352.6531 1879.58,403.8231 1934,451.9531 C1944.7,461.4131 1955.6,471.2431 1966.53,481.2331 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1759.83,314.7031,1748.66,296.6931,1768.62,303.8131,1759.83,314.7031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M2141,339.7931 C2141,384.4731 2141,434.6131 2141,481.3131 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2134,339.6831,2141,319.6831,2148,339.6831,2134,339.6831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19b37bbd01eb620e8986e3e767e75c0]
reverse link C_0000844837292165721774 to C_0002031918453259559099--><path d="M1968,2036.2631 C1968,2219.1431 1968,2435.6331 1968,2519.8931 " fill="none" id="C_0000844837292165721774&lt;-C_0002031918453259559099" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1968,2023.1531,1964,2029.1531,1968,2035.1531,1972,2029.1531,1968,2023.1531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1971" y="2059.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="1981" y="2066.02">path_type_</text><!--MD5=[5d910ea399c8b53a1c5a5e084e915fb3]
reverse link C_0002069520381434407937 to C_0000844837292165721774--><path d="M1845.31,1268.1831 C1842.82,1319.0531 1843.26,1379.9531 1853,1433.9531 C1854.78,1443.7931 1856.84,1453.7331 1859.16,1463.7131 " fill="none" id="C_0002069520381434407937&lt;-C_0000844837292165721774" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1846.02,1255.1331,1841.6965,1260.9044,1845.3609,1267.115,1849.6844,1261.3438,1846.02,1255.1331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1856" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="1866" y="1430.02">ns_</text><!--MD5=[5d910ea399c8b53a1c5a5e084e915fb3]
reverse link C_0002069520381434407937 to C_0000844837292165721774--><path d="M1877.13,1267.8131 C1887.82,1323.6631 1901.33,1394.2131 1914.64,1463.7331 " fill="none" id="C_0002069520381434407937&lt;-C_0000844837292165721774-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1874.68,1255.0431,1871.8784,1261.6878,1876.9344,1266.8295,1879.736,1260.1848,1874.68,1255.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1912" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="1922" y="1430.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M2035.83,837.4431 C1993.53,912.2431 1946.51,995.3931 1911.16,1057.9031 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2029.96,833.5931,2045.9,819.6231,2042.15,840.4831,2029.96,833.5931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d3aab55902f013c3cb0f0512036c505c]
reverse link C_0000845978329661395972 to C_0002193110380171976294--><path d="M1426,3342.5231 C1426,3393.1331 1426,3455.4031 1426,3497.7231 " fill="none" id="C_0000845978329661395972&lt;-C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1426,3329.2631,1422,3335.2631,1426,3341.2631,1430,3335.2631,1426,3329.2631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1432" cy="3460.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="13" x="1439" y="3464.02">pr</text><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M1085.85,3027.4931 C1083.78,3096.2731 1081.92,3157.8831 1080.67,3199.5731 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1086.26,3014.1131,1082.0772,3019.9871,1085.8905,3026.1074,1090.0734,3020.2334,1086.26,3014.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1089" y="3050.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="1099" y="3057.02">kind_</text><!--MD5=[7566fda333217dfb046318d35641bbd5]
reverse link C_0000178138562743079529 to C_0000845978329661395972--><path d="M1318.88,3025.9231 C1347.3,3086.6831 1373.14,3141.9331 1392.32,3182.9331 " fill="none" id="C_0000178138562743079529&lt;-C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1313.35,3014.1131,1312.273,3021.2433,1318.4405,3024.9799,1319.5175,3017.8497,1313.35,3014.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1333" y="3050.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="1343" y="3057.02">context_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M1357.38,2493.0431 C1372.77,2508.2831 1382,2529.5831 1382,2556.9531 C1382,2590.0031 1368.54,2614.2031 1347.02,2629.5631 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1347.02,2484.3431,1349.0384,2491.266,1356.2051,2492.0654,1354.1866,2485.1426,1347.02,2484.3431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1390" y="2554.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="1400" y="2561.52">template_params_</text><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M819.17,1843.7831 C845.38,1910.2431 881.94,2002.9631 920.04,2099.5831 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="814.4,1831.6831,812.8799,1838.7322,818.8021,1842.8465,820.3222,1835.7975,814.4,1831.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="905" y="2059.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="915" y="2066.02">templates_</text><!--MD5=[019d7bf597d0b181c46c8a98893e5495]
reverse link C_0000785714713072053129 to C_0000844837292165721774--><path d="M1527.09,1316.9931 C1552.17,1341.7531 1578.97,1366.0231 1606,1386.9531 C1661.53,1429.9531 1690.34,1418.6431 1744,1463.9531 C1749.81,1468.8531 1755.57,1473.9331 1761.29,1479.1431 " fill="none" id="C_0000785714713072053129&lt;-C_0000844837292165721774" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1517.56,1307.4831,1518.9852,1314.552,1526.0585,1315.9552,1524.6333,1308.8863,1517.56,1307.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1699" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1709" y="1430.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M1326.1,1320.1131 C1277.63,1449.5931 1213.22,1621.6631 1183.83,1700.1731 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1330.74,1307.7231,1324.8901,1311.9396,1326.5323,1318.9612,1332.3822,1314.7447,1330.74,1307.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1288" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1298" y="1430.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1963.4,831.1231 C1953.77,837.5731 1943.95,843.5631 1934,848.9531 C1802.32,920.2531 1735.97,851.5931 1606,925.9531 C1569.79,946.6731 1535.83,975.2231 1505.97,1005.1531 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1959.58,825.2531,1979.97,819.4731,1967.64,836.7031,1959.58,825.2531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1639.96,702.4431 C1565.34,739.9931 1475.13,798.5431 1425,878.9531 C1401.74,916.2631 1390.19,961.8731 1384.98,1005.2031 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1637.03,696.0931,1658.07,693.5831,1643.19,708.6631,1637.03,696.0931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4865.15,440.5531 C4905.7,378.3231 4947.23,314.6031 4977.06,268.8331 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4857.85,451.7431,4864.4782,448.9028,4864.4056,441.6921,4857.7775,444.5324,4857.85,451.7431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4887" y="411.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4897" y="418.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4929.05,268.4531 C4885.08,304.3231 4834.86,352.1731 4802,404.9531 C4793.73,418.2431 4786.34,432.5231 4779.77,447.2731 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4777.75,451.8631,4785.0394,445.2401,4779.7661,447.2876,4777.7185,442.0143,4777.75,451.8631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4805" y="411.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4815" y="418.02">diagram_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5089.58,279.0531 C5119.43,315.0531 5152.54,359.9531 5175,404.9531 C5197.92,450.8831 5214.06,505.6431 5224.85,551.6831 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5080.84,268.6631,5081.6334,275.8304,5088.5546,277.8547,5087.7612,270.6874,5080.84,268.6631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5183" y="411.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5193" y="418.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M5038.24,281.2231 C5049.69,323.9731 5066.39,377.1731 5088,421.9531 C5109.65,466.8231 5139.37,512.8831 5167,551.7131 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5034.93,268.5931,5032.5845,275.4121,5037.9768,280.1999,5040.3223,273.3809,5034.93,268.5931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5091" y="411.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="5101" y="418.02">exclusive_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M1792.72,1272.7731 C1733.91,1379.9531 1647.16,1538.0531 1590.86,1640.6531 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1786.69,1269.2031,1802.45,1255.0431,1798.97,1275.9431,1786.69,1269.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M1588.9,679.5531 C1448.32,712.4031 1259.25,781.9031 1167,925.9531 C1056.51,1098.4931 1058.18,1213.3531 1167,1386.9531 C1208.7,1453.4831 1265.39,1414.0331 1326,1463.9531 C1385.96,1513.3431 1438.38,1583.3131 1475.73,1640.7731 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1587.78,672.6331,1608.83,675.0631,1590.86,686.2831,1587.78,672.6331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M5169.38,759.5731 C5143.04,791.9131 5111.09,825.0831 5076,848.9531 C4987.56,909.1031 4931.44,859.0331 4848,925.9531 C4783.13,977.9731 4741.15,1069.0331 4721.67,1119.3931 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5177.73,749.1131,5170.8599,751.3043,5170.2401,758.4887,5177.1102,756.2975,5177.73,749.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5006" y="885.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="5016" y="892.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M6075.62,1090.7131 C6049.59,1039.7631 6007.16,970.2031 5952,925.9531 C5785.59,792.4631 5546.7,718.1131 5393.18,681.4331 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6081.57,1102.5831,6082.4609,1095.4273,6076.1982,1091.8526,6075.3073,1099.0085,6081.57,1102.5831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5905" y="885.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5915" y="892.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M5412.06,713.9831 C5614.63,789.3331 5929.77,908.1131 5952,925.9531 C6011.58,973.7431 6056.31,1051.0731 6081.57,1102.5831 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5409.43,720.4731,5393.12,706.9431,5414.31,707.3531,5409.43,720.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M5413.48,663.7431 C5627.24,686.3131 5997.23,749.6531 6258,925.9531 C6321.97,969.2031 6371.81,1044.0231 6401.24,1096.4431 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5412.48,670.6831,5393.29,661.6931,5413.9,656.7531,5412.48,670.6831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M5413.19,669.8831 C5733,707.0631 6409.08,798.5131 6604,925.9531 C6669.99,969.1031 6716.94,1049.5431 6742.51,1102.8031 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5412.17,676.8131,5393.11,667.5631,5413.78,662.9031,5412.17,676.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc75b97331daf477f1c24925190464b7]
reverse link C_0000469458052685692314 to C_0002051668456717902300--><path d="M5413.24,663.4031 C5788.25,692.2331 6672.44,774.6231 6927,925.9531 C6997.43,967.8231 7050.17,1049.0131 7079.3,1102.7331 " fill="none" id="C_0000469458052685692314&lt;-C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5412.48,670.3631,5393.07,661.8731,5413.54,656.4131,5412.48,670.3631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M5413.19,657.1731 C5844.49,674.3431 6968.47,736.5331 7283,925.9531 C7351.38,967.1331 7399.17,1048.9131 7424.87,1102.9031 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5412.89,664.1631,5393.18,656.3931,5413.44,650.1731,5412.89,664.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M5173.56,765.1531 C5147.34,798.0931 5114.4,830.2031 5076,848.9531 C5000.06,886.0331 4400.22,872.0131 4316,878.9531 C4149.04,892.7131 4085.39,839.3231 3942,925.9531 C3874.24,966.8931 3827.9,1048.7431 3803.18,1102.8031 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5168.19,760.6431,5185.88,748.9731,5179.33,769.1231,5168.19,760.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M5478.03,1258.1031 C5376.6,1365.5931 5216.8,1534.9531 5115.53,1642.2731 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5487.05,1248.5431,5480.0238,1250.1656,5478.819,1257.2753,5485.8453,1255.6529,5487.05,1248.5431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5316" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="5326" y="1430.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M5317.98,765.9631 C5377.14,856.3131 5458.54,980.6431 5513.32,1064.3131 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5312.12,769.7931,5307.02,749.2231,5323.83,762.1231,5312.12,769.7931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M5021,1216.9731 C5021,1317.0631 5021,1520.0831 5021,1642.3931 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5021,1203.8431,5017,1209.8431,5021,1215.8431,5025,1209.8431,5021,1203.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5024" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="5034" y="1430.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M5191.86,767.5531 C5144.05,876.0931 5075.1,1032.6231 5041.28,1109.4231 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5185.46,764.7131,5199.93,749.2231,5198.28,770.3531,5185.46,764.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M3440.79,1216.2431 C3397.14,1331.7931 3300.89,1586.5731 3260.46,1693.5931 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3445.47,1203.8431,3439.6114,1208.0476,3441.2392,1215.0726,3447.0977,1210.8681,3445.47,1203.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3363" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3373" y="1430.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M5173.86,765.2031 C5147.62,798.2331 5114.6,830.3831 5076,848.9531 C5022.01,874.9231 4057.74,874.4131 3998,878.9531 C3829.63,891.7631 3765.31,838.2831 3621,925.9531 C3550.93,968.5231 3504.38,1055.3331 3480.93,1109.1331 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5168.52,760.6531,5186.19,748.9631,5179.67,769.1231,5168.52,760.6531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M5172.3,764.9631 C5146.16,797.5331 5113.6,829.4631 5076,848.9531 C5008.27,884.0631 4809.96,871.8431 4734,878.9531 C4524.1,898.6131 4443.83,819.2631 4262,925.9531 C4193.72,966.0231 4147.52,1048.1031 4122.97,1102.4531 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5166.86,760.5531,5184.6,748.9731,5177.95,769.0931,5166.86,760.5531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M5170.1,765.3131 C5144.18,797.2031 5112.29,828.6531 5076,848.9531 C5026.37,876.7131 4618.02,895.4831 4570,925.9531 C4509.23,964.5131 4466.8,1036.6831 4442.09,1089.8331 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5164.89,760.6131,5182.72,749.1631,5175.92,769.2331,5164.89,760.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[62dc895dac1d0c2011f0b281560d3968]
reverse link C_0002069520381434407937 to C_0001400215772842495226--><path d="M1764.26,1269.7331 C1721.21,1314.2631 1666.14,1360.9731 1606,1386.9531 C1552,1410.2731 598.91,1431.2831 550,1463.9531 C481.04,1510.0131 444.47,1600.7331 426.23,1666.1331 " fill="none" id="C_0002069520381434407937&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1759.28,1264.8131,1778.09,1255.0631,1769.46,1274.4131,1759.28,1264.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0cbd70298f55c4689e25f50e6b8f6293]
reverse link C_0002077846075979426940 to C_0001400215772842495226--><path d="M1589.51,696.8931 C1443.99,740.3931 1235.17,815.8031 1077,925.9531 C802.33,1117.2331 744.6,1191.6231 550,1463.9531 C504.54,1527.5731 465.79,1608.1031 440.67,1666.1831 " fill="none" id="C_0002077846075979426940&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1587.56,690.1631,1608.72,691.2231,1591.52,703.5931,1587.56,690.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c27ca2fdb73a42fb9075cd7b8ec5769]
link C_0001483671267820004141 to C_0001400215772842495226--><path d="M410,1231.5431 C410,1338.3531 410,1535.4331 410,1651.1131 " fill="none" id="C_0001483671267820004141-&gt;C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="410" cy="1658.1831" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="410" x2="410" y1="1650.1831" y2="1666.1831"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="418" x2="402" y1="1658.1831" y2="1658.1831"/><!--MD5=[b33f1614e5f0bf4794b27e69905bc927]
reverse link C_0001400215772842495226 to C_0000885514871619471610--><path d="M443.35,1839.7331 C488.28,1968.1331 569.29,2199.6131 627.05,2364.6631 " fill="none" id="C_0001400215772842495226&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="436.72,1841.9831,436.72,1820.7931,449.93,1837.3631,436.72,1841.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[419d091341342c34e8d2184e460395cb]
reverse link C_0000464715462505216589 to C_0000885514871619471610--><path d="M768.62,1851.8031 C754.8,1982.2631 731.22,2204.7331 714.26,2364.7331 " fill="none" id="C_0000464715462505216589&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="761.69,1850.8331,770.76,1831.6831,775.61,1852.3131,761.69,1850.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c90ee8d9e33f78746e08a7fd0729082]
reverse link C_0000885514871619471610 to C_0001701531547288995691--><path d="M700.37,2769.4531 C705.34,2934.4131 711.78,3148.0731 714.11,3225.3931 " fill="none" id="C_0000885514871619471610&lt;-C_0001701531547288995691" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="693.37,2769.5331,699.77,2749.3331,707.37,2769.1131,693.37,2769.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cff630a429a41d6509e30ee5071e7c05]
reverse link C_0001400215772842495226 to C_0000232638456031681828--><path d="M388.15,1840.3131 C357.29,1975.6431 300.53,2224.6531 262.77,2390.2931 " fill="none" id="C_0001400215772842495226&lt;-C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="381.33,1838.7431,392.6,1820.7931,394.98,1841.8531,381.33,1838.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17864bc9f5069cfed7218d7279f85c47]
link C_0001521646084824511527 to C_0000232638456031681828--><path d="M138.73,1786.6531 C150.8,1894.2531 183.27,2183.8131 204.75,2375.3831 " fill="none" id="C_0001521646084824511527-&gt;C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="205.5482" cy="2382.483" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="204.6564" x2="206.44" y1="2374.5329" y2="2390.4331"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="213.4983" x2="197.598" y1="2381.5912" y2="2383.3748"/><!--MD5=[aaa21626746a78046d7a511702c30bb7]
reverse link C_0000232638456031681828 to C_0000817665972547784504--><path d="M200.52,2743.4331 C185.73,2855.4931 167.1,2996.5731 153.17,3102.1731 " fill="none" id="C_0000232638456031681828&lt;-C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="193.58,2742.4831,203.14,2723.5731,207.46,2744.3231,193.58,2742.4831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed3960d209e9f24c5c41aa336e94c692]
reverse link C_0000232638456031681828 to C_0002280191967493310558--><path d="M281.28,2743.0031 C322.89,2879.7831 377.7,3060.0031 409.97,3166.0831 " fill="none" id="C_0000232638456031681828&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="274.5,2744.7431,275.38,2723.5731,287.89,2740.6731,274.5,2744.7431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43850a4dbbd6500b965033dc7940cfc7]
reverse link C_0000464715462505216589 to C_0002280191967493310558--><path d="M695.57,1847.6731 C645.2,1915.2231 585.01,2007.7631 553,2099.9531 C421.21,2479.5231 424.34,2968.4231 432.17,3166.1331 " fill="none" id="C_0000464715462505216589&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="690.16,1843.2231,707.8,1831.4931,701.33,1851.6631,690.16,1843.2231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f9f93e1df1c0d799338094cb92c7f29d]
reverse link C_0002228653068706235818 to C_0001623832985137466228--><path d="M2368.51,2713.0531 C2342.1,2825.2531 2306.5,2976.5931 2279.62,3090.8231 " fill="none" id="C_0002228653068706235818&lt;-C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2371.52,2700.2631,2366.2493,2705.1845,2368.7649,2711.9426,2374.0356,2707.0212,2371.52,2700.2631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2293" y="3050.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2303" y="3057.02">type_</text><!--MD5=[494ff3f01f33dcda65528de8e47d9150]
reverse link C_0002228653068706235818 to C_0000202859212831973510--><path d="M2441.47,2712.9531 C2480.21,2877.5831 2538.79,3126.5531 2560.51,3218.8531 " fill="none" id="C_0002228653068706235818&lt;-C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2438.48,2700.2631,2435.9644,2707.0212,2441.2351,2711.9426,2443.7507,2705.1845,2438.48,2700.2631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2524" y="3050.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="2534" y="3057.02">scope_</text><!--MD5=[a67a2b87f33292a603fe6541cbf2f274]
reverse link C_0001073500714379115414 to C_0002228653068706235818--><path d="M2119.02,839.6531 C2108.46,992.2331 2110.09,1210.1631 2177,1386.9531 C2183.04,1402.9231 2194.04,1401.3631 2201,1416.9531 C2312.32,1666.2731 2253.65,1754.2231 2302,2022.9531 C2325.89,2155.7131 2355.26,2306.6231 2376.52,2413.8931 " fill="none" id="C_0001073500714379115414&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2112.06,838.9431,2120.52,819.5131,2126.02,839.9731,2112.06,838.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44f503eb492a62418b7123e16c9b38de]
reverse link C_0000460030520790196523 to C_0002228653068706235818--><path d="M2478.41,1829.4531 C2464.4,1968.1431 2436.47,2244.5631 2419.39,2413.5931 " fill="none" id="C_0000460030520790196523&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2479.72,1816.4731,2475.1337,1822.0378,2478.5064,1828.4116,2483.0927,1822.8469,2479.72,1816.4731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2459" y="2059.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="2469" y="2066.02">messages_</text><!--MD5=[1ec789dad01cc0cf7ca5a35a23b3b940]
reverse link C_0000924044572035510976 to C_0000460030520790196523--><path d="M2509.24,1400.0531 C2502.91,1497.4831 2496.09,1602.5131 2491.69,1670.1931 " fill="none" id="C_0000924044572035510976&lt;-C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2510.09,1386.9831,2505.7094,1392.7111,2509.3119,1398.9579,2513.6925,1393.2299,2510.09,1386.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2511" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="2521" y="1430.02">sequences_</text><!--MD5=[63e8c813a091a0c9d7ec61cd2b876cc0]
reverse link C_0000924044572035510976 to C_0001400215772842495226--><path d="M2182.66,1384.6631 C2140.66,1404.5431 2097.27,1421.7231 2054,1433.9531 C1973.58,1456.6831 620.7,1419.3831 550,1463.9531 C479.5,1508.3931 443.16,1600.1531 425.39,1666.2131 " fill="none" id="C_0000924044572035510976&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2194.47,1378.9831,2187.3295,1377.9762,2183.6538,1384.1802,2190.7942,1385.1871,2194.47,1378.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2100" y="1423.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="82" x="2110" y="1430.02">participants_</text><!--MD5=[200170a1e068a1e5ab0bc25f74c55d33]
reverse link C_0000197068985320835874 to C_0000924044572035510976--><path d="M4378.93,664.5731 C3898.59,687.2931 3063.85,745.1031 2793,878.9531 C2767.38,891.6131 2742.84,907.7631 2719.74,925.8631 " fill="none" id="C_0000197068985320835874&lt;-C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4378.75,657.5731,4399.05,663.6331,4379.4,671.5531,4378.75,657.5731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[86708f0f9898fbc82e048fb4e8299328]
link C_0000911024010877522257 to C_0000640258162892495349--><!--MD5=[4ee04b561a3477e106a4c7bfb61d4113]
link C_0000640258162892495349 to C_0001786360230161561276--><!--MD5=[78ac70a11580784072b95417ca51f13f]
@startuml
title clang-uml sequence diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "clanguml::common::model::message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L37{decorated_element}]] {
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+get_relationship() const : std::pair<relationship_t,std::string>
+set_comment() : void
+skip() const : bool
+skip_relationship() const : bool
+style_spec() const : std::string
__
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61{comment_}]]]
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60{decorators_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
__
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
..
+access() const noexcept : clanguml::common::model::access_t
+destination() const : clanguml::common::id_t
+label() const : std::string
+multiplicity_destination() const : std::string
+multiplicity_source() const : std::string
+set_access() noexcept : void
+set_destination() : void
+set_label() : void
+set_multiplicity_destination() : void
+set_multiplicity_source() : void
+set_type() noexcept : void
+type() const noexcept : clanguml::common::model::relationship_t
__
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61{destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64{label_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62{multiplicity_source_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
..
+file() const : const std::string &
+file_relative() const : const std::string &
+line() const : unsigned int
+location_id() const : unsigned int
+set_file() : void
+set_file_relative() : void
+set_line() : void
+set_location_id() : void
__
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53{file_relative_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55{hash_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54{line_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
..
+add_relationship() : void
+alias() const : std::string
+append() : void
+complete() const : bool
+complete() : void
+context() const : inja::json
+full_name() const : std::string
+id() const : clanguml::common::model::diagram_element::id_t
+is_nested() const : bool
+name() const : std::string
+nested() : void
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+set_id() : void
+set_name() : void
+type_name() const : std::string
__
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84{complete_}]]]
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83{nested_}]]]
}
enum "clanguml::common::model::path_type" as C_0002031918453259559099
enum C_0002031918453259559099 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L28{path_type}]] {
kNamespace
kFilesystem
}
class "clanguml::common::model::path" as C_0000844837292165721774
class C_0000844837292165721774 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L30{path}]] {
+path() : void
+path() : void
+path() : void
+path() = default : void
+path() noexcept = default : void
+path() : void
+path() : void
+~path() = default : void
..
+operator=() : clanguml::common::model::path &
+operator=() noexcept = default : clanguml::common::model::path &
..
+operator[]() : std::string &
+operator[]() const : const std::string &
+operator|() const : clanguml::common::model::path
+operator|() const : clanguml::common::model::path
+operator|=() : void
+operator|=() : void
..
+append() : void
+append() : void
+begin() const : path::container_type::const_iterator
+begin() : path::container_type::iterator
+cbegin() const : path::container_type::const_iterator
+cend() const : path::container_type::const_iterator
+common_path() const : clanguml::common::model::path
+end() const : path::container_type::const_iterator
+end() : path::container_type::iterator
+ends_with() const : bool
+is_empty() const : bool
+name() const : std::string
+parent() const : std::optional<path>
+pop_back() : void
+relative() const : std::string
+relative_to() const : clanguml::common::model::path
-separator() const : const char *
+size() const : size_t
+starts_with() const : bool
+to_string() const : std::string
+type() const : clanguml::common::model::path_type
__
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L28{ns_path_separator}]] {
__
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29{value}]]]
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
..
+context() const : inja::json
+full_name() const : std::string
+full_name_no_ns() const : std::string
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+name_and_ns() const : std::string
+path() const : const clanguml::common::model::namespace_ &
+set_namespace() : void
+using_namespace() const : const clanguml::common::model::namespace_ &
__
}
enum "clanguml::common::model::template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L31{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
enum "clanguml::common::model::rpqualifier" as C_0002193110380171976294
enum C_0002193110380171976294 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L40{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "clanguml::common::model::context" as C_0000845978329661395972
class C_0000845978329661395972 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L46{context}]] {
+operator!=() const : bool
+operator==() const : bool
..
+to_string() const : std::string
__
+is_const : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47{is_const}]]]
+is_ref_const : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49{is_ref_const}]]]
+is_ref_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50{is_ref_volatile}]]]
+is_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48{is_volatile}]]]
}
class "clanguml::common::model::template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L67{template_parameter}]] {
-template_parameter() = default : void
..
+add_template_param() : void
+add_template_param() : void
+calculate_specialization_match() const : int
+clear_params() : void
+concept_constraint() const : const std::optional<std::string> &
+deduced_context() : void
+deduced_context() const : const std::deque<context> &
-deduced_context_str() const : std::string
+default_value() const : const std::optional<std::string> &
+find_nested_relationships() const : bool
+id() const : const std::optional<int64_t> &
+is_array() const : bool
+is_array() : void
+is_association() const : bool
+is_data_pointer() : void
+is_data_pointer() const : bool
+is_ellipsis() : void
+is_ellipsis() const : bool
+is_function_template() const : bool
+is_function_template() : void
+is_member_pointer() : void
+is_member_pointer() const : bool
+is_noexcept() const : bool
+is_noexcept() : void
+is_same_specialization() const : bool
+is_specialization() const : bool
+is_template_parameter() : void
+is_template_parameter() const : bool
+is_template_template_parameter() : void
+is_template_template_parameter() const : bool
+is_unexposed() const : bool
+is_variadic() noexcept : void
+is_variadic() const noexcept : bool
+kind() const : clanguml::common::model::template_parameter_kind_t
{static} +make_argument() : clanguml::common::model::template_parameter
{static} +make_non_type_template() : clanguml::common::model::template_parameter
{static} +make_template_template_type() : clanguml::common::model::template_parameter
{static} +make_template_type() : clanguml::common::model::template_parameter
{static} +make_unexposed_argument() : clanguml::common::model::template_parameter
+name() const : std::optional<std::string>
+push_context() : void
+set_concept_constraint() : void
+set_default_value() : void
+set_id() : void
+set_kind() : void
+set_name() : void
+set_type() : void
+set_unexposed() : void
+template_params() const : const std::vector<template_parameter> &
+to_string() const : std::string
+type() const : std::optional<std::string>
__
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224{concept_constraint_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194{default_value_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230{id_}]]]
-is_array_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217{is_array_}]]]
-is_data_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213{is_data_pointer_}]]]
-is_ellipsis_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204{is_ellipsis_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211{is_function_template_}]]]
-is_member_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215{is_member_pointer_}]]]
-is_noexcept_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206{is_noexcept_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202{is_template_template_parameter_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232{is_unexposed_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209{is_variadic_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191{name_}]]]
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188{type_}]]]
}
class "clanguml::common::model::template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L28{template_trait}]] {
+add_template() : void
+base_template() const : std::string
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+render_template_params() const : std::ostream &
+set_base_template() : void
+set_implicit() : void
+template_params() const : const std::vector<template_parameter> &
__
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait() = default : void
+nested_trait() = deleted : void
+nested_trait() noexcept = default : void
+~nested_trait() = default : void
..
+operator=() = deleted : nested_trait<T,Path> &
+operator=() noexcept = default : nested_trait<T,Path> &
..
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+all_of<F>() const : _Bool
+begin() : auto
+begin() const : auto
+cbegin() const : auto
+cend() const : auto
+end() : auto
+end() const : auto
+get_element<V=T>() const : auto
+get_element<V=T>() const : auto
+get_element_parent<V=T>() const : auto
+has_element() const : bool
+is_empty() const : bool
+print_tree() : void
__
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193{elements_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L41{fs_path_sep}]] {
__
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45{value}]]]
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+source_file() = deleted : void
+source_file() = default : void
..
+operator=() = deleted : clanguml::common::model::source_file &
+operator=() = deleted : clanguml::common::model::source_file &
..
+operator==() const : bool
..
+context() const : inja::json
+fs_path() const : std::filesystem::path
+full_name() const : std::string
+full_path() const : clanguml::common::model::path
+is_absolute() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+set_absolute() : void
+set_path() : void
+set_type() : void
+type() const : clanguml::common::model::source_file_t
__
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+diagram() = deleted : void
+diagram() noexcept : void
+~diagram() : void
..
+operator=() = deleted : clanguml::common::model::diagram &
+operator=() noexcept : clanguml::common::model::diagram &
..
+complete() const : bool
{abstract} +context() const = 0 : inja::json
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get_with_namespace() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+has_element() const : bool
+name() const : std::string
+set_complete() : void
+set_filter() : void
+set_name() : void
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
__
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87{complete_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85{name_}]]]
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L30{diagram_filter}]] {
+diagram_filter() : void
..
+add_exclusive_filter() : void
+add_inclusive_filter() : void
-init_filters() : void
+should_include() const : bool
+should_include<T>() const : _Bool
__
}
class "clanguml::common::model::element_view<T>" as C_0001786360230161561276
class C_0001786360230161561276 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L29{element_view}]] {
+add() : void
+get() const : common::optional_ref<T>
+view() const : const reference_vector<T> &
__
-elements_ : reference_vector<T> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67{elements_}]]]
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L35{package}]] {
+package() : void
+package() = deleted : void
+package() = default : void
..
+operator=() = deleted : clanguml::common::model::package &
+operator=() = deleted : clanguml::common::model::package &
..
+add_package() : void
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+type_name() const : std::string
__
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
..
+is_exclusive() const : bool
+is_inclusive() const : bool
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+type() const : clanguml::common::model::filter_t
__
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
..
+match() const : tvl::value_t
+match() const : tvl::value_t
__
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
..
+match() const : tvl::value_t
+match() const : tvl::value_t
__
-namespaces_ : std::vector<namespace_> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116{namespaces_}]]]
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
..
+match() const : tvl::value_t
__
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "clanguml::common::model::element_type_filter" as C_0002051668456717902300
class C_0002051668456717902300 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L130{element_type_filter}]] {
+element_type_filter() : void
+~element_type_filter() = default : void
..
+match() const : tvl::value_t
__
-element_types_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138{element_types_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L141{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
..
+match() const : tvl::value_t
__
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149{roots_}]]]
}
class "clanguml::common::model::parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L152{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
..
+match() const : tvl::value_t
__
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160{children_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L165{edge_traversal_filter}]] {
+edge_traversal_filter() : void
+~edge_traversal_filter() = default : void
..
-add_adjacent<C,D>() const : _Bool
-add_parents() const : void
-init() const : void
+match() const : tvl::value_t
__
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302{forward_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301{matching_elements_}]]]
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298{roots_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L305{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
..
+match() const : tvl::value_t
__
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L318{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
..
+match() const : tvl::value_t
__
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L329{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
..
+match() const : tvl::value_t
__
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L340{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
..
+match() const : tvl::value_t
+match() const : tvl::value_t
__
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354{root_}]]]
}
class "participant" as C_0001400215772842495226
class C_0001400215772842495226 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L31{participant}]] {
+participant() = deleted : void
+participant() noexcept = deleted : void
..
+operator=() = deleted : participant &
+operator=() = deleted : participant &
..
+to_string() const : std::string
+type_name() const : std::string
__
+stereotype_ : participant::stereotype_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L55{stereotype_}]]]
}
enum "participant::stereotype_t" as C_0001483671267820004141
enum C_0001483671267820004141 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L33{participant##stereotype_t}]] {
participant
actor
boundary
control
entity
database
collections
queue
}
class "class_" as C_0000885514871619471610
class C_0000885514871619471610 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L58{class_}]] {
+class_() : void
+class_() = deleted : void
+class_() noexcept = deleted : void
..
+operator=() = deleted : class_ &
+operator=() = deleted : class_ &
..
+full_name() const : std::string
+full_name_no_ns() const : std::string
+is_abstract() const : bool
+is_alias() const : bool
+is_alias() : void
+is_lambda() const : bool
+is_lambda() : void
+is_struct() const : bool
+is_struct() : void
+is_template() const : bool
+is_template() : void
+is_template_instantiation() const : bool
+is_template_instantiation() : void
+type_name() const : std::string
__
-full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L101{full_name_}]]]
-is_alias_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L98{is_alias_}]]]
-is_lambda_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L99{is_lambda_}]]]
-is_struct_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L95{is_struct_}]]]
-is_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L96{is_template_}]]]
-is_template_instantiation_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L97{is_template_instantiation_}]]]
}
class "lambda" as C_0001701531547288995691
class C_0001701531547288995691 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L104{lambda}]] {
+type_name() const : std::string
__
}
class "function" as C_0000232638456031681828
class C_0000232638456031681828 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L110{function}]] {
+function() : void
+function() = deleted : void
+function() noexcept = deleted : void
..
+operator=() = deleted : function &
+operator=() = deleted : function &
..
+add_parameter() : void
+full_name() const : std::string
+full_name_no_ns() const : std::string
+is_const() const : bool
+is_const() : void
+is_static() const : bool
+is_static() : void
+is_void() const : bool
+is_void() : void
+message_name() const : std::string
+parameters() const : const std::vector<std::string> &
+type_name() const : std::string
__
-is_const_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L145{is_const_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L147{is_static_}]]]
-is_void_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L146{is_void_}]]]
-parameters_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L148{parameters_}]]]
}
enum "function::message_render_mode" as C_0001521646084824511527
enum C_0001521646084824511527 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L111{function##message_render_mode}]] {
full
abbreviated
no_arguments
}
class "method" as C_0000817665972547784504
class C_0000817665972547784504 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L151{method}]] {
+method() : void
+method() = deleted : void
+method() noexcept = deleted : void
..
+operator=() = deleted : method &
+operator=() = deleted : method &
..
+alias() const : std::string
+class_full_name() const : const auto &
+class_id() const : diagram_element::id_t
+full_name() const : std::string
+message_name() const : std::string
+method_name() const : std::string
+set_class_full_name() : void
+set_class_id() : void
+set_method_name() : void
+to_string() const : std::string
+type_name() const : std::string
__
-class_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L184{class_full_name_}]]]
-class_id_ : diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L182{class_id_}]]]
-method_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L183{method_name_}]]]
}
class "function_template" as C_0002280191967493310558
class C_0002280191967493310558 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/participant.h#L187{function_template}]] {
+function_template() : void
+function_template() = deleted : void
+function_template() noexcept = deleted : void
..
+operator=() = deleted : function_template &
+operator=() = deleted : function_template &
..
+full_name() const : std::string
+full_name_no_ns() const : std::string
+message_name() const : std::string
+type_name() const : std::string
__
}
class "message" as C_0002228653068706235818
class C_0002228653068706235818 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L28{message}]] {
+message() = default : void
+message() : void
..
+from() const : common::model::diagram_element::id_t
+message_name() const : const std::string &
+message_scope() const : common::model::message_scope_t
+return_type() const : const std::string &
+set_from() : void
+set_message_name() : void
+set_message_scope() : void
+set_return_type() : void
+set_to() : void
+set_type() : void
+to() const : common::model::diagram_element::id_t
+type() const : common::model::message_t
__
-from_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L56{from_}]]]
-message_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L65{message_name_}]]]
-return_type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L67{return_type_}]]]
-to_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/message.h#L58{to_}]]]
}
class "activity" as C_0000460030520790196523
class C_0000460030520790196523 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L28{activity}]] {
+activity() : void
..
+add_message() : void
+from() const : common::model::diagram_element::id_t
+messages() : std::vector<message> &
+messages() const : const std::vector<message> &
+set_from() : void
__
-from_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/activity.h#L43{from_}]]]
}
class "diagram" as C_0000924044572035510976
class C_0000924044572035510976 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L30{diagram}]] {
+diagram() = default : void
+diagram() = deleted : void
+diagram() = default : void
..
+operator=() = deleted : diagram &
+operator=() = default : diagram &
..
+active_participants() const : const std::set<common::model::diagram_element::id_t> &
+active_participants() : std::set<common::model::diagram_element::id_t> &
+add_active_participant() : void
+add_block_message() : void
+add_case_stmt_message() : void
+add_message() : void
+add_participant() : void
+context() const : inja::json
+end_block_message() : void
-fold_or_end_block_statement() const : void
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+get_activity() : activity &
+get_participant<T>() : common::optional_ref<T>
+get_participant<T>() const : common::optional_ref<T>
+participants() : std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> &
+participants() const : const std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> &
+print() const : void
+sequences() : std::map<common::model::diagram_element::id_t,activity> &
+sequences() const : const std::map<common::model::diagram_element::id_t,activity> &
+started() const : bool
+started() : void
+to_alias() const : std::string
+type() const : common::model::diagram_t
__
-active_participants_ : std::set<common::model::diagram_element::id_t> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L140{active_participants_}]]]
-started_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/sequence_diagram/model/diagram.h#L133{started_}]]]
}
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0000844837292165721774 o- - C_0002031918453259559099 : -path_type_
C_0002069520381434407937 o- - C_0000844837292165721774 : -ns_
C_0002069520381434407937 o- - C_0000844837292165721774 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000845978329661395972 o- - C_0002193110380171976294 : +pr
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000845978329661395972 : -context_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0000785714713072053129 o- - C_0000844837292165721774 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0002051668456717902300
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002069520381434407937 <|- - C_0001400215772842495226
C_0002077846075979426940 <|- - C_0001400215772842495226
C_0001483671267820004141 - -+ C_0001400215772842495226
C_0001400215772842495226 <|- - C_0000885514871619471610
C_0000464715462505216589 <|- - C_0000885514871619471610
C_0000885514871619471610 <|- - C_0001701531547288995691
C_0001400215772842495226 <|- - C_0000232638456031681828
C_0001521646084824511527 - -+ C_0000232638456031681828
C_0000232638456031681828 <|- - C_0000817665972547784504
C_0000232638456031681828 <|- - C_0002280191967493310558
C_0000464715462505216589 <|- - C_0002280191967493310558
C_0002228653068706235818 o- - C_0001623832985137466228 : -type_
C_0002228653068706235818 o- - C_0000202859212831973510 : -scope_
C_0001073500714379115414 <|- - C_0002228653068706235818
C_0000460030520790196523 o- - C_0002228653068706235818 : -messages_
C_0000924044572035510976 o- - C_0000460030520790196523 : -sequences_
C_0000924044572035510976 o- - C_0001400215772842495226 : -participants_
C_0000197068985320835874 <|- - C_0000924044572035510976

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>