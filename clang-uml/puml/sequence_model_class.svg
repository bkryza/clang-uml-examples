<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3181px" preserveAspectRatio="none" style="width:6546px;height:3181px;" version="1.1" viewBox="0 0 6546 3181" width="6546px" zoomAndPan="magnify"><defs><filter height="300%" id="fhlr8temrax7t" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="314" x="3120" y="16.708">clang-uml sequence diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1207" y="169.9531"/><ellipse cx="1222" cy="185.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1226.1094,191.9531 L1218.3906,191.9531 L1218.3906,179.5625 L1226.1094,179.5625 L1226.1094,181.7188 L1220.8438,181.7188 L1220.8438,184.3906 L1225.6094,184.3906 L1225.6094,186.5469 L1220.8438,186.5469 L1220.8438,189.7969 L1226.1094,189.7969 L1226.1094,191.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="1236" y="190.1074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1208" x2="1471" y1="201.9531" y2="201.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1213" y="216.1636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="1213" y="228.9683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="1213" y="241.7729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="1213" y="254.5776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1208" x2="1471" y1="261.1719" y2="261.1719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="3423.5" y="1886.4531"/><ellipse cx="3438.5" cy="1902.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3442.6094,1908.4531 L3434.8906,1908.4531 L3434.8906,1896.0625 L3442.6094,1896.0625 L3442.6094,1898.2188 L3437.3438,1898.2188 L3437.3438,1900.8906 L3442.1094,1900.8906 L3442.1094,1903.0469 L3437.3438,1903.0469 L3437.3438,1906.2969 L3442.6094,1906.2969 L3442.6094,1908.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="3452.5" y="1906.6074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3424.5" x2="3680.5" y1="1918.4531" y2="1918.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="3429.5" y="1932.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3429.5" y="1945.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="3429.5" y="1958.2729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="3429.5" y="1971.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3424.5" x2="3680.5" y1="1977.6719" y2="1977.6719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3820.5" y="1834.9531"/><ellipse cx="3835.5" cy="1850.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3839.6094,1856.9531 L3831.8906,1856.9531 L3831.8906,1844.5625 L3839.6094,1844.5625 L3839.6094,1846.7188 L3834.3438,1846.7188 L3834.3438,1849.3906 L3839.1094,1849.3906 L3839.1094,1851.5469 L3834.3438,1851.5469 L3834.3438,1854.7969 L3839.6094,1854.7969 L3839.6094,1856.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="3849.5" y="1855.1074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3821.5" x2="4107.5" y1="1866.9531" y2="1866.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="3826.5" y="1881.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="3826.5" y="1893.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3826.5" y="1906.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3826.5" y="1919.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="3826.5" y="1932.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3826.5" y="1945.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="3826.5" y="1957.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3826.5" y="1970.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3826.5" y="1983.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="3826.5" y="1996.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="3826.5" y="2009.2104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3826.5" y="2022.0151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3821.5" x2="4107.5" y1="2028.6094" y2="2028.6094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="2035" y="1770.9531"/><ellipse cx="2050" cy="1786.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2054.1094,1792.9531 L2046.3906,1792.9531 L2046.3906,1780.5625 L2054.1094,1780.5625 L2054.1094,1782.7188 L2048.8438,1782.7188 L2048.8438,1785.3906 L2053.6094,1785.3906 L2053.6094,1787.5469 L2048.8438,1787.5469 L2048.8438,1790.7969 L2054.1094,1790.7969 L2054.1094,1792.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="2064" y="1791.1074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2036" x2="2305" y1="1802.9531" y2="1802.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="2041" y="1817.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2041" y="1829.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="2041" y="1842.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="2041" y="1855.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="2041" y="1868.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="2041" y="1881.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2041" y="1893.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="2041" y="1906.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="2041" y="1919.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="2041" y="1932.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2041" y="1945.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2041" y="1958.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2041" y="1970.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="2041" y="1983.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2041" y="1996.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2041" y="2009.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2041" y="2022.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="2041" y="2034.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="2041" y="2047.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2041" y="2060.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2041" y="2073.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2041" y="2086.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2036" x2="2305" y1="2092.6563" y2="2092.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="3073" y="1898.9531"/><ellipse cx="3088" cy="1914.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3092.1094,1920.9531 L3084.3906,1920.9531 L3084.3906,1908.5625 L3092.1094,1908.5625 L3092.1094,1910.7188 L3086.8438,1910.7188 L3086.8438,1913.3906 L3091.6094,1913.3906 L3091.6094,1915.5469 L3086.8438,1915.5469 L3086.8438,1918.7969 L3092.1094,1918.7969 L3092.1094,1920.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="283" x="3102" y="1919.1074">clanguml::common::model::message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3074" x2="3387" y1="1930.9531" y2="1930.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="3079" y="1945.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3079" y="1957.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3074" x2="3387" y1="1964.5625" y2="1964.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="1848.5" y="614.9531"/><ellipse cx="1948.75" cy="630.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1951.7188,636.5938 Q1951.1406,636.8906 1950.5,637.0313 Q1949.8594,637.1875 1949.1563,637.1875 Q1946.6563,637.1875 1945.3281,635.5469 Q1944.0156,633.8906 1944.0156,630.7656 Q1944.0156,627.6406 1945.3281,625.9844 Q1946.6563,624.3281 1949.1563,624.3281 Q1949.8594,624.3281 1950.5,624.4844 Q1951.1563,624.6406 1951.7188,624.9375 L1951.7188,627.6563 Q1951.0938,627.0781 1950.5,626.8125 Q1949.9063,626.5313 1949.2813,626.5313 Q1947.9375,626.5313 1947.25,627.6094 Q1946.5625,628.6719 1946.5625,630.7656 Q1946.5625,632.8594 1947.25,633.9375 Q1947.9375,635 1949.2813,635 Q1949.9063,635 1950.5,634.7344 Q1951.0938,634.4531 1951.7188,633.875 L1951.7188,636.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="1969.25" y="635.1074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1849.5" x2="2349.5" y1="646.9531" y2="646.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1854.5" y="652.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1856.5" y="654.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1868.5" y="661.1636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1854.5" y="665.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1856.5" y="667.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1868.5" y="673.9683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1849.5" x2="2349.5" y1="680.5625" y2="680.5625"/><ellipse cx="1859.5" cy="691.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1868.5" y="694.7729">skip() const : bool</text><ellipse cx="1859.5" cy="704.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1868.5" y="707.5776">skip_relationship() const : bool</text><ellipse cx="1859.5" cy="717.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1868.5" y="720.3823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1859.5" cy="729.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1868.5" y="733.187">style_spec() const : std::string</text><ellipse cx="1859.5" cy="742.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1868.5" y="745.9917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1859.5" cy="755.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1868.5" y="758.7964">add_decorators() : void</text><ellipse cx="1859.5" cy="768.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1868.5" y="771.6011">append() : void</text><ellipse cx="1859.5" cy="781.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1868.5" y="784.4058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1859.5" cy="794" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1868.5" y="797.2104">set_comment() : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="1373.5" y="1130.9531"/><ellipse cx="1388.5" cy="1146.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1391.4688,1152.5938 Q1390.8906,1152.8906 1390.25,1153.0313 Q1389.6094,1153.1875 1388.9063,1153.1875 Q1386.4063,1153.1875 1385.0781,1151.5469 Q1383.7656,1149.8906 1383.7656,1146.7656 Q1383.7656,1143.6406 1385.0781,1141.9844 Q1386.4063,1140.3281 1388.9063,1140.3281 Q1389.6094,1140.3281 1390.25,1140.4844 Q1390.9063,1140.6406 1391.4688,1140.9375 L1391.4688,1143.6563 Q1390.8438,1143.0781 1390.25,1142.8125 Q1389.6563,1142.5313 1389.0313,1142.5313 Q1387.6875,1142.5313 1387,1143.6094 Q1386.3125,1144.6719 1386.3125,1146.7656 Q1386.3125,1148.8594 1387,1149.9375 Q1387.6875,1151 1389.0313,1151 Q1389.6563,1151 1390.25,1150.7344 Q1390.8438,1150.4531 1391.4688,1149.875 L1391.4688,1152.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="1402.5" y="1151.1074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1374.5" x2="1680.5" y1="1162.9531" y2="1162.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1379.5" y="1168.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1381.5" y="1170.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1393.5" y="1177.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1374.5" x2="1680.5" y1="1183.7578" y2="1183.7578"/><ellipse cx="1384.5" cy="1194.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1393.5" y="1197.9683">set_style() : void</text><ellipse cx="1384.5" cy="1207.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1393.5" y="1210.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="2591" y="1415.9531"/><ellipse cx="2634.8" cy="1431.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2637.7688,1437.5938 Q2637.1906,1437.8906 2636.55,1438.0313 Q2635.9094,1438.1875 2635.2063,1438.1875 Q2632.7063,1438.1875 2631.3781,1436.5469 Q2630.0656,1434.8906 2630.0656,1431.7656 Q2630.0656,1428.6406 2631.3781,1426.9844 Q2632.7063,1425.3281 2635.2063,1425.3281 Q2635.9094,1425.3281 2636.55,1425.4844 Q2637.2063,1425.6406 2637.7688,1425.9375 L2637.7688,1428.6563 Q2637.1438,1428.0781 2636.55,1427.8125 Q2635.9563,1427.5313 2635.3313,1427.5313 Q2633.9875,1427.5313 2633.3,1428.6094 Q2632.6125,1429.6719 2632.6125,1431.7656 Q2632.6125,1433.8594 2633.3,1434.9375 Q2633.9875,1436 2635.3313,1436 Q2635.9563,1436 2636.55,1435.7344 Q2637.1438,1435.4531 2637.7688,1434.875 L2637.7688,1437.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="2655.2" y="1436.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2592" x2="2931" y1="1447.9531" y2="1447.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2597" y="1453.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2599" y="1455.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2611" y="1462.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2597" y="1466.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2599" y="1468.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2611" y="1474.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2597" y="1479.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2599" y="1481.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2611" y="1487.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2597" y="1492.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2599" y="1494.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2611" y="1500.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2592" x2="2931" y1="1507.1719" y2="1507.1719"/><ellipse cx="2602" cy="1518.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2611" y="1521.3823">relationship() : void</text><ellipse cx="2602" cy="1530.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2611" y="1534.187">~relationship() = default : void</text><ellipse cx="2602" cy="1543.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2611" y="1546.9917">set_type() : void</text><ellipse cx="2602" cy="1556.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2611" y="1559.7964">type() const : clanguml::common::model::relationship_t</text><ellipse cx="2602" cy="1569.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2611" y="1572.6011">set_destination() : void</text><ellipse cx="2602" cy="1582.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2611" y="1585.4058">destination() const : clanguml::common::id_t</text><ellipse cx="2602" cy="1595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2611" y="1598.2104">set_multiplicity_source() : void</text><ellipse cx="2602" cy="1607.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2611" y="1611.0151">multiplicity_source() const : std::string</text><ellipse cx="2602" cy="1620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2611" y="1623.8198">set_multiplicity_destination() : void</text><ellipse cx="2602" cy="1633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2611" y="1636.6245">multiplicity_destination() const : std::string</text><ellipse cx="2602" cy="1646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2611" y="1649.4292">set_label() : void</text><ellipse cx="2602" cy="1659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2611" y="1662.2339">label() const : std::string</text><ellipse cx="2602" cy="1671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2611" y="1675.0386">set_access() : void</text><ellipse cx="2602" cy="1684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="2611" y="1687.8433">access() const : clanguml::common::model::access_t</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="2385.5" y="595.9531"/><ellipse cx="2400.5" cy="611.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2403.4688,617.5938 Q2402.8906,617.8906 2402.25,618.0313 Q2401.6094,618.1875 2400.9063,618.1875 Q2398.4063,618.1875 2397.0781,616.5469 Q2395.7656,614.8906 2395.7656,611.7656 Q2395.7656,608.6406 2397.0781,606.9844 Q2398.4063,605.3281 2400.9063,605.3281 Q2401.6094,605.3281 2402.25,605.4844 Q2402.9063,605.6406 2403.4688,605.9375 L2403.4688,608.6563 Q2402.8438,608.0781 2402.25,607.8125 Q2401.6563,607.5313 2401.0313,607.5313 Q2399.6875,607.5313 2399,608.6094 Q2398.3125,609.6719 2398.3125,611.7656 Q2398.3125,613.8594 2399,614.9375 Q2399.6875,616 2401.0313,616 Q2401.6563,616 2402.25,615.7344 Q2402.8438,615.4531 2403.4688,614.875 L2403.4688,617.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="2414.5" y="616.1074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2386.5" x2="2686.5" y1="627.9531" y2="627.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2391.5" y="633.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2393.5" y="635.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2405.5" y="642.1636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2391.5" y="646.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2393.5" y="648.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2405.5" y="654.9683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2391.5" y="659.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2393.5" y="661.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2405.5" y="667.7729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2391.5" y="672.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2393.5" y="674.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2405.5" y="680.5776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2386.5" x2="2686.5" y1="687.1719" y2="687.1719"/><ellipse cx="2396.5" cy="698.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2405.5" y="701.3823">source_location() = default : void</text><ellipse cx="2396.5" cy="710.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2405.5" y="714.187">source_location() : void</text><ellipse cx="2396.5" cy="723.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2405.5" y="726.9917">file() const : const std::string &amp;</text><ellipse cx="2396.5" cy="736.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2405.5" y="739.7964">set_file() : void</text><ellipse cx="2396.5" cy="749.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2405.5" y="752.6011">file_relative() const : const std::string &amp;</text><ellipse cx="2396.5" cy="762.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2405.5" y="765.4058">set_file_relative() : void</text><ellipse cx="2396.5" cy="775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2405.5" y="778.2104">line() const : unsigned int</text><ellipse cx="2396.5" cy="787.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2405.5" y="791.0151">set_line() : void</text><ellipse cx="2396.5" cy="800.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2405.5" y="803.8198">location_id() const : unsigned int</text><ellipse cx="2396.5" cy="813.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2405.5" y="816.6245">set_location_id() : void</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="2036" y="1008.9531"/><ellipse cx="2080.75" cy="1024.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2083.7188,1030.5938 Q2083.1406,1030.8906 2082.5,1031.0313 Q2081.8594,1031.1875 2081.1563,1031.1875 Q2078.6563,1031.1875 2077.3281,1029.5469 Q2076.0156,1027.8906 2076.0156,1024.7656 Q2076.0156,1021.6406 2077.3281,1019.9844 Q2078.6563,1018.3281 2081.1563,1018.3281 Q2081.8594,1018.3281 2082.5,1018.4844 Q2083.1563,1018.6406 2083.7188,1018.9375 L2083.7188,1021.6563 Q2083.0938,1021.0781 2082.5,1020.8125 Q2081.9063,1020.5313 2081.2813,1020.5313 Q2079.9375,1020.5313 2079.25,1021.6094 Q2078.5625,1022.6719 2078.5625,1024.7656 Q2078.5625,1026.8594 2079.25,1027.9375 Q2079.9375,1029 2081.2813,1029 Q2081.9063,1029 2082.5,1028.7344 Q2083.0938,1028.4531 2083.7188,1027.875 L2083.7188,1030.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="2101.25" y="1029.1074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2037" x2="2412" y1="1040.9531" y2="1040.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2042" y="1046.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2044" y="1048.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="2056" y="1055.1636">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2042" y="1059.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2044" y="1061.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2056" y="1067.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2042" y="1072.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2044" y="1074.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2056" y="1080.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2042" y="1085.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2044" y="1087.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2056" y="1093.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2037" x2="2412" y1="1100.1719" y2="1100.1719"/><ellipse cx="2047" cy="1111.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2056" y="1114.3823">diagram_element() : void</text><ellipse cx="2047" cy="1123.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="2056" y="1127.187">~diagram_element() = default : void</text><ellipse cx="2047" cy="1136.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2056" y="1139.9917">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="2047" cy="1149.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2056" y="1152.7964">set_id() : void</text><ellipse cx="2047" cy="1162.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2056" y="1165.6011">alias() const : std::string</text><ellipse cx="2047" cy="1175.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2056" y="1178.4058">set_name() : void</text><ellipse cx="2047" cy="1188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2056" y="1191.2104">name() const : std::string</text><ellipse cx="2047" cy="1200.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2056" y="1204.0151">type_name() const : std::string</text><ellipse cx="2047" cy="1213.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2056" y="1216.8198">full_name() const : std::string</text><ellipse cx="2047" cy="1226.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2056" y="1229.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="2047" cy="1239.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="2056" y="1242.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="2047" cy="1252.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2056" y="1255.2339">add_relationship() : void</text><ellipse cx="2047" cy="1264.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2056" y="1268.0386">append() : void</text><ellipse cx="2047" cy="1277.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2056" y="1280.8433">context() const : inja::json</text><ellipse cx="2047" cy="1290.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2056" y="1293.6479">is_nested() const : bool</text><ellipse cx="2047" cy="1303.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2056" y="1306.4526">nested() : void</text><ellipse cx="2047" cy="1316.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2056" y="1319.2573">complete() const : bool</text><ellipse cx="2047" cy="1328.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2056" y="1332.062">complete() : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="761" y="2241.9531"/><ellipse cx="893.25" cy="2257.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M896.2188,2263.5938 Q895.6406,2263.8906 895,2264.0313 Q894.3594,2264.1875 893.6563,2264.1875 Q891.1563,2264.1875 889.8281,2262.5469 Q888.5156,2260.8906 888.5156,2257.7656 Q888.5156,2254.6406 889.8281,2252.9844 Q891.1563,2251.3281 893.6563,2251.3281 Q894.3594,2251.3281 895,2251.4844 Q895.6563,2251.6406 896.2188,2251.9375 L896.2188,2254.6563 Q895.5938,2254.0781 895,2253.8125 Q894.4063,2253.5313 893.7813,2253.5313 Q892.4375,2253.5313 891.75,2254.6094 Q891.0625,2255.6719 891.0625,2257.7656 Q891.0625,2259.8594 891.75,2260.9375 Q892.4375,2262 893.7813,2262 Q894.4063,2262 895,2261.7344 Q895.5938,2261.4531 896.2188,2260.875 L896.2188,2263.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="913.75" y="2262.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1239" y="2238.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1240" y="2251.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="762" x2="1261" y1="2273.9531" y2="2273.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="767" y="2279.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="769" y="2281.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="781" y="2288.1636">path_ : clanguml::common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="762" x2="1261" y1="2294.7578" y2="2294.7578"/><ellipse cx="772" cy="2305.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="781" y="2308.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="772" cy="2318.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="781" y="2321.7729">path&lt;Sep&gt;() : void</text><ellipse cx="772" cy="2331.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="781" y="2334.5776">path&lt;Sep&gt;() : void</text><ellipse cx="772" cy="2344.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="781" y="2347.3823">path&lt;Sep&gt;() : void</text><ellipse cx="772" cy="2356.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="781" y="2360.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="772" cy="2369.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="781" y="2372.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="772" cy="2382.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="781" y="2385.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="772" cy="2395.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="781" y="2398.6011">path&lt;Sep&gt;() : void</text><ellipse cx="772" cy="2408.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="781" y="2411.4058">path&lt;Sep&gt;() : void</text><ellipse cx="772" cy="2421" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="781" y="2424.2104">to_string() const : std::string</text><ellipse cx="772" cy="2433.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="781" y="2437.0151">is_empty() const : bool</text><ellipse cx="772" cy="2446.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="781" y="2449.8198">size() const : size_t</text><ellipse cx="772" cy="2459.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="781" y="2462.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="772" cy="2472.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="781" y="2475.4292">operator|=() : void</text><ellipse cx="772" cy="2485.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="781" y="2488.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="772" cy="2497.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="781" y="2501.0386">operator|=() : void</text><ellipse cx="772" cy="2510.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="781" y="2513.8433">operator[]() : std::string &amp;</text><ellipse cx="772" cy="2523.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="781" y="2526.6479">operator[]() const : const std::string &amp;</text><ellipse cx="772" cy="2536.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="781" y="2539.4526">append() : void</text><ellipse cx="772" cy="2549.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="781" y="2552.2573">append() : void</text><ellipse cx="772" cy="2561.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="781" y="2565.062">pop_back() : void</text><ellipse cx="772" cy="2574.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="781" y="2577.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="772" cy="2587.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="781" y="2590.6714">starts_with() const : bool</text><ellipse cx="772" cy="2600.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="781" y="2603.4761">ends_with() const : bool</text><ellipse cx="772" cy="2613.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="781" y="2616.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="772" cy="2625.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="781" y="2629.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="772" cy="2638.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="781" y="2641.8901">relative() const : std::string</text><ellipse cx="772" cy="2651.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="781" y="2654.6948">name() const : std::string</text><ellipse cx="772" cy="2664.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="781" y="2667.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="772" cy="2677.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="781" y="2680.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="772" cy="2689.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="781" y="2693.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="772" cy="2702.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="781" y="2705.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="772" cy="2715.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="781" y="2718.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="772" cy="2728.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="781" y="2731.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="1507" y="188.9531"/><ellipse cx="1522" cy="204.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1524.9688,210.5938 Q1524.3906,210.8906 1523.75,211.0313 Q1523.1094,211.1875 1522.4063,211.1875 Q1519.9063,211.1875 1518.5781,209.5469 Q1517.2656,207.8906 1517.2656,204.7656 Q1517.2656,201.6406 1518.5781,199.9844 Q1519.9063,198.3281 1522.4063,198.3281 Q1523.1094,198.3281 1523.75,198.4844 Q1524.4063,198.6406 1524.9688,198.9375 L1524.9688,201.6563 Q1524.3438,201.0781 1523.75,200.8125 Q1523.1563,200.5313 1522.5313,200.5313 Q1521.1875,200.5313 1520.5,201.6094 Q1519.8125,202.6719 1519.8125,204.7656 Q1519.8125,206.8594 1520.5,207.9375 Q1521.1875,209 1522.5313,209 Q1523.1563,209 1523.75,208.7344 Q1524.3438,208.4531 1524.9688,207.875 L1524.9688,210.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="1536" y="209.1074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1508" x2="1827" y1="220.9531" y2="220.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1513" y="226.9531"/><ellipse cx="1518" cy="231.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="1527" y="235.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1508" x2="1827" y1="241.7578" y2="241.7578"/><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="1197" y="1911.9531"/><ellipse cx="1212" cy="1927.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1214.9688,1933.5938 Q1214.3906,1933.8906 1213.75,1934.0313 Q1213.1094,1934.1875 1212.4063,1934.1875 Q1209.9063,1934.1875 1208.5781,1932.5469 Q1207.2656,1930.8906 1207.2656,1927.7656 Q1207.2656,1924.6406 1208.5781,1922.9844 Q1209.9063,1921.3281 1212.4063,1921.3281 Q1213.1094,1921.3281 1213.75,1921.4844 Q1214.4063,1921.6406 1214.9688,1921.9375 L1214.9688,1924.6563 Q1214.3438,1924.0781 1213.75,1923.8125 Q1213.1563,1923.5313 1212.5313,1923.5313 Q1211.1875,1923.5313 1210.5,1924.6094 Q1209.8125,1925.6719 1209.8125,1927.7656 Q1209.8125,1929.8594 1210.5,1930.9375 Q1211.1875,1932 1212.5313,1932 Q1213.1563,1932 1213.75,1931.7344 Q1214.3438,1931.4531 1214.9688,1930.875 L1214.9688,1933.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1226" y="1932.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="1434" y="1908.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="1435" y="1921.0918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1198" x2="1719" y1="1943.9531" y2="1943.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1198" x2="1719" y1="1951.9531" y2="1951.9531"/><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="969.5" y="1460.4531"/><ellipse cx="1086.25" cy="1476.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1089.2188,1482.0938 Q1088.6406,1482.3906 1088,1482.5313 Q1087.3594,1482.6875 1086.6563,1482.6875 Q1084.1563,1482.6875 1082.8281,1481.0469 Q1081.5156,1479.3906 1081.5156,1476.2656 Q1081.5156,1473.1406 1082.8281,1471.4844 Q1084.1563,1469.8281 1086.6563,1469.8281 Q1087.3594,1469.8281 1088,1469.9844 Q1088.6563,1470.1406 1089.2188,1470.4375 L1089.2188,1473.1563 Q1088.5938,1472.5781 1088,1472.3125 Q1087.4063,1472.0313 1086.7813,1472.0313 Q1085.4375,1472.0313 1084.75,1473.1094 Q1084.0625,1474.1719 1084.0625,1476.2656 Q1084.0625,1478.3594 1084.75,1479.4375 Q1085.4375,1480.5 1086.7813,1480.5 Q1087.4063,1480.5 1088,1480.2344 Q1088.5938,1479.9531 1089.2188,1479.375 L1089.2188,1482.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="1106.75" y="1480.6074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="970.5" x2="1432.5" y1="1492.4531" y2="1492.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="970.5" x2="1432.5" y1="1500.4531" y2="1500.4531"/><ellipse cx="980.5" cy="1511.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="989.5" y="1514.6636">element() : void</text><ellipse cx="980.5" cy="1524.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="989.5" y="1527.4683">~element() = default : void</text><ellipse cx="980.5" cy="1537.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="989.5" y="1540.2729">name_and_ns() const : std::string</text><ellipse cx="980.5" cy="1549.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="989.5" y="1553.0776">set_namespace() : void</text><ellipse cx="980.5" cy="1562.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="989.5" y="1565.8823">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="980.5" cy="1575.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="989.5" y="1578.687">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="980.5" cy="1588.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="989.5" y="1591.4917">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="980.5" cy="1601.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="989.5" y="1604.2964">full_name() const : std::string</text><ellipse cx="980.5" cy="1613.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="989.5" y="1617.1011">full_name_no_ns() const : std::string</text><ellipse cx="980.5" cy="1626.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="989.5" y="1629.9058">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="980.5" cy="1639.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="989.5" y="1642.7104">context() const : inja::json</text></a><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="374" x="2801.5" y="2968.4531"/><ellipse cx="2816.5" cy="2984.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2820.6094,2990.4531 L2812.8906,2990.4531 L2812.8906,2978.0625 L2820.6094,2978.0625 L2820.6094,2980.2188 L2815.3438,2980.2188 L2815.3438,2982.8906 L2820.1094,2982.8906 L2820.1094,2985.0469 L2815.3438,2985.0469 L2815.3438,2988.2969 L2820.6094,2988.2969 L2820.6094,2990.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="342" x="2830.5" y="2988.6074">clanguml::common::model::template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2802.5" x2="3174.5" y1="3000.4531" y2="3000.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="2807.5" y="3014.6636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2807.5" y="3027.4683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2807.5" y="3040.2729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2807.5" y="3053.0776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2807.5" y="3065.8823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2802.5" x2="3174.5" y1="3072.4766" y2="3072.4766"/></a><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="624.2109" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="2734.5" y="2177.9531"/><ellipse cx="2827.75" cy="2193.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2830.7188,2199.5938 Q2830.1406,2199.8906 2829.5,2200.0313 Q2828.8594,2200.1875 2828.1563,2200.1875 Q2825.6563,2200.1875 2824.3281,2198.5469 Q2823.0156,2196.8906 2823.0156,2193.7656 Q2823.0156,2190.6406 2824.3281,2188.9844 Q2825.6563,2187.3281 2828.1563,2187.3281 Q2828.8594,2187.3281 2829.5,2187.4844 Q2830.1563,2187.6406 2830.7188,2187.9375 L2830.7188,2190.6563 Q2830.0938,2190.0781 2829.5,2189.8125 Q2828.9063,2189.5313 2828.2813,2189.5313 Q2826.9375,2189.5313 2826.25,2190.6094 Q2825.5625,2191.6719 2825.5625,2193.7656 Q2825.5625,2195.8594 2826.25,2196.9375 Q2826.9375,2198 2828.2813,2198 Q2828.9063,2198 2829.5,2197.7344 Q2830.0938,2197.4531 2830.7188,2196.875 L2830.7188,2199.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="2848.25" y="2198.1074">clanguml::common::model::template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2735.5" x2="3227.5" y1="2209.9531" y2="2209.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2215.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2217.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2754.5" y="2224.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2228.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2230.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2754.5" y="2236.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2241.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2243.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2754.5" y="2249.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2254.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2256.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2754.5" y="2262.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2267.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2269.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="2754.5" y="2275.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2279.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2281.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2754.5" y="2288.187">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2292.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2294.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2754.5" y="2300.9917">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2305.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2307.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2754.5" y="2313.7964">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2318.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2320.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2754.5" y="2326.6011">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2740.5" y="2331.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2333.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2754.5" y="2339.4058">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2735.5" x2="3227.5" y1="2346" y2="2346"/><ellipse cx="2745.5" cy="2357" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="412" x="2754.5" y="2360.2104">make_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="2745.5" cy="2369.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="2754.5" y="2373.0151">make_template_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="2745.5" cy="2382.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="439" x="2754.5" y="2385.8198">make_non_type_template() : clanguml::common::model::template_parameter</text><ellipse cx="2745.5" cy="2395.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="2754.5" y="2398.6245">make_argument() : clanguml::common::model::template_parameter</text><ellipse cx="2745.5" cy="2408.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="2754.5" y="2411.4292">make_unexposed_argument() : clanguml::common::model::template_parameter</text><ellipse cx="2745.5" cy="2421.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2754.5" y="2424.2339">set_type() : void</text><ellipse cx="2745.5" cy="2433.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2754.5" y="2437.0386">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="2745.5" cy="2446.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2754.5" y="2449.8433">set_id() : void</text><ellipse cx="2745.5" cy="2459.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2754.5" y="2462.6479">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="2745.5" cy="2472.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2754.5" y="2475.4526">set_name() : void</text><ellipse cx="2745.5" cy="2485.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2754.5" y="2488.2573">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="2745.5" cy="2497.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2754.5" y="2501.062">set_default_value() : void</text><ellipse cx="2745.5" cy="2510.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="2754.5" y="2513.8667">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="2745.5" cy="2523.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2754.5" y="2526.6714">is_variadic() : void</text><ellipse cx="2745.5" cy="2536.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2754.5" y="2539.4761">is_variadic() const : bool</text><ellipse cx="2745.5" cy="2549.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2754.5" y="2552.2808">calculate_specialization_match() const : int</text><ellipse cx="2745.5" cy="2561.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2754.5" y="2565.0854">is_template_parameter() const : bool</text><ellipse cx="2745.5" cy="2574.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2754.5" y="2577.8901">is_template_parameter() : void</text><ellipse cx="2745.5" cy="2587.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="2754.5" y="2590.6948">is_template_template_parameter() const : bool</text><ellipse cx="2745.5" cy="2600.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="2754.5" y="2603.4995">is_template_template_parameter() : void</text><ellipse cx="2745.5" cy="2613.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2754.5" y="2616.3042">to_string() const : std::string</text><ellipse cx="2745.5" cy="2625.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2754.5" y="2629.1089">add_template_param() : void</text><ellipse cx="2745.5" cy="2638.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2754.5" y="2641.9136">add_template_param() : void</text><ellipse cx="2745.5" cy="2651.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="2754.5" y="2654.7183">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="2745.5" cy="2664.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2754.5" y="2667.5229">clear_params() : void</text><ellipse cx="2745.5" cy="2677.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="2754.5" y="2680.3276">find_nested_relationships() const : bool</text><ellipse cx="2745.5" cy="2689.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2754.5" y="2693.1323">set_concept_constraint() : void</text><ellipse cx="2745.5" cy="2702.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2754.5" y="2705.937">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="2745.5" cy="2715.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="2754.5" y="2718.7417">kind() const : clanguml::common::model::template_parameter_kind_t</text><ellipse cx="2745.5" cy="2728.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2754.5" y="2731.5464">set_kind() : void</text><ellipse cx="2745.5" cy="2741.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="2754.5" y="2744.3511">is_unexposed() const : bool</text><ellipse cx="2745.5" cy="2753.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2754.5" y="2757.1558">set_unexposed() : void</text><ellipse cx="2745.5" cy="2766.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2754.5" y="2769.9604">set_function_template() : void</text><ellipse cx="2745.5" cy="2779.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2754.5" y="2782.7651">is_function_template() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2742.5" y="2789.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2754.5" y="2795.5698">template_parameter() = default : void</text><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="2613" y="1847.9531"/><ellipse cx="2691.75" cy="1863.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2694.7188,1869.5938 Q2694.1406,1869.8906 2693.5,1870.0313 Q2692.8594,1870.1875 2692.1563,1870.1875 Q2689.6563,1870.1875 2688.3281,1868.5469 Q2687.0156,1866.8906 2687.0156,1863.7656 Q2687.0156,1860.6406 2688.3281,1858.9844 Q2689.6563,1857.3281 2692.1563,1857.3281 Q2692.8594,1857.3281 2693.5,1857.4844 Q2694.1563,1857.6406 2694.7188,1857.9375 L2694.7188,1860.6563 Q2694.0938,1860.0781 2693.5,1859.8125 Q2692.9063,1859.5313 2692.2813,1859.5313 Q2690.9375,1859.5313 2690.25,1860.6094 Q2689.5625,1861.6719 2689.5625,1863.7656 Q2689.5625,1865.8594 2690.25,1866.9375 Q2690.9375,1868 2692.2813,1868 Q2692.9063,1868 2693.5,1867.7344 Q2694.0938,1867.4531 2694.7188,1866.875 L2694.7188,1869.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="2712.25" y="1868.1074">clanguml::common::model::template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2614" x2="3037" y1="1879.9531" y2="1879.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2619" y="1885.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2621" y="1887.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="2633" y="1894.1636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2619" y="1898.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2621" y="1900.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2633" y="1906.9683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2614" x2="3037" y1="1913.5625" y2="1913.5625"/><ellipse cx="2624" cy="1924.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="2633" y="1927.7729">render_template_params() const : std::ostream &amp;</text><ellipse cx="2624" cy="1937.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2633" y="1940.5776">set_base_template() : void</text><ellipse cx="2624" cy="1950.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2633" y="1953.3823">base_template() const : std::string</text><ellipse cx="2624" cy="1962.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2633" y="1966.187">add_template() : void</text><ellipse cx="2624" cy="1975.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="2633" y="1978.9917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="2624" cy="1988.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2633" y="1991.7964">calculate_template_specialization_match() const : int</text><ellipse cx="2624" cy="2001.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2633" y="2004.6011">is_implicit() const : bool</text><ellipse cx="2624" cy="2014.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2633" y="2017.4058">set_implicit() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="1178.5" y="550.9531"/><ellipse cx="1193.5" cy="566.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1196.4688,572.5938 Q1195.8906,572.8906 1195.25,573.0313 Q1194.6094,573.1875 1193.9063,573.1875 Q1191.4063,573.1875 1190.0781,571.5469 Q1188.7656,569.8906 1188.7656,566.7656 Q1188.7656,563.6406 1190.0781,561.9844 Q1191.4063,560.3281 1193.9063,560.3281 Q1194.6094,560.3281 1195.25,560.4844 Q1195.9063,560.6406 1196.4688,560.9375 L1196.4688,563.6563 Q1195.8438,563.0781 1195.25,562.8125 Q1194.6563,562.5313 1194.0313,562.5313 Q1192.6875,562.5313 1192,563.6094 Q1191.3125,564.6719 1191.3125,566.7656 Q1191.3125,568.8594 1192,569.9375 Q1192.6875,571 1194.0313,571 Q1194.6563,571 1195.25,570.7344 Q1195.8438,570.4531 1196.4688,569.875 L1196.4688,572.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="1207.5" y="571.1074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="1462.5" y="547.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="1463.5" y="560.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1179.5" x2="1499.5" y1="582.9531" y2="582.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1184.5" y="588.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1186.5" y="590.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1198.5" y="597.1636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1179.5" x2="1499.5" y1="603.7578" y2="603.7578"/><ellipse cx="1189.5" cy="614.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1198.5" y="617.9683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="1189.5" cy="627.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1198.5" y="630.7729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="1189.5" cy="640.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1198.5" y="643.5776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="1189.5" cy="653.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="1198.5" y="656.3823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="1189.5" cy="665.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1198.5" y="669.187">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="1189.5" cy="678.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1198.5" y="681.9917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="1189.5" cy="691.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1198.5" y="694.7964">has_element() const : bool</text><ellipse cx="1189.5" cy="704.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1198.5" y="707.6011">is_empty() const : bool</text><ellipse cx="1189.5" cy="717.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1198.5" y="720.4058">begin() : auto</text><ellipse cx="1189.5" cy="730" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1198.5" y="733.2104">end() : auto</text><ellipse cx="1189.5" cy="742.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1198.5" y="746.0151">cbegin() const : auto</text><ellipse cx="1189.5" cy="755.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1198.5" y="758.8198">cend() const : auto</text><ellipse cx="1189.5" cy="768.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1198.5" y="771.6245">begin() const : auto</text><ellipse cx="1189.5" cy="781.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1198.5" y="784.4292">end() const : auto</text><ellipse cx="1189.5" cy="794.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1198.5" y="797.2339">print_tree() : void</text><ellipse cx="1189.5" cy="806.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1198.5" y="810.0386">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="1189.5" cy="819.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1198.5" y="822.8433">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="1189.5" cy="832.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1198.5" y="835.6479">get_element&lt;V=T&gt;() : auto</text><ellipse cx="1189.5" cy="845.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="1198.5" y="848.4526">get_element_parent&lt;V=T&gt;() : auto</text><ellipse cx="1189.5" cy="858.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1198.5" y="861.2573">get_element&lt;V=T&gt;() : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="6" y="1892.9531"/><ellipse cx="21" cy="1908.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25.1094,1914.9531 L17.3906,1914.9531 L17.3906,1902.5625 L25.1094,1902.5625 L25.1094,1904.7188 L19.8438,1904.7188 L19.8438,1907.3906 L24.6094,1907.3906 L24.6094,1909.5469 L19.8438,1909.5469 L19.8438,1912.7969 L25.1094,1912.7969 L25.1094,1914.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="35" y="1913.1074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="286" y1="1924.9531" y2="1924.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="12" y="1939.1636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="12" y="1951.9683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="12" y="1964.7729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="286" y1="1971.3672" y2="1971.3672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="1535.5" y="678.9531"/><ellipse cx="1550.5" cy="694.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1553.4688,700.5938 Q1552.8906,700.8906 1552.25,701.0313 Q1551.6094,701.1875 1550.9063,701.1875 Q1548.4063,701.1875 1547.0781,699.5469 Q1545.7656,697.8906 1545.7656,694.7656 Q1545.7656,691.6406 1547.0781,689.9844 Q1548.4063,688.3281 1550.9063,688.3281 Q1551.6094,688.3281 1552.25,688.4844 Q1552.9063,688.6406 1553.4688,688.9375 L1553.4688,691.6563 Q1552.8438,691.0781 1552.25,690.8125 Q1551.6563,690.5313 1551.0313,690.5313 Q1549.6875,690.5313 1549,691.6094 Q1548.3125,692.6719 1548.3125,694.7656 Q1548.3125,696.8594 1549,697.9375 Q1549.6875,699 1551.0313,699 Q1551.6563,699 1552.25,698.7344 Q1552.8438,698.4531 1553.4688,697.875 L1553.4688,700.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="1564.5" y="699.1074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1536.5" x2="1812.5" y1="710.9531" y2="710.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1541.5" y="716.9531"/><ellipse cx="1546.5" cy="721.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="1555.5" y="725.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1536.5" x2="1812.5" y1="731.7578" y2="731.7578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="322.5" y="1911.9531"/><ellipse cx="337.5" cy="1927.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M340.4688,1933.5938 Q339.8906,1933.8906 339.25,1934.0313 Q338.6094,1934.1875 337.9063,1934.1875 Q335.4063,1934.1875 334.0781,1932.5469 Q332.7656,1930.8906 332.7656,1927.7656 Q332.7656,1924.6406 334.0781,1922.9844 Q335.4063,1921.3281 337.9063,1921.3281 Q338.6094,1921.3281 339.25,1921.4844 Q339.9063,1921.6406 340.4688,1921.9375 L340.4688,1924.6563 Q339.8438,1924.0781 339.25,1923.8125 Q338.6563,1923.5313 338.0313,1923.5313 Q336.6875,1923.5313 336,1924.6094 Q335.3125,1925.6719 335.3125,1927.7656 Q335.3125,1929.8594 336,1930.9375 Q336.6875,1932 338.0313,1932 Q338.6563,1932 339.25,1931.7344 Q339.8438,1931.4531 340.4688,1930.875 L340.4688,1933.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="351.5" y="1932.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="559.5" y="1908.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="560.5" y="1921.0918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="323.5" x2="801.5" y1="1943.9531" y2="1943.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="323.5" x2="801.5" y1="1951.9531" y2="1951.9531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="559" x="375" y="1415.9531"/><ellipse cx="531.25" cy="1431.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M534.2188,1437.5938 Q533.6406,1437.8906 533,1438.0313 Q532.3594,1438.1875 531.6563,1438.1875 Q529.1563,1438.1875 527.8281,1436.5469 Q526.5156,1434.8906 526.5156,1431.7656 Q526.5156,1428.6406 527.8281,1426.9844 Q529.1563,1425.3281 531.6563,1425.3281 Q532.3594,1425.3281 533,1425.4844 Q533.6563,1425.6406 534.2188,1425.9375 L534.2188,1428.6563 Q533.5938,1428.0781 533,1427.8125 Q532.4063,1427.5313 531.7813,1427.5313 Q530.4375,1427.5313 529.75,1428.6094 Q529.0625,1429.6719 529.0625,1431.7656 Q529.0625,1433.8594 529.75,1434.9375 Q530.4375,1436 531.7813,1436 Q532.4063,1436 533,1435.7344 Q533.5938,1435.4531 534.2188,1434.875 L534.2188,1437.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="551.75" y="1436.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="376" x2="933" y1="1447.9531" y2="1447.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="381" y="1453.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="383" y="1455.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="395" y="1462.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="376" x2="933" y1="1468.7578" y2="1468.7578"/><ellipse cx="386" cy="1479.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="395" y="1482.9683">source_file() = default : void</text><ellipse cx="386" cy="1492.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="395" y="1495.7729">source_file() : void</text><ellipse cx="386" cy="1505.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="395" y="1508.5776">set_path() : void</text><ellipse cx="386" cy="1518.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="395" y="1521.3823">set_absolute() : void</text><ellipse cx="386" cy="1530.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="395" y="1534.187">is_absolute() const : bool</text><ellipse cx="386" cy="1543.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="395" y="1546.9917">set_type() : void</text><ellipse cx="386" cy="1556.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="395" y="1559.7964">type() const : clanguml::common::model::source_file_t</text><ellipse cx="386" cy="1569.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="395" y="1572.6011">source_file() : void</text><ellipse cx="386" cy="1582.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="395" y="1585.4058">source_file() = default : void</text><ellipse cx="386" cy="1595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="395" y="1598.2104">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="386" cy="1607.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="395" y="1611.0151">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="386" cy="1620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="395" y="1623.8198">operator==() const : bool</text><ellipse cx="386" cy="1633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="395" y="1636.6245">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="386" cy="1646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="395" y="1649.4292">full_name() const : std::string</text><ellipse cx="386" cy="1659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="395" y="1662.2339">full_path() const : clanguml::common::model::path&lt;clanguml::common::model::fs_path_sep&gt;</text><ellipse cx="386" cy="1671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="395" y="1675.0386">fs_path() const : std::filesystem::path</text><ellipse cx="386" cy="1684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="395" y="1687.8433">context() const : inja::json</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="659" x="4257" y="28.9531"/><ellipse cx="4471.25" cy="44.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4471.3594,40.2969 L4470.2031,45.375 L4472.5313,45.375 L4471.3594,40.2969 Z M4469.875,38.0625 L4472.8594,38.0625 L4476.2188,50.4531 L4473.7656,50.4531 L4473,47.3906 L4469.7188,47.3906 L4468.9688,50.4531 L4466.5313,50.4531 L4469.875,38.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="4491.75" y="49.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4258" x2="4915" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4263" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4265" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4277" y="75.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4263" y="79.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4265" y="81.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4277" y="87.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4258" x2="4915" y1="94.5625" y2="94.5625"/><ellipse cx="4268" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4277" y="108.7729">diagram() : void</text><ellipse cx="4268" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4277" y="121.5776">~diagram() : void</text><ellipse cx="4268" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="4277" y="134.3823">type() const = 0 : clanguml::common::model::diagram_t</text><ellipse cx="4268" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4277" y="147.187">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4268" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4277" y="159.9917">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4268" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="4277" y="172.7964">get_with_namespace() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4268" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4277" y="185.6011">diagram() : void</text><ellipse cx="4268" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4277" y="198.4058">diagram() : void</text><ellipse cx="4268" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4277" y="211.2104">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4268" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4277" y="224.0151">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4268" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4277" y="236.8198">set_name() : void</text><ellipse cx="4268" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4277" y="249.6245">name() const : std::string</text><ellipse cx="4268" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4277" y="262.4292">set_filter() : void</text><ellipse cx="4268" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4277" y="275.2339">set_complete() : void</text><ellipse cx="4268" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4277" y="288.0386">complete() const : bool</text><ellipse cx="4268" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="300.8433">should_include() const : bool</text><ellipse cx="4268" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="313.6479">should_include() const : bool</text><ellipse cx="4268" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="326.4526">should_include() const : bool</text><ellipse cx="4268" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="339.2573">should_include() const : bool</text><ellipse cx="4268" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="352.062">should_include() const : bool</text><ellipse cx="4268" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="364.8667">should_include() const : bool</text><ellipse cx="4268" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4277" y="377.6714">has_element() const : bool</text><ellipse cx="4268" cy="387.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4277" y="390.4761">should_include() const : bool</text><ellipse cx="4268" cy="400.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4277" y="403.2808">context() const = 0 : inja::json</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L30" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L30" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4531.5" y="646.9531"/><ellipse cx="4546.5" cy="662.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4549.4688,668.5938 Q4548.8906,668.8906 4548.25,669.0313 Q4547.6094,669.1875 4546.9063,669.1875 Q4544.4063,669.1875 4543.0781,667.5469 Q4541.7656,665.8906 4541.7656,662.7656 Q4541.7656,659.6406 4543.0781,657.9844 Q4544.4063,656.3281 4546.9063,656.3281 Q4547.6094,656.3281 4548.25,656.4844 Q4548.9063,656.6406 4549.4688,656.9375 L4549.4688,659.6563 Q4548.8438,659.0781 4548.25,658.8125 Q4547.6563,658.5313 4547.0313,658.5313 Q4545.6875,658.5313 4545,659.6094 Q4544.3125,660.6719 4544.3125,662.7656 Q4544.3125,664.8594 4545,665.9375 Q4545.6875,667 4547.0313,667 Q4547.6563,667 4548.25,666.7344 Q4548.8438,666.4531 4549.4688,665.875 L4549.4688,668.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4560.5" y="667.1074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4532.5" x2="4818.5" y1="678.9531" y2="678.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4532.5" x2="4818.5" y1="686.9531" y2="686.9531"/><ellipse cx="4542.5" cy="697.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4551.5" y="701.1636">diagram_filter() : void</text><ellipse cx="4542.5" cy="710.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4551.5" y="713.9683">add_inclusive_filter() : void</text><ellipse cx="4542.5" cy="723.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4551.5" y="726.7729">add_exclusive_filter() : void</text><ellipse cx="4542.5" cy="736.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4551.5" y="739.5776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4539.5" y="746.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4551.5" y="752.3823">init_filters() : void</text><ellipse cx="4542.5" cy="761.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4551.5" y="765.187">should_include&lt;T&gt;() : _Bool</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="837.5" y="1841.4531"/><ellipse cx="882.75" cy="1857.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M885.7188,1863.0938 Q885.1406,1863.3906 884.5,1863.5313 Q883.8594,1863.6875 883.1563,1863.6875 Q880.6563,1863.6875 879.3281,1862.0469 Q878.0156,1860.3906 878.0156,1857.2656 Q878.0156,1854.1406 879.3281,1852.4844 Q880.6563,1850.8281 883.1563,1850.8281 Q883.8594,1850.8281 884.5,1850.9844 Q885.1563,1851.1406 885.7188,1851.4375 L885.7188,1854.1563 Q885.0938,1853.5781 884.5,1853.3125 Q883.9063,1853.0313 883.2813,1853.0313 Q881.9375,1853.0313 881.25,1854.1094 Q880.5625,1855.1719 880.5625,1857.2656 Q880.5625,1859.3594 881.25,1860.4375 Q881.9375,1861.5 883.2813,1861.5 Q883.9063,1861.5 884.5,1861.2344 Q885.0938,1860.9531 885.7188,1860.375 L885.7188,1863.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="903.25" y="1861.6074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="838.5" x2="1160.5" y1="1873.4531" y2="1873.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="843.5" y="1879.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="845.5" y="1881.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="857.5" y="1887.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="838.5" x2="1160.5" y1="1894.2578" y2="1894.2578"/><ellipse cx="848.5" cy="1905.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="857.5" y="1908.4683">package() : void</text><ellipse cx="848.5" cy="1918.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="857.5" y="1921.2729">package() : void</text><ellipse cx="848.5" cy="1930.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="857.5" y="1934.0776">package() = default : void</text><ellipse cx="848.5" cy="1943.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="857.5" y="1946.8823">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="848.5" cy="1956.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="857.5" y="1959.687">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="848.5" cy="1969.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="857.5" y="1972.4917">type_name() const : std::string</text><ellipse cx="848.5" cy="1982.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="857.5" y="1985.2964">full_name() const : std::string</text><ellipse cx="848.5" cy="1994.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="857.5" y="1998.1011">is_deprecated() const : bool</text><ellipse cx="848.5" cy="2007.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="857.5" y="2010.9058">set_deprecated() : void</text><ellipse cx="848.5" cy="2020.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="857.5" y="2023.7104">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="4669.5" y="1517.9531"/><ellipse cx="4684.5" cy="1533.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4688.6094,1539.9531 L4680.8906,1539.9531 L4680.8906,1527.5625 L4688.6094,1527.5625 L4688.6094,1529.7188 L4683.3438,1529.7188 L4683.3438,1532.3906 L4688.1094,1532.3906 L4688.1094,1534.5469 L4683.3438,1534.5469 L4683.3438,1537.7969 L4688.6094,1537.7969 L4688.6094,1539.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="4698.5" y="1538.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4670.5" x2="4910.5" y1="1549.9531" y2="1549.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="4675.5" y="1564.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="4675.5" y="1576.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4670.5" x2="4910.5" y1="1583.5625" y2="1583.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="4640.5" y="1079.4531"/><ellipse cx="4667.2" cy="1095.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4670.1688,1101.0938 Q4669.5906,1101.3906 4668.95,1101.5313 Q4668.3094,1101.6875 4667.6063,1101.6875 Q4665.1063,1101.6875 4663.7781,1100.0469 Q4662.4656,1098.3906 4662.4656,1095.2656 Q4662.4656,1092.1406 4663.7781,1090.4844 Q4665.1063,1088.8281 4667.6063,1088.8281 Q4668.3094,1088.8281 4668.95,1088.9844 Q4669.6063,1089.1406 4670.1688,1089.4375 L4670.1688,1092.1563 Q4669.5438,1091.5781 4668.95,1091.3125 Q4668.3563,1091.0313 4667.7313,1091.0313 Q4666.3875,1091.0313 4665.7,1092.1094 Q4665.0125,1093.1719 4665.0125,1095.2656 Q4665.0125,1097.3594 4665.7,1098.4375 Q4666.3875,1099.5 4667.7313,1099.5 Q4668.3563,1099.5 4668.95,1099.2344 Q4669.5438,1098.9531 4670.1688,1098.375 L4670.1688,1101.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="4683.8" y="1099.6074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4641.5" x2="4939.5" y1="1111.4531" y2="1111.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4641.5" x2="4939.5" y1="1119.4531" y2="1119.4531"/><ellipse cx="4651.5" cy="1130.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4660.5" y="1133.6636">filter_visitor() : void</text><ellipse cx="4651.5" cy="1143.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4660.5" y="1146.4683">~filter_visitor() = default : void</text><ellipse cx="4651.5" cy="1156.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4660.5" y="1159.2729">match() const : tvl::value_t</text><ellipse cx="4651.5" cy="1168.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4660.5" y="1172.0776">match() const : tvl::value_t</text><ellipse cx="4651.5" cy="1181.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4660.5" y="1184.8823">match() const : tvl::value_t</text><ellipse cx="4651.5" cy="1194.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4660.5" y="1197.687">match() const : tvl::value_t</text><ellipse cx="4651.5" cy="1207.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4660.5" y="1210.4917">match() const : tvl::value_t</text><ellipse cx="4651.5" cy="1220.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4660.5" y="1223.2964">match() const : tvl::value_t</text><ellipse cx="4651.5" cy="1232.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4660.5" y="1236.1011">is_inclusive() const : bool</text><ellipse cx="4651.5" cy="1245.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4660.5" y="1248.9058">is_exclusive() const : bool</text><ellipse cx="4651.5" cy="1258.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4660.5" y="1261.7104">type() const : clanguml::common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="5293" y="1505.4531"/><ellipse cx="5308" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5310.9688,1527.0938 Q5310.3906,1527.3906 5309.75,1527.5313 Q5309.1094,1527.6875 5308.4063,1527.6875 Q5305.9063,1527.6875 5304.5781,1526.0469 Q5303.2656,1524.3906 5303.2656,1521.2656 Q5303.2656,1518.1406 5304.5781,1516.4844 Q5305.9063,1514.8281 5308.4063,1514.8281 Q5309.1094,1514.8281 5309.75,1514.9844 Q5310.4063,1515.1406 5310.9688,1515.4375 L5310.9688,1518.1563 Q5310.3438,1517.5781 5309.75,1517.3125 Q5309.1563,1517.0313 5308.5313,1517.0313 Q5307.1875,1517.0313 5306.5,1518.1094 Q5305.8125,1519.1719 5305.8125,1521.2656 Q5305.8125,1523.3594 5306.5,1524.4375 Q5307.1875,1525.5 5308.5313,1525.5 Q5309.1563,1525.5 5309.75,1525.2344 Q5310.3438,1524.9531 5310.9688,1524.375 L5310.9688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="5322" y="1525.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5294" x2="5563" y1="1537.4531" y2="1537.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5294" x2="5563" y1="1545.4531" y2="1545.4531"/><ellipse cx="5304" cy="1556.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5313" y="1559.6636">anyof_filter() : void</text><ellipse cx="5304" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5313" y="1572.4683">~anyof_filter() = default : void</text><ellipse cx="5304" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5313" y="1585.2729">match() const : tvl::value_t</text><ellipse cx="5304" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5313" y="1598.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1468.5" y="1505.4531"/><ellipse cx="1483.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1486.4688,1527.0938 Q1485.8906,1527.3906 1485.25,1527.5313 Q1484.6094,1527.6875 1483.9063,1527.6875 Q1481.4063,1527.6875 1480.0781,1526.0469 Q1478.7656,1524.3906 1478.7656,1521.2656 Q1478.7656,1518.1406 1480.0781,1516.4844 Q1481.4063,1514.8281 1483.9063,1514.8281 Q1484.6094,1514.8281 1485.25,1514.9844 Q1485.9063,1515.1406 1486.4688,1515.4375 L1486.4688,1518.1563 Q1485.8438,1517.5781 1485.25,1517.3125 Q1484.6563,1517.0313 1484.0313,1517.0313 Q1482.6875,1517.0313 1482,1518.1094 Q1481.3125,1519.1719 1481.3125,1521.2656 Q1481.3125,1523.3594 1482,1524.4375 Q1482.6875,1525.5 1484.0313,1525.5 Q1484.6563,1525.5 1485.25,1525.2344 Q1485.8438,1524.9531 1486.4688,1524.375 L1486.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="1497.5" y="1525.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469.5" x2="1777.5" y1="1537.4531" y2="1537.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469.5" x2="1777.5" y1="1545.4531" y2="1545.4531"/><ellipse cx="1479.5" cy="1556.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1488.5" y="1559.6636">namespace_filter() : void</text><ellipse cx="1479.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1488.5" y="1572.4683">~namespace_filter() = default : void</text><ellipse cx="1479.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1488.5" y="1585.2729">match() const : tvl::value_t</text><ellipse cx="1479.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1488.5" y="1598.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="5599.5" y="1505.4531"/><ellipse cx="5614.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5617.4688,1527.0938 Q5616.8906,1527.3906 5616.25,1527.5313 Q5615.6094,1527.6875 5614.9063,1527.6875 Q5612.4063,1527.6875 5611.0781,1526.0469 Q5609.7656,1524.3906 5609.7656,1521.2656 Q5609.7656,1518.1406 5611.0781,1516.4844 Q5612.4063,1514.8281 5614.9063,1514.8281 Q5615.6094,1514.8281 5616.25,1514.9844 Q5616.9063,1515.1406 5617.4688,1515.4375 L5617.4688,1518.1563 Q5616.8438,1517.5781 5616.25,1517.3125 Q5615.6563,1517.0313 5615.0313,1517.0313 Q5613.6875,1517.0313 5613,1518.1094 Q5612.3125,1519.1719 5612.3125,1521.2656 Q5612.3125,1523.3594 5613,1524.4375 Q5613.6875,1525.5 5615.0313,1525.5 Q5615.6563,1525.5 5616.25,1525.2344 Q5616.8438,1524.9531 5617.4688,1524.375 L5617.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="5628.5" y="1525.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5600.5" x2="5886.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5605.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5607.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5619.5" y="1551.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5600.5" x2="5886.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="5610.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5619.5" y="1572.4683">element_filter() : void</text><ellipse cx="5610.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5619.5" y="1585.2729">~element_filter() = default : void</text><ellipse cx="5610.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5619.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="5922.5" y="1505.4531"/><ellipse cx="5937.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5940.4688,1527.0938 Q5939.8906,1527.3906 5939.25,1527.5313 Q5938.6094,1527.6875 5937.9063,1527.6875 Q5935.4063,1527.6875 5934.0781,1526.0469 Q5932.7656,1524.3906 5932.7656,1521.2656 Q5932.7656,1518.1406 5934.0781,1516.4844 Q5935.4063,1514.8281 5937.9063,1514.8281 Q5938.6094,1514.8281 5939.25,1514.9844 Q5939.9063,1515.1406 5940.4688,1515.4375 L5940.4688,1518.1563 Q5939.8438,1517.5781 5939.25,1517.3125 Q5938.6563,1517.0313 5938.0313,1517.0313 Q5936.6875,1517.0313 5936,1518.1094 Q5935.3125,1519.1719 5935.3125,1521.2656 Q5935.3125,1523.3594 5936,1524.4375 Q5936.6875,1525.5 5938.0313,1525.5 Q5938.6563,1525.5 5939.25,1525.2344 Q5939.8438,1524.9531 5940.4688,1524.375 L5940.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="5951.5" y="1525.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5923.5" x2="6213.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5928.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5930.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5942.5" y="1551.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5923.5" x2="6213.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="5933.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5942.5" y="1572.4683">subclass_filter() : void</text><ellipse cx="5933.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5942.5" y="1585.2729">~subclass_filter() = default : void</text><ellipse cx="5933.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5942.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="6249.5" y="1505.4531"/><ellipse cx="6264.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6267.4688,1527.0938 Q6266.8906,1527.3906 6266.25,1527.5313 Q6265.6094,1527.6875 6264.9063,1527.6875 Q6262.4063,1527.6875 6261.0781,1526.0469 Q6259.7656,1524.3906 6259.7656,1521.2656 Q6259.7656,1518.1406 6261.0781,1516.4844 Q6262.4063,1514.8281 6264.9063,1514.8281 Q6265.6094,1514.8281 6266.25,1514.9844 Q6266.9063,1515.1406 6267.4688,1515.4375 L6267.4688,1518.1563 Q6266.8438,1517.5781 6266.25,1517.3125 Q6265.6563,1517.0313 6265.0313,1517.0313 Q6263.6875,1517.0313 6263,1518.1094 Q6262.3125,1519.1719 6262.3125,1521.2656 Q6262.3125,1523.3594 6263,1524.4375 Q6263.6875,1525.5 6265.0313,1525.5 Q6265.6563,1525.5 6266.25,1525.2344 Q6266.8438,1524.9531 6267.4688,1524.375 L6267.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="6278.5" y="1525.6074">clanguml::common::model::parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6250.5" x2="6534.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6255.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6257.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="6269.5" y="1551.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6250.5" x2="6534.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="6260.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6269.5" y="1572.4683">parents_filter() : void</text><ellipse cx="6260.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="6269.5" y="1585.2729">~parents_filter() = default : void</text><ellipse cx="6260.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6269.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="3603" y="1466.9531"/><ellipse cx="3618" cy="1482.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3620.9688,1488.5938 Q3620.3906,1488.8906 3619.75,1489.0313 Q3619.1094,1489.1875 3618.4063,1489.1875 Q3615.9063,1489.1875 3614.5781,1487.5469 Q3613.2656,1485.8906 3613.2656,1482.7656 Q3613.2656,1479.6406 3614.5781,1477.9844 Q3615.9063,1476.3281 3618.4063,1476.3281 Q3619.1094,1476.3281 3619.75,1476.4844 Q3620.4063,1476.6406 3620.9688,1476.9375 L3620.9688,1479.6563 Q3620.3438,1479.0781 3619.75,1478.8125 Q3619.1563,1478.5313 3618.5313,1478.5313 Q3617.1875,1478.5313 3616.5,1479.6094 Q3615.8125,1480.6719 3615.8125,1482.7656 Q3615.8125,1484.8594 3616.5,1485.9375 Q3617.1875,1487 3618.5313,1487 Q3619.1563,1487 3619.75,1486.7344 Q3620.3438,1486.4531 3620.9688,1485.875 L3620.9688,1488.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="3632" y="1487.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="3938" y="1463.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="3939" y="1476.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3604" x2="4325" y1="1498.9531" y2="1498.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3609" y="1504.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1506.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3623" y="1513.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3609" y="1517.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1519.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3623" y="1525.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3609" y="1530.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1532.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="3623" y="1538.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3609" y="1543.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1545.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3623" y="1551.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3604" x2="4325" y1="1558.1719" y2="1558.1719"/><ellipse cx="3614" cy="1569.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="3623" y="1572.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="3614" cy="1581.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="3623" y="1585.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="3614" cy="1594.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3623" y="1597.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1604.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3623" y="1610.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1617.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3623" y="1623.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3611" y="1630.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3623" y="1636.4058">add_adjacent&lt;C,D&gt;() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="4947" y="1511.9531"/><ellipse cx="4962" cy="1527.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4964.9688,1533.5938 Q4964.3906,1533.8906 4963.75,1534.0313 Q4963.1094,1534.1875 4962.4063,1534.1875 Q4959.9063,1534.1875 4958.5781,1532.5469 Q4957.2656,1530.8906 4957.2656,1527.7656 Q4957.2656,1524.6406 4958.5781,1522.9844 Q4959.9063,1521.3281 4962.4063,1521.3281 Q4963.1094,1521.3281 4963.75,1521.4844 Q4964.4063,1521.6406 4964.9688,1521.9375 L4964.9688,1524.6563 Q4964.3438,1524.0781 4963.75,1523.8125 Q4963.1563,1523.5313 4962.5313,1523.5313 Q4961.1875,1523.5313 4960.5,1524.6094 Q4959.8125,1525.6719 4959.8125,1527.7656 Q4959.8125,1529.8594 4960.5,1530.9375 Q4961.1875,1532 4962.5313,1532 Q4963.1563,1532 4963.75,1531.7344 Q4964.3438,1531.4531 4964.9688,1530.875 L4964.9688,1533.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="4976" y="1532.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4948" x2="5257" y1="1543.9531" y2="1543.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4948" x2="5257" y1="1551.9531" y2="1551.9531"/><ellipse cx="4958" cy="1562.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4967" y="1566.1636">relationship_filter() : void</text><ellipse cx="4958" cy="1575.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4967" y="1578.9683">~relationship_filter() = default : void</text><ellipse cx="4958" cy="1588.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4967" y="1591.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="2967" y="1511.9531"/><ellipse cx="2982" cy="1527.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2984.9688,1533.5938 Q2984.3906,1533.8906 2983.75,1534.0313 Q2983.1094,1534.1875 2982.4063,1534.1875 Q2979.9063,1534.1875 2978.5781,1532.5469 Q2977.2656,1530.8906 2977.2656,1527.7656 Q2977.2656,1524.6406 2978.5781,1522.9844 Q2979.9063,1521.3281 2982.4063,1521.3281 Q2983.1094,1521.3281 2983.75,1521.4844 Q2984.4063,1521.6406 2984.9688,1521.9375 L2984.9688,1524.6563 Q2984.3438,1524.0781 2983.75,1523.8125 Q2983.1563,1523.5313 2982.5313,1523.5313 Q2981.1875,1523.5313 2980.5,1524.6094 Q2979.8125,1525.6719 2979.8125,1527.7656 Q2979.8125,1529.8594 2980.5,1530.9375 Q2981.1875,1532 2982.5313,1532 Q2983.1563,1532 2983.75,1531.7344 Q2984.3438,1531.4531 2984.9688,1530.875 L2984.9688,1533.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="2996" y="1532.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2968" x2="3247" y1="1543.9531" y2="1543.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2968" x2="3247" y1="1551.9531" y2="1551.9531"/><ellipse cx="2978" cy="1562.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2987" y="1566.1636">access_filter() : void</text><ellipse cx="2978" cy="1575.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2987" y="1578.9683">~access_filter() = default : void</text><ellipse cx="2978" cy="1588.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2987" y="1591.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="3283.5" y="1505.4531"/><ellipse cx="3298.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3301.4688,1527.0938 Q3300.8906,1527.3906 3300.25,1527.5313 Q3299.6094,1527.6875 3298.9063,1527.6875 Q3296.4063,1527.6875 3295.0781,1526.0469 Q3293.7656,1524.3906 3293.7656,1521.2656 Q3293.7656,1518.1406 3295.0781,1516.4844 Q3296.4063,1514.8281 3298.9063,1514.8281 Q3299.6094,1514.8281 3300.25,1514.9844 Q3300.9063,1515.1406 3301.4688,1515.4375 L3301.4688,1518.1563 Q3300.8438,1517.5781 3300.25,1517.3125 Q3299.6563,1517.0313 3299.0313,1517.0313 Q3297.6875,1517.0313 3297,1518.1094 Q3296.3125,1519.1719 3296.3125,1521.2656 Q3296.3125,1523.3594 3297,1524.4375 Q3297.6875,1525.5 3299.0313,1525.5 Q3299.6563,1525.5 3300.25,1525.2344 Q3300.8438,1524.9531 3301.4688,1524.375 L3301.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="3312.5" y="1525.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3284.5" x2="3566.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3289.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3291.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3303.5" y="1551.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3284.5" x2="3566.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="3294.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3303.5" y="1572.4683">context_filter() : void</text><ellipse cx="3294.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="3303.5" y="1585.2729">~context_filter() = default : void</text><ellipse cx="3294.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3303.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="4361" y="1492.4531"/><ellipse cx="4376" cy="1508.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4378.9688,1514.0938 Q4378.3906,1514.3906 4377.75,1514.5313 Q4377.1094,1514.6875 4376.4063,1514.6875 Q4373.9063,1514.6875 4372.5781,1513.0469 Q4371.2656,1511.3906 4371.2656,1508.2656 Q4371.2656,1505.1406 4372.5781,1503.4844 Q4373.9063,1501.8281 4376.4063,1501.8281 Q4377.1094,1501.8281 4377.75,1501.9844 Q4378.4063,1502.1406 4378.9688,1502.4375 L4378.9688,1505.1563 Q4378.3438,1504.5781 4377.75,1504.3125 Q4377.1563,1504.0313 4376.5313,1504.0313 Q4375.1875,1504.0313 4374.5,1505.1094 Q4373.8125,1506.1719 4373.8125,1508.2656 Q4373.8125,1510.3594 4374.5,1511.4375 Q4375.1875,1512.5 4376.5313,1512.5 Q4377.1563,1512.5 4377.75,1512.2344 Q4378.3438,1511.9531 4378.9688,1511.375 L4378.9688,1514.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="4390" y="1512.6074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4362" x2="4633" y1="1524.4531" y2="1524.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4367" y="1530.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4369" y="1532.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4381" y="1538.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4367" y="1543.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4369" y="1545.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4381" y="1551.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4362" x2="4633" y1="1558.0625" y2="1558.0625"/><ellipse cx="4372" cy="1569.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4381" y="1572.2729">paths_filter() : void</text><ellipse cx="4372" cy="1581.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="4381" y="1585.0776">~paths_filter() = default : void</text><ellipse cx="4372" cy="1594.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4381" y="1597.8823">match() const : tvl::value_t</text><ellipse cx="4372" cy="1607.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4381" y="1610.687">match() const : tvl::value_t</text><!--MD5=[505367997c2b7099e4ddff1763d1acb5]
class C_0001400215772842495226--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L31" target="_top" title="participant" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L31" xlink:show="new" xlink:title="participant" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="137.6328" id="C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="1755.5" y="1866.9531"/><ellipse cx="1839.25" cy="1882.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1842.2188,1888.5938 Q1841.6406,1888.8906 1841,1889.0313 Q1840.3594,1889.1875 1839.6563,1889.1875 Q1837.1563,1889.1875 1835.8281,1887.5469 Q1834.5156,1885.8906 1834.5156,1882.7656 Q1834.5156,1879.6406 1835.8281,1877.9844 Q1837.1563,1876.3281 1839.6563,1876.3281 Q1840.3594,1876.3281 1841,1876.4844 Q1841.6563,1876.6406 1842.2188,1876.9375 L1842.2188,1879.6563 Q1841.5938,1879.0781 1841,1878.8125 Q1840.4063,1878.5313 1839.7813,1878.5313 Q1838.4375,1878.5313 1837.75,1879.6094 Q1837.0625,1880.6719 1837.0625,1882.7656 Q1837.0625,1884.8594 1837.75,1885.9375 Q1838.4375,1887 1839.7813,1887 Q1840.4063,1887 1841,1886.7344 Q1841.5938,1886.4531 1842.2188,1885.875 L1842.2188,1888.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1859.75" y="1887.1074">participant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1756.5" x2="1998.5" y1="1898.9531" y2="1898.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L55" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L55" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1761.5" y="1904.9531"/><ellipse cx="1766.5" cy="1909.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L55" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L55" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1775.5" y="1913.1636">stereotype_ : participant::stereotype_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1756.5" x2="1998.5" y1="1919.7578" y2="1919.7578"/><ellipse cx="1766.5" cy="1930.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1775.5" y="1933.9683">participant() : void</text><ellipse cx="1766.5" cy="1943.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1775.5" y="1946.7729">participant() : void</text><ellipse cx="1766.5" cy="1956.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1775.5" y="1959.5776">operator=() : participant &amp;</text><ellipse cx="1766.5" cy="1969.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1775.5" y="1972.3823">operator=() : participant &amp;</text><ellipse cx="1766.5" cy="1981.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1775.5" y="1985.187">type_name() const : std::string</text><ellipse cx="1766.5" cy="1994.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1775.5" y="1997.9917">to_string() const : std::string</text><!--MD5=[b48b235710cc2ee42c2ac80c0af2e984]
class C_0001483671267820004141--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L33" target="_top" title="participant##stereotype_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L33" xlink:show="new" xlink:title="participant##stereotype_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="150.4375" id="C_0001483671267820004141" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="1885" y="1479.9531"/><ellipse cx="1900" cy="1495.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1904.1094,1501.9531 L1896.3906,1501.9531 L1896.3906,1489.5625 L1904.1094,1489.5625 L1904.1094,1491.7188 L1898.8438,1491.7188 L1898.8438,1494.3906 L1903.6094,1494.3906 L1903.6094,1496.5469 L1898.8438,1496.5469 L1898.8438,1499.7969 L1904.1094,1499.7969 L1904.1094,1501.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="1914" y="1500.1074">participant::stereotype_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1886" x2="2071" y1="1511.9531" y2="1511.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1891" y="1526.1636">participant</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="1891" y="1538.9683">actor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="1891" y="1551.7729">boundary</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="1891" y="1564.5776">control</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="1891" y="1577.3823">entity</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="1891" y="1590.187">database</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1891" y="1602.9917">collections</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1891" y="1615.7964">queue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1886" x2="2071" y1="1622.3906" y2="1622.3906"/></a><!--MD5=[b4d475f36669eac2ac4b1a7424da64db]
class C_0000885514871619471610--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L58" target="_top" title="class_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L58" xlink:show="new" xlink:title="class_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="368.1172" id="C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="1856" y="2305.9531"/><ellipse cx="1956.25" cy="2321.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1959.2188,2327.5938 Q1958.6406,2327.8906 1958,2328.0313 Q1957.3594,2328.1875 1956.6563,2328.1875 Q1954.1563,2328.1875 1952.8281,2326.5469 Q1951.5156,2324.8906 1951.5156,2321.7656 Q1951.5156,2318.6406 1952.8281,2316.9844 Q1954.1563,2315.3281 1956.6563,2315.3281 Q1957.3594,2315.3281 1958,2315.4844 Q1958.6563,2315.6406 1959.2188,2315.9375 L1959.2188,2318.6563 Q1958.5938,2318.0781 1958,2317.8125 Q1957.4063,2317.5313 1956.7813,2317.5313 Q1955.4375,2317.5313 1954.75,2318.6094 Q1954.0625,2319.6719 1954.0625,2321.7656 Q1954.0625,2323.8594 1954.75,2324.9375 Q1955.4375,2326 1956.7813,2326 Q1957.4063,2326 1958,2325.7344 Q1958.5938,2325.4531 1959.2188,2324.875 L1959.2188,2327.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="1976.75" y="2326.1074">class_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1857" x2="2102" y1="2337.9531" y2="2337.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L95" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L95" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1862" y="2343.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1864" y="2345.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L95" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L95" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1876" y="2352.1636">is_struct_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L96" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L96" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1862" y="2356.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1864" y="2358.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L96" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L96" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1876" y="2364.9683">is_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L97" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L97" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1862" y="2369.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1864" y="2371.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L97" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L97" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1876" y="2377.7729">is_template_instantiation_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L98" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L98" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1862" y="2382.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1864" y="2384.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L98" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L98" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1876" y="2390.5776">is_alias_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L99" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L99" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1862" y="2395.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1864" y="2397.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L99" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L99" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1876" y="2403.3823">is_lambda_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L101" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L101" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1862" y="2407.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1864" y="2409.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L101" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L101" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1876" y="2416.187">full_name_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1857" x2="2102" y1="2422.7813" y2="2422.7813"/><ellipse cx="1867" cy="2433.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1876" y="2436.9917">class_() : void</text><ellipse cx="1867" cy="2446.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1876" y="2449.7964">class_() : void</text><ellipse cx="1867" cy="2459.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1876" y="2462.6011">class_() : void</text><ellipse cx="1867" cy="2472.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1876" y="2475.4058">operator=() : class_ &amp;</text><ellipse cx="1867" cy="2485" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1876" y="2488.2104">operator=() : class_ &amp;</text><ellipse cx="1867" cy="2497.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1876" y="2501.0151">type_name() const : std::string</text><ellipse cx="1867" cy="2510.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1876" y="2513.8198">is_struct() const : bool</text><ellipse cx="1867" cy="2523.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1876" y="2526.6245">is_struct() : void</text><ellipse cx="1867" cy="2536.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1876" y="2539.4292">is_template() const : bool</text><ellipse cx="1867" cy="2549.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1876" y="2552.2339">is_template() : void</text><ellipse cx="1867" cy="2561.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1876" y="2565.0386">is_template_instantiation() const : bool</text><ellipse cx="1867" cy="2574.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1876" y="2577.8433">is_template_instantiation() : void</text><ellipse cx="1867" cy="2587.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1876" y="2590.6479">full_name() const : std::string</text><ellipse cx="1867" cy="2600.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1876" y="2603.4526">full_name_no_ns() const : std::string</text><ellipse cx="1867" cy="2613.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1876" y="2616.2573">is_abstract() const : bool</text><ellipse cx="1867" cy="2625.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1876" y="2629.062">is_alias() const : bool</text><ellipse cx="1867" cy="2638.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1876" y="2641.8667">is_alias() : void</text><ellipse cx="1867" cy="2651.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1876" y="2654.6714">is_lambda() const : bool</text><ellipse cx="1867" cy="2664.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1876" y="2667.4761">is_lambda() : void</text><!--MD5=[de5a82e666bdb24735685a0a35a357d3]
class C_0001701531547288995691--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L104" target="_top" title="lambda" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L104" xlink:show="new" xlink:title="lambda" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="60.8047" id="C_0001701531547288995691" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="1878.5" y="2993.9531"/><ellipse cx="1952.25" cy="3009.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1955.2188,3015.5938 Q1954.6406,3015.8906 1954,3016.0313 Q1953.3594,3016.1875 1952.6563,3016.1875 Q1950.1563,3016.1875 1948.8281,3014.5469 Q1947.5156,3012.8906 1947.5156,3009.7656 Q1947.5156,3006.6406 1948.8281,3004.9844 Q1950.1563,3003.3281 1952.6563,3003.3281 Q1953.3594,3003.3281 1954,3003.4844 Q1954.6563,3003.6406 1955.2188,3003.9375 L1955.2188,3006.6563 Q1954.5938,3006.0781 1954,3005.8125 Q1953.4063,3005.5313 1952.7813,3005.5313 Q1951.4375,3005.5313 1950.75,3006.6094 Q1950.0625,3007.6719 1950.0625,3009.7656 Q1950.0625,3011.8594 1950.75,3012.9375 Q1951.4375,3014 1952.7813,3014 Q1953.4063,3014 1954,3013.7344 Q1954.5938,3013.4531 1955.2188,3012.875 L1955.2188,3015.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="1972.75" y="3014.1074">lambda</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1879.5" x2="2079.5" y1="3025.9531" y2="3025.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1879.5" x2="2079.5" y1="3033.9531" y2="3033.9531"/><ellipse cx="1889.5" cy="3044.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1898.5" y="3048.1636">type_name() const : std::string</text></a><!--MD5=[fea9086604aaaceeec1cf807579b2064]
class C_0000232638456031681828--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L110" target="_top" title="function" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L110" xlink:show="new" xlink:title="function" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="316.8984" id="C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="2236" y="2331.4531"/><ellipse cx="2373.75" cy="2347.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2376.7188,2353.0938 Q2376.1406,2353.3906 2375.5,2353.5313 Q2374.8594,2353.6875 2374.1563,2353.6875 Q2371.6563,2353.6875 2370.3281,2352.0469 Q2369.0156,2350.3906 2369.0156,2347.2656 Q2369.0156,2344.1406 2370.3281,2342.4844 Q2371.6563,2340.8281 2374.1563,2340.8281 Q2374.8594,2340.8281 2375.5,2340.9844 Q2376.1563,2341.1406 2376.7188,2341.4375 L2376.7188,2344.1563 Q2376.0938,2343.5781 2375.5,2343.3125 Q2374.9063,2343.0313 2374.2813,2343.0313 Q2372.9375,2343.0313 2372.25,2344.1094 Q2371.5625,2345.1719 2371.5625,2347.2656 Q2371.5625,2349.3594 2372.25,2350.4375 Q2372.9375,2351.5 2374.2813,2351.5 Q2374.9063,2351.5 2375.5,2351.2344 Q2376.0938,2350.9531 2376.7188,2350.375 L2376.7188,2353.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="2394.25" y="2351.6074">function</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2237" x2="2570" y1="2363.4531" y2="2363.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L145" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L145" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2242" y="2369.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2244" y="2371.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L145" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L145" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2256" y="2377.6636">is_const_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L146" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L146" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2242" y="2382.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2244" y="2384.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L146" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L146" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2256" y="2390.4683">is_void_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L147" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L147" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2242" y="2395.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2244" y="2397.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L147" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L147" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2256" y="2403.2729">is_static_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L148" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L148" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2242" y="2407.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2244" y="2409.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L148" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L148" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2256" y="2416.0776">parameters_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2237" x2="2570" y1="2422.6719" y2="2422.6719"/><ellipse cx="2247" cy="2433.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2256" y="2436.8823">function() : void</text><ellipse cx="2247" cy="2446.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2256" y="2449.687">function() : void</text><ellipse cx="2247" cy="2459.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2256" y="2462.4917">function() : void</text><ellipse cx="2247" cy="2472.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2256" y="2475.2964">operator=() : function &amp;</text><ellipse cx="2247" cy="2484.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2256" y="2488.1011">operator=() : function &amp;</text><ellipse cx="2247" cy="2497.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2256" y="2500.9058">type_name() const : std::string</text><ellipse cx="2247" cy="2510.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2256" y="2513.7104">full_name() const : std::string</text><ellipse cx="2247" cy="2523.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2256" y="2526.5151">full_name_no_ns() const : std::string</text><ellipse cx="2247" cy="2536.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2256" y="2539.3198">message_name() const : std::string</text><ellipse cx="2247" cy="2548.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2256" y="2552.1245">is_const() const : bool</text><ellipse cx="2247" cy="2561.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2256" y="2564.9292">is_const() : void</text><ellipse cx="2247" cy="2574.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="2256" y="2577.7339">is_void() const : bool</text><ellipse cx="2247" cy="2587.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2256" y="2590.5386">is_void() : void</text><ellipse cx="2247" cy="2600.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2256" y="2603.3433">is_static() const : bool</text><ellipse cx="2247" cy="2612.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2256" y="2616.1479">is_static() : void</text><ellipse cx="2247" cy="2625.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2256" y="2628.9526">add_parameter() : void</text><ellipse cx="2247" cy="2638.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2256" y="2641.7573">parameters() const : const std::vector&lt;std::string&gt; &amp;</text><!--MD5=[127e94f19f834191fca232f5c695c379]
class C_0001521646084824511527--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L111" target="_top" title="function##message_render_mode" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L111" xlink:show="new" xlink:title="function##message_render_mode" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="86.4141" id="C_0001521646084824511527" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="2341" y="1892.9531"/><ellipse cx="2356" cy="1908.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2360.1094,1914.9531 L2352.3906,1914.9531 L2352.3906,1902.5625 L2360.1094,1902.5625 L2360.1094,1904.7188 L2354.8438,1904.7188 L2354.8438,1907.3906 L2359.6094,1907.3906 L2359.6094,1909.5469 L2354.8438,1909.5469 L2354.8438,1912.7969 L2360.1094,1912.7969 L2360.1094,1914.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="205" x="2370" y="1913.1074">function::message_render_mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2342" x2="2577" y1="1924.9531" y2="1924.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="2347" y="1939.1636">full</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="2347" y="1951.9683">abbreviated</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2347" y="1964.7729">no_arguments</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2342" x2="2577" y1="1971.3672" y2="1971.3672"/></a><!--MD5=[78f12b5739bf72f527e2506c0e981f4b]
class C_0000817665972547784504--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L151" target="_top" title="method" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L151" xlink:show="new" xlink:title="method" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="291.2891" id="C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="2241.5" y="2878.9531"/><ellipse cx="2340.25" cy="2894.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2343.2188,2900.5938 Q2342.6406,2900.8906 2342,2901.0313 Q2341.3594,2901.1875 2340.6563,2901.1875 Q2338.1563,2901.1875 2336.8281,2899.5469 Q2335.5156,2897.8906 2335.5156,2894.7656 Q2335.5156,2891.6406 2336.8281,2889.9844 Q2338.1563,2888.3281 2340.6563,2888.3281 Q2341.3594,2888.3281 2342,2888.4844 Q2342.6563,2888.6406 2343.2188,2888.9375 L2343.2188,2891.6563 Q2342.5938,2891.0781 2342,2890.8125 Q2341.4063,2890.5313 2340.7813,2890.5313 Q2339.4375,2890.5313 2338.75,2891.6094 Q2338.0625,2892.6719 2338.0625,2894.7656 Q2338.0625,2896.8594 2338.75,2897.9375 Q2339.4375,2899 2340.7813,2899 Q2341.4063,2899 2342,2898.7344 Q2342.5938,2898.4531 2343.2188,2897.875 L2343.2188,2900.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="2360.75" y="2899.1074">method</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2242.5" x2="2494.5" y1="2910.9531" y2="2910.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L182" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L182" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2247.5" y="2916.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.5" y="2918.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L182" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L182" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="2261.5" y="2925.1636">class_id_ : diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L183" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L183" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2247.5" y="2929.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.5" y="2931.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L183" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L183" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2261.5" y="2937.9683">method_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L184" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L184" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2247.5" y="2942.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2249.5" y="2944.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L184" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L184" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2261.5" y="2950.7729">class_full_name_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2242.5" x2="2494.5" y1="2957.3672" y2="2957.3672"/><ellipse cx="2252.5" cy="2968.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2261.5" y="2971.5776">method() : void</text><ellipse cx="2252.5" cy="2981.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2261.5" y="2984.3823">method() : void</text><ellipse cx="2252.5" cy="2993.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2261.5" y="2997.187">method() : void</text><ellipse cx="2252.5" cy="3006.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2261.5" y="3009.9917">operator=() : method &amp;</text><ellipse cx="2252.5" cy="3019.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2261.5" y="3022.7964">operator=() : method &amp;</text><ellipse cx="2252.5" cy="3032.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2261.5" y="3035.6011">type_name() const : std::string</text><ellipse cx="2252.5" cy="3045.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2261.5" y="3048.4058">method_name() const : std::string</text><ellipse cx="2252.5" cy="3058" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2261.5" y="3061.2104">alias() const : std::string</text><ellipse cx="2252.5" cy="3070.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2261.5" y="3074.0151">set_method_name() : void</text><ellipse cx="2252.5" cy="3083.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2261.5" y="3086.8198">set_class_id() : void</text><ellipse cx="2252.5" cy="3096.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2261.5" y="3099.6245">set_class_full_name() : void</text><ellipse cx="2252.5" cy="3109.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2261.5" y="3112.4292">class_full_name() const : const auto &amp;</text><ellipse cx="2252.5" cy="3122.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2261.5" y="3125.2339">full_name() const : std::string</text><ellipse cx="2252.5" cy="3134.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2261.5" y="3138.0386">message_name() const : std::string</text><ellipse cx="2252.5" cy="3147.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2261.5" y="3150.8433">class_id() const : diagram_element::id_t</text><ellipse cx="2252.5" cy="3160.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2261.5" y="3163.6479">to_string() const : std::string</text><!--MD5=[32d760b788d79d5e0bfcc0697e979e7d]
class C_0002280191967493310558--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L187" target="_top" title="function_template" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L187" xlink:show="new" xlink:title="function_template" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="163.2422" id="C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="2531" y="2942.9531"/><ellipse cx="2587.75" cy="2958.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2590.7188,2964.5938 Q2590.1406,2964.8906 2589.5,2965.0313 Q2588.8594,2965.1875 2588.1563,2965.1875 Q2585.6563,2965.1875 2584.3281,2963.5469 Q2583.0156,2961.8906 2583.0156,2958.7656 Q2583.0156,2955.6406 2584.3281,2953.9844 Q2585.6563,2952.3281 2588.1563,2952.3281 Q2588.8594,2952.3281 2589.5,2952.4844 Q2590.1563,2952.6406 2590.7188,2952.9375 L2590.7188,2955.6563 Q2590.0938,2955.0781 2589.5,2954.8125 Q2588.9063,2954.5313 2588.2813,2954.5313 Q2586.9375,2954.5313 2586.25,2955.6094 Q2585.5625,2956.6719 2585.5625,2958.7656 Q2585.5625,2960.8594 2586.25,2961.9375 Q2586.9375,2963 2588.2813,2963 Q2588.9063,2963 2589.5,2962.7344 Q2590.0938,2962.4531 2590.7188,2961.875 L2590.7188,2964.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="2608.25" y="2963.1074">function_template</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2532" x2="2765" y1="2974.9531" y2="2974.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2532" x2="2765" y1="2982.9531" y2="2982.9531"/><ellipse cx="2542" cy="2993.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2551" y="2997.1636">function_template() : void</text><ellipse cx="2542" cy="3006.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2551" y="3009.9683">function_template() : void</text><ellipse cx="2542" cy="3019.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2551" y="3022.7729">function_template() : void</text><ellipse cx="2542" cy="3032.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2551" y="3035.5776">operator=() : function_template &amp;</text><ellipse cx="2542" cy="3045.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2551" y="3048.3823">operator=() : function_template &amp;</text><ellipse cx="2542" cy="3057.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2551" y="3061.187">type_name() const : std::string</text><ellipse cx="2542" cy="3070.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2551" y="3073.9917">full_name() const : std::string</text><ellipse cx="2542" cy="3083.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2551" y="3086.7964">full_name_no_ns() const : std::string</text><ellipse cx="2542" cy="3096.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2551" y="3099.6011">message_name() const : std::string</text></a><!--MD5=[d938ea8dcef347175d1d053a93bab664]
class C_0002228653068706235818--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L28" target="_top" title="message" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L28" xlink:show="new" xlink:title="message" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="278.4844" id="C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="2179" y="1415.9531"/><ellipse cx="2334.75" cy="1431.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2337.7188,1437.5938 Q2337.1406,1437.8906 2336.5,1438.0313 Q2335.8594,1438.1875 2335.1563,1438.1875 Q2332.6563,1438.1875 2331.3281,1436.5469 Q2330.0156,1434.8906 2330.0156,1431.7656 Q2330.0156,1428.6406 2331.3281,1426.9844 Q2332.6563,1425.3281 2335.1563,1425.3281 Q2335.8594,1425.3281 2336.5,1425.4844 Q2337.1563,1425.6406 2337.7188,1425.9375 L2337.7188,1428.6563 Q2337.0938,1428.0781 2336.5,1427.8125 Q2335.9063,1427.5313 2335.2813,1427.5313 Q2333.9375,1427.5313 2333.25,1428.6094 Q2332.5625,1429.6719 2332.5625,1431.7656 Q2332.5625,1433.8594 2333.25,1434.9375 Q2333.9375,1436 2335.2813,1436 Q2335.9063,1436 2336.5,1435.7344 Q2337.0938,1435.4531 2337.7188,1434.875 L2337.7188,1437.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="2355.25" y="1436.1074">message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2180" x2="2555" y1="1447.9531" y2="1447.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L56" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L56" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2185" y="1453.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2187" y="1455.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L56" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L56" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2199" y="1462.1636">from_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L58" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L58" xlink:show="new" xlink:title="to_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2185" y="1466.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2187" y="1468.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L58" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L58" xlink:show="new" xlink:title="to_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2199" y="1474.9683">to_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L65" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L65" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2185" y="1479.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2187" y="1481.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L65" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L65" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2199" y="1487.7729">message_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L67" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L67" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2185" y="1492.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2187" y="1494.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L67" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L67" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2199" y="1500.5776">return_type_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2180" x2="2555" y1="1507.1719" y2="1507.1719"/><ellipse cx="2190" cy="1518.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2199" y="1521.3823">message() = default : void</text><ellipse cx="2190" cy="1530.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2199" y="1534.187">message() : void</text><ellipse cx="2190" cy="1543.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2199" y="1546.9917">set_type() : void</text><ellipse cx="2190" cy="1556.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2199" y="1559.7964">type() const : common::model::message_t</text><ellipse cx="2190" cy="1569.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2199" y="1572.6011">set_from() : void</text><ellipse cx="2190" cy="1582.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2199" y="1585.4058">from() const : common::model::diagram_element::id_t</text><ellipse cx="2190" cy="1595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="2199" y="1598.2104">set_to() : void</text><ellipse cx="2190" cy="1607.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2199" y="1611.0151">to() const : common::model::diagram_element::id_t</text><ellipse cx="2190" cy="1620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2199" y="1623.8198">set_message_name() : void</text><ellipse cx="2190" cy="1633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2199" y="1636.6245">message_name() const : const std::string &amp;</text><ellipse cx="2190" cy="1646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2199" y="1649.4292">set_return_type() : void</text><ellipse cx="2190" cy="1659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2199" y="1662.2339">return_type() const : const std::string &amp;</text><ellipse cx="2190" cy="1671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2199" y="1675.0386">set_message_scope() : void</text><ellipse cx="2190" cy="1684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2199" y="1687.8433">message_scope() const : common::model::message_scope_t</text><!--MD5=[1f8594e8e98680e5eb77b5543c1d2d76]
class C_0000460030520790196523--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L28" target="_top" title="activity" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L28" xlink:show="new" xlink:title="activity" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="137.6328" id="C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="2718" y="1104.9531"/><ellipse cx="2859.75" cy="1120.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2862.7188,1126.5938 Q2862.1406,1126.8906 2861.5,1127.0313 Q2860.8594,1127.1875 2860.1563,1127.1875 Q2857.6563,1127.1875 2856.3281,1125.5469 Q2855.0156,1123.8906 2855.0156,1120.7656 Q2855.0156,1117.6406 2856.3281,1115.9844 Q2857.6563,1114.3281 2860.1563,1114.3281 Q2860.8594,1114.3281 2861.5,1114.4844 Q2862.1563,1114.6406 2862.7188,1114.9375 L2862.7188,1117.6563 Q2862.0938,1117.0781 2861.5,1116.8125 Q2860.9063,1116.5313 2860.2813,1116.5313 Q2858.9375,1116.5313 2858.25,1117.6094 Q2857.5625,1118.6719 2857.5625,1120.7656 Q2857.5625,1122.8594 2858.25,1123.9375 Q2858.9375,1125 2860.2813,1125 Q2860.9063,1125 2861.5,1124.7344 Q2862.0938,1124.4531 2862.7188,1123.875 L2862.7188,1126.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="2880.25" y="1125.1074">activity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2719" x2="3052" y1="1136.9531" y2="1136.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L43" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L43" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2724" y="1142.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2726" y="1144.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L43" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L43" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2738" y="1151.1636">from_ : common::model::diagram_element::id_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2719" x2="3052" y1="1157.7578" y2="1157.7578"/><ellipse cx="2729" cy="1168.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2738" y="1171.9683">activity() : void</text><ellipse cx="2729" cy="1181.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2738" y="1184.7729">add_message() : void</text><ellipse cx="2729" cy="1194.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2738" y="1197.5776">messages() : std::vector&lt;message&gt; &amp;</text><ellipse cx="2729" cy="1207.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2738" y="1210.3823">messages() const : const std::vector&lt;message&gt; &amp;</text><ellipse cx="2729" cy="1219.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2738" y="1223.187">set_from() : void</text><ellipse cx="2729" cy="1232.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2738" y="1235.9917">from() const : common::model::diagram_element::id_t</text><!--MD5=[4ac8ef68b016624e17a7e7cc10156a8f]
class C_0000924044572035510976--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L30" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L30" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhlr8temrax7t)" height="444.9453" id="C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.5;" width="661" x="2723" y="486.9531"/><ellipse cx="3023.75" cy="502.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3026.7188,508.5938 Q3026.1406,508.8906 3025.5,509.0313 Q3024.8594,509.1875 3024.1563,509.1875 Q3021.6563,509.1875 3020.3281,507.5469 Q3019.0156,505.8906 3019.0156,502.7656 Q3019.0156,499.6406 3020.3281,497.9844 Q3021.6563,496.3281 3024.1563,496.3281 Q3024.8594,496.3281 3025.5,496.4844 Q3026.1563,496.6406 3026.7188,496.9375 L3026.7188,499.6563 Q3026.0938,499.0781 3025.5,498.8125 Q3024.9063,498.5313 3024.2813,498.5313 Q3022.9375,498.5313 3022.25,499.6094 Q3021.5625,500.6719 3021.5625,502.7656 Q3021.5625,504.8594 3022.25,505.9375 Q3022.9375,507 3024.2813,507 Q3024.9063,507 3025.5,506.7344 Q3026.0938,506.4531 3026.7188,505.875 L3026.7188,508.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="3044.25" y="507.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2724" x2="3383" y1="518.9531" y2="518.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L133" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L133" xlink:show="new" xlink:title="started_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2729" y="524.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2731" y="526.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L133" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L133" xlink:show="new" xlink:title="started_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2743" y="533.1636">started_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L140" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L140" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2729" y="537.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2731" y="539.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L140" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L140" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="2743" y="545.9683">active_participants_ : std::set&lt;common::model::diagram_element::id_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2724" x2="3383" y1="552.5625" y2="552.5625"/><ellipse cx="2734" cy="563.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2743" y="566.7729">diagram() = default : void</text><ellipse cx="2734" cy="576.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2743" y="579.5776">diagram() : void</text><ellipse cx="2734" cy="589.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2743" y="592.3823">diagram() = default : void</text><ellipse cx="2734" cy="601.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2743" y="605.187">operator=() : diagram &amp;</text><ellipse cx="2734" cy="614.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2743" y="617.9917">operator=() = default : diagram &amp;</text><ellipse cx="2734" cy="627.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2743" y="630.7964">type() const : common::model::diagram_t</text><ellipse cx="2734" cy="640.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2743" y="643.6011">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="2734" cy="653.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2743" y="656.4058">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="2734" cy="666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2743" y="669.2104">to_alias() const : std::string</text><ellipse cx="2734" cy="678.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2743" y="682.0151">context() const : inja::json</text><ellipse cx="2734" cy="691.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2743" y="694.8198">print() const : void</text><ellipse cx="2734" cy="704.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2743" y="707.6245">add_participant() : void</text><ellipse cx="2734" cy="717.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2743" y="720.4292">add_active_participant() : void</text><ellipse cx="2734" cy="730.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2743" y="733.2339">get_activity() : activity &amp;</text><ellipse cx="2734" cy="742.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2743" y="746.0386">add_message() : void</text><ellipse cx="2734" cy="755.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2743" y="758.8433">add_block_message() : void</text><ellipse cx="2734" cy="768.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2743" y="771.6479">end_block_message() : void</text><ellipse cx="2734" cy="781.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2743" y="784.4526">add_case_stmt_message() : void</text><ellipse cx="2734" cy="794.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2743" y="797.2573">started() const : bool</text><ellipse cx="2734" cy="806.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2743" y="810.062">started() : void</text><ellipse cx="2734" cy="819.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="2743" y="822.8667">sequences() : std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text><ellipse cx="2734" cy="832.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="2743" y="835.6714">sequences() const : const std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text><ellipse cx="2734" cy="845.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2743" y="848.4761">participants() : std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text><ellipse cx="2734" cy="858.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="2743" y="861.2808">participants() const : const std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text><ellipse cx="2734" cy="870.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="2743" y="874.0854">active_participants() : std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text><ellipse cx="2734" cy="883.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="499" x="2743" y="886.8901">active_participants() const : const std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2731" y="893.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2743" y="899.6948">fold_or_end_block_statement() const : void</text><ellipse cx="2734" cy="909.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2743" y="912.4995">get_participant&lt;T&gt;() : common::optional_ref&lt;T&gt;</text><ellipse cx="2734" cy="922.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2743" y="925.3042">get_participant&lt;T&gt;() : common::optional_ref&lt;T&gt;</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M2944.34,1692.0131 C2946.06,1692.6731 2947.78,1693.3231 2949.5,1693.9531 C3140.75,1763.6331 3209.45,1672.9331 3406.5,1723.9531 C3423.63,1728.3931 3425.49,1736.0831 3442.5,1740.9531 C3552.63,1772.4931 3590.3,1733.3331 3698.5,1770.9531 C3742.95,1786.4031 3787.83,1810.2231 3827.73,1834.9531 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2932.19,1686.9331,2936.1839,1692.9372,2943.2622,1691.5597,2939.2683,1685.5557,2932.19,1686.9331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3445.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3455.5" y="1737.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M2944.36,1691.9531 C2946.07,1692.6431 2947.78,1693.3031 2949.5,1693.9531 C3093.55,1748.1731 3145.13,1686.8231 3294.5,1723.9531 C3301,1725.5731 3400.05,1767.0631 3405.5,1770.9531 C3450.15,1802.8431 3490.93,1850.5131 3518.15,1886.2531 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2932.25,1686.7731,2936.1935,1692.8104,2943.2831,1691.4922,2939.3396,1685.4549,2932.25,1686.7731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3338.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3348.5" y="1737.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M2235.07,817.0731 C2298.55,870.7531 2372.73,939.1531 2430.5,1008.9531 C2536.11,1136.5531 2631.34,1301.1731 2692.25,1415.9431 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2230.43,822.3231,2219.6,804.1131,2239.42,811.5931,2230.43,822.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1653.31,1224.1331 C1751.42,1260.7231 1891.83,1309.2831 2018.5,1338.9531 C2139.73,1367.3531 2458.13,1369.1331 2573.5,1415.9531 C2579.32,1418.3131 2585.12,1420.8931 2590.88,1423.6631 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1650.83,1230.6831,1634.57,1217.0931,1655.76,1217.5731,1650.83,1230.6831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M2423.92,1336.2331 C2449.38,1354.0031 2475.61,1371.0331 2501.5,1385.9531 C2531.53,1403.2631 2543.31,1398.9131 2573.5,1415.9531 C2579.23,1419.1831 2584.99,1422.5731 2590.75,1426.0631 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2413.06,1328.5831,2415.6622,1335.3084,2422.8709,1335.493,2420.2687,1328.7677,2413.06,1328.5831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2504.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2514.5" y="1382.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M2130.08,823.5831 C2145.13,879.2931 2163.57,947.5131 2180.14,1008.8331 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2123.26,825.1831,2124.8,804.0431,2136.77,821.5231,2123.26,825.1831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M2449.33,839.6731 C2414,892.0431 2372.79,953.1331 2335.37,1008.6031 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2443.59,835.6631,2460.58,823.0031,2455.19,843.4931,2443.59,835.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M1439.86,1959.9731 C1401.95,2006.7931 1311.98,2117.8931 1224.23,2226.2531 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1229.61,2230.7231,1211.59,2241.8631,1218.73,2221.9131,1229.61,2230.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1318.55,1659.0031 C1337.76,1679.2931 1356.33,1701.3531 1371.5,1723.9531 C1413.24,1786.1331 1440.77,1871.5031 1452.32,1911.9331 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1309.38,1649.4931,1310.662,1656.5893,1317.7055,1658.1353,1316.4234,1651.039,1309.38,1649.4931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1384.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="1394.5" y="1737.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1202.46,1662.6131 C1206.24,1689.4331 1213.44,1717.3031 1226.5,1740.9531 C1270.27,1820.2431 1360.39,1880.7631 1414.52,1911.8031 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1200.87,1649.5431,1197.6249,1655.9828,1202.3211,1661.4551,1205.5662,1655.0154,1200.87,1649.5431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1229.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="1239.5" y="1737.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M2018.9,1346.6631 C1992.69,1362.2231 1965.28,1375.8831 1937.5,1385.9531 C1733.63,1459.8531 1658.68,1355.2331 1450.5,1415.9531 C1414.8,1426.3631 1378.57,1442.5831 1345.21,1460.2931 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2015.24,1340.6931,2035.94,1336.1731,2022.57,1352.6131,2015.24,1340.6931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M2985.76,2815.3131 C2986.54,2874.3731 2987.26,2929.4231 2987.77,2968.0531 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2985.59,2802.2531,2981.6695,2808.3053,2985.7482,2814.2521,2989.6688,2808.1999,2985.59,2802.2531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2989.5" y="2838.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="2999.5" y="2845.02">kind_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M3239.74,2445.2931 C3254.61,2456.0431 3263.5,2470.9331 3263.5,2489.9531 C3263.5,2513.3631 3250.04,2530.5131 3228.52,2541.3931 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3228.52,2438.5131,3231.5811,2445.0422,3238.7854,2444.7278,3235.7242,2438.1987,3228.52,2438.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3271.5" y="2487.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="3281.5" y="2494.52">template_params_</text><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M2853.7,2036.7231 C2865.19,2077.4031 2879.17,2126.8531 2893.6,2177.9331 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2850.13,2024.1131,2847.9157,2030.9758,2853.3988,2035.6593,2855.6131,2028.7966,2850.13,2024.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2888.5" y="2137.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2898.5" y="2144.02">templates_</text><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M581.22,1959.9731 C619.31,2006.7931 709.68,2117.8931 797.82,2226.2531 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="803.33,2221.9331,810.52,2241.8631,792.47,2230.7631,803.33,2221.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M617.83,1707.0131 C598.96,1784.7331 577.91,1871.4731 568.1,1911.8931 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="620.96,1694.1231,615.6618,1699.0149,618.1396,1705.787,623.4377,1700.8952,620.96,1694.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="614.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="624.5" y="1737.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M400.11,1701.5931 C367.04,1723.5731 334.33,1746.9531 304.5,1770.9531 C258.45,1808.0031 212.3,1857.7131 181.87,1892.6531 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="411.33,1694.1931,404.119,1694.1558,401.3111,1700.7977,408.5221,1700.8351,411.33,1694.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="361.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="371.5" y="1737.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M2016.59,1250.2931 C1920.88,1282.2331 1805.12,1317.0631 1698.5,1338.9531 C1371.56,1406.0731 1273.27,1327.3031 951.5,1415.9531 C945.74,1417.5431 939.96,1419.2231 934.16,1421.0031 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2014.57,1243.5831,2035.76,1243.8431,2019.04,1256.8531,2014.57,1243.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1405.14,1224.5431 C1288.14,1272.3431 1107.02,1347.3231 951.5,1415.9531 C945.78,1418.4831 940,1421.0431 934.18,1423.6331 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1402.55,1218.0431,1423.71,1216.9631,1407.84,1231.0031,1402.55,1218.0431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4578.92,423.0931 C4580.05,434.5831 4581.55,445.9331 4583.5,456.9531 C4595.4,524.1331 4623.89,596.9431 4646.04,646.8431 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4577.8,410.0831,4574.3288,416.4038,4578.8282,422.039,4582.2994,415.7183,4577.8,410.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4586.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4596.5" y="453.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4667.98,646.9031 C4660.97,592.3331 4649.65,510.5731 4636.5,439.9531 C4634.99,431.8431 4633.39,423.5731 4631.72,415.2231 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4630.67,410.0231,4628.5235,419.6352,4631.6561,414.9249,4636.3664,418.0575,4630.67,410.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4641.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4651.5" y="453.02">diagram_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4663.59,785.0631 C4657.51,839.7731 4654.66,915.3031 4672.5,978.9531 C4682.29,1013.8731 4700.28,1048.7531 4719.32,1079.1031 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4665.16,771.9731,4660.4758,777.4556,4663.7349,783.8882,4668.4192,778.4057,4665.16,771.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4675.5" y="968.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4685.5" y="975.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4700.33,784.7831 C4716.36,834.5331 4736.88,901.7031 4751.5,961.9531 C4760.75,1000.0531 4768.98,1042.4931 4775.48,1079.2631 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4696.25,772.2031,4694.2995,779.1454,4699.9575,783.616,4701.9081,776.6737,4696.25,772.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4757.5" y="968.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="4767.5" y="975.02">exclusive_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M1142.02,1667.5531 C1112.57,1722.8131 1077.41,1788.7731 1049.38,1841.3631 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1135.98,1663.9931,1151.57,1649.6431,1148.34,1670.5831,1135.98,1663.9931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M1353.03,1184.7131 C1058.15,1205.2631 481.11,1264.2831 357.5,1415.9531 C279.44,1511.7331 278.76,1598.7431 357.5,1693.9531 C490.17,1854.3631 631.03,1682.5731 819.5,1770.9531 C855.48,1787.8231 889.31,1814.4131 917.71,1841.3131 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1352.9,1177.7131,1373.33,1183.3331,1353.86,1191.6731,1352.9,1177.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M4790.5,1282.1031 C4790.5,1361.1431 4790.5,1463.9031 4790.5,1517.6231 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4790.5,1268.6431,4786.5,1274.6431,4790.5,1280.6431,4794.5,1274.6431,4790.5,1268.6431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4793.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4803.5" y="1382.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M5371.94,1496.1131 C5344.34,1469.7331 5309.76,1439.2631 5275.5,1415.9531 C5169.78,1344.0131 5039.51,1280.4931 4940.61,1236.7531 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5381.4,1505.2531,5379.865,1498.2073,5372.7708,1496.9142,5374.3058,1503.9601,5381.4,1505.2531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5228.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5238.5" y="1382.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M4958.84,1263.7031 C5033.8,1302.3931 5123.5,1347.5831 5205.5,1385.9531 C5236.16,1400.2931 5246.99,1397.7031 5275.5,1415.9531 C5314.97,1441.2131 5354.11,1476.7631 5382.92,1505.4531 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4955.16,1269.6731,4940.62,1254.2731,4961.6,1257.2431,4955.16,1269.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M1596.99,1616.8531 C1559.72,1702.4631 1493.59,1854.3531 1468.51,1911.9531 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1602.27,1604.7231,1596.2039,1608.6221,1597.4699,1615.7212,1603.536,1611.8222,1602.27,1604.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1549.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="1559.5" y="1737.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M4620.03,1193.7831 C4311.35,1227.3031 3639.07,1297.6731 3070.5,1338.9531 C2803.76,1358.3131 2736.4,1351.8731 2469.5,1368.9531 C2452.76,1370.0231 1883.54,1411.0531 1867.5,1415.9531 C1803.38,1435.5331 1737.62,1473.9931 1690.55,1505.3531 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4619.64,1186.7831,4640.28,1191.5831,4621.16,1200.7031,4619.64,1186.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M4960.28,1205.6331 C5126.06,1240.3331 5381.82,1306.6931 5581.5,1415.9531 C5624.61,1439.5431 5666.65,1475.8631 5697.1,1505.3331 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4958.69,1212.4531,4940.52,1201.5631,4961.52,1198.7431,4958.69,1212.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M4960.54,1185.9931 C5186.73,1206.2831 5594.22,1262.6131 5905.5,1415.9531 C5950.4,1438.0731 5993.28,1475.2431 6023.77,1505.4331 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4959.88,1192.9631,4940.56,1184.2531,4961.1,1179.0231,4959.88,1192.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M4960.91,1191.7831 C5291.91,1226.3631 6008.9,1311.0531 6232.5,1415.9531 C6277.67,1437.1431 6320,1474.7631 6349.76,1505.3831 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4959.81,1198.7031,4940.64,1189.6831,4961.25,1184.7831,4959.81,1198.7031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M3964.5,1656.3831 C3964.5,1711.5731 3964.5,1779.7931 3964.5,1834.9131 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3964.5,1643.3831,3960.5,1649.3831,3964.5,1655.3831,3968.5,1649.3831,3964.5,1643.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3967.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="3977.5" y="1737.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M4622.07,1252.2331 C4486.27,1314.5431 4295.32,1402.1631 4154.15,1466.9331 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4619.34,1245.7831,4640.44,1243.8031,4625.18,1258.5131,4619.34,1245.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M5050.94,1606.9131 C5018.53,1636.3131 4974.45,1671.7331 4929.5,1693.9531 C4657.24,1828.5131 4303.6,1891.9331 4108.91,1918.4531 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5060.61,1598.0031,5053.4858,1599.1194,5051.7762,1606.1249,5058.9004,1605.0086,5060.61,1598.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4858.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="4868.5" y="1737.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M4880.69,1284.5031 C4943.21,1360.4631 5023.02,1457.4031 5067.86,1511.8731 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4874.93,1288.5331,4867.62,1268.6431,4885.74,1279.6331,4874.93,1288.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M3151.81,1607.7031 C3180.9,1638.0531 3221.59,1674.2031 3265.5,1693.9531 C3361.12,1736.9631 3421.1,1654.3331 3499.5,1723.9531 C3544.97,1764.3331 3554.21,1837.3731 3554.81,1886.0331 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3142.78,1598.0831,3143.9626,1605.1966,3150.9838,1606.8409,3149.8011,1599.7274,3142.78,1598.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3518.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3528.5" y="1737.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M4620.11,1189.9031 C4274.59,1222.1431 3504.02,1304.4431 3265.5,1415.9531 C3217.33,1438.4731 3172.71,1480.1931 3143.27,1511.8831 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4619.69,1182.9131,4640.25,1188.0331,4620.98,1196.8531,4619.69,1182.9131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M4620.19,1181.8631 C4378.58,1197.5431 3927.68,1248.7331 3585.5,1415.9531 C3541.01,1437.6931 3498.95,1474.8831 3469.12,1505.1831 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4620.02,1174.8631,4640.42,1180.6031,4620.89,1188.8331,4620.02,1174.8631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M4705.77,1284.5531 C4653.52,1352.1331 4588.44,1436.3131 4545.07,1492.4131 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4700.3,1280.1831,4718.07,1268.6431,4711.38,1288.7431,4700.3,1280.1831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[62dc895dac1d0c2011f0b281560d3968]
reverse link C_0002069520381434407937 to C_0001400215772842495226--><path d="M1367.85,1658.8131 C1394.76,1672.3031 1422.87,1684.6431 1450.5,1693.9531 C1538.59,1723.6331 1569.78,1693.1631 1657.5,1723.9531 C1696.41,1737.6131 1705.9,1744.4631 1737.5,1770.9531 C1770.92,1798.9731 1802.92,1835.4531 1827.86,1866.8931 " fill="none" id="C_0002069520381434407937&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1364.46,1664.9431,1349.89,1649.5631,1370.88,1652.4931,1364.46,1664.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0cbd70298f55c4689e25f50e6b8f6293]
reverse link C_0002077846075979426940 to C_0001400215772842495226--><path d="M1613.32,1228.5631 C1674.37,1271.5031 1752.85,1337.4231 1795.5,1415.9531 C1837.13,1492.6031 1862.33,1744.3931 1872.41,1866.8531 " fill="none" id="C_0002077846075979426940&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1609.12,1234.1731,1596.6,1217.0731,1617.05,1222.6431,1609.12,1234.1731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c27ca2fdb73a42fb9075cd7b8ec5769]
link C_0001483671267820004141 to C_0001400215772842495226--><path d="M1958.67,1630.3831 C1941.66,1694.2131 1917.17,1786.0831 1899.55,1852.2131 " fill="none" id="C_0001483671267820004141-&gt;C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1897.7385" cy="1859.0125" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1899.7969" x2="1895.68" y1="1851.2818" y2="1866.7431"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1905.4691" x2="1890.0078" y1="1861.0709" y2="1856.954"/><!--MD5=[b33f1614e5f0bf4794b27e69905bc927]
reverse link C_0001400215772842495226 to C_0000885514871619471610--><path d="M1893.77,2024.9731 C1907.69,2100.3131 1928.18,2211.2431 1945.65,2305.7531 " fill="none" id="C_0001400215772842495226&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1886.86,2026.1331,1890.11,2005.1931,1900.63,2023.5831,1886.86,2026.1331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[419d091341342c34e8d2184e460395cb]
reverse link C_0000464715462505216589 to C_0000885514871619471610--><path d="M2706.5,2036.0231 C2672.38,2060.3731 2633.95,2084.2231 2595.5,2100.9531 C2438.69,2169.1931 2363.53,2087.3231 2218.5,2177.9531 C2167.1,2210.0731 2122.56,2257.4431 2086.31,2305.5831 " fill="none" id="C_0000464715462505216589&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2702.61,2030.1931,2722.89,2024.0531,2710.87,2041.5031,2702.61,2030.1931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c90ee8d9e33f78746e08a7fd0729082]
reverse link C_0000885514871619471610 to C_0001701531547288995691--><path d="M1979.5,2694.4131 C1979.5,2807.6231 1979.5,2936.9031 1979.5,2993.8631 " fill="none" id="C_0000885514871619471610&lt;-C_0001701531547288995691" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1972.5,2694.2131,1979.5,2674.2131,1986.5,2694.2131,1972.5,2694.2131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cff630a429a41d6509e30ee5071e7c05]
reverse link C_0001400215772842495226 to C_0000232638456031681828--><path d="M1942.68,2020.5031 C1965.19,2047.3431 1991.36,2076.4531 2017.5,2100.9531 C2059.2,2140.0431 2078.19,2139.5331 2120.5,2177.9531 C2172.25,2224.9431 2224.88,2280.2831 2270.49,2331.1631 " fill="none" id="C_0001400215772842495226&lt;-C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1937.22,2024.8831,1929.87,2005.0131,1948.01,2015.9631,1937.22,2024.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17864bc9f5069cfed7218d7279f85c47]
link C_0001521646084824511527 to C_0000232638456031681828--><path d="M2455.2,1979.3531 C2447.97,2050.6531 2432.98,2198.3431 2421,2316.4631 " fill="none" id="C_0001521646084824511527-&gt;C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2420.2873" cy="2323.494" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2421.0947" x2="2419.48" y1="2315.5348" y2="2331.4531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2428.2465" x2="2412.3282" y1="2324.3013" y2="2322.6866"/><!--MD5=[aaa21626746a78046d7a511702c30bb7]
reverse link C_0000232638456031681828 to C_0000817665972547784504--><path d="M2391.8,2668.9231 C2387.32,2737.0531 2382.28,2813.8631 2378.03,2878.5331 " fill="none" id="C_0000232638456031681828&lt;-C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2384.84,2668.0531,2393.14,2648.5631,2398.81,2668.9731,2384.84,2668.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed3960d209e9f24c5c41aa336e94c692]
reverse link C_0000232638456031681828 to C_0002280191967493310558--><path d="M2484.48,2666.9531 C2527.35,2760.1331 2577.92,2870.0431 2611.45,2942.9331 " fill="none" id="C_0000232638456031681828&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2478.01,2669.6531,2476.01,2648.5631,2490.73,2663.8031,2478.01,2669.6531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43850a4dbbd6500b965033dc7940cfc7]
reverse link C_0000464715462505216589 to C_0002280191967493310558--><path d="M2768.39,2042.2031 C2748.6,2083.3931 2728.42,2131.7731 2716.5,2177.9531 C2645.86,2451.7331 2642.93,2790.4331 2645.88,2942.6731 " fill="none" id="C_0000464715462505216589&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2762.17,2038.9831,2777.27,2024.1231,2774.74,2045.1531,2762.17,2038.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f9f93e1df1c0d799338094cb92c7f29d]
reverse link C_0002228653068706235818 to C_0001623832985137466228--><path d="M2289.55,1705.9131 C2278.45,1727.2731 2266.98,1749.3331 2255.75,1770.9531 " fill="none" id="C_0002228653068706235818&lt;-C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2295.68,1694.1231,2289.3618,1697.5988,2290.14,1704.7678,2296.4582,1701.2921,2295.68,1694.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2278.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2288.5" y="1737.02">type_</text><!--MD5=[494ff3f01f33dcda65528de8e47d9150]
reverse link C_0002228653068706235818 to C_0000202859212831973510--><path d="M2568.05,1691.7631 C2569.87,1692.5131 2571.68,1693.2431 2573.5,1693.9531 C2775.42,1773.2731 2860.7,1675.4831 3055.5,1770.9531 C3117.01,1801.0931 3171.73,1860.2131 3202.98,1898.6331 " fill="none" id="C_0002228653068706235818&lt;-C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2556.08,1686.5831,2560.0026,1692.634,2567.0967,1691.3404,2563.1741,1685.2895,2556.08,1686.5831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2972.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="2982.5" y="1737.02">scope_</text><!--MD5=[a67a2b87f33292a603fe6541cbf2f274]
reverse link C_0001073500714379115414 to C_0002228653068706235818--><path d="M2293.56,1357.9731 C2300.9,1377.4231 2308.27,1396.9731 2315.37,1415.7831 " fill="none" id="C_0001073500714379115414&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2286.9,1360.1631,2286.39,1338.9831,2300,1355.2231,2286.9,1360.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44f503eb492a62418b7123e16c9b38de]
reverse link C_0000460030520790196523 to C_0002228653068706235818--><path d="M2781.71,1250.8931 C2717.21,1298.0831 2632.35,1360.1731 2556.24,1415.8631 " fill="none" id="C_0000460030520790196523&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2792.29,1243.1531,2785.0858,1243.4676,2782.6052,1250.2386,2789.8094,1249.9241,2792.29,1243.1531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2614.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="2624.5" y="1382.02">messages_</text><!--MD5=[1ec789dad01cc0cf7ca5a35a23b3b940]
reverse link C_0000924044572035510976 to C_0000460030520790196523--><path d="M2968.4,944.7431 C2947.08,1003.4331 2925.85,1061.8731 2910.21,1104.9131 " fill="none" id="C_0000924044572035510976&lt;-C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2972.94,932.2231,2967.13,936.4944,2968.838,943.5003,2974.6481,939.229,2972.94,932.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2962.5" y="968.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="2972.5" y="975.02">sequences_</text><!--MD5=[63e8c813a091a0c9d7ec61cd2b876cc0]
reverse link C_0000924044572035510976 to C_0001400215772842495226--><path d="M2771.24,940.9531 C2746.78,963.3631 2722.86,986.2231 2700.5,1008.9531 C2567.59,1144.0331 2588.81,1234.7931 2430.5,1338.9531 C2326.61,1407.3031 2248.31,1326.9131 2161.5,1415.9531 C2072.4,1507.3431 2150.99,1582.1031 2089.5,1693.9531 C2066.93,1735.0131 2048.72,1736.0131 2017.5,1770.9531 C1989.69,1802.0831 1959.54,1837.2031 1934.38,1866.9331 " fill="none" id="C_0000924044572035510976&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2781.01,932.0631,2773.8815,933.1515,2772.1445,940.1503,2779.273,939.0619,2781.01,932.0631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2344.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="82" x="2354.5" y="1382.02">participants_</text><!--MD5=[200170a1e068a1e5ab0bc25f74c55d33]
reverse link C_0000197068985320835874 to C_0000924044572035510976--><path d="M4237.63,331.5031 C3981.49,413.0431 3635.79,523.0931 3384.06,603.2231 " fill="none" id="C_0000197068985320835874&lt;-C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4235.51,324.8331,4256.69,325.4431,4239.76,338.1731,4235.51,324.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[3359e37b007906b74888278e0c289ade]
link C_0000911024010877522257 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[bcd38d197d15a64257aa00ee913cc942]
@startuml
title clang-uml sequence diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "clanguml::common::model::message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+set_comment() : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : clanguml::common::model::relationship_t
+set_destination() : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : clanguml::common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64{label_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+file_relative() const : const std::string &
+set_file_relative() : void
+line() const : unsigned int
+set_line() : void
+location_id() const : unsigned int
+set_location_id() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55{hash_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : clanguml::common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+type_name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "clanguml::common::model::path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+path() const : const clanguml::common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const clanguml::common::model::namespace_ &
+context() const : inja::json
}
enum "clanguml::common::model::template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
class "clanguml::common::model::template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45{template_parameter}]] {
{static} +make_template_type() : clanguml::common::model::template_parameter
{static} +make_template_template_type() : clanguml::common::model::template_parameter
{static} +make_non_type_template() : clanguml::common::model::template_parameter
{static} +make_argument() : clanguml::common::model::template_parameter
{static} +make_unexposed_argument() : clanguml::common::model::template_parameter
+set_type() : void
+type() const : std::optional<std::string>
+set_id() : void
+id() const : const std::optional<int64_t> &
+set_name() : void
+name() const : std::optional<std::string>
+set_default_value() : void
+default_value() const : const std::optional<std::string> &
+is_variadic() : void
+is_variadic() const : bool
+calculate_specialization_match() const : int
+is_template_parameter() const : bool
+is_template_parameter() : void
+is_template_template_parameter() const : bool
+is_template_template_parameter() : void
+to_string() const : std::string
+add_template_param() : void
+add_template_param() : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+find_nested_relationships() const : bool
+set_concept_constraint() : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : clanguml::common::model::template_parameter_kind_t
+set_kind() : void
+is_unexposed() const : bool
+set_unexposed() : void
+set_function_template() : void
+is_function_template() const : bool
-template_parameter() = default : void
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206{is_template_template_parameter_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211{is_function_template_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223{is_unexposed_}]]]
}
class "clanguml::common::model::template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params() const : std::ostream &
+set_base_template() : void
+base_template() const : std::string
+add_template() : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+set_implicit() : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+get_element<V=T>() : auto
+get_element_parent<V=T>() : auto
+get_element<V=T>() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : clanguml::common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : clanguml::common::model::source_file &
+operator=() : clanguml::common::model::source_file &
+operator==() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : clanguml::common::model::path<clanguml::common::model::fs_path_sep>
+fs_path() const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get_with_namespace() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : clanguml::common::model::diagram &
+operator=() : clanguml::common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87{complete_}]]]
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L30{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include<T>() : _Bool
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : clanguml::common::model::package &
+operator=() : clanguml::common::model::package &
+type_name() const : std::string
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : clanguml::common::model::filter_t
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138{roots_}]]]
}
class "clanguml::common::model::parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
+match() const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149{children_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent<C,D>() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291{forward_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343{root_}]]]
}
class "participant" as C_0001400215772842495226
class C_0001400215772842495226 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L31{participant}]] {
+participant() : void
+participant() : void
+operator=() : participant &
+operator=() : participant &
+type_name() const : std::string
+to_string() const : std::string
+stereotype_ : participant::stereotype_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L55{stereotype_}]]]
}
enum "participant::stereotype_t" as C_0001483671267820004141
enum C_0001483671267820004141 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L33{participant##stereotype_t}]] {
participant
actor
boundary
control
entity
database
collections
queue
}
class "class_" as C_0000885514871619471610
class C_0000885514871619471610 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L58{class_}]] {
+class_() : void
+class_() : void
+class_() : void
+operator=() : class_ &
+operator=() : class_ &
+type_name() const : std::string
+is_struct() const : bool
+is_struct() : void
+is_template() const : bool
+is_template() : void
+is_template_instantiation() const : bool
+is_template_instantiation() : void
+full_name() const : std::string
+full_name_no_ns() const : std::string
+is_abstract() const : bool
+is_alias() const : bool
+is_alias() : void
+is_lambda() const : bool
+is_lambda() : void
-is_struct_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L95{is_struct_}]]]
-is_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L96{is_template_}]]]
-is_template_instantiation_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L97{is_template_instantiation_}]]]
-is_alias_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L98{is_alias_}]]]
-is_lambda_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L99{is_lambda_}]]]
-full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L101{full_name_}]]]
}
class "lambda" as C_0001701531547288995691
class C_0001701531547288995691 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L104{lambda}]] {
+type_name() const : std::string
}
class "function" as C_0000232638456031681828
class C_0000232638456031681828 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L110{function}]] {
+function() : void
+function() : void
+function() : void
+operator=() : function &
+operator=() : function &
+type_name() const : std::string
+full_name() const : std::string
+full_name_no_ns() const : std::string
+message_name() const : std::string
+is_const() const : bool
+is_const() : void
+is_void() const : bool
+is_void() : void
+is_static() const : bool
+is_static() : void
+add_parameter() : void
+parameters() const : const std::vector<std::string> &
-is_const_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L145{is_const_}]]]
-is_void_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L146{is_void_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L147{is_static_}]]]
-parameters_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L148{parameters_}]]]
}
enum "function::message_render_mode" as C_0001521646084824511527
enum C_0001521646084824511527 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L111{function##message_render_mode}]] {
full
abbreviated
no_arguments
}
class "method" as C_0000817665972547784504
class C_0000817665972547784504 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L151{method}]] {
+method() : void
+method() : void
+method() : void
+operator=() : method &
+operator=() : method &
+type_name() const : std::string
+method_name() const : std::string
+alias() const : std::string
+set_method_name() : void
+set_class_id() : void
+set_class_full_name() : void
+class_full_name() const : const auto &
+full_name() const : std::string
+message_name() const : std::string
+class_id() const : diagram_element::id_t
+to_string() const : std::string
-class_id_ : diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L182{class_id_}]]]
-method_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L183{method_name_}]]]
-class_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L184{class_full_name_}]]]
}
class "function_template" as C_0002280191967493310558
class C_0002280191967493310558 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/participant.h#L187{function_template}]] {
+function_template() : void
+function_template() : void
+function_template() : void
+operator=() : function_template &
+operator=() : function_template &
+type_name() const : std::string
+full_name() const : std::string
+full_name_no_ns() const : std::string
+message_name() const : std::string
}
class "message" as C_0002228653068706235818
class C_0002228653068706235818 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L28{message}]] {
+message() = default : void
+message() : void
+set_type() : void
+type() const : common::model::message_t
+set_from() : void
+from() const : common::model::diagram_element::id_t
+set_to() : void
+to() const : common::model::diagram_element::id_t
+set_message_name() : void
+message_name() const : const std::string &
+set_return_type() : void
+return_type() const : const std::string &
+set_message_scope() : void
+message_scope() const : common::model::message_scope_t
-from_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L56{from_}]]]
-to_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L58{to_}]]]
-message_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L65{message_name_}]]]
-return_type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/message.h#L67{return_type_}]]]
}
class "activity" as C_0000460030520790196523
class C_0000460030520790196523 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L28{activity}]] {
+activity() : void
+add_message() : void
+messages() : std::vector<message> &
+messages() const : const std::vector<message> &
+set_from() : void
+from() const : common::model::diagram_element::id_t
-from_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/activity.h#L43{from_}]]]
}
class "diagram" as C_0000924044572035510976
class C_0000924044572035510976 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L30{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : diagram &
+operator=() = default : diagram &
+type() const : common::model::diagram_t
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+to_alias() const : std::string
+context() const : inja::json
+print() const : void
+add_participant() : void
+add_active_participant() : void
+get_activity() : activity &
+add_message() : void
+add_block_message() : void
+end_block_message() : void
+add_case_stmt_message() : void
+started() const : bool
+started() : void
+sequences() : std::map<common::model::diagram_element::id_t,activity> &
+sequences() const : const std::map<common::model::diagram_element::id_t,activity> &
+participants() : std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> &
+participants() const : const std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> &
+active_participants() : std::set<common::model::diagram_element::id_t> &
+active_participants() const : const std::set<common::model::diagram_element::id_t> &
-fold_or_end_block_statement() const : void
+get_participant<T>() : common::optional_ref<T>
+get_participant<T>() : common::optional_ref<T>
-started_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L133{started_}]]]
-active_participants_ : std::set<common::model::diagram_element::id_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/sequence_diagram/model/diagram.h#L140{active_participants_}]]]
}
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002069520381434407937 <|- - C_0001400215772842495226
C_0002077846075979426940 <|- - C_0001400215772842495226
C_0001483671267820004141 - -+ C_0001400215772842495226
C_0001400215772842495226 <|- - C_0000885514871619471610
C_0000464715462505216589 <|- - C_0000885514871619471610
C_0000885514871619471610 <|- - C_0001701531547288995691
C_0001400215772842495226 <|- - C_0000232638456031681828
C_0001521646084824511527 - -+ C_0000232638456031681828
C_0000232638456031681828 <|- - C_0000817665972547784504
C_0000232638456031681828 <|- - C_0002280191967493310558
C_0000464715462505216589 <|- - C_0002280191967493310558
C_0002228653068706235818 o- - C_0001623832985137466228 : -type_
C_0002228653068706235818 o- - C_0000202859212831973510 : -scope_
C_0001073500714379115414 <|- - C_0002228653068706235818
C_0000460030520790196523 o- - C_0002228653068706235818 : -messages_
C_0000924044572035510976 o- - C_0000460030520790196523 : -sequences_
C_0000924044572035510976 o- - C_0001400215772842495226 : -participants_
C_0000197068985320835874 <|- - C_0000924044572035510976

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>