<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3639px" preserveAspectRatio="none" style="width:7191px;height:3639px;" version="1.1" viewBox="0 0 7191 3639" width="7191px" zoomAndPan="magnify"><defs><filter height="300%" id="fhg3whrsdnuj0" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="314" x="3442" y="16.708">clang-uml sequence diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="865" y="169.9531"/><ellipse cx="880" cy="185.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M884.1094,191.9531 L876.3906,191.9531 L876.3906,179.5625 L884.1094,179.5625 L884.1094,181.7188 L878.8438,181.7188 L878.8438,184.3906 L883.6094,184.3906 L883.6094,186.5469 L878.8438,186.5469 L878.8438,189.7969 L884.1094,189.7969 L884.1094,191.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="894" y="190.1074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1129" y1="201.9531" y2="201.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="871" y="216.1636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="871" y="228.9683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="871" y="241.7729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="871" y="254.5776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866" x2="1129" y1="261.1719" y2="261.1719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="2801.5" y="1886.4531"/><ellipse cx="2816.5" cy="1902.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2820.6094,1908.4531 L2812.8906,1908.4531 L2812.8906,1896.0625 L2820.6094,1896.0625 L2820.6094,1898.2188 L2815.3438,1898.2188 L2815.3438,1900.8906 L2820.1094,1900.8906 L2820.1094,1903.0469 L2815.3438,1903.0469 L2815.3438,1906.2969 L2820.6094,1906.2969 L2820.6094,1908.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="2830.5" y="1906.6074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2802.5" x2="3058.5" y1="1918.4531" y2="1918.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2807.5" y="1932.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2807.5" y="1945.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2807.5" y="1958.2729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2807.5" y="1971.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2802.5" x2="3058.5" y1="1977.6719" y2="1977.6719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="5116.5" y="1834.9531"/><ellipse cx="5131.5" cy="1850.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5135.6094,1856.9531 L5127.8906,1856.9531 L5127.8906,1844.5625 L5135.6094,1844.5625 L5135.6094,1846.7188 L5130.3438,1846.7188 L5130.3438,1849.3906 L5135.1094,1849.3906 L5135.1094,1851.5469 L5130.3438,1851.5469 L5130.3438,1854.7969 L5135.6094,1854.7969 L5135.6094,1856.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="5145.5" y="1855.1074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5117.5" x2="5403.5" y1="1866.9531" y2="1866.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="5122.5" y="1881.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="5122.5" y="1893.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5122.5" y="1906.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="5122.5" y="1919.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5122.5" y="1932.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5122.5" y="1945.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5122.5" y="1957.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5122.5" y="1970.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="5122.5" y="1983.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="5122.5" y="1996.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="5122.5" y="2009.2104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="5122.5" y="2022.0151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5117.5" x2="5403.5" y1="2028.6094" y2="2028.6094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="2495" y="1770.9531"/><ellipse cx="2510" cy="1786.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2514.1094,1792.9531 L2506.3906,1792.9531 L2506.3906,1780.5625 L2514.1094,1780.5625 L2514.1094,1782.7188 L2508.8438,1782.7188 L2508.8438,1785.3906 L2513.6094,1785.3906 L2513.6094,1787.5469 L2508.8438,1787.5469 L2508.8438,1790.7969 L2514.1094,1790.7969 L2514.1094,1792.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="2524" y="1791.1074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2496" x2="2765" y1="1802.9531" y2="1802.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="2501" y="1817.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2501" y="1829.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="2501" y="1842.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="2501" y="1855.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="2501" y="1868.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="2501" y="1881.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2501" y="1893.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="2501" y="1906.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="2501" y="1919.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="2501" y="1932.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2501" y="1945.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2501" y="1958.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="2501" y="1970.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="2501" y="1983.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2501" y="1996.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2501" y="2009.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2501" y="2022.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="2501" y="2034.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="2501" y="2047.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2501" y="2060.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2501" y="2073.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2501" y="2086.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2496" x2="2765" y1="2092.6563" y2="2092.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="3367" y="1898.9531"/><ellipse cx="3382" cy="1914.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3386.1094,1920.9531 L3378.3906,1920.9531 L3378.3906,1908.5625 L3386.1094,1908.5625 L3386.1094,1910.7188 L3380.8438,1910.7188 L3380.8438,1913.3906 L3385.6094,1913.3906 L3385.6094,1915.5469 L3380.8438,1915.5469 L3380.8438,1918.7969 L3386.1094,1918.7969 L3386.1094,1920.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="283" x="3396" y="1919.1074">clanguml::common::model::message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3368" x2="3681" y1="1930.9531" y2="1930.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="3373" y="1945.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3373" y="1957.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3368" x2="3681" y1="1964.5625" y2="1964.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="1506.5" y="614.9531"/><ellipse cx="1606.75" cy="630.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1609.7188,636.5938 Q1609.1406,636.8906 1608.5,637.0313 Q1607.8594,637.1875 1607.1563,637.1875 Q1604.6563,637.1875 1603.3281,635.5469 Q1602.0156,633.8906 1602.0156,630.7656 Q1602.0156,627.6406 1603.3281,625.9844 Q1604.6563,624.3281 1607.1563,624.3281 Q1607.8594,624.3281 1608.5,624.4844 Q1609.1563,624.6406 1609.7188,624.9375 L1609.7188,627.6563 Q1609.0938,627.0781 1608.5,626.8125 Q1607.9063,626.5313 1607.2813,626.5313 Q1605.9375,626.5313 1605.25,627.6094 Q1604.5625,628.6719 1604.5625,630.7656 Q1604.5625,632.8594 1605.25,633.9375 Q1605.9375,635 1607.2813,635 Q1607.9063,635 1608.5,634.7344 Q1609.0938,634.4531 1609.7188,633.875 L1609.7188,636.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="1627.25" y="635.1074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1507.5" x2="2007.5" y1="646.9531" y2="646.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1512.5" y="652.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1514.5" y="654.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1526.5" y="661.1636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1512.5" y="665.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1514.5" y="667.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1526.5" y="673.9683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1507.5" x2="2007.5" y1="680.5625" y2="680.5625"/><ellipse cx="1517.5" cy="691.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1526.5" y="694.7729">skip() const : bool</text><ellipse cx="1517.5" cy="704.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1526.5" y="707.5776">skip_relationship() const : bool</text><ellipse cx="1517.5" cy="717.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1526.5" y="720.3823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1517.5" cy="729.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1526.5" y="733.187">style_spec() const : std::string</text><ellipse cx="1517.5" cy="742.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1526.5" y="745.9917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1517.5" cy="755.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1526.5" y="758.7964">add_decorators() : void</text><ellipse cx="1517.5" cy="768.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1526.5" y="771.6011">append() : void</text><ellipse cx="1517.5" cy="781.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1526.5" y="784.4058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1517.5" cy="794" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1526.5" y="797.2104">set_comment() : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="958.5" y="1130.9531"/><ellipse cx="973.5" cy="1146.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M976.4688,1152.5938 Q975.8906,1152.8906 975.25,1153.0313 Q974.6094,1153.1875 973.9063,1153.1875 Q971.4063,1153.1875 970.0781,1151.5469 Q968.7656,1149.8906 968.7656,1146.7656 Q968.7656,1143.6406 970.0781,1141.9844 Q971.4063,1140.3281 973.9063,1140.3281 Q974.6094,1140.3281 975.25,1140.4844 Q975.9063,1140.6406 976.4688,1140.9375 L976.4688,1143.6563 Q975.8438,1143.0781 975.25,1142.8125 Q974.6563,1142.5313 974.0313,1142.5313 Q972.6875,1142.5313 972,1143.6094 Q971.3125,1144.6719 971.3125,1146.7656 Q971.3125,1148.8594 972,1149.9375 Q972.6875,1151 974.0313,1151 Q974.6563,1151 975.25,1150.7344 Q975.8438,1150.4531 976.4688,1149.875 L976.4688,1152.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="987.5" y="1151.1074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="959.5" x2="1265.5" y1="1162.9531" y2="1162.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="964.5" y="1168.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="966.5" y="1170.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="978.5" y="1177.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="959.5" x2="1265.5" y1="1183.7578" y2="1183.7578"/><ellipse cx="969.5" cy="1194.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="978.5" y="1197.9683">set_style() : void</text><ellipse cx="969.5" cy="1207.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="978.5" y="1210.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="2466" y="1415.9531"/><ellipse cx="2509.8" cy="1431.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2512.7688,1437.5938 Q2512.1906,1437.8906 2511.55,1438.0313 Q2510.9094,1438.1875 2510.2063,1438.1875 Q2507.7063,1438.1875 2506.3781,1436.5469 Q2505.0656,1434.8906 2505.0656,1431.7656 Q2505.0656,1428.6406 2506.3781,1426.9844 Q2507.7063,1425.3281 2510.2063,1425.3281 Q2510.9094,1425.3281 2511.55,1425.4844 Q2512.2063,1425.6406 2512.7688,1425.9375 L2512.7688,1428.6563 Q2512.1438,1428.0781 2511.55,1427.8125 Q2510.9563,1427.5313 2510.3313,1427.5313 Q2508.9875,1427.5313 2508.3,1428.6094 Q2507.6125,1429.6719 2507.6125,1431.7656 Q2507.6125,1433.8594 2508.3,1434.9375 Q2508.9875,1436 2510.3313,1436 Q2510.9563,1436 2511.55,1435.7344 Q2512.1438,1435.4531 2512.7688,1434.875 L2512.7688,1437.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="2530.2" y="1436.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2467" x2="2806" y1="1447.9531" y2="1447.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2472" y="1453.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2474" y="1455.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2486" y="1462.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2472" y="1466.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2474" y="1468.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2486" y="1474.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2472" y="1479.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2474" y="1481.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2486" y="1487.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2472" y="1492.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2474" y="1494.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2486" y="1500.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2467" x2="2806" y1="1507.1719" y2="1507.1719"/><ellipse cx="2477" cy="1518.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2486" y="1521.3823">relationship() : void</text><ellipse cx="2477" cy="1530.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2486" y="1534.187">~relationship() = default : void</text><ellipse cx="2477" cy="1543.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2486" y="1546.9917">set_type() : void</text><ellipse cx="2477" cy="1556.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="2486" y="1559.7964">type() const : clanguml::common::model::relationship_t</text><ellipse cx="2477" cy="1569.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2486" y="1572.6011">set_destination() : void</text><ellipse cx="2477" cy="1582.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2486" y="1585.4058">destination() const : clanguml::common::id_t</text><ellipse cx="2477" cy="1595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2486" y="1598.2104">set_multiplicity_source() : void</text><ellipse cx="2477" cy="1607.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2486" y="1611.0151">multiplicity_source() const : std::string</text><ellipse cx="2477" cy="1620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2486" y="1623.8198">set_multiplicity_destination() : void</text><ellipse cx="2477" cy="1633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2486" y="1636.6245">multiplicity_destination() const : std::string</text><ellipse cx="2477" cy="1646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2486" y="1649.4292">set_label() : void</text><ellipse cx="2477" cy="1659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2486" y="1662.2339">label() const : std::string</text><ellipse cx="2477" cy="1671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2486" y="1675.0386">set_access() : void</text><ellipse cx="2477" cy="1684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="2486" y="1687.8433">access() const : clanguml::common::model::access_t</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="2043.5" y="595.9531"/><ellipse cx="2058.5" cy="611.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2061.4688,617.5938 Q2060.8906,617.8906 2060.25,618.0313 Q2059.6094,618.1875 2058.9063,618.1875 Q2056.4063,618.1875 2055.0781,616.5469 Q2053.7656,614.8906 2053.7656,611.7656 Q2053.7656,608.6406 2055.0781,606.9844 Q2056.4063,605.3281 2058.9063,605.3281 Q2059.6094,605.3281 2060.25,605.4844 Q2060.9063,605.6406 2061.4688,605.9375 L2061.4688,608.6563 Q2060.8438,608.0781 2060.25,607.8125 Q2059.6563,607.5313 2059.0313,607.5313 Q2057.6875,607.5313 2057,608.6094 Q2056.3125,609.6719 2056.3125,611.7656 Q2056.3125,613.8594 2057,614.9375 Q2057.6875,616 2059.0313,616 Q2059.6563,616 2060.25,615.7344 Q2060.8438,615.4531 2061.4688,614.875 L2061.4688,617.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="2072.5" y="616.1074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2044.5" x2="2344.5" y1="627.9531" y2="627.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2049.5" y="633.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2051.5" y="635.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2063.5" y="642.1636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2049.5" y="646.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2051.5" y="648.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2063.5" y="654.9683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2049.5" y="659.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2051.5" y="661.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2063.5" y="667.7729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2049.5" y="672.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2051.5" y="674.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2063.5" y="680.5776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2044.5" x2="2344.5" y1="687.1719" y2="687.1719"/><ellipse cx="2054.5" cy="698.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2063.5" y="701.3823">source_location() = default : void</text><ellipse cx="2054.5" cy="710.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2063.5" y="714.187">source_location() : void</text><ellipse cx="2054.5" cy="723.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2063.5" y="726.9917">file() const : const std::string &amp;</text><ellipse cx="2054.5" cy="736.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2063.5" y="739.7964">set_file() : void</text><ellipse cx="2054.5" cy="749.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2063.5" y="752.6011">file_relative() const : const std::string &amp;</text><ellipse cx="2054.5" cy="762.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2063.5" y="765.4058">set_file_relative() : void</text><ellipse cx="2054.5" cy="775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2063.5" y="778.2104">line() const : unsigned int</text><ellipse cx="2054.5" cy="787.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2063.5" y="791.0151">set_line() : void</text><ellipse cx="2054.5" cy="800.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2063.5" y="803.8198">location_id() const : unsigned int</text><ellipse cx="2054.5" cy="813.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2063.5" y="816.6245">set_location_id() : void</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="1615" y="1008.9531"/><ellipse cx="1659.75" cy="1024.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1662.7188,1030.5938 Q1662.1406,1030.8906 1661.5,1031.0313 Q1660.8594,1031.1875 1660.1563,1031.1875 Q1657.6563,1031.1875 1656.3281,1029.5469 Q1655.0156,1027.8906 1655.0156,1024.7656 Q1655.0156,1021.6406 1656.3281,1019.9844 Q1657.6563,1018.3281 1660.1563,1018.3281 Q1660.8594,1018.3281 1661.5,1018.4844 Q1662.1563,1018.6406 1662.7188,1018.9375 L1662.7188,1021.6563 Q1662.0938,1021.0781 1661.5,1020.8125 Q1660.9063,1020.5313 1660.2813,1020.5313 Q1658.9375,1020.5313 1658.25,1021.6094 Q1657.5625,1022.6719 1657.5625,1024.7656 Q1657.5625,1026.8594 1658.25,1027.9375 Q1658.9375,1029 1660.2813,1029 Q1660.9063,1029 1661.5,1028.7344 Q1662.0938,1028.4531 1662.7188,1027.875 L1662.7188,1030.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="1680.25" y="1029.1074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1616" x2="1991" y1="1040.9531" y2="1040.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1621" y="1046.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1623" y="1048.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="1635" y="1055.1636">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1621" y="1059.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1623" y="1061.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1635" y="1067.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1621" y="1072.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1623" y="1074.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1635" y="1080.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1621" y="1085.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1623" y="1087.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1635" y="1093.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1616" x2="1991" y1="1100.1719" y2="1100.1719"/><ellipse cx="1626" cy="1111.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1635" y="1114.3823">diagram_element() : void</text><ellipse cx="1626" cy="1123.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1635" y="1127.187">~diagram_element() = default : void</text><ellipse cx="1626" cy="1136.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="1635" y="1139.9917">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="1626" cy="1149.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1635" y="1152.7964">set_id() : void</text><ellipse cx="1626" cy="1162.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1635" y="1165.6011">alias() const : std::string</text><ellipse cx="1626" cy="1175.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1635" y="1178.4058">set_name() : void</text><ellipse cx="1626" cy="1188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1635" y="1191.2104">name() const : std::string</text><ellipse cx="1626" cy="1200.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1635" y="1204.0151">type_name() const : std::string</text><ellipse cx="1626" cy="1213.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1635" y="1216.8198">full_name() const : std::string</text><ellipse cx="1626" cy="1226.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1635" y="1229.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1626" cy="1239.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1635" y="1242.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1626" cy="1252.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1635" y="1255.2339">add_relationship() : void</text><ellipse cx="1626" cy="1264.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1635" y="1268.0386">append() : void</text><ellipse cx="1626" cy="1277.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1635" y="1280.8433">context() const : inja::json</text><ellipse cx="1626" cy="1290.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1635" y="1293.6479">is_nested() const : bool</text><ellipse cx="1626" cy="1303.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1635" y="1306.4526">nested() : void</text><ellipse cx="1626" cy="1316.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1635" y="1319.2573">complete() const : bool</text><ellipse cx="1626" cy="1328.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1635" y="1332.062">complete() : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="848" y="2382.9531"/><ellipse cx="980.25" cy="2398.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M983.2188,2404.5938 Q982.6406,2404.8906 982,2405.0313 Q981.3594,2405.1875 980.6563,2405.1875 Q978.1563,2405.1875 976.8281,2403.5469 Q975.5156,2401.8906 975.5156,2398.7656 Q975.5156,2395.6406 976.8281,2393.9844 Q978.1563,2392.3281 980.6563,2392.3281 Q981.3594,2392.3281 982,2392.4844 Q982.6563,2392.6406 983.2188,2392.9375 L983.2188,2395.6563 Q982.5938,2395.0781 982,2394.8125 Q981.4063,2394.5313 980.7813,2394.5313 Q979.4375,2394.5313 978.75,2395.6094 Q978.0625,2396.6719 978.0625,2398.7656 Q978.0625,2400.8594 978.75,2401.9375 Q979.4375,2403 980.7813,2403 Q981.4063,2403 982,2402.7344 Q982.5938,2402.4531 983.2188,2401.875 L983.2188,2404.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1000.75" y="2403.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1326" y="2379.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1327" y="2392.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="849" x2="1348" y1="2414.9531" y2="2414.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="854" y="2420.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="856" y="2422.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="868" y="2429.1636">path_ : clanguml::common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="849" x2="1348" y1="2435.7578" y2="2435.7578"/><ellipse cx="859" cy="2446.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="868" y="2449.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="859" cy="2459.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="868" y="2462.7729">path&lt;Sep&gt;() : void</text><ellipse cx="859" cy="2472.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="868" y="2475.5776">path&lt;Sep&gt;() : void</text><ellipse cx="859" cy="2485.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="868" y="2488.3823">path&lt;Sep&gt;() : void</text><ellipse cx="859" cy="2497.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="868" y="2501.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="859" cy="2510.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="868" y="2513.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="859" cy="2523.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="868" y="2526.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="859" cy="2536.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="868" y="2539.6011">path&lt;Sep&gt;() : void</text><ellipse cx="859" cy="2549.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="868" y="2552.4058">path&lt;Sep&gt;() : void</text><ellipse cx="859" cy="2562" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="868" y="2565.2104">to_string() const : std::string</text><ellipse cx="859" cy="2574.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="868" y="2578.0151">is_empty() const : bool</text><ellipse cx="859" cy="2587.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="868" y="2590.8198">size() const : size_t</text><ellipse cx="859" cy="2600.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="868" y="2603.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="859" cy="2613.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="868" y="2616.4292">operator|=() : void</text><ellipse cx="859" cy="2626.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="868" y="2629.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="859" cy="2638.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="868" y="2642.0386">operator|=() : void</text><ellipse cx="859" cy="2651.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="868" y="2654.8433">operator[]() : std::string &amp;</text><ellipse cx="859" cy="2664.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="868" y="2667.6479">operator[]() const : const std::string &amp;</text><ellipse cx="859" cy="2677.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="868" y="2680.4526">append() : void</text><ellipse cx="859" cy="2690.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="868" y="2693.2573">append() : void</text><ellipse cx="859" cy="2702.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="868" y="2706.062">pop_back() : void</text><ellipse cx="859" cy="2715.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="868" y="2718.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="859" cy="2728.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="868" y="2731.6714">starts_with() const : bool</text><ellipse cx="859" cy="2741.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="868" y="2744.4761">ends_with() const : bool</text><ellipse cx="859" cy="2754.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="868" y="2757.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="859" cy="2766.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="868" y="2770.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="859" cy="2779.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="868" y="2782.8901">relative() const : std::string</text><ellipse cx="859" cy="2792.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="868" y="2795.6948">name() const : std::string</text><ellipse cx="859" cy="2805.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="868" y="2808.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="859" cy="2818.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="868" y="2821.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="859" cy="2830.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="868" y="2834.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="859" cy="2843.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="868" y="2846.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="859" cy="2856.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="868" y="2859.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="859" cy="2869.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="868" y="2872.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="1165" y="188.9531"/><ellipse cx="1180" cy="204.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1182.9688,210.5938 Q1182.3906,210.8906 1181.75,211.0313 Q1181.1094,211.1875 1180.4063,211.1875 Q1177.9063,211.1875 1176.5781,209.5469 Q1175.2656,207.8906 1175.2656,204.7656 Q1175.2656,201.6406 1176.5781,199.9844 Q1177.9063,198.3281 1180.4063,198.3281 Q1181.1094,198.3281 1181.75,198.4844 Q1182.4063,198.6406 1182.9688,198.9375 L1182.9688,201.6563 Q1182.3438,201.0781 1181.75,200.8125 Q1181.1563,200.5313 1180.5313,200.5313 Q1179.1875,200.5313 1178.5,201.6094 Q1177.8125,202.6719 1177.8125,204.7656 Q1177.8125,206.8594 1178.5,207.9375 Q1179.1875,209 1180.5313,209 Q1181.1563,209 1181.75,208.7344 Q1182.3438,208.4531 1182.9688,207.875 L1182.9688,210.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="1194" y="209.1074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1166" x2="1485" y1="220.9531" y2="220.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1171" y="226.9531"/><ellipse cx="1176" cy="231.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="1185" y="235.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1166" x2="1485" y1="241.7578" y2="241.7578"/><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="1197" y="1911.9531"/><ellipse cx="1212" cy="1927.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1214.9688,1933.5938 Q1214.3906,1933.8906 1213.75,1934.0313 Q1213.1094,1934.1875 1212.4063,1934.1875 Q1209.9063,1934.1875 1208.5781,1932.5469 Q1207.2656,1930.8906 1207.2656,1927.7656 Q1207.2656,1924.6406 1208.5781,1922.9844 Q1209.9063,1921.3281 1212.4063,1921.3281 Q1213.1094,1921.3281 1213.75,1921.4844 Q1214.4063,1921.6406 1214.9688,1921.9375 L1214.9688,1924.6563 Q1214.3438,1924.0781 1213.75,1923.8125 Q1213.1563,1923.5313 1212.5313,1923.5313 Q1211.1875,1923.5313 1210.5,1924.6094 Q1209.8125,1925.6719 1209.8125,1927.7656 Q1209.8125,1929.8594 1210.5,1930.9375 Q1211.1875,1932 1212.5313,1932 Q1213.1563,1932 1213.75,1931.7344 Q1214.3438,1931.4531 1214.9688,1930.875 L1214.9688,1933.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1226" y="1932.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="1434" y="1908.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="1435" y="1921.0918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1198" x2="1719" y1="1943.9531" y2="1943.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1198" x2="1719" y1="1951.9531" y2="1951.9531"/><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="1185.5" y="1460.4531"/><ellipse cx="1302.25" cy="1476.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1305.2188,1482.0938 Q1304.6406,1482.3906 1304,1482.5313 Q1303.3594,1482.6875 1302.6563,1482.6875 Q1300.1563,1482.6875 1298.8281,1481.0469 Q1297.5156,1479.3906 1297.5156,1476.2656 Q1297.5156,1473.1406 1298.8281,1471.4844 Q1300.1563,1469.8281 1302.6563,1469.8281 Q1303.3594,1469.8281 1304,1469.9844 Q1304.6563,1470.1406 1305.2188,1470.4375 L1305.2188,1473.1563 Q1304.5938,1472.5781 1304,1472.3125 Q1303.4063,1472.0313 1302.7813,1472.0313 Q1301.4375,1472.0313 1300.75,1473.1094 Q1300.0625,1474.1719 1300.0625,1476.2656 Q1300.0625,1478.3594 1300.75,1479.4375 Q1301.4375,1480.5 1302.7813,1480.5 Q1303.4063,1480.5 1304,1480.2344 Q1304.5938,1479.9531 1305.2188,1479.375 L1305.2188,1482.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="1322.75" y="1480.6074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1186.5" x2="1648.5" y1="1492.4531" y2="1492.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1186.5" x2="1648.5" y1="1500.4531" y2="1500.4531"/><ellipse cx="1196.5" cy="1511.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1205.5" y="1514.6636">element() : void</text><ellipse cx="1196.5" cy="1524.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1205.5" y="1527.4683">~element() = default : void</text><ellipse cx="1196.5" cy="1537.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1205.5" y="1540.2729">name_and_ns() const : std::string</text><ellipse cx="1196.5" cy="1549.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1205.5" y="1553.0776">set_namespace() : void</text><ellipse cx="1196.5" cy="1562.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="1205.5" y="1565.8823">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="1196.5" cy="1575.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="1205.5" y="1578.687">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="1196.5" cy="1588.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1205.5" y="1591.4917">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="1196.5" cy="1601.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1205.5" y="1604.2964">full_name() const : std::string</text><ellipse cx="1196.5" cy="1613.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1205.5" y="1617.1011">full_name_no_ns() const : std::string</text><ellipse cx="1196.5" cy="1626.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="1205.5" y="1629.9058">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="1196.5" cy="1639.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1205.5" y="1642.7104">context() const : inja::json</text></a><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="374" x="1636.5" y="3250.4531"/><ellipse cx="1651.5" cy="3266.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1655.6094,3272.4531 L1647.8906,3272.4531 L1647.8906,3260.0625 L1655.6094,3260.0625 L1655.6094,3262.2188 L1650.3438,3262.2188 L1650.3438,3264.8906 L1655.1094,3264.8906 L1655.1094,3267.0469 L1650.3438,3267.0469 L1650.3438,3270.2969 L1655.6094,3270.2969 L1655.6094,3272.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="342" x="1665.5" y="3270.6074">clanguml::common::model::template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1637.5" x2="2009.5" y1="3282.4531" y2="3282.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1642.5" y="3296.6636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1642.5" y="3309.4683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1642.5" y="3322.2729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="1642.5" y="3335.0776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1642.5" y="3347.8823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1637.5" x2="2009.5" y1="3354.4766" y2="3354.4766"/></a><!--MD5=[90017e9468cbeb0bc9373ae936737720]
class C_0002193110380171976294--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" target="_top" title="rpqualifier" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" xlink:show="new" xlink:title="rpqualifier" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="1343.5" y="3528.9531"/><ellipse cx="1358.5" cy="3544.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1362.6094,3550.9531 L1354.8906,3550.9531 L1354.8906,3538.5625 L1362.6094,3538.5625 L1362.6094,3540.7188 L1357.3438,3540.7188 L1357.3438,3543.3906 L1362.1094,3543.3906 L1362.1094,3545.5469 L1357.3438,3545.5469 L1357.3438,3548.7969 L1362.6094,3548.7969 L1362.6094,3550.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="234" x="1372.5" y="3549.1074">clanguml::common::model::rpqualifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1344.5" x2="1608.5" y1="3560.9531" y2="3560.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1349.5" y="3575.1636">kLValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1349.5" y="3587.9683">kRValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="1349.5" y="3600.7729">kPointer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1349.5" y="3613.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1344.5" x2="1608.5" y1="3620.1719" y2="3620.1719"/></a><!--MD5=[5e78f8fc55e497bc4b976d966927ffe8]
class C_0000845978329661395972--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" target="_top" title="context" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="137.6328" id="C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="1351.5" y="3237.4531"/><ellipse cx="1366.5" cy="3253.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1369.4688,3259.0938 Q1368.8906,3259.3906 1368.25,3259.5313 Q1367.6094,3259.6875 1366.9063,3259.6875 Q1364.4063,3259.6875 1363.0781,3258.0469 Q1361.7656,3256.3906 1361.7656,3253.2656 Q1361.7656,3250.1406 1363.0781,3248.4844 Q1364.4063,3246.8281 1366.9063,3246.8281 Q1367.6094,3246.8281 1368.25,3246.9844 Q1368.9063,3247.1406 1369.4688,3247.4375 L1369.4688,3250.1563 Q1368.8438,3249.5781 1368.25,3249.3125 Q1367.6563,3249.0313 1367.0313,3249.0313 Q1365.6875,3249.0313 1365,3250.1094 Q1364.3125,3251.1719 1364.3125,3253.2656 Q1364.3125,3255.3594 1365,3256.4375 Q1365.6875,3257.5 1367.0313,3257.5 Q1367.6563,3257.5 1368.25,3257.2344 Q1368.8438,3256.9531 1369.4688,3256.375 L1369.4688,3259.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="1380.5" y="3257.6074">clanguml::common::model::context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1352.5" x2="1600.5" y1="3269.4531" y2="3269.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1357.5" y="3275.4531"/><ellipse cx="1362.5" cy="3280.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1371.5" y="3283.6636">is_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1357.5" y="3288.2578"/><ellipse cx="1362.5" cy="3293.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1371.5" y="3296.4683">is_volatile : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1357.5" y="3301.0625"/><ellipse cx="1362.5" cy="3306.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1371.5" y="3309.2729">is_ref_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1357.5" y="3313.8672"/><ellipse cx="1362.5" cy="3318.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1371.5" y="3322.0776">is_ref_volatile : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1352.5" x2="1600.5" y1="3328.6719" y2="3328.6719"/><ellipse cx="1362.5" cy="3339.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1371.5" y="3342.8823">to_string() const : std::string</text><ellipse cx="1362.5" cy="3352.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1371.5" y="3355.687">operator==() const : bool</text><ellipse cx="1362.5" cy="3365.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1371.5" y="3368.4917">operator!=() const : bool</text><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="905.9141" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="1462.5" y="2177.9531"/><ellipse cx="1555.75" cy="2193.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1558.7188,2199.5938 Q1558.1406,2199.8906 1557.5,2200.0313 Q1556.8594,2200.1875 1556.1563,2200.1875 Q1553.6563,2200.1875 1552.3281,2198.5469 Q1551.0156,2196.8906 1551.0156,2193.7656 Q1551.0156,2190.6406 1552.3281,2188.9844 Q1553.6563,2187.3281 1556.1563,2187.3281 Q1556.8594,2187.3281 1557.5,2187.4844 Q1558.1563,2187.6406 1558.7188,2187.9375 L1558.7188,2190.6563 Q1558.0938,2190.0781 1557.5,2189.8125 Q1556.9063,2189.5313 1556.2813,2189.5313 Q1554.9375,2189.5313 1554.25,2190.6094 Q1553.5625,2191.6719 1553.5625,2193.7656 Q1553.5625,2195.8594 1554.25,2196.9375 Q1554.9375,2198 1556.2813,2198 Q1556.9063,2198 1557.5,2197.7344 Q1558.0938,2197.4531 1558.7188,2196.875 L1558.7188,2199.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="1576.25" y="2198.1074">clanguml::common::model::template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1463.5" x2="1955.5" y1="2209.9531" y2="2209.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2215.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2217.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1482.5" y="2224.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2228.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2230.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1482.5" y="2236.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2241.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2243.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1482.5" y="2249.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2254.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2256.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1482.5" y="2262.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2267.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2269.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="1482.5" y="2275.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2279.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2281.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1482.5" y="2288.187">is_ellipsis_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2292.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2294.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1482.5" y="2300.9917">is_noexcept_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2305.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2307.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1482.5" y="2313.7964">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2318.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2320.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1482.5" y="2326.6011">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2331.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2333.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1482.5" y="2339.4058">is_data_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2344"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2346"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1482.5" y="2352.2104">is_member_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2356.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2358.8047"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="1482.5" y="2365.0151">is_array_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2369.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2371.6094"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="1482.5" y="2377.8198">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2382.4141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2384.4141"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1482.5" y="2390.6245">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1468.5" y="2395.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="2397.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1482.5" y="2403.4292">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1463.5" x2="1955.5" y1="2410.0234" y2="2410.0234"/><ellipse cx="1473.5" cy="2421.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="412" x="1482.5" y="2424.2339">make_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="1473.5" cy="2433.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="1482.5" y="2437.0386">make_template_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="1473.5" cy="2446.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="439" x="1482.5" y="2449.8433">make_non_type_template() : clanguml::common::model::template_parameter</text><ellipse cx="1473.5" cy="2459.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="1482.5" y="2462.6479">make_argument() : clanguml::common::model::template_parameter</text><ellipse cx="1473.5" cy="2472.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="1482.5" y="2475.4526">make_unexposed_argument() : clanguml::common::model::template_parameter</text><ellipse cx="1473.5" cy="2485.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1482.5" y="2488.2573">set_type() : void</text><ellipse cx="1473.5" cy="2497.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1482.5" y="2501.062">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="1473.5" cy="2510.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1482.5" y="2513.8667">set_id() : void</text><ellipse cx="1473.5" cy="2523.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1482.5" y="2526.6714">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="1473.5" cy="2536.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1482.5" y="2539.4761">set_name() : void</text><ellipse cx="1473.5" cy="2549.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1482.5" y="2552.2808">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="1473.5" cy="2561.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1482.5" y="2565.0854">set_default_value() : void</text><ellipse cx="1473.5" cy="2574.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="1482.5" y="2577.8901">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="1473.5" cy="2587.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1482.5" y="2590.6948">is_variadic() : void</text><ellipse cx="1473.5" cy="2600.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1482.5" y="2603.4995">is_variadic() const : bool</text><ellipse cx="1473.5" cy="2613.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1482.5" y="2616.3042">calculate_specialization_match() const : int</text><ellipse cx="1473.5" cy="2625.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1482.5" y="2629.1089">is_template_parameter() const : bool</text><ellipse cx="1473.5" cy="2638.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1482.5" y="2641.9136">is_template_parameter() : void</text><ellipse cx="1473.5" cy="2651.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="1482.5" y="2654.7183">is_template_template_parameter() const : bool</text><ellipse cx="1473.5" cy="2664.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1482.5" y="2667.5229">is_template_template_parameter() : void</text><ellipse cx="1473.5" cy="2677.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1482.5" y="2680.3276">to_string() const : std::string</text><ellipse cx="1473.5" cy="2689.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1482.5" y="2693.1323">add_template_param() : void</text><ellipse cx="1473.5" cy="2702.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1482.5" y="2705.937">add_template_param() : void</text><ellipse cx="1473.5" cy="2715.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="1482.5" y="2718.7417">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="1473.5" cy="2728.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1482.5" y="2731.5464">clear_params() : void</text><ellipse cx="1473.5" cy="2741.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1482.5" y="2744.3511">is_association() const : bool</text><ellipse cx="1473.5" cy="2753.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1482.5" y="2757.1558">is_specialization() const : bool</text><ellipse cx="1473.5" cy="2766.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1482.5" y="2769.9604">is_same_specialization() const : bool</text><ellipse cx="1473.5" cy="2779.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="1482.5" y="2782.7651">find_nested_relationships() const : bool</text><ellipse cx="1473.5" cy="2792.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1482.5" y="2795.5698">set_concept_constraint() : void</text><ellipse cx="1473.5" cy="2805.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="1482.5" y="2808.3745">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="1473.5" cy="2817.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="1482.5" y="2821.1792">kind() const : clanguml::common::model::template_parameter_kind_t</text><ellipse cx="1473.5" cy="2830.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1482.5" y="2833.9839">set_kind() : void</text><ellipse cx="1473.5" cy="2843.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1482.5" y="2846.7886">is_unexposed() const : bool</text><ellipse cx="1473.5" cy="2856.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="1482.5" y="2859.5933">set_unexposed() : void</text><ellipse cx="1473.5" cy="2869.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1482.5" y="2872.3979">is_function_template() : void</text><ellipse cx="1473.5" cy="2881.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1482.5" y="2885.2026">is_function_template() const : bool</text><ellipse cx="1473.5" cy="2894.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="1482.5" y="2898.0073">is_member_pointer() : void</text><ellipse cx="1473.5" cy="2907.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1482.5" y="2910.812">is_member_pointer() const : bool</text><ellipse cx="1473.5" cy="2920.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1482.5" y="2923.6167">is_data_pointer() : void</text><ellipse cx="1473.5" cy="2933.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1482.5" y="2936.4214">is_data_pointer() const : bool</text><ellipse cx="1473.5" cy="2946.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1482.5" y="2949.2261">is_array() : void</text><ellipse cx="1473.5" cy="2958.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1482.5" y="2962.0308">is_array() const : bool</text><ellipse cx="1473.5" cy="2971.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="1482.5" y="2974.8354">push_context() : void</text><ellipse cx="1473.5" cy="2984.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="1482.5" y="2987.6401">deduced_context() const : const std::deque&lt;context&gt; &amp;</text><ellipse cx="1473.5" cy="2997.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1482.5" y="3000.4448">deduced_context() : void</text><ellipse cx="1473.5" cy="3010.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1482.5" y="3013.2495">is_ellipsis() : void</text><ellipse cx="1473.5" cy="3022.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1482.5" y="3026.0542">is_ellipsis() const : bool</text><ellipse cx="1473.5" cy="3035.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1482.5" y="3038.8589">is_noexcept() : void</text><ellipse cx="1473.5" cy="3048.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1482.5" y="3051.6636">is_noexcept() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="3058.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1482.5" y="3064.4683">template_parameter() = default : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1470.5" y="3071.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1482.5" y="3077.2729">deduced_context_str() const : std::string</text><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="1755" y="1847.9531"/><ellipse cx="1833.75" cy="1863.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1836.7188,1869.5938 Q1836.1406,1869.8906 1835.5,1870.0313 Q1834.8594,1870.1875 1834.1563,1870.1875 Q1831.6563,1870.1875 1830.3281,1868.5469 Q1829.0156,1866.8906 1829.0156,1863.7656 Q1829.0156,1860.6406 1830.3281,1858.9844 Q1831.6563,1857.3281 1834.1563,1857.3281 Q1834.8594,1857.3281 1835.5,1857.4844 Q1836.1563,1857.6406 1836.7188,1857.9375 L1836.7188,1860.6563 Q1836.0938,1860.0781 1835.5,1859.8125 Q1834.9063,1859.5313 1834.2813,1859.5313 Q1832.9375,1859.5313 1832.25,1860.6094 Q1831.5625,1861.6719 1831.5625,1863.7656 Q1831.5625,1865.8594 1832.25,1866.9375 Q1832.9375,1868 1834.2813,1868 Q1834.9063,1868 1835.5,1867.7344 Q1836.0938,1867.4531 1836.7188,1866.875 L1836.7188,1869.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="1854.25" y="1868.1074">clanguml::common::model::template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1756" x2="2179" y1="1879.9531" y2="1879.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1761" y="1885.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1763" y="1887.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1775" y="1894.1636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1761" y="1898.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1763" y="1900.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1775" y="1906.9683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1756" x2="2179" y1="1913.5625" y2="1913.5625"/><ellipse cx="1766" cy="1924.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="1775" y="1927.7729">render_template_params() const : std::ostream &amp;</text><ellipse cx="1766" cy="1937.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1775" y="1940.5776">set_base_template() : void</text><ellipse cx="1766" cy="1950.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1775" y="1953.3823">base_template() const : std::string</text><ellipse cx="1766" cy="1962.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1775" y="1966.187">add_template() : void</text><ellipse cx="1766" cy="1975.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="1775" y="1978.9917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="1766" cy="1988.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1775" y="1991.7964">calculate_template_specialization_match() const : int</text><ellipse cx="1766" cy="2001.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1775" y="2004.6011">is_implicit() const : bool</text><ellipse cx="1766" cy="2014.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1775" y="2017.4058">set_implicit() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="836.5" y="550.9531"/><ellipse cx="851.5" cy="566.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M854.4688,572.5938 Q853.8906,572.8906 853.25,573.0313 Q852.6094,573.1875 851.9063,573.1875 Q849.4063,573.1875 848.0781,571.5469 Q846.7656,569.8906 846.7656,566.7656 Q846.7656,563.6406 848.0781,561.9844 Q849.4063,560.3281 851.9063,560.3281 Q852.6094,560.3281 853.25,560.4844 Q853.9063,560.6406 854.4688,560.9375 L854.4688,563.6563 Q853.8438,563.0781 853.25,562.8125 Q852.6563,562.5313 852.0313,562.5313 Q850.6875,562.5313 850,563.6094 Q849.3125,564.6719 849.3125,566.7656 Q849.3125,568.8594 850,569.9375 Q850.6875,571 852.0313,571 Q852.6563,571 853.25,570.7344 Q853.8438,570.4531 854.4688,569.875 L854.4688,572.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="865.5" y="571.1074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="1120.5" y="547.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="1121.5" y="560.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="837.5" x2="1157.5" y1="582.9531" y2="582.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="842.5" y="588.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="844.5" y="590.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="856.5" y="597.1636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="837.5" x2="1157.5" y1="603.7578" y2="603.7578"/><ellipse cx="847.5" cy="614.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="856.5" y="617.9683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="847.5" cy="627.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="856.5" y="630.7729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="847.5" cy="640.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="856.5" y="643.5776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="847.5" cy="653.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="856.5" y="656.3823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="847.5" cy="665.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="856.5" y="669.187">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="847.5" cy="678.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="856.5" y="681.9917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="847.5" cy="691.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="856.5" y="694.7964">has_element() const : bool</text><ellipse cx="847.5" cy="704.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="856.5" y="707.6011">is_empty() const : bool</text><ellipse cx="847.5" cy="717.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="856.5" y="720.4058">begin() : auto</text><ellipse cx="847.5" cy="730" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="856.5" y="733.2104">end() : auto</text><ellipse cx="847.5" cy="742.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="856.5" y="746.0151">cbegin() const : auto</text><ellipse cx="847.5" cy="755.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="856.5" y="758.8198">cend() const : auto</text><ellipse cx="847.5" cy="768.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="856.5" y="771.6245">begin() const : auto</text><ellipse cx="847.5" cy="781.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="856.5" y="784.4292">end() const : auto</text><ellipse cx="847.5" cy="794.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="856.5" y="797.2339">print_tree() : void</text><ellipse cx="847.5" cy="806.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="856.5" y="810.0386">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="847.5" cy="819.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="856.5" y="822.8433">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="847.5" cy="832.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="856.5" y="835.6479">get_element&lt;V=T&gt;() : auto</text><ellipse cx="847.5" cy="845.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="856.5" y="848.4526">get_element_parent&lt;V=T&gt;() : auto</text><ellipse cx="847.5" cy="858.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="856.5" y="861.2573">get_element&lt;V=T&gt;() : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="6" y="1892.9531"/><ellipse cx="21" cy="1908.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25.1094,1914.9531 L17.3906,1914.9531 L17.3906,1902.5625 L25.1094,1902.5625 L25.1094,1904.7188 L19.8438,1904.7188 L19.8438,1907.3906 L24.6094,1907.3906 L24.6094,1909.5469 L19.8438,1909.5469 L19.8438,1912.7969 L25.1094,1912.7969 L25.1094,1914.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="35" y="1913.1074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="286" y1="1924.9531" y2="1924.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="12" y="1939.1636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="12" y="1951.9683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="12" y="1964.7729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="286" y1="1971.3672" y2="1971.3672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="1193.5" y="678.9531"/><ellipse cx="1208.5" cy="694.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1211.4688,700.5938 Q1210.8906,700.8906 1210.25,701.0313 Q1209.6094,701.1875 1208.9063,701.1875 Q1206.4063,701.1875 1205.0781,699.5469 Q1203.7656,697.8906 1203.7656,694.7656 Q1203.7656,691.6406 1205.0781,689.9844 Q1206.4063,688.3281 1208.9063,688.3281 Q1209.6094,688.3281 1210.25,688.4844 Q1210.9063,688.6406 1211.4688,688.9375 L1211.4688,691.6563 Q1210.8438,691.0781 1210.25,690.8125 Q1209.6563,690.5313 1209.0313,690.5313 Q1207.6875,690.5313 1207,691.6094 Q1206.3125,692.6719 1206.3125,694.7656 Q1206.3125,696.8594 1207,697.9375 Q1207.6875,699 1209.0313,699 Q1209.6563,699 1210.25,698.7344 Q1210.8438,698.4531 1211.4688,697.875 L1211.4688,700.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="1222.5" y="699.1074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1194.5" x2="1470.5" y1="710.9531" y2="710.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1199.5" y="716.9531"/><ellipse cx="1204.5" cy="721.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="1213.5" y="725.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1194.5" x2="1470.5" y1="731.7578" y2="731.7578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="681.5" y="1911.9531"/><ellipse cx="696.5" cy="1927.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M699.4688,1933.5938 Q698.8906,1933.8906 698.25,1934.0313 Q697.6094,1934.1875 696.9063,1934.1875 Q694.4063,1934.1875 693.0781,1932.5469 Q691.7656,1930.8906 691.7656,1927.7656 Q691.7656,1924.6406 693.0781,1922.9844 Q694.4063,1921.3281 696.9063,1921.3281 Q697.6094,1921.3281 698.25,1921.4844 Q698.9063,1921.6406 699.4688,1921.9375 L699.4688,1924.6563 Q698.8438,1924.0781 698.25,1923.8125 Q697.6563,1923.5313 697.0313,1923.5313 Q695.6875,1923.5313 695,1924.6094 Q694.3125,1925.6719 694.3125,1927.7656 Q694.3125,1929.8594 695,1930.9375 Q695.6875,1932 697.0313,1932 Q697.6563,1932 698.25,1931.7344 Q698.8438,1931.4531 699.4688,1930.875 L699.4688,1933.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="710.5" y="1932.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="918.5" y="1908.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="919.5" y="1921.0918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="682.5" x2="1160.5" y1="1943.9531" y2="1943.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="682.5" x2="1160.5" y1="1951.9531" y2="1951.9531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="559" x="591" y="1415.9531"/><ellipse cx="747.25" cy="1431.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M750.2188,1437.5938 Q749.6406,1437.8906 749,1438.0313 Q748.3594,1438.1875 747.6563,1438.1875 Q745.1563,1438.1875 743.8281,1436.5469 Q742.5156,1434.8906 742.5156,1431.7656 Q742.5156,1428.6406 743.8281,1426.9844 Q745.1563,1425.3281 747.6563,1425.3281 Q748.3594,1425.3281 749,1425.4844 Q749.6563,1425.6406 750.2188,1425.9375 L750.2188,1428.6563 Q749.5938,1428.0781 749,1427.8125 Q748.4063,1427.5313 747.7813,1427.5313 Q746.4375,1427.5313 745.75,1428.6094 Q745.0625,1429.6719 745.0625,1431.7656 Q745.0625,1433.8594 745.75,1434.9375 Q746.4375,1436 747.7813,1436 Q748.4063,1436 749,1435.7344 Q749.5938,1435.4531 750.2188,1434.875 L750.2188,1437.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="767.75" y="1436.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="592" x2="1149" y1="1447.9531" y2="1447.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="597" y="1453.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="599" y="1455.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="611" y="1462.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="592" x2="1149" y1="1468.7578" y2="1468.7578"/><ellipse cx="602" cy="1479.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="611" y="1482.9683">source_file() = default : void</text><ellipse cx="602" cy="1492.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="611" y="1495.7729">source_file() : void</text><ellipse cx="602" cy="1505.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="611" y="1508.5776">set_path() : void</text><ellipse cx="602" cy="1518.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="611" y="1521.3823">set_absolute() : void</text><ellipse cx="602" cy="1530.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="611" y="1534.187">is_absolute() const : bool</text><ellipse cx="602" cy="1543.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="611" y="1546.9917">set_type() : void</text><ellipse cx="602" cy="1556.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="611" y="1559.7964">type() const : clanguml::common::model::source_file_t</text><ellipse cx="602" cy="1569.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="611" y="1572.6011">source_file() : void</text><ellipse cx="602" cy="1582.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="611" y="1585.4058">source_file() = default : void</text><ellipse cx="602" cy="1595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="611" y="1598.2104">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="602" cy="1607.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="611" y="1611.0151">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="602" cy="1620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="611" y="1623.8198">operator==() const : bool</text><ellipse cx="602" cy="1633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="611" y="1636.6245">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="602" cy="1646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="611" y="1649.4292">full_name() const : std::string</text><ellipse cx="602" cy="1659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="611" y="1662.2339">full_path() const : clanguml::common::model::path&lt;clanguml::common::model::fs_path_sep&gt;</text><ellipse cx="602" cy="1671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="611" y="1675.0386">fs_path() const : std::filesystem::path</text><ellipse cx="602" cy="1684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="611" y="1687.8433">context() const : inja::json</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="659" x="4328" y="28.9531"/><ellipse cx="4542.25" cy="44.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4542.3594,40.2969 L4541.2031,45.375 L4543.5313,45.375 L4542.3594,40.2969 Z M4540.875,38.0625 L4543.8594,38.0625 L4547.2188,50.4531 L4544.7656,50.4531 L4544,47.3906 L4540.7188,47.3906 L4539.9688,50.4531 L4537.5313,50.4531 L4540.875,38.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="4562.75" y="49.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4329" x2="4986" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4334" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4336" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4348" y="75.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4334" y="79.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4336" y="81.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4348" y="87.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4329" x2="4986" y1="94.5625" y2="94.5625"/><ellipse cx="4339" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4348" y="108.7729">diagram() : void</text><ellipse cx="4339" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4348" y="121.5776">~diagram() : void</text><ellipse cx="4339" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="4348" y="134.3823">type() const = 0 : clanguml::common::model::diagram_t</text><ellipse cx="4339" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4348" y="147.187">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4339" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4348" y="159.9917">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4339" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="4348" y="172.7964">get_with_namespace() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4339" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4348" y="185.6011">diagram() : void</text><ellipse cx="4339" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4348" y="198.4058">diagram() : void</text><ellipse cx="4339" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4348" y="211.2104">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4339" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4348" y="224.0151">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4339" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4348" y="236.8198">set_name() : void</text><ellipse cx="4339" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4348" y="249.6245">name() const : std::string</text><ellipse cx="4339" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4348" y="262.4292">set_filter() : void</text><ellipse cx="4339" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4348" y="275.2339">set_complete() : void</text><ellipse cx="4339" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4348" y="288.0386">complete() const : bool</text><ellipse cx="4339" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="300.8433">should_include() const : bool</text><ellipse cx="4339" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="313.6479">should_include() const : bool</text><ellipse cx="4339" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="326.4526">should_include() const : bool</text><ellipse cx="4339" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="339.2573">should_include() const : bool</text><ellipse cx="4339" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="352.062">should_include() const : bool</text><ellipse cx="4339" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="364.8667">should_include() const : bool</text><ellipse cx="4339" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4348" y="377.6714">has_element() const : bool</text><ellipse cx="4339" cy="387.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4348" y="390.4761">should_include() const : bool</text><ellipse cx="4339" cy="400.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4348" y="403.2808">context() const = 0 : inja::json</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L30" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L30" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4602.5" y="646.9531"/><ellipse cx="4617.5" cy="662.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4620.4688,668.5938 Q4619.8906,668.8906 4619.25,669.0313 Q4618.6094,669.1875 4617.9063,669.1875 Q4615.4063,669.1875 4614.0781,667.5469 Q4612.7656,665.8906 4612.7656,662.7656 Q4612.7656,659.6406 4614.0781,657.9844 Q4615.4063,656.3281 4617.9063,656.3281 Q4618.6094,656.3281 4619.25,656.4844 Q4619.9063,656.6406 4620.4688,656.9375 L4620.4688,659.6563 Q4619.8438,659.0781 4619.25,658.8125 Q4618.6563,658.5313 4618.0313,658.5313 Q4616.6875,658.5313 4616,659.6094 Q4615.3125,660.6719 4615.3125,662.7656 Q4615.3125,664.8594 4616,665.9375 Q4616.6875,667 4618.0313,667 Q4618.6563,667 4619.25,666.7344 Q4619.8438,666.4531 4620.4688,665.875 L4620.4688,668.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4631.5" y="667.1074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4603.5" x2="4889.5" y1="678.9531" y2="678.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4603.5" x2="4889.5" y1="686.9531" y2="686.9531"/><ellipse cx="4613.5" cy="697.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4622.5" y="701.1636">diagram_filter() : void</text><ellipse cx="4613.5" cy="710.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4622.5" y="713.9683">add_inclusive_filter() : void</text><ellipse cx="4613.5" cy="723.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4622.5" y="726.7729">add_exclusive_filter() : void</text><ellipse cx="4613.5" cy="736.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4622.5" y="739.5776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4610.5" y="746.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4622.5" y="752.3823">init_filters() : void</text><ellipse cx="4613.5" cy="761.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4622.5" y="765.187">should_include&lt;T&gt;() : _Bool</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="322.5" y="1841.4531"/><ellipse cx="367.75" cy="1857.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M370.7188,1863.0938 Q370.1406,1863.3906 369.5,1863.5313 Q368.8594,1863.6875 368.1563,1863.6875 Q365.6563,1863.6875 364.3281,1862.0469 Q363.0156,1860.3906 363.0156,1857.2656 Q363.0156,1854.1406 364.3281,1852.4844 Q365.6563,1850.8281 368.1563,1850.8281 Q368.8594,1850.8281 369.5,1850.9844 Q370.1563,1851.1406 370.7188,1851.4375 L370.7188,1854.1563 Q370.0938,1853.5781 369.5,1853.3125 Q368.9063,1853.0313 368.2813,1853.0313 Q366.9375,1853.0313 366.25,1854.1094 Q365.5625,1855.1719 365.5625,1857.2656 Q365.5625,1859.3594 366.25,1860.4375 Q366.9375,1861.5 368.2813,1861.5 Q368.9063,1861.5 369.5,1861.2344 Q370.0938,1860.9531 370.7188,1860.375 L370.7188,1863.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="388.25" y="1861.6074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="323.5" x2="645.5" y1="1873.4531" y2="1873.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="328.5" y="1879.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="330.5" y="1881.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="342.5" y="1887.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="323.5" x2="645.5" y1="1894.2578" y2="1894.2578"/><ellipse cx="333.5" cy="1905.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="342.5" y="1908.4683">package() : void</text><ellipse cx="333.5" cy="1918.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="342.5" y="1921.2729">package() : void</text><ellipse cx="333.5" cy="1930.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="342.5" y="1934.0776">package() = default : void</text><ellipse cx="333.5" cy="1943.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="342.5" y="1946.8823">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="333.5" cy="1956.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="342.5" y="1959.687">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="333.5" cy="1969.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="342.5" y="1972.4917">type_name() const : std::string</text><ellipse cx="333.5" cy="1982.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="342.5" y="1985.2964">full_name() const : std::string</text><ellipse cx="333.5" cy="1994.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="342.5" y="1998.1011">is_deprecated() const : bool</text><ellipse cx="333.5" cy="2007.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="342.5" y="2010.9058">set_deprecated() : void</text><ellipse cx="333.5" cy="2020.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="342.5" y="2023.7104">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="6631.5" y="1517.9531"/><ellipse cx="6646.5" cy="1533.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6650.6094,1539.9531 L6642.8906,1539.9531 L6642.8906,1527.5625 L6650.6094,1527.5625 L6650.6094,1529.7188 L6645.3438,1529.7188 L6645.3438,1532.3906 L6650.1094,1532.3906 L6650.1094,1534.5469 L6645.3438,1534.5469 L6645.3438,1537.7969 L6650.6094,1537.7969 L6650.6094,1539.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="6660.5" y="1538.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6632.5" x2="6872.5" y1="1549.9531" y2="1549.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="6637.5" y="1564.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="6637.5" y="1576.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6632.5" x2="6872.5" y1="1583.5625" y2="1583.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="4715.5" y="1079.4531"/><ellipse cx="4742.2" cy="1095.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4745.1688,1101.0938 Q4744.5906,1101.3906 4743.95,1101.5313 Q4743.3094,1101.6875 4742.6063,1101.6875 Q4740.1063,1101.6875 4738.7781,1100.0469 Q4737.4656,1098.3906 4737.4656,1095.2656 Q4737.4656,1092.1406 4738.7781,1090.4844 Q4740.1063,1088.8281 4742.6063,1088.8281 Q4743.3094,1088.8281 4743.95,1088.9844 Q4744.6063,1089.1406 4745.1688,1089.4375 L4745.1688,1092.1563 Q4744.5438,1091.5781 4743.95,1091.3125 Q4743.3563,1091.0313 4742.7313,1091.0313 Q4741.3875,1091.0313 4740.7,1092.1094 Q4740.0125,1093.1719 4740.0125,1095.2656 Q4740.0125,1097.3594 4740.7,1098.4375 Q4741.3875,1099.5 4742.7313,1099.5 Q4743.3563,1099.5 4743.95,1099.2344 Q4744.5438,1098.9531 4745.1688,1098.375 L4745.1688,1101.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="4758.8" y="1099.6074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4716.5" x2="5014.5" y1="1111.4531" y2="1111.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4716.5" x2="5014.5" y1="1119.4531" y2="1119.4531"/><ellipse cx="4726.5" cy="1130.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4735.5" y="1133.6636">filter_visitor() : void</text><ellipse cx="4726.5" cy="1143.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4735.5" y="1146.4683">~filter_visitor() = default : void</text><ellipse cx="4726.5" cy="1156.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4735.5" y="1159.2729">match() const : tvl::value_t</text><ellipse cx="4726.5" cy="1168.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4735.5" y="1172.0776">match() const : tvl::value_t</text><ellipse cx="4726.5" cy="1181.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4735.5" y="1184.8823">match() const : tvl::value_t</text><ellipse cx="4726.5" cy="1194.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4735.5" y="1197.687">match() const : tvl::value_t</text><ellipse cx="4726.5" cy="1207.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4735.5" y="1210.4917">match() const : tvl::value_t</text><ellipse cx="4726.5" cy="1220.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4735.5" y="1223.2964">match() const : tvl::value_t</text><ellipse cx="4726.5" cy="1232.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4735.5" y="1236.1011">is_inclusive() const : bool</text><ellipse cx="4726.5" cy="1245.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4735.5" y="1248.9058">is_exclusive() const : bool</text><ellipse cx="4726.5" cy="1258.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4735.5" y="1261.7104">type() const : clanguml::common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="6909" y="1505.4531"/><ellipse cx="6924" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6926.9688,1527.0938 Q6926.3906,1527.3906 6925.75,1527.5313 Q6925.1094,1527.6875 6924.4063,1527.6875 Q6921.9063,1527.6875 6920.5781,1526.0469 Q6919.2656,1524.3906 6919.2656,1521.2656 Q6919.2656,1518.1406 6920.5781,1516.4844 Q6921.9063,1514.8281 6924.4063,1514.8281 Q6925.1094,1514.8281 6925.75,1514.9844 Q6926.4063,1515.1406 6926.9688,1515.4375 L6926.9688,1518.1563 Q6926.3438,1517.5781 6925.75,1517.3125 Q6925.1563,1517.0313 6924.5313,1517.0313 Q6923.1875,1517.0313 6922.5,1518.1094 Q6921.8125,1519.1719 6921.8125,1521.2656 Q6921.8125,1523.3594 6922.5,1524.4375 Q6923.1875,1525.5 6924.5313,1525.5 Q6925.1563,1525.5 6925.75,1525.2344 Q6926.3438,1524.9531 6926.9688,1524.375 L6926.9688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="6938" y="1525.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6910" x2="7179" y1="1537.4531" y2="1537.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6910" x2="7179" y1="1545.4531" y2="1545.4531"/><ellipse cx="6920" cy="1556.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="6929" y="1559.6636">anyof_filter() : void</text><ellipse cx="6920" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6929" y="1572.4683">~anyof_filter() = default : void</text><ellipse cx="6920" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6929" y="1585.2729">match() const : tvl::value_t</text><ellipse cx="6920" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6929" y="1598.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1898.5" y="1505.4531"/><ellipse cx="1913.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1916.4688,1527.0938 Q1915.8906,1527.3906 1915.25,1527.5313 Q1914.6094,1527.6875 1913.9063,1527.6875 Q1911.4063,1527.6875 1910.0781,1526.0469 Q1908.7656,1524.3906 1908.7656,1521.2656 Q1908.7656,1518.1406 1910.0781,1516.4844 Q1911.4063,1514.8281 1913.9063,1514.8281 Q1914.6094,1514.8281 1915.25,1514.9844 Q1915.9063,1515.1406 1916.4688,1515.4375 L1916.4688,1518.1563 Q1915.8438,1517.5781 1915.25,1517.3125 Q1914.6563,1517.0313 1914.0313,1517.0313 Q1912.6875,1517.0313 1912,1518.1094 Q1911.3125,1519.1719 1911.3125,1521.2656 Q1911.3125,1523.3594 1912,1524.4375 Q1912.6875,1525.5 1914.0313,1525.5 Q1914.6563,1525.5 1915.25,1525.2344 Q1915.8438,1524.9531 1916.4688,1524.375 L1916.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="1927.5" y="1525.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1899.5" x2="2207.5" y1="1537.4531" y2="1537.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1899.5" x2="2207.5" y1="1545.4531" y2="1545.4531"/><ellipse cx="1909.5" cy="1556.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1918.5" y="1559.6636">namespace_filter() : void</text><ellipse cx="1909.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1918.5" y="1572.4683">~namespace_filter() = default : void</text><ellipse cx="1909.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1918.5" y="1585.2729">match() const : tvl::value_t</text><ellipse cx="1909.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1918.5" y="1598.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3570.5" y="1505.4531"/><ellipse cx="3585.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3588.4688,1527.0938 Q3587.8906,1527.3906 3587.25,1527.5313 Q3586.6094,1527.6875 3585.9063,1527.6875 Q3583.4063,1527.6875 3582.0781,1526.0469 Q3580.7656,1524.3906 3580.7656,1521.2656 Q3580.7656,1518.1406 3582.0781,1516.4844 Q3583.4063,1514.8281 3585.9063,1514.8281 Q3586.6094,1514.8281 3587.25,1514.9844 Q3587.9063,1515.1406 3588.4688,1515.4375 L3588.4688,1518.1563 Q3587.8438,1517.5781 3587.25,1517.3125 Q3586.6563,1517.0313 3586.0313,1517.0313 Q3584.6875,1517.0313 3584,1518.1094 Q3583.3125,1519.1719 3583.3125,1521.2656 Q3583.3125,1523.3594 3584,1524.4375 Q3584.6875,1525.5 3586.0313,1525.5 Q3586.6563,1525.5 3587.25,1525.2344 Q3587.8438,1524.9531 3588.4688,1524.375 L3588.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="3599.5" y="1525.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3571.5" x2="3857.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3576.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3578.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3590.5" y="1551.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3571.5" x2="3857.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="3581.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3590.5" y="1572.4683">element_filter() : void</text><ellipse cx="3581.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3590.5" y="1585.2729">~element_filter() = default : void</text><ellipse cx="3581.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3590.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[97547c2450036638bcec6f72d4b27f74]
class C_0002051668456717902300--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" target="_top" title="element_type_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="element_type_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="3894" y="1505.4531"/><ellipse cx="3909" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3911.9688,1527.0938 Q3911.3906,1527.3906 3910.75,1527.5313 Q3910.1094,1527.6875 3909.4063,1527.6875 Q3906.9063,1527.6875 3905.5781,1526.0469 Q3904.2656,1524.3906 3904.2656,1521.2656 Q3904.2656,1518.1406 3905.5781,1516.4844 Q3906.9063,1514.8281 3909.4063,1514.8281 Q3910.1094,1514.8281 3910.75,1514.9844 Q3911.4063,1515.1406 3911.9688,1515.4375 L3911.9688,1518.1563 Q3911.3438,1517.5781 3910.75,1517.3125 Q3910.1563,1517.0313 3909.5313,1517.0313 Q3908.1875,1517.0313 3907.5,1518.1094 Q3906.8125,1519.1719 3906.8125,1521.2656 Q3906.8125,1523.3594 3907.5,1524.4375 Q3908.1875,1525.5 3909.5313,1525.5 Q3910.1563,1525.5 3910.75,1525.2344 Q3911.3438,1524.9531 3911.9688,1524.375 L3911.9688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="3923" y="1525.6074">clanguml::common::model::element_type_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3895" x2="4214" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3900" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3902" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3914" y="1551.6636">element_types_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3895" x2="4214" y1="1558.2578" y2="1558.2578"/><ellipse cx="3905" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3914" y="1572.4683">element_type_filter() : void</text><ellipse cx="3905" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="3914" y="1585.2729">~element_type_filter() = default : void</text><ellipse cx="3905" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3914" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="4250.5" y="1505.4531"/><ellipse cx="4265.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4268.4688,1527.0938 Q4267.8906,1527.3906 4267.25,1527.5313 Q4266.6094,1527.6875 4265.9063,1527.6875 Q4263.4063,1527.6875 4262.0781,1526.0469 Q4260.7656,1524.3906 4260.7656,1521.2656 Q4260.7656,1518.1406 4262.0781,1516.4844 Q4263.4063,1514.8281 4265.9063,1514.8281 Q4266.6094,1514.8281 4267.25,1514.9844 Q4267.9063,1515.1406 4268.4688,1515.4375 L4268.4688,1518.1563 Q4267.8438,1517.5781 4267.25,1517.3125 Q4266.6563,1517.0313 4266.0313,1517.0313 Q4264.6875,1517.0313 4264,1518.1094 Q4263.3125,1519.1719 4263.3125,1521.2656 Q4263.3125,1523.3594 4264,1524.4375 Q4264.6875,1525.5 4266.0313,1525.5 Q4266.6563,1525.5 4267.25,1525.2344 Q4267.8438,1524.9531 4268.4688,1524.375 L4268.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="4279.5" y="1525.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4251.5" x2="4541.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4256.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4258.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4270.5" y="1551.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4251.5" x2="4541.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="4261.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4270.5" y="1572.4683">subclass_filter() : void</text><ellipse cx="4261.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4270.5" y="1585.2729">~subclass_filter() = default : void</text><ellipse cx="4261.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4270.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="4577.5" y="1505.4531"/><ellipse cx="4592.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4595.4688,1527.0938 Q4594.8906,1527.3906 4594.25,1527.5313 Q4593.6094,1527.6875 4592.9063,1527.6875 Q4590.4063,1527.6875 4589.0781,1526.0469 Q4587.7656,1524.3906 4587.7656,1521.2656 Q4587.7656,1518.1406 4589.0781,1516.4844 Q4590.4063,1514.8281 4592.9063,1514.8281 Q4593.6094,1514.8281 4594.25,1514.9844 Q4594.9063,1515.1406 4595.4688,1515.4375 L4595.4688,1518.1563 Q4594.8438,1517.5781 4594.25,1517.3125 Q4593.6563,1517.0313 4593.0313,1517.0313 Q4591.6875,1517.0313 4591,1518.1094 Q4590.3125,1519.1719 4590.3125,1521.2656 Q4590.3125,1523.3594 4591,1524.4375 Q4591.6875,1525.5 4593.0313,1525.5 Q4593.6563,1525.5 4594.25,1525.2344 Q4594.8438,1524.9531 4595.4688,1524.375 L4595.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="4606.5" y="1525.6074">clanguml::common::model::parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4578.5" x2="4862.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4583.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4585.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4597.5" y="1551.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4578.5" x2="4862.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="4588.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4597.5" y="1572.4683">parents_filter() : void</text><ellipse cx="4588.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4597.5" y="1585.2729">~parents_filter() = default : void</text><ellipse cx="4588.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4597.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="4899" y="1466.9531"/><ellipse cx="4914" cy="1482.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4916.9688,1488.5938 Q4916.3906,1488.8906 4915.75,1489.0313 Q4915.1094,1489.1875 4914.4063,1489.1875 Q4911.9063,1489.1875 4910.5781,1487.5469 Q4909.2656,1485.8906 4909.2656,1482.7656 Q4909.2656,1479.6406 4910.5781,1477.9844 Q4911.9063,1476.3281 4914.4063,1476.3281 Q4915.1094,1476.3281 4915.75,1476.4844 Q4916.4063,1476.6406 4916.9688,1476.9375 L4916.9688,1479.6563 Q4916.3438,1479.0781 4915.75,1478.8125 Q4915.1563,1478.5313 4914.5313,1478.5313 Q4913.1875,1478.5313 4912.5,1479.6094 Q4911.8125,1480.6719 4911.8125,1482.7656 Q4911.8125,1484.8594 4912.5,1485.9375 Q4913.1875,1487 4914.5313,1487 Q4915.1563,1487 4915.75,1486.7344 Q4916.3438,1486.4531 4916.9688,1485.875 L4916.9688,1488.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="4928" y="1487.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="5234" y="1463.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5235" y="1476.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4900" x2="5621" y1="1498.9531" y2="1498.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4905" y="1504.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1506.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4919" y="1513.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4905" y="1517.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1519.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4919" y="1525.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4905" y="1530.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1532.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="4919" y="1538.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4905" y="1543.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1545.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4919" y="1551.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4900" x2="5621" y1="1558.1719" y2="1558.1719"/><ellipse cx="4910" cy="1569.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="4919" y="1572.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="4910" cy="1581.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="4919" y="1585.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="4910" cy="1594.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4919" y="1597.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1604.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4919" y="1610.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1617.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4919" y="1623.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4907" y="1630.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4919" y="1636.4058">add_adjacent&lt;C,D&gt;() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="5657" y="1511.9531"/><ellipse cx="5672" cy="1527.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5674.9688,1533.5938 Q5674.3906,1533.8906 5673.75,1534.0313 Q5673.1094,1534.1875 5672.4063,1534.1875 Q5669.9063,1534.1875 5668.5781,1532.5469 Q5667.2656,1530.8906 5667.2656,1527.7656 Q5667.2656,1524.6406 5668.5781,1522.9844 Q5669.9063,1521.3281 5672.4063,1521.3281 Q5673.1094,1521.3281 5673.75,1521.4844 Q5674.4063,1521.6406 5674.9688,1521.9375 L5674.9688,1524.6563 Q5674.3438,1524.0781 5673.75,1523.8125 Q5673.1563,1523.5313 5672.5313,1523.5313 Q5671.1875,1523.5313 5670.5,1524.6094 Q5669.8125,1525.6719 5669.8125,1527.7656 Q5669.8125,1529.8594 5670.5,1530.9375 Q5671.1875,1532 5672.5313,1532 Q5673.1563,1532 5673.75,1531.7344 Q5674.3438,1531.4531 5674.9688,1530.875 L5674.9688,1533.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="5686" y="1532.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5658" x2="5967" y1="1543.9531" y2="1543.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5658" x2="5967" y1="1551.9531" y2="1551.9531"/><ellipse cx="5668" cy="1562.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5677" y="1566.1636">relationship_filter() : void</text><ellipse cx="5668" cy="1575.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5677" y="1578.9683">~relationship_filter() = default : void</text><ellipse cx="5668" cy="1588.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5677" y="1591.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="3254" y="1511.9531"/><ellipse cx="3269" cy="1527.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3271.9688,1533.5938 Q3271.3906,1533.8906 3270.75,1534.0313 Q3270.1094,1534.1875 3269.4063,1534.1875 Q3266.9063,1534.1875 3265.5781,1532.5469 Q3264.2656,1530.8906 3264.2656,1527.7656 Q3264.2656,1524.6406 3265.5781,1522.9844 Q3266.9063,1521.3281 3269.4063,1521.3281 Q3270.1094,1521.3281 3270.75,1521.4844 Q3271.4063,1521.6406 3271.9688,1521.9375 L3271.9688,1524.6563 Q3271.3438,1524.0781 3270.75,1523.8125 Q3270.1563,1523.5313 3269.5313,1523.5313 Q3268.1875,1523.5313 3267.5,1524.6094 Q3266.8125,1525.6719 3266.8125,1527.7656 Q3266.8125,1529.8594 3267.5,1530.9375 Q3268.1875,1532 3269.5313,1532 Q3270.1563,1532 3270.75,1531.7344 Q3271.3438,1531.4531 3271.9688,1530.875 L3271.9688,1533.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="3283" y="1532.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3255" x2="3534" y1="1543.9531" y2="1543.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3255" x2="3534" y1="1551.9531" y2="1551.9531"/><ellipse cx="3265" cy="1562.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="3274" y="1566.1636">access_filter() : void</text><ellipse cx="3265" cy="1575.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3274" y="1578.9683">~access_filter() = default : void</text><ellipse cx="3265" cy="1588.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3274" y="1591.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="6003.5" y="1505.4531"/><ellipse cx="6018.5" cy="1521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6021.4688,1527.0938 Q6020.8906,1527.3906 6020.25,1527.5313 Q6019.6094,1527.6875 6018.9063,1527.6875 Q6016.4063,1527.6875 6015.0781,1526.0469 Q6013.7656,1524.3906 6013.7656,1521.2656 Q6013.7656,1518.1406 6015.0781,1516.4844 Q6016.4063,1514.8281 6018.9063,1514.8281 Q6019.6094,1514.8281 6020.25,1514.9844 Q6020.9063,1515.1406 6021.4688,1515.4375 L6021.4688,1518.1563 Q6020.8438,1517.5781 6020.25,1517.3125 Q6019.6563,1517.0313 6019.0313,1517.0313 Q6017.6875,1517.0313 6017,1518.1094 Q6016.3125,1519.1719 6016.3125,1521.2656 Q6016.3125,1523.3594 6017,1524.4375 Q6017.6875,1525.5 6019.0313,1525.5 Q6019.6563,1525.5 6020.25,1525.2344 Q6020.8438,1524.9531 6021.4688,1524.375 L6021.4688,1527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="6032.5" y="1525.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6004.5" x2="6286.5" y1="1537.4531" y2="1537.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6009.5" y="1543.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6011.5" y="1545.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6023.5" y="1551.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6004.5" x2="6286.5" y1="1558.2578" y2="1558.2578"/><ellipse cx="6014.5" cy="1569.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="6023.5" y="1572.4683">context_filter() : void</text><ellipse cx="6014.5" cy="1582.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="6023.5" y="1585.2729">~context_filter() = default : void</text><ellipse cx="6014.5" cy="1594.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6023.5" y="1598.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="6323" y="1492.4531"/><ellipse cx="6338" cy="1508.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6340.9688,1514.0938 Q6340.3906,1514.3906 6339.75,1514.5313 Q6339.1094,1514.6875 6338.4063,1514.6875 Q6335.9063,1514.6875 6334.5781,1513.0469 Q6333.2656,1511.3906 6333.2656,1508.2656 Q6333.2656,1505.1406 6334.5781,1503.4844 Q6335.9063,1501.8281 6338.4063,1501.8281 Q6339.1094,1501.8281 6339.75,1501.9844 Q6340.4063,1502.1406 6340.9688,1502.4375 L6340.9688,1505.1563 Q6340.3438,1504.5781 6339.75,1504.3125 Q6339.1563,1504.0313 6338.5313,1504.0313 Q6337.1875,1504.0313 6336.5,1505.1094 Q6335.8125,1506.1719 6335.8125,1508.2656 Q6335.8125,1510.3594 6336.5,1511.4375 Q6337.1875,1512.5 6338.5313,1512.5 Q6339.1563,1512.5 6339.75,1512.2344 Q6340.3438,1511.9531 6340.9688,1511.375 L6340.9688,1514.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="6352" y="1512.6074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6324" x2="6595" y1="1524.4531" y2="1524.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6329" y="1530.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6331" y="1532.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6343" y="1538.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6329" y="1543.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6331" y="1545.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6343" y="1551.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6324" x2="6595" y1="1558.0625" y2="1558.0625"/><ellipse cx="6334" cy="1569.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6343" y="1572.2729">paths_filter() : void</text><ellipse cx="6334" cy="1581.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="6343" y="1585.0776">~paths_filter() = default : void</text><ellipse cx="6334" cy="1594.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6343" y="1597.8823">match() const : tvl::value_t</text><ellipse cx="6334" cy="1607.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6343" y="1610.687">match() const : tvl::value_t</text><!--MD5=[505367997c2b7099e4ddff1763d1acb5]
class C_0001400215772842495226--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L31" target="_top" title="participant" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L31" xlink:show="new" xlink:title="participant" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="137.6328" id="C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="2215.5" y="1866.9531"/><ellipse cx="2299.25" cy="1882.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2302.2188,1888.5938 Q2301.6406,1888.8906 2301,1889.0313 Q2300.3594,1889.1875 2299.6563,1889.1875 Q2297.1563,1889.1875 2295.8281,1887.5469 Q2294.5156,1885.8906 2294.5156,1882.7656 Q2294.5156,1879.6406 2295.8281,1877.9844 Q2297.1563,1876.3281 2299.6563,1876.3281 Q2300.3594,1876.3281 2301,1876.4844 Q2301.6563,1876.6406 2302.2188,1876.9375 L2302.2188,1879.6563 Q2301.5938,1879.0781 2301,1878.8125 Q2300.4063,1878.5313 2299.7813,1878.5313 Q2298.4375,1878.5313 2297.75,1879.6094 Q2297.0625,1880.6719 2297.0625,1882.7656 Q2297.0625,1884.8594 2297.75,1885.9375 Q2298.4375,1887 2299.7813,1887 Q2300.4063,1887 2301,1886.7344 Q2301.5938,1886.4531 2302.2188,1885.875 L2302.2188,1888.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="2319.75" y="1887.1074">participant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2216.5" x2="2458.5" y1="1898.9531" y2="1898.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L55" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L55" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2221.5" y="1904.9531"/><ellipse cx="2226.5" cy="1909.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L55" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L55" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2235.5" y="1913.1636">stereotype_ : participant::stereotype_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2216.5" x2="2458.5" y1="1919.7578" y2="1919.7578"/><ellipse cx="2226.5" cy="1930.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2235.5" y="1933.9683">participant() : void</text><ellipse cx="2226.5" cy="1943.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="2235.5" y="1946.7729">participant() : void</text><ellipse cx="2226.5" cy="1956.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2235.5" y="1959.5776">operator=() : participant &amp;</text><ellipse cx="2226.5" cy="1969.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2235.5" y="1972.3823">operator=() : participant &amp;</text><ellipse cx="2226.5" cy="1981.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2235.5" y="1985.187">type_name() const : std::string</text><ellipse cx="2226.5" cy="1994.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2235.5" y="1997.9917">to_string() const : std::string</text><!--MD5=[b48b235710cc2ee42c2ac80c0af2e984]
class C_0001483671267820004141--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L33" target="_top" title="participant##stereotype_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L33" xlink:show="new" xlink:title="participant##stereotype_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="150.4375" id="C_0001483671267820004141" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="2244" y="1479.9531"/><ellipse cx="2259" cy="1495.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2263.1094,1501.9531 L2255.3906,1501.9531 L2255.3906,1489.5625 L2263.1094,1489.5625 L2263.1094,1491.7188 L2257.8438,1491.7188 L2257.8438,1494.3906 L2262.6094,1494.3906 L2262.6094,1496.5469 L2257.8438,1496.5469 L2257.8438,1499.7969 L2263.1094,1499.7969 L2263.1094,1501.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="2273" y="1500.1074">participant::stereotype_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2245" x2="2430" y1="1511.9531" y2="1511.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2250" y="1526.1636">participant</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="29" x="2250" y="1538.9683">actor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="2250" y="1551.7729">boundary</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2250" y="1564.5776">control</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="2250" y="1577.3823">entity</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="2250" y="1590.187">database</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2250" y="1602.9917">collections</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2250" y="1615.7964">queue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2245" x2="2430" y1="1622.3906" y2="1622.3906"/></a><!--MD5=[b4d475f36669eac2ac4b1a7424da64db]
class C_0000885514871619471610--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L58" target="_top" title="class_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L58" xlink:show="new" xlink:title="class_" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="368.1172" id="C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="2155" y="2446.9531"/><ellipse cx="2255.25" cy="2462.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2258.2188,2468.5938 Q2257.6406,2468.8906 2257,2469.0313 Q2256.3594,2469.1875 2255.6563,2469.1875 Q2253.1563,2469.1875 2251.8281,2467.5469 Q2250.5156,2465.8906 2250.5156,2462.7656 Q2250.5156,2459.6406 2251.8281,2457.9844 Q2253.1563,2456.3281 2255.6563,2456.3281 Q2256.3594,2456.3281 2257,2456.4844 Q2257.6563,2456.6406 2258.2188,2456.9375 L2258.2188,2459.6563 Q2257.5938,2459.0781 2257,2458.8125 Q2256.4063,2458.5313 2255.7813,2458.5313 Q2254.4375,2458.5313 2253.75,2459.6094 Q2253.0625,2460.6719 2253.0625,2462.7656 Q2253.0625,2464.8594 2253.75,2465.9375 Q2254.4375,2467 2255.7813,2467 Q2256.4063,2467 2257,2466.7344 Q2257.5938,2466.4531 2258.2188,2465.875 L2258.2188,2468.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="2275.75" y="2467.1074">class_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2156" x2="2401" y1="2478.9531" y2="2478.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L95" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L95" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2161" y="2484.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2163" y="2486.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L95" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L95" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2175" y="2493.1636">is_struct_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L96" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L96" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2161" y="2497.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2163" y="2499.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L96" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L96" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2175" y="2505.9683">is_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L97" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L97" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2161" y="2510.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2163" y="2512.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L97" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L97" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2175" y="2518.7729">is_template_instantiation_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L98" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L98" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2161" y="2523.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2163" y="2525.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L98" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L98" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2175" y="2531.5776">is_alias_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L99" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L99" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2161" y="2536.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2163" y="2538.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L99" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L99" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2175" y="2544.3823">is_lambda_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L101" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L101" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2161" y="2548.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2163" y="2550.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L101" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L101" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2175" y="2557.187">full_name_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2156" x2="2401" y1="2563.7813" y2="2563.7813"/><ellipse cx="2166" cy="2574.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="2175" y="2577.9917">class_() : void</text><ellipse cx="2166" cy="2587.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="2175" y="2590.7964">class_() : void</text><ellipse cx="2166" cy="2600.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="2175" y="2603.6011">class_() : void</text><ellipse cx="2166" cy="2613.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2175" y="2616.4058">operator=() : class_ &amp;</text><ellipse cx="2166" cy="2626" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2175" y="2629.2104">operator=() : class_ &amp;</text><ellipse cx="2166" cy="2638.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2175" y="2642.0151">type_name() const : std::string</text><ellipse cx="2166" cy="2651.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2175" y="2654.8198">is_struct() const : bool</text><ellipse cx="2166" cy="2664.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="2175" y="2667.6245">is_struct() : void</text><ellipse cx="2166" cy="2677.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2175" y="2680.4292">is_template() const : bool</text><ellipse cx="2166" cy="2690.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2175" y="2693.2339">is_template() : void</text><ellipse cx="2166" cy="2702.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="2175" y="2706.0386">is_template_instantiation() const : bool</text><ellipse cx="2166" cy="2715.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2175" y="2718.8433">is_template_instantiation() : void</text><ellipse cx="2166" cy="2728.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2175" y="2731.6479">full_name() const : std::string</text><ellipse cx="2166" cy="2741.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2175" y="2744.4526">full_name_no_ns() const : std::string</text><ellipse cx="2166" cy="2754.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2175" y="2757.2573">is_abstract() const : bool</text><ellipse cx="2166" cy="2766.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2175" y="2770.062">is_alias() const : bool</text><ellipse cx="2166" cy="2779.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2175" y="2782.8667">is_alias() : void</text><ellipse cx="2166" cy="2792.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2175" y="2795.6714">is_lambda() const : bool</text><ellipse cx="2166" cy="2805.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2175" y="2808.4761">is_lambda() : void</text><!--MD5=[de5a82e666bdb24735685a0a35a357d3]
class C_0001701531547288995691--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L104" target="_top" title="lambda" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L104" xlink:show="new" xlink:title="lambda" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="60.8047" id="C_0001701531547288995691" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="2159.5" y="3275.9531"/><ellipse cx="2233.25" cy="3291.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2236.2188,3297.5938 Q2235.6406,3297.8906 2235,3298.0313 Q2234.3594,3298.1875 2233.6563,3298.1875 Q2231.1563,3298.1875 2229.8281,3296.5469 Q2228.5156,3294.8906 2228.5156,3291.7656 Q2228.5156,3288.6406 2229.8281,3286.9844 Q2231.1563,3285.3281 2233.6563,3285.3281 Q2234.3594,3285.3281 2235,3285.4844 Q2235.6563,3285.6406 2236.2188,3285.9375 L2236.2188,3288.6563 Q2235.5938,3288.0781 2235,3287.8125 Q2234.4063,3287.5313 2233.7813,3287.5313 Q2232.4375,3287.5313 2231.75,3288.6094 Q2231.0625,3289.6719 2231.0625,3291.7656 Q2231.0625,3293.8594 2231.75,3294.9375 Q2232.4375,3296 2233.7813,3296 Q2234.4063,3296 2235,3295.7344 Q2235.5938,3295.4531 2236.2188,3294.875 L2236.2188,3297.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="2253.75" y="3296.1074">lambda</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2160.5" x2="2360.5" y1="3307.9531" y2="3307.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2160.5" x2="2360.5" y1="3315.9531" y2="3315.9531"/><ellipse cx="2170.5" cy="3326.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2179.5" y="3330.1636">type_name() const : std::string</text></a><!--MD5=[fea9086604aaaceeec1cf807579b2064]
class C_0000232638456031681828--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L110" target="_top" title="function" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L110" xlink:show="new" xlink:title="function" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="316.8984" id="C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="2573" y="2472.4531"/><ellipse cx="2710.75" cy="2488.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2713.7188,2494.0938 Q2713.1406,2494.3906 2712.5,2494.5313 Q2711.8594,2494.6875 2711.1563,2494.6875 Q2708.6563,2494.6875 2707.3281,2493.0469 Q2706.0156,2491.3906 2706.0156,2488.2656 Q2706.0156,2485.1406 2707.3281,2483.4844 Q2708.6563,2481.8281 2711.1563,2481.8281 Q2711.8594,2481.8281 2712.5,2481.9844 Q2713.1563,2482.1406 2713.7188,2482.4375 L2713.7188,2485.1563 Q2713.0938,2484.5781 2712.5,2484.3125 Q2711.9063,2484.0313 2711.2813,2484.0313 Q2709.9375,2484.0313 2709.25,2485.1094 Q2708.5625,2486.1719 2708.5625,2488.2656 Q2708.5625,2490.3594 2709.25,2491.4375 Q2709.9375,2492.5 2711.2813,2492.5 Q2711.9063,2492.5 2712.5,2492.2344 Q2713.0938,2491.9531 2713.7188,2491.375 L2713.7188,2494.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="2731.25" y="2492.6074">function</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2574" x2="2907" y1="2504.4531" y2="2504.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L145" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L145" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2579" y="2510.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2581" y="2512.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L145" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L145" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2593" y="2518.6636">is_const_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L146" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L146" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2579" y="2523.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2581" y="2525.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L146" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L146" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2593" y="2531.4683">is_void_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L147" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L147" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2579" y="2536.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2581" y="2538.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L147" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L147" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="2593" y="2544.2729">is_static_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L148" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L148" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2579" y="2548.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2581" y="2550.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L148" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L148" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2593" y="2557.0776">parameters_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2574" x2="2907" y1="2563.6719" y2="2563.6719"/><ellipse cx="2584" cy="2574.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2593" y="2577.8823">function() : void</text><ellipse cx="2584" cy="2587.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2593" y="2590.687">function() : void</text><ellipse cx="2584" cy="2600.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2593" y="2603.4917">function() : void</text><ellipse cx="2584" cy="2613.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2593" y="2616.2964">operator=() : function &amp;</text><ellipse cx="2584" cy="2625.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="2593" y="2629.1011">operator=() : function &amp;</text><ellipse cx="2584" cy="2638.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2593" y="2641.9058">type_name() const : std::string</text><ellipse cx="2584" cy="2651.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2593" y="2654.7104">full_name() const : std::string</text><ellipse cx="2584" cy="2664.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2593" y="2667.5151">full_name_no_ns() const : std::string</text><ellipse cx="2584" cy="2677.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2593" y="2680.3198">message_name() const : std::string</text><ellipse cx="2584" cy="2689.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2593" y="2693.1245">is_const() const : bool</text><ellipse cx="2584" cy="2702.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2593" y="2705.9292">is_const() : void</text><ellipse cx="2584" cy="2715.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="2593" y="2718.7339">is_void() const : bool</text><ellipse cx="2584" cy="2728.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2593" y="2731.5386">is_void() : void</text><ellipse cx="2584" cy="2741.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2593" y="2744.3433">is_static() const : bool</text><ellipse cx="2584" cy="2753.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2593" y="2757.1479">is_static() : void</text><ellipse cx="2584" cy="2766.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2593" y="2769.9526">add_parameter() : void</text><ellipse cx="2584" cy="2779.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2593" y="2782.7573">parameters() const : const std::vector&lt;std::string&gt; &amp;</text><!--MD5=[127e94f19f834191fca232f5c695c379]
class C_0001521646084824511527--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L111" target="_top" title="function##message_render_mode" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L111" xlink:show="new" xlink:title="function##message_render_mode" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="86.4141" id="C_0001521646084824511527" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="3095" y="1892.9531"/><ellipse cx="3110" cy="1908.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3114.1094,1914.9531 L3106.3906,1914.9531 L3106.3906,1902.5625 L3114.1094,1902.5625 L3114.1094,1904.7188 L3108.8438,1904.7188 L3108.8438,1907.3906 L3113.6094,1907.3906 L3113.6094,1909.5469 L3108.8438,1909.5469 L3108.8438,1912.7969 L3114.1094,1912.7969 L3114.1094,1914.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="205" x="3124" y="1913.1074">function::message_render_mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3096" x2="3331" y1="1924.9531" y2="1924.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="17" x="3101" y="1939.1636">full</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3101" y="1951.9683">abbreviated</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3101" y="1964.7729">no_arguments</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3096" x2="3331" y1="1971.3672" y2="1971.3672"/></a><!--MD5=[78f12b5739bf72f527e2506c0e981f4b]
class C_0000817665972547784504--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L151" target="_top" title="method" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L151" xlink:show="new" xlink:title="method" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="291.2891" id="C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="2667.5" y="3160.9531"/><ellipse cx="2766.25" cy="3176.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2769.2188,3182.5938 Q2768.6406,3182.8906 2768,3183.0313 Q2767.3594,3183.1875 2766.6563,3183.1875 Q2764.1563,3183.1875 2762.8281,3181.5469 Q2761.5156,3179.8906 2761.5156,3176.7656 Q2761.5156,3173.6406 2762.8281,3171.9844 Q2764.1563,3170.3281 2766.6563,3170.3281 Q2767.3594,3170.3281 2768,3170.4844 Q2768.6563,3170.6406 2769.2188,3170.9375 L2769.2188,3173.6563 Q2768.5938,3173.0781 2768,3172.8125 Q2767.4063,3172.5313 2766.7813,3172.5313 Q2765.4375,3172.5313 2764.75,3173.6094 Q2764.0625,3174.6719 2764.0625,3176.7656 Q2764.0625,3178.8594 2764.75,3179.9375 Q2765.4375,3181 2766.7813,3181 Q2767.4063,3181 2768,3180.7344 Q2768.5938,3180.4531 2769.2188,3179.875 L2769.2188,3182.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="2786.75" y="3181.1074">method</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2668.5" x2="2920.5" y1="3192.9531" y2="3192.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L182" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L182" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2673.5" y="3198.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2675.5" y="3200.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L182" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L182" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="2687.5" y="3207.1636">class_id_ : diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L183" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L183" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2673.5" y="3211.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2675.5" y="3213.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L183" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L183" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2687.5" y="3219.9683">method_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L184" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L184" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2673.5" y="3224.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2675.5" y="3226.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L184" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L184" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2687.5" y="3232.7729">class_full_name_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2668.5" x2="2920.5" y1="3239.3672" y2="3239.3672"/><ellipse cx="2678.5" cy="3250.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2687.5" y="3253.5776">method() : void</text><ellipse cx="2678.5" cy="3263.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2687.5" y="3266.3823">method() : void</text><ellipse cx="2678.5" cy="3275.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2687.5" y="3279.187">method() : void</text><ellipse cx="2678.5" cy="3288.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2687.5" y="3291.9917">operator=() : method &amp;</text><ellipse cx="2678.5" cy="3301.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2687.5" y="3304.7964">operator=() : method &amp;</text><ellipse cx="2678.5" cy="3314.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2687.5" y="3317.6011">type_name() const : std::string</text><ellipse cx="2678.5" cy="3327.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2687.5" y="3330.4058">method_name() const : std::string</text><ellipse cx="2678.5" cy="3340" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2687.5" y="3343.2104">alias() const : std::string</text><ellipse cx="2678.5" cy="3352.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2687.5" y="3356.0151">set_method_name() : void</text><ellipse cx="2678.5" cy="3365.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2687.5" y="3368.8198">set_class_id() : void</text><ellipse cx="2678.5" cy="3378.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2687.5" y="3381.6245">set_class_full_name() : void</text><ellipse cx="2678.5" cy="3391.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2687.5" y="3394.4292">class_full_name() const : const auto &amp;</text><ellipse cx="2678.5" cy="3404.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2687.5" y="3407.2339">full_name() const : std::string</text><ellipse cx="2678.5" cy="3416.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2687.5" y="3420.0386">message_name() const : std::string</text><ellipse cx="2678.5" cy="3429.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2687.5" y="3432.8433">class_id() const : diagram_element::id_t</text><ellipse cx="2678.5" cy="3442.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2687.5" y="3445.6479">to_string() const : std::string</text><!--MD5=[32d760b788d79d5e0bfcc0697e979e7d]
class C_0002280191967493310558--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L187" target="_top" title="function_template" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L187" xlink:show="new" xlink:title="function_template" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="163.2422" id="C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="2397" y="3224.9531"/><ellipse cx="2453.75" cy="3240.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2456.7188,3246.5938 Q2456.1406,3246.8906 2455.5,3247.0313 Q2454.8594,3247.1875 2454.1563,3247.1875 Q2451.6563,3247.1875 2450.3281,3245.5469 Q2449.0156,3243.8906 2449.0156,3240.7656 Q2449.0156,3237.6406 2450.3281,3235.9844 Q2451.6563,3234.3281 2454.1563,3234.3281 Q2454.8594,3234.3281 2455.5,3234.4844 Q2456.1563,3234.6406 2456.7188,3234.9375 L2456.7188,3237.6563 Q2456.0938,3237.0781 2455.5,3236.8125 Q2454.9063,3236.5313 2454.2813,3236.5313 Q2452.9375,3236.5313 2452.25,3237.6094 Q2451.5625,3238.6719 2451.5625,3240.7656 Q2451.5625,3242.8594 2452.25,3243.9375 Q2452.9375,3245 2454.2813,3245 Q2454.9063,3245 2455.5,3244.7344 Q2456.0938,3244.4531 2456.7188,3243.875 L2456.7188,3246.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="2474.25" y="3245.1074">function_template</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2398" x2="2631" y1="3256.9531" y2="3256.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2398" x2="2631" y1="3264.9531" y2="3264.9531"/><ellipse cx="2408" cy="3275.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2417" y="3279.1636">function_template() : void</text><ellipse cx="2408" cy="3288.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2417" y="3291.9683">function_template() : void</text><ellipse cx="2408" cy="3301.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2417" y="3304.7729">function_template() : void</text><ellipse cx="2408" cy="3314.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2417" y="3317.5776">operator=() : function_template &amp;</text><ellipse cx="2408" cy="3327.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2417" y="3330.3823">operator=() : function_template &amp;</text><ellipse cx="2408" cy="3339.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2417" y="3343.187">type_name() const : std::string</text><ellipse cx="2408" cy="3352.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2417" y="3355.9917">full_name() const : std::string</text><ellipse cx="2408" cy="3365.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2417" y="3368.7964">full_name_no_ns() const : std::string</text><ellipse cx="2408" cy="3378.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2417" y="3381.6011">message_name() const : std::string</text></a><!--MD5=[d938ea8dcef347175d1d053a93bab664]
class C_0002228653068706235818--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L28" target="_top" title="message" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L28" xlink:show="new" xlink:title="message" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="278.4844" id="C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="2842" y="1415.9531"/><ellipse cx="2997.75" cy="1431.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3000.7188,1437.5938 Q3000.1406,1437.8906 2999.5,1438.0313 Q2998.8594,1438.1875 2998.1563,1438.1875 Q2995.6563,1438.1875 2994.3281,1436.5469 Q2993.0156,1434.8906 2993.0156,1431.7656 Q2993.0156,1428.6406 2994.3281,1426.9844 Q2995.6563,1425.3281 2998.1563,1425.3281 Q2998.8594,1425.3281 2999.5,1425.4844 Q3000.1563,1425.6406 3000.7188,1425.9375 L3000.7188,1428.6563 Q3000.0938,1428.0781 2999.5,1427.8125 Q2998.9063,1427.5313 2998.2813,1427.5313 Q2996.9375,1427.5313 2996.25,1428.6094 Q2995.5625,1429.6719 2995.5625,1431.7656 Q2995.5625,1433.8594 2996.25,1434.9375 Q2996.9375,1436 2998.2813,1436 Q2998.9063,1436 2999.5,1435.7344 Q3000.0938,1435.4531 3000.7188,1434.875 L3000.7188,1437.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="3018.25" y="1436.1074">message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2843" x2="3218" y1="1447.9531" y2="1447.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L56" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L56" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2848" y="1453.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2850" y="1455.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L56" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L56" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2862" y="1462.1636">from_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L58" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L58" xlink:show="new" xlink:title="to_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2848" y="1466.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2850" y="1468.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L58" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L58" xlink:show="new" xlink:title="to_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2862" y="1474.9683">to_ : common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L65" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L65" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2848" y="1479.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2850" y="1481.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L65" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L65" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2862" y="1487.7729">message_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L67" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L67" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2848" y="1492.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2850" y="1494.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L67" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L67" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2862" y="1500.5776">return_type_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2843" x2="3218" y1="1507.1719" y2="1507.1719"/><ellipse cx="2853" cy="1518.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2862" y="1521.3823">message() = default : void</text><ellipse cx="2853" cy="1530.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2862" y="1534.187">message() : void</text><ellipse cx="2853" cy="1543.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2862" y="1546.9917">set_type() : void</text><ellipse cx="2853" cy="1556.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="2862" y="1559.7964">type() const : common::model::message_t</text><ellipse cx="2853" cy="1569.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2862" y="1572.6011">set_from() : void</text><ellipse cx="2853" cy="1582.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2862" y="1585.4058">from() const : common::model::diagram_element::id_t</text><ellipse cx="2853" cy="1595" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="2862" y="1598.2104">set_to() : void</text><ellipse cx="2853" cy="1607.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2862" y="1611.0151">to() const : common::model::diagram_element::id_t</text><ellipse cx="2853" cy="1620.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2862" y="1623.8198">set_message_name() : void</text><ellipse cx="2853" cy="1633.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2862" y="1636.6245">message_name() const : const std::string &amp;</text><ellipse cx="2853" cy="1646.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2862" y="1649.4292">set_return_type() : void</text><ellipse cx="2853" cy="1659.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2862" y="1662.2339">return_type() const : const std::string &amp;</text><ellipse cx="2853" cy="1671.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2862" y="1675.0386">set_message_scope() : void</text><ellipse cx="2853" cy="1684.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="2862" y="1687.8433">message_scope() const : common::model::message_scope_t</text><!--MD5=[1f8594e8e98680e5eb77b5543c1d2d76]
class C_0000460030520790196523--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L28" target="_top" title="activity" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L28" xlink:show="new" xlink:title="activity" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="137.6328" id="C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="2863" y="1104.9531"/><ellipse cx="3004.75" cy="1120.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3007.7188,1126.5938 Q3007.1406,1126.8906 3006.5,1127.0313 Q3005.8594,1127.1875 3005.1563,1127.1875 Q3002.6563,1127.1875 3001.3281,1125.5469 Q3000.0156,1123.8906 3000.0156,1120.7656 Q3000.0156,1117.6406 3001.3281,1115.9844 Q3002.6563,1114.3281 3005.1563,1114.3281 Q3005.8594,1114.3281 3006.5,1114.4844 Q3007.1563,1114.6406 3007.7188,1114.9375 L3007.7188,1117.6563 Q3007.0938,1117.0781 3006.5,1116.8125 Q3005.9063,1116.5313 3005.2813,1116.5313 Q3003.9375,1116.5313 3003.25,1117.6094 Q3002.5625,1118.6719 3002.5625,1120.7656 Q3002.5625,1122.8594 3003.25,1123.9375 Q3003.9375,1125 3005.2813,1125 Q3005.9063,1125 3006.5,1124.7344 Q3007.0938,1124.4531 3007.7188,1123.875 L3007.7188,1126.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="3025.25" y="1125.1074">activity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2864" x2="3197" y1="1136.9531" y2="1136.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L43" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L43" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2869" y="1142.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2871" y="1144.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L43" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L43" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2883" y="1151.1636">from_ : common::model::diagram_element::id_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2864" x2="3197" y1="1157.7578" y2="1157.7578"/><ellipse cx="2874" cy="1168.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2883" y="1171.9683">activity() : void</text><ellipse cx="2874" cy="1181.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2883" y="1184.7729">add_message() : void</text><ellipse cx="2874" cy="1194.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2883" y="1197.5776">messages() : std::vector&lt;message&gt; &amp;</text><ellipse cx="2874" cy="1207.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2883" y="1210.3823">messages() const : const std::vector&lt;message&gt; &amp;</text><ellipse cx="2874" cy="1219.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2883" y="1223.187">set_from() : void</text><ellipse cx="2874" cy="1232.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="2883" y="1235.9917">from() const : common::model::diagram_element::id_t</text><!--MD5=[4ac8ef68b016624e17a7e7cc10156a8f]
class C_0000924044572035510976--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L30" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L30" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#fhg3whrsdnuj0)" height="444.9453" id="C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.5;" width="661" x="2700" y="486.9531"/><ellipse cx="3000.75" cy="502.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3003.7188,508.5938 Q3003.1406,508.8906 3002.5,509.0313 Q3001.8594,509.1875 3001.1563,509.1875 Q2998.6563,509.1875 2997.3281,507.5469 Q2996.0156,505.8906 2996.0156,502.7656 Q2996.0156,499.6406 2997.3281,497.9844 Q2998.6563,496.3281 3001.1563,496.3281 Q3001.8594,496.3281 3002.5,496.4844 Q3003.1563,496.6406 3003.7188,496.9375 L3003.7188,499.6563 Q3003.0938,499.0781 3002.5,498.8125 Q3001.9063,498.5313 3001.2813,498.5313 Q2999.9375,498.5313 2999.25,499.6094 Q2998.5625,500.6719 2998.5625,502.7656 Q2998.5625,504.8594 2999.25,505.9375 Q2999.9375,507 3001.2813,507 Q3001.9063,507 3002.5,506.7344 Q3003.0938,506.4531 3003.7188,505.875 L3003.7188,508.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="3021.25" y="507.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2701" x2="3360" y1="518.9531" y2="518.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L133" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L133" xlink:show="new" xlink:title="started_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2706" y="524.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2708" y="526.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L133" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L133" xlink:show="new" xlink:title="started_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2720" y="533.1636">started_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L140" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L140" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2706" y="537.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2708" y="539.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L140" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L140" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="2720" y="545.9683">active_participants_ : std::set&lt;common::model::diagram_element::id_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2701" x2="3360" y1="552.5625" y2="552.5625"/><ellipse cx="2711" cy="563.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2720" y="566.7729">diagram() = default : void</text><ellipse cx="2711" cy="576.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2720" y="579.5776">diagram() : void</text><ellipse cx="2711" cy="589.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2720" y="592.3823">diagram() = default : void</text><ellipse cx="2711" cy="601.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2720" y="605.187">operator=() : diagram &amp;</text><ellipse cx="2711" cy="614.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2720" y="617.9917">operator=() = default : diagram &amp;</text><ellipse cx="2711" cy="627.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2720" y="630.7964">type() const : common::model::diagram_t</text><ellipse cx="2711" cy="640.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2720" y="643.6011">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="2711" cy="653.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2720" y="656.4058">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="2711" cy="666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2720" y="669.2104">to_alias() const : std::string</text><ellipse cx="2711" cy="678.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2720" y="682.0151">context() const : inja::json</text><ellipse cx="2711" cy="691.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2720" y="694.8198">print() const : void</text><ellipse cx="2711" cy="704.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2720" y="707.6245">add_participant() : void</text><ellipse cx="2711" cy="717.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2720" y="720.4292">add_active_participant() : void</text><ellipse cx="2711" cy="730.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2720" y="733.2339">get_activity() : activity &amp;</text><ellipse cx="2711" cy="742.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2720" y="746.0386">add_message() : void</text><ellipse cx="2711" cy="755.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2720" y="758.8433">add_block_message() : void</text><ellipse cx="2711" cy="768.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2720" y="771.6479">end_block_message() : void</text><ellipse cx="2711" cy="781.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2720" y="784.4526">add_case_stmt_message() : void</text><ellipse cx="2711" cy="794.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="2720" y="797.2573">started() const : bool</text><ellipse cx="2711" cy="806.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2720" y="810.062">started() : void</text><ellipse cx="2711" cy="819.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="2720" y="822.8667">sequences() : std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text><ellipse cx="2711" cy="832.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="2720" y="835.6714">sequences() const : const std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text><ellipse cx="2711" cy="845.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2720" y="848.4761">participants() : std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text><ellipse cx="2711" cy="858.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="2720" y="861.2808">participants() const : const std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text><ellipse cx="2711" cy="870.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="2720" y="874.0854">active_participants() : std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text><ellipse cx="2711" cy="883.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="499" x="2720" y="886.8901">active_participants() const : const std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2708" y="893.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2720" y="899.6948">fold_or_end_block_statement() const : void</text><ellipse cx="2711" cy="909.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2720" y="912.4995">get_participant&lt;T&gt;() : common::optional_ref&lt;T&gt;</text><ellipse cx="2711" cy="922.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2720" y="925.3042">get_participant&lt;T&gt;() : common::optional_ref&lt;T&gt;</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M2819.04,1691.7231 C2820.86,1692.4831 2822.68,1693.2331 2824.5,1693.9531 C2985.17,1757.6031 3038.4,1725.2131 3210.5,1740.9531 C3427.34,1760.7831 3482.51,1752.9031 3699.5,1770.9531 C4222.09,1814.4131 4841.08,1885.2031 5116.24,1917.6831 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2807.07,1686.3731,2810.9181,1692.4717,2818.0276,1691.2651,2814.1795,1685.1666,2807.07,1686.3731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3213.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3223.5" y="1737.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M2616.18,1707.1831 C2619.7,1719.4131 2625.26,1730.9031 2633.5,1740.9531 C2676.6,1793.5331 2724.46,1737.2531 2783.5,1770.9531 C2832.31,1798.8131 2873.54,1848.7531 2899.79,1886.2331 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2613.22,1694.2031,2610.6521,1700.9415,2615.8846,1705.9036,2618.4524,1699.1651,2613.22,1694.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2636.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2646.5" y="1737.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1869.82,818.2331 C2028.5,970.5131 2318.36,1248.6631 2492.62,1415.8831 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1864.93,823.2531,1855.35,804.3531,1874.63,813.1531,1864.93,823.2531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1232.4,1224.4831 C1329.22,1262.2631 1469.86,1312.2231 1597.5,1338.9531 C1748.14,1370.4931 1792.56,1334.2031 1942.5,1368.9531 C1962.92,1373.6831 1966.03,1381.4431 1986.5,1385.9531 C2187.45,1430.2131 2255.14,1345.5831 2448.5,1415.9531 C2454.3,1418.0631 2460.08,1420.4131 2465.82,1422.9631 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1229.69,1230.9331,1213.64,1217.1031,1234.82,1217.9131,1229.69,1230.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1955.59,1347.2231 C1975.66,1362.4631 1997.1,1375.9031 2019.5,1385.9531 C2193.88,1464.1931 2269.05,1350.1431 2448.5,1415.9531 C2454.3,1418.0831 2460.07,1420.4431 2465.8,1423.0031 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1945.22,1339.0931,1947.4759,1345.9423,1954.6659,1346.4942,1952.41,1339.645,1945.22,1339.0931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2022.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2032.5" y="1382.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1768.79,823.9531 C1774.32,879.5931 1781.09,947.6431 1787.18,1008.8331 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1761.82,824.6431,1766.81,804.0431,1775.75,823.2531,1761.82,824.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M2099.63,838.9831 C2075.96,869.8731 2050.25,902.4531 2025.5,931.9531 C2004.29,957.2331 1981.3,983.4231 1958.42,1008.8231 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2094.11,834.6731,2111.8,823.0131,2105.24,843.1631,2094.11,834.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M1446.52,1960.0131 C1413.6,2023.3831 1318.71,2206.0531 1236.31,2364.6631 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1242.28,2368.3731,1226.84,2382.8931,1229.85,2361.9131,1242.28,2368.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1469.1,1662.1931 C1476.73,1682.2731 1483.39,1703.4231 1487.5,1723.9531 C1501.02,1791.5731 1479.45,1872.6531 1466.74,1911.6931 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1464.24,1649.8431,1462.7127,1656.8906,1468.6307,1661.011,1470.158,1653.9635,1464.24,1649.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1493.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="1503.5" y="1737.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M1348.78,1661.9031 C1339.48,1687.4031 1335.29,1714.8331 1342.5,1740.9531 C1361.3,1809.0431 1411.01,1877.2931 1438.87,1911.8131 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1353.73,1649.5531,1347.7877,1653.6384,1349.2733,1660.6948,1355.2156,1656.6095,1353.73,1649.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1345.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="1355.5" y="1737.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M1622.02,1353.1431 C1584.28,1390.1931 1545.96,1427.8231 1512.85,1460.3331 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1617.26,1348.0031,1636.44,1338.9831,1627.07,1357.9931,1617.26,1348.0031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d3aab55902f013c3cb0f0512036c505c]
reverse link C_0000845978329661395972 to C_0002193110380171976294--><path d="M1476.5,3388.8031 C1476.5,3434.5031 1476.5,3490.0031 1476.5,3528.9331 " fill="none" id="C_0000845978329661395972&lt;-C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1476.5,3375.5831,1472.5,3381.5831,1476.5,3387.5831,1480.5,3381.5831,1476.5,3375.5831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1482.5" cy="3491.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="13" x="1489.5" y="3495.02">pr</text><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M1788.23,3097.0731 C1798.53,3157.9431 1807.72,3212.2231 1814.13,3250.1231 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1786.01,3083.9931,1783.0687,3090.5771,1788.0149,3095.8245,1790.9562,3089.2405,1786.01,3083.9931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1796.5" y="3120.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="1806.5" y="3127.02">kind_</text><!--MD5=[7566fda333217dfb046318d35641bbd5]
reverse link C_0000178138562743079529 to C_0000845978329661395972--><path d="M1548.81,3096.4531 C1529.94,3150.9731 1512.89,3200.2531 1500.1,3237.2431 " fill="none" id="C_0000178138562743079529&lt;-C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1553.12,3083.9931,1547.3805,3088.3587,1549.2028,3095.3358,1554.9423,3090.9702,1553.12,3083.9931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1542.5" y="3120.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="1552.5" y="3127.02">context_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M1966.88,2567.5631 C1982.27,2582.6831 1991.5,2603.8131 1991.5,2630.9531 C1991.5,2663.7331 1978.04,2687.7431 1956.52,2702.9731 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1956.52,2558.9331,1958.5657,2565.848,1965.7354,2566.6192,1963.6897,2559.7044,1956.52,2558.9331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1999.5" y="2628.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="2009.5" y="2635.52">template_params_</text><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M1930.49,2036.3631 C1915.64,2076.2431 1897.41,2125.2131 1877.84,2177.7731 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1935.09,2024.0231,1929.2445,2028.2456,1930.8939,2035.2656,1936.7394,2031.0431,1935.09,2024.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1894.5" y="2137.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1904.5" y="2144.02">templates_</text><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M927.39,1960.0131 C943.53,2023.1931 989.95,2204.9431 1030.37,2363.2231 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1037.23,2361.7831,1035.4,2382.8931,1023.67,2365.2431,1037.23,2361.7831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M890.83,1707.0131 C901.29,1784.7331 912.96,1871.4731 918.4,1911.8931 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="889.09,1694.1231,885.9232,1700.6017,890.6855,1706.0166,893.8522,1699.538,889.09,1694.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="897.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="907.5" y="1737.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M578.63,1639.0831 C486.73,1672.3731 387.61,1716.0831 304.5,1770.9531 C254.02,1804.2831 207.44,1856.3531 178.13,1892.8531 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="590.96,1634.6631,583.9619,1632.9235,579.6645,1638.7142,586.6626,1640.4538,590.96,1634.6631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="388.5" y="1737.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1595.97,1249.2531 C1470.95,1295.0931 1309.05,1356.3431 1167.5,1415.9531 C1161.74,1418.3831 1155.92,1420.8531 1150.06,1423.3631 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1593.74,1242.6131,1614.93,1242.3231,1598.55,1255.7631,1593.74,1242.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1074.74,1234.0831 C1043.79,1282.5731 998.72,1353.1531 958.79,1415.6831 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1069.01,1230.0531,1085.68,1216.9631,1080.81,1237.5831,1069.01,1230.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4649.92,423.0931 C4651.05,434.5831 4652.55,445.9331 4654.5,456.9531 C4666.4,524.1331 4694.89,596.9431 4717.04,646.8431 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4648.8,410.0831,4645.3288,416.4038,4649.8282,422.039,4653.2994,415.7183,4648.8,410.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4657.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4667.5" y="453.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4738.98,646.9031 C4731.97,592.3331 4720.65,510.5731 4707.5,439.9531 C4705.99,431.8431 4704.39,423.5731 4702.72,415.2231 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4701.67,410.0231,4699.5235,419.6352,4702.6561,414.9249,4707.3664,418.0575,4701.67,410.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4713.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4723.5" y="453.02">diagram_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4772.81,784.6731 C4789.76,834.3831 4811.37,901.5431 4826.5,961.9531 C4836.05,1000.0731 4844.35,1042.6131 4850.81,1079.4531 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4768.49,772.1031,4766.6507,779.0757,4772.3795,783.4553,4774.2188,776.4827,4768.49,772.1031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4834.5" y="968.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4844.5" y="975.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4732.35,785.2231 C4724.89,840.0031 4720.72,915.5531 4739.5,978.9531 C4749.94,1014.1831 4769.01,1049.0131 4789.21,1079.2331 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4734.25,772.1131,4729.4283,777.4752,4732.5234,783.9883,4737.3451,778.6262,4734.25,772.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4742.5" y="968.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="4752.5" y="975.02">exclusive_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M1252.83,1658.7031 C1225.15,1672.4731 1196.11,1684.9331 1167.5,1693.9531 C951.38,1762.0831 865.04,1667.3831 663.5,1770.9531 C629.01,1788.6731 596.19,1814.8431 568.3,1841.0931 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1249.82,1652.3731,1270.81,1649.4831,1256.21,1664.8331,1249.82,1652.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M938.92,1209.2931 C818.74,1242.1231 664.59,1303.8331 573.5,1415.9531 C474.93,1537.2831 468.33,1728.0931 474.82,1841.4231 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="937.15,1202.5231,958.27,1204.1731,940.73,1216.0531,937.15,1202.5231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M5028.76,1184.2731 C5407.78,1207.9931 6336.12,1278.7331 6613.5,1415.9531 C6660.9,1439.4031 6702,1485.2831 6726.97,1517.6831 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5015.52,1183.4431,5021.2624,1187.8049,5027.4972,1184.1818,5021.7548,1179.8201,5015.52,1183.4431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6541.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="6551.5" y="1382.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M6995.12,1495.7031 C6967.58,1467.0831 6930.94,1434.7931 6891.5,1415.9531 C6771.31,1358.5331 6727.5,1386.8231 6595.5,1368.9531 C6012.6,1290.0331 5316.09,1218.9831 5015.62,1189.4531 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7004.1,1505.2331,7002.9006,1498.1225,6995.8756,1496.4947,6997.075,1503.6054,7004.1,1505.2331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6807.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="6817.5" y="1382.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M5035.78,1176.3331 C5458.9,1182.1331 6547.04,1212.3031 6868.5,1368.9531 C6930.67,1399.2431 6982.42,1461.3131 7013.37,1505.1931 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5035.44,1183.3231,5015.53,1176.0631,5035.62,1169.3231,5035.44,1183.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M1965.93,1611.7331 C1833.24,1696.2531 1586.94,1853.1431 1494.66,1911.9231 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1977.24,1604.5331,1970.0304,1604.3858,1967.1215,1610.9842,1974.3311,1611.1315,1977.24,1604.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1777.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="1787.5" y="1737.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M4695.38,1193.0731 C4396.25,1224.6631 3756.49,1291.0131 3215.5,1338.9531 C2995.92,1358.4131 2431.58,1335.1031 2226.5,1415.9531 C2177.18,1435.3931 2130.76,1473.9831 2098.44,1505.4131 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4694.82,1186.0931,4715.45,1190.9531,4696.3,1200.0131,4694.82,1186.0931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M4695.24,1192.1231 C4491.25,1218.0431 4143.61,1279.5031 3876.5,1415.9531 C3832.41,1438.4731 3790.09,1475.2331 3759.77,1505.1431 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4694.42,1185.1731,4715.13,1189.6531,4696.14,1199.0631,4694.42,1185.1731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc75b97331daf477f1c24925190464b7]
reverse link C_0000469458052685692314 to C_0002051668456717902300--><path d="M4696.08,1224.3331 C4565.02,1266.0531 4381.38,1332.3531 4232.5,1415.9531 C4187.84,1441.0331 4142.27,1476.5831 4108.43,1505.3131 " fill="none" id="C_0000469458052685692314&lt;-C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4694.26,1217.5631,4715.44,1218.2231,4698.47,1230.9131,4694.26,1217.5631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M4728.6,1281.0931 C4675.47,1322.7331 4614.32,1371.1831 4559.5,1415.9531 C4523.75,1445.1531 4484.22,1478.5931 4453.04,1505.2331 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4724.39,1275.5031,4744.46,1268.6931,4733.02,1286.5331,4724.39,1275.5031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M4822.4,1287.5931 C4794.68,1360.0731 4760.04,1450.6131 4739.12,1505.2731 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4815.97,1284.8131,4829.66,1268.6431,4829.05,1289.8231,4815.97,1284.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M5260.5,1656.3831 C5260.5,1711.5731 5260.5,1779.7931 5260.5,1834.9131 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5260.5,1643.3831,5256.5,1649.3831,5260.5,1655.3831,5264.5,1649.3831,5260.5,1643.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5263.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="5273.5" y="1737.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M4977.88,1282.7831 C5038.63,1341.0731 5112.68,1412.1231 5169.73,1466.8631 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4972.73,1287.5331,4963.14,1268.6431,4982.42,1277.4331,4972.73,1287.5331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M5752.22,1606.6531 C5719.52,1633.4831 5678.02,1666.4631 5639.5,1693.9531 C5563.81,1747.9731 5476.4,1803.9531 5404.61,1848.3531 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5762.51,1598.1731,5755.3361,1598.905,5753.2525,1605.8085,5760.4264,1605.0767,5762.51,1598.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5592.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="5602.5" y="1737.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M5035.42,1208.7031 C5197.17,1245.1831 5444.2,1312.3831 5639.5,1415.9531 C5687.87,1441.6031 5735.99,1481.4531 5769.16,1511.7531 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5033.64,1215.4831,5015.64,1204.3031,5036.68,1201.8131,5033.64,1215.4831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M3398.77,1611.1131 C3398.75,1653.0231 3391.09,1708.7631 3355.5,1740.9531 C3309.42,1782.6331 3132.79,1742.6031 3077.5,1770.9531 C3026.97,1796.8531 2985.6,1847.8931 2959.76,1886.1831 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3398.54,1598.0331,3394.6461,1604.1025,3398.751,1610.0313,3402.6449,1603.9619,3398.54,1598.0331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3372.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3382.5" y="1737.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M4695.18,1177.7531 C4435.95,1188.1131 3932.44,1232.5431 3552.5,1415.9531 C3504.78,1438.9931 3460.26,1480.4231 3430.73,1511.8931 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4695.07,1170.7531,4715.32,1176.9931,4695.59,1184.7431,4695.07,1170.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M5035.57,1185.3331 C5262.81,1204.9031 5673.09,1260.4531 5985.5,1415.9531 C6029.83,1438.0231 6071.9,1475.1931 6101.77,1505.3931 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5034.85,1192.2931,5015.5,1183.6631,5036.01,1178.3431,5034.85,1192.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M5036.01,1191.5431 C5366.72,1225.6631 6082.27,1309.5131 6304.5,1415.9531 C6342.52,1434.1631 6378.16,1464.5531 6405.66,1492.1831 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5034.94,1198.4731,5015.76,1189.4631,5036.37,1184.5431,5034.94,1198.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[62dc895dac1d0c2011f0b281560d3968]
reverse link C_0002069520381434407937 to C_0001400215772842495226--><path d="M1537.47,1661.7431 C1579.58,1692.8831 1629.04,1723.3131 1679.5,1740.9531 C1788.34,1779.0031 2094.23,1719.6631 2197.5,1770.9531 C2239.58,1791.8531 2274.04,1831.6731 2298.25,1866.8431 " fill="none" id="C_0002069520381434407937&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1533.12,1667.2331,1521.41,1649.5731,1541.57,1656.0731,1533.12,1667.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0cbd70298f55c4689e25f50e6b8f6293]
reverse link C_0002077846075979426940 to C_0001400215772842495226--><path d="M1286.41,1210.0431 C1408.7,1243.3231 1567.57,1305.2831 1666.5,1415.9531 C1767.22,1528.6231 1648.13,1647.0031 1766.5,1740.9531 C1841.7,1800.6431 2111.76,1727.7431 2197.5,1770.9531 C2239.29,1792.0131 2273.65,1831.6031 2297.87,1866.6131 " fill="none" id="C_0002077846075979426940&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1284.28,1216.7131,1266.73,1204.8431,1287.85,1203.1831,1284.28,1216.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c27ca2fdb73a42fb9075cd7b8ec5769]
link C_0001483671267820004141 to C_0001400215772842495226--><path d="M2337.5,1630.3831 C2337.5,1693.9431 2337.5,1785.3131 2337.5,1851.3731 " fill="none" id="C_0001483671267820004141-&gt;C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2337.5" cy="1858.7431" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2337.5" x2="2337.5" y1="1850.7431" y2="1866.7431"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2345.5" x2="2329.5" y1="1858.7431" y2="1858.7431"/><!--MD5=[b33f1614e5f0bf4794b27e69905bc927]
reverse link C_0001400215772842495226 to C_0000885514871619471610--><path d="M2330,2025.0931 C2321,2130.7931 2305.68,2310.7331 2294.08,2446.9431 " fill="none" id="C_0001400215772842495226&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2323.04,2024.3131,2331.71,2004.9831,2336.99,2025.5031,2323.04,2024.3131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[419d091341342c34e8d2184e460395cb]
reverse link C_0000464715462505216589 to C_0000885514871619471610--><path d="M2050.5,2040.3431 C2080.6,2081.4231 2112.97,2130.2131 2136.5,2177.9531 C2178.32,2262.7931 2211.23,2362.6231 2234.78,2446.8531 " fill="none" id="C_0000464715462505216589&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2044.75,2044.3431,2038.43,2024.1131,2055.98,2035.9831,2044.75,2044.3431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c90ee8d9e33f78746e08a7fd0729082]
reverse link C_0000885514871619471610 to C_0001701531547288995691--><path d="M2273.07,2835.2031 C2268.82,2994.0331 2263.31,3200.1431 2261.29,3275.8731 " fill="none" id="C_0000885514871619471610&lt;-C_0001701531547288995691" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2266.07,2834.9031,2273.61,2815.1031,2280.07,2835.2831,2266.07,2834.9031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cff630a429a41d6509e30ee5071e7c05]
reverse link C_0001400215772842495226 to C_0000232638456031681828--><path d="M2409.97,2021.1131 C2436.84,2054.2331 2466.58,2093.3031 2490.5,2130.9531 C2560.08,2240.4331 2625.25,2371.8731 2671.6,2472.3631 " fill="none" id="C_0001400215772842495226&lt;-C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2404.32,2025.2631,2397.04,2005.3531,2415.14,2016.3731,2404.32,2025.2631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17864bc9f5069cfed7218d7279f85c47]
link C_0001521646084824511527 to C_0000232638456031681828--><path d="M3184.8,1979.0031 C3121.32,2072.0131 2966,2299.5731 2856.98,2459.3031 " fill="none" id="C_0001521646084824511527-&gt;C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2852.726" cy="2465.5128" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2857.232" x2="2848.22" y1="2458.9025" y2="2472.1231"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2859.3363" x2="2846.1157" y1="2470.0188" y2="2461.0068"/><!--MD5=[aaa21626746a78046d7a511702c30bb7]
reverse link C_0000232638456031681828 to C_0000817665972547784504--><path d="M2754.77,2809.9631 C2763.56,2919.5231 2774.67,3058.1431 2782.91,3160.8931 " fill="none" id="C_0000232638456031681828&lt;-C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2747.78,2810.3531,2753.16,2789.8631,2761.74,2809.2331,2747.78,2810.3531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed3960d209e9f24c5c41aa336e94c692]
reverse link C_0000232638456031681828 to C_0002280191967493310558--><path d="M2681.1,2808.9531 C2635.95,2943.5231 2575.93,3122.3731 2541.63,3224.5931 " fill="none" id="C_0000232638456031681828&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2674.51,2806.5931,2687.51,2789.8631,2687.79,2811.0431,2674.51,2806.5931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43850a4dbbd6500b965033dc7940cfc7]
reverse link C_0000464715462505216589 to C_0002280191967493310558--><path d="M2092.41,2035.7631 C2125.41,2059.0931 2161.81,2082.5231 2197.5,2100.9531 C2290.29,2148.8631 2355.43,2095.4831 2419.5,2177.9531 C2545.97,2340.7431 2528.92,2994.4231 2518.68,3224.6931 " fill="none" id="C_0000464715462505216589&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2088.15,2041.3131,2075.99,2023.9631,2096.32,2029.9531,2088.15,2041.3131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f9f93e1df1c0d799338094cb92c7f29d]
reverse link C_0002228653068706235818 to C_0001623832985137466228--><path d="M2856.95,1702.9731 C2831.93,1725.3331 2806.78,1748.4631 2783.5,1770.9531 C2777.76,1776.5031 2771.96,1782.2131 2766.14,1788.0231 " fill="none" id="C_0002228653068706235818&lt;-C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2866.91,1694.1131,2859.7693,1695.1181,2857.9506,1702.0961,2865.0913,1701.0911,2866.91,1694.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2832.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2842.5" y="1737.02">type_</text><!--MD5=[494ff3f01f33dcda65528de8e47d9150]
reverse link C_0002228653068706235818 to C_0000202859212831973510--><path d="M3226.27,1701.3531 C3246.97,1715.2031 3267.96,1728.6531 3288.5,1740.9531 C3314.42,1756.4731 3324.65,1753.7731 3349.5,1770.9531 C3404.12,1808.7231 3458.61,1863.0931 3491.93,1898.7131 " fill="none" id="C_0002228653068706235818&lt;-C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3215.47,1694.0731,3218.209,1700.7438,3225.42,1700.7811,3222.681,1694.1105,3215.47,1694.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3291.5" y="1730.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="3301.5" y="1737.02">scope_</text><!--MD5=[a67a2b87f33292a603fe6541cbf2f274]
reverse link C_0001073500714379115414 to C_0002228653068706235818--><path d="M2012.07,1201.8131 C2223.46,1234.1231 2556.62,1299.1931 2824.5,1415.9531 C2830.32,1418.4931 2836.15,1421.1931 2841.98,1424.0331 " fill="none" id="C_0001073500714379115414&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2010.74,1208.6931,1992.01,1198.7931,2012.83,1194.8531,2010.74,1208.6931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44f503eb492a62418b7123e16c9b38de]
reverse link C_0000460030520790196523 to C_0002228653068706235818--><path d="M3030.5,1256.1931 C3030.5,1302.6131 3030.5,1362.0931 3030.5,1415.6631 " fill="none" id="C_0000460030520790196523&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3030.5,1243.1531,3026.5,1249.1531,3030.5,1255.1531,3034.5,1249.1531,3030.5,1243.1531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3033.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="3043.5" y="1382.02">messages_</text><!--MD5=[1ec789dad01cc0cf7ca5a35a23b3b940]
reverse link C_0000924044572035510976 to C_0000460030520790196523--><path d="M3030.5,945.4831 C3030.5,1003.9231 3030.5,1062.0531 3030.5,1104.9131 " fill="none" id="C_0000924044572035510976&lt;-C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3030.5,932.2231,3026.5,938.2231,3030.5,944.2231,3034.5,938.2231,3030.5,932.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3033.5" y="968.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="3043.5" y="975.02">sequences_</text><!--MD5=[63e8c813a091a0c9d7ec61cd2b876cc0]
reverse link C_0000924044572035510976 to C_0001400215772842495226--><path d="M2716.03,939.5831 C2520.86,1072.5531 2260.25,1233.9831 2009.5,1338.9531 C1957.99,1360.5131 1925.1,1327.6731 1887.5,1368.9531 C1822.97,1439.8031 1664.06,1418.6431 1880.5,1693.9531 C1970.11,1807.9331 2073.99,1695.0231 2197.5,1770.9531 C2236.41,1794.8731 2270.03,1833.2431 2294.56,1866.8531 " fill="none" id="C_0000924044572035510976&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2727.03,932.0731,2719.8194,932.1545,2717.1211,938.8418,2724.3318,938.7604,2727.03,932.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1890.5" y="1375.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="82" x="1900.5" y="1382.02">participants_</text><!--MD5=[200170a1e068a1e5ab0bc25f74c55d33]
reverse link C_0000197068985320835874 to C_0000924044572035510976--><path d="M4308.6,325.1031 C4028.09,409.2331 3636.7,526.6331 3361.15,609.2831 " fill="none" id="C_0000197068985320835874&lt;-C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4306.59,318.3931,4327.76,319.3531,4310.62,331.8031,4306.59,318.3931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[3359e37b007906b74888278e0c289ade]
link C_0000911024010877522257 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[75812964cfde56821a2d02a114289a47]
@startuml
title clang-uml sequence diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "clanguml::common::model::message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+set_comment() : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : clanguml::common::model::relationship_t
+set_destination() : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : clanguml::common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64{label_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+file_relative() const : const std::string &
+set_file_relative() : void
+line() const : unsigned int
+set_line() : void
+location_id() const : unsigned int
+set_location_id() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55{hash_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : clanguml::common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+type_name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "clanguml::common::model::path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+path() const : const clanguml::common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const clanguml::common::model::namespace_ &
+context() const : inja::json
}
enum "clanguml::common::model::template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
enum "clanguml::common::model::rpqualifier" as C_0002193110380171976294
enum C_0002193110380171976294 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "clanguml::common::model::context" as C_0000845978329661395972
class C_0000845978329661395972 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46{context}]] {
+to_string() const : std::string
+operator==() const : bool
+operator!=() const : bool
+is_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47{is_const}]]]
+is_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48{is_volatile}]]]
+is_ref_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49{is_ref_const}]]]
+is_ref_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50{is_ref_volatile}]]]
}
class "clanguml::common::model::template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67{template_parameter}]] {
{static} +make_template_type() : clanguml::common::model::template_parameter
{static} +make_template_template_type() : clanguml::common::model::template_parameter
{static} +make_non_type_template() : clanguml::common::model::template_parameter
{static} +make_argument() : clanguml::common::model::template_parameter
{static} +make_unexposed_argument() : clanguml::common::model::template_parameter
+set_type() : void
+type() const : std::optional<std::string>
+set_id() : void
+id() const : const std::optional<int64_t> &
+set_name() : void
+name() const : std::optional<std::string>
+set_default_value() : void
+default_value() const : const std::optional<std::string> &
+is_variadic() : void
+is_variadic() const : bool
+calculate_specialization_match() const : int
+is_template_parameter() const : bool
+is_template_parameter() : void
+is_template_template_parameter() const : bool
+is_template_template_parameter() : void
+to_string() const : std::string
+add_template_param() : void
+add_template_param() : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+is_association() const : bool
+is_specialization() const : bool
+is_same_specialization() const : bool
+find_nested_relationships() const : bool
+set_concept_constraint() : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : clanguml::common::model::template_parameter_kind_t
+set_kind() : void
+is_unexposed() const : bool
+set_unexposed() : void
+is_function_template() : void
+is_function_template() const : bool
+is_member_pointer() : void
+is_member_pointer() const : bool
+is_data_pointer() : void
+is_data_pointer() const : bool
+is_array() : void
+is_array() const : bool
+push_context() : void
+deduced_context() const : const std::deque<context> &
+deduced_context() : void
+is_ellipsis() : void
+is_ellipsis() const : bool
+is_noexcept() : void
+is_noexcept() const : bool
-template_parameter() = default : void
-deduced_context_str() const : std::string
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201{is_template_template_parameter_}]]]
-is_ellipsis_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203{is_ellipsis_}]]]
-is_noexcept_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205{is_noexcept_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210{is_function_template_}]]]
-is_data_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212{is_data_pointer_}]]]
-is_member_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214{is_member_pointer_}]]]
-is_array_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216{is_array_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231{is_unexposed_}]]]
}
class "clanguml::common::model::template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params() const : std::ostream &
+set_base_template() : void
+base_template() const : std::string
+add_template() : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+set_implicit() : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+get_element<V=T>() : auto
+get_element_parent<V=T>() : auto
+get_element<V=T>() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : clanguml::common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : clanguml::common::model::source_file &
+operator=() : clanguml::common::model::source_file &
+operator==() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : clanguml::common::model::path<clanguml::common::model::fs_path_sep>
+fs_path() const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get_with_namespace() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : clanguml::common::model::diagram &
+operator=() : clanguml::common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87{complete_}]]]
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L30{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include<T>() : _Bool
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : clanguml::common::model::package &
+operator=() : clanguml::common::model::package &
+type_name() const : std::string
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : clanguml::common::model::filter_t
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "clanguml::common::model::element_type_filter" as C_0002051668456717902300
class C_0002051668456717902300 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130{element_type_filter}]] {
+element_type_filter() : void
+~element_type_filter() = default : void
+match() const : tvl::value_t
-element_types_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138{element_types_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149{roots_}]]]
}
class "clanguml::common::model::parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
+match() const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160{children_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent<C,D>() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302{forward_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354{root_}]]]
}
class "participant" as C_0001400215772842495226
class C_0001400215772842495226 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L31{participant}]] {
+participant() : void
+participant() : void
+operator=() : participant &
+operator=() : participant &
+type_name() const : std::string
+to_string() const : std::string
+stereotype_ : participant::stereotype_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L55{stereotype_}]]]
}
enum "participant::stereotype_t" as C_0001483671267820004141
enum C_0001483671267820004141 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L33{participant##stereotype_t}]] {
participant
actor
boundary
control
entity
database
collections
queue
}
class "class_" as C_0000885514871619471610
class C_0000885514871619471610 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L58{class_}]] {
+class_() : void
+class_() : void
+class_() : void
+operator=() : class_ &
+operator=() : class_ &
+type_name() const : std::string
+is_struct() const : bool
+is_struct() : void
+is_template() const : bool
+is_template() : void
+is_template_instantiation() const : bool
+is_template_instantiation() : void
+full_name() const : std::string
+full_name_no_ns() const : std::string
+is_abstract() const : bool
+is_alias() const : bool
+is_alias() : void
+is_lambda() const : bool
+is_lambda() : void
-is_struct_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L95{is_struct_}]]]
-is_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L96{is_template_}]]]
-is_template_instantiation_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L97{is_template_instantiation_}]]]
-is_alias_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L98{is_alias_}]]]
-is_lambda_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L99{is_lambda_}]]]
-full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L101{full_name_}]]]
}
class "lambda" as C_0001701531547288995691
class C_0001701531547288995691 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L104{lambda}]] {
+type_name() const : std::string
}
class "function" as C_0000232638456031681828
class C_0000232638456031681828 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L110{function}]] {
+function() : void
+function() : void
+function() : void
+operator=() : function &
+operator=() : function &
+type_name() const : std::string
+full_name() const : std::string
+full_name_no_ns() const : std::string
+message_name() const : std::string
+is_const() const : bool
+is_const() : void
+is_void() const : bool
+is_void() : void
+is_static() const : bool
+is_static() : void
+add_parameter() : void
+parameters() const : const std::vector<std::string> &
-is_const_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L145{is_const_}]]]
-is_void_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L146{is_void_}]]]
-is_static_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L147{is_static_}]]]
-parameters_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L148{parameters_}]]]
}
enum "function::message_render_mode" as C_0001521646084824511527
enum C_0001521646084824511527 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L111{function##message_render_mode}]] {
full
abbreviated
no_arguments
}
class "method" as C_0000817665972547784504
class C_0000817665972547784504 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L151{method}]] {
+method() : void
+method() : void
+method() : void
+operator=() : method &
+operator=() : method &
+type_name() const : std::string
+method_name() const : std::string
+alias() const : std::string
+set_method_name() : void
+set_class_id() : void
+set_class_full_name() : void
+class_full_name() const : const auto &
+full_name() const : std::string
+message_name() const : std::string
+class_id() const : diagram_element::id_t
+to_string() const : std::string
-class_id_ : diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L182{class_id_}]]]
-method_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L183{method_name_}]]]
-class_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L184{class_full_name_}]]]
}
class "function_template" as C_0002280191967493310558
class C_0002280191967493310558 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/participant.h#L187{function_template}]] {
+function_template() : void
+function_template() : void
+function_template() : void
+operator=() : function_template &
+operator=() : function_template &
+type_name() const : std::string
+full_name() const : std::string
+full_name_no_ns() const : std::string
+message_name() const : std::string
}
class "message" as C_0002228653068706235818
class C_0002228653068706235818 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L28{message}]] {
+message() = default : void
+message() : void
+set_type() : void
+type() const : common::model::message_t
+set_from() : void
+from() const : common::model::diagram_element::id_t
+set_to() : void
+to() const : common::model::diagram_element::id_t
+set_message_name() : void
+message_name() const : const std::string &
+set_return_type() : void
+return_type() const : const std::string &
+set_message_scope() : void
+message_scope() const : common::model::message_scope_t
-from_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L56{from_}]]]
-to_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L58{to_}]]]
-message_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L65{message_name_}]]]
-return_type_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/message.h#L67{return_type_}]]]
}
class "activity" as C_0000460030520790196523
class C_0000460030520790196523 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L28{activity}]] {
+activity() : void
+add_message() : void
+messages() : std::vector<message> &
+messages() const : const std::vector<message> &
+set_from() : void
+from() const : common::model::diagram_element::id_t
-from_ : common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/activity.h#L43{from_}]]]
}
class "diagram" as C_0000924044572035510976
class C_0000924044572035510976 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L30{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : diagram &
+operator=() = default : diagram &
+type() const : common::model::diagram_t
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+to_alias() const : std::string
+context() const : inja::json
+print() const : void
+add_participant() : void
+add_active_participant() : void
+get_activity() : activity &
+add_message() : void
+add_block_message() : void
+end_block_message() : void
+add_case_stmt_message() : void
+started() const : bool
+started() : void
+sequences() : std::map<common::model::diagram_element::id_t,activity> &
+sequences() const : const std::map<common::model::diagram_element::id_t,activity> &
+participants() : std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> &
+participants() const : const std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> &
+active_participants() : std::set<common::model::diagram_element::id_t> &
+active_participants() const : const std::set<common::model::diagram_element::id_t> &
-fold_or_end_block_statement() const : void
+get_participant<T>() : common::optional_ref<T>
+get_participant<T>() : common::optional_ref<T>
-started_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L133{started_}]]]
-active_participants_ : std::set<common::model::diagram_element::id_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/sequence_diagram/model/diagram.h#L140{active_participants_}]]]
}
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000845978329661395972 o- - C_0002193110380171976294 : +pr
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000845978329661395972 : -context_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0002051668456717902300
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002069520381434407937 <|- - C_0001400215772842495226
C_0002077846075979426940 <|- - C_0001400215772842495226
C_0001483671267820004141 - -+ C_0001400215772842495226
C_0001400215772842495226 <|- - C_0000885514871619471610
C_0000464715462505216589 <|- - C_0000885514871619471610
C_0000885514871619471610 <|- - C_0001701531547288995691
C_0001400215772842495226 <|- - C_0000232638456031681828
C_0001521646084824511527 - -+ C_0000232638456031681828
C_0000232638456031681828 <|- - C_0000817665972547784504
C_0000232638456031681828 <|- - C_0002280191967493310558
C_0000464715462505216589 <|- - C_0002280191967493310558
C_0002228653068706235818 o- - C_0001623832985137466228 : -type_
C_0002228653068706235818 o- - C_0000202859212831973510 : -scope_
C_0001073500714379115414 <|- - C_0002228653068706235818
C_0000460030520790196523 o- - C_0002228653068706235818 : -messages_
C_0000924044572035510976 o- - C_0000460030520790196523 : -sequences_
C_0000924044572035510976 o- - C_0001400215772842495226 : -participants_
C_0000197068985320835874 <|- - C_0000924044572035510976

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>