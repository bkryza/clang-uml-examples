<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1992px" preserveAspectRatio="none" style="width:5792px;height:1992px;" version="1.1" viewBox="0 0 5792 1992" width="5792px" zoomAndPan="magnify"><defs><filter height="300%" id="ff7nucxzn9b31" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="314" x="2743" y="16.708">clang-uml sequence diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="34.5" y="67.4531"/><ellipse cx="49.5" cy="83.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53.6094,89.4531 L45.8906,89.4531 L45.8906,77.0625 L53.6094,77.0625 L53.6094,79.2188 L48.3438,79.2188 L48.3438,81.8906 L53.1094,81.8906 L53.1094,84.0469 L48.3438,84.0469 L48.3438,87.2969 L53.6094,87.2969 L53.6094,89.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="63.5" y="87.6074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35.5" x2="298.5" y1="99.4531" y2="99.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="40.5" y="113.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="40.5" y="126.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="40.5" y="139.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="40.5" y="152.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35.5" x2="298.5" y1="158.6719" y2="158.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="86.4141" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="1993" y="1120.4531"/><ellipse cx="2008" cy="1136.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2012.1094,1142.4531 L2004.3906,1142.4531 L2004.3906,1130.0625 L2012.1094,1130.0625 L2012.1094,1132.2188 L2006.8438,1132.2188 L2006.8438,1134.8906 L2011.6094,1134.8906 L2011.6094,1137.0469 L2006.8438,1137.0469 L2006.8438,1140.2969 L2012.1094,1140.2969 L2012.1094,1142.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="2022" y="1140.6074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1994" x2="2250" y1="1152.4531" y2="1152.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="1999" y="1166.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1999" y="1179.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="1999" y="1192.2729">kPrivate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1994" x2="2250" y1="1198.8672" y2="1198.8672"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="188.8516" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="2944" y="1068.9531"/><ellipse cx="2959" cy="1084.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2963.1094,1090.9531 L2955.3906,1090.9531 L2955.3906,1078.5625 L2963.1094,1078.5625 L2963.1094,1080.7188 L2957.8438,1080.7188 L2957.8438,1083.3906 L2962.6094,1083.3906 L2962.6094,1085.5469 L2957.8438,1085.5469 L2957.8438,1088.7969 L2963.1094,1088.7969 L2963.1094,1090.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="2973" y="1089.1074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2945" x2="3231" y1="1100.9531" y2="1100.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2950" y="1115.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="2950" y="1127.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2950" y="1140.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2950" y="1153.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="2950" y="1166.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="2950" y="1179.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2950" y="1191.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="2950" y="1204.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="2950" y="1217.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="2950" y="1230.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="2950" y="1243.2104">kDependency</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2945" x2="3231" y1="1249.8047" y2="1249.8047"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="73.6094" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="5396.5" y="1907.9531"/><ellipse cx="5411.5" cy="1923.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5415.6094,1929.9531 L5407.8906,1929.9531 L5407.8906,1917.5625 L5415.6094,1917.5625 L5415.6094,1919.7188 L5410.3438,1919.7188 L5410.3438,1922.3906 L5415.1094,1922.3906 L5415.1094,1924.5469 L5410.3438,1924.5469 L5410.3438,1927.7969 L5415.6094,1927.7969 L5415.6094,1929.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="5425.5" y="1928.1074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5397.5" x2="5666.5" y1="1939.9531" y2="1939.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="5402.5" y="1954.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="5402.5" y="1966.9683">kReturn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5397.5" x2="5666.5" y1="1973.5625" y2="1973.5625"/></a><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="768.5" y="1334.9531"/><ellipse cx="900.75" cy="1350.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M903.7188,1356.5938 Q903.1406,1356.8906 902.5,1357.0313 Q901.8594,1357.1875 901.1563,1357.1875 Q898.6563,1357.1875 897.3281,1355.5469 Q896.0156,1353.8906 896.0156,1350.7656 Q896.0156,1347.6406 897.3281,1345.9844 Q898.6563,1344.3281 901.1563,1344.3281 Q901.8594,1344.3281 902.5,1344.4844 Q903.1563,1344.6406 903.7188,1344.9375 L903.7188,1347.6563 Q903.0938,1347.0781 902.5,1346.8125 Q901.9063,1346.5313 901.2813,1346.5313 Q899.9375,1346.5313 899.25,1347.6094 Q898.5625,1348.6719 898.5625,1350.7656 Q898.5625,1352.8594 899.25,1353.9375 Q899.9375,1355 901.2813,1355 Q901.9063,1355 902.5,1354.7344 Q903.0938,1354.4531 903.7188,1353.875 L903.7188,1356.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="921.25" y="1355.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1246.5" y="1331.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1247.5" y="1344.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="769.5" x2="1268.5" y1="1366.9531" y2="1366.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="774.5" y="1372.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="776.5" y="1374.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="788.5" y="1381.1636">path_ : clanguml::common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="769.5" x2="1268.5" y1="1387.7578" y2="1387.7578"/><ellipse cx="779.5" cy="1398.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="788.5" y="1401.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="779.5" cy="1411.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="788.5" y="1414.7729">path&lt;Sep&gt;() : void</text><ellipse cx="779.5" cy="1424.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="788.5" y="1427.5776">path&lt;Sep&gt;() : void</text><ellipse cx="779.5" cy="1437.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="788.5" y="1440.3823">path&lt;Sep&gt;() : void</text><ellipse cx="779.5" cy="1449.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="788.5" y="1453.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="779.5" cy="1462.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="788.5" y="1465.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="779.5" cy="1475.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="788.5" y="1478.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="779.5" cy="1488.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="788.5" y="1491.6011">path&lt;Sep&gt;() : void</text><ellipse cx="779.5" cy="1501.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="788.5" y="1504.4058">path&lt;Sep&gt;() : void</text><ellipse cx="779.5" cy="1514" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="788.5" y="1517.2104">to_string() const : std::string</text><ellipse cx="779.5" cy="1526.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="788.5" y="1530.0151">is_empty() const : bool</text><ellipse cx="779.5" cy="1539.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="788.5" y="1542.8198">size() const : size_t</text><ellipse cx="779.5" cy="1552.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="788.5" y="1555.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="779.5" cy="1565.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="788.5" y="1568.4292">operator|=() : void</text><ellipse cx="779.5" cy="1578.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="788.5" y="1581.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="779.5" cy="1590.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="788.5" y="1594.0386">operator|=() : void</text><ellipse cx="779.5" cy="1603.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="788.5" y="1606.8433">operator[]() : std::string &amp;</text><ellipse cx="779.5" cy="1616.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="788.5" y="1619.6479">operator[]() const : const std::string &amp;</text><ellipse cx="779.5" cy="1629.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="788.5" y="1632.4526">append() : void</text><ellipse cx="779.5" cy="1642.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="788.5" y="1645.2573">append() : void</text><ellipse cx="779.5" cy="1654.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="788.5" y="1658.062">pop_back() : void</text><ellipse cx="779.5" cy="1667.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="788.5" y="1670.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="779.5" cy="1680.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="788.5" y="1683.6714">starts_with() const : bool</text><ellipse cx="779.5" cy="1693.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="788.5" y="1696.4761">ends_with() const : bool</text><ellipse cx="779.5" cy="1706.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="788.5" y="1709.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="779.5" cy="1718.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="788.5" y="1722.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="779.5" cy="1731.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="788.5" y="1734.8901">relative() const : std::string</text><ellipse cx="779.5" cy="1744.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="788.5" y="1747.6948">name() const : std::string</text><ellipse cx="779.5" cy="1757.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="788.5" y="1760.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="779.5" cy="1770.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="788.5" y="1773.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="779.5" cy="1782.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="788.5" y="1786.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="779.5" cy="1795.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="788.5" y="1798.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="779.5" cy="1808.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="788.5" y="1811.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="779.5" cy="1821.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="788.5" y="1824.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="334.5" y="86.4531"/><ellipse cx="349.5" cy="102.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M352.4688,108.0938 Q351.8906,108.3906 351.25,108.5313 Q350.6094,108.6875 349.9063,108.6875 Q347.4063,108.6875 346.0781,107.0469 Q344.7656,105.3906 344.7656,102.2656 Q344.7656,99.1406 346.0781,97.4844 Q347.4063,95.8281 349.9063,95.8281 Q350.6094,95.8281 351.25,95.9844 Q351.9063,96.1406 352.4688,96.4375 L352.4688,99.1563 Q351.8438,98.5781 351.25,98.3125 Q350.6563,98.0313 350.0313,98.0313 Q348.6875,98.0313 348,99.1094 Q347.3125,100.1719 347.3125,102.2656 Q347.3125,104.3594 348,105.4375 Q348.6875,106.5 350.0313,106.5 Q350.6563,106.5 351.25,106.2344 Q351.8438,105.9531 352.4688,105.375 L352.4688,108.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="363.5" y="106.6074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335.5" x2="654.5" y1="118.4531" y2="118.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="340.5" y="124.4531"/><ellipse cx="345.5" cy="129.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="354.5" y="132.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="335.5" x2="654.5" y1="139.2578" y2="139.2578"/><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="176.0469" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="941" y="28.9531"/><ellipse cx="1041.25" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1044.2188,50.5938 Q1043.6406,50.8906 1043,51.0313 Q1042.3594,51.1875 1041.6563,51.1875 Q1039.1563,51.1875 1037.8281,49.5469 Q1036.5156,47.8906 1036.5156,44.7656 Q1036.5156,41.6406 1037.8281,39.9844 Q1039.1563,38.3281 1041.6563,38.3281 Q1042.3594,38.3281 1043,38.4844 Q1043.6563,38.6406 1044.2188,38.9375 L1044.2188,41.6563 Q1043.5938,41.0781 1043,40.8125 Q1042.4063,40.5313 1041.7813,40.5313 Q1040.4375,40.5313 1039.75,41.6094 Q1039.0625,42.6719 1039.0625,44.7656 Q1039.0625,46.8594 1039.75,47.9375 Q1040.4375,49 1041.7813,49 Q1042.4063,49 1043,48.7344 Q1043.5938,48.4531 1044.2188,47.875 L1044.2188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="1061.75" y="49.1074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="942" x2="1442" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="947" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="949" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="961" y="75.1636">comment_ : std::optional&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="942" x2="1442" y1="81.7578" y2="81.7578"/><ellipse cx="952" cy="92.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="961" y="95.9683">skip() const : bool</text><ellipse cx="952" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="961" y="108.7729">skip_relationship() const : bool</text><ellipse cx="952" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="961" y="121.5776">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="952" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="961" y="134.3823">style_spec() const : std::string</text><ellipse cx="952" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="961" y="147.187">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="952" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="961" y="159.9917">add_decorators() : void</text><ellipse cx="952" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="961" y="172.7964">append() : void</text><ellipse cx="952" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="961" y="185.6011">comment() const : std::optional&lt;std::string&gt;</text><ellipse cx="952" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="961" y="198.4058">set_comment() : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="676" y="416.4531"/><ellipse cx="691" cy="432.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M693.9688,438.0938 Q693.3906,438.3906 692.75,438.5313 Q692.1094,438.6875 691.4063,438.6875 Q688.9063,438.6875 687.5781,437.0469 Q686.2656,435.3906 686.2656,432.2656 Q686.2656,429.1406 687.5781,427.4844 Q688.9063,425.8281 691.4063,425.8281 Q692.1094,425.8281 692.75,425.9844 Q693.4063,426.1406 693.9688,426.4375 L693.9688,429.1563 Q693.3438,428.5781 692.75,428.3125 Q692.1563,428.0313 691.5313,428.0313 Q690.1875,428.0313 689.5,429.1094 Q688.8125,430.1719 688.8125,432.2656 Q688.8125,434.3594 689.5,435.4375 Q690.1875,436.5 691.5313,436.5 Q692.1563,436.5 692.75,436.2344 Q693.3438,435.9531 693.9688,435.375 L693.9688,438.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="705" y="436.6074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="677" x2="983" y1="448.4531" y2="448.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="682" y="454.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="684" y="456.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="696" y="462.6636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="677" x2="983" y1="469.2578" y2="469.2578"/><ellipse cx="687" cy="480.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="696" y="483.4683">set_style() : void</text><ellipse cx="687" cy="493.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="696" y="496.2729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="1445.5" y="713.9531"/><ellipse cx="1489.3" cy="729.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1492.2688,735.5938 Q1491.6906,735.8906 1491.05,736.0313 Q1490.4094,736.1875 1489.7063,736.1875 Q1487.2063,736.1875 1485.8781,734.5469 Q1484.5656,732.8906 1484.5656,729.7656 Q1484.5656,726.6406 1485.8781,724.9844 Q1487.2063,723.3281 1489.7063,723.3281 Q1490.4094,723.3281 1491.05,723.4844 Q1491.7063,723.6406 1492.2688,723.9375 L1492.2688,726.6563 Q1491.6438,726.0781 1491.05,725.8125 Q1490.4563,725.5313 1489.8313,725.5313 Q1488.4875,725.5313 1487.8,726.6094 Q1487.1125,727.6719 1487.1125,729.7656 Q1487.1125,731.8594 1487.8,732.9375 Q1488.4875,734 1489.8313,734 Q1490.4563,734 1491.05,733.7344 Q1491.6438,733.4531 1492.2688,732.875 L1492.2688,735.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="1509.7" y="734.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1446.5" x2="1785.5" y1="745.9531" y2="745.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1451.5" y="751.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1453.5" y="753.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1465.5" y="760.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1451.5" y="764.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1453.5" y="766.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1465.5" y="772.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1451.5" y="777.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1453.5" y="779.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1465.5" y="785.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1451.5" y="790.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1453.5" y="792.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1465.5" y="798.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1446.5" x2="1785.5" y1="805.1719" y2="805.1719"/><ellipse cx="1456.5" cy="816.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1465.5" y="819.3823">relationship() : void</text><ellipse cx="1456.5" cy="828.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1465.5" y="832.187">~relationship() = default : void</text><ellipse cx="1456.5" cy="841.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1465.5" y="844.9917">set_type() : void</text><ellipse cx="1456.5" cy="854.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1465.5" y="857.7964">type() const : clanguml::common::model::relationship_t</text><ellipse cx="1456.5" cy="867.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1465.5" y="870.6011">set_destination() : void</text><ellipse cx="1456.5" cy="880.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1465.5" y="883.4058">destination() const : clanguml::common::id_t</text><ellipse cx="1456.5" cy="893" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1465.5" y="896.2104">set_multiplicity_source() : void</text><ellipse cx="1456.5" cy="905.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1465.5" y="909.0151">multiplicity_source() const : std::string</text><ellipse cx="1456.5" cy="918.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1465.5" y="921.8198">set_multiplicity_destination() : void</text><ellipse cx="1456.5" cy="931.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1465.5" y="934.6245">multiplicity_destination() const : std::string</text><ellipse cx="1456.5" cy="944.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1465.5" y="947.4292">set_label() : void</text><ellipse cx="1456.5" cy="957.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1465.5" y="960.2339">label() const : std::string</text><ellipse cx="1456.5" cy="969.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1465.5" y="973.0386">set_access() : void</text><ellipse cx="1456.5" cy="982.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1465.5" y="985.8433">access() const : clanguml::common::model::access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="1427.5" y="294.4531"/><ellipse cx="1472.25" cy="310.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1475.2188,316.0938 Q1474.6406,316.3906 1474,316.5313 Q1473.3594,316.6875 1472.6563,316.6875 Q1470.1563,316.6875 1468.8281,315.0469 Q1467.5156,313.3906 1467.5156,310.2656 Q1467.5156,307.1406 1468.8281,305.4844 Q1470.1563,303.8281 1472.6563,303.8281 Q1473.3594,303.8281 1474,303.9844 Q1474.6563,304.1406 1475.2188,304.4375 L1475.2188,307.1563 Q1474.5938,306.5781 1474,306.3125 Q1473.4063,306.0313 1472.7813,306.0313 Q1471.4375,306.0313 1470.75,307.1094 Q1470.0625,308.1719 1470.0625,310.2656 Q1470.0625,312.3594 1470.75,313.4375 Q1471.4375,314.5 1472.7813,314.5 Q1473.4063,314.5 1474,314.2344 Q1474.5938,313.9531 1475.2188,313.375 L1475.2188,316.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="1492.75" y="314.6074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1428.5" x2="1803.5" y1="326.4531" y2="326.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1433.5" y="332.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1435.5" y="334.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="1447.5" y="340.6636">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1433.5" y="345.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1435.5" y="347.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1447.5" y="353.4683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1433.5" y="358.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1435.5" y="360.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1447.5" y="366.2729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1433.5" y="370.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1435.5" y="372.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1447.5" y="379.0776">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1433.5" y="383.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1435.5" y="385.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="1447.5" y="391.8823">m_nextId : std::atomic_uint64_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1428.5" x2="1803.5" y1="398.4766" y2="398.4766"/><ellipse cx="1438.5" cy="409.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1447.5" y="412.687">diagram_element() : void</text><ellipse cx="1438.5" cy="422.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1447.5" y="425.4917">~diagram_element() = default : void</text><ellipse cx="1438.5" cy="435.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="1447.5" y="438.2964">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="1438.5" cy="447.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1447.5" y="451.1011">set_id() : void</text><ellipse cx="1438.5" cy="460.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1447.5" y="463.9058">alias() const : std::string</text><ellipse cx="1438.5" cy="473.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1447.5" y="476.7104">set_name() : void</text><ellipse cx="1438.5" cy="486.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1447.5" y="489.5151">name() const : std::string</text><ellipse cx="1438.5" cy="499.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1447.5" y="502.3198">full_name() const : std::string</text><ellipse cx="1438.5" cy="511.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1447.5" y="515.1245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1438.5" cy="524.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1447.5" y="527.9292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1438.5" cy="537.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1447.5" y="540.7339">add_relationship() : void</text><ellipse cx="1438.5" cy="550.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1447.5" y="553.5386">append() : void</text><ellipse cx="1438.5" cy="563.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1447.5" y="566.3433">context() const : inja::json</text><ellipse cx="1438.5" cy="575.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1447.5" y="579.1479">is_nested() const : bool</text><ellipse cx="1438.5" cy="588.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1447.5" y="591.9526">nested() : void</text><ellipse cx="1438.5" cy="601.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1447.5" y="604.7573">complete() const : bool</text><ellipse cx="1438.5" cy="614.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1447.5" y="617.562">complete() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="6" y="300.9531"/><ellipse cx="21" cy="316.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,322.5938 Q23.3906,322.8906 22.75,323.0313 Q22.1094,323.1875 21.4063,323.1875 Q18.9063,323.1875 17.5781,321.5469 Q16.2656,319.8906 16.2656,316.7656 Q16.2656,313.6406 17.5781,311.9844 Q18.9063,310.3281 21.4063,310.3281 Q22.1094,310.3281 22.75,310.4844 Q23.4063,310.6406 23.9688,310.9375 L23.9688,313.6563 Q23.3438,313.0781 22.75,312.8125 Q22.1563,312.5313 21.5313,312.5313 Q20.1875,312.5313 19.5,313.6094 Q18.8125,314.6719 18.8125,316.7656 Q18.8125,318.8594 19.5,319.9375 Q20.1875,321 21.5313,321 Q22.1563,321 22.75,320.7344 Q23.3438,320.4531 23.9688,319.875 L23.9688,322.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="35" y="321.1074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="290" y="297.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="291" y="310.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="327" y1="332.9531" y2="332.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="338.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="340.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26" y="347.1636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="327" y1="353.7578" y2="353.7578"/><ellipse cx="17" cy="364.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="26" y="367.9683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="17" cy="377.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="380.7729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="17" cy="390.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="26" y="393.5776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="17" cy="403.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="26" y="406.3823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="17" cy="415.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="26" y="419.187">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="17" cy="428.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26" y="431.9917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="17" cy="441.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="26" y="444.7964">has_element() const : bool</text><ellipse cx="17" cy="454.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="26" y="457.6011">is_empty() const : bool</text><ellipse cx="17" cy="467.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="26" y="470.4058">begin() : auto</text><ellipse cx="17" cy="480" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="483.2104">end() : auto</text><ellipse cx="17" cy="492.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="496.0151">cbegin() const : auto</text><ellipse cx="17" cy="505.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="508.8198">cend() const : auto</text><ellipse cx="17" cy="518.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="26" y="521.6245">begin() const : auto</text><ellipse cx="17" cy="531.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="534.4292">end() const : auto</text><ellipse cx="17" cy="544.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26" y="547.2339">print_tree() : void</text><ellipse cx="17" cy="556.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="26" y="560.0386">add_element() : _Bool</text><ellipse cx="17" cy="569.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="26" y="572.8433">add_element() : _Bool</text><ellipse cx="17" cy="582.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="585.6479">get_element() : auto</text><ellipse cx="17" cy="595.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="598.4526">get_element_parent() : auto</text><ellipse cx="17" cy="608.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="611.2573">get_element() : auto</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="150.4375" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="1090" y="384.4531"/><ellipse cx="1105" cy="400.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1107.9688,406.0938 Q1107.3906,406.3906 1106.75,406.5313 Q1106.1094,406.6875 1105.4063,406.6875 Q1102.9063,406.6875 1101.5781,405.0469 Q1100.2656,403.3906 1100.2656,400.2656 Q1100.2656,397.1406 1101.5781,395.4844 Q1102.9063,393.8281 1105.4063,393.8281 Q1106.1094,393.8281 1106.75,393.9844 Q1107.4063,394.1406 1107.9688,394.4375 L1107.9688,397.1563 Q1107.3438,396.5781 1106.75,396.3125 Q1106.1563,396.0313 1105.5313,396.0313 Q1104.1875,396.0313 1103.5,397.1094 Q1102.8125,398.1719 1102.8125,400.2656 Q1102.8125,402.3594 1103.5,403.4375 Q1104.1875,404.5 1105.5313,404.5 Q1106.1563,404.5 1106.75,404.2344 Q1107.3438,403.9531 1107.9688,403.375 L1107.9688,406.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="1119" y="404.6074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1091" x2="1391" y1="416.4531" y2="416.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1096" y="422.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1098" y="424.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1110" y="430.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1096" y="435.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1098" y="437.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1110" y="443.4683">line_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1091" x2="1391" y1="450.0625" y2="450.0625"/><ellipse cx="1101" cy="461.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1110" y="464.2729">source_location() = default : void</text><ellipse cx="1101" cy="473.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1110" y="477.0776">source_location() : void</text><ellipse cx="1101" cy="486.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1110" y="489.8823">file() const : const std::string &amp;</text><ellipse cx="1101" cy="499.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1110" y="502.687">set_file() : void</text><ellipse cx="1101" cy="512.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1110" y="515.4917">line() const : unsigned int</text><ellipse cx="1101" cy="525.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1110" y="528.2964">set_line() : void</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="990.5" y="1120.4531"/><ellipse cx="1005.5" cy="1136.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1009.6094,1142.4531 L1001.8906,1142.4531 L1001.8906,1130.0625 L1009.6094,1130.0625 L1009.6094,1132.2188 L1004.3438,1132.2188 L1004.3438,1134.8906 L1009.1094,1134.8906 L1009.1094,1137.0469 L1004.3438,1137.0469 L1004.3438,1140.2969 L1009.6094,1140.2969 L1009.6094,1142.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="1019.5" y="1140.6074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="991.5" x2="1270.5" y1="1152.4531" y2="1152.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="996.5" y="1166.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="996.5" y="1179.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="996.5" y="1192.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="991.5" x2="1270.5" y1="1198.8672" y2="1198.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="363" y="428.9531"/><ellipse cx="378" cy="444.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.9688,450.5938 Q380.3906,450.8906 379.75,451.0313 Q379.1094,451.1875 378.4063,451.1875 Q375.9063,451.1875 374.5781,449.5469 Q373.2656,447.8906 373.2656,444.7656 Q373.2656,441.6406 374.5781,439.9844 Q375.9063,438.3281 378.4063,438.3281 Q379.1094,438.3281 379.75,438.4844 Q380.4063,438.6406 380.9688,438.9375 L380.9688,441.6563 Q380.3438,441.0781 379.75,440.8125 Q379.1563,440.5313 378.5313,440.5313 Q377.1875,440.5313 376.5,441.6094 Q375.8125,442.6719 375.8125,444.7656 Q375.8125,446.8594 376.5,447.9375 Q377.1875,449 378.5313,449 Q379.1563,449 379.75,448.7344 Q380.3438,448.4531 380.9688,447.875 L380.9688,450.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="392" y="449.1074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="364" x2="640" y1="460.9531" y2="460.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="369" y="466.9531"/><ellipse cx="374" cy="471.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="383" y="475.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="364" x2="640" y1="481.7578" y2="481.7578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="1307" y="1139.4531"/><ellipse cx="1322" cy="1155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1324.9688,1161.0938 Q1324.3906,1161.3906 1323.75,1161.5313 Q1323.1094,1161.6875 1322.4063,1161.6875 Q1319.9063,1161.6875 1318.5781,1160.0469 Q1317.2656,1158.3906 1317.2656,1155.2656 Q1317.2656,1152.1406 1318.5781,1150.4844 Q1319.9063,1148.8281 1322.4063,1148.8281 Q1323.1094,1148.8281 1323.75,1148.9844 Q1324.4063,1149.1406 1324.9688,1149.4375 L1324.9688,1152.1563 Q1324.3438,1151.5781 1323.75,1151.3125 Q1323.1563,1151.0313 1322.5313,1151.0313 Q1321.1875,1151.0313 1320.5,1152.1094 Q1319.8125,1153.1719 1319.8125,1155.2656 Q1319.8125,1157.3594 1320.5,1158.4375 Q1321.1875,1159.5 1322.5313,1159.5 Q1323.1563,1159.5 1323.75,1159.2344 Q1324.3438,1158.9531 1324.9688,1158.375 L1324.9688,1161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1336" y="1159.6074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="1544" y="1136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="1545" y="1148.5918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1308" x2="1786" y1="1171.4531" y2="1171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1308" x2="1786" y1="1179.4531" y2="1179.4531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="559" x="851.5" y="713.9531"/><ellipse cx="1007.75" cy="729.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1010.7188,735.5938 Q1010.1406,735.8906 1009.5,736.0313 Q1008.8594,736.1875 1008.1563,736.1875 Q1005.6563,736.1875 1004.3281,734.5469 Q1003.0156,732.8906 1003.0156,729.7656 Q1003.0156,726.6406 1004.3281,724.9844 Q1005.6563,723.3281 1008.1563,723.3281 Q1008.8594,723.3281 1009.5,723.4844 Q1010.1563,723.6406 1010.7188,723.9375 L1010.7188,726.6563 Q1010.0938,726.0781 1009.5,725.8125 Q1008.9063,725.5313 1008.2813,725.5313 Q1006.9375,725.5313 1006.25,726.6094 Q1005.5625,727.6719 1005.5625,729.7656 Q1005.5625,731.8594 1006.25,732.9375 Q1006.9375,734 1008.2813,734 Q1008.9063,734 1009.5,733.7344 Q1010.0938,733.4531 1010.7188,732.875 L1010.7188,735.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="1028.25" y="734.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="852.5" x2="1409.5" y1="745.9531" y2="745.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="857.5" y="751.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="859.5" y="753.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="871.5" y="760.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="852.5" x2="1409.5" y1="766.7578" y2="766.7578"/><ellipse cx="862.5" cy="777.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="871.5" y="780.9683">source_file() = default : void</text><ellipse cx="862.5" cy="790.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="871.5" y="793.7729">source_file() : void</text><ellipse cx="862.5" cy="803.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="871.5" y="806.5776">set_path() : void</text><ellipse cx="862.5" cy="816.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="871.5" y="819.3823">set_absolute() : void</text><ellipse cx="862.5" cy="828.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="871.5" y="832.187">is_absolute() const : bool</text><ellipse cx="862.5" cy="841.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="871.5" y="844.9917">set_type() : void</text><ellipse cx="862.5" cy="854.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="871.5" y="857.7964">type() const : clanguml::common::model::source_file_t</text><ellipse cx="862.5" cy="867.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="871.5" y="870.6011">source_file() : void</text><ellipse cx="862.5" cy="880.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="871.5" y="883.4058">source_file() = default : void</text><ellipse cx="862.5" cy="893" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="871.5" y="896.2104">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="862.5" cy="905.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="871.5" y="909.0151">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="862.5" cy="918.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="871.5" y="921.8198">operator==() const : bool</text><ellipse cx="862.5" cy="931.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="871.5" y="934.6245">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="862.5" cy="944.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="871.5" y="947.4292">full_name() const : std::string</text><ellipse cx="862.5" cy="957.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="871.5" y="960.2339">full_path() const : clanguml::common::model::path&lt;clanguml::common::model::fs_path_sep&gt;</text><ellipse cx="862.5" cy="969.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="871.5" y="973.0386">add_file() : void</text><ellipse cx="862.5" cy="982.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="871.5" y="985.8433">fs_path() const : std::filesystem::path</text><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="432.5" y="1139.4531"/><ellipse cx="447.5" cy="1155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M450.4688,1161.0938 Q449.8906,1161.3906 449.25,1161.5313 Q448.6094,1161.6875 447.9063,1161.6875 Q445.4063,1161.6875 444.0781,1160.0469 Q442.7656,1158.3906 442.7656,1155.2656 Q442.7656,1152.1406 444.0781,1150.4844 Q445.4063,1148.8281 447.9063,1148.8281 Q448.6094,1148.8281 449.25,1148.9844 Q449.9063,1149.1406 450.4688,1149.4375 L450.4688,1152.1563 Q449.8438,1151.5781 449.25,1151.3125 Q448.6563,1151.0313 448.0313,1151.0313 Q446.6875,1151.0313 446,1152.1094 Q445.3125,1153.1719 445.3125,1155.2656 Q445.3125,1157.3594 446,1158.4375 Q446.6875,1159.5 448.0313,1159.5 Q448.6563,1159.5 449.25,1159.2344 Q449.8438,1158.9531 450.4688,1158.375 L450.4688,1161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="461.5" y="1159.6074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="669.5" y="1136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="670.5" y="1148.5918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="954.5" y1="1171.4531" y2="1171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="954.5" y1="1179.4531" y2="1179.4531"/><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="581" x="4189.5" y="281.9531"/><ellipse cx="4364.75" cy="297.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4364.8594,293.2969 L4363.7031,298.375 L4366.0313,298.375 L4364.8594,293.2969 Z M4363.375,291.0625 L4366.3594,291.0625 L4369.7188,303.4531 L4367.2656,303.4531 L4366.5,300.3906 L4363.2188,300.3906 L4362.4688,303.4531 L4360.0313,303.4531 L4363.375,291.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="4385.25" y="302.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4190.5" x2="4769.5" y1="313.9531" y2="313.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4195.5" y="319.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4197.5" y="321.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4209.5" y="328.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4195.5" y="332.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4197.5" y="334.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4209.5" y="340.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4190.5" x2="4769.5" y1="347.5625" y2="347.5625"/><ellipse cx="4200.5" cy="358.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4209.5" y="361.7729">diagram() : void</text><ellipse cx="4200.5" cy="371.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4209.5" y="374.5776">~diagram() : void</text><ellipse cx="4200.5" cy="384.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="4209.5" y="387.3823">type() const = 0 : clanguml::common::model::diagram_t</text><ellipse cx="4200.5" cy="396.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4209.5" y="400.187">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4200.5" cy="409.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4209.5" y="412.9917">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4200.5" cy="422.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4209.5" y="425.7964">diagram() : void</text><ellipse cx="4200.5" cy="435.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4209.5" y="438.6011">diagram() : void</text><ellipse cx="4200.5" cy="448.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4209.5" y="451.4058">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4200.5" cy="461" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4209.5" y="464.2104">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4200.5" cy="473.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4209.5" y="477.0151">set_name() : void</text><ellipse cx="4200.5" cy="486.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4209.5" y="489.8198">name() const : std::string</text><ellipse cx="4200.5" cy="499.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4209.5" y="502.6245">set_filter() : void</text><ellipse cx="4200.5" cy="512.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4209.5" y="515.4292">set_complete() : void</text><ellipse cx="4200.5" cy="525.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4209.5" y="528.2339">complete() const : bool</text><ellipse cx="4200.5" cy="537.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="541.0386">should_include() const : bool</text><ellipse cx="4200.5" cy="550.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="553.8433">should_include() const : bool</text><ellipse cx="4200.5" cy="563.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="566.6479">should_include() const : bool</text><ellipse cx="4200.5" cy="576.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="579.4526">should_include() const : bool</text><ellipse cx="4200.5" cy="589.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="592.2573">should_include() const : bool</text><ellipse cx="4200.5" cy="601.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="605.062">should_include() const : bool</text><ellipse cx="4200.5" cy="614.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4209.5" y="617.8667">has_element() const : bool</text><ellipse cx="4200.5" cy="627.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4209.5" y="630.6714">should_include() const : bool</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="201.6563" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="352" y="751.9531"/><ellipse cx="468.75" cy="767.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M471.7188,773.5938 Q471.1406,773.8906 470.5,774.0313 Q469.8594,774.1875 469.1563,774.1875 Q466.6563,774.1875 465.3281,772.5469 Q464.0156,770.8906 464.0156,767.7656 Q464.0156,764.6406 465.3281,762.9844 Q466.6563,761.3281 469.1563,761.3281 Q469.8594,761.3281 470.5,761.4844 Q471.1563,761.6406 471.7188,761.9375 L471.7188,764.6563 Q471.0938,764.0781 470.5,763.8125 Q469.9063,763.5313 469.2813,763.5313 Q467.9375,763.5313 467.25,764.6094 Q466.5625,765.6719 466.5625,767.7656 Q466.5625,769.8594 467.25,770.9375 Q467.9375,772 469.2813,772 Q469.9063,772 470.5,771.7344 Q471.0938,771.4531 471.7188,770.875 L471.7188,773.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="489.25" y="772.1074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="353" x2="815" y1="783.9531" y2="783.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="353" x2="815" y1="791.9531" y2="791.9531"/><ellipse cx="363" cy="802.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="372" y="806.1636">element() : void</text><ellipse cx="363" cy="815.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="372" y="818.9683">~element() = default : void</text><ellipse cx="363" cy="828.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="372" y="831.7729">name_and_ns() const : std::string</text><ellipse cx="363" cy="841.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="372" y="844.5776">set_namespace() : void</text><ellipse cx="363" cy="854.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="372" y="857.3823">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="363" cy="866.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="372" y="870.187">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="363" cy="879.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="372" y="882.9917">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="363" cy="892.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="372" y="895.7964">full_name() const : std::string</text><ellipse cx="363" cy="905.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="372" y="908.6011">full_name_no_ns() const : std::string</text><ellipse cx="363" cy="918.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="372" y="921.4058">set_using_namespaces() : void</text><ellipse cx="363" cy="931" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="372" y="934.2104">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="363" cy="943.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="372" y="947.0151">context() const : inja::json</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="176.0469" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="73" y="1075.4531"/><ellipse cx="118.25" cy="1091.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M121.2188,1097.0938 Q120.6406,1097.3906 120,1097.5313 Q119.3594,1097.6875 118.6563,1097.6875 Q116.1563,1097.6875 114.8281,1096.0469 Q113.5156,1094.3906 113.5156,1091.2656 Q113.5156,1088.1406 114.8281,1086.4844 Q116.1563,1084.8281 118.6563,1084.8281 Q119.3594,1084.8281 120,1084.9844 Q120.6563,1085.1406 121.2188,1085.4375 L121.2188,1088.1563 Q120.5938,1087.5781 120,1087.3125 Q119.4063,1087.0313 118.7813,1087.0313 Q117.4375,1087.0313 116.75,1088.1094 Q116.0625,1089.1719 116.0625,1091.2656 Q116.0625,1093.3594 116.75,1094.4375 Q117.4375,1095.5 118.7813,1095.5 Q119.4063,1095.5 120,1095.2344 Q120.5938,1094.9531 121.2188,1094.375 L121.2188,1097.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="138.75" y="1095.6074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="74" x2="396" y1="1107.4531" y2="1107.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="79" y="1113.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="81" y="1115.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="93" y="1121.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="74" x2="396" y1="1128.2578" y2="1128.2578"/><ellipse cx="84" cy="1139.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="93" y="1142.4683">package() : void</text><ellipse cx="84" cy="1152.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="93" y="1155.2729">package() : void</text><ellipse cx="84" cy="1164.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="93" y="1168.0776">package() = default : void</text><ellipse cx="84" cy="1177.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="93" y="1180.8823">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="84" cy="1190.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="93" y="1193.687">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="84" cy="1203.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="93" y="1206.4917">full_name() const : std::string</text><ellipse cx="84" cy="1216.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="93" y="1219.2964">is_deprecated() const : bool</text><ellipse cx="84" cy="1228.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="93" y="1232.1011">set_deprecated() : void</text><ellipse cx="84" cy="1241.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="93" y="1244.9058">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="4029" y="815.9531"/><ellipse cx="4044" cy="831.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4048.1094,837.9531 L4040.3906,837.9531 L4040.3906,825.5625 L4048.1094,825.5625 L4048.1094,827.7188 L4042.8438,827.7188 L4042.8438,830.3906 L4047.6094,830.3906 L4047.6094,832.5469 L4042.8438,832.5469 L4042.8438,835.7969 L4048.1094,835.7969 L4048.1094,837.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="4058" y="836.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4030" x2="4270" y1="847.9531" y2="847.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="4035" y="862.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="4035" y="874.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4030" x2="4270" y1="881.5625" y2="881.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="176.0469" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="3854" y="371.4531"/><ellipse cx="3880.7" cy="387.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3883.6688,393.0938 Q3883.0906,393.3906 3882.45,393.5313 Q3881.8094,393.6875 3881.1063,393.6875 Q3878.6063,393.6875 3877.2781,392.0469 Q3875.9656,390.3906 3875.9656,387.2656 Q3875.9656,384.1406 3877.2781,382.4844 Q3878.6063,380.8281 3881.1063,380.8281 Q3881.8094,380.8281 3882.45,380.9844 Q3883.1063,381.1406 3883.6688,381.4375 L3883.6688,384.1563 Q3883.0438,383.5781 3882.45,383.3125 Q3881.8563,383.0313 3881.2313,383.0313 Q3879.8875,383.0313 3879.2,384.1094 Q3878.5125,385.1719 3878.5125,387.2656 Q3878.5125,389.3594 3879.2,390.4375 Q3879.8875,391.5 3881.2313,391.5 Q3881.8563,391.5 3882.45,391.2344 Q3883.0438,390.9531 3883.6688,390.375 L3883.6688,393.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="3897.3" y="391.6074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3855" x2="4153" y1="403.4531" y2="403.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3855" x2="4153" y1="411.4531" y2="411.4531"/><ellipse cx="3865" cy="422.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3874" y="425.6636">filter_visitor() : void</text><ellipse cx="3865" cy="435.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3874" y="438.4683">~filter_visitor() = default : void</text><ellipse cx="3865" cy="448.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3874" y="451.2729">match() const : tvl::value_t</text><ellipse cx="3865" cy="460.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3874" y="464.0776">match() const : tvl::value_t</text><ellipse cx="3865" cy="473.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3874" y="476.8823">match() const : tvl::value_t</text><ellipse cx="3865" cy="486.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3874" y="489.687">match() const : tvl::value_t</text><ellipse cx="3865" cy="499.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3874" y="502.4917">match() const : tvl::value_t</text><ellipse cx="3865" cy="512.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3874" y="515.2964">is_inclusive() const : bool</text><ellipse cx="3865" cy="524.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3874" y="528.1011">is_exclusive() const : bool</text><ellipse cx="3865" cy="537.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="3874" y="540.9058">type() const : clanguml::common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="4306.5" y="803.4531"/><ellipse cx="4321.5" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4324.4688,825.0938 Q4323.8906,825.3906 4323.25,825.5313 Q4322.6094,825.6875 4321.9063,825.6875 Q4319.4063,825.6875 4318.0781,824.0469 Q4316.7656,822.3906 4316.7656,819.2656 Q4316.7656,816.1406 4318.0781,814.4844 Q4319.4063,812.8281 4321.9063,812.8281 Q4322.6094,812.8281 4323.25,812.9844 Q4323.9063,813.1406 4324.4688,813.4375 L4324.4688,816.1563 Q4323.8438,815.5781 4323.25,815.3125 Q4322.6563,815.0313 4322.0313,815.0313 Q4320.6875,815.0313 4320,816.1094 Q4319.3125,817.1719 4319.3125,819.2656 Q4319.3125,821.3594 4320,822.4375 Q4320.6875,823.5 4322.0313,823.5 Q4322.6563,823.5 4323.25,823.2344 Q4323.8438,822.9531 4324.4688,822.375 L4324.4688,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="4335.5" y="823.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4307.5" x2="4576.5" y1="835.4531" y2="835.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4307.5" x2="4576.5" y1="843.4531" y2="843.4531"/><ellipse cx="4317.5" cy="854.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="4326.5" y="857.6636">anyof_filter() : void</text><ellipse cx="4317.5" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4326.5" y="870.4683">~anyof_filter() = default : void</text><ellipse cx="4317.5" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4326.5" y="883.2729">match() const : tvl::value_t</text><ellipse cx="4317.5" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4326.5" y="896.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1822" y="803.4531"/><ellipse cx="1837" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1839.9688,825.0938 Q1839.3906,825.3906 1838.75,825.5313 Q1838.1094,825.6875 1837.4063,825.6875 Q1834.9063,825.6875 1833.5781,824.0469 Q1832.2656,822.3906 1832.2656,819.2656 Q1832.2656,816.1406 1833.5781,814.4844 Q1834.9063,812.8281 1837.4063,812.8281 Q1838.1094,812.8281 1838.75,812.9844 Q1839.4063,813.1406 1839.9688,813.4375 L1839.9688,816.1563 Q1839.3438,815.5781 1838.75,815.3125 Q1838.1563,815.0313 1837.5313,815.0313 Q1836.1875,815.0313 1835.5,816.1094 Q1834.8125,817.1719 1834.8125,819.2656 Q1834.8125,821.3594 1835.5,822.4375 Q1836.1875,823.5 1837.5313,823.5 Q1838.1563,823.5 1838.75,823.2344 Q1839.3438,822.9531 1839.9688,822.375 L1839.9688,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="1851" y="823.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1823" x2="2131" y1="835.4531" y2="835.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1823" x2="2131" y1="843.4531" y2="843.4531"/><ellipse cx="1833" cy="854.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1842" y="857.6636">namespace_filter() : void</text><ellipse cx="1833" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1842" y="870.4683">~namespace_filter() = default : void</text><ellipse cx="1833" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1842" y="883.2729">match() const : tvl::value_t</text><ellipse cx="1833" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1842" y="896.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4959" y="803.4531"/><ellipse cx="4974" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4976.9688,825.0938 Q4976.3906,825.3906 4975.75,825.5313 Q4975.1094,825.6875 4974.4063,825.6875 Q4971.9063,825.6875 4970.5781,824.0469 Q4969.2656,822.3906 4969.2656,819.2656 Q4969.2656,816.1406 4970.5781,814.4844 Q4971.9063,812.8281 4974.4063,812.8281 Q4975.1094,812.8281 4975.75,812.9844 Q4976.4063,813.1406 4976.9688,813.4375 L4976.9688,816.1563 Q4976.3438,815.5781 4975.75,815.3125 Q4975.1563,815.0313 4974.5313,815.0313 Q4973.1875,815.0313 4972.5,816.1094 Q4971.8125,817.1719 4971.8125,819.2656 Q4971.8125,821.3594 4972.5,822.4375 Q4973.1875,823.5 4974.5313,823.5 Q4975.1563,823.5 4975.75,823.2344 Q4976.3438,822.9531 4976.9688,822.375 L4976.9688,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4988" y="823.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4960" x2="5246" y1="835.4531" y2="835.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4965" y="841.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4967" y="843.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4979" y="849.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4960" x2="5246" y1="856.2578" y2="856.2578"/><ellipse cx="4970" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4979" y="870.4683">element_filter() : void</text><ellipse cx="4970" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4979" y="883.2729">~element_filter() = default : void</text><ellipse cx="4970" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4979" y="896.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="2167" y="803.4531"/><ellipse cx="2182" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2184.9688,825.0938 Q2184.3906,825.3906 2183.75,825.5313 Q2183.1094,825.6875 2182.4063,825.6875 Q2179.9063,825.6875 2178.5781,824.0469 Q2177.2656,822.3906 2177.2656,819.2656 Q2177.2656,816.1406 2178.5781,814.4844 Q2179.9063,812.8281 2182.4063,812.8281 Q2183.1094,812.8281 2183.75,812.9844 Q2184.4063,813.1406 2184.9688,813.4375 L2184.9688,816.1563 Q2184.3438,815.5781 2183.75,815.3125 Q2183.1563,815.0313 2182.5313,815.0313 Q2181.1875,815.0313 2180.5,816.1094 Q2179.8125,817.1719 2179.8125,819.2656 Q2179.8125,821.3594 2180.5,822.4375 Q2181.1875,823.5 2182.5313,823.5 Q2183.1563,823.5 2183.75,823.2344 Q2184.3438,822.9531 2184.9688,822.375 L2184.9688,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="2196" y="823.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2168" x2="2458" y1="835.4531" y2="835.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2173" y="841.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2175" y="843.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2187" y="849.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2168" x2="2458" y1="856.2578" y2="856.2578"/><ellipse cx="2178" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2187" y="870.4683">subclass_filter() : void</text><ellipse cx="2178" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="2187" y="883.2729">~subclass_filter() = default : void</text><ellipse cx="2178" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2187" y="896.0776">match() const : tvl::value_t</text><!--MD5=[017a9910fffd6e456b2b03918511ff35]
class C_0001412380775311155780--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="176.0469" id="C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.5;" width="555" x="2810.5" y="764.9531"/><ellipse cx="2825.5" cy="780.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2828.4688,786.5938 Q2827.8906,786.8906 2827.25,787.0313 Q2826.6094,787.1875 2825.9063,787.1875 Q2823.4063,787.1875 2822.0781,785.5469 Q2820.7656,783.8906 2820.7656,780.7656 Q2820.7656,777.6406 2822.0781,775.9844 Q2823.4063,774.3281 2825.9063,774.3281 Q2826.6094,774.3281 2827.25,774.4844 Q2827.9063,774.6406 2828.4688,774.9375 L2828.4688,777.6563 Q2827.8438,777.0781 2827.25,776.8125 Q2826.6563,776.5313 2826.0313,776.5313 Q2824.6875,776.5313 2824,777.6094 Q2823.3125,778.6719 2823.3125,780.7656 Q2823.3125,782.8594 2824,783.9375 Q2824.6875,785 2826.0313,785 Q2826.6563,785 2827.25,784.7344 Q2827.8438,784.4531 2828.4688,783.875 L2828.4688,786.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="2839.5" y="785.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="223" x="3145.5" y="761.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="221" x="3146.5" y="774.0918">DiagramT,ElementT,MatchOverrideT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2811.5" x2="3364.5" y1="796.9531" y2="796.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2816.5" y="802.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="804.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2830.5" y="811.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2816.5" y="815.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="817.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2830.5" y="823.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2816.5" y="828.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="830.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="2830.5" y="836.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2816.5" y="841.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="843.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2830.5" y="849.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2811.5" x2="3364.5" y1="856.1719" y2="856.1719"/><ellipse cx="2821.5" cy="867.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="2830.5" y="870.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="2821.5" cy="879.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="2830.5" y="883.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="2821.5" cy="892.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2830.5" y="895.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="902.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2830.5" y="908.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="915.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2830.5" y="921.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2818.5" y="928.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2830.5" y="934.4058">add_adjacent() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="4612.5" y="809.9531"/><ellipse cx="4627.5" cy="825.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4630.4688,831.5938 Q4629.8906,831.8906 4629.25,832.0313 Q4628.6094,832.1875 4627.9063,832.1875 Q4625.4063,832.1875 4624.0781,830.5469 Q4622.7656,828.8906 4622.7656,825.7656 Q4622.7656,822.6406 4624.0781,820.9844 Q4625.4063,819.3281 4627.9063,819.3281 Q4628.6094,819.3281 4629.25,819.4844 Q4629.9063,819.6406 4630.4688,819.9375 L4630.4688,822.6563 Q4629.8438,822.0781 4629.25,821.8125 Q4628.6563,821.5313 4628.0313,821.5313 Q4626.6875,821.5313 4626,822.6094 Q4625.3125,823.6719 4625.3125,825.7656 Q4625.3125,827.8594 4626,828.9375 Q4626.6875,830 4628.0313,830 Q4628.6563,830 4629.25,829.7344 Q4629.8438,829.4531 4630.4688,828.875 L4630.4688,831.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="4641.5" y="830.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4613.5" x2="4922.5" y1="841.9531" y2="841.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4613.5" x2="4922.5" y1="849.9531" y2="849.9531"/><ellipse cx="4623.5" cy="860.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4632.5" y="864.1636">relationship_filter() : void</text><ellipse cx="4623.5" cy="873.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4632.5" y="876.9683">~relationship_filter() = default : void</text><ellipse cx="4623.5" cy="886.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4632.5" y="889.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="2494.5" y="809.9531"/><ellipse cx="2509.5" cy="825.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2512.4688,831.5938 Q2511.8906,831.8906 2511.25,832.0313 Q2510.6094,832.1875 2509.9063,832.1875 Q2507.4063,832.1875 2506.0781,830.5469 Q2504.7656,828.8906 2504.7656,825.7656 Q2504.7656,822.6406 2506.0781,820.9844 Q2507.4063,819.3281 2509.9063,819.3281 Q2510.6094,819.3281 2511.25,819.4844 Q2511.9063,819.6406 2512.4688,819.9375 L2512.4688,822.6563 Q2511.8438,822.0781 2511.25,821.8125 Q2510.6563,821.5313 2510.0313,821.5313 Q2508.6875,821.5313 2508,822.6094 Q2507.3125,823.6719 2507.3125,825.7656 Q2507.3125,827.8594 2508,828.9375 Q2508.6875,830 2510.0313,830 Q2510.6563,830 2511.25,829.7344 Q2511.8438,829.4531 2512.4688,828.875 L2512.4688,831.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="2523.5" y="830.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2495.5" x2="2774.5" y1="841.9531" y2="841.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2495.5" x2="2774.5" y1="849.9531" y2="849.9531"/><ellipse cx="2505.5" cy="860.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2514.5" y="864.1636">access_filter() : void</text><ellipse cx="2505.5" cy="873.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2514.5" y="876.9683">~access_filter() = default : void</text><ellipse cx="2505.5" cy="886.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2514.5" y="889.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="3401" y="803.4531"/><ellipse cx="3416" cy="819.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3418.9688,825.0938 Q3418.3906,825.3906 3417.75,825.5313 Q3417.1094,825.6875 3416.4063,825.6875 Q3413.9063,825.6875 3412.5781,824.0469 Q3411.2656,822.3906 3411.2656,819.2656 Q3411.2656,816.1406 3412.5781,814.4844 Q3413.9063,812.8281 3416.4063,812.8281 Q3417.1094,812.8281 3417.75,812.9844 Q3418.4063,813.1406 3418.9688,813.4375 L3418.9688,816.1563 Q3418.3438,815.5781 3417.75,815.3125 Q3417.1563,815.0313 3416.5313,815.0313 Q3415.1875,815.0313 3414.5,816.1094 Q3413.8125,817.1719 3413.8125,819.2656 Q3413.8125,821.3594 3414.5,822.4375 Q3415.1875,823.5 3416.5313,823.5 Q3417.1563,823.5 3417.75,823.2344 Q3418.3438,822.9531 3418.9688,822.375 L3418.9688,825.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="3430" y="823.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3402" x2="3684" y1="835.4531" y2="835.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3407" y="841.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3409" y="843.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3421" y="849.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3402" x2="3684" y1="856.2578" y2="856.2578"/><ellipse cx="3412" cy="867.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3421" y="870.4683">context_filter() : void</text><ellipse cx="3412" cy="880.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="3421" y="883.2729">~context_filter() = default : void</text><ellipse cx="3412" cy="892.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3421" y="896.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="86.4141" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="3720.5" y="809.9531"/><ellipse cx="3735.5" cy="825.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3738.4688,831.5938 Q3737.8906,831.8906 3737.25,832.0313 Q3736.6094,832.1875 3735.9063,832.1875 Q3733.4063,832.1875 3732.0781,830.5469 Q3730.7656,828.8906 3730.7656,825.7656 Q3730.7656,822.6406 3732.0781,820.9844 Q3733.4063,819.3281 3735.9063,819.3281 Q3736.6094,819.3281 3737.25,819.4844 Q3737.9063,819.6406 3738.4688,819.9375 L3738.4688,822.6563 Q3737.8438,822.0781 3737.25,821.8125 Q3736.6563,821.5313 3736.0313,821.5313 Q3734.6875,821.5313 3734,822.6094 Q3733.3125,823.6719 3733.3125,825.7656 Q3733.3125,827.8594 3734,828.9375 Q3734.6875,830 3736.0313,830 Q3736.6563,830 3737.25,829.7344 Q3737.8438,829.4531 3738.4688,828.875 L3738.4688,831.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="3749.5" y="830.1074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3721.5" x2="3992.5" y1="841.9531" y2="841.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3721.5" x2="3992.5" y1="849.9531" y2="849.9531"/><ellipse cx="3731.5" cy="860.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3740.5" y="864.1636">paths_filter() : void</text><ellipse cx="3731.5" cy="873.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="3740.5" y="876.9683">~paths_filter() = default : void</text><ellipse cx="3731.5" cy="886.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3740.5" y="889.7729">match() const : tvl::value_t</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4123" y="54.4531"/><ellipse cx="4138" cy="70.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4140.9688,76.0938 Q4140.3906,76.3906 4139.75,76.5313 Q4139.1094,76.6875 4138.4063,76.6875 Q4135.9063,76.6875 4134.5781,75.0469 Q4133.2656,73.3906 4133.2656,70.2656 Q4133.2656,67.1406 4134.5781,65.4844 Q4135.9063,63.8281 4138.4063,63.8281 Q4139.1094,63.8281 4139.75,63.9844 Q4140.4063,64.1406 4140.9688,64.4375 L4140.9688,67.1563 Q4140.3438,66.5781 4139.75,66.3125 Q4139.1563,66.0313 4138.5313,66.0313 Q4137.1875,66.0313 4136.5,67.1094 Q4135.8125,68.1719 4135.8125,70.2656 Q4135.8125,72.3594 4136.5,73.4375 Q4137.1875,74.5 4138.5313,74.5 Q4139.1563,74.5 4139.75,74.2344 Q4140.3438,73.9531 4140.9688,73.375 L4140.9688,76.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4152" y="74.6074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4124" x2="4410" y1="86.4531" y2="86.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4124" x2="4410" y1="94.4531" y2="94.4531"/><ellipse cx="4134" cy="105.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4143" y="108.6636">diagram_filter() : void</text><ellipse cx="4134" cy="118.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4143" y="121.4683">add_inclusive_filter() : void</text><ellipse cx="4134" cy="131.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4143" y="134.2729">add_exclusive_filter() : void</text><ellipse cx="4134" cy="143.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4143" y="147.0776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4131" y="153.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4143" y="159.8823">init_filters() : void</text><ellipse cx="4134" cy="169.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4143" y="172.687">should_include() : _Bool</text></a><!--MD5=[d938ea8dcef347175d1d053a93bab664]
class C_0002228653068706235818--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L27" target="_top" title="message" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L27" xlink:show="new" xlink:title="message" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="137.6328" id="C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="5434.5" y="1513.9531"/><ellipse cx="5499.25" cy="1529.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5502.2188,1535.5938 Q5501.6406,1535.8906 5501,1536.0313 Q5500.3594,1536.1875 5499.6563,1536.1875 Q5497.1563,1536.1875 5495.8281,1534.5469 Q5494.5156,1532.8906 5494.5156,1529.7656 Q5494.5156,1526.6406 5495.8281,1524.9844 Q5497.1563,1523.3281 5499.6563,1523.3281 Q5500.3594,1523.3281 5501,1523.4844 Q5501.6563,1523.6406 5502.2188,1523.9375 L5502.2188,1526.6563 Q5501.5938,1526.0781 5501,1525.8125 Q5500.4063,1525.5313 5499.7813,1525.5313 Q5498.4375,1525.5313 5497.75,1526.6094 Q5497.0625,1527.6719 5497.0625,1529.7656 Q5497.0625,1531.8594 5497.75,1532.9375 Q5498.4375,1534 5499.7813,1534 Q5500.4063,1534 5501,1533.7344 Q5501.5938,1533.4531 5502.2188,1532.875 L5502.2188,1535.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="5519.75" y="1534.1074">message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5435.5" x2="5628.5" y1="1545.9531" y2="1545.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L29" target="_top" title="from" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L29" xlink:show="new" xlink:title="from" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1551.9531"/><ellipse cx="5445.5" cy="1556.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L29" target="_top" title="from" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L29" xlink:show="new" xlink:title="from" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5454.5" y="1560.1636">from : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L30" target="_top" title="from_usr" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L30" xlink:show="new" xlink:title="from_usr" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1564.7578"/><ellipse cx="5445.5" cy="1569.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L30" target="_top" title="from_usr" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L30" xlink:show="new" xlink:title="from_usr" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5454.5" y="1572.9683">from_usr : std::uint_least64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L31" target="_top" title="to" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L31" xlink:show="new" xlink:title="to" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1577.5625"/><ellipse cx="5445.5" cy="1582.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L31" target="_top" title="to" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L31" xlink:show="new" xlink:title="to" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="5454.5" y="1585.7729">to : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L32" target="_top" title="to_usr" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L32" xlink:show="new" xlink:title="to_usr" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1590.3672"/><ellipse cx="5445.5" cy="1595.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L32" target="_top" title="to_usr" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L32" xlink:show="new" xlink:title="to_usr" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="5454.5" y="1598.5776">to_usr : std::int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L33" target="_top" title="message" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L33" xlink:show="new" xlink:title="message" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1603.1719"/><ellipse cx="5445.5" cy="1608.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L33" target="_top" title="message" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L33" xlink:show="new" xlink:title="message" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5454.5" y="1611.3823">message : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L34" target="_top" title="return_type" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L34" xlink:show="new" xlink:title="return_type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1615.9766"/><ellipse cx="5445.5" cy="1620.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L34" target="_top" title="return_type" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L34" xlink:show="new" xlink:title="return_type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5454.5" y="1624.187">return_type : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L35" target="_top" title="line" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L35" xlink:show="new" xlink:title="line" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5440.5" y="1628.7813"/><ellipse cx="5445.5" cy="1633.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L35" target="_top" title="line" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L35" xlink:show="new" xlink:title="line" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="5454.5" y="1636.9917">line : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5435.5" x2="5628.5" y1="1643.5859" y2="1643.5859"/><!--MD5=[1f8594e8e98680e5eb77b5543c1d2d76]
class C_0000460030520790196523--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L27" target="_top" title="activity" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L27" xlink:show="new" xlink:title="activity" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="73.6094" id="C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.5;" width="162" x="5451" y="1126.4531"/><ellipse cx="5506.25" cy="1142.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5509.2188,1148.0938 Q5508.6406,1148.3906 5508,1148.5313 Q5507.3594,1148.6875 5506.6563,1148.6875 Q5504.1563,1148.6875 5502.8281,1147.0469 Q5501.5156,1145.3906 5501.5156,1142.2656 Q5501.5156,1139.1406 5502.8281,1137.4844 Q5504.1563,1135.8281 5506.6563,1135.8281 Q5507.3594,1135.8281 5508,1135.9844 Q5508.6563,1136.1406 5509.2188,1136.4375 L5509.2188,1139.1563 Q5508.5938,1138.5781 5508,1138.3125 Q5507.4063,1138.0313 5506.7813,1138.0313 Q5505.4375,1138.0313 5504.75,1139.1094 Q5504.0625,1140.1719 5504.0625,1142.2656 Q5504.0625,1144.3594 5504.75,1145.4375 Q5505.4375,1146.5 5506.7813,1146.5 Q5507.4063,1146.5 5508,1146.2344 Q5508.5938,1145.9531 5509.2188,1145.375 L5509.2188,1148.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="5526.75" y="1146.6074">activity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5452" x2="5612" y1="1158.4531" y2="1158.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L28" target="_top" title="usr" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L28" xlink:show="new" xlink:title="usr" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5457" y="1164.4531"/><ellipse cx="5462" cy="1169.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L28" target="_top" title="usr" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L28" xlink:show="new" xlink:title="usr" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5471" y="1172.6636">usr : std::uint_least64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L29" target="_top" title="from" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L29" xlink:show="new" xlink:title="from" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5457" y="1177.2578"/><ellipse cx="5462" cy="1182.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L29" target="_top" title="from" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L29" xlink:show="new" xlink:title="from" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="5471" y="1185.4683">from : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5452" x2="5612" y1="1192.0625" y2="1192.0625"/><!--MD5=[4ac8ef68b016624e17a7e7cc10156a8f]
class C_0000924044572035510976--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L29" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L29" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#ff7nucxzn9b31)" height="176.0469" id="C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.5;" width="499" x="5282.5" y="764.9531"/><ellipse cx="5502.25" cy="780.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5505.2188,786.5938 Q5504.6406,786.8906 5504,787.0313 Q5503.3594,787.1875 5502.6563,787.1875 Q5500.1563,787.1875 5498.8281,785.5469 Q5497.5156,783.8906 5497.5156,780.7656 Q5497.5156,777.6406 5498.8281,775.9844 Q5500.1563,774.3281 5502.6563,774.3281 Q5503.3594,774.3281 5504,774.4844 Q5504.6563,774.6406 5505.2188,774.9375 L5505.2188,777.6563 Q5504.5938,777.0781 5504,776.8125 Q5503.4063,776.5313 5502.7813,776.5313 Q5501.4375,776.5313 5500.75,777.6094 Q5500.0625,778.6719 5500.0625,780.7656 Q5500.0625,782.8594 5500.75,783.9375 Q5501.4375,785 5502.7813,785 Q5503.4063,785 5504,784.7344 Q5504.5938,784.4531 5505.2188,783.875 L5505.2188,786.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5522.75" y="785.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5283.5" x2="5780.5" y1="796.9531" y2="796.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L48" target="_top" title="started" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L48" xlink:show="new" xlink:title="started" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5288.5" y="802.9531"/><ellipse cx="5293.5" cy="807.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L48" target="_top" title="started" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L48" xlink:show="new" xlink:title="started" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5302.5" y="811.1636">started : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5283.5" x2="5780.5" y1="817.7578" y2="817.7578"/><ellipse cx="5293.5" cy="828.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5302.5" y="831.9683">diagram() = default : void</text><ellipse cx="5293.5" cy="841.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5302.5" y="844.7729">diagram() : void</text><ellipse cx="5293.5" cy="854.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5302.5" y="857.5776">diagram() = default : void</text><ellipse cx="5293.5" cy="867.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5302.5" y="870.3823">operator=() : diagram &amp;</text><ellipse cx="5293.5" cy="879.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5302.5" y="883.187">operator=() = default : diagram &amp;</text><ellipse cx="5293.5" cy="892.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="5302.5" y="895.9917">type() const : common::model::diagram_t</text><ellipse cx="5293.5" cy="905.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="5302.5" y="908.7964">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="5293.5" cy="918.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="5302.5" y="921.6011">get() const : clanguml::common::optional_ref&lt;common::model::diagram_element&gt;</text><ellipse cx="5293.5" cy="931.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5302.5" y="934.4058">to_alias() const : std::string</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M1798.82,990.0631 C1800.54,990.7131 1802.27,991.3431 1804,991.9531 C1948.99,1042.9631 2342.76,1000.8031 2495,1021.9531 C2650.36,1043.5331 2824.65,1087.2331 2943.84,1120.2031 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1786.62,985.1031,1790.6701,991.0694,1797.7352,989.6257,1793.6851,983.6593,1786.62,985.1031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2597" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2607" y="1035.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M1797.8,988.0131 C1799.87,989.3331 1801.94,990.6531 1804,991.9531 C1880.03,1039.9031 1970.75,1087.6731 2035.79,1120.3931 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1786.66,980.7831,1789.5165,987.4043,1796.727,987.3142,1793.8705,980.693,1786.66,980.7831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1884" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="1894" y="1035.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1101.61,221.6331 C1089.45,240.6031 1078.83,261.0531 1072,281.9531 C1022.99,431.9231 972.93,514.1631 1072,636.9531 C1173.65,762.9431 1280.39,647.4831 1428,713.9531 C1433.81,716.5731 1439.63,719.3931 1445.41,722.3731 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1095.86,217.6331,1112.88,205.0031,1107.45,225.4831,1095.86,217.6331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M861.68,520.1231 C893.48,573.2931 947.77,648.0831 1018,683.9531 C1099.36,725.5131 1342.28,682.3631 1428,713.9531 C1433.79,716.0931 1439.56,718.4631 1445.29,721.0331 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="855.54,523.4731,851.58,502.6631,867.66,516.4631,855.54,523.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1616,637.7931 C1616,663.3131 1616,689.2631 1616,713.8631 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1616,624.5031,1612,630.5031,1616,636.5031,1620,630.5031,1616,624.5031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1619" y="673.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1629" y="680.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1325.96,217.2531 C1353.65,238.3131 1382.45,260.6331 1409,281.9531 C1415.08,286.8331 1421.23,291.8131 1427.42,296.8731 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1321.52,222.6731,1309.81,205.0131,1329.98,211.5131,1321.52,222.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M1517.86,1187.4931 C1472.14,1223.6531 1379.07,1297.2431 1285.57,1371.1731 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1289.68,1376.8431,1269.65,1383.7631,1281,1365.8631,1289.68,1376.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M1327.8,999.8931 C1400.44,1053.7631 1474.9,1108.9831 1515.62,1139.1831 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1317.1,991.9631,1319.5373,998.7498,1326.7394,999.1103,1324.3021,992.3236,1317.1,991.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1380" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1390" y="1035.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M1131,1005.0831 C1131,1047.4531 1131,1090.1231 1131,1120.3331 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1131,991.9631,1127,997.9631,1131,1003.9631,1135,997.9631,1131,991.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1134" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1144" y="1035.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1411.84,634.6431 C1410.89,635.4131 1409.95,636.1831 1409,636.9531 C1377.98,662.1531 1344.63,688.5231 1312.18,713.8331 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1407.44,629.2031,1427.35,621.9431,1416.31,640.0331,1407.44,629.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M874.83,518.7531 C914.24,570.0231 973.18,646.6831 1024.59,713.5531 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="869.14,522.8431,862.5,502.7231,880.24,514.3131,869.14,522.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1bd93a173dba52ae25f3e9452d57eb86]
reverse link C_0000895261582183440230 to C_0000785714713072053129--><path d="M1214.74,553.9331 C1201.32,601.6631 1184.74,660.6831 1169.88,713.5731 " fill="none" id="C_0000895261582183440230&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1208.03,551.9131,1220.18,534.5531,1221.51,555.7031,1208.03,551.9131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M711.94,1187.4931 C733.39,1215.0531 771.78,1264.3631 814.31,1319.0031 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="819.94,1314.8431,826.7,1334.9231,808.9,1323.4431,819.94,1314.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4442.93,269.5131 C4437.47,257.4031 4431.2,245.7531 4424,234.9531 C4410.05,214.0231 4391.04,195.4131 4371.07,179.5431 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4448.14,281.7631,4449.4797,274.6776,4443.4544,270.7157,4442.1147,277.8013,4448.14,281.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4436" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4446" y="248.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4300.16,179.5731 C4312.86,202.5331 4327.72,228.6531 4342,251.9531 C4347.18,260.4031 4352.54,269.0031 4358.01,277.6531 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4360.7,281.9031,4359.2364,272.1636,4358.0128,277.6866,4352.4899,276.4631,4360.7,281.9031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4345" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4355" y="248.02">diagram_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M582.1,967.2131 C584.56,991.4731 589.35,1016.5331 598,1038.9531 C613.34,1078.7331 645.97,1116.1731 668.92,1139.1731 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="580.99,954.2331,577.5119,960.55,582.0051,966.1901,585.4832,959.8733,580.99,954.2331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="601" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="611" y="1035.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M624.16,966.5831 C646.65,1029.6531 672.71,1102.7531 685.72,1139.2331 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="619.71,954.1131,617.9507,961.1063,623.7293,965.42,625.4886,958.4268,619.71,954.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="652" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="662" y="1035.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M1415.6,633.9131 C1413.41,634.9531 1411.21,635.9731 1409,636.9531 C1173.53,741.9931 1078.85,633.1531 834,713.9531 C804.1,723.8231 773.66,737.2831 744.77,751.9431 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1412.65,627.5531,1433.64,624.6031,1419.07,639.9931,1412.65,627.5531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17fdd0dd15c2164793acaf4e4273a1ea]
reverse link C_0000895261582183440230 to C_0002069520381434407937--><path d="M1133.43,546.7431 C1093.11,577.1431 1046.12,610.3331 1001,636.9531 C930.61,678.4831 906.94,677.0731 834,713.9531 C810.44,725.8631 785.87,738.7931 761.72,751.8031 " fill="none" id="C_0000895261582183440230&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1129.25,541.1331,1149.4,534.5931,1137.73,552.2731,1129.25,541.1331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M455.46,967.5731 C415.23,1003.1331 371.49,1041.8031 333.66,1075.2431 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="451.07,962.1131,470.69,954.1131,460.34,972.6031,451.07,962.1131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M787.77,518.6031 C756.29,557.7931 709.9,607.5231 658,636.9531 C529.25,709.9631 437.81,608.4531 334,713.9531 C239.62,809.8631 226.65,974.2131 228.77,1075.0931 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="782.29,514.2631,800.12,502.8131,793.31,522.8831,782.29,514.2631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M4041.19,560.1831 C4072.37,643.7831 4115.12,758.4331 4136.57,815.9531 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4036.58,547.8231,4034.9279,554.8424,4040.7718,559.0672,4042.4239,552.0479,4036.58,547.8231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4089" y="673.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4099" y="680.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M4382.01,794.5231 C4354.22,768.8831 4320.26,738.9031 4288,713.9531 C4239.05,676.0931 4219.41,676.7231 4172,636.9531 C4139.91,610.0331 4107.52,577.5431 4079.86,547.8131 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4391.57,803.3931,4389.893,796.3797,4382.7741,795.2302,4384.4511,802.2436,4391.57,803.3931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4244" y="673.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="4254" y="680.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M4081.93,562.5131 C4107.81,590.3531 4138.63,618.0231 4172,636.9531 C4224.71,666.8531 4254.23,633.8631 4305,666.9531 C4356.56,700.5631 4395.67,760.6831 4418.64,803.2531 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4076.63,567.0831,4068.47,547.5331,4087.05,557.7231,4076.63,567.0831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M1920.81,911.9731 C1889.28,940.8831 1847.59,973.5231 1804,991.9531 C1462.37,1136.3931 1336.95,997.4131 973,1068.9531 C892.92,1084.6931 804.14,1117.2031 748.7,1139.4131 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1930.68,902.7431,1923.5647,903.9147,1921.9095,910.9333,1929.0248,909.7617,1930.68,902.7431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1711" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="1721" y="1035.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M3833.88,472.0531 C3435.15,501.0931 2451.21,584.0431 2149,713.9531 C2100.99,734.5931 2055.28,772.4531 2023.06,803.3031 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3833.4,465.0631,3853.85,470.6031,3834.41,479.0331,3833.4,465.0631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M4078.4,562.7431 C4104.65,591.4931 4136.57,619.6231 4172,636.9531 C4191.28,646.3831 4921.25,705.5431 4941,713.9531 C4987.74,733.8631 5031,772.1931 5061.04,803.4131 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4073.13,567.3531,4065.2,547.7031,4083.66,558.1131,4073.13,567.3531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M3833.86,477.2431 C3488.31,513.1831 2716.8,603.3931 2477,713.9531 C2431.04,735.1431 2387.63,772.7631 2357.03,803.3831 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3833.38,470.2531,3853.99,475.1631,3834.82,484.1831,3833.38,470.2531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a6800652bce38258685a15b776b4573]
reverse link C_0001412380775311155780 to C_0000229140160180072950--><path d="M3088,954.4331 C3088,991.1931 3088,1032.6131 3088,1068.7531 " fill="none" id="C_0001412380775311155780&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3088,941.1231,3084,947.1231,3088,953.1231,3092,947.1231,3088,941.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3091" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="3101" y="1035.02">relationship_</text><!--MD5=[9f380ab2801284f963616461f482de06]
reverse link C_0000469458052685692314 to C_0001412380775311155780--><path d="M3834.89,526.8331 C3709.48,576.7031 3534.7,647.5631 3383,713.9531 C3346.35,729.9931 3307.43,747.7031 3270.29,764.9431 " fill="none" id="C_0000469458052685692314&lt;-C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3832.63,520.2031,3853.8,519.3231,3837.8,533.2131,3832.63,520.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M4719.09,905.5231 C4686.9,936.0331 4642.12,972.4231 4595,991.9531 C4350.33,1093.3831 3559.47,1140.6931 3232.02,1156.3031 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4728.66,896.2631,4721.5668,897.5618,4720.0374,904.6088,4727.1306,903.3102,4728.66,896.2631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4480" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="4490" y="1035.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M4080.69,562.6731 C4106.69,590.8131 4137.89,618.6131 4172,636.9531 C4238.8,672.8731 4265.37,653.4131 4340,666.9531 C4453.39,687.5231 4490.14,666.1431 4595,713.9531 C4645.69,737.0631 4694.46,778.2631 4727.22,809.6531 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4075.26,567.1131,4067.18,547.5231,4085.71,557.7931,4075.26,567.1131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2583.25,905.1331 C2553.46,932.9331 2514.41,966.6831 2476,991.9531 C2397.21,1043.7831 2300.28,1089.3531 2227.78,1120.3131 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2592.98,895.9531,2585.8702,897.1579,2584.2478,904.1841,2591.3576,902.9793,2592.98,895.9531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2425" y="1028.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2435" y="1035.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M3834.02,468.9731 C3591.32,486.9831 3136.86,542.6631 2793,713.9531 C2745.73,737.5031 2701.32,778.6431 2671.69,809.9031 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3833.53,461.9931,3853.98,467.5431,3834.53,475.9631,3833.53,461.9931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M3884.3,560.7131 C3828.99,607.1731 3762.52,663.2231 3703,713.9531 C3668.38,743.4631 3629.76,776.7531 3599.14,803.2531 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3880.15,555.0631,3899.96,547.5531,3889.15,565.7831,3880.15,555.0631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M3964.16,566.5631 C3934.09,646.6531 3894.42,752.2831 3872.77,809.9431 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3957.61,564.0931,3971.19,547.8231,3970.72,569.0131,3957.61,564.0931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4124.21,186.9531 C4105.09,200.8031 4087.21,216.7831 4073,234.9531 C4042.41,274.0531 4025.31,326.7831 4015.78,371.2031 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4134.95,179.4831,4127.7404,179.6282,4125.1013,186.339,4132.3109,186.194,4134.95,179.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4076" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4086" y="248.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4211.4,189.9331 C4170.51,242.8831 4114.72,315.1031 4071.31,371.3131 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4219.37,179.6131,4212.5369,181.9172,4212.0356,189.1109,4218.8687,186.8068,4219.37,179.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4178" y="241.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="4188" y="248.02">exclusive_</text><!--MD5=[f9f93e1df1c0d799338094cb92c7f29d]
reverse link C_0002228653068706235818 to C_0001623832985137466228--><path d="M5532,1665.4131 C5532,1741.5431 5532,1851.6531 5532,1907.9131 " fill="none" id="C_0002228653068706235818&lt;-C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5532,1652.0931,5528,1658.0931,5532,1664.0931,5536,1658.0931,5532,1652.0931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5538" cy="1870.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="5545" y="1874.02">type</text><!--MD5=[44f503eb492a62418b7123e16c9b38de]
reverse link C_0000460030520790196523 to C_0002228653068706235818--><path d="M5532,1213.8631 C5532,1288.2931 5532,1429.3931 5532,1513.6231 " fill="none" id="C_0000460030520790196523&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5532,1200.7731,5528,1206.7731,5532,1212.7731,5536,1206.7731,5532,1200.7731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5538" cy="1297.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="5545" y="1301.02">messages</text><!--MD5=[1ec789dad01cc0cf7ca5a35a23b3b940]
reverse link C_0000924044572035510976 to C_0000460030520790196523--><path d="M5532,954.2931 C5532,1013.3331 5532,1084.4331 5532,1126.4031 " fill="none" id="C_0000924044572035510976&lt;-C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5532,941.1231,5528,947.1231,5532,953.1231,5536,947.1231,5532,941.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5538" cy="1031.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="69" x="5545" y="1035.02">sequences</text><!--MD5=[200170a1e068a1e5ab0bc25f74c55d33]
reverse link C_0000197068985320835874 to C_0000924044572035510976--><path d="M4790.38,546.2131 C4936.69,590.2831 5112.25,648.4931 5265,713.9531 C5300.49,729.1631 5337.77,747.1131 5372.85,764.9431 " fill="none" id="C_0000197068985320835874&lt;-C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4788,552.8131,4770.85,540.3631,4792.02,539.4031,4788,552.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[3359e37b007906b74888278e0c289ade]
link C_0000911024010877522257 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[263da3236bc1109fe772e81d2c672863]
@startuml
title clang-uml sequence diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42{message_t}]] {
kCall
kReturn
}
class "clanguml::common::model::path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29{value}]]]
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<std::string>
+set_comment() : void
-comment_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55{comment_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : clanguml::common::model::relationship_t
+set_destination() : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : clanguml::common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64{label_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : clanguml::common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81{complete_}]]]
{static} -m_nextId : std::atomic_uint64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83{m_nextId}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element() : _Bool
+add_element() : _Bool
+get_element() : auto
+get_element_parent() : auto
+get_element() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171{elements_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+line() const : unsigned int
+set_line() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43{file_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44{line_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : clanguml::common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : clanguml::common::model::source_file &
+operator=() : clanguml::common::model::source_file &
+operator==() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : clanguml::common::model::path<clanguml::common::model::fs_path_sep>
+add_file() : void
+fs_path() const : std::filesystem::path
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120{is_absolute_}]]]
}
class "clanguml::common::model::path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : clanguml::common::model::diagram &
+operator=() : clanguml::common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80{complete_}]]]
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+path() const : const clanguml::common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+set_using_namespaces() : void
+using_namespace() const : const clanguml::common::model::namespace_ &
+context() const : inja::json
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : clanguml::common::model::package &
+operator=() : clanguml::common::model::package &
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : clanguml::common::model::filter_t
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123{elements_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134{roots_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT>" as C_0001412380775311155780
class C_0001412380775311155780 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276{forward_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include() : _Bool
}
class "message" as C_0002228653068706235818
class C_0002228653068706235818 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L27{message}]] {
+from : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L29{from}]]]
+from_usr : std::uint_least64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L30{from_usr}]]]
+to : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L31{to}]]]
+to_usr : std::int64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L32{to_usr}]]]
+message : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L33{message}]]]
+return_type : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L34{return_type}]]]
+line : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/message.h#L35{line}]]]
}
class "activity" as C_0000460030520790196523
class C_0000460030520790196523 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L27{activity}]] {
+usr : std::uint_least64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L28{usr}]]]
+from : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/activity.h#L29{from}]]]
}
class "diagram" as C_0000924044572035510976
class C_0000924044572035510976 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L29{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : diagram &
+operator=() = default : diagram &
+type() const : common::model::diagram_t
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+get() const : clanguml::common::optional_ref<common::model::diagram_element>
+to_alias() const : std::string
+started : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/sequence_diagram/model/diagram.h#L48{started}]]]
}
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000895261582183440230 <|- - C_0000785714713072053129
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000895261582183440230 <|- - C_0002069520381434407937
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0001412380775311155780 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001412380775311155780
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0002228653068706235818 o- - C_0001623832985137466228 : +type
C_0000460030520790196523 o- - C_0002228653068706235818 : +messages
C_0000924044572035510976 o- - C_0000460030520790196523 : +sequences
C_0000197068985320835874 <|- - C_0000924044572035510976
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>