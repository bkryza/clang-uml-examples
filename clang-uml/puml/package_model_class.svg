<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3212px" preserveAspectRatio="none" style="width:7677px;height:3212px;" version="1.1" viewBox="0 0 7677 3212" width="7677px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ndrz60kmxukh" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="303" x="3693.5" y="16.708">clang-uml package diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="34" y="169.9531"/><ellipse cx="49" cy="185.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53.1094,191.9531 L45.3906,191.9531 L45.3906,179.5625 L53.1094,179.5625 L53.1094,181.7188 L47.8438,181.7188 L47.8438,184.3906 L52.6094,184.3906 L52.6094,186.5469 L47.8438,186.5469 L47.8438,189.7969 L53.1094,189.7969 L53.1094,191.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="63" y="190.1074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="298" y1="201.9531" y2="201.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="40" y="216.1636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="40" y="228.9683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="40" y="241.7729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="40" y="254.5776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="298" y1="261.1719" y2="261.1719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="1921.5" y="2493.4531"/><ellipse cx="1936.5" cy="2509.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1940.6094,2515.4531 L1932.8906,2515.4531 L1932.8906,2503.0625 L1940.6094,2503.0625 L1940.6094,2505.2188 L1935.3438,2505.2188 L1935.3438,2507.8906 L1940.1094,2507.8906 L1940.1094,2510.0469 L1935.3438,2510.0469 L1935.3438,2513.2969 L1940.6094,2513.2969 L1940.6094,2515.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="1950.5" y="2513.6074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1922.5" x2="2178.5" y1="2525.4531" y2="2525.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="1927.5" y="2539.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1927.5" y="2552.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="1927.5" y="2565.2729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1927.5" y="2578.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1922.5" x2="2178.5" y1="2584.6719" y2="2584.6719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3336.5" y="2441.9531"/><ellipse cx="3351.5" cy="2457.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3355.6094,2463.9531 L3347.8906,2463.9531 L3347.8906,2451.5625 L3355.6094,2451.5625 L3355.6094,2453.7188 L3350.3438,2453.7188 L3350.3438,2456.3906 L3355.1094,2456.3906 L3355.1094,2458.5469 L3350.3438,2458.5469 L3350.3438,2461.7969 L3355.6094,2461.7969 L3355.6094,2463.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="3365.5" y="2462.1074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3337.5" x2="3623.5" y1="2473.9531" y2="2473.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="3342.5" y="2488.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="3342.5" y="2500.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3342.5" y="2513.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3342.5" y="2526.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="3342.5" y="2539.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3342.5" y="2552.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="3342.5" y="2564.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3342.5" y="2577.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3342.5" y="2590.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="3342.5" y="2603.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="3342.5" y="2616.2104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3342.5" y="2629.0151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3337.5" x2="3623.5" y1="2635.6094" y2="2635.6094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="334" y="54.4531"/><ellipse cx="349" cy="70.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M353.1094,76.4531 L345.3906,76.4531 L345.3906,64.0625 L353.1094,64.0625 L353.1094,66.2188 L347.8438,66.2188 L347.8438,68.8906 L352.6094,68.8906 L352.6094,71.0469 L347.8438,71.0469 L347.8438,74.2969 L353.1094,74.2969 L353.1094,76.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="363" y="74.6074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="604" y1="86.4531" y2="86.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="340" y="100.6636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="340" y="113.4683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="340" y="126.2729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="340" y="139.0776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="340" y="151.8823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="340" y="164.687">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="177.4917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="340" y="190.2964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="340" y="203.1011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="340" y="215.9058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="340" y="228.7104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="340" y="241.5151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="340" y="254.3198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="340" y="267.1245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="340" y="279.9292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="340" y="292.7339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="305.5386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="340" y="318.3433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="340" y="331.1479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="340" y="343.9526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="340" y="356.7573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="369.562">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="604" y1="376.1563" y2="376.1563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="640" y="182.4531"/><ellipse cx="655" cy="198.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M659.1094,204.4531 L651.3906,204.4531 L651.3906,192.0625 L659.1094,192.0625 L659.1094,194.2188 L653.8438,194.2188 L653.8438,196.8906 L658.6094,196.8906 L658.6094,199.0469 L653.8438,199.0469 L653.8438,202.2969 L659.1094,202.2969 L659.1094,204.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="283" x="669" y="202.6074">clanguml::common::model::message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="641" x2="954" y1="214.4531" y2="214.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="646" y="228.6636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="646" y="241.4683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="641" x2="954" y1="248.0625" y2="248.0625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="1032.5" y="845.4531"/><ellipse cx="1132.75" cy="861.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1135.7188,867.0938 Q1135.1406,867.3906 1134.5,867.5313 Q1133.8594,867.6875 1133.1563,867.6875 Q1130.6563,867.6875 1129.3281,866.0469 Q1128.0156,864.3906 1128.0156,861.2656 Q1128.0156,858.1406 1129.3281,856.4844 Q1130.6563,854.8281 1133.1563,854.8281 Q1133.8594,854.8281 1134.5,854.9844 Q1135.1563,855.1406 1135.7188,855.4375 L1135.7188,858.1563 Q1135.0938,857.5781 1134.5,857.3125 Q1133.9063,857.0313 1133.2813,857.0313 Q1131.9375,857.0313 1131.25,858.1094 Q1130.5625,859.1719 1130.5625,861.2656 Q1130.5625,863.3594 1131.25,864.4375 Q1131.9375,865.5 1133.2813,865.5 Q1133.9063,865.5 1134.5,865.2344 Q1135.0938,864.9531 1135.7188,864.375 L1135.7188,867.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="1153.25" y="865.6074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1033.5" x2="1533.5" y1="877.4531" y2="877.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1038.5" y="883.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1040.5" y="885.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1052.5" y="891.6636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1038.5" y="896.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1040.5" y="898.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1052.5" y="904.4683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1033.5" x2="1533.5" y1="911.0625" y2="911.0625"/><ellipse cx="1043.5" cy="922.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1052.5" y="925.2729">skip() const : bool</text><ellipse cx="1043.5" cy="934.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1052.5" y="938.0776">skip_relationship() const : bool</text><ellipse cx="1043.5" cy="947.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1052.5" y="950.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1043.5" cy="960.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1052.5" y="963.687">style_spec() const : std::string</text><ellipse cx="1043.5" cy="973.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1052.5" y="976.4917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1043.5" cy="986.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1052.5" y="989.2964">add_decorators() : void</text><ellipse cx="1043.5" cy="998.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1052.5" y="1002.1011">append() : void</text><ellipse cx="1043.5" cy="1011.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1052.5" y="1014.9058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1043.5" cy="1024.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1052.5" y="1027.7104">set_comment() : void</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="1569.5" y="826.4531"/><ellipse cx="1584.5" cy="842.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1587.4688,848.0938 Q1586.8906,848.3906 1586.25,848.5313 Q1585.6094,848.6875 1584.9063,848.6875 Q1582.4063,848.6875 1581.0781,847.0469 Q1579.7656,845.3906 1579.7656,842.2656 Q1579.7656,839.1406 1581.0781,837.4844 Q1582.4063,835.8281 1584.9063,835.8281 Q1585.6094,835.8281 1586.25,835.9844 Q1586.9063,836.1406 1587.4688,836.4375 L1587.4688,839.1563 Q1586.8438,838.5781 1586.25,838.3125 Q1585.6563,838.0313 1585.0313,838.0313 Q1583.6875,838.0313 1583,839.1094 Q1582.3125,840.1719 1582.3125,842.2656 Q1582.3125,844.3594 1583,845.4375 Q1583.6875,846.5 1585.0313,846.5 Q1585.6563,846.5 1586.25,846.2344 Q1586.8438,845.9531 1587.4688,845.375 L1587.4688,848.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="1598.5" y="846.6074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1570.5" x2="1870.5" y1="858.4531" y2="858.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="864.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="866.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1589.5" y="872.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="877.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="879.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1589.5" y="885.4683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="890.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="892.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1589.5" y="898.2729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="902.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="904.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1589.5" y="911.0776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1570.5" x2="1870.5" y1="917.6719" y2="917.6719"/><ellipse cx="1580.5" cy="928.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1589.5" y="931.8823">source_location() = default : void</text><ellipse cx="1580.5" cy="941.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1589.5" y="944.687">source_location() : void</text><ellipse cx="1580.5" cy="954.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1589.5" y="957.4917">file() const : const std::string &amp;</text><ellipse cx="1580.5" cy="967.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1589.5" y="970.2964">set_file() : void</text><ellipse cx="1580.5" cy="979.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="1589.5" y="983.1011">file_relative() const : const std::string &amp;</text><ellipse cx="1580.5" cy="992.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1589.5" y="995.9058">set_file_relative() : void</text><ellipse cx="1580.5" cy="1005.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1589.5" y="1008.7104">line() const : unsigned int</text><ellipse cx="1580.5" cy="1018.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1589.5" y="1021.5151">set_line() : void</text><ellipse cx="1580.5" cy="1031.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1589.5" y="1034.3198">location_id() const : unsigned int</text><ellipse cx="1580.5" cy="1043.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1589.5" y="1047.1245">set_location_id() : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="969" y="2704.9531"/><ellipse cx="1101.25" cy="2720.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1104.2188,2726.5938 Q1103.6406,2726.8906 1103,2727.0313 Q1102.3594,2727.1875 1101.6563,2727.1875 Q1099.1563,2727.1875 1097.8281,2725.5469 Q1096.5156,2723.8906 1096.5156,2720.7656 Q1096.5156,2717.6406 1097.8281,2715.9844 Q1099.1563,2714.3281 1101.6563,2714.3281 Q1102.3594,2714.3281 1103,2714.4844 Q1103.6563,2714.6406 1104.2188,2714.9375 L1104.2188,2717.6563 Q1103.5938,2717.0781 1103,2716.8125 Q1102.4063,2716.5313 1101.7813,2716.5313 Q1100.4375,2716.5313 1099.75,2717.6094 Q1099.0625,2718.6719 1099.0625,2720.7656 Q1099.0625,2722.8594 1099.75,2723.9375 Q1100.4375,2725 1101.7813,2725 Q1102.4063,2725 1103,2724.7344 Q1103.5938,2724.4531 1104.2188,2723.875 L1104.2188,2726.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1121.75" y="2725.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1447" y="2701.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1448" y="2714.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="970" x2="1469" y1="2736.9531" y2="2736.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="975" y="2742.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="977" y="2744.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="989" y="2751.1636">path_ : clanguml::common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="970" x2="1469" y1="2757.7578" y2="2757.7578"/><ellipse cx="980" cy="2768.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="989" y="2771.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="980" cy="2781.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="989" y="2784.7729">path&lt;Sep&gt;() : void</text><ellipse cx="980" cy="2794.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="989" y="2797.5776">path&lt;Sep&gt;() : void</text><ellipse cx="980" cy="2807.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="989" y="2810.3823">path&lt;Sep&gt;() : void</text><ellipse cx="980" cy="2819.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="989" y="2823.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="980" cy="2832.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="989" y="2835.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="980" cy="2845.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="989" y="2848.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="980" cy="2858.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="989" y="2861.6011">path&lt;Sep&gt;() : void</text><ellipse cx="980" cy="2871.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="989" y="2874.4058">path&lt;Sep&gt;() : void</text><ellipse cx="980" cy="2884" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="989" y="2887.2104">to_string() const : std::string</text><ellipse cx="980" cy="2896.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="989" y="2900.0151">is_empty() const : bool</text><ellipse cx="980" cy="2909.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="989" y="2912.8198">size() const : size_t</text><ellipse cx="980" cy="2922.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="989" y="2925.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="980" cy="2935.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="989" y="2938.4292">operator|=() : void</text><ellipse cx="980" cy="2948.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="989" y="2951.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="980" cy="2960.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="989" y="2964.0386">operator|=() : void</text><ellipse cx="980" cy="2973.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="989" y="2976.8433">operator[]() : std::string &amp;</text><ellipse cx="980" cy="2986.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="989" y="2989.6479">operator[]() const : const std::string &amp;</text><ellipse cx="980" cy="2999.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="989" y="3002.4526">append() : void</text><ellipse cx="980" cy="3012.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="989" y="3015.2573">append() : void</text><ellipse cx="980" cy="3024.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="989" y="3028.062">pop_back() : void</text><ellipse cx="980" cy="3037.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="989" y="3040.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="980" cy="3050.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="989" y="3053.6714">starts_with() const : bool</text><ellipse cx="980" cy="3063.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="989" y="3066.4761">ends_with() const : bool</text><ellipse cx="980" cy="3076.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="989" y="3079.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="980" cy="3088.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="989" y="3092.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="980" cy="3101.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="989" y="3104.8901">relative() const : std::string</text><ellipse cx="980" cy="3114.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="989" y="3117.6948">name() const : std::string</text><ellipse cx="980" cy="3127.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="989" y="3130.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="980" cy="3140.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="989" y="3143.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="980" cy="3152.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="989" y="3156.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="980" cy="3165.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="989" y="3168.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="980" cy="3178.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="989" y="3181.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="980" cy="3191.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="989" y="3194.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="6" y="909.4531"/><ellipse cx="21" cy="925.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,931.0938 Q23.3906,931.3906 22.75,931.5313 Q22.1094,931.6875 21.4063,931.6875 Q18.9063,931.6875 17.5781,930.0469 Q16.2656,928.3906 16.2656,925.2656 Q16.2656,922.1406 17.5781,920.4844 Q18.9063,918.8281 21.4063,918.8281 Q22.1094,918.8281 22.75,918.9844 Q23.4063,919.1406 23.9688,919.4375 L23.9688,922.1563 Q23.3438,921.5781 22.75,921.3125 Q22.1563,921.0313 21.5313,921.0313 Q20.1875,921.0313 19.5,922.1094 Q18.8125,923.1719 18.8125,925.2656 Q18.8125,927.3594 19.5,928.4375 Q20.1875,929.5 21.5313,929.5 Q22.1563,929.5 22.75,929.2344 Q23.3438,928.9531 23.9688,928.375 L23.9688,931.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="35" y="929.6074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="326" y1="941.4531" y2="941.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="947.4531"/><ellipse cx="17" cy="952.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="26" y="955.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="326" y1="962.2578" y2="962.2578"/><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="374" x="6949.5" y="1788.9531"/><ellipse cx="6964.5" cy="1804.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6968.6094,1810.9531 L6960.8906,1810.9531 L6960.8906,1798.5625 L6968.6094,1798.5625 L6968.6094,1800.7188 L6963.3438,1800.7188 L6963.3438,1803.3906 L6968.1094,1803.3906 L6968.1094,1805.5469 L6963.3438,1805.5469 L6963.3438,1808.7969 L6968.6094,1808.7969 L6968.6094,1810.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="342" x="6978.5" y="1809.1074">clanguml::common::model::template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6950.5" x2="7322.5" y1="1820.9531" y2="1820.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="6955.5" y="1835.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6955.5" y="1847.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6955.5" y="1860.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="6955.5" y="1873.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6955.5" y="1886.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6950.5" x2="7322.5" y1="1892.9766" y2="1892.9766"/></a><!--MD5=[90017e9468cbeb0bc9373ae936737720]
class C_0002193110380171976294--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" target="_top" title="rpqualifier" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40" xlink:show="new" xlink:title="rpqualifier" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="7350.5" y="2176.4531"/><ellipse cx="7365.5" cy="2192.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7369.6094,2198.4531 L7361.8906,2198.4531 L7361.8906,2186.0625 L7369.6094,2186.0625 L7369.6094,2188.2188 L7364.3438,2188.2188 L7364.3438,2190.8906 L7369.1094,2190.8906 L7369.1094,2193.0469 L7364.3438,2193.0469 L7364.3438,2196.2969 L7369.6094,2196.2969 L7369.6094,2198.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="234" x="7379.5" y="2196.6074">clanguml::common::model::rpqualifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7351.5" x2="7615.5" y1="2208.4531" y2="2208.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="7356.5" y="2222.6636">kLValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7356.5" y="2235.4683">kRValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="7356.5" y="2248.2729">kPointer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7356.5" y="2261.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7351.5" x2="7615.5" y1="2267.6719" y2="2267.6719"/></a><!--MD5=[5e78f8fc55e497bc4b976d966927ffe8]
class C_0000845978329661395972--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" target="_top" title="context" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="137.6328" id="C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="7358.5" y="1775.9531"/><ellipse cx="7373.5" cy="1791.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7376.4688,1797.5938 Q7375.8906,1797.8906 7375.25,1798.0313 Q7374.6094,1798.1875 7373.9063,1798.1875 Q7371.4063,1798.1875 7370.0781,1796.5469 Q7368.7656,1794.8906 7368.7656,1791.7656 Q7368.7656,1788.6406 7370.0781,1786.9844 Q7371.4063,1785.3281 7373.9063,1785.3281 Q7374.6094,1785.3281 7375.25,1785.4844 Q7375.9063,1785.6406 7376.4688,1785.9375 L7376.4688,1788.6563 Q7375.8438,1788.0781 7375.25,1787.8125 Q7374.6563,1787.5313 7374.0313,1787.5313 Q7372.6875,1787.5313 7372,1788.6094 Q7371.3125,1789.6719 7371.3125,1791.7656 Q7371.3125,1793.8594 7372,1794.9375 Q7372.6875,1796 7374.0313,1796 Q7374.6563,1796 7375.25,1795.7344 Q7375.8438,1795.4531 7376.4688,1794.875 L7376.4688,1797.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="7387.5" y="1796.1074">clanguml::common::model::context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7359.5" x2="7607.5" y1="1807.9531" y2="1807.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7364.5" y="1813.9531"/><ellipse cx="7369.5" cy="1818.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="7378.5" y="1822.1636">is_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7364.5" y="1826.7578"/><ellipse cx="7369.5" cy="1831.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="7378.5" y="1834.9683">is_volatile : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7364.5" y="1839.5625"/><ellipse cx="7369.5" cy="1844.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="7378.5" y="1847.7729">is_ref_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7364.5" y="1852.3672"/><ellipse cx="7369.5" cy="1857.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7378.5" y="1860.5776">is_ref_volatile : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7359.5" x2="7607.5" y1="1867.1719" y2="1867.1719"/><ellipse cx="7369.5" cy="1878.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7378.5" y="1881.3823">to_string() const : std::string</text><ellipse cx="7369.5" cy="1890.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="7378.5" y="1894.187">operator==() const : bool</text><ellipse cx="7369.5" cy="1903.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="7378.5" y="1906.9917">operator!=() const : bool</text><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="532" y="2518.9531"/><ellipse cx="547" cy="2534.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M549.9688,2540.5938 Q549.3906,2540.8906 548.75,2541.0313 Q548.1094,2541.1875 547.4063,2541.1875 Q544.9063,2541.1875 543.5781,2539.5469 Q542.2656,2537.8906 542.2656,2534.7656 Q542.2656,2531.6406 543.5781,2529.9844 Q544.9063,2528.3281 547.4063,2528.3281 Q548.1094,2528.3281 548.75,2528.4844 Q549.4063,2528.6406 549.9688,2528.9375 L549.9688,2531.6563 Q549.3438,2531.0781 548.75,2530.8125 Q548.1563,2530.5313 547.5313,2530.5313 Q546.1875,2530.5313 545.5,2531.6094 Q544.8125,2532.6719 544.8125,2534.7656 Q544.8125,2536.8594 545.5,2537.9375 Q546.1875,2539 547.5313,2539 Q548.1563,2539 548.75,2538.7344 Q549.3438,2538.4531 549.9688,2537.875 L549.9688,2540.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="561" y="2539.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="769" y="2515.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="770" y="2528.0918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="533" x2="1054" y1="2550.9531" y2="2550.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="533" x2="1054" y1="2558.9531" y2="2558.9531"/><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="905.9141" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="6997.5" y="486.9531"/><ellipse cx="7090.75" cy="502.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7093.7188,508.5938 Q7093.1406,508.8906 7092.5,509.0313 Q7091.8594,509.1875 7091.1563,509.1875 Q7088.6563,509.1875 7087.3281,507.5469 Q7086.0156,505.8906 7086.0156,502.7656 Q7086.0156,499.6406 7087.3281,497.9844 Q7088.6563,496.3281 7091.1563,496.3281 Q7091.8594,496.3281 7092.5,496.4844 Q7093.1563,496.6406 7093.7188,496.9375 L7093.7188,499.6563 Q7093.0938,499.0781 7092.5,498.8125 Q7091.9063,498.5313 7091.2813,498.5313 Q7089.9375,498.5313 7089.25,499.6094 Q7088.5625,500.6719 7088.5625,502.7656 Q7088.5625,504.8594 7089.25,505.9375 Q7089.9375,507 7091.2813,507 Q7091.9063,507 7092.5,506.7344 Q7093.0938,506.4531 7093.7188,505.875 L7093.7188,508.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="7111.25" y="507.1074">clanguml::common::model::template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6998.5" x2="7490.5" y1="518.9531" y2="518.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="524.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="526.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="7017.5" y="533.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="537.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="539.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7017.5" y="545.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="550.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="552.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="7017.5" y="558.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="563.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="565.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="7017.5" y="571.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="576.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="578.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="7017.5" y="584.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="588.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="590.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="7017.5" y="597.187">is_ellipsis_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="601.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="603.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="7017.5" y="609.9917">is_noexcept_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="614.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="616.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="7017.5" y="622.7964">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="627.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="629.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7017.5" y="635.6011">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="640.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="642.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="7017.5" y="648.4058">is_data_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="653"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="655"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="7017.5" y="661.2104">is_member_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="665.8047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="667.8047"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="7017.5" y="674.0151">is_array_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="678.6094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="680.6094"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="7017.5" y="686.8198">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="691.4141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="693.4141"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="7017.5" y="699.6245">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7003.5" y="704.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="706.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7017.5" y="712.4292">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6998.5" x2="7490.5" y1="719.0234" y2="719.0234"/><ellipse cx="7008.5" cy="730.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="412" x="7017.5" y="733.2339">make_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="7008.5" cy="742.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="7017.5" y="746.0386">make_template_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="7008.5" cy="755.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="439" x="7017.5" y="758.8433">make_non_type_template() : clanguml::common::model::template_parameter</text><ellipse cx="7008.5" cy="768.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="7017.5" y="771.6479">make_argument() : clanguml::common::model::template_parameter</text><ellipse cx="7008.5" cy="781.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="7017.5" y="784.4526">make_unexposed_argument() : clanguml::common::model::template_parameter</text><ellipse cx="7008.5" cy="794.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="7017.5" y="797.2573">set_type() : void</text><ellipse cx="7008.5" cy="806.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="7017.5" y="810.062">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="7008.5" cy="819.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="7017.5" y="822.8667">set_id() : void</text><ellipse cx="7008.5" cy="832.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="7017.5" y="835.6714">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="7008.5" cy="845.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="7017.5" y="848.4761">set_name() : void</text><ellipse cx="7008.5" cy="858.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="7017.5" y="861.2808">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="7008.5" cy="870.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="7017.5" y="874.0854">set_default_value() : void</text><ellipse cx="7008.5" cy="883.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="7017.5" y="886.8901">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="7008.5" cy="896.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="7017.5" y="899.6948">is_variadic() : void</text><ellipse cx="7008.5" cy="909.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="7017.5" y="912.4995">is_variadic() const : bool</text><ellipse cx="7008.5" cy="922.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="7017.5" y="925.3042">calculate_specialization_match() const : int</text><ellipse cx="7008.5" cy="934.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="7017.5" y="938.1089">is_template_parameter() const : bool</text><ellipse cx="7008.5" cy="947.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="7017.5" y="950.9136">is_template_parameter() : void</text><ellipse cx="7008.5" cy="960.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="7017.5" y="963.7183">is_template_template_parameter() const : bool</text><ellipse cx="7008.5" cy="973.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="7017.5" y="976.5229">is_template_template_parameter() : void</text><ellipse cx="7008.5" cy="986.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7017.5" y="989.3276">to_string() const : std::string</text><ellipse cx="7008.5" cy="998.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7017.5" y="1002.1323">add_template_param() : void</text><ellipse cx="7008.5" cy="1011.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7017.5" y="1014.937">add_template_param() : void</text><ellipse cx="7008.5" cy="1024.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="7017.5" y="1027.7417">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="7008.5" cy="1037.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7017.5" y="1040.5464">clear_params() : void</text><ellipse cx="7008.5" cy="1050.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="7017.5" y="1053.3511">is_association() const : bool</text><ellipse cx="7008.5" cy="1062.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="7017.5" y="1066.1558">is_specialization() const : bool</text><ellipse cx="7008.5" cy="1075.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="7017.5" y="1078.9604">is_same_specialization() const : bool</text><ellipse cx="7008.5" cy="1088.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="7017.5" y="1091.7651">find_nested_relationships() const : bool</text><ellipse cx="7008.5" cy="1101.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="7017.5" y="1104.5698">set_concept_constraint() : void</text><ellipse cx="7008.5" cy="1114.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="7017.5" y="1117.3745">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="7008.5" cy="1126.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="7017.5" y="1130.1792">kind() const : clanguml::common::model::template_parameter_kind_t</text><ellipse cx="7008.5" cy="1139.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7017.5" y="1142.9839">set_kind() : void</text><ellipse cx="7008.5" cy="1152.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="7017.5" y="1155.7886">is_unexposed() const : bool</text><ellipse cx="7008.5" cy="1165.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="7017.5" y="1168.5933">set_unexposed() : void</text><ellipse cx="7008.5" cy="1178.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="7017.5" y="1181.3979">is_function_template() : void</text><ellipse cx="7008.5" cy="1190.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="7017.5" y="1194.2026">is_function_template() const : bool</text><ellipse cx="7008.5" cy="1203.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="7017.5" y="1207.0073">is_member_pointer() : void</text><ellipse cx="7008.5" cy="1216.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="7017.5" y="1219.812">is_member_pointer() const : bool</text><ellipse cx="7008.5" cy="1229.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="7017.5" y="1232.6167">is_data_pointer() : void</text><ellipse cx="7008.5" cy="1242.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="7017.5" y="1245.4214">is_data_pointer() const : bool</text><ellipse cx="7008.5" cy="1255.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="7017.5" y="1258.2261">is_array() : void</text><ellipse cx="7008.5" cy="1267.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="7017.5" y="1271.0308">is_array() const : bool</text><ellipse cx="7008.5" cy="1280.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="7017.5" y="1283.8354">push_context() : void</text><ellipse cx="7008.5" cy="1293.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="7017.5" y="1296.6401">deduced_context() const : const std::deque&lt;context&gt; &amp;</text><ellipse cx="7008.5" cy="1306.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="7017.5" y="1309.4448">deduced_context() : void</text><ellipse cx="7008.5" cy="1319.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="7017.5" y="1322.2495">is_ellipsis() : void</text><ellipse cx="7008.5" cy="1331.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7017.5" y="1335.0542">is_ellipsis() const : bool</text><ellipse cx="7008.5" cy="1344.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="7017.5" y="1347.8589">is_noexcept() : void</text><ellipse cx="7008.5" cy="1357.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="7017.5" y="1360.6636">is_noexcept() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="1367.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="7017.5" y="1373.4683">template_parameter() = default : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7005.5" y="1380.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="7017.5" y="1386.2729">deduced_context_str() const : std::string</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="1769.5" y="1801.9531"/><ellipse cx="1784.5" cy="1817.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1787.4688,1823.5938 Q1786.8906,1823.8906 1786.25,1824.0313 Q1785.6094,1824.1875 1784.9063,1824.1875 Q1782.4063,1824.1875 1781.0781,1822.5469 Q1779.7656,1820.8906 1779.7656,1817.7656 Q1779.7656,1814.6406 1781.0781,1812.9844 Q1782.4063,1811.3281 1784.9063,1811.3281 Q1785.6094,1811.3281 1786.25,1811.4844 Q1786.9063,1811.6406 1787.4688,1811.9375 L1787.4688,1814.6563 Q1786.8438,1814.0781 1786.25,1813.8125 Q1785.6563,1813.5313 1785.0313,1813.5313 Q1783.6875,1813.5313 1783,1814.6094 Q1782.3125,1815.6719 1782.3125,1817.7656 Q1782.3125,1819.8594 1783,1820.9375 Q1783.6875,1822 1785.0313,1822 Q1785.6563,1822 1786.25,1821.7344 Q1786.8438,1821.4531 1787.4688,1820.875 L1787.4688,1823.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="1798.5" y="1822.1074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1770.5" x2="2076.5" y1="1833.9531" y2="1833.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1775.5" y="1839.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1777.5" y="1841.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1789.5" y="1848.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1770.5" x2="2076.5" y1="1854.7578" y2="1854.7578"/><ellipse cx="1780.5" cy="1865.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1789.5" y="1868.9683">set_style() : void</text><ellipse cx="1780.5" cy="1878.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1789.5" y="1881.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="1632" y="2086.9531"/><ellipse cx="1675.8" cy="2102.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1678.7688,2108.5938 Q1678.1906,2108.8906 1677.55,2109.0313 Q1676.9094,2109.1875 1676.2063,2109.1875 Q1673.7063,2109.1875 1672.3781,2107.5469 Q1671.0656,2105.8906 1671.0656,2102.7656 Q1671.0656,2099.6406 1672.3781,2097.9844 Q1673.7063,2096.3281 1676.2063,2096.3281 Q1676.9094,2096.3281 1677.55,2096.4844 Q1678.2063,2096.6406 1678.7688,2096.9375 L1678.7688,2099.6563 Q1678.1438,2099.0781 1677.55,2098.8125 Q1676.9563,2098.5313 1676.3313,2098.5313 Q1674.9875,2098.5313 1674.3,2099.6094 Q1673.6125,2100.6719 1673.6125,2102.7656 Q1673.6125,2104.8594 1674.3,2105.9375 Q1674.9875,2107 1676.3313,2107 Q1676.9563,2107 1677.55,2106.7344 Q1678.1438,2106.4531 1678.7688,2105.875 L1678.7688,2108.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="1696.2" y="2107.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1633" x2="1972" y1="2118.9531" y2="2118.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1638" y="2124.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1640" y="2126.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1652" y="2133.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1638" y="2137.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1640" y="2139.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1652" y="2145.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1638" y="2150.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1640" y="2152.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1652" y="2158.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1638" y="2163.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1640" y="2165.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1652" y="2171.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1633" x2="1972" y1="2178.1719" y2="2178.1719"/><ellipse cx="1643" cy="2189.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1652" y="2192.3823">relationship() : void</text><ellipse cx="1643" cy="2201.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1652" y="2205.187">~relationship() = default : void</text><ellipse cx="1643" cy="2214.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1652" y="2217.9917">set_type() : void</text><ellipse cx="1643" cy="2227.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1652" y="2230.7964">type() const : clanguml::common::model::relationship_t</text><ellipse cx="1643" cy="2240.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1652" y="2243.6011">set_destination() : void</text><ellipse cx="1643" cy="2253.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1652" y="2256.4058">destination() const : clanguml::common::id_t</text><ellipse cx="1643" cy="2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1652" y="2269.2104">set_multiplicity_source() : void</text><ellipse cx="1643" cy="2278.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1652" y="2282.0151">multiplicity_source() const : std::string</text><ellipse cx="1643" cy="2291.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1652" y="2294.8198">set_multiplicity_destination() : void</text><ellipse cx="1643" cy="2304.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1652" y="2307.6245">multiplicity_destination() const : std::string</text><ellipse cx="1643" cy="2317.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1652" y="2320.4292">set_label() : void</text><ellipse cx="1643" cy="2330.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1652" y="2333.2339">label() const : std::string</text><ellipse cx="1643" cy="2342.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1652" y="2346.0386">set_access() : void</text><ellipse cx="1643" cy="2355.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1652" y="2358.8433">access() const : clanguml::common::model::access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="1129" y="1679.9531"/><ellipse cx="1173.75" cy="1695.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1176.7188,1701.5938 Q1176.1406,1701.8906 1175.5,1702.0313 Q1174.8594,1702.1875 1174.1563,1702.1875 Q1171.6563,1702.1875 1170.3281,1700.5469 Q1169.0156,1698.8906 1169.0156,1695.7656 Q1169.0156,1692.6406 1170.3281,1690.9844 Q1171.6563,1689.3281 1174.1563,1689.3281 Q1174.8594,1689.3281 1175.5,1689.4844 Q1176.1563,1689.6406 1176.7188,1689.9375 L1176.7188,1692.6563 Q1176.0938,1692.0781 1175.5,1691.8125 Q1174.9063,1691.5313 1174.2813,1691.5313 Q1172.9375,1691.5313 1172.25,1692.6094 Q1171.5625,1693.6719 1171.5625,1695.7656 Q1171.5625,1697.8594 1172.25,1698.9375 Q1172.9375,1700 1174.2813,1700 Q1174.9063,1700 1175.5,1699.7344 Q1176.0938,1699.4531 1176.7188,1698.875 L1176.7188,1701.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="1194.25" y="1700.1074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1130" x2="1505" y1="1711.9531" y2="1711.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1135" y="1717.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1137" y="1719.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="1149" y="1726.1636">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1135" y="1730.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1137" y="1732.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1149" y="1738.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1135" y="1743.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1137" y="1745.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1149" y="1751.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1135" y="1756.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1137" y="1758.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1149" y="1764.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1130" x2="1505" y1="1771.1719" y2="1771.1719"/><ellipse cx="1140" cy="1782.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1149" y="1785.3823">diagram_element() : void</text><ellipse cx="1140" cy="1794.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1149" y="1798.187">~diagram_element() = default : void</text><ellipse cx="1140" cy="1807.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="1149" y="1810.9917">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="1140" cy="1820.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1149" y="1823.7964">set_id() : void</text><ellipse cx="1140" cy="1833.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1149" y="1836.6011">alias() const : std::string</text><ellipse cx="1140" cy="1846.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1149" y="1849.4058">set_name() : void</text><ellipse cx="1140" cy="1859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1149" y="1862.2104">name() const : std::string</text><ellipse cx="1140" cy="1871.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1149" y="1875.0151">type_name() const : std::string</text><ellipse cx="1140" cy="1884.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1149" y="1887.8198">full_name() const : std::string</text><ellipse cx="1140" cy="1897.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1149" y="1900.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1140" cy="1910.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1149" y="1913.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1140" cy="1923.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1149" y="1926.2339">add_relationship() : void</text><ellipse cx="1140" cy="1935.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1149" y="1939.0386">append() : void</text><ellipse cx="1140" cy="1948.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1149" y="1951.8433">context() const : inja::json</text><ellipse cx="1140" cy="1961.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1149" y="1964.6479">is_nested() const : bool</text><ellipse cx="1140" cy="1974.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1149" y="1977.4526">nested() : void</text><ellipse cx="1140" cy="1987.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1149" y="1990.2573">complete() const : bool</text><ellipse cx="1140" cy="1999.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1149" y="2003.062">complete() : void</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="538.5" y="2131.4531"/><ellipse cx="655.25" cy="2147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M658.2188,2153.0938 Q657.6406,2153.3906 657,2153.5313 Q656.3594,2153.6875 655.6563,2153.6875 Q653.1563,2153.6875 651.8281,2152.0469 Q650.5156,2150.3906 650.5156,2147.2656 Q650.5156,2144.1406 651.8281,2142.4844 Q653.1563,2140.8281 655.6563,2140.8281 Q656.3594,2140.8281 657,2140.9844 Q657.6563,2141.1406 658.2188,2141.4375 L658.2188,2144.1563 Q657.5938,2143.5781 657,2143.3125 Q656.4063,2143.0313 655.7813,2143.0313 Q654.4375,2143.0313 653.75,2144.1094 Q653.0625,2145.1719 653.0625,2147.2656 Q653.0625,2149.3594 653.75,2150.4375 Q654.4375,2151.5 655.7813,2151.5 Q656.4063,2151.5 657,2151.2344 Q657.5938,2150.9531 658.2188,2150.375 L658.2188,2153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="675.75" y="2151.6074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="539.5" x2="1001.5" y1="2163.4531" y2="2163.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="539.5" x2="1001.5" y1="2171.4531" y2="2171.4531"/><ellipse cx="549.5" cy="2182.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="558.5" y="2185.6636">element() : void</text><ellipse cx="549.5" cy="2195.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="558.5" y="2198.4683">~element() = default : void</text><ellipse cx="549.5" cy="2208.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="558.5" y="2211.2729">name_and_ns() const : std::string</text><ellipse cx="549.5" cy="2220.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="558.5" y="2224.0776">set_namespace() : void</text><ellipse cx="549.5" cy="2233.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="558.5" y="2236.8823">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="549.5" cy="2246.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="558.5" y="2249.687">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="549.5" cy="2259.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="558.5" y="2262.4917">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="549.5" cy="2272.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="558.5" y="2275.2964">full_name() const : std::string</text><ellipse cx="549.5" cy="2284.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="558.5" y="2288.1011">full_name_no_ns() const : std::string</text><ellipse cx="549.5" cy="2297.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="558.5" y="2300.9058">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="549.5" cy="2310.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="558.5" y="2313.7104">context() const : inja::json</text></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="7032" y="131.4531"/><ellipse cx="7110.75" cy="147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7113.7188,153.0938 Q7113.1406,153.3906 7112.5,153.5313 Q7111.8594,153.6875 7111.1563,153.6875 Q7108.6563,153.6875 7107.3281,152.0469 Q7106.0156,150.3906 7106.0156,147.2656 Q7106.0156,144.1406 7107.3281,142.4844 Q7108.6563,140.8281 7111.1563,140.8281 Q7111.8594,140.8281 7112.5,140.9844 Q7113.1563,141.1406 7113.7188,141.4375 L7113.7188,144.1563 Q7113.0938,143.5781 7112.5,143.3125 Q7111.9063,143.0313 7111.2813,143.0313 Q7109.9375,143.0313 7109.25,144.1094 Q7108.5625,145.1719 7108.5625,147.2656 Q7108.5625,149.3594 7109.25,150.4375 Q7109.9375,151.5 7111.2813,151.5 Q7111.9063,151.5 7112.5,151.2344 Q7113.0938,150.9531 7113.7188,150.375 L7113.7188,153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="7131.25" y="151.6074">clanguml::common::model::template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7033" x2="7456" y1="163.4531" y2="163.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7038" y="169.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7040" y="171.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="7052" y="177.6636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7038" y="182.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7040" y="184.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="7052" y="190.4683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7033" x2="7456" y1="197.0625" y2="197.0625"/><ellipse cx="7043" cy="208.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7052" y="211.2729">render_template_params() const : std::ostream &amp;</text><ellipse cx="7043" cy="220.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="7052" y="224.0776">set_base_template() : void</text><ellipse cx="7043" cy="233.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7052" y="236.8823">base_template() const : std::string</text><ellipse cx="7043" cy="246.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7052" y="249.687">add_template() : void</text><ellipse cx="7043" cy="259.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="7052" y="262.4917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="7043" cy="272.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="7052" y="275.2964">calculate_template_specialization_match() const : int</text><ellipse cx="7043" cy="284.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7052" y="288.1011">is_implicit() const : bool</text><ellipse cx="7043" cy="297.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="7052" y="300.9058">set_implicit() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="362.5" y="781.4531"/><ellipse cx="377.5" cy="797.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.4688,803.0938 Q379.8906,803.3906 379.25,803.5313 Q378.6094,803.6875 377.9063,803.6875 Q375.4063,803.6875 374.0781,802.0469 Q372.7656,800.3906 372.7656,797.2656 Q372.7656,794.1406 374.0781,792.4844 Q375.4063,790.8281 377.9063,790.8281 Q378.6094,790.8281 379.25,790.9844 Q379.9063,791.1406 380.4688,791.4375 L380.4688,794.1563 Q379.8438,793.5781 379.25,793.3125 Q378.6563,793.0313 378.0313,793.0313 Q376.6875,793.0313 376,794.1094 Q375.3125,795.1719 375.3125,797.2656 Q375.3125,799.3594 376,800.4375 Q376.6875,801.5 378.0313,801.5 Q378.6563,801.5 379.25,801.2344 Q379.8438,800.9531 380.4688,800.375 L380.4688,803.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="391.5" y="801.6074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="646.5" y="778.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="647.5" y="790.5918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="363.5" x2="683.5" y1="813.4531" y2="813.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="368.5" y="819.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="370.5" y="821.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="382.5" y="827.6636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="363.5" x2="683.5" y1="834.2578" y2="834.2578"/><ellipse cx="373.5" cy="845.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="382.5" y="848.4683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="373.5" cy="858.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="382.5" y="861.2729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="373.5" cy="870.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="382.5" y="874.0776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="373.5" cy="883.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="382.5" y="886.8823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="373.5" cy="896.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="382.5" y="899.687">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="373.5" cy="909.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="382.5" y="912.4917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="373.5" cy="922.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="382.5" y="925.2964">has_element() const : bool</text><ellipse cx="373.5" cy="934.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="382.5" y="938.1011">is_empty() const : bool</text><ellipse cx="373.5" cy="947.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="382.5" y="950.9058">begin() : auto</text><ellipse cx="373.5" cy="960.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="382.5" y="963.7104">end() : auto</text><ellipse cx="373.5" cy="973.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="382.5" y="976.5151">cbegin() const : auto</text><ellipse cx="373.5" cy="986.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="382.5" y="989.3198">cend() const : auto</text><ellipse cx="373.5" cy="998.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="382.5" y="1002.1245">begin() const : auto</text><ellipse cx="373.5" cy="1011.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="382.5" y="1014.9292">end() const : auto</text><ellipse cx="373.5" cy="1024.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="382.5" y="1027.7339">print_tree() : void</text><ellipse cx="373.5" cy="1037.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="382.5" y="1040.5386">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="373.5" cy="1050.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="382.5" y="1053.3433">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="373.5" cy="1062.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="382.5" y="1066.1479">get_element&lt;V=T&gt;() : auto</text><ellipse cx="373.5" cy="1075.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="382.5" y="1078.9526">get_element_parent&lt;V=T&gt;() : auto</text><ellipse cx="373.5" cy="1088.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="382.5" y="1091.7573">get_element&lt;V=T&gt;() : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="1090" y="2499.9531"/><ellipse cx="1105" cy="2515.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1109.1094,2521.9531 L1101.3906,2521.9531 L1101.3906,2509.5625 L1109.1094,2509.5625 L1109.1094,2511.7188 L1103.8438,2511.7188 L1103.8438,2514.3906 L1108.6094,2514.3906 L1108.6094,2516.5469 L1103.8438,2516.5469 L1103.8438,2519.7969 L1109.1094,2519.7969 L1109.1094,2521.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="1119" y="2520.1074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1091" x2="1370" y1="2531.9531" y2="2531.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="1096" y="2546.1636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1096" y="2558.9683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1096" y="2571.7729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1091" x2="1370" y1="2578.3672" y2="2578.3672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="719.5" y="909.4531"/><ellipse cx="734.5" cy="925.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M737.4688,931.0938 Q736.8906,931.3906 736.25,931.5313 Q735.6094,931.6875 734.9063,931.6875 Q732.4063,931.6875 731.0781,930.0469 Q729.7656,928.3906 729.7656,925.2656 Q729.7656,922.1406 731.0781,920.4844 Q732.4063,918.8281 734.9063,918.8281 Q735.6094,918.8281 736.25,918.9844 Q736.9063,919.1406 737.4688,919.4375 L737.4688,922.1563 Q736.8438,921.5781 736.25,921.3125 Q735.6563,921.0313 735.0313,921.0313 Q733.6875,921.0313 733,922.1094 Q732.3125,923.1719 732.3125,925.2656 Q732.3125,927.3594 733,928.4375 Q733.6875,929.5 735.0313,929.5 Q735.6563,929.5 736.25,929.2344 Q736.8438,928.9531 737.4688,928.375 L737.4688,931.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="748.5" y="929.6074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="720.5" x2="996.5" y1="941.4531" y2="941.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="725.5" y="947.4531"/><ellipse cx="730.5" cy="952.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="739.5" y="955.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="720.5" x2="996.5" y1="962.2578" y2="962.2578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="1406.5" y="2518.9531"/><ellipse cx="1421.5" cy="2534.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1424.4688,2540.5938 Q1423.8906,2540.8906 1423.25,2541.0313 Q1422.6094,2541.1875 1421.9063,2541.1875 Q1419.4063,2541.1875 1418.0781,2539.5469 Q1416.7656,2537.8906 1416.7656,2534.7656 Q1416.7656,2531.6406 1418.0781,2529.9844 Q1419.4063,2528.3281 1421.9063,2528.3281 Q1422.6094,2528.3281 1423.25,2528.4844 Q1423.9063,2528.6406 1424.4688,2528.9375 L1424.4688,2531.6563 Q1423.8438,2531.0781 1423.25,2530.8125 Q1422.6563,2530.5313 1422.0313,2530.5313 Q1420.6875,2530.5313 1420,2531.6094 Q1419.3125,2532.6719 1419.3125,2534.7656 Q1419.3125,2536.8594 1420,2537.9375 Q1420.6875,2539 1422.0313,2539 Q1422.6563,2539 1423.25,2538.7344 Q1423.8438,2538.4531 1424.4688,2537.875 L1424.4688,2540.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1435.5" y="2539.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="1643.5" y="2515.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="1644.5" y="2528.0918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1407.5" x2="1885.5" y1="2550.9531" y2="2550.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1407.5" x2="1885.5" y1="2558.9531" y2="2558.9531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="559" x="1038" y="2086.9531"/><ellipse cx="1194.25" cy="2102.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1197.2188,2108.5938 Q1196.6406,2108.8906 1196,2109.0313 Q1195.3594,2109.1875 1194.6563,2109.1875 Q1192.1563,2109.1875 1190.8281,2107.5469 Q1189.5156,2105.8906 1189.5156,2102.7656 Q1189.5156,2099.6406 1190.8281,2097.9844 Q1192.1563,2096.3281 1194.6563,2096.3281 Q1195.3594,2096.3281 1196,2096.4844 Q1196.6563,2096.6406 1197.2188,2096.9375 L1197.2188,2099.6563 Q1196.5938,2099.0781 1196,2098.8125 Q1195.4063,2098.5313 1194.7813,2098.5313 Q1193.4375,2098.5313 1192.75,2099.6094 Q1192.0625,2100.6719 1192.0625,2102.7656 Q1192.0625,2104.8594 1192.75,2105.9375 Q1193.4375,2107 1194.7813,2107 Q1195.4063,2107 1196,2106.7344 Q1196.5938,2106.4531 1197.2188,2105.875 L1197.2188,2108.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="1214.75" y="2107.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1039" x2="1596" y1="2118.9531" y2="2118.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1044" y="2124.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1046" y="2126.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1058" y="2133.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1039" x2="1596" y1="2139.7578" y2="2139.7578"/><ellipse cx="1049" cy="2150.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1058" y="2153.9683">source_file() = default : void</text><ellipse cx="1049" cy="2163.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1058" y="2166.7729">source_file() : void</text><ellipse cx="1049" cy="2176.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1058" y="2179.5776">set_path() : void</text><ellipse cx="1049" cy="2189.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1058" y="2192.3823">set_absolute() : void</text><ellipse cx="1049" cy="2201.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1058" y="2205.187">is_absolute() const : bool</text><ellipse cx="1049" cy="2214.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1058" y="2217.9917">set_type() : void</text><ellipse cx="1049" cy="2227.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1058" y="2230.7964">type() const : clanguml::common::model::source_file_t</text><ellipse cx="1049" cy="2240.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1058" y="2243.6011">source_file() : void</text><ellipse cx="1049" cy="2253.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1058" y="2256.4058">source_file() = default : void</text><ellipse cx="1049" cy="2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1058" y="2269.2104">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="1049" cy="2278.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1058" y="2282.0151">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="1049" cy="2291.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1058" y="2294.8198">operator==() const : bool</text><ellipse cx="1049" cy="2304.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="1058" y="2307.6245">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="1049" cy="2317.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1058" y="2320.4292">full_name() const : std::string</text><ellipse cx="1049" cy="2330.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="1058" y="2333.2339">full_path() const : clanguml::common::model::path&lt;clanguml::common::model::fs_path_sep&gt;</text><ellipse cx="1049" cy="2342.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1058" y="2346.0386">fs_path() const : std::filesystem::path</text><ellipse cx="1049" cy="2355.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1058" y="2358.8433">context() const : inja::json</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="659" x="4331" y="28.9531"/><ellipse cx="4545.25" cy="44.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4545.3594,40.2969 L4544.2031,45.375 L4546.5313,45.375 L4545.3594,40.2969 Z M4543.875,38.0625 L4546.8594,38.0625 L4550.2188,50.4531 L4547.7656,50.4531 L4547,47.3906 L4543.7188,47.3906 L4542.9688,50.4531 L4540.5313,50.4531 L4543.875,38.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="4565.75" y="49.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4332" x2="4989" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4337" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4339" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4351" y="75.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4337" y="79.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4339" y="81.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4351" y="87.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4332" x2="4989" y1="94.5625" y2="94.5625"/><ellipse cx="4342" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4351" y="108.7729">diagram() : void</text><ellipse cx="4342" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4351" y="121.5776">~diagram() : void</text><ellipse cx="4342" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="4351" y="134.3823">type() const = 0 : clanguml::common::model::diagram_t</text><ellipse cx="4342" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4351" y="147.187">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4342" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="4351" y="159.9917">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4342" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="4351" y="172.7964">get_with_namespace() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="4342" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4351" y="185.6011">diagram() : void</text><ellipse cx="4342" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4351" y="198.4058">diagram() : void</text><ellipse cx="4342" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4351" y="211.2104">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4342" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4351" y="224.0151">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="4342" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4351" y="236.8198">set_name() : void</text><ellipse cx="4342" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4351" y="249.6245">name() const : std::string</text><ellipse cx="4342" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4351" y="262.4292">set_filter() : void</text><ellipse cx="4342" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4351" y="275.2339">set_complete() : void</text><ellipse cx="4342" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4351" y="288.0386">complete() const : bool</text><ellipse cx="4342" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="300.8433">should_include() const : bool</text><ellipse cx="4342" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="313.6479">should_include() const : bool</text><ellipse cx="4342" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="326.4526">should_include() const : bool</text><ellipse cx="4342" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="339.2573">should_include() const : bool</text><ellipse cx="4342" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="352.062">should_include() const : bool</text><ellipse cx="4342" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="364.8667">should_include() const : bool</text><ellipse cx="4342" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4351" y="377.6714">has_element() const : bool</text><ellipse cx="4342" cy="387.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4351" y="390.4761">should_include() const : bool</text><ellipse cx="4342" cy="400.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="4351" y="403.2808">context() const = 0 : inja::json</text><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="2214.5" y="2448.4531"/><ellipse cx="2259.75" cy="2464.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2262.7188,2470.0938 Q2262.1406,2470.3906 2261.5,2470.5313 Q2260.8594,2470.6875 2260.1563,2470.6875 Q2257.6563,2470.6875 2256.3281,2469.0469 Q2255.0156,2467.3906 2255.0156,2464.2656 Q2255.0156,2461.1406 2256.3281,2459.4844 Q2257.6563,2457.8281 2260.1563,2457.8281 Q2260.8594,2457.8281 2261.5,2457.9844 Q2262.1563,2458.1406 2262.7188,2458.4375 L2262.7188,2461.1563 Q2262.0938,2460.5781 2261.5,2460.3125 Q2260.9063,2460.0313 2260.2813,2460.0313 Q2258.9375,2460.0313 2258.25,2461.1094 Q2257.5625,2462.1719 2257.5625,2464.2656 Q2257.5625,2466.3594 2258.25,2467.4375 Q2258.9375,2468.5 2260.2813,2468.5 Q2260.9063,2468.5 2261.5,2468.2344 Q2262.0938,2467.9531 2262.7188,2467.375 L2262.7188,2470.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="2280.25" y="2468.6074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2215.5" x2="2537.5" y1="2480.4531" y2="2480.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2220.5" y="2486.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2222.5" y="2488.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2234.5" y="2494.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2215.5" x2="2537.5" y1="2501.2578" y2="2501.2578"/><ellipse cx="2225.5" cy="2512.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2234.5" y="2515.4683">package() : void</text><ellipse cx="2225.5" cy="2525.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2234.5" y="2528.2729">package() : void</text><ellipse cx="2225.5" cy="2537.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2234.5" y="2541.0776">package() = default : void</text><ellipse cx="2225.5" cy="2550.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2234.5" y="2553.8823">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="2225.5" cy="2563.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2234.5" y="2566.687">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="2225.5" cy="2576.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2234.5" y="2579.4917">type_name() const : std::string</text><ellipse cx="2225.5" cy="2589.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2234.5" y="2592.2964">full_name() const : std::string</text><ellipse cx="2225.5" cy="2601.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2234.5" y="2605.1011">is_deprecated() const : bool</text><ellipse cx="2225.5" cy="2614.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2234.5" y="2617.9058">set_deprecated() : void</text><ellipse cx="2225.5" cy="2627.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2234.5" y="2630.7104">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="2741.5" y="2188.9531"/><ellipse cx="2756.5" cy="2204.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2760.6094,2210.9531 L2752.8906,2210.9531 L2752.8906,2198.5625 L2760.6094,2198.5625 L2760.6094,2200.7188 L2755.3438,2200.7188 L2755.3438,2203.3906 L2760.1094,2203.3906 L2760.1094,2205.5469 L2755.3438,2205.5469 L2755.3438,2208.7969 L2760.6094,2208.7969 L2760.6094,2210.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="2770.5" y="2209.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2742.5" x2="2982.5" y1="2220.9531" y2="2220.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2747.5" y="2235.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="2747.5" y="2247.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2742.5" x2="2982.5" y1="2254.5625" y2="2254.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="4277.5" y="1750.4531"/><ellipse cx="4304.2" cy="1766.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4307.1688,1772.0938 Q4306.5906,1772.3906 4305.95,1772.5313 Q4305.3094,1772.6875 4304.6063,1772.6875 Q4302.1063,1772.6875 4300.7781,1771.0469 Q4299.4656,1769.3906 4299.4656,1766.2656 Q4299.4656,1763.1406 4300.7781,1761.4844 Q4302.1063,1759.8281 4304.6063,1759.8281 Q4305.3094,1759.8281 4305.95,1759.9844 Q4306.6063,1760.1406 4307.1688,1760.4375 L4307.1688,1763.1563 Q4306.5438,1762.5781 4305.95,1762.3125 Q4305.3563,1762.0313 4304.7313,1762.0313 Q4303.3875,1762.0313 4302.7,1763.1094 Q4302.0125,1764.1719 4302.0125,1766.2656 Q4302.0125,1768.3594 4302.7,1769.4375 Q4303.3875,1770.5 4304.7313,1770.5 Q4305.3563,1770.5 4305.95,1770.2344 Q4306.5438,1769.9531 4307.1688,1769.375 L4307.1688,1772.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="4320.8" y="1770.6074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4278.5" x2="4576.5" y1="1782.4531" y2="1782.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4278.5" x2="4576.5" y1="1790.4531" y2="1790.4531"/><ellipse cx="4288.5" cy="1801.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4297.5" y="1804.6636">filter_visitor() : void</text><ellipse cx="4288.5" cy="1814.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4297.5" y="1817.4683">~filter_visitor() = default : void</text><ellipse cx="4288.5" cy="1827.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4297.5" y="1830.2729">match() const : tvl::value_t</text><ellipse cx="4288.5" cy="1839.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4297.5" y="1843.0776">match() const : tvl::value_t</text><ellipse cx="4288.5" cy="1852.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4297.5" y="1855.8823">match() const : tvl::value_t</text><ellipse cx="4288.5" cy="1865.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4297.5" y="1868.687">match() const : tvl::value_t</text><ellipse cx="4288.5" cy="1878.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4297.5" y="1881.4917">match() const : tvl::value_t</text><ellipse cx="4288.5" cy="1891.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4297.5" y="1894.2964">match() const : tvl::value_t</text><ellipse cx="4288.5" cy="1903.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4297.5" y="1907.1011">is_inclusive() const : bool</text><ellipse cx="4288.5" cy="1916.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4297.5" y="1919.9058">is_exclusive() const : bool</text><ellipse cx="4288.5" cy="1929.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4297.5" y="1932.7104">type() const : clanguml::common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="3019" y="2176.4531"/><ellipse cx="3034" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3036.9688,2198.0938 Q3036.3906,2198.3906 3035.75,2198.5313 Q3035.1094,2198.6875 3034.4063,2198.6875 Q3031.9063,2198.6875 3030.5781,2197.0469 Q3029.2656,2195.3906 3029.2656,2192.2656 Q3029.2656,2189.1406 3030.5781,2187.4844 Q3031.9063,2185.8281 3034.4063,2185.8281 Q3035.1094,2185.8281 3035.75,2185.9844 Q3036.4063,2186.1406 3036.9688,2186.4375 L3036.9688,2189.1563 Q3036.3438,2188.5781 3035.75,2188.3125 Q3035.1563,2188.0313 3034.5313,2188.0313 Q3033.1875,2188.0313 3032.5,2189.1094 Q3031.8125,2190.1719 3031.8125,2192.2656 Q3031.8125,2194.3594 3032.5,2195.4375 Q3033.1875,2196.5 3034.5313,2196.5 Q3035.1563,2196.5 3035.75,2196.2344 Q3036.3438,2195.9531 3036.9688,2195.375 L3036.9688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="3048" y="2196.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3020" x2="3289" y1="2208.4531" y2="2208.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3020" x2="3289" y1="2216.4531" y2="2216.4531"/><ellipse cx="3030" cy="2227.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="3039" y="2230.6636">anyof_filter() : void</text><ellipse cx="3030" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3039" y="2243.4683">~anyof_filter() = default : void</text><ellipse cx="3030" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3039" y="2256.2729">match() const : tvl::value_t</text><ellipse cx="3030" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3039" y="2269.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="2079.5" y="2176.4531"/><ellipse cx="2094.5" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2097.4688,2198.0938 Q2096.8906,2198.3906 2096.25,2198.5313 Q2095.6094,2198.6875 2094.9063,2198.6875 Q2092.4063,2198.6875 2091.0781,2197.0469 Q2089.7656,2195.3906 2089.7656,2192.2656 Q2089.7656,2189.1406 2091.0781,2187.4844 Q2092.4063,2185.8281 2094.9063,2185.8281 Q2095.6094,2185.8281 2096.25,2185.9844 Q2096.9063,2186.1406 2097.4688,2186.4375 L2097.4688,2189.1563 Q2096.8438,2188.5781 2096.25,2188.3125 Q2095.6563,2188.0313 2095.0313,2188.0313 Q2093.6875,2188.0313 2093,2189.1094 Q2092.3125,2190.1719 2092.3125,2192.2656 Q2092.3125,2194.3594 2093,2195.4375 Q2093.6875,2196.5 2095.0313,2196.5 Q2095.6563,2196.5 2096.25,2196.2344 Q2096.8438,2195.9531 2097.4688,2195.375 L2097.4688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="2108.5" y="2196.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2080.5" x2="2388.5" y1="2208.4531" y2="2208.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2080.5" x2="2388.5" y1="2216.4531" y2="2216.4531"/><ellipse cx="2090.5" cy="2227.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2099.5" y="2230.6636">namespace_filter() : void</text><ellipse cx="2090.5" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2099.5" y="2243.4683">~namespace_filter() = default : void</text><ellipse cx="2090.5" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2099.5" y="2256.2729">match() const : tvl::value_t</text><ellipse cx="2090.5" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2099.5" y="2269.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4429.5" y="2176.4531"/><ellipse cx="4444.5" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4447.4688,2198.0938 Q4446.8906,2198.3906 4446.25,2198.5313 Q4445.6094,2198.6875 4444.9063,2198.6875 Q4442.4063,2198.6875 4441.0781,2197.0469 Q4439.7656,2195.3906 4439.7656,2192.2656 Q4439.7656,2189.1406 4441.0781,2187.4844 Q4442.4063,2185.8281 4444.9063,2185.8281 Q4445.6094,2185.8281 4446.25,2185.9844 Q4446.9063,2186.1406 4447.4688,2186.4375 L4447.4688,2189.1563 Q4446.8438,2188.5781 4446.25,2188.3125 Q4445.6563,2188.0313 4445.0313,2188.0313 Q4443.6875,2188.0313 4443,2189.1094 Q4442.3125,2190.1719 4442.3125,2192.2656 Q4442.3125,2194.3594 4443,2195.4375 Q4443.6875,2196.5 4445.0313,2196.5 Q4445.6563,2196.5 4446.25,2196.2344 Q4446.8438,2195.9531 4447.4688,2195.375 L4447.4688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4458.5" y="2196.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4430.5" x2="4716.5" y1="2208.4531" y2="2208.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4435.5" y="2214.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4437.5" y="2216.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4449.5" y="2222.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4430.5" x2="4716.5" y1="2229.2578" y2="2229.2578"/><ellipse cx="4440.5" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4449.5" y="2243.4683">element_filter() : void</text><ellipse cx="4440.5" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4449.5" y="2256.2729">~element_filter() = default : void</text><ellipse cx="4440.5" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4449.5" y="2269.0776">match() const : tvl::value_t</text><!--MD5=[97547c2450036638bcec6f72d4b27f74]
class C_0002051668456717902300--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" target="_top" title="element_type_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="element_type_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="4753" y="2176.4531"/><ellipse cx="4768" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4770.9688,2198.0938 Q4770.3906,2198.3906 4769.75,2198.5313 Q4769.1094,2198.6875 4768.4063,2198.6875 Q4765.9063,2198.6875 4764.5781,2197.0469 Q4763.2656,2195.3906 4763.2656,2192.2656 Q4763.2656,2189.1406 4764.5781,2187.4844 Q4765.9063,2185.8281 4768.4063,2185.8281 Q4769.1094,2185.8281 4769.75,2185.9844 Q4770.4063,2186.1406 4770.9688,2186.4375 L4770.9688,2189.1563 Q4770.3438,2188.5781 4769.75,2188.3125 Q4769.1563,2188.0313 4768.5313,2188.0313 Q4767.1875,2188.0313 4766.5,2189.1094 Q4765.8125,2190.1719 4765.8125,2192.2656 Q4765.8125,2194.3594 4766.5,2195.4375 Q4767.1875,2196.5 4768.5313,2196.5 Q4769.1563,2196.5 4769.75,2196.2344 Q4770.3438,2195.9531 4770.9688,2195.375 L4770.9688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="4782" y="2196.6074">clanguml::common::model::element_type_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4754" x2="5073" y1="2208.4531" y2="2208.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4759" y="2214.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4761" y="2216.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="4773" y="2222.6636">element_types_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4754" x2="5073" y1="2229.2578" y2="2229.2578"/><ellipse cx="4764" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4773" y="2243.4683">element_type_filter() : void</text><ellipse cx="4764" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4773" y="2256.2729">~element_type_filter() = default : void</text><ellipse cx="4764" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4773" y="2269.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="5109.5" y="2176.4531"/><ellipse cx="5124.5" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5127.4688,2198.0938 Q5126.8906,2198.3906 5126.25,2198.5313 Q5125.6094,2198.6875 5124.9063,2198.6875 Q5122.4063,2198.6875 5121.0781,2197.0469 Q5119.7656,2195.3906 5119.7656,2192.2656 Q5119.7656,2189.1406 5121.0781,2187.4844 Q5122.4063,2185.8281 5124.9063,2185.8281 Q5125.6094,2185.8281 5126.25,2185.9844 Q5126.9063,2186.1406 5127.4688,2186.4375 L5127.4688,2189.1563 Q5126.8438,2188.5781 5126.25,2188.3125 Q5125.6563,2188.0313 5125.0313,2188.0313 Q5123.6875,2188.0313 5123,2189.1094 Q5122.3125,2190.1719 5122.3125,2192.2656 Q5122.3125,2194.3594 5123,2195.4375 Q5123.6875,2196.5 5125.0313,2196.5 Q5125.6563,2196.5 5126.25,2196.2344 Q5126.8438,2195.9531 5127.4688,2195.375 L5127.4688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="5138.5" y="2196.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5110.5" x2="5400.5" y1="2208.4531" y2="2208.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5115.5" y="2214.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5117.5" y="2216.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="5129.5" y="2222.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5110.5" x2="5400.5" y1="2229.2578" y2="2229.2578"/><ellipse cx="5120.5" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="5129.5" y="2243.4683">subclass_filter() : void</text><ellipse cx="5120.5" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5129.5" y="2256.2729">~subclass_filter() = default : void</text><ellipse cx="5120.5" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5129.5" y="2269.0776">match() const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="5436.5" y="2176.4531"/><ellipse cx="5451.5" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5454.4688,2198.0938 Q5453.8906,2198.3906 5453.25,2198.5313 Q5452.6094,2198.6875 5451.9063,2198.6875 Q5449.4063,2198.6875 5448.0781,2197.0469 Q5446.7656,2195.3906 5446.7656,2192.2656 Q5446.7656,2189.1406 5448.0781,2187.4844 Q5449.4063,2185.8281 5451.9063,2185.8281 Q5452.6094,2185.8281 5453.25,2185.9844 Q5453.9063,2186.1406 5454.4688,2186.4375 L5454.4688,2189.1563 Q5453.8438,2188.5781 5453.25,2188.3125 Q5452.6563,2188.0313 5452.0313,2188.0313 Q5450.6875,2188.0313 5450,2189.1094 Q5449.3125,2190.1719 5449.3125,2192.2656 Q5449.3125,2194.3594 5450,2195.4375 Q5450.6875,2196.5 5452.0313,2196.5 Q5452.6563,2196.5 5453.25,2196.2344 Q5453.8438,2195.9531 5454.4688,2195.375 L5454.4688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="5465.5" y="2196.6074">clanguml::common::model::parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5437.5" x2="5721.5" y1="2208.4531" y2="2208.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5442.5" y="2214.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5444.5" y="2216.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="5456.5" y="2222.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5437.5" x2="5721.5" y1="2229.2578" y2="2229.2578"/><ellipse cx="5447.5" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5456.5" y="2243.4683">parents_filter() : void</text><ellipse cx="5447.5" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="5456.5" y="2256.2729">~parents_filter() = default : void</text><ellipse cx="5447.5" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5456.5" y="2269.0776">match() const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="3671" y="2137.9531"/><ellipse cx="3686" cy="2153.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3688.9688,2159.5938 Q3688.3906,2159.8906 3687.75,2160.0313 Q3687.1094,2160.1875 3686.4063,2160.1875 Q3683.9063,2160.1875 3682.5781,2158.5469 Q3681.2656,2156.8906 3681.2656,2153.7656 Q3681.2656,2150.6406 3682.5781,2148.9844 Q3683.9063,2147.3281 3686.4063,2147.3281 Q3687.1094,2147.3281 3687.75,2147.4844 Q3688.4063,2147.6406 3688.9688,2147.9375 L3688.9688,2150.6563 Q3688.3438,2150.0781 3687.75,2149.8125 Q3687.1563,2149.5313 3686.5313,2149.5313 Q3685.1875,2149.5313 3684.5,2150.6094 Q3683.8125,2151.6719 3683.8125,2153.7656 Q3683.8125,2155.8594 3684.5,2156.9375 Q3685.1875,2158 3686.5313,2158 Q3687.1563,2158 3687.75,2157.7344 Q3688.3438,2157.4531 3688.9688,2156.875 L3688.9688,2159.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="3700" y="2158.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="4006" y="2134.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="4007" y="2147.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3672" x2="4393" y1="2169.9531" y2="2169.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3677" y="2175.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2177.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3691" y="2184.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3677" y="2188.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2190.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3691" y="2196.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3677" y="2201.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2203.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="3691" y="2209.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3677" y="2214.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2216.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3691" y="2222.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3672" x2="4393" y1="2229.1719" y2="2229.1719"/><ellipse cx="3682" cy="2240.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="3691" y="2243.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="3682" cy="2252.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="3691" y="2256.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="3682" cy="2265.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3691" y="2268.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2275.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3691" y="2281.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2288.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3691" y="2294.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3679" y="2301.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3691" y="2307.4058">add_adjacent&lt;C,D&gt;() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="3325" y="2182.9531"/><ellipse cx="3340" cy="2198.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3342.9688,2204.5938 Q3342.3906,2204.8906 3341.75,2205.0313 Q3341.1094,2205.1875 3340.4063,2205.1875 Q3337.9063,2205.1875 3336.5781,2203.5469 Q3335.2656,2201.8906 3335.2656,2198.7656 Q3335.2656,2195.6406 3336.5781,2193.9844 Q3337.9063,2192.3281 3340.4063,2192.3281 Q3341.1094,2192.3281 3341.75,2192.4844 Q3342.4063,2192.6406 3342.9688,2192.9375 L3342.9688,2195.6563 Q3342.3438,2195.0781 3341.75,2194.8125 Q3341.1563,2194.5313 3340.5313,2194.5313 Q3339.1875,2194.5313 3338.5,2195.6094 Q3337.8125,2196.6719 3337.8125,2198.7656 Q3337.8125,2200.8594 3338.5,2201.9375 Q3339.1875,2203 3340.5313,2203 Q3341.1563,2203 3341.75,2202.7344 Q3342.3438,2202.4531 3342.9688,2201.875 L3342.9688,2204.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="3354" y="2203.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3326" x2="3635" y1="2214.9531" y2="2214.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3326" x2="3635" y1="2222.9531" y2="2222.9531"/><ellipse cx="3336" cy="2233.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3345" y="2237.1636">relationship_filter() : void</text><ellipse cx="3336" cy="2246.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="3345" y="2249.9683">~relationship_filter() = default : void</text><ellipse cx="3336" cy="2259.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3345" y="2262.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="2425" y="2182.9531"/><ellipse cx="2440" cy="2198.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2442.9688,2204.5938 Q2442.3906,2204.8906 2441.75,2205.0313 Q2441.1094,2205.1875 2440.4063,2205.1875 Q2437.9063,2205.1875 2436.5781,2203.5469 Q2435.2656,2201.8906 2435.2656,2198.7656 Q2435.2656,2195.6406 2436.5781,2193.9844 Q2437.9063,2192.3281 2440.4063,2192.3281 Q2441.1094,2192.3281 2441.75,2192.4844 Q2442.4063,2192.6406 2442.9688,2192.9375 L2442.9688,2195.6563 Q2442.3438,2195.0781 2441.75,2194.8125 Q2441.1563,2194.5313 2440.5313,2194.5313 Q2439.1875,2194.5313 2438.5,2195.6094 Q2437.8125,2196.6719 2437.8125,2198.7656 Q2437.8125,2200.8594 2438.5,2201.9375 Q2439.1875,2203 2440.5313,2203 Q2441.1563,2203 2441.75,2202.7344 Q2442.3438,2202.4531 2442.9688,2201.875 L2442.9688,2204.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="2454" y="2203.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2426" x2="2705" y1="2214.9531" y2="2214.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2426" x2="2705" y1="2222.9531" y2="2222.9531"/><ellipse cx="2436" cy="2233.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2445" y="2237.1636">access_filter() : void</text><ellipse cx="2436" cy="2246.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2445" y="2249.9683">~access_filter() = default : void</text><ellipse cx="2436" cy="2259.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2445" y="2262.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="5757.5" y="2176.4531"/><ellipse cx="5772.5" cy="2192.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5775.4688,2198.0938 Q5774.8906,2198.3906 5774.25,2198.5313 Q5773.6094,2198.6875 5772.9063,2198.6875 Q5770.4063,2198.6875 5769.0781,2197.0469 Q5767.7656,2195.3906 5767.7656,2192.2656 Q5767.7656,2189.1406 5769.0781,2187.4844 Q5770.4063,2185.8281 5772.9063,2185.8281 Q5773.6094,2185.8281 5774.25,2185.9844 Q5774.9063,2186.1406 5775.4688,2186.4375 L5775.4688,2189.1563 Q5774.8438,2188.5781 5774.25,2188.3125 Q5773.6563,2188.0313 5773.0313,2188.0313 Q5771.6875,2188.0313 5771,2189.1094 Q5770.3125,2190.1719 5770.3125,2192.2656 Q5770.3125,2194.3594 5771,2195.4375 Q5771.6875,2196.5 5773.0313,2196.5 Q5773.6563,2196.5 5774.25,2196.2344 Q5774.8438,2195.9531 5775.4688,2195.375 L5775.4688,2198.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="5786.5" y="2196.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5758.5" x2="6040.5" y1="2208.4531" y2="2208.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5763.5" y="2214.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5765.5" y="2216.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="5777.5" y="2222.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5758.5" x2="6040.5" y1="2229.2578" y2="2229.2578"/><ellipse cx="5768.5" cy="2240.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5777.5" y="2243.4683">context_filter() : void</text><ellipse cx="5768.5" cy="2253.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5777.5" y="2256.2729">~context_filter() = default : void</text><ellipse cx="5768.5" cy="2265.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5777.5" y="2269.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="6077" y="2163.4531"/><ellipse cx="6092" cy="2179.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6094.9688,2185.0938 Q6094.3906,2185.3906 6093.75,2185.5313 Q6093.1094,2185.6875 6092.4063,2185.6875 Q6089.9063,2185.6875 6088.5781,2184.0469 Q6087.2656,2182.3906 6087.2656,2179.2656 Q6087.2656,2176.1406 6088.5781,2174.4844 Q6089.9063,2172.8281 6092.4063,2172.8281 Q6093.1094,2172.8281 6093.75,2172.9844 Q6094.4063,2173.1406 6094.9688,2173.4375 L6094.9688,2176.1563 Q6094.3438,2175.5781 6093.75,2175.3125 Q6093.1563,2175.0313 6092.5313,2175.0313 Q6091.1875,2175.0313 6090.5,2176.1094 Q6089.8125,2177.1719 6089.8125,2179.2656 Q6089.8125,2181.3594 6090.5,2182.4375 Q6091.1875,2183.5 6092.5313,2183.5 Q6093.1563,2183.5 6093.75,2183.2344 Q6094.3438,2182.9531 6094.9688,2182.375 L6094.9688,2185.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="6106" y="2183.6074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6078" x2="6349" y1="2195.4531" y2="2195.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6083" y="2201.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6085" y="2203.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6097" y="2209.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6083" y="2214.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6085" y="2216.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6097" y="2222.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6078" x2="6349" y1="2229.0625" y2="2229.0625"/><ellipse cx="6088" cy="2240.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6097" y="2243.2729">paths_filter() : void</text><ellipse cx="6088" cy="2252.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="6097" y="2256.0776">~paths_filter() = default : void</text><ellipse cx="6088" cy="2265.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6097" y="2268.8823">match() const : tvl::value_t</text><ellipse cx="6088" cy="2278.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6097" y="2281.687">match() const : tvl::value_t</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4402.5" y="877.4531"/><ellipse cx="4417.5" cy="893.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4420.4688,899.0938 Q4419.8906,899.3906 4419.25,899.5313 Q4418.6094,899.6875 4417.9063,899.6875 Q4415.4063,899.6875 4414.0781,898.0469 Q4412.7656,896.3906 4412.7656,893.2656 Q4412.7656,890.1406 4414.0781,888.4844 Q4415.4063,886.8281 4417.9063,886.8281 Q4418.6094,886.8281 4419.25,886.9844 Q4419.9063,887.1406 4420.4688,887.4375 L4420.4688,890.1563 Q4419.8438,889.5781 4419.25,889.3125 Q4418.6563,889.0313 4418.0313,889.0313 Q4416.6875,889.0313 4416,890.1094 Q4415.3125,891.1719 4415.3125,893.2656 Q4415.3125,895.3594 4416,896.4375 Q4416.6875,897.5 4418.0313,897.5 Q4418.6563,897.5 4419.25,897.2344 Q4419.8438,896.9531 4420.4688,896.375 L4420.4688,899.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4431.5" y="897.6074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4403.5" x2="4689.5" y1="909.4531" y2="909.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4403.5" x2="4689.5" y1="917.4531" y2="917.4531"/><ellipse cx="4413.5" cy="928.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4422.5" y="931.6636">diagram_filter() : void</text><ellipse cx="4413.5" cy="941.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4422.5" y="944.4683">add_inclusive_filter() : void</text><ellipse cx="4413.5" cy="954.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4422.5" y="957.2729">add_exclusive_filter() : void</text><ellipse cx="4413.5" cy="966.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4422.5" y="970.0776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4410.5" y="976.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4422.5" y="982.8823">init_filters() : void</text><ellipse cx="4413.5" cy="992.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4422.5" y="995.687">should_include&lt;T&gt;() : _Bool</text></a><!--MD5=[bc315e7d0960eeae67e337de181c1bce]
class C_0000148537001046167478--><a href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/package_diagram/model/diagram.h#L28" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/package_diagram/model/diagram.h#L28" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ndrz60kmxukh)" height="227.2656" id="C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.5;" width="561" x="5630" y="1422.9531"/><ellipse cx="5880.75" cy="1438.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5883.7188,1444.5938 Q5883.1406,1444.8906 5882.5,1445.0313 Q5881.8594,1445.1875 5881.1563,1445.1875 Q5878.6563,1445.1875 5877.3281,1443.5469 Q5876.0156,1441.8906 5876.0156,1438.7656 Q5876.0156,1435.6406 5877.3281,1433.9844 Q5878.6563,1432.3281 5881.1563,1432.3281 Q5881.8594,1432.3281 5882.5,1432.4844 Q5883.1563,1432.6406 5883.7188,1432.9375 L5883.7188,1435.6563 Q5883.0938,1435.0781 5882.5,1434.8125 Q5881.9063,1434.5313 5881.2813,1434.5313 Q5879.9375,1434.5313 5879.25,1435.6094 Q5878.5625,1436.6719 5878.5625,1438.7656 Q5878.5625,1440.8594 5879.25,1441.9375 Q5879.9375,1443 5881.2813,1443 Q5881.9063,1443 5882.5,1442.7344 Q5883.0938,1442.4531 5883.7188,1441.875 L5883.7188,1444.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5901.25" y="1443.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5631" x2="6190" y1="1454.9531" y2="1454.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5631" x2="6190" y1="1462.9531" y2="1462.9531"/><ellipse cx="5641" cy="1473.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5650" y="1477.1636">diagram() = default : void</text><ellipse cx="5641" cy="1486.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5650" y="1489.9683">diagram() : void</text><ellipse cx="5641" cy="1499.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5650" y="1502.7729">diagram() = default : void</text><ellipse cx="5641" cy="1512.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5650" y="1515.5776">operator=() : diagram &amp;</text><ellipse cx="5641" cy="1525.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5650" y="1528.3823">operator=() = default : diagram &amp;</text><ellipse cx="5641" cy="1537.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="5650" y="1541.187">type() const : common::model::diagram_t</text><ellipse cx="5641" cy="1550.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="5650" y="1553.9917">packages() const : const common::reference_vector&lt;clanguml::common::model::package&gt; &amp;</text><ellipse cx="5641" cy="1563.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="5650" y="1566.7964">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="5641" cy="1576.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="5650" y="1579.6011">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="5641" cy="1589.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="5650" y="1592.4058">add_package() : void</text><ellipse cx="5641" cy="1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="5650" y="1605.2104">get_package() const : clanguml::common::optional_ref&lt;clanguml::common::model::package&gt;</text><ellipse cx="5641" cy="1614.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="5650" y="1618.0151">get_package() const : clanguml::common::optional_ref&lt;common::model::package&gt;</text><ellipse cx="5641" cy="1627.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5650" y="1630.8198">to_alias() const : std::string</text><ellipse cx="5641" cy="1640.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5650" y="1643.6245">context() const : inja::json</text></a><!--MD5=[d3aab55902f013c3cb0f0512036c505c]
reverse link C_0000845978329661395972 to C_0002193110380171976294--><path d="M7483.5,1927.3931 C7483.5,2003.1131 7483.5,2113.4031 7483.5,2176.2631 " fill="none" id="C_0000845978329661395972&lt;-C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7483.5,1914.1531,7479.5,1920.1531,7483.5,1926.1531,7487.5,1920.1531,7483.5,1914.1531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7489.5" cy="2049.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="13" x="7496.5" y="2053.02">pr</text><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M817.62,2567.0531 C846.38,2594.6031 897.72,2643.7731 954.29,2697.9531 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="959.17,2692.9331,968.78,2711.8231,949.49,2703.0431,959.17,2692.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M7188.87,1406.0531 C7170.54,1559.3731 7152.45,1710.5931 7143.08,1788.9231 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7190.42,1393.1131,7185.7358,1398.5956,7188.9949,1405.0282,7193.6792,1399.5457,7190.42,1393.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7187.5" y="1534.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="7197.5" y="1541.02">kind_</text><!--MD5=[7566fda333217dfb046318d35641bbd5]
reverse link C_0000178138562743079529 to C_0000845978329661395972--><path d="M7367.54,1405.8231 C7405.98,1551.0731 7443.94,1694.4831 7465.47,1775.8331 " fill="none" id="C_0000178138562743079529&lt;-C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7364.18,1393.1131,7361.849,1399.9371,7367.2514,1404.7134,7369.5825,1397.8894,7364.18,1393.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7434.5" y="1534.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="7444.5" y="1541.02">context_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M7501.88,876.5631 C7517.27,891.6831 7526.5,912.8131 7526.5,939.9531 C7526.5,972.7331 7513.04,996.7431 7491.52,1011.9731 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7491.52,867.9331,7493.5657,874.848,7500.7354,875.6192,7498.6897,868.7044,7491.52,867.9331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7534.5" y="937.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="7544.5" y="944.52">template_params_</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M1985.05,2335.7331 C2010.09,2347.2031 2035.98,2357.4131 2061.5,2364.9531 C2212.08,2409.4431 2257.45,2377.5631 2413.5,2394.9531 C2744.53,2431.8331 3131.48,2488.5631 3336.26,2519.6631 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1973.22,2330.1931,1976.9566,2336.3606,1984.0868,2335.2836,1980.3502,2329.1161,1973.22,2330.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2562.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2572.5" y="2408.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M1907.26,2375.4831 C1916.65,2387.9431 1926.15,2400.2431 1935.5,2411.9531 C1957.59,2439.6231 1983.63,2469.2831 2005.34,2493.2731 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1899.39,2365.0031,1899.79,2372.2031,1906.59,2374.6031,1906.19,2367.4031,1899.39,2365.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1938.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="1948.5" y="2408.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1328.92,1053.3231 C1423.89,1288.2931 1643.21,1830.8831 1746.62,2086.7131 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1322.35,1055.7531,1321.35,1034.5931,1335.33,1050.5031,1322.35,1055.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1903.9,1907.3331 C1888.45,1955.7331 1866.3,2025.1131 1846.64,2086.6831 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1897.34,1904.8831,1910.09,1887.9631,1910.67,1909.1431,1897.34,1904.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1516.77,2001.6731 C1554.91,2031.4731 1594.52,2062.4331 1631.67,2091.4531 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1506.06,1993.3031,1508.3265,2000.1488,1515.5173,2000.6896,1513.2508,1993.8439,1506.06,1993.3031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1578.5" y="2046.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1588.5" y="2053.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1287.78,1054.6031 C1293.72,1212.4231 1304.51,1498.9131 1311.32,1679.9031 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1280.78,1054.8631,1287.03,1034.6131,1294.77,1054.3331,1280.78,1054.8631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M1675.93,1072.8431 C1644.01,1163.9031 1598.51,1287.1731 1551.5,1392.9531 C1508.42,1489.8831 1454.18,1595.2631 1408.77,1679.7631 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1669.33,1070.4931,1682.53,1053.9131,1682.55,1075.1031,1669.33,1070.4931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M740.23,2333.6731 C736.52,2359.3631 735.55,2386.6831 740.5,2411.9531 C748.19,2451.1831 767.78,2493.5031 780.86,2518.8531 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="742.34,2320.8031,737.4233,2326.0781,740.4014,2332.6455,745.3182,2327.3705,742.34,2320.8031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="743.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="753.5" y="2408.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M778.29,2333.7131 C783.15,2400.1931 788.99,2480.1831 791.81,2518.8231 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="777.34,2320.6131,773.786,2326.8876,778.2109,2332.5815,781.7649,2326.307,777.34,2320.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="786.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="796.5" y="2408.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M1112.4,1988.0631 C1043.35,2035.9031 968.09,2088.0431 905.81,2131.2031 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1108.44,1982.2831,1128.87,1976.6531,1116.42,1993.7931,1108.44,1982.2831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M7244.5,320.7331 C7244.5,366.7331 7244.5,424.8031 7244.5,486.8431 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7244.5,307.4831,7240.5,313.4831,7244.5,319.4831,7248.5,313.4831,7244.5,307.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7247.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="7257.5" y="453.02">templates_</text><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M1622.32,2567.0531 C1593.37,2594.7231 1541.6,2644.1831 1484.61,2698.6431 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1489.32,2703.8231,1470.02,2712.5831,1479.64,2693.7031,1489.32,2703.8231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M1471.53,2374.4231 C1529.87,2430.2931 1589.99,2487.8431 1622.34,2518.8231 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1461.8,2365.1131,1463.3678,2372.1517,1470.468,2373.4117,1468.9002,2366.3731,1461.8,2365.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1505.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1515.5" y="2408.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M1256.39,2377.7031 C1254.64,2383.5031 1253,2389.2631 1251.5,2394.9531 C1242.32,2429.7231 1236.91,2470.2531 1233.89,2499.9331 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1260.37,2365.0031,1254.7589,2369.5325,1256.7817,2376.4541,1262.3928,2371.9247,1260.37,2365.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1254.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1264.5" y="2408.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1317.5,2030.1831 C1317.5,2049.2331 1317.5,2068.3631 1317.5,2086.7831 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1310.5,2029.9831,1317.5,2009.9831,1324.5,2029.9831,1310.5,2029.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1853.31,1900.2331 C1794.83,1944.4931 1708.61,2007.5531 1629.5,2056.9531 C1613.45,2066.9731 1596.76,2077.0131 1579.81,2086.9131 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1849.26,1894.5231,1869.41,1887.9831,1857.73,1905.6631,1849.26,1894.5231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4628.29,423.4531 C4603.96,576.8131 4572.14,777.3631 4556.32,877.0731 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4630.4,410.1731,4625.5071,415.4703,4628.5149,422.0241,4633.4078,416.727,4630.4,410.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4627.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4637.5" y="453.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4536.15,877.0931 C4522.37,781.5931 4503.9,593.2731 4542.5,439.9531 C4544.58,431.7031 4547.03,423.4231 4549.79,415.1631 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4551.55,410.0331,4544.8373,417.24,4549.9218,414.7606,4552.4012,419.8451,4551.55,410.0331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4545.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4555.5" y="453.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M931.12,2329.8131 C959.91,2344.0631 990.36,2356.6431 1020.5,2364.9531 C1212.56,2417.8831 1718.63,2371.7831 1916.5,2394.9531 C1954.33,2399.3831 1963,2405.2931 2000.5,2411.9531 C2087.27,2427.3631 2113.11,2413.4431 2196.5,2441.9531 C2202.42,2443.9731 2208.37,2446.1931 2214.32,2448.5631 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="927.54,2335.8431,912.94,2320.4831,933.93,2323.3831,927.54,2335.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M1942.41,1907.7131 C1956.81,1956.1531 1976.5,2025.4531 1990.5,2086.9531 C2023.08,2230.0131 1945.97,2306.9931 2048.5,2411.9531 C2095.4,2459.9631 2133.54,2418.7131 2196.5,2441.9531 C2202.45,2444.1531 2208.45,2446.5231 2214.44,2449.0331 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1935.63,1909.4731,1936.59,1888.3031,1949.04,1905.4531,1935.63,1909.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M4263.91,1861.0631 C3937.96,1893.2031 3220.05,1974.6631 3001.5,2086.9531 C2954.62,2111.0431 2913.55,2156.5531 2888.44,2188.7131 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4277.24,1859.7631,4270.8777,1856.3689,4265.2975,1860.9363,4271.6598,1864.3305,4277.24,1859.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3114.5" y="2046.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3124.5" y="2053.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M3204.93,2166.9431 C3232.51,2138.7331 3268.88,2106.7131 3307.5,2086.9531 C3627.77,1923.0931 4054.58,1870.4731 4277.5,1853.7031 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3195.92,2176.3531,3202.9598,2174.7909,3204.2254,2167.6917,3197.1856,2169.254,3195.92,2176.3531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3394.5" y="2046.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="3404.5" y="2053.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M4257.18,1858.2131 C4046.07,1877.7331 3678.15,1926.0831 3383.5,2039.9531 C3308.65,2068.8831 3239.48,2131.9031 3197.17,2176.3331 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4256.57,1851.2331,4277.12,1856.4031,4257.83,1865.1831,4256.57,1851.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M2183.94,2285.2831 C2141.94,2329.1031 2078.01,2385.8631 2008.5,2411.9531 C1911.08,2448.5131 1174.72,2422.4931 1072.5,2441.9531 C989.35,2457.7831 897.86,2494.5531 843.08,2518.8231 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2193.08,2275.5831,2186.0538,2277.2056,2184.849,2284.3153,2191.8753,2282.6929,2193.08,2275.5831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2047.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="2057.5" y="2408.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M4257.22,1854.2931 C3833.35,1876.9331 2741.1,1947.4631 2407.5,2086.9531 C2358.94,2107.2531 2312.81,2145.3531 2280.41,2176.3831 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4256.85,1847.2931,4277.19,1853.2331,4257.59,1861.2831,4256.85,1847.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M4470.89,1958.5931 C4498.81,2031.0731 4533.69,2121.6131 4554.75,2176.2731 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4464.25,1960.8131,4463.59,1939.6431,4477.31,1955.7831,4464.25,1960.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc75b97331daf477f1c24925190464b7]
reverse link C_0000469458052685692314 to C_0002051668456717902300--><path d="M4563.41,1951.9431 C4657.68,2025.4531 4778.82,2119.9231 4851.08,2176.2731 " fill="none" id="C_0000469458052685692314&lt;-C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4559.1,1957.4531,4547.63,1939.6431,4567.71,1946.4131,4559.1,1957.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M4597.39,1889.6731 C4736,1929.4731 4933.95,1995.9431 5091.5,2086.9531 C5133.87,2111.4331 5175.99,2147.1731 5206.93,2176.1531 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4595.14,1896.3131,4577.81,1884.1131,4598.96,1882.8431,4595.14,1896.3131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M4597.74,1862.8631 C4802.15,1888.5531 5150.87,1949.7931 5418.5,2086.9531 C5462.4,2109.4531 5504.46,2146.2031 5534.57,2176.1331 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4596.81,1869.8031,4577.81,1860.4131,4598.52,1855.9031,4596.81,1869.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M3868.51,2320.5331 C3791,2364.7631 3699.31,2417.0931 3624.52,2459.7731 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3879.84,2314.0731,3872.6462,2313.574,3869.4186,2320.0225,3876.6125,2320.5216,3879.84,2314.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3726.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="3736.5" y="2408.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M4315.12,1953.7831 C4254.37,2012.0731 4180.32,2083.1231 4123.27,2137.8631 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4310.58,1948.4331,4329.86,1939.6431,4320.27,1958.5331,4310.58,1948.4331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M3480.5,2282.1331 C3480.5,2326.1331 3480.5,2388.9131 3480.5,2441.7431 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3480.5,2269.1131,3476.5,2275.1131,3480.5,2281.1131,3484.5,2275.1131,3480.5,2269.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3483.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="3493.5" y="2408.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M4257.92,1899.1631 C4121.25,1941.9831 3924.09,2003.6031 3751.5,2056.9531 C3707.98,2070.4031 3693.79,2065.7131 3653.5,2086.9531 C3605.07,2112.4831 3556.95,2152.3531 3523.81,2182.6831 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4256.04,1892.4231,4277.22,1893.1231,4260.23,1905.7831,4256.04,1892.4231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2515.93,2278.4031 C2486.28,2306.9031 2446.66,2341.2531 2406.5,2364.9531 C2320.89,2415.4731 2284.86,2396.4031 2196.5,2441.9531 C2168.24,2456.5231 2138.96,2475.6631 2114.11,2493.2831 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2525.58,2268.9831,2518.4909,2270.3038,2516.9834,2277.3556,2524.0725,2276.0349,2525.58,2268.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2343.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2353.5" y="2408.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M4257.25,1857.6731 C3881.92,1885.5031 2995.1,1962.6431 2723.5,2086.9531 C2675.15,2109.0831 2630.56,2150.8531 2601.16,2182.6731 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4256.98,1850.6831,4277.44,1856.1931,4258.01,1864.6431,4256.98,1850.6831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M4597.81,1849.0831 C4856.73,1859.8931 5359.41,1904.9031 5739.5,2086.9531 C5784.33,2108.4231 5826.53,2145.8231 5856.32,2176.2831 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4597.4,1856.0731,4577.69,1848.2931,4597.95,1842.0831,4597.4,1856.0731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M4597.77,1858.7131 C4961.26,1887.9431 5800.96,1966.6331 6058.5,2086.9531 C6096.86,2104.8731 6132.65,2135.4131 6160.16,2163.2131 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4597.05,1865.6831,4577.67,1857.1131,4598.17,1851.7231,4597.05,1865.6831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4550.53,1015.9131 C4555.76,1146.5231 4558.86,1423.5331 4507.5,1649.9531 C4499.84,1683.7031 4486.85,1719.1231 4473.54,1750.3231 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4549.97,1002.6031,4546.2241,1008.765,4550.4712,1014.5927,4554.2171,1008.4308,4549.97,1002.6031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4543.5" y="1534.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4553.5" y="1541.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4520.75,1015.1631 C4489.74,1108.8331 4439.45,1275.5231 4420.5,1422.9531 C4407.64,1523.0231 4418.68,1549.0831 4420.5,1649.9531 C4421.09,1682.6431 4422.24,1718.4031 4423.44,1750.2331 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4524.9,1002.7231,4519.2064,1007.1483,4521.1013,1014.106,4526.7949,1009.6808,4524.9,1002.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4423.5" y="1534.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="4433.5" y="1541.02">exclusive_</text><!--MD5=[9a3a760a28542ff0b62640347abfd527]
reverse link C_0000148537001046167478 to C_0002143286684830686854--><path d="M6064.15,1658.9131 C6266.26,1832.6131 6572.98,2154.2131 6367.5,2364.9531 C6308.35,2425.6131 3403.04,2436.4031 3318.5,2441.9531 C3044.03,2459.9531 2726.12,2497.1231 2538.69,2520.7231 " fill="none" id="C_0000148537001046167478&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6054.01,1650.2431,6055.9698,1657.1828,6063.1295,1658.0428,6061.1696,1651.1032,6054.01,1650.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6401.5" y="2046.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="68" x="6411.5" y="2053.02">packages_</text><!--MD5=[d3df50313eac67d25f4285ef55f7c15c]
reverse link C_0000197068985320835874 to C_0000148537001046167478--><path d="M4855.06,425.1331 C5122.04,705.9931 5592.79,1201.2231 5803.41,1422.7931 " fill="none" id="C_0000197068985320835874&lt;-C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4849.63,429.5831,4840.93,410.2631,4859.78,419.9331,4849.63,429.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[5b7e032bd111ee92656b8900da6e57da]
link C_0001623832985137466228 to C_0000202859212831973510--><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[2cb5fca2ac964dbbc47316fe5a033f14]
@startuml
title clang-uml package diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "clanguml::common::model::message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+set_comment() : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+file_relative() const : const std::string &
+set_file_relative() : void
+line() const : unsigned int
+set_line() : void
+location_id() const : unsigned int
+set_location_id() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_location.h#L55{hash_}]]]
}
class "clanguml::common::model::path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/path.h#L224{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/namespace.h#L29{value}]]]
}
enum "clanguml::common::model::template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L31{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
enum "clanguml::common::model::rpqualifier" as C_0002193110380171976294
enum C_0002193110380171976294 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L40{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "clanguml::common::model::context" as C_0000845978329661395972
class C_0000845978329661395972 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L46{context}]] {
+to_string() const : std::string
+operator==() const : bool
+operator!=() const : bool
+is_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L47{is_const}]]]
+is_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L48{is_volatile}]]]
+is_ref_const : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L49{is_ref_const}]]]
+is_ref_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L50{is_ref_volatile}]]]
}
class "clanguml::common::model::path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "clanguml::common::model::template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L67{template_parameter}]] {
{static} +make_template_type() : clanguml::common::model::template_parameter
{static} +make_template_template_type() : clanguml::common::model::template_parameter
{static} +make_non_type_template() : clanguml::common::model::template_parameter
{static} +make_argument() : clanguml::common::model::template_parameter
{static} +make_unexposed_argument() : clanguml::common::model::template_parameter
+set_type() : void
+type() const : std::optional<std::string>
+set_id() : void
+id() const : const std::optional<int64_t> &
+set_name() : void
+name() const : std::optional<std::string>
+set_default_value() : void
+default_value() const : const std::optional<std::string> &
+is_variadic() : void
+is_variadic() const : bool
+calculate_specialization_match() const : int
+is_template_parameter() const : bool
+is_template_parameter() : void
+is_template_template_parameter() const : bool
+is_template_template_parameter() : void
+to_string() const : std::string
+add_template_param() : void
+add_template_param() : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+is_association() const : bool
+is_specialization() const : bool
+is_same_specialization() const : bool
+find_nested_relationships() const : bool
+set_concept_constraint() : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : clanguml::common::model::template_parameter_kind_t
+set_kind() : void
+is_unexposed() const : bool
+set_unexposed() : void
+is_function_template() : void
+is_function_template() const : bool
+is_member_pointer() : void
+is_member_pointer() const : bool
+is_data_pointer() : void
+is_data_pointer() const : bool
+is_array() : void
+is_array() const : bool
+push_context() : void
+deduced_context() const : const std::deque<context> &
+deduced_context() : void
+is_ellipsis() : void
+is_ellipsis() const : bool
+is_noexcept() : void
+is_noexcept() const : bool
-template_parameter() = default : void
-deduced_context_str() const : std::string
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L187{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L190{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L193{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L197{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L201{is_template_template_parameter_}]]]
-is_ellipsis_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L203{is_ellipsis_}]]]
-is_noexcept_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L205{is_noexcept_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L208{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L210{is_function_template_}]]]
-is_data_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L212{is_data_pointer_}]]]
-is_member_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L214{is_member_pointer_}]]]
-is_array_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L216{is_array_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L223{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L229{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_parameter.h#L231{is_unexposed_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : clanguml::common::model::relationship_t
+set_destination() : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : clanguml::common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/relationship.h#L64{label_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : clanguml::common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+type_name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+path() const : const clanguml::common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const clanguml::common::model::namespace_ &
+context() const : inja::json
}
class "clanguml::common::model::template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params() const : std::ostream &
+set_base_template() : void
+base_template() const : std::string
+add_template() : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+set_implicit() : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+get_element<V=T>() : auto
+get_element_parent<V=T>() : auto
+get_element<V=T>() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L45{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : clanguml::common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : clanguml::common::model::source_file &
+operator=() : clanguml::common::model::source_file &
+operator==() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : clanguml::common::model::path<clanguml::common::model::fs_path_sep>
+fs_path() const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get_with_namespace() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : clanguml::common::model::diagram &
+operator=() : clanguml::common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram.h#L87{complete_}]]]
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : clanguml::common::model::package &
+operator=() : clanguml::common::model::package &
+type_name() const : std::string
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : clanguml::common::model::filter_t
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "clanguml::common::model::element_type_filter" as C_0002051668456717902300
class C_0002051668456717902300 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L130{element_type_filter}]] {
+element_type_filter() : void
+~element_type_filter() = default : void
+match() const : tvl::value_t
-element_types_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L138{element_types_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L141{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L149{roots_}]]]
}
class "clanguml::common::model::parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L152{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
+match() const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L160{children_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L165{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent<C,D>() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L298{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L300{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L301{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L302{forward_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L305{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L318{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L329{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L337{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L340{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L353{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L354{root_}]]]
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/common/model/diagram_filter.h#L357{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include<T>() : _Bool
}
class "diagram" as C_0000148537001046167478
class C_0000148537001046167478 [[https://github.com/bkryza/clang-uml/blob/e2b772d8d6ed61adcb6dcd50003f96096df02f9e/src/package_diagram/model/diagram.h#L28{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : diagram &
+operator=() = default : diagram &
+type() const : common::model::diagram_t
+packages() const : const common::reference_vector<clanguml::common::model::package> &
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+add_package() : void
+get_package() const : clanguml::common::optional_ref<clanguml::common::model::package>
+get_package() const : clanguml::common::optional_ref<common::model::package>
+to_alias() const : std::string
+context() const : inja::json
}
C_0000845978329661395972 o- - C_0002193110380171976294 : +pr
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000845978329661395972 : -context_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0002051668456717902300
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0000148537001046167478 o- - C_0002143286684830686854 : -packages_
C_0000197068985320835874 <|- - C_0000148537001046167478

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>