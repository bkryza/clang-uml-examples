<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2526px" preserveAspectRatio="none" style="width:7425px;height:2526px;" version="1.1" viewBox="0 0 7425 2526" width="7425px" zoomAndPan="magnify"><defs><filter height="300%" id="f1cm9jj2tcnsit" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="303" x="3567.5" y="16.708">clang-uml package diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="34" y="144.4531"/><ellipse cx="49" cy="160.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53.1094,166.4531 L45.3906,166.4531 L45.3906,154.0625 L53.1094,154.0625 L53.1094,156.2188 L47.8438,156.2188 L47.8438,158.8906 L52.6094,158.8906 L52.6094,161.0469 L47.8438,161.0469 L47.8438,164.2969 L53.1094,164.2969 L53.1094,166.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="63" y="164.6074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="298" y1="176.4531" y2="176.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="40" y="190.6636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="40" y="203.4683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="40" y="216.2729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="40" y="229.0776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="298" y1="235.6719" y2="235.6719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="5119.5" y="2035.9531"/><ellipse cx="5134.5" cy="2051.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5138.6094,2057.9531 L5130.8906,2057.9531 L5130.8906,2045.5625 L5138.6094,2045.5625 L5138.6094,2047.7188 L5133.3438,2047.7188 L5133.3438,2050.3906 L5138.1094,2050.3906 L5138.1094,2052.5469 L5133.3438,2052.5469 L5133.3438,2055.7969 L5138.6094,2055.7969 L5138.6094,2057.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="5148.5" y="2056.1074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5120.5" x2="5376.5" y1="2067.9531" y2="2067.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="5125.5" y="2082.1636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="5125.5" y="2094.9683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="5125.5" y="2107.7729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="5125.5" y="2120.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5120.5" x2="5376.5" y1="2127.1719" y2="2127.1719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3970.5" y="1984.4531"/><ellipse cx="3985.5" cy="2000.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3989.6094,2006.4531 L3981.8906,2006.4531 L3981.8906,1994.0625 L3989.6094,1994.0625 L3989.6094,1996.2188 L3984.3438,1996.2188 L3984.3438,1998.8906 L3989.1094,1998.8906 L3989.1094,2001.0469 L3984.3438,2001.0469 L3984.3438,2004.2969 L3989.6094,2004.2969 L3989.6094,2006.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="3999.5" y="2004.6074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3971.5" x2="4257.5" y1="2016.4531" y2="2016.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="3976.5" y="2030.6636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="3976.5" y="2043.4683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3976.5" y="2056.2729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3976.5" y="2069.0776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="3976.5" y="2081.8823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3976.5" y="2094.687">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="3976.5" y="2107.4917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3976.5" y="2120.2964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3976.5" y="2133.1011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="3976.5" y="2145.9058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="3976.5" y="2158.7104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="3976.5" y="2171.5151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3971.5" x2="4257.5" y1="2178.1094" y2="2178.1094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="334" y="28.9531"/><ellipse cx="349" cy="44.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M353.1094,50.9531 L345.3906,50.9531 L345.3906,38.5625 L353.1094,38.5625 L353.1094,40.7188 L347.8438,40.7188 L347.8438,43.3906 L352.6094,43.3906 L352.6094,45.5469 L347.8438,45.5469 L347.8438,48.7969 L353.1094,48.7969 L353.1094,50.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="363" y="49.1074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="604" y1="60.9531" y2="60.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="340" y="75.1636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="340" y="87.9683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="340" y="100.7729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="340" y="113.5776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="340" y="126.3823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="340" y="139.187">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="151.9917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="340" y="164.7964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="340" y="177.6011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="340" y="190.4058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="340" y="203.2104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="340" y="216.0151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="340" y="228.8198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="340" y="241.6245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="340" y="254.4292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="340" y="267.2339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="280.0386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="340" y="292.8433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="340" y="305.6479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="340" y="318.4526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="340" y="331.2573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="344.062">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="604" y1="350.6563" y2="350.6563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="640" y="156.9531"/><ellipse cx="655" cy="172.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M659.1094,178.9531 L651.3906,178.9531 L651.3906,166.5625 L659.1094,166.5625 L659.1094,168.7188 L653.8438,168.7188 L653.8438,171.3906 L658.6094,171.3906 L658.6094,173.5469 L653.8438,173.5469 L653.8438,176.7969 L659.1094,176.7969 L659.1094,178.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="283" x="669" y="177.1074">clanguml::common::model::message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="641" x2="954" y1="188.9531" y2="188.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="646" y="203.1636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="646" y="215.9683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="641" x2="954" y1="222.5625" y2="222.5625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="5205.5" y="99.4531"/><ellipse cx="5305.75" cy="115.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5308.7188,121.0938 Q5308.1406,121.3906 5307.5,121.5313 Q5306.8594,121.6875 5306.1563,121.6875 Q5303.6563,121.6875 5302.3281,120.0469 Q5301.0156,118.3906 5301.0156,115.2656 Q5301.0156,112.1406 5302.3281,110.4844 Q5303.6563,108.8281 5306.1563,108.8281 Q5306.8594,108.8281 5307.5,108.9844 Q5308.1563,109.1406 5308.7188,109.4375 L5308.7188,112.1563 Q5308.0938,111.5781 5307.5,111.3125 Q5306.9063,111.0313 5306.2813,111.0313 Q5304.9375,111.0313 5304.25,112.1094 Q5303.5625,113.1719 5303.5625,115.2656 Q5303.5625,117.3594 5304.25,118.4375 Q5304.9375,119.5 5306.2813,119.5 Q5306.9063,119.5 5307.5,119.2344 Q5308.0938,118.9531 5308.7188,118.375 L5308.7188,121.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="5326.25" y="119.6074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5206.5" x2="5706.5" y1="131.4531" y2="131.4531"/><ellipse cx="5216.5" cy="142.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="5225.5" y="145.6636">add_decorators() : void</text><ellipse cx="5216.5" cy="155.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="5225.5" y="158.4683">append() : void</text><ellipse cx="5216.5" cy="168.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="5225.5" y="171.2729">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="5216.5" cy="180.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="5225.5" y="184.0776">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="5216.5" cy="193.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="5225.5" y="196.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="5216.5" cy="206.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="5225.5" y="209.687">set_comment() : void</text><ellipse cx="5216.5" cy="219.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="5225.5" y="222.4917">skip() const : bool</text><ellipse cx="5216.5" cy="232.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5225.5" y="235.2964">skip_relationship() const : bool</text><ellipse cx="5216.5" cy="244.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5225.5" y="248.1011">style_spec() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5206.5" x2="5706.5" y1="254.6953" y2="254.6953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5211.5" y="260.6953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5213.5" y="262.6953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="5225.5" y="268.9058">comment_ : std::optional&lt;comment_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5211.5" y="273.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5213.5" y="275.5"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="5225.5" y="281.7104">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="235.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="5744.5" y="76.4531"/><ellipse cx="5759.5" cy="92.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5762.4688,98.0938 Q5761.8906,98.3906 5761.25,98.5313 Q5760.6094,98.6875 5759.9063,98.6875 Q5757.4063,98.6875 5756.0781,97.0469 Q5754.7656,95.3906 5754.7656,92.2656 Q5754.7656,89.1406 5756.0781,87.4844 Q5757.4063,85.8281 5759.9063,85.8281 Q5760.6094,85.8281 5761.25,85.9844 Q5761.9063,86.1406 5762.4688,86.4375 L5762.4688,89.1563 Q5761.8438,88.5781 5761.25,88.3125 Q5760.6563,88.0313 5760.0313,88.0313 Q5758.6875,88.0313 5758,89.1094 Q5757.3125,90.1719 5757.3125,92.2656 Q5757.3125,94.3594 5758,95.4375 Q5758.6875,96.5 5760.0313,96.5 Q5760.6563,96.5 5761.25,96.2344 Q5761.8438,95.9531 5762.4688,95.375 L5762.4688,98.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="5773.5" y="96.6074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5745.5" x2="6045.5" y1="108.4531" y2="108.4531"/><ellipse cx="5755.5" cy="119.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="5764.5" y="122.6636">source_location() = default : void</text><ellipse cx="5755.5" cy="132.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="5764.5" y="135.4683">source_location() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5745.5" x2="6045.5" y1="142.0625" y2="142.0625"/><ellipse cx="5755.5" cy="153.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="5764.5" y="156.2729">file() const : const std::string &amp;</text><ellipse cx="5755.5" cy="165.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="5764.5" y="169.0776">file_relative() const : const std::string &amp;</text><ellipse cx="5755.5" cy="178.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="5764.5" y="181.8823">line() const : unsigned int</text><ellipse cx="5755.5" cy="191.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5764.5" y="194.687">location_id() const : unsigned int</text><ellipse cx="5755.5" cy="204.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5764.5" y="207.4917">set_file() : void</text><ellipse cx="5755.5" cy="217.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="5764.5" y="220.2964">set_file_relative() : void</text><ellipse cx="5755.5" cy="229.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5764.5" y="233.1011">set_line() : void</text><ellipse cx="5755.5" cy="242.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="5764.5" y="245.9058">set_location_id() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5745.5" x2="6045.5" y1="252.5" y2="252.5"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5750.5" y="258.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5752.5" y="260.5"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5764.5" y="266.7104">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5750.5" y="271.3047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5752.5" y="273.3047"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5764.5" y="279.5151">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5750.5" y="284.1094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5752.5" y="286.1094"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5764.5" y="292.3198">hash_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5750.5" y="296.9141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5752.5" y="298.9141"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="5764.5" y="305.1245">line_ : unsigned int</text></a><!--MD5=[5b6d29821e498683759dae39d058a0bd]
class C_0002031918453259559099--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L28" target="_top" title="path_type" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L28" xlink:show="new" xlink:title="path_type" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="73.6094" id="C_0002031918453259559099" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="5809" y="2441.9531"/><ellipse cx="5824" cy="2457.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5828.1094,2463.9531 L5820.3906,2463.9531 L5820.3906,2451.5625 L5828.1094,2451.5625 L5828.1094,2453.7188 L5822.8438,2453.7188 L5822.8438,2456.3906 L5827.6094,2456.3906 L5827.6094,2458.5469 L5822.8438,2458.5469 L5822.8438,2461.7969 L5828.1094,2461.7969 L5828.1094,2463.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="5838" y="2462.1074">clanguml::common::model::path_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5810" x2="6073" y1="2473.9531" y2="2473.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="5815" y="2488.1636">kNamespace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5815" y="2500.9683">kFilesystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5810" x2="6073" y1="2507.5625" y2="2507.5625"/></a><!--MD5=[84ee75f83c3c126eb45e1cb912bd00ce]
class C_0000844837292165721774--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L30" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L30" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="558.5781" id="C_0000844837292165721774" style="stroke: #A80036; stroke-width: 1.5;" width="413" x="5735" y="1805.9531"/><ellipse cx="5837.25" cy="1821.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5840.2188,1827.5938 Q5839.6406,1827.8906 5839,1828.0313 Q5838.3594,1828.1875 5837.6563,1828.1875 Q5835.1563,1828.1875 5833.8281,1826.5469 Q5832.5156,1824.8906 5832.5156,1821.7656 Q5832.5156,1818.6406 5833.8281,1816.9844 Q5835.1563,1815.3281 5837.6563,1815.3281 Q5838.3594,1815.3281 5839,1815.4844 Q5839.6563,1815.6406 5840.2188,1815.9375 L5840.2188,1818.6563 Q5839.5938,1818.0781 5839,1817.8125 Q5838.4063,1817.5313 5837.7813,1817.5313 Q5836.4375,1817.5313 5835.75,1818.6094 Q5835.0625,1819.6719 5835.0625,1821.7656 Q5835.0625,1823.8594 5835.75,1824.9375 Q5836.4375,1826 5837.7813,1826 Q5838.4063,1826 5839,1825.7344 Q5839.5938,1825.4531 5840.2188,1824.875 L5840.2188,1827.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="5857.75" y="1826.1074">clanguml::common::model::path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5736" x2="6147" y1="1837.9531" y2="1837.9531"/><ellipse cx="5746" cy="1848.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5755" y="1852.1636">path() : void</text><ellipse cx="5746" cy="1861.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5755" y="1864.9683">path() : void</text><ellipse cx="5746" cy="1874.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5755" y="1877.7729">path() : void</text><ellipse cx="5746" cy="1887.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5755" y="1890.5776">path() = default : void</text><ellipse cx="5746" cy="1900.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="5755" y="1903.3823">path() noexcept = default : void</text><ellipse cx="5746" cy="1912.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5755" y="1916.187">path() : void</text><ellipse cx="5746" cy="1925.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5755" y="1928.9917">path() : void</text><ellipse cx="5746" cy="1938.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5755" y="1941.7964">~path() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5736" x2="6147" y1="1948.3906" y2="1948.3906"/><ellipse cx="5746" cy="1959.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="5755" y="1962.6011">operator=() : clanguml::common::model::path &amp;</text><ellipse cx="5746" cy="1972.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="5755" y="1975.4058">operator=() noexcept = default : clanguml::common::model::path &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5736" x2="6147" y1="1982" y2="1982"/><ellipse cx="5746" cy="1993" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="5755" y="1996.2104">operator[]() : std::string &amp;</text><ellipse cx="5746" cy="2005.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="5755" y="2009.0151">operator[]() const : const std::string &amp;</text><ellipse cx="5746" cy="2018.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="5755" y="2021.8198">operator|() const : clanguml::common::model::path</text><ellipse cx="5746" cy="2031.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="5755" y="2034.6245">operator|() const : clanguml::common::model::path</text><ellipse cx="5746" cy="2044.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5755" y="2047.4292">operator|=() : void</text><ellipse cx="5746" cy="2057.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5755" y="2060.2339">operator|=() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5736" x2="6147" y1="2066.8281" y2="2066.8281"/><ellipse cx="5746" cy="2077.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="5755" y="2081.0386">append() : void</text><ellipse cx="5746" cy="2090.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="5755" y="2093.8433">append() : void</text><ellipse cx="5746" cy="2103.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="5755" y="2106.6479">begin() const : path::container_type::const_iterator</text><ellipse cx="5746" cy="2116.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5755" y="2119.4526">begin() : path::container_type::iterator</text><ellipse cx="5746" cy="2129.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="5755" y="2132.2573">cbegin() const : path::container_type::const_iterator</text><ellipse cx="5746" cy="2141.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="5755" y="2145.062">cend() const : path::container_type::const_iterator</text><ellipse cx="5746" cy="2154.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="5755" y="2157.8667">common_path() const : clanguml::common::model::path</text><ellipse cx="5746" cy="2167.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="5755" y="2170.6714">end() const : path::container_type::const_iterator</text><ellipse cx="5746" cy="2180.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5755" y="2183.4761">end() : path::container_type::iterator</text><ellipse cx="5746" cy="2193.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5755" y="2196.2808">ends_with() const : bool</text><ellipse cx="5746" cy="2205.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5755" y="2209.0854">is_empty() const : bool</text><ellipse cx="5746" cy="2218.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5755" y="2221.8901">name() const : std::string</text><ellipse cx="5746" cy="2231.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="5755" y="2234.6948">parent() const : std::optional&lt;path&gt;</text><ellipse cx="5746" cy="2244.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="5755" y="2247.4995">pop_back() : void</text><ellipse cx="5746" cy="2257.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="5755" y="2260.3042">relative() const : std::string</text><ellipse cx="5746" cy="2269.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5755" y="2273.1089">relative_to() const : clanguml::common::model::path</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5743" y="2279.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="5755" y="2285.9136">separator() const : const char *</text><ellipse cx="5746" cy="2295.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5755" y="2298.7183">size() const : size_t</text><ellipse cx="5746" cy="2308.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5755" y="2311.5229">starts_with() const : bool</text><ellipse cx="5746" cy="2321.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="5755" y="2324.3276">to_string() const : std::string</text><ellipse cx="5746" cy="2333.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="5755" y="2337.1323">type() const : clanguml::common::model::path_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5736" x2="6147" y1="2343.7266" y2="2343.7266"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5741" y="2349.7266"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5743" y="2351.7266"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="5755" y="2357.937">path_ : clanguml::common::model::path::container_type</text></a><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="6" y="862.4531"/><ellipse cx="21" cy="878.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,884.0938 Q23.3906,884.3906 22.75,884.5313 Q22.1094,884.6875 21.4063,884.6875 Q18.9063,884.6875 17.5781,883.0469 Q16.2656,881.3906 16.2656,878.2656 Q16.2656,875.1406 17.5781,873.4844 Q18.9063,871.8281 21.4063,871.8281 Q22.1094,871.8281 22.75,871.9844 Q23.4063,872.1406 23.9688,872.4375 L23.9688,875.1563 Q23.3438,874.5781 22.75,874.3125 Q22.1563,874.0313 21.5313,874.0313 Q20.1875,874.0313 19.5,875.1094 Q18.8125,876.1719 18.8125,878.2656 Q18.8125,880.3594 19.5,881.4375 Q20.1875,882.5 21.5313,882.5 Q22.1563,882.5 22.75,882.2344 Q23.3438,881.9531 23.9688,881.375 L23.9688,884.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="35" y="882.6074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="326" y1="894.4531" y2="894.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="326" y1="902.4531" y2="902.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="908.4531"/><ellipse cx="17" cy="913.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="26" y="916.6636">value : const std::string_view</text></a><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L31" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L31" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="374" x="6697.5" y="1521.9531"/><ellipse cx="6712.5" cy="1537.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6716.6094,1543.9531 L6708.8906,1543.9531 L6708.8906,1531.5625 L6716.6094,1531.5625 L6716.6094,1533.7188 L6711.3438,1533.7188 L6711.3438,1536.3906 L6716.1094,1536.3906 L6716.1094,1538.5469 L6711.3438,1538.5469 L6711.3438,1541.7969 L6716.6094,1541.7969 L6716.6094,1543.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="342" x="6726.5" y="1542.1074">clanguml::common::model::template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6698.5" x2="7070.5" y1="1553.9531" y2="1553.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="6703.5" y="1568.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6703.5" y="1580.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6703.5" y="1593.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="6703.5" y="1606.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6703.5" y="1619.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6698.5" x2="7070.5" y1="1625.9766" y2="1625.9766"/></a><!--MD5=[90017e9468cbeb0bc9373ae936737720]
class C_0002193110380171976294--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L40" target="_top" title="rpqualifier" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L40" xlink:show="new" xlink:title="rpqualifier" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="99.2188" id="C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="7098.5" y="2035.9531"/><ellipse cx="7113.5" cy="2051.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7117.6094,2057.9531 L7109.8906,2057.9531 L7109.8906,2045.5625 L7117.6094,2045.5625 L7117.6094,2047.7188 L7112.3438,2047.7188 L7112.3438,2050.3906 L7117.1094,2050.3906 L7117.1094,2052.5469 L7112.3438,2052.5469 L7112.3438,2055.7969 L7117.6094,2055.7969 L7117.6094,2057.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="234" x="7127.5" y="2056.1074">clanguml::common::model::rpqualifier</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7099.5" x2="7363.5" y1="2067.9531" y2="2067.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="7104.5" y="2082.1636">kLValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7104.5" y="2094.9683">kRValueReference</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="7104.5" y="2107.7729">kPointer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7104.5" y="2120.5776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7099.5" x2="7363.5" y1="2127.1719" y2="2127.1719"/></a><!--MD5=[5e78f8fc55e497bc4b976d966927ffe8]
class C_0000845978329661395972--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L46" target="_top" title="context" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L46" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="145.6328" id="C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="7106.5" y="1504.9531"/><ellipse cx="7121.5" cy="1520.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7124.4688,1526.5938 Q7123.8906,1526.8906 7123.25,1527.0313 Q7122.6094,1527.1875 7121.9063,1527.1875 Q7119.4063,1527.1875 7118.0781,1525.5469 Q7116.7656,1523.8906 7116.7656,1520.7656 Q7116.7656,1517.6406 7118.0781,1515.9844 Q7119.4063,1514.3281 7121.9063,1514.3281 Q7122.6094,1514.3281 7123.25,1514.4844 Q7123.9063,1514.6406 7124.4688,1514.9375 L7124.4688,1517.6563 Q7123.8438,1517.0781 7123.25,1516.8125 Q7122.6563,1516.5313 7122.0313,1516.5313 Q7120.6875,1516.5313 7120,1517.6094 Q7119.3125,1518.6719 7119.3125,1520.7656 Q7119.3125,1522.8594 7120,1523.9375 Q7120.6875,1525 7122.0313,1525 Q7122.6563,1525 7123.25,1524.7344 Q7123.8438,1524.4531 7124.4688,1523.875 L7124.4688,1526.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="218" x="7135.5" y="1525.1074">clanguml::common::model::context</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7107.5" x2="7355.5" y1="1536.9531" y2="1536.9531"/><ellipse cx="7117.5" cy="1547.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="7126.5" y="1551.1636">operator!=() const : bool</text><ellipse cx="7117.5" cy="1560.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="7126.5" y="1563.9683">operator==() const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="7107.5" x2="7355.5" y1="1570.5625" y2="1570.5625"/><ellipse cx="7117.5" cy="1581.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7126.5" y="1584.7729">to_string() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7107.5" x2="7355.5" y1="1591.3672" y2="1591.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7112.5" y="1597.3672"/><ellipse cx="7117.5" cy="1602.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" target="_top" title="is_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47" xlink:show="new" xlink:title="is_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="7126.5" y="1605.5776">is_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7112.5" y="1610.1719"/><ellipse cx="7117.5" cy="1615.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" target="_top" title="is_ref_const" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49" xlink:show="new" xlink:title="is_ref_const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="7126.5" y="1618.3823">is_ref_const : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7112.5" y="1622.9766"/><ellipse cx="7117.5" cy="1627.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" target="_top" title="is_ref_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50" xlink:show="new" xlink:title="is_ref_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7126.5" y="1631.187">is_ref_volatile : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="7112.5" y="1635.7813"/><ellipse cx="7117.5" cy="1640.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" target="_top" title="is_volatile" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48" xlink:show="new" xlink:title="is_volatile" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="7126.5" y="1643.9917">is_volatile : bool</text></a><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L67" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L67" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="913.9141" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="6745.5" y="435.9531"/><ellipse cx="6838.75" cy="451.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6841.7188,457.5938 Q6841.1406,457.8906 6840.5,458.0313 Q6839.8594,458.1875 6839.1563,458.1875 Q6836.6563,458.1875 6835.3281,456.5469 Q6834.0156,454.8906 6834.0156,451.7656 Q6834.0156,448.6406 6835.3281,446.9844 Q6836.6563,445.3281 6839.1563,445.3281 Q6839.8594,445.3281 6840.5,445.4844 Q6841.1563,445.6406 6841.7188,445.9375 L6841.7188,448.6563 Q6841.0938,448.0781 6840.5,447.8125 Q6839.9063,447.5313 6839.2813,447.5313 Q6837.9375,447.5313 6837.25,448.6094 Q6836.5625,449.6719 6836.5625,451.7656 Q6836.5625,453.8594 6837.25,454.9375 Q6837.9375,456 6839.2813,456 Q6839.9063,456 6840.5,455.7344 Q6841.0938,455.4531 6841.7188,454.875 L6841.7188,457.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="6859.25" y="456.1074">clanguml::common::model::template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6746.5" x2="7238.5" y1="467.9531" y2="467.9531"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="475.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="6765.5" y="482.1636">template_parameter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6746.5" x2="7238.5" y1="488.7578" y2="488.7578"/><ellipse cx="6756.5" cy="499.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="6765.5" y="502.9683">add_template_param() : void</text><ellipse cx="6756.5" cy="512.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="6765.5" y="515.7729">add_template_param() : void</text><ellipse cx="6756.5" cy="525.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="6765.5" y="528.5776">calculate_specialization_match() const : int</text><ellipse cx="6756.5" cy="538.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6765.5" y="541.3823">clear_params() : void</text><ellipse cx="6756.5" cy="550.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="6765.5" y="554.187">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="6756.5" cy="563.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="6765.5" y="566.9917">deduced_context() : void</text><ellipse cx="6756.5" cy="576.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="6765.5" y="579.7964">deduced_context() const : const std::deque&lt;context&gt; &amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="586.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="6765.5" y="592.6011">deduced_context_str() const : std::string</text><ellipse cx="6756.5" cy="602.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="6765.5" y="605.4058">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="6756.5" cy="615" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="6765.5" y="618.2104">find_nested_relationships() const : bool</text><ellipse cx="6756.5" cy="627.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6765.5" y="631.0151">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="6756.5" cy="640.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6765.5" y="643.8198">is_array() const : bool</text><ellipse cx="6756.5" cy="653.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="6765.5" y="656.6245">is_array() : void</text><ellipse cx="6756.5" cy="666.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="6765.5" y="669.4292">is_association() const : bool</text><ellipse cx="6756.5" cy="679.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="6765.5" y="682.2339">is_data_pointer() : void</text><ellipse cx="6756.5" cy="691.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="6765.5" y="695.0386">is_data_pointer() const : bool</text><ellipse cx="6756.5" cy="704.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="6765.5" y="707.8433">is_ellipsis() : void</text><ellipse cx="6756.5" cy="717.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6765.5" y="720.6479">is_ellipsis() const : bool</text><ellipse cx="6756.5" cy="730.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="6765.5" y="733.4526">is_function_template() const : bool</text><ellipse cx="6756.5" cy="743.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="6765.5" y="746.2573">is_function_template() : void</text><ellipse cx="6756.5" cy="755.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6765.5" y="759.062">is_member_pointer() : void</text><ellipse cx="6756.5" cy="768.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="6765.5" y="771.8667">is_member_pointer() const : bool</text><ellipse cx="6756.5" cy="781.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6765.5" y="784.6714">is_noexcept() const : bool</text><ellipse cx="6756.5" cy="794.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6765.5" y="797.4761">is_noexcept() : void</text><ellipse cx="6756.5" cy="807.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6765.5" y="810.2808">is_same_specialization() const : bool</text><ellipse cx="6756.5" cy="819.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6765.5" y="823.0854">is_specialization() const : bool</text><ellipse cx="6756.5" cy="832.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="6765.5" y="835.8901">is_template_parameter() : void</text><ellipse cx="6756.5" cy="845.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="6765.5" y="848.6948">is_template_parameter() const : bool</text><ellipse cx="6756.5" cy="858.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="6765.5" y="861.4995">is_template_template_parameter() : void</text><ellipse cx="6756.5" cy="871.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="6765.5" y="874.3042">is_template_template_parameter() const : bool</text><ellipse cx="6756.5" cy="883.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="6765.5" y="887.1089">is_unexposed() const : bool</text><ellipse cx="6756.5" cy="896.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6765.5" y="899.9136">is_variadic() noexcept : void</text><ellipse cx="6756.5" cy="909.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="6765.5" y="912.7183">is_variadic() const noexcept : bool</text><ellipse cx="6756.5" cy="922.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="6765.5" y="925.5229">kind() const : clanguml::common::model::template_parameter_kind_t</text><ellipse cx="6756.5" cy="935.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="6765.5" y="938.3276">make_argument() : clanguml::common::model::template_parameter</text><ellipse cx="6756.5" cy="947.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="439" x="6765.5" y="951.1323">make_non_type_template() : clanguml::common::model::template_parameter</text><ellipse cx="6756.5" cy="960.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="6765.5" y="963.937">make_template_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="6756.5" cy="973.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="412" x="6765.5" y="976.7417">make_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="6756.5" cy="986.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="6765.5" y="989.5464">make_unexposed_argument() : clanguml::common::model::template_parameter</text><ellipse cx="6756.5" cy="999.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="6765.5" y="1002.3511">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="6756.5" cy="1011.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="6765.5" y="1015.1558">push_context() : void</text><ellipse cx="6756.5" cy="1024.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="6765.5" y="1027.9604">set_concept_constraint() : void</text><ellipse cx="6756.5" cy="1037.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="6765.5" y="1040.7651">set_default_value() : void</text><ellipse cx="6756.5" cy="1050.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="6765.5" y="1053.5698">set_id() : void</text><ellipse cx="6756.5" cy="1063.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6765.5" y="1066.3745">set_kind() : void</text><ellipse cx="6756.5" cy="1075.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="6765.5" y="1079.1792">set_name() : void</text><ellipse cx="6756.5" cy="1088.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6765.5" y="1091.9839">set_type() : void</text><ellipse cx="6756.5" cy="1101.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6765.5" y="1104.7886">set_unexposed() : void</text><ellipse cx="6756.5" cy="1114.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="6765.5" y="1117.5933">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="6756.5" cy="1127.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6765.5" y="1130.3979">to_string() const : std::string</text><ellipse cx="6756.5" cy="1139.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="6765.5" y="1143.2026">type() const : std::optional&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6746.5" x2="7238.5" y1="1149.7969" y2="1149.7969"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1155.7969"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1157.7969"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="6765.5" y="1164.0073">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1168.6016"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1170.6016"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6765.5" y="1176.812">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1181.4063"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1183.4063"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6765.5" y="1189.6167">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1194.2109"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1196.2109"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" target="_top" title="is_array_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217" xlink:show="new" xlink:title="is_array_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="6765.5" y="1202.4214">is_array_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1207.0156"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1209.0156"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" target="_top" title="is_data_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213" xlink:show="new" xlink:title="is_data_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6765.5" y="1215.2261">is_data_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1219.8203"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1221.8203"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" target="_top" title="is_ellipsis_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204" xlink:show="new" xlink:title="is_ellipsis_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6765.5" y="1228.0308">is_ellipsis_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1232.625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1234.625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6765.5" y="1240.8354">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1245.4297"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1247.4297"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" target="_top" title="is_member_pointer_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="is_member_pointer_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6765.5" y="1253.6401">is_member_pointer_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1258.2344"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1260.2344"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" target="_top" title="is_noexcept_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_noexcept_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="6765.5" y="1266.4448">is_noexcept_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1271.0391"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1273.0391"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="6765.5" y="1279.2495">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1283.8438"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1285.8438"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="6765.5" y="1292.0542">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1296.6484"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1298.6484"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="6765.5" y="1304.8589">is_unexposed_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1309.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1311.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6765.5" y="1317.6636">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1322.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1324.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6765.5" y="1330.4683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6751.5" y="1335.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6753.5" y="1337.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6765.5" y="1343.2729">type_ : std::optional&lt;std::string&gt;</text></a><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="6227.5" y="849.9531"/><ellipse cx="6242.5" cy="865.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6245.4688,871.5938 Q6244.8906,871.8906 6244.25,872.0313 Q6243.6094,872.1875 6242.9063,872.1875 Q6240.4063,872.1875 6239.0781,870.5469 Q6237.7656,868.8906 6237.7656,865.7656 Q6237.7656,862.6406 6239.0781,860.9844 Q6240.4063,859.3281 6242.9063,859.3281 Q6243.6094,859.3281 6244.25,859.4844 Q6244.9063,859.6406 6245.4688,859.9375 L6245.4688,862.6563 Q6244.8438,862.0781 6244.25,861.8125 Q6243.6563,861.5313 6243.0313,861.5313 Q6241.6875,861.5313 6241,862.6094 Q6240.3125,863.6719 6240.3125,865.7656 Q6240.3125,867.8594 6241,868.9375 Q6241.6875,870 6243.0313,870 Q6243.6563,870 6244.25,869.7344 Q6244.8438,869.4531 6245.4688,868.875 L6245.4688,871.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="6256.5" y="870.1074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6228.5" x2="6534.5" y1="881.9531" y2="881.9531"/><ellipse cx="6238.5" cy="892.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="6247.5" y="896.1636">set_style() : void</text><ellipse cx="6238.5" cy="905.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6247.5" y="908.9683">style() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6228.5" x2="6534.5" y1="915.5625" y2="915.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6233.5" y="921.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6235.5" y="923.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6247.5" y="929.7729">style_ : std::string</text></a><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="286.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="396" x="5249.5" y="1434.9531"/><ellipse cx="5320.75" cy="1450.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5323.7188,1456.5938 Q5323.1406,1456.8906 5322.5,1457.0313 Q5321.8594,1457.1875 5321.1563,1457.1875 Q5318.6563,1457.1875 5317.3281,1455.5469 Q5316.0156,1453.8906 5316.0156,1450.7656 Q5316.0156,1447.6406 5317.3281,1445.9844 Q5318.6563,1444.3281 5321.1563,1444.3281 Q5321.8594,1444.3281 5322.5,1444.4844 Q5323.1563,1444.6406 5323.7188,1444.9375 L5323.7188,1447.6563 Q5323.0938,1447.0781 5322.5,1446.8125 Q5321.9063,1446.5313 5321.2813,1446.5313 Q5319.9375,1446.5313 5319.25,1447.6094 Q5318.5625,1448.6719 5318.5625,1450.7656 Q5318.5625,1452.8594 5319.25,1453.9375 Q5319.9375,1455 5321.2813,1455 Q5321.9063,1455 5322.5,1454.7344 Q5323.0938,1454.4531 5323.7188,1453.875 L5323.7188,1456.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="5341.25" y="1455.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5250.5" x2="5644.5" y1="1466.9531" y2="1466.9531"/><ellipse cx="5260.5" cy="1477.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5269.5" y="1481.1636">relationship() : void</text><ellipse cx="5260.5" cy="1490.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5269.5" y="1493.9683">~relationship() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5250.5" x2="5644.5" y1="1500.5625" y2="1500.5625"/><ellipse cx="5260.5" cy="1511.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="5269.5" y="1514.7729">access() const noexcept : clanguml::common::model::access_t</text><ellipse cx="5260.5" cy="1524.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="5269.5" y="1527.5776">destination() const : clanguml::common::id_t</text><ellipse cx="5260.5" cy="1537.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5269.5" y="1540.3823">label() const : std::string</text><ellipse cx="5260.5" cy="1549.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="5269.5" y="1553.187">multiplicity_destination() const : std::string</text><ellipse cx="5260.5" cy="1562.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5269.5" y="1565.9917">multiplicity_source() const : std::string</text><ellipse cx="5260.5" cy="1575.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5269.5" y="1578.7964">set_access() noexcept : void</text><ellipse cx="5260.5" cy="1588.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5269.5" y="1591.6011">set_destination() : void</text><ellipse cx="5260.5" cy="1601.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5269.5" y="1604.4058">set_label() : void</text><ellipse cx="5260.5" cy="1614" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="5269.5" y="1617.2104">set_multiplicity_destination() : void</text><ellipse cx="5260.5" cy="1626.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="5269.5" y="1630.0151">set_multiplicity_source() : void</text><ellipse cx="5260.5" cy="1639.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5269.5" y="1642.8198">set_type() noexcept : void</text><ellipse cx="5260.5" cy="1652.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="5269.5" y="1655.6245">type() const noexcept : clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5250.5" x2="5644.5" y1="1662.2188" y2="1662.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5255.5" y="1668.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5257.5" y="1670.2188"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5269.5" y="1676.4292">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5255.5" y="1681.0234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5257.5" y="1683.0234"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5269.5" y="1689.2339">label_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5255.5" y="1693.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5257.5" y="1695.8281"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="5269.5" y="1702.0386">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5255.5" y="1706.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5257.5" y="1708.6328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="5269.5" y="1714.8433">multiplicity_source_ : std::string</text></a><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="337.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="5707" y="723.9531"/><ellipse cx="5751.75" cy="739.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5754.7188,745.5938 Q5754.1406,745.8906 5753.5,746.0313 Q5752.8594,746.1875 5752.1563,746.1875 Q5749.6563,746.1875 5748.3281,744.5469 Q5747.0156,742.8906 5747.0156,739.7656 Q5747.0156,736.6406 5748.3281,734.9844 Q5749.6563,733.3281 5752.1563,733.3281 Q5752.8594,733.3281 5753.5,733.4844 Q5754.1563,733.6406 5754.7188,733.9375 L5754.7188,736.6563 Q5754.0938,736.0781 5753.5,735.8125 Q5752.9063,735.5313 5752.2813,735.5313 Q5750.9375,735.5313 5750.25,736.6094 Q5749.5625,737.6719 5749.5625,739.7656 Q5749.5625,741.8594 5750.25,742.9375 Q5750.9375,744 5752.2813,744 Q5752.9063,744 5753.5,743.7344 Q5754.0938,743.4531 5754.7188,742.875 L5754.7188,745.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="5772.25" y="744.1074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5708" x2="6083" y1="755.9531" y2="755.9531"/><ellipse cx="5718" cy="766.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5727" y="770.1636">diagram_element() : void</text><ellipse cx="5718" cy="779.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5727" y="782.9683">~diagram_element() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5708" x2="6083" y1="789.5625" y2="789.5625"/><ellipse cx="5718" cy="800.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="5727" y="803.7729">add_relationship() : void</text><ellipse cx="5718" cy="813.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5727" y="816.5776">alias() const : std::string</text><ellipse cx="5718" cy="826.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="5727" y="829.3823">append() : void</text><ellipse cx="5718" cy="838.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="5727" y="842.187">complete() const : bool</text><ellipse cx="5718" cy="851.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5727" y="854.9917">complete() : void</text><ellipse cx="5718" cy="864.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5727" y="867.7964">context() const : inja::json</text><ellipse cx="5718" cy="877.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5727" y="880.6011">full_name() const : std::string</text><ellipse cx="5718" cy="890.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="5727" y="893.4058">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="5718" cy="903" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5727" y="906.2104">is_nested() const : bool</text><ellipse cx="5718" cy="915.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5727" y="919.0151">name() const : std::string</text><ellipse cx="5718" cy="928.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="5727" y="931.8198">nested() : void</text><ellipse cx="5718" cy="941.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="5727" y="944.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="5718" cy="954.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="5727" y="957.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="5718" cy="967.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5727" y="970.2339">set_id() : void</text><ellipse cx="5718" cy="979.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5727" y="983.0386">set_name() : void</text><ellipse cx="5718" cy="992.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5727" y="995.8433">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5708" x2="6083" y1="1002.4375" y2="1002.4375"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5713" y="1008.4375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5715" y="1010.4375"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="5727" y="1016.6479">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5713" y="1021.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5715" y="1023.2422"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="5727" y="1029.4526">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5713" y="1034.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5715" y="1036.0469"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5727" y="1042.2573">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5713" y="1046.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5715" y="1048.8516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5727" y="1055.062">nested_ : bool</text></a><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="196.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="5680.5" y="1479.4531"/><ellipse cx="5797.25" cy="1495.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5800.2188,1501.0938 Q5799.6406,1501.3906 5799,1501.5313 Q5798.3594,1501.6875 5797.6563,1501.6875 Q5795.1563,1501.6875 5793.8281,1500.0469 Q5792.5156,1498.3906 5792.5156,1495.2656 Q5792.5156,1492.1406 5793.8281,1490.4844 Q5795.1563,1488.8281 5797.6563,1488.8281 Q5798.3594,1488.8281 5799,1488.9844 Q5799.6563,1489.1406 5800.2188,1489.4375 L5800.2188,1492.1563 Q5799.5938,1491.5781 5799,1491.3125 Q5798.4063,1491.0313 5797.7813,1491.0313 Q5796.4375,1491.0313 5795.75,1492.1094 Q5795.0625,1493.1719 5795.0625,1495.2656 Q5795.0625,1497.3594 5795.75,1498.4375 Q5796.4375,1499.5 5797.7813,1499.5 Q5798.4063,1499.5 5799,1499.2344 Q5799.5938,1498.9531 5800.2188,1498.375 L5800.2188,1501.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="5817.75" y="1499.6074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5681.5" x2="6143.5" y1="1511.4531" y2="1511.4531"/><ellipse cx="5691.5" cy="1522.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="5700.5" y="1525.6636">element() : void</text><ellipse cx="5691.5" cy="1535.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="5700.5" y="1538.4683">~element() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="5681.5" x2="6143.5" y1="1545.0625" y2="1545.0625"/><ellipse cx="5691.5" cy="1556.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5700.5" y="1559.2729">context() const : inja::json</text><ellipse cx="5691.5" cy="1568.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5700.5" y="1572.0776">full_name() const : std::string</text><ellipse cx="5691.5" cy="1581.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5700.5" y="1584.8823">full_name_no_ns() const : std::string</text><ellipse cx="5691.5" cy="1594.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="5700.5" y="1597.687">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="5691.5" cy="1607.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="5700.5" y="1610.4917">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="5691.5" cy="1620.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5700.5" y="1623.2964">name_and_ns() const : std::string</text><ellipse cx="5691.5" cy="1632.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5700.5" y="1636.1011">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="5691.5" cy="1645.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5700.5" y="1648.9058">set_namespace() : void</text><ellipse cx="5691.5" cy="1658.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="5700.5" y="1661.7104">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5681.5" x2="6143.5" y1="1668.3047" y2="1668.3047"/></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="6780" y="105.9531"/><ellipse cx="6858.75" cy="121.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6861.7188,127.5938 Q6861.1406,127.8906 6860.5,128.0313 Q6859.8594,128.1875 6859.1563,128.1875 Q6856.6563,128.1875 6855.3281,126.5469 Q6854.0156,124.8906 6854.0156,121.7656 Q6854.0156,118.6406 6855.3281,116.9844 Q6856.6563,115.3281 6859.1563,115.3281 Q6859.8594,115.3281 6860.5,115.4844 Q6861.1563,115.6406 6861.7188,115.9375 L6861.7188,118.6563 Q6861.0938,118.0781 6860.5,117.8125 Q6859.9063,117.5313 6859.2813,117.5313 Q6857.9375,117.5313 6857.25,118.6094 Q6856.5625,119.6719 6856.5625,121.7656 Q6856.5625,123.8594 6857.25,124.9375 Q6857.9375,126 6859.2813,126 Q6859.9063,126 6860.5,125.7344 Q6861.0938,125.4531 6861.7188,124.875 L6861.7188,127.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="6879.25" y="126.1074">clanguml::common::model::template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6781" x2="7204" y1="137.9531" y2="137.9531"/><ellipse cx="6791" cy="148.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="6800" y="152.1636">add_template() : void</text><ellipse cx="6791" cy="161.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6800" y="164.9683">base_template() const : std::string</text><ellipse cx="6791" cy="174.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6800" y="177.7729">calculate_template_specialization_match() const : int</text><ellipse cx="6791" cy="187.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6800" y="190.5776">is_implicit() const : bool</text><ellipse cx="6791" cy="200.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="6800" y="203.3823">render_template_params() const : std::ostream &amp;</text><ellipse cx="6791" cy="212.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6800" y="216.187">set_base_template() : void</text><ellipse cx="6791" cy="225.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6800" y="228.9917">set_implicit() : void</text><ellipse cx="6791" cy="238.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="6800" y="241.7964">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6781" x2="7204" y1="248.3906" y2="248.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6786" y="254.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6788" y="256.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="6800" y="262.6011">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6786" y="267.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6788" y="269.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6800" y="275.4058">is_implicit_ : bool</text></a><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="345.7031" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="351" x="362" y="719.9531"/><ellipse cx="390.05" cy="735.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M393.0188,741.5938 Q392.4406,741.8906 391.8,742.0313 Q391.1594,742.1875 390.4563,742.1875 Q387.9563,742.1875 386.6281,740.5469 Q385.3156,738.8906 385.3156,735.7656 Q385.3156,732.6406 386.6281,730.9844 Q387.9563,729.3281 390.4563,729.3281 Q391.1594,729.3281 391.8,729.4844 Q392.4563,729.6406 393.0188,729.9375 L393.0188,732.6563 Q392.3938,732.0781 391.8,731.8125 Q391.2063,731.5313 390.5813,731.5313 Q389.2375,731.5313 388.55,732.6094 Q387.8625,733.6719 387.8625,735.7656 Q387.8625,737.8594 388.55,738.9375 Q389.2375,740 390.5813,740 Q391.2063,740 391.8,739.7344 Q392.3938,739.4531 393.0188,738.875 L393.0188,741.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="406.95" y="740.1074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="675" y="716.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="676" y="729.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="363" x2="712" y1="751.9531" y2="751.9531"/><ellipse cx="373" cy="762.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="382" y="766.1636">nested_trait() = default : void</text><ellipse cx="373" cy="775.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="382" y="778.9683">nested_trait() = deleted : void</text><ellipse cx="373" cy="788.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="382" y="791.7729">nested_trait() noexcept = default : void</text><ellipse cx="373" cy="801.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="382" y="804.5776">~nested_trait() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="363" x2="712" y1="811.1719" y2="811.1719"/><ellipse cx="373" cy="822.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="382" y="825.3823">operator=() = deleted : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="373" cy="834.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="382" y="838.187">operator=() noexcept = default : nested_trait&lt;T,Path&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="363" x2="712" y1="844.7813" y2="844.7813"/><ellipse cx="373" cy="855.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="382" y="858.9917">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="373" cy="868.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="382" y="871.7964">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="373" cy="881.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="382" y="884.6011">all_of&lt;F&gt;() const : _Bool</text><ellipse cx="373" cy="894.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="382" y="897.4058">begin() : auto</text><ellipse cx="373" cy="907" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="382" y="910.2104">begin() const : auto</text><ellipse cx="373" cy="919.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="382" y="923.0151">cbegin() const : auto</text><ellipse cx="373" cy="932.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="382" y="935.8198">cend() const : auto</text><ellipse cx="373" cy="945.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="382" y="948.6245">end() : auto</text><ellipse cx="373" cy="958.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="382" y="961.4292">end() const : auto</text><ellipse cx="373" cy="971.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="382" y="974.2339">get_element&lt;V=T&gt;() const : auto</text><ellipse cx="373" cy="983.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="382" y="987.0386">get_element&lt;V=T&gt;() const : auto</text><ellipse cx="373" cy="996.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="382" y="999.8433">get_element_parent&lt;V=T&gt;() const : auto</text><ellipse cx="373" cy="1009.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="382" y="1012.6479">has_element() const : bool</text><ellipse cx="373" cy="1022.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="382" y="1025.4526">is_empty() const : bool</text><ellipse cx="373" cy="1035.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="382" y="1038.2573">print_tree() : void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="363" x2="712" y1="1044.8516" y2="1044.8516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="368" y="1050.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="370" y="1052.8516"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="382" y="1059.062">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="6183" y="2042.4531"/><ellipse cx="6198" cy="2058.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6202.1094,2064.4531 L6194.3906,2064.4531 L6194.3906,2052.0625 L6202.1094,2052.0625 L6202.1094,2054.2188 L6196.8438,2054.2188 L6196.8438,2056.8906 L6201.6094,2056.8906 L6201.6094,2059.0469 L6196.8438,2059.0469 L6196.8438,2062.2969 L6202.1094,2062.2969 L6202.1094,2064.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="6212" y="2062.6074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6184" x2="6463" y1="2074.4531" y2="2074.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="6189" y="2088.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="6189" y="2101.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="6189" y="2114.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6184" x2="6463" y1="2120.8672" y2="2120.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="748.5" y="862.4531"/><ellipse cx="763.5" cy="878.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M766.4688,884.0938 Q765.8906,884.3906 765.25,884.5313 Q764.6094,884.6875 763.9063,884.6875 Q761.4063,884.6875 760.0781,883.0469 Q758.7656,881.3906 758.7656,878.2656 Q758.7656,875.1406 760.0781,873.4844 Q761.4063,871.8281 763.9063,871.8281 Q764.6094,871.8281 765.25,871.9844 Q765.9063,872.1406 766.4688,872.4375 L766.4688,875.1563 Q765.8438,874.5781 765.25,874.3125 Q764.6563,874.0313 764.0313,874.0313 Q762.6875,874.0313 762,875.1094 Q761.3125,876.1719 761.3125,878.2656 Q761.3125,880.3594 762,881.4375 Q762.6875,882.5 764.0313,882.5 Q764.6563,882.5 765.25,882.2344 Q765.8438,881.9531 766.4688,881.375 L766.4688,884.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="777.5" y="882.6074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="749.5" x2="1025.5" y1="894.4531" y2="894.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="749.5" x2="1025.5" y1="902.4531" y2="902.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="754.5" y="908.4531"/><ellipse cx="759.5" cy="913.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="768.5" y="916.6636">value : const std::string_view</text></a><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="302.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="404" x="6179.5" y="1426.9531"/><ellipse cx="6258.25" cy="1442.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6261.2188,1448.5938 Q6260.6406,1448.8906 6260,1449.0313 Q6259.3594,1449.1875 6258.6563,1449.1875 Q6256.1563,1449.1875 6254.8281,1447.5469 Q6253.5156,1445.8906 6253.5156,1442.7656 Q6253.5156,1439.6406 6254.8281,1437.9844 Q6256.1563,1436.3281 6258.6563,1436.3281 Q6259.3594,1436.3281 6260,1436.4844 Q6260.6563,1436.6406 6261.2188,1436.9375 L6261.2188,1439.6563 Q6260.5938,1439.0781 6260,1438.8125 Q6259.4063,1438.5313 6258.7813,1438.5313 Q6257.4375,1438.5313 6256.75,1439.6094 Q6256.0625,1440.6719 6256.0625,1442.7656 Q6256.0625,1444.8594 6256.75,1445.9375 Q6257.4375,1447 6258.7813,1447 Q6259.4063,1447 6260,1446.7344 Q6260.5938,1446.4531 6261.2188,1445.875 L6261.2188,1448.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="6278.75" y="1447.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6180.5" x2="6582.5" y1="1458.9531" y2="1458.9531"/><ellipse cx="6190.5" cy="1469.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6199.5" y="1473.1636">source_file() = default : void</text><ellipse cx="6190.5" cy="1482.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="6199.5" y="1485.9683">source_file() : void</text><ellipse cx="6190.5" cy="1495.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6199.5" y="1498.7729">source_file() = deleted : void</text><ellipse cx="6190.5" cy="1508.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6199.5" y="1511.5776">source_file() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6180.5" x2="6582.5" y1="1518.1719" y2="1518.1719"/><ellipse cx="6190.5" cy="1529.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6199.5" y="1532.3823">operator=() = deleted : clanguml::common::model::source_file &amp;</text><ellipse cx="6190.5" cy="1541.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6199.5" y="1545.187">operator=() = deleted : clanguml::common::model::source_file &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6180.5" x2="6582.5" y1="1551.7813" y2="1551.7813"/><ellipse cx="6190.5" cy="1562.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6199.5" y="1565.9917">operator==() const : bool</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6180.5" x2="6582.5" y1="1572.5859" y2="1572.5859"/><ellipse cx="6190.5" cy="1583.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="6199.5" y="1586.7964">context() const : inja::json</text><ellipse cx="6190.5" cy="1596.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="6199.5" y="1599.6011">fs_path() const : std::filesystem::path</text><ellipse cx="6190.5" cy="1609.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6199.5" y="1612.4058">full_name() const : std::string</text><ellipse cx="6190.5" cy="1622" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="6199.5" y="1625.2104">full_path() const : clanguml::common::model::path</text><ellipse cx="6190.5" cy="1634.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="6199.5" y="1638.0151">is_absolute() const : bool</text><ellipse cx="6190.5" cy="1647.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="6199.5" y="1650.8198">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="6190.5" cy="1660.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="6199.5" y="1663.6245">set_absolute() : void</text><ellipse cx="6190.5" cy="1673.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="6199.5" y="1676.4292">set_path() : void</text><ellipse cx="6190.5" cy="1686.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6199.5" y="1689.2339">set_type() : void</text><ellipse cx="6190.5" cy="1698.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="6199.5" y="1702.0386">type() const : clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6180.5" x2="6582.5" y1="1708.6328" y2="1708.6328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6185.5" y="1714.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6187.5" y="1716.6328"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6199.5" y="1722.8433">is_absolute_ : bool</text></a><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="396.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="659" x="2122" y="694.4531"/><ellipse cx="2336.25" cy="710.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2336.3594,705.7969 L2335.2031,710.875 L2337.5313,710.875 L2336.3594,705.7969 Z M2334.875,703.5625 L2337.8594,703.5625 L2341.2188,715.9531 L2338.7656,715.9531 L2338,712.8906 L2334.7188,712.8906 L2333.9688,715.9531 L2331.5313,715.9531 L2334.875,703.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="2356.75" y="714.6074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2123" x2="2780" y1="726.4531" y2="726.4531"/><ellipse cx="2133" cy="737.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2142" y="740.6636">diagram() : void</text><ellipse cx="2133" cy="750.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2142" y="753.4683">diagram() = deleted : void</text><ellipse cx="2133" cy="763.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2142" y="766.2729">diagram() noexcept : void</text><ellipse cx="2133" cy="775.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2142" y="779.0776">~diagram() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2123" x2="2780" y1="785.6719" y2="785.6719"/><ellipse cx="2133" cy="796.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="2142" y="799.8823">operator=() = deleted : clanguml::common::model::diagram &amp;</text><ellipse cx="2133" cy="809.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="2142" y="812.687">operator=() noexcept : clanguml::common::model::diagram &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2123" x2="2780" y1="819.2813" y2="819.2813"/><ellipse cx="2133" cy="830.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2142" y="833.4917">complete() const : bool</text><ellipse cx="2133" cy="843.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="2142" y="846.2964">context() const = 0 : inja::json</text><ellipse cx="2133" cy="855.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="2142" y="859.1011">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="2133" cy="868.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="2142" y="871.9058">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="2133" cy="881.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="2142" y="884.7104">get_with_namespace() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="2133" cy="894.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2142" y="897.5151">has_element() const : bool</text><ellipse cx="2133" cy="907.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2142" y="910.3198">name() const : std::string</text><ellipse cx="2133" cy="919.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2142" y="923.1245">set_complete() : void</text><ellipse cx="2133" cy="932.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2142" y="935.9292">set_filter() : void</text><ellipse cx="2133" cy="945.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2142" y="948.7339">set_name() : void</text><ellipse cx="2133" cy="958.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="961.5386">should_include() const : bool</text><ellipse cx="2133" cy="971.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="974.3433">should_include() const : bool</text><ellipse cx="2133" cy="983.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="987.1479">should_include() const : bool</text><ellipse cx="2133" cy="996.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="999.9526">should_include() const : bool</text><ellipse cx="2133" cy="1009.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="1012.7573">should_include() const : bool</text><ellipse cx="2133" cy="1022.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="1025.562">should_include() const : bool</text><ellipse cx="2133" cy="1035.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2142" y="1038.3667">should_include() const : bool</text><ellipse cx="2133" cy="1047.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="2142" y="1051.1714">type() const = 0 : clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2123" x2="2780" y1="1057.7656" y2="1057.7656"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2128" y="1063.7656"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2130" y="1065.7656"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2142" y="1071.9761">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2128" y="1076.5703"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2130" y="1078.5703"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2142" y="1084.7808">name_ : std::string</text></a><!--MD5=[7a65113fcf2e45c443974977561a90c9]
class C_0001786360230161561276--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L29" target="_top" title="element_view" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L29" xlink:show="new" xlink:title="element_view" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="99.2188" id="C_0001786360230161561276" style="stroke: #A80036; stroke-width: 1.5;" width="297" x="18" y="1528.4531"/><ellipse cx="33" cy="1544.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35.9688,1550.0938 Q35.3906,1550.3906 34.75,1550.5313 Q34.1094,1550.6875 33.4063,1550.6875 Q30.9063,1550.6875 29.5781,1549.0469 Q28.2656,1547.3906 28.2656,1544.2656 Q28.2656,1541.1406 29.5781,1539.4844 Q30.9063,1537.8281 33.4063,1537.8281 Q34.1094,1537.8281 34.75,1537.9844 Q35.4063,1538.1406 35.9688,1538.4375 L35.9688,1541.1563 Q35.3438,1540.5781 34.75,1540.3125 Q34.1563,1540.0313 33.5313,1540.0313 Q32.1875,1540.0313 31.5,1541.1094 Q30.8125,1542.1719 30.8125,1544.2656 Q30.8125,1546.3594 31.5,1547.4375 Q32.1875,1548.5 33.5313,1548.5 Q34.1563,1548.5 34.75,1548.2344 Q35.3438,1547.9531 35.9688,1547.375 L35.9688,1550.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="47" y="1548.6074">clanguml::common::model::element_view</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="309" y="1525.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="310" y="1537.5918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19" x2="314" y1="1560.4531" y2="1560.4531"/><ellipse cx="29" cy="1571.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="38" y="1574.6636">add() : void</text><ellipse cx="29" cy="1584.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="38" y="1587.4683">get() const : common::optional_ref&lt;T&gt;</text><ellipse cx="29" cy="1597.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="38" y="1600.2729">view() const : const reference_vector&lt;T&gt; &amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19" x2="314" y1="1606.8672" y2="1606.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="24" y="1612.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26" y="1614.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="38" y="1621.0776">elements_ : reference_vector&lt;T&gt;</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L35" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L35" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="204.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="383" x="6499" y="1982.9531"/><ellipse cx="6573.75" cy="1998.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6576.7188,2004.5938 Q6576.1406,2004.8906 6575.5,2005.0313 Q6574.8594,2005.1875 6574.1563,2005.1875 Q6571.6563,2005.1875 6570.3281,2003.5469 Q6569.0156,2001.8906 6569.0156,1998.7656 Q6569.0156,1995.6406 6570.3281,1993.9844 Q6571.6563,1992.3281 6574.1563,1992.3281 Q6574.8594,1992.3281 6575.5,1992.4844 Q6576.1563,1992.6406 6576.7188,1992.9375 L6576.7188,1995.6563 Q6576.0938,1995.0781 6575.5,1994.8125 Q6574.9063,1994.5313 6574.2813,1994.5313 Q6572.9375,1994.5313 6572.25,1995.6094 Q6571.5625,1996.6719 6571.5625,1998.7656 Q6571.5625,2000.8594 6572.25,2001.9375 Q6572.9375,2003 6574.2813,2003 Q6574.9063,2003 6575.5,2002.7344 Q6576.0938,2002.4531 6576.7188,2001.875 L6576.7188,2004.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="6594.25" y="2003.1074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6500" x2="6881" y1="2014.9531" y2="2014.9531"/><ellipse cx="6510" cy="2025.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6519" y="2029.1636">package() : void</text><ellipse cx="6510" cy="2038.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="6519" y="2041.9683">package() = deleted : void</text><ellipse cx="6510" cy="2051.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6519" y="2054.7729">package() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6500" x2="6881" y1="2061.3672" y2="2061.3672"/><ellipse cx="6510" cy="2072.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="6519" y="2075.5776">operator=() = deleted : clanguml::common::model::package &amp;</text><ellipse cx="6510" cy="2085.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="6519" y="2088.3823">operator=() = deleted : clanguml::common::model::package &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="6500" x2="6881" y1="2094.9766" y2="2094.9766"/><ellipse cx="6510" cy="2105.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="6519" y="2109.187">add_package() : void</text><ellipse cx="6510" cy="2118.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6519" y="2121.9917">full_name() const : std::string</text><ellipse cx="6510" cy="2131.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6519" y="2134.7964">is_deprecated() const : bool</text><ellipse cx="6510" cy="2144.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="6519" y="2147.6011">set_deprecated() : void</text><ellipse cx="6510" cy="2157.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="6519" y="2160.4058">type_name() const : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6500" x2="6881" y1="2167" y2="2167"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6505" y="2173"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6507" y="2175"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6519" y="2181.2104">is_deprecated_ : bool</text></a><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="943.5" y="1540.9531"/><ellipse cx="958.5" cy="1556.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M962.6094,1562.9531 L954.8906,1562.9531 L954.8906,1550.5625 L962.6094,1550.5625 L962.6094,1552.7188 L957.3438,1552.7188 L957.3438,1555.3906 L962.1094,1555.3906 L962.1094,1557.5469 L957.3438,1557.5469 L957.3438,1560.7969 L962.6094,1560.7969 L962.6094,1562.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="972.5" y="1561.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="944.5" x2="1184.5" y1="1572.9531" y2="1572.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="949.5" y="1587.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="949.5" y="1599.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="944.5" x2="1184.5" y1="1606.5625" y2="1606.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="196.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="2815.5" y="794.4531"/><ellipse cx="2842.2" cy="810.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2845.1688,816.0938 Q2844.5906,816.3906 2843.95,816.5313 Q2843.3094,816.6875 2842.6063,816.6875 Q2840.1063,816.6875 2838.7781,815.0469 Q2837.4656,813.3906 2837.4656,810.2656 Q2837.4656,807.1406 2838.7781,805.4844 Q2840.1063,803.8281 2842.6063,803.8281 Q2843.3094,803.8281 2843.95,803.9844 Q2844.6063,804.1406 2845.1688,804.4375 L2845.1688,807.1563 Q2844.5438,806.5781 2843.95,806.3125 Q2843.3563,806.0313 2842.7313,806.0313 Q2841.3875,806.0313 2840.7,807.1094 Q2840.0125,808.1719 2840.0125,810.2656 Q2840.0125,812.3594 2840.7,813.4375 Q2841.3875,814.5 2842.7313,814.5 Q2843.3563,814.5 2843.95,814.2344 Q2844.5438,813.9531 2845.1688,813.375 L2845.1688,816.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="2858.8" y="814.6074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2816.5" x2="3114.5" y1="826.4531" y2="826.4531"/><ellipse cx="2826.5" cy="837.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2835.5" y="840.6636">filter_visitor() : void</text><ellipse cx="2826.5" cy="850.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="2835.5" y="853.4683">~filter_visitor() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2816.5" x2="3114.5" y1="860.0625" y2="860.0625"/><ellipse cx="2826.5" cy="871.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="2835.5" y="874.2729">is_exclusive() const : bool</text><ellipse cx="2826.5" cy="883.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2835.5" y="887.0776">is_inclusive() const : bool</text><ellipse cx="2826.5" cy="896.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2835.5" y="899.8823">match() const : tvl::value_t</text><ellipse cx="2826.5" cy="909.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2835.5" y="912.687">match() const : tvl::value_t</text><ellipse cx="2826.5" cy="922.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2835.5" y="925.4917">match() const : tvl::value_t</text><ellipse cx="2826.5" cy="935.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2835.5" y="938.2964">match() const : tvl::value_t</text><ellipse cx="2826.5" cy="947.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2835.5" y="951.1011">match() const : tvl::value_t</text><ellipse cx="2826.5" cy="960.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2835.5" y="963.9058">match() const : tvl::value_t</text><ellipse cx="2826.5" cy="973.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="2835.5" y="976.7104">type() const : clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2816.5" x2="3114.5" y1="983.3047" y2="983.3047"/></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="107.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="1221" y="1524.4531"/><ellipse cx="1236" cy="1540.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1238.9688,1546.0938 Q1238.3906,1546.3906 1237.75,1546.5313 Q1237.1094,1546.6875 1236.4063,1546.6875 Q1233.9063,1546.6875 1232.5781,1545.0469 Q1231.2656,1543.3906 1231.2656,1540.2656 Q1231.2656,1537.1406 1232.5781,1535.4844 Q1233.9063,1533.8281 1236.4063,1533.8281 Q1237.1094,1533.8281 1237.75,1533.9844 Q1238.4063,1534.1406 1238.9688,1534.4375 L1238.9688,1537.1563 Q1238.3438,1536.5781 1237.75,1536.3125 Q1237.1563,1536.0313 1236.5313,1536.0313 Q1235.1875,1536.0313 1234.5,1537.1094 Q1233.8125,1538.1719 1233.8125,1540.2656 Q1233.8125,1542.3594 1234.5,1543.4375 Q1235.1875,1544.5 1236.5313,1544.5 Q1237.1563,1544.5 1237.75,1544.2344 Q1238.3438,1543.9531 1238.9688,1543.375 L1238.9688,1546.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="1250" y="1544.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1222" x2="1491" y1="1556.4531" y2="1556.4531"/><ellipse cx="1232" cy="1567.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1241" y="1570.6636">anyof_filter() : void</text><ellipse cx="1232" cy="1580.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1241" y="1583.4683">~anyof_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1222" x2="1491" y1="1590.0625" y2="1590.0625"/><ellipse cx="1232" cy="1601.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1241" y="1604.2729">match() const : tvl::value_t</text><ellipse cx="1232" cy="1613.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1241" y="1617.0776">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1222" x2="1491" y1="1623.6719" y2="1623.6719"/></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="120.0234" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1527.5" y="1517.9531"/><ellipse cx="1542.5" cy="1533.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1545.4688,1539.5938 Q1544.8906,1539.8906 1544.25,1540.0313 Q1543.6094,1540.1875 1542.9063,1540.1875 Q1540.4063,1540.1875 1539.0781,1538.5469 Q1537.7656,1536.8906 1537.7656,1533.7656 Q1537.7656,1530.6406 1539.0781,1528.9844 Q1540.4063,1527.3281 1542.9063,1527.3281 Q1543.6094,1527.3281 1544.25,1527.4844 Q1544.9063,1527.6406 1545.4688,1527.9375 L1545.4688,1530.6563 Q1544.8438,1530.0781 1544.25,1529.8125 Q1543.6563,1529.5313 1543.0313,1529.5313 Q1541.6875,1529.5313 1541,1530.6094 Q1540.3125,1531.6719 1540.3125,1533.7656 Q1540.3125,1535.8594 1541,1536.9375 Q1541.6875,1538 1543.0313,1538 Q1543.6563,1538 1544.25,1537.7344 Q1544.8438,1537.4531 1545.4688,1536.875 L1545.4688,1539.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="1556.5" y="1538.1074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1528.5" x2="1836.5" y1="1549.9531" y2="1549.9531"/><ellipse cx="1538.5" cy="1560.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1547.5" y="1564.1636">namespace_filter() : void</text><ellipse cx="1538.5" cy="1573.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1547.5" y="1576.9683">~namespace_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1528.5" x2="1836.5" y1="1583.5625" y2="1583.5625"/><ellipse cx="1538.5" cy="1594.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1547.5" y="1597.7729">match() const : tvl::value_t</text><ellipse cx="1538.5" cy="1607.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1547.5" y="1610.5776">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1528.5" x2="1836.5" y1="1617.1719" y2="1617.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" target="_top" title="namespaces_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" xlink:show="new" xlink:title="namespaces_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1533.5" y="1623.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1535.5" y="1625.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" target="_top" title="namespaces_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116" xlink:show="new" xlink:title="namespaces_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="1547.5" y="1631.3823">namespaces_ : std::vector&lt;namespace_&gt;</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="107.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="1872.5" y="1524.4531"/><ellipse cx="1887.5" cy="1540.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1890.4688,1546.0938 Q1889.8906,1546.3906 1889.25,1546.5313 Q1888.6094,1546.6875 1887.9063,1546.6875 Q1885.4063,1546.6875 1884.0781,1545.0469 Q1882.7656,1543.3906 1882.7656,1540.2656 Q1882.7656,1537.1406 1884.0781,1535.4844 Q1885.4063,1533.8281 1887.9063,1533.8281 Q1888.6094,1533.8281 1889.25,1533.9844 Q1889.9063,1534.1406 1890.4688,1534.4375 L1890.4688,1537.1563 Q1889.8438,1536.5781 1889.25,1536.3125 Q1888.6563,1536.0313 1888.0313,1536.0313 Q1886.6875,1536.0313 1886,1537.1094 Q1885.3125,1538.1719 1885.3125,1540.2656 Q1885.3125,1542.3594 1886,1543.4375 Q1886.6875,1544.5 1888.0313,1544.5 Q1888.6563,1544.5 1889.25,1544.2344 Q1889.8438,1543.9531 1890.4688,1543.375 L1890.4688,1546.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="1901.5" y="1544.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1873.5" x2="2159.5" y1="1556.4531" y2="1556.4531"/><ellipse cx="1883.5" cy="1567.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1892.5" y="1570.6636">element_filter() : void</text><ellipse cx="1883.5" cy="1580.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1892.5" y="1583.4683">~element_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1873.5" x2="2159.5" y1="1590.0625" y2="1590.0625"/><ellipse cx="1883.5" cy="1601.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1892.5" y="1604.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1873.5" x2="2159.5" y1="1610.8672" y2="1610.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1878.5" y="1616.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1880.5" y="1618.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1892.5" y="1625.0776">elements_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[97547c2450036638bcec6f72d4b27f74]
class C_0002051668456717902300--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L130" target="_top" title="element_type_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="element_type_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="107.2188" id="C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="2954" y="1524.4531"/><ellipse cx="2969" cy="1540.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2971.9688,1546.0938 Q2971.3906,1546.3906 2970.75,1546.5313 Q2970.1094,1546.6875 2969.4063,1546.6875 Q2966.9063,1546.6875 2965.5781,1545.0469 Q2964.2656,1543.3906 2964.2656,1540.2656 Q2964.2656,1537.1406 2965.5781,1535.4844 Q2966.9063,1533.8281 2969.4063,1533.8281 Q2970.1094,1533.8281 2970.75,1533.9844 Q2971.4063,1534.1406 2971.9688,1534.4375 L2971.9688,1537.1563 Q2971.3438,1536.5781 2970.75,1536.3125 Q2970.1563,1536.0313 2969.5313,1536.0313 Q2968.1875,1536.0313 2967.5,1537.1094 Q2966.8125,1538.1719 2966.8125,1540.2656 Q2966.8125,1542.3594 2967.5,1543.4375 Q2968.1875,1544.5 2969.5313,1544.5 Q2970.1563,1544.5 2970.75,1544.2344 Q2971.3438,1543.9531 2971.9688,1543.375 L2971.9688,1546.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="2983" y="1544.6074">clanguml::common::model::element_type_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2955" x2="3274" y1="1556.4531" y2="1556.4531"/><ellipse cx="2965" cy="1567.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2974" y="1570.6636">element_type_filter() : void</text><ellipse cx="2965" cy="1580.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="2974" y="1583.4683">~element_type_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2955" x2="3274" y1="1590.0625" y2="1590.0625"/><ellipse cx="2965" cy="1601.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2974" y="1604.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2955" x2="3274" y1="1610.8672" y2="1610.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2960" y="1616.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2962" y="1618.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" target="_top" title="element_types_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="element_types_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2974" y="1625.0776">element_types_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L141" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="107.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="3310.5" y="1524.4531"/><ellipse cx="3325.5" cy="1540.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3328.4688,1546.0938 Q3327.8906,1546.3906 3327.25,1546.5313 Q3326.6094,1546.6875 3325.9063,1546.6875 Q3323.4063,1546.6875 3322.0781,1545.0469 Q3320.7656,1543.3906 3320.7656,1540.2656 Q3320.7656,1537.1406 3322.0781,1535.4844 Q3323.4063,1533.8281 3325.9063,1533.8281 Q3326.6094,1533.8281 3327.25,1533.9844 Q3327.9063,1534.1406 3328.4688,1534.4375 L3328.4688,1537.1563 Q3327.8438,1536.5781 3327.25,1536.3125 Q3326.6563,1536.0313 3326.0313,1536.0313 Q3324.6875,1536.0313 3324,1537.1094 Q3323.3125,1538.1719 3323.3125,1540.2656 Q3323.3125,1542.3594 3324,1543.4375 Q3324.6875,1544.5 3326.0313,1544.5 Q3326.6563,1544.5 3327.25,1544.2344 Q3327.8438,1543.9531 3328.4688,1543.375 L3328.4688,1546.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="3339.5" y="1544.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3311.5" x2="3601.5" y1="1556.4531" y2="1556.4531"/><ellipse cx="3321.5" cy="1567.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3330.5" y="1570.6636">subclass_filter() : void</text><ellipse cx="3321.5" cy="1580.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="3330.5" y="1583.4683">~subclass_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3311.5" x2="3601.5" y1="1590.0625" y2="1590.0625"/><ellipse cx="3321.5" cy="1601.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3330.5" y="1604.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3311.5" x2="3601.5" y1="1610.8672" y2="1610.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3316.5" y="1616.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3318.5" y="1618.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3330.5" y="1625.0776">roots_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L152" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L152" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="107.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="3637.5" y="1524.4531"/><ellipse cx="3652.5" cy="1540.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3655.4688,1546.0938 Q3654.8906,1546.3906 3654.25,1546.5313 Q3653.6094,1546.6875 3652.9063,1546.6875 Q3650.4063,1546.6875 3649.0781,1545.0469 Q3647.7656,1543.3906 3647.7656,1540.2656 Q3647.7656,1537.1406 3649.0781,1535.4844 Q3650.4063,1533.8281 3652.9063,1533.8281 Q3653.6094,1533.8281 3654.25,1533.9844 Q3654.9063,1534.1406 3655.4688,1534.4375 L3655.4688,1537.1563 Q3654.8438,1536.5781 3654.25,1536.3125 Q3653.6563,1536.0313 3653.0313,1536.0313 Q3651.6875,1536.0313 3651,1537.1094 Q3650.3125,1538.1719 3650.3125,1540.2656 Q3650.3125,1542.3594 3651,1543.4375 Q3651.6875,1544.5 3653.0313,1544.5 Q3653.6563,1544.5 3654.25,1544.2344 Q3654.8438,1543.9531 3655.4688,1543.375 L3655.4688,1546.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="3666.5" y="1544.6074">clanguml::common::model::parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3638.5" x2="3922.5" y1="1556.4531" y2="1556.4531"/><ellipse cx="3648.5" cy="1567.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3657.5" y="1570.6636">parents_filter() : void</text><ellipse cx="3648.5" cy="1580.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="3657.5" y="1583.4683">~parents_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3638.5" x2="3922.5" y1="1590.0625" y2="1590.0625"/><ellipse cx="3648.5" cy="1601.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3657.5" y="1604.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3638.5" x2="3922.5" y1="1610.8672" y2="1610.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3643.5" y="1616.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3645.5" y="1618.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="3657.5" y="1625.0776">children_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L165" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L165" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="184.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="2196" y="1485.9531"/><ellipse cx="2211" cy="1501.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2213.9688,1507.5938 Q2213.3906,1507.8906 2212.75,1508.0313 Q2212.1094,1508.1875 2211.4063,1508.1875 Q2208.9063,1508.1875 2207.5781,1506.5469 Q2206.2656,1504.8906 2206.2656,1501.7656 Q2206.2656,1498.6406 2207.5781,1496.9844 Q2208.9063,1495.3281 2211.4063,1495.3281 Q2212.1094,1495.3281 2212.75,1495.4844 Q2213.4063,1495.6406 2213.9688,1495.9375 L2213.9688,1498.6563 Q2213.3438,1498.0781 2212.75,1497.8125 Q2212.1563,1497.5313 2211.5313,1497.5313 Q2210.1875,1497.5313 2209.5,1498.6094 Q2208.8125,1499.6719 2208.8125,1501.7656 Q2208.8125,1503.8594 2209.5,1504.9375 Q2210.1875,1506 2211.5313,1506 Q2212.1563,1506 2212.75,1505.7344 Q2213.3438,1505.4531 2213.9688,1504.875 L2213.9688,1507.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="2225" y="1506.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="2531" y="1482.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="2532" y="1495.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2197" x2="2918" y1="1517.9531" y2="1517.9531"/><ellipse cx="2207" cy="1528.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2216" y="1532.1636">edge_traversal_filter() : void</text><ellipse cx="2207" cy="1541.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="2216" y="1544.9683">~edge_traversal_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2197" x2="2918" y1="1551.5625" y2="1551.5625"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1559.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2216" y="1565.7729">add_adjacent&lt;C,D&gt;() const : _Bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1572.3672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2216" y="1578.5776">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1585.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2216" y="1591.3823">init() const : void</text><ellipse cx="2207" cy="1600.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2216" y="1604.187">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2197" x2="2918" y1="1610.7813" y2="1610.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2202" y="1616.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1618.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2216" y="1624.9917">forward_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2202" y="1629.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1631.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2216" y="1637.7964">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2202" y="1642.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1644.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="2216" y="1650.6011">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2202" y="1655.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2204" y="1657.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2216" y="1663.4058">roots_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L305" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L305" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="94.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="3959" y="1530.9531"/><ellipse cx="3974" cy="1546.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3976.9688,1552.5938 Q3976.3906,1552.8906 3975.75,1553.0313 Q3975.1094,1553.1875 3974.4063,1553.1875 Q3971.9063,1553.1875 3970.5781,1551.5469 Q3969.2656,1549.8906 3969.2656,1546.7656 Q3969.2656,1543.6406 3970.5781,1541.9844 Q3971.9063,1540.3281 3974.4063,1540.3281 Q3975.1094,1540.3281 3975.75,1540.4844 Q3976.4063,1540.6406 3976.9688,1540.9375 L3976.9688,1543.6563 Q3976.3438,1543.0781 3975.75,1542.8125 Q3975.1563,1542.5313 3974.5313,1542.5313 Q3973.1875,1542.5313 3972.5,1543.6094 Q3971.8125,1544.6719 3971.8125,1546.7656 Q3971.8125,1548.8594 3972.5,1549.9375 Q3973.1875,1551 3974.5313,1551 Q3975.1563,1551 3975.75,1550.7344 Q3976.3438,1550.4531 3976.9688,1549.875 L3976.9688,1552.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="3988" y="1551.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3960" x2="4269" y1="1562.9531" y2="1562.9531"/><ellipse cx="3970" cy="1573.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3979" y="1577.1636">relationship_filter() : void</text><ellipse cx="3970" cy="1586.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="3979" y="1589.9683">~relationship_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="3960" x2="4269" y1="1596.5625" y2="1596.5625"/><ellipse cx="3970" cy="1607.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3979" y="1610.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3960" x2="4269" y1="1617.3672" y2="1617.3672"/></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L318" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="94.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="4933" y="1530.9531"/><ellipse cx="4948" cy="1546.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4950.9688,1552.5938 Q4950.3906,1552.8906 4949.75,1553.0313 Q4949.1094,1553.1875 4948.4063,1553.1875 Q4945.9063,1553.1875 4944.5781,1551.5469 Q4943.2656,1549.8906 4943.2656,1546.7656 Q4943.2656,1543.6406 4944.5781,1541.9844 Q4945.9063,1540.3281 4948.4063,1540.3281 Q4949.1094,1540.3281 4949.75,1540.4844 Q4950.4063,1540.6406 4950.9688,1540.9375 L4950.9688,1543.6563 Q4950.3438,1543.0781 4949.75,1542.8125 Q4949.1563,1542.5313 4948.5313,1542.5313 Q4947.1875,1542.5313 4946.5,1543.6094 Q4945.8125,1544.6719 4945.8125,1546.7656 Q4945.8125,1548.8594 4946.5,1549.9375 Q4947.1875,1551 4948.5313,1551 Q4949.1563,1551 4949.75,1550.7344 Q4950.3438,1550.4531 4950.9688,1549.875 L4950.9688,1552.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="4962" y="1551.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4934" x2="5213" y1="1562.9531" y2="1562.9531"/><ellipse cx="4944" cy="1573.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="4953" y="1577.1636">access_filter() : void</text><ellipse cx="4944" cy="1586.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4953" y="1589.9683">~access_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4934" x2="5213" y1="1596.5625" y2="1596.5625"/><ellipse cx="4944" cy="1607.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4953" y="1610.7729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4934" x2="5213" y1="1617.3672" y2="1617.3672"/></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L329" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="107.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="4305.5" y="1524.4531"/><ellipse cx="4320.5" cy="1540.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4323.4688,1546.0938 Q4322.8906,1546.3906 4322.25,1546.5313 Q4321.6094,1546.6875 4320.9063,1546.6875 Q4318.4063,1546.6875 4317.0781,1545.0469 Q4315.7656,1543.3906 4315.7656,1540.2656 Q4315.7656,1537.1406 4317.0781,1535.4844 Q4318.4063,1533.8281 4320.9063,1533.8281 Q4321.6094,1533.8281 4322.25,1533.9844 Q4322.9063,1534.1406 4323.4688,1534.4375 L4323.4688,1537.1563 Q4322.8438,1536.5781 4322.25,1536.3125 Q4321.6563,1536.0313 4321.0313,1536.0313 Q4319.6875,1536.0313 4319,1537.1094 Q4318.3125,1538.1719 4318.3125,1540.2656 Q4318.3125,1542.3594 4319,1543.4375 Q4319.6875,1544.5 4321.0313,1544.5 Q4321.6563,1544.5 4322.25,1544.2344 Q4322.8438,1543.9531 4323.4688,1543.375 L4323.4688,1546.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="4334.5" y="1544.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4306.5" x2="4588.5" y1="1556.4531" y2="1556.4531"/><ellipse cx="4316.5" cy="1567.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="4325.5" y="1570.6636">context_filter() : void</text><ellipse cx="4316.5" cy="1580.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4325.5" y="1583.4683">~context_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4306.5" x2="4588.5" y1="1590.0625" y2="1590.0625"/><ellipse cx="4316.5" cy="1601.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4325.5" y="1604.2729">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4306.5" x2="4588.5" y1="1610.8672" y2="1610.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4311.5" y="1616.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4313.5" y="1618.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4325.5" y="1625.0776">context_ : std::vector&lt;std::string&gt;</text></a><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L340" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L340" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="132.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="4625" y="1511.4531"/><ellipse cx="4640" cy="1527.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4642.9688,1533.0938 Q4642.3906,1533.3906 4641.75,1533.5313 Q4641.1094,1533.6875 4640.4063,1533.6875 Q4637.9063,1533.6875 4636.5781,1532.0469 Q4635.2656,1530.3906 4635.2656,1527.2656 Q4635.2656,1524.1406 4636.5781,1522.4844 Q4637.9063,1520.8281 4640.4063,1520.8281 Q4641.1094,1520.8281 4641.75,1520.9844 Q4642.4063,1521.1406 4642.9688,1521.4375 L4642.9688,1524.1563 Q4642.3438,1523.5781 4641.75,1523.3125 Q4641.1563,1523.0313 4640.5313,1523.0313 Q4639.1875,1523.0313 4638.5,1524.1094 Q4637.8125,1525.1719 4637.8125,1527.2656 Q4637.8125,1529.3594 4638.5,1530.4375 Q4639.1875,1531.5 4640.5313,1531.5 Q4641.1563,1531.5 4641.75,1531.2344 Q4642.3438,1530.9531 4642.9688,1530.375 L4642.9688,1533.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="4654" y="1531.6074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4626" x2="4897" y1="1543.4531" y2="1543.4531"/><ellipse cx="4636" cy="1554.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4645" y="1557.6636">paths_filter() : void</text><ellipse cx="4636" cy="1567.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="4645" y="1570.4683">~paths_filter() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="4626" x2="4897" y1="1577.0625" y2="1577.0625"/><ellipse cx="4636" cy="1588.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4645" y="1591.2729">match() const : tvl::value_t</text><ellipse cx="4636" cy="1600.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4645" y="1604.0776">match() const : tvl::value_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4626" x2="4897" y1="1610.6719" y2="1610.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4631" y="1616.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4633" y="1618.6719"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="4645" y="1624.8823">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4631" y="1629.4766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4633" y="1631.4766"/></a><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4645" y="1637.687">root_ : std::filesystem::path</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L357" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L357" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="132.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="2599.5" y="127.4531"/><ellipse cx="2614.5" cy="143.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2617.4688,149.0938 Q2616.8906,149.3906 2616.25,149.5313 Q2615.6094,149.6875 2614.9063,149.6875 Q2612.4063,149.6875 2611.0781,148.0469 Q2609.7656,146.3906 2609.7656,143.2656 Q2609.7656,140.1406 2611.0781,138.4844 Q2612.4063,136.8281 2614.9063,136.8281 Q2615.6094,136.8281 2616.25,136.9844 Q2616.9063,137.1406 2617.4688,137.4375 L2617.4688,140.1563 Q2616.8438,139.5781 2616.25,139.3125 Q2615.6563,139.0313 2615.0313,139.0313 Q2613.6875,139.0313 2613,140.1094 Q2612.3125,141.1719 2612.3125,143.2656 Q2612.3125,145.3594 2613,146.4375 Q2613.6875,147.5 2615.0313,147.5 Q2615.6563,147.5 2616.25,147.2344 Q2616.8438,146.9531 2617.4688,146.375 L2617.4688,149.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="2628.5" y="147.6074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2600.5" x2="2886.5" y1="159.4531" y2="159.4531"/><ellipse cx="2610.5" cy="170.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2619.5" y="173.6636">diagram_filter() : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="2600.5" x2="2886.5" y1="180.2578" y2="180.2578"/><ellipse cx="2610.5" cy="191.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2619.5" y="194.4683">add_exclusive_filter() : void</text><ellipse cx="2610.5" cy="204.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2619.5" y="207.2729">add_inclusive_filter() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2607.5" y="213.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2619.5" y="220.0776">init_filters() : void</text><ellipse cx="2610.5" cy="229.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2619.5" y="232.8823">should_include() const : bool</text><ellipse cx="2610.5" cy="242.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2619.5" y="245.687">should_include&lt;T&gt;() const : _Bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2600.5" x2="2886.5" y1="252.2813" y2="252.2813"/></a><!--MD5=[bc315e7d0960eeae67e337de181c1bce]
class C_0000148537001046167478--><a href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/package_diagram/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/package_diagram/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1cm9jj2tcnsit)" height="268.875" id="C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.5;" width="558" x="350.5" y="1443.4531"/><ellipse cx="599.75" cy="1459.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M602.7188,1465.0938 Q602.1406,1465.3906 601.5,1465.5313 Q600.8594,1465.6875 600.1563,1465.6875 Q597.6563,1465.6875 596.3281,1464.0469 Q595.0156,1462.3906 595.0156,1459.2656 Q595.0156,1456.1406 596.3281,1454.4844 Q597.6563,1452.8281 600.1563,1452.8281 Q600.8594,1452.8281 601.5,1452.9844 Q602.1563,1453.1406 602.7188,1453.4375 L602.7188,1456.1563 Q602.0938,1455.5781 601.5,1455.3125 Q600.9063,1455.0313 600.2813,1455.0313 Q598.9375,1455.0313 598.25,1456.1094 Q597.5625,1457.1719 597.5625,1459.2656 Q597.5625,1461.3594 598.25,1462.4375 Q598.9375,1463.5 600.2813,1463.5 Q600.9063,1463.5 601.5,1463.2344 Q602.0938,1462.9531 602.7188,1462.375 L602.7188,1465.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="620.25" y="1463.6074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="351.5" x2="907.5" y1="1475.4531" y2="1475.4531"/><ellipse cx="361.5" cy="1486.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="370.5" y="1489.6636">diagram() = default : void</text><ellipse cx="361.5" cy="1499.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="370.5" y="1502.4683">diagram() = deleted : void</text><ellipse cx="361.5" cy="1512.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="370.5" y="1515.2729">diagram() = default : void</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="351.5" x2="907.5" y1="1521.8672" y2="1521.8672"/><ellipse cx="361.5" cy="1532.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="370.5" y="1536.0776">operator=() = deleted : diagram &amp;</text><ellipse cx="361.5" cy="1545.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="370.5" y="1548.8823">operator=() = default : diagram &amp;</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="351.5" x2="907.5" y1="1555.4766" y2="1555.4766"/><ellipse cx="361.5" cy="1566.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="370.5" y="1569.687">add&lt;ElementT&gt;() : _Bool</text><ellipse cx="361.5" cy="1579.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="370.5" y="1582.4917">add_with_filesystem_path&lt;ElementT&gt;() : _Bool</text><ellipse cx="361.5" cy="1592.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="370.5" y="1595.2964">add_with_namespace_path&lt;ElementT&gt;() : _Bool</text><ellipse cx="361.5" cy="1604.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="370.5" y="1608.1011">context() const : inja::json</text><ellipse cx="361.5" cy="1617.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="370.5" y="1620.9058">find&lt;ElementT&gt;() const : opt_ref&lt;ElementT&gt;</text><ellipse cx="361.5" cy="1630.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="370.5" y="1633.7104">find&lt;ElementT&gt;() const : opt_ref&lt;ElementT&gt;</text><ellipse cx="361.5" cy="1643.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="370.5" y="1646.5151">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="361.5" cy="1656.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="370.5" y="1659.3198">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="361.5" cy="1668.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="370.5" y="1672.1245">packages() const : const common::reference_vector&lt;package&gt; &amp;</text><ellipse cx="361.5" cy="1681.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="370.5" y="1684.9292">to_alias() const : std::string</text><ellipse cx="361.5" cy="1694.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="370.5" y="1697.7339">type() const : common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="351.5" x2="907.5" y1="1704.3281" y2="1704.3281"/></a><!--MD5=[a19b37bbd01eb620e8986e3e767e75c0]
reverse link C_0000844837292165721774 to C_0002031918453259559099--><path d="M5941.5,2378.1531 C5941.5,2402.8831 5941.5,2424.9131 5941.5,2441.9331 " fill="none" id="C_0000844837292165721774&lt;-C_0002031918453259559099" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5941.5,2364.9731,5937.5,2370.9731,5941.5,2376.9731,5945.5,2370.9731,5941.5,2364.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5944.5" y="2401.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="5954.5" y="2408.02">path_type_</text><!--MD5=[d3aab55902f013c3cb0f0512036c505c]
reverse link C_0000845978329661395972 to C_0002193110380171976294--><path d="M7231.5,1664.3831 C7231.5,1771.0531 7231.5,1949.9131 7231.5,2035.6831 " fill="none" id="C_0000845978329661395972&lt;-C_0002193110380171976294" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7231.5,1651.1131,7227.5,1657.1131,7231.5,1663.1131,7235.5,1657.1131,7231.5,1651.1131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7237.5" cy="1768.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="13" x="7244.5" y="1772.02">pr</text><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M6918.31,1363.1331 C6908.33,1426.2331 6899.43,1482.5431 6893.27,1521.5131 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6920.39,1350.0031,6915.5029,1355.3056,6918.5178,1361.8562,6923.4049,1356.5537,6920.39,1350.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6916.5" y="1386.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="6926.5" y="1393.02">kind_</text><!--MD5=[7566fda333217dfb046318d35641bbd5]
reverse link C_0000178138562743079529 to C_0000845978329661395972--><path d="M7156.45,1362.4931 C7175.59,1417.1731 7192.95,1466.7931 7206.14,1504.4931 " fill="none" id="C_0000178138562743079529&lt;-C_0000845978329661395972" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7152.08,1350.0031,7150.2892,1356.9883,7156.0483,1361.328,7157.8391,1354.3428,7152.08,1350.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7170.5" y="1386.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="7180.5" y="1393.02">context_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M7249.88,829.0431 C7265.27,844.2831 7274.5,865.5831 7274.5,892.9531 C7274.5,926.0031 7261.04,950.2031 7239.52,965.5631 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7239.52,820.3431,7241.5384,827.266,7248.7051,828.0654,7246.6866,821.1426,7239.52,820.3431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7282.5" y="890.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="7292.5" y="897.52">template_params_</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M5265.29,1728.3131 C5239.1,1745.9031 5211.77,1762.3831 5184.5,1775.9531 C5142.22,1796.9931 4540.87,1965.7131 4258.72,2044.3631 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5276.05,1720.9931,5268.8393,1721.0656,5266.1328,1727.7495,5273.3435,1727.6771,5276.05,1720.9931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5219.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="5229.5" y="1772.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M5386.74,1733.2831 C5345.95,1836.8931 5294.87,1966.6531 5267.66,2035.7931 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5391.54,1721.1131,5385.6178,1725.2275,5387.1379,1732.2765,5393.0601,1728.1622,5391.54,1721.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5375.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="5385.5" y="1772.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M5455.76,308.9131 C5454.12,559.8931 5450.22,1159.8531 5448.43,1434.8531 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5448.76,308.5431,5455.89,288.5831,5462.76,308.6331,5448.76,308.5431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M6362.41,955.2131 C6327.8,1055.3431 6244.7,1252.6431 6101.5,1349.9531 C5937.66,1461.2931 5845.61,1351.3831 5662.5,1426.9531 C5656.5,1429.4231 5650.51,1432.0931 5644.54,1434.9131 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6355.77,952.9831,6368.78,936.2531,6369.04,957.4431,6355.77,952.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M5777.72,1073.5231 C5703.67,1186.4031 5609.47,1330.0131 5540.65,1434.9331 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5785.05,1062.3431,5778.4149,1065.1673,5778.4699,1072.3782,5785.1049,1069.554,5785.05,1062.3431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5571.5" y="1386.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="5581.5" y="1393.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M5526.29,305.7631 C5597.2,418.3431 5707.93,594.1531 5789.65,723.8831 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5520.21,309.2431,5515.48,288.5931,5532.06,301.7831,5520.21,309.2431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M5895.5,331.6631 C5895.5,443.9431 5895.5,603.4831 5895.5,723.6231 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5888.5,331.6131,5895.5,311.6131,5902.5,331.6131,5888.5,331.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5d910ea399c8b53a1c5a5e084e915fb3]
reverse link C_0002069520381434407937 to C_0000844837292165721774--><path d="M5883.19,1689.7031 C5878.32,1712.4431 5874.04,1736.3531 5871.5,1758.9531 C5869.77,1774.3231 5869.17,1790.0231 5869.48,1805.8431 " fill="none" id="C_0002069520381434407937&lt;-C_0000844837292165721774" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5886.03,1676.8331,5880.832,1681.8312,5883.4464,1688.5517,5888.6444,1683.5536,5886.03,1676.8331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5874.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="5884.5" y="1772.02">ns_</text><!--MD5=[5d910ea399c8b53a1c5a5e084e915fb3]
reverse link C_0002069520381434407937 to C_0000844837292165721774--><path d="M5918.86,1689.8031 C5920.86,1724.6331 5923.16,1764.7831 5925.52,1805.8631 " fill="none" id="C_0002069520381434407937&lt;-C_0000844837292165721774-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5918.11,1676.7231,5914.4592,1682.9418,5918.7953,1688.7035,5922.4461,1682.4849,5918.11,1676.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5927.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="5937.5" y="1772.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M5900.2,1082.6331 C5903.39,1211.1031 5907.5,1375.9131 5910.06,1479.0031 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5893.19,1082.5131,5899.69,1062.3431,5907.19,1082.1631,5893.19,1082.5131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M6992.5,295.2731 C6992.5,334.9331 6992.5,383.5031 6992.5,435.6431 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6992.5,282.1731,6988.5,288.1731,6992.5,294.1731,6996.5,288.1731,6992.5,282.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6995.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="7005.5" y="402.02">templates_</text><!--MD5=[019d7bf597d0b181c46c8a98893e5495]
reverse link C_0000785714713072053129 to C_0000844837292165721774--><path d="M6226.45,1738.5831 C6205.67,1760.9431 6184.86,1783.8331 6165.5,1805.9531 C6159.78,1812.4931 6154.01,1819.1431 6148.23,1825.8831 " fill="none" id="C_0000785714713072053129&lt;-C_0000844837292165721774" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6235.35,1729.0431,6228.3314,1730.6983,6227.1598,1737.8136,6234.1784,1736.1584,6235.35,1729.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6209.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="6219.5" y="1772.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M6362.76,1742.3031 C6350.67,1847.6731 6335.85,1976.8331 6328.35,2042.2131 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6364.26,1729.2531,6359.6005,1734.7566,6362.8885,1741.1745,6367.548,1735.671,6364.26,1729.2531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6362.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="6372.5" y="1772.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M6019.94,1078.7331 C6076.86,1162.1931 6145.71,1261.6631 6209.5,1349.9531 C6227.6,1375.0031 6247.11,1401.3531 6266.27,1426.8731 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6014.01,1082.4631,6008.54,1061.9931,6025.58,1074.5831,6014.01,1082.4631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M6381.5,956.3831 C6381.5,1062.2131 6381.5,1279.6531 6381.5,1426.9131 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6374.5,956.1631,6381.5,936.1631,6388.5,956.1631,6374.5,956.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M2477.42,681.3631 C2494.82,587.9931 2523.53,479.1231 2570.5,388.9531 C2595.42,341.1231 2634.77,295.6831 2669.65,260.8131 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2475.04,694.4331,2480.0503,689.2469,2477.1901,682.6273,2472.1798,687.8135,2475.04,694.4331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2573.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2583.5" y="402.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M2716.03,260.5231 C2675.3,357.7431 2597.16,544.2631 2536.32,689.4831 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2534.35,694.1931,2541.5365,687.4586,2536.2954,689.5871,2534.1669,684.346,2534.35,694.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2660.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="2670.5" y="402.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M6036.39,1688.9131 C6080.83,1722.4431 6133.19,1755.7431 6186.5,1775.9531 C6309.73,1822.6631 6366.75,1741.1331 6481.5,1805.9531 C6552.29,1845.9431 6606.39,1920.7831 6641.79,1982.8231 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6031.95,1694.3331,6020.38,1676.5731,6040.5,1683.2431,6031.95,1694.3331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M6412.2,954.1931 C6460.23,1051.1531 6552.6,1248.9931 6600.5,1426.9531 C6652.35,1619.5631 6675.23,1852.3631 6684.61,1982.9031 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6405.88,957.2031,6403.21,936.1831,6418.41,950.9531,6405.88,957.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M2958.98,1005.0031 C2946.08,1112.8631 2908.3,1271.4931 2798.5,1349.9531 C2734.44,1395.7331 1459.47,1368.9931 1381.5,1379.9531 C1300.47,1391.3431 1273.65,1384.8331 1203.5,1426.9531 C1155.26,1455.9231 1113.47,1506.5231 1088.64,1540.8631 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2960.47,991.7731,2955.8225,997.2868,2959.1246,1003.6975,2963.7721,998.1838,2960.47,991.7731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1384.5" y="1386.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1394.5" y="1393.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M1370.96,1511.6431 C1384.74,1466.2631 1410.46,1408.9331 1456.5,1379.9531 C1519.62,1340.2331 2737.85,1393.3431 2798.5,1349.9531 C2912.83,1268.1531 2949.08,1099.4431 2960.45,991.7531 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1367.3,1524.3931,1372.7994,1519.7287,1370.6088,1512.8583,1365.1095,1517.5228,1367.3,1524.3931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1459.5" y="1386.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="1469.5" y="1393.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M2957.89,1011.6531 C2944.04,1119.0431 2905.44,1272.4531 2798.5,1349.9531 C2759.39,1378.3031 1977.68,1376.4331 1929.5,1379.9531 C1742.17,1393.6431 1679.16,1346.3631 1509.5,1426.9531 C1463.3,1448.9031 1422.59,1490.5431 1394.8,1524.3931 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2950.97,1010.5431,2960.27,991.5031,2964.87,1012.1831,2950.97,1010.5431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M2957.43,1011.6031 C2943.24,1118.5831 2904.41,1271.3731 2798.5,1349.9531 C2751.4,1384.9031 2329.94,1375.0031 2271.5,1379.9531 C2085.66,1395.7031 2025.2,1351.8031 1854.5,1426.9531 C1807.9,1447.4631 1764.75,1485.1831 1733.32,1517.6631 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2950.51,1010.5231,2959.87,991.5231,2964.4,1012.2231,2950.51,1010.5231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M2956.01,1011.4531 C2940.8,1117.2331 2901.27,1268.2631 2798.5,1349.9531 C2581.14,1522.7431 2430.28,1309.8731 2178.5,1426.9531 C2130.88,1449.0931 2087.84,1490.4931 2058.1,1524.2031 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2949.07,1010.4931,2958.65,991.5931,2962.95,1012.3431,2949.07,1010.4931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fc75b97331daf477f1c24925190464b7]
reverse link C_0000469458052685692314 to C_0002051668456717902300--><path d="M2991.12,1011.3831 C3023.86,1161.4831 3079.17,1414.9831 3103,1524.2531 " fill="none" id="C_0000469458052685692314&lt;-C_0002051668456717902300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2984.27,1012.8431,2986.85,991.8131,2997.95,1009.8631,2984.27,1012.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M3047.62,1008.1831 C3155.22,1157.8531 3339.5,1414.2031 3418.61,1524.2531 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3041.84,1012.1331,3035.85,991.8131,3053.21,1003.9631,3041.84,1012.1331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M3106.13,1004.1431 C3240.09,1110.1431 3446.42,1276.0931 3619.5,1426.9531 C3655.64,1458.4531 3695.04,1495.1231 3725.82,1524.3131 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3101.51,1009.4131,3090.16,991.5231,3110.19,998.4331,3101.51,1009.4131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M2790.67,1674.7831 C2838.63,1693.4931 2888.98,1712.4131 2936.5,1728.9531 C3304.95,1857.2031 3747.2,1983.3931 3970.46,2045.1931 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2778.53,1670.0331,2782.6588,1675.9452,2789.7041,1674.4079,2785.5753,1668.4958,2778.53,1670.0331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3066.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="3076.5" y="1772.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M2938.65,1011.2731 C2912.94,1107.7031 2867.71,1245.0531 2798.5,1349.9531 C2765.27,1400.3331 2718.75,1447.5731 2675.44,1485.7731 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2931.95,1009.2231,2943.77,991.6431,2945.5,1012.7631,2931.95,1009.2231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M4114.5,1638.4031 C4114.5,1723.4131 4114.5,1880.8031 4114.5,1984.0631 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4114.5,1625.1531,4110.5,1631.1531,4114.5,1637.1531,4118.5,1631.1531,4114.5,1625.1531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4117.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="4127.5" y="1772.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M3134.02,972.5031 C3333.54,1068.5231 3672.55,1241.3231 3940.5,1426.9531 C3985.74,1458.2931 4032.77,1499.4331 4066.51,1530.7031 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3130.75,978.6931,3115.74,963.7331,3136.8,966.0731,3130.75,978.6931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M5082.93,1637.8731 C5090.02,1677.4331 5101,1730.4531 5115.5,1775.9531 C5145.7,1870.7031 5194.67,1976.0831 5224.01,2035.9131 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5080.67,1625.0031,5077.7643,1631.6029,5082.7389,1636.8234,5085.6445,1630.2237,5080.67,1625.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5118.5" y="1765.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="5128.5" y="1772.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M3135.52,912.1231 C3487.85,955.6431 4314.87,1088.5231 4915.5,1426.9531 C4962.79,1453.5931 5006.71,1497.5031 5036.18,1530.9431 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3134.55,919.0631,3115.54,909.6931,3136.24,905.1631,3134.55,919.0631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M3135.08,940.2531 C3396.23,1016.2531 3906.53,1183.7331 4287.5,1426.9531 C4329.7,1453.8931 4370.77,1492.7431 4400.72,1524.1431 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3132.83,946.8831,3115.56,934.6031,3136.72,933.4331,3132.83,946.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M3135.55,922.7831 C3445.82,980.8931 4116.87,1132.4331 4606.5,1426.9531 C4643.56,1449.2431 4678.73,1481.9531 4706.18,1511.1431 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3134.03,929.6231,3115.65,919.0831,3136.59,915.8531,3134.03,929.6231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M2768.44,273.2531 C2809.18,401.1731 2889.92,654.6731 2934.37,794.2031 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2764.39,260.5231,2762.3985,267.4538,2768.0301,271.9577,2770.0216,265.0271,2764.39,260.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2812.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="2822.5" y="402.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M2816.5,271.0231 C2844.7,304.6531 2874.46,346.2331 2892.5,388.9531 C2948.54,521.6631 2962.79,689.6631 2965.76,793.9731 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2807.81,260.8431,2808.6589,268.0041,2815.5956,269.9747,2814.7466,262.8137,2807.81,260.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2901.5" y="395.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="2911.5" y="402.02">exclusive_</text><!--MD5=[d3df50313eac67d25f4285ef55f7c15c]
reverse link C_0000197068985320835874 to C_0000148537001046167478--><path d="M2102.46,998.8431 C1810.07,1089.9731 1383.59,1230.5031 1021.5,1379.9531 C975.56,1398.9131 927.57,1421.0031 881.57,1443.4031 " fill="none" id="C_0000197068985320835874&lt;-C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2100.79,992.0331,2121.97,992.7831,2104.95,1005.4031,2100.79,992.0331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[5b7e032bd111ee92656b8900da6e57da]
link C_0001623832985137466228 to C_0000202859212831973510--><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[9d302f1e58cfa9062af727681c3bd4e9]
link C_0001331923285602672865 to C_0001786360230161561276--><!--MD5=[95187bf2a177e5384caa18712a5fc4d7]
@startuml
title clang-uml package diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "clanguml::common::model::message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L37{decorated_element}]] {
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+get_relationship() const : std::pair<relationship_t,std::string>
+set_comment() : void
+skip() const : bool
+skip_relationship() const : bool
+style_spec() const : std::string
__
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L61{comment_}]]]
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/decorated_element.h#L60{decorators_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
..
+file() const : const std::string &
+file_relative() const : const std::string &
+line() const : unsigned int
+location_id() const : unsigned int
+set_file() : void
+set_file_relative() : void
+set_line() : void
+set_location_id() : void
__
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L53{file_relative_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L55{hash_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_location.h#L54{line_}]]]
}
enum "clanguml::common::model::path_type" as C_0002031918453259559099
enum C_0002031918453259559099 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L28{path_type}]] {
kNamespace
kFilesystem
}
class "clanguml::common::model::path" as C_0000844837292165721774
class C_0000844837292165721774 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L30{path}]] {
+path() : void
+path() : void
+path() : void
+path() = default : void
+path() noexcept = default : void
+path() : void
+path() : void
+~path() = default : void
..
+operator=() : clanguml::common::model::path &
+operator=() noexcept = default : clanguml::common::model::path &
..
+operator[]() : std::string &
+operator[]() const : const std::string &
+operator|() const : clanguml::common::model::path
+operator|() const : clanguml::common::model::path
+operator|=() : void
+operator|=() : void
..
+append() : void
+append() : void
+begin() const : path::container_type::const_iterator
+begin() : path::container_type::iterator
+cbegin() const : path::container_type::const_iterator
+cend() const : path::container_type::const_iterator
+common_path() const : clanguml::common::model::path
+end() const : path::container_type::const_iterator
+end() : path::container_type::iterator
+ends_with() const : bool
+is_empty() const : bool
+name() const : std::string
+parent() const : std::optional<path>
+pop_back() : void
+relative() const : std::string
+relative_to() const : clanguml::common::model::path
-separator() const : const char *
+size() const : size_t
+starts_with() const : bool
+to_string() const : std::string
+type() const : clanguml::common::model::path_type
__
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/path.h#L272{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L28{ns_path_separator}]] {
__
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/namespace.h#L29{value}]]]
}
enum "clanguml::common::model::template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L31{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
enum "clanguml::common::model::rpqualifier" as C_0002193110380171976294
enum C_0002193110380171976294 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L40{rpqualifier}]] {
kLValueReference
kRValueReference
kPointer
kNone
}
class "clanguml::common::model::context" as C_0000845978329661395972
class C_0000845978329661395972 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L46{context}]] {
+operator!=() const : bool
+operator==() const : bool
..
+to_string() const : std::string
__
+is_const : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L47{is_const}]]]
+is_ref_const : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L49{is_ref_const}]]]
+is_ref_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L50{is_ref_volatile}]]]
+is_volatile : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L48{is_volatile}]]]
}
class "clanguml::common::model::template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L67{template_parameter}]] {
-template_parameter() = default : void
..
+add_template_param() : void
+add_template_param() : void
+calculate_specialization_match() const : int
+clear_params() : void
+concept_constraint() const : const std::optional<std::string> &
+deduced_context() : void
+deduced_context() const : const std::deque<context> &
-deduced_context_str() const : std::string
+default_value() const : const std::optional<std::string> &
+find_nested_relationships() const : bool
+id() const : const std::optional<int64_t> &
+is_array() const : bool
+is_array() : void
+is_association() const : bool
+is_data_pointer() : void
+is_data_pointer() const : bool
+is_ellipsis() : void
+is_ellipsis() const : bool
+is_function_template() const : bool
+is_function_template() : void
+is_member_pointer() : void
+is_member_pointer() const : bool
+is_noexcept() const : bool
+is_noexcept() : void
+is_same_specialization() const : bool
+is_specialization() const : bool
+is_template_parameter() : void
+is_template_parameter() const : bool
+is_template_template_parameter() : void
+is_template_template_parameter() const : bool
+is_unexposed() const : bool
+is_variadic() noexcept : void
+is_variadic() const noexcept : bool
+kind() const : clanguml::common::model::template_parameter_kind_t
{static} +make_argument() : clanguml::common::model::template_parameter
{static} +make_non_type_template() : clanguml::common::model::template_parameter
{static} +make_template_template_type() : clanguml::common::model::template_parameter
{static} +make_template_type() : clanguml::common::model::template_parameter
{static} +make_unexposed_argument() : clanguml::common::model::template_parameter
+name() const : std::optional<std::string>
+push_context() : void
+set_concept_constraint() : void
+set_default_value() : void
+set_id() : void
+set_kind() : void
+set_name() : void
+set_type() : void
+set_unexposed() : void
+template_params() const : const std::vector<template_parameter> &
+to_string() const : std::string
+type() const : std::optional<std::string>
__
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L224{concept_constraint_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L194{default_value_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L230{id_}]]]
-is_array_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L217{is_array_}]]]
-is_data_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L213{is_data_pointer_}]]]
-is_ellipsis_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L204{is_ellipsis_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L211{is_function_template_}]]]
-is_member_pointer_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L215{is_member_pointer_}]]]
-is_noexcept_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L206{is_noexcept_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L198{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L202{is_template_template_parameter_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L232{is_unexposed_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L209{is_variadic_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L191{name_}]]]
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_parameter.h#L188{type_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
__
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
..
+access() const noexcept : clanguml::common::model::access_t
+destination() const : clanguml::common::id_t
+label() const : std::string
+multiplicity_destination() const : std::string
+multiplicity_source() const : std::string
+set_access() noexcept : void
+set_destination() : void
+set_label() : void
+set_multiplicity_destination() : void
+set_multiplicity_source() : void
+set_type() noexcept : void
+type() const noexcept : clanguml::common::model::relationship_t
__
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L61{destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L64{label_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/relationship.h#L62{multiplicity_source_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
..
+add_relationship() : void
+alias() const : std::string
+append() : void
+complete() const : bool
+complete() : void
+context() const : inja::json
+full_name() const : std::string
+id() const : clanguml::common::model::diagram_element::id_t
+is_nested() const : bool
+name() const : std::string
+nested() : void
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+set_id() : void
+set_name() : void
+type_name() const : std::string
__
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L84{complete_}]]]
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_element.h#L83{nested_}]]]
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
..
+context() const : inja::json
+full_name() const : std::string
+full_name_no_ns() const : std::string
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+name_and_ns() const : std::string
+path() const : const clanguml::common::model::namespace_ &
+set_namespace() : void
+using_namespace() const : const clanguml::common::model::namespace_ &
__
}
class "clanguml::common::model::template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L28{template_trait}]] {
+add_template() : void
+base_template() const : std::string
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+render_template_params() const : std::ostream &
+set_base_template() : void
+set_implicit() : void
+template_params() const : const std::vector<template_parameter> &
__
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait() = default : void
+nested_trait() = deleted : void
+nested_trait() noexcept = default : void
+~nested_trait() = default : void
..
+operator=() = deleted : nested_trait<T,Path> &
+operator=() noexcept = default : nested_trait<T,Path> &
..
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+all_of<F>() const : _Bool
+begin() : auto
+begin() const : auto
+cbegin() const : auto
+cend() const : auto
+end() : auto
+end() const : auto
+get_element<V=T>() const : auto
+get_element<V=T>() const : auto
+get_element_parent<V=T>() const : auto
+has_element() const : bool
+is_empty() const : bool
+print_tree() : void
__
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/nested_trait.h#L193{elements_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L41{fs_path_sep}]] {
__
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L45{value}]]]
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+source_file() = deleted : void
+source_file() = default : void
..
+operator=() = deleted : clanguml::common::model::source_file &
+operator=() = deleted : clanguml::common::model::source_file &
..
+operator==() const : bool
..
+context() const : inja::json
+fs_path() const : std::filesystem::path
+full_name() const : std::string
+full_path() const : clanguml::common::model::path
+is_absolute() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+set_absolute() : void
+set_path() : void
+set_type() : void
+type() const : clanguml::common::model::source_file_t
__
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+diagram() = deleted : void
+diagram() noexcept : void
+~diagram() : void
..
+operator=() = deleted : clanguml::common::model::diagram &
+operator=() noexcept : clanguml::common::model::diagram &
..
+complete() const : bool
{abstract} +context() const = 0 : inja::json
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get_with_namespace() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+has_element() const : bool
+name() const : std::string
+set_complete() : void
+set_filter() : void
+set_name() : void
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
__
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L87{complete_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram.h#L85{name_}]]]
}
class "clanguml::common::model::element_view<T>" as C_0001786360230161561276
class C_0001786360230161561276 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L29{element_view}]] {
+add() : void
+get() const : common::optional_ref<T>
+view() const : const reference_vector<T> &
__
-elements_ : reference_vector<T> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/element_view.h#L67{elements_}]]]
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L35{package}]] {
+package() : void
+package() = deleted : void
+package() = default : void
..
+operator=() = deleted : clanguml::common::model::package &
+operator=() = deleted : clanguml::common::model::package &
..
+add_package() : void
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+type_name() const : std::string
__
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/package.h#L57{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
..
+is_exclusive() const : bool
+is_inclusive() const : bool
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+type() const : clanguml::common::model::filter_t
__
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
..
+match() const : tvl::value_t
+match() const : tvl::value_t
__
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
..
+match() const : tvl::value_t
+match() const : tvl::value_t
__
-namespaces_ : std::vector<namespace_> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L116{namespaces_}]]]
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
..
+match() const : tvl::value_t
__
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "clanguml::common::model::element_type_filter" as C_0002051668456717902300
class C_0002051668456717902300 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L130{element_type_filter}]] {
+element_type_filter() : void
+~element_type_filter() = default : void
..
+match() const : tvl::value_t
__
-element_types_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L138{element_types_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L141{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
..
+match() const : tvl::value_t
__
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L149{roots_}]]]
}
class "clanguml::common::model::parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L152{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
..
+match() const : tvl::value_t
__
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L160{children_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L165{edge_traversal_filter}]] {
+edge_traversal_filter() : void
+~edge_traversal_filter() = default : void
..
-add_adjacent<C,D>() const : _Bool
-add_parents() const : void
-init() const : void
+match() const : tvl::value_t
__
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L302{forward_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L300{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L301{matching_elements_}]]]
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L298{roots_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L305{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
..
+match() const : tvl::value_t
__
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L318{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
..
+match() const : tvl::value_t
__
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L329{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
..
+match() const : tvl::value_t
__
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L337{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L340{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
..
+match() const : tvl::value_t
+match() const : tvl::value_t
__
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L353{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L354{root_}]]]
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/common/model/diagram_filter.h#L357{diagram_filter}]] {
+diagram_filter() : void
..
+add_exclusive_filter() : void
+add_inclusive_filter() : void
-init_filters() : void
+should_include() const : bool
+should_include<T>() const : _Bool
__
}
class "diagram" as C_0000148537001046167478
class C_0000148537001046167478 [[https://github.com/bkryza/clang-uml/blob/3d8a0ce428ce6b5e1e0585247ac90a82960dee8e/src/package_diagram/model/diagram.h#L34{diagram}]] {
+diagram() = default : void
+diagram() = deleted : void
+diagram() = default : void
..
+operator=() = deleted : diagram &
+operator=() = default : diagram &
..
+add<ElementT>() : _Bool
+add_with_filesystem_path<ElementT>() : _Bool
+add_with_namespace_path<ElementT>() : _Bool
+context() const : inja::json
+find<ElementT>() const : opt_ref<ElementT>
+find<ElementT>() const : opt_ref<ElementT>
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+packages() const : const common::reference_vector<package> &
+to_alias() const : std::string
+type() const : common::model::diagram_t
__
}
C_0000844837292165721774 o- - C_0002031918453259559099 : -path_type_
C_0000845978329661395972 o- - C_0002193110380171976294 : +pr
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000845978329661395972 : -context_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0002069520381434407937 o- - C_0000844837292165721774 : -ns_
C_0002069520381434407937 o- - C_0000844837292165721774 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0000785714713072053129 o- - C_0000844837292165721774 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0002051668456717902300
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0000197068985320835874 <|- - C_0000148537001046167478

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>