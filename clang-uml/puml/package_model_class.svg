<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2571px" preserveAspectRatio="none" style="width:5256px;height:2571px;" version="1.1" viewBox="0 0 5256 2571" width="5256px" zoomAndPan="magnify"><defs><filter height="300%" id="f1l0lywd07zayn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="303" x="2480" y="16.708">clang-uml package diagram model</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="4231" y="2063.9531"/><ellipse cx="4363.25" cy="2079.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4366.2188,2085.5938 Q4365.6406,2085.8906 4365,2086.0313 Q4364.3594,2086.1875 4363.6563,2086.1875 Q4361.1563,2086.1875 4359.8281,2084.5469 Q4358.5156,2082.8906 4358.5156,2079.7656 Q4358.5156,2076.6406 4359.8281,2074.9844 Q4361.1563,2073.3281 4363.6563,2073.3281 Q4364.3594,2073.3281 4365,2073.4844 Q4365.6563,2073.6406 4366.2188,2073.9375 L4366.2188,2076.6563 Q4365.5938,2076.0781 4365,2075.8125 Q4364.4063,2075.5313 4363.7813,2075.5313 Q4362.4375,2075.5313 4361.75,2076.6094 Q4361.0625,2077.6719 4361.0625,2079.7656 Q4361.0625,2081.8594 4361.75,2082.9375 Q4362.4375,2084 4363.7813,2084 Q4364.4063,2084 4365,2083.7344 Q4365.5938,2083.4531 4366.2188,2082.875 L4366.2188,2085.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="4383.75" y="2084.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="4709" y="2060.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="4710" y="2073.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4232" x2="4731" y1="2095.9531" y2="2095.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4237" y="2101.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4239" y="2103.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="4251" y="2110.1636">path_ : clanguml::common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4232" x2="4731" y1="2116.7578" y2="2116.7578"/><ellipse cx="4242" cy="2127.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4251" y="2130.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="4242" cy="2140.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4251" y="2143.7729">path&lt;Sep&gt;() : void</text><ellipse cx="4242" cy="2153.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4251" y="2156.5776">path&lt;Sep&gt;() : void</text><ellipse cx="4242" cy="2166.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4251" y="2169.3823">path&lt;Sep&gt;() : void</text><ellipse cx="4242" cy="2178.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4251" y="2182.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="4242" cy="2191.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4251" y="2194.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="4242" cy="2204.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4251" y="2207.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="4242" cy="2217.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4251" y="2220.6011">path&lt;Sep&gt;() : void</text><ellipse cx="4242" cy="2230.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4251" y="2233.4058">path&lt;Sep&gt;() : void</text><ellipse cx="4242" cy="2243" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4251" y="2246.2104">to_string() const : std::string</text><ellipse cx="4242" cy="2255.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="4251" y="2259.0151">is_empty() const : bool</text><ellipse cx="4242" cy="2268.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4251" y="2271.8198">size() const : size_t</text><ellipse cx="4242" cy="2281.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4251" y="2284.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="4242" cy="2294.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4251" y="2297.4292">operator|=() : void</text><ellipse cx="4242" cy="2307.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4251" y="2310.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="4242" cy="2319.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4251" y="2323.0386">operator|=() : void</text><ellipse cx="4242" cy="2332.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4251" y="2335.8433">operator[]() : std::string &amp;</text><ellipse cx="4242" cy="2345.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4251" y="2348.6479">operator[]() const : const std::string &amp;</text><ellipse cx="4242" cy="2358.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4251" y="2361.4526">append() : void</text><ellipse cx="4242" cy="2371.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4251" y="2374.2573">append() : void</text><ellipse cx="4242" cy="2383.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="4251" y="2387.062">pop_back() : void</text><ellipse cx="4242" cy="2396.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="4251" y="2399.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="4242" cy="2409.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4251" y="2412.6714">starts_with() const : bool</text><ellipse cx="4242" cy="2422.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4251" y="2425.4761">ends_with() const : bool</text><ellipse cx="4242" cy="2435.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4251" y="2438.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="4242" cy="2447.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4251" y="2451.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="4242" cy="2460.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4251" y="2463.8901">relative() const : std::string</text><ellipse cx="4242" cy="2473.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4251" y="2476.6948">name() const : std::string</text><ellipse cx="4242" cy="2486.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="4251" y="2489.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="4242" cy="2499.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="4251" y="2502.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="4242" cy="2511.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="4251" y="2515.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="4242" cy="2524.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="4251" y="2527.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="4242" cy="2537.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="4251" y="2540.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="4242" cy="2550.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="4251" y="2553.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="935" y="175.9531"/><ellipse cx="950" cy="191.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M952.9688,197.5938 Q952.3906,197.8906 951.75,198.0313 Q951.1094,198.1875 950.4063,198.1875 Q947.9063,198.1875 946.5781,196.5469 Q945.2656,194.8906 945.2656,191.7656 Q945.2656,188.6406 946.5781,186.9844 Q947.9063,185.3281 950.4063,185.3281 Q951.1094,185.3281 951.75,185.4844 Q952.4063,185.6406 952.9688,185.9375 L952.9688,188.6563 Q952.3438,188.0781 951.75,187.8125 Q951.1563,187.5313 950.5313,187.5313 Q949.1875,187.5313 948.5,188.6094 Q947.8125,189.6719 947.8125,191.7656 Q947.8125,193.8594 948.5,194.9375 Q949.1875,196 950.5313,196 Q951.1563,196 951.75,195.7344 Q952.3438,195.4531 952.9688,194.875 L952.9688,197.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="964" y="196.1074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="936" x2="1255" y1="207.9531" y2="207.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="941" y="213.9531"/><ellipse cx="946" cy="218.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="955" y="222.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="936" x2="1255" y1="228.7578" y2="228.7578"/><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1291" y="156.9531"/><ellipse cx="1306" cy="172.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1310.1094,178.9531 L1302.3906,178.9531 L1302.3906,166.5625 L1310.1094,166.5625 L1310.1094,168.7188 L1304.8438,168.7188 L1304.8438,171.3906 L1309.6094,171.3906 L1309.6094,173.5469 L1304.8438,173.5469 L1304.8438,176.7969 L1310.1094,176.7969 L1310.1094,178.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="1320" y="177.1074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1292" x2="1555" y1="188.9531" y2="188.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1297" y="203.1636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="1297" y="215.9683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="1297" y="228.7729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="1297" y="241.5776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1292" x2="1555" y1="248.1719" y2="248.1719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="86.4141" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="3074.5" y="1865.4531"/><ellipse cx="3089.5" cy="1881.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3093.6094,1887.4531 L3085.8906,1887.4531 L3085.8906,1875.0625 L3093.6094,1875.0625 L3093.6094,1877.2188 L3088.3438,1877.2188 L3088.3438,1879.8906 L3093.1094,1879.8906 L3093.1094,1882.0469 L3088.3438,1882.0469 L3088.3438,1885.2969 L3093.6094,1885.2969 L3093.6094,1887.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="3103.5" y="1885.6074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3075.5" x2="3331.5" y1="1897.4531" y2="1897.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="3080.5" y="1911.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3080.5" y="1924.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="3080.5" y="1937.2729">kPrivate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3075.5" x2="3331.5" y1="1943.8672" y2="1943.8672"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="188.8516" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="1499.5" y="1813.9531"/><ellipse cx="1514.5" cy="1829.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1518.6094,1835.9531 L1510.8906,1835.9531 L1510.8906,1823.5625 L1518.6094,1823.5625 L1518.6094,1825.7188 L1513.3438,1825.7188 L1513.3438,1828.3906 L1518.1094,1828.3906 L1518.1094,1830.5469 L1513.3438,1830.5469 L1513.3438,1833.7969 L1518.6094,1833.7969 L1518.6094,1835.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="1528.5" y="1834.1074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1500.5" x2="1786.5" y1="1845.9531" y2="1845.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1505.5" y="1860.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1505.5" y="1872.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1505.5" y="1885.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="1505.5" y="1898.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1505.5" y="1911.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1505.5" y="1924.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1505.5" y="1936.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1505.5" y="1949.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="1505.5" y="1962.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1505.5" y="1975.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1505.5" y="1988.2104">kDependency</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1500.5" x2="1786.5" y1="1994.8047" y2="1994.8047"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="73.6094" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="1591" y="169.4531"/><ellipse cx="1606" cy="185.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1610.1094,191.4531 L1602.3906,191.4531 L1602.3906,179.0625 L1610.1094,179.0625 L1610.1094,181.2188 L1604.8438,181.2188 L1604.8438,183.8906 L1609.6094,183.8906 L1609.6094,186.0469 L1604.8438,186.0469 L1604.8438,189.2969 L1610.1094,189.2969 L1610.1094,191.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="1620" y="189.6074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1592" x2="1861" y1="201.4531" y2="201.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="1597" y="215.6636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="1597" y="228.4683">kReturn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1592" x2="1861" y1="235.0625" y2="235.0625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="176.0469" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="3356.5" y="531.4531"/><ellipse cx="3456.75" cy="547.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3459.7188,553.0938 Q3459.1406,553.3906 3458.5,553.5313 Q3457.8594,553.6875 3457.1563,553.6875 Q3454.6563,553.6875 3453.3281,552.0469 Q3452.0156,550.3906 3452.0156,547.2656 Q3452.0156,544.1406 3453.3281,542.4844 Q3454.6563,540.8281 3457.1563,540.8281 Q3457.8594,540.8281 3458.5,540.9844 Q3459.1563,541.1406 3459.7188,541.4375 L3459.7188,544.1563 Q3459.0938,543.5781 3458.5,543.3125 Q3457.9063,543.0313 3457.2813,543.0313 Q3455.9375,543.0313 3455.25,544.1094 Q3454.5625,545.1719 3454.5625,547.2656 Q3454.5625,549.3594 3455.25,550.4375 Q3455.9375,551.5 3457.2813,551.5 Q3457.9063,551.5 3458.5,551.2344 Q3459.0938,550.9531 3459.7188,550.375 L3459.7188,553.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="3477.25" y="551.6074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3357.5" x2="3857.5" y1="563.4531" y2="563.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3362.5" y="569.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3364.5" y="571.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3376.5" y="577.6636">comment_ : std::optional&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3357.5" x2="3857.5" y1="584.2578" y2="584.2578"/><ellipse cx="3367.5" cy="595.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3376.5" y="598.4683">skip() const : bool</text><ellipse cx="3367.5" cy="608.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3376.5" y="611.2729">skip_relationship() const : bool</text><ellipse cx="3367.5" cy="620.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="3376.5" y="624.0776">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="3367.5" cy="633.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3376.5" y="636.8823">style_spec() const : std::string</text><ellipse cx="3367.5" cy="646.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="3376.5" y="649.687">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="3367.5" cy="659.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3376.5" y="662.4917">add_decorators() : void</text><ellipse cx="3367.5" cy="672.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="3376.5" y="675.2964">append() : void</text><ellipse cx="3367.5" cy="684.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3376.5" y="688.1011">comment() const : std::optional&lt;std::string&gt;</text><ellipse cx="3367.5" cy="697.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3376.5" y="700.9058">set_comment() : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="3683.5" y="1173.9531"/><ellipse cx="3698.5" cy="1189.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3701.4688,1195.5938 Q3700.8906,1195.8906 3700.25,1196.0313 Q3699.6094,1196.1875 3698.9063,1196.1875 Q3696.4063,1196.1875 3695.0781,1194.5469 Q3693.7656,1192.8906 3693.7656,1189.7656 Q3693.7656,1186.6406 3695.0781,1184.9844 Q3696.4063,1183.3281 3698.9063,1183.3281 Q3699.6094,1183.3281 3700.25,1183.4844 Q3700.9063,1183.6406 3701.4688,1183.9375 L3701.4688,1186.6563 Q3700.8438,1186.0781 3700.25,1185.8125 Q3699.6563,1185.5313 3699.0313,1185.5313 Q3697.6875,1185.5313 3697,1186.6094 Q3696.3125,1187.6719 3696.3125,1189.7656 Q3696.3125,1191.8594 3697,1192.9375 Q3697.6875,1194 3699.0313,1194 Q3699.6563,1194 3700.25,1193.7344 Q3700.8438,1193.4531 3701.4688,1192.875 L3701.4688,1195.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="3712.5" y="1194.1074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3684.5" x2="3990.5" y1="1205.9531" y2="1205.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3689.5" y="1211.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3691.5" y="1213.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3703.5" y="1220.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3684.5" x2="3990.5" y1="1226.7578" y2="1226.7578"/><ellipse cx="3694.5" cy="1237.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3703.5" y="1240.9683">set_style() : void</text><ellipse cx="3694.5" cy="1250.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3703.5" y="1253.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="3120" y="1458.9531"/><ellipse cx="3163.8" cy="1474.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3166.7688,1480.5938 Q3166.1906,1480.8906 3165.55,1481.0313 Q3164.9094,1481.1875 3164.2063,1481.1875 Q3161.7063,1481.1875 3160.3781,1479.5469 Q3159.0656,1477.8906 3159.0656,1474.7656 Q3159.0656,1471.6406 3160.3781,1469.9844 Q3161.7063,1468.3281 3164.2063,1468.3281 Q3164.9094,1468.3281 3165.55,1468.4844 Q3166.2063,1468.6406 3166.7688,1468.9375 L3166.7688,1471.6563 Q3166.1438,1471.0781 3165.55,1470.8125 Q3164.9563,1470.5313 3164.3313,1470.5313 Q3162.9875,1470.5313 3162.3,1471.6094 Q3161.6125,1472.6719 3161.6125,1474.7656 Q3161.6125,1476.8594 3162.3,1477.9375 Q3162.9875,1479 3164.3313,1479 Q3164.9563,1479 3165.55,1478.7344 Q3166.1438,1478.4531 3166.7688,1477.875 L3166.7688,1480.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="3184.2" y="1479.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3121" x2="3460" y1="1490.9531" y2="1490.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3126" y="1496.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3128" y="1498.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3140" y="1505.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3126" y="1509.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3128" y="1511.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3140" y="1517.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3126" y="1522.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3128" y="1524.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3140" y="1530.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3126" y="1535.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3128" y="1537.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3140" y="1543.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3121" x2="3460" y1="1550.1719" y2="1550.1719"/><ellipse cx="3131" cy="1561.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3140" y="1564.3823">relationship() : void</text><ellipse cx="3131" cy="1573.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3140" y="1577.187">~relationship() = default : void</text><ellipse cx="3131" cy="1586.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="3140" y="1589.9917">set_type() : void</text><ellipse cx="3131" cy="1599.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="3140" y="1602.7964">type() const : clanguml::common::model::relationship_t</text><ellipse cx="3131" cy="1612.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3140" y="1615.6011">set_destination() : void</text><ellipse cx="3131" cy="1625.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3140" y="1628.4058">destination() const : clanguml::common::id_t</text><ellipse cx="3131" cy="1638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="3140" y="1641.2104">set_multiplicity_source() : void</text><ellipse cx="3131" cy="1650.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3140" y="1654.0151">multiplicity_source() const : std::string</text><ellipse cx="3131" cy="1663.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="3140" y="1666.8198">set_multiplicity_destination() : void</text><ellipse cx="3131" cy="1676.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="3140" y="1679.6245">multiplicity_destination() const : std::string</text><ellipse cx="3131" cy="1689.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3140" y="1692.4292">set_label() : void</text><ellipse cx="3131" cy="1702.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3140" y="1705.2339">label() const : std::string</text><ellipse cx="3131" cy="1714.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3140" y="1718.0386">set_access() : void</text><ellipse cx="3131" cy="1727.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="3140" y="1730.8433">access() const : clanguml::common::model::access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="4027" y="1051.9531"/><ellipse cx="4071.75" cy="1067.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4074.7188,1073.5938 Q4074.1406,1073.8906 4073.5,1074.0313 Q4072.8594,1074.1875 4072.1563,1074.1875 Q4069.6563,1074.1875 4068.3281,1072.5469 Q4067.0156,1070.8906 4067.0156,1067.7656 Q4067.0156,1064.6406 4068.3281,1062.9844 Q4069.6563,1061.3281 4072.1563,1061.3281 Q4072.8594,1061.3281 4073.5,1061.4844 Q4074.1563,1061.6406 4074.7188,1061.9375 L4074.7188,1064.6563 Q4074.0938,1064.0781 4073.5,1063.8125 Q4072.9063,1063.5313 4072.2813,1063.5313 Q4070.9375,1063.5313 4070.25,1064.6094 Q4069.5625,1065.6719 4069.5625,1067.7656 Q4069.5625,1069.8594 4070.25,1070.9375 Q4070.9375,1072 4072.2813,1072 Q4072.9063,1072 4073.5,1071.7344 Q4074.0938,1071.4531 4074.7188,1070.875 L4074.7188,1073.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="4092.25" y="1072.1074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4028" x2="4403" y1="1083.9531" y2="1083.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4033" y="1089.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4035" y="1091.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="4047" y="1098.1636">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4033" y="1102.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4035" y="1104.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4047" y="1110.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4033" y="1115.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4035" y="1117.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4047" y="1123.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4033" y="1128.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4035" y="1130.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4047" y="1136.5776">complete_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4033" y="1141.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4035" y="1143.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" target="_top" title="m_nextId" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="m_nextId" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="4047" y="1149.3823">m_nextId : std::atomic_uint64_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4028" x2="4403" y1="1155.9766" y2="1155.9766"/><ellipse cx="4038" cy="1166.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4047" y="1170.187">diagram_element() : void</text><ellipse cx="4038" cy="1179.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4047" y="1182.9917">~diagram_element() = default : void</text><ellipse cx="4038" cy="1192.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="4047" y="1195.7964">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="4038" cy="1205.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="4047" y="1208.6011">set_id() : void</text><ellipse cx="4038" cy="1218.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4047" y="1221.4058">alias() const : std::string</text><ellipse cx="4038" cy="1231" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4047" y="1234.2104">set_name() : void</text><ellipse cx="4038" cy="1243.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4047" y="1247.0151">name() const : std::string</text><ellipse cx="4038" cy="1256.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4047" y="1259.8198">full_name() const : std::string</text><ellipse cx="4038" cy="1269.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="4047" y="1272.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="4038" cy="1282.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="4047" y="1285.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="4038" cy="1295.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4047" y="1298.2339">add_relationship() : void</text><ellipse cx="4038" cy="1307.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="4047" y="1311.0386">append() : void</text><ellipse cx="4038" cy="1320.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4047" y="1323.8433">context() const : inja::json</text><ellipse cx="4038" cy="1333.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4047" y="1336.6479">is_nested() const : bool</text><ellipse cx="4038" cy="1346.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4047" y="1349.4526">nested() : void</text><ellipse cx="4038" cy="1359.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4047" y="1362.2573">complete() const : bool</text><ellipse cx="4038" cy="1371.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4047" y="1375.062">complete() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="934.5" y="460.9531"/><ellipse cx="949.5" cy="476.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M952.4688,482.5938 Q951.8906,482.8906 951.25,483.0313 Q950.6094,483.1875 949.9063,483.1875 Q947.4063,483.1875 946.0781,481.5469 Q944.7656,479.8906 944.7656,476.7656 Q944.7656,473.6406 946.0781,471.9844 Q947.4063,470.3281 949.9063,470.3281 Q950.6094,470.3281 951.25,470.4844 Q951.9063,470.6406 952.4688,470.9375 L952.4688,473.6563 Q951.8438,473.0781 951.25,472.8125 Q950.6563,472.5313 950.0313,472.5313 Q948.6875,472.5313 948,473.6094 Q947.3125,474.6719 947.3125,476.7656 Q947.3125,478.8594 948,479.9375 Q948.6875,481 950.0313,481 Q950.6563,481 951.25,480.7344 Q951.8438,480.4531 952.4688,479.875 L952.4688,482.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="963.5" y="481.1074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="1218.5" y="457.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="1219.5" y="470.0918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="935.5" x2="1255.5" y1="492.9531" y2="492.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="940.5" y="498.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="942.5" y="500.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="954.5" y="507.1636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="935.5" x2="1255.5" y1="513.7578" y2="513.7578"/><ellipse cx="945.5" cy="524.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="954.5" y="527.9683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="945.5" cy="537.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="954.5" y="540.7729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="945.5" cy="550.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="954.5" y="553.5776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="945.5" cy="563.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="954.5" y="566.3823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="945.5" cy="575.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="954.5" y="579.187">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="945.5" cy="588.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="954.5" y="591.9917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="945.5" cy="601.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="954.5" y="604.7964">has_element() const : bool</text><ellipse cx="945.5" cy="614.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="954.5" y="617.6011">is_empty() const : bool</text><ellipse cx="945.5" cy="627.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="954.5" y="630.4058">begin() : auto</text><ellipse cx="945.5" cy="640" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="954.5" y="643.2104">end() : auto</text><ellipse cx="945.5" cy="652.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="954.5" y="656.0151">cbegin() const : auto</text><ellipse cx="945.5" cy="665.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="954.5" y="668.8198">cend() const : auto</text><ellipse cx="945.5" cy="678.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="954.5" y="681.6245">begin() const : auto</text><ellipse cx="945.5" cy="691.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="954.5" y="694.4292">end() const : auto</text><ellipse cx="945.5" cy="704.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="954.5" y="707.2339">print_tree() : void</text><ellipse cx="945.5" cy="716.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="954.5" y="720.0386">add_element() : _Bool</text><ellipse cx="945.5" cy="729.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="954.5" y="732.8433">add_element() : _Bool</text><ellipse cx="945.5" cy="742.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="954.5" y="745.6479">get_element() : auto</text><ellipse cx="945.5" cy="755.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="954.5" y="758.4526">get_element_parent() : auto</text><ellipse cx="945.5" cy="768.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="954.5" y="771.2573">get_element() : auto</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="150.4375" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="4525.5" y="1141.9531"/><ellipse cx="4540.5" cy="1157.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4543.4688,1163.5938 Q4542.8906,1163.8906 4542.25,1164.0313 Q4541.6094,1164.1875 4540.9063,1164.1875 Q4538.4063,1164.1875 4537.0781,1162.5469 Q4535.7656,1160.8906 4535.7656,1157.7656 Q4535.7656,1154.6406 4537.0781,1152.9844 Q4538.4063,1151.3281 4540.9063,1151.3281 Q4541.6094,1151.3281 4542.25,1151.4844 Q4542.9063,1151.6406 4543.4688,1151.9375 L4543.4688,1154.6563 Q4542.8438,1154.0781 4542.25,1153.8125 Q4541.6563,1153.5313 4541.0313,1153.5313 Q4539.6875,1153.5313 4539,1154.6094 Q4538.3125,1155.6719 4538.3125,1157.7656 Q4538.3125,1159.8594 4539,1160.9375 Q4539.6875,1162 4541.0313,1162 Q4541.6563,1162 4542.25,1161.7344 Q4542.8438,1161.4531 4543.4688,1160.875 L4543.4688,1163.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="4554.5" y="1162.1074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4526.5" x2="4826.5" y1="1173.9531" y2="1173.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4531.5" y="1179.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4533.5" y="1181.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4545.5" y="1188.1636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4531.5" y="1192.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4533.5" y="1194.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4545.5" y="1200.9683">line_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4526.5" x2="4826.5" y1="1207.5625" y2="1207.5625"/><ellipse cx="4536.5" cy="1218.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4545.5" y="1221.7729">source_location() = default : void</text><ellipse cx="4536.5" cy="1231.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4545.5" y="1234.5776">source_location() : void</text><ellipse cx="4536.5" cy="1244.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4545.5" y="1247.3823">file() const : const std::string &amp;</text><ellipse cx="4536.5" cy="1256.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4545.5" y="1260.187">set_file() : void</text><ellipse cx="4536.5" cy="1269.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4545.5" y="1272.9917">line() const : unsigned int</text><ellipse cx="4536.5" cy="1282.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="4545.5" y="1285.7964">set_line() : void</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="4964" y="1865.4531"/><ellipse cx="4979" cy="1881.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4983.1094,1887.4531 L4975.3906,1887.4531 L4975.3906,1875.0625 L4983.1094,1875.0625 L4983.1094,1877.2188 L4977.8438,1877.2188 L4977.8438,1879.8906 L4982.6094,1879.8906 L4982.6094,1882.0469 L4977.8438,1882.0469 L4977.8438,1885.2969 L4983.1094,1885.2969 L4983.1094,1887.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="4993" y="1885.6074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4965" x2="5244" y1="1897.4531" y2="1897.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="4970" y="1911.6636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="4970" y="1924.4683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4970" y="1937.2729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4965" x2="5244" y1="1943.8672" y2="1943.8672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="1291.5" y="588.9531"/><ellipse cx="1306.5" cy="604.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1309.4688,610.5938 Q1308.8906,610.8906 1308.25,611.0313 Q1307.6094,611.1875 1306.9063,611.1875 Q1304.4063,611.1875 1303.0781,609.5469 Q1301.7656,607.8906 1301.7656,604.7656 Q1301.7656,601.6406 1303.0781,599.9844 Q1304.4063,598.3281 1306.9063,598.3281 Q1307.6094,598.3281 1308.25,598.4844 Q1308.9063,598.6406 1309.4688,598.9375 L1309.4688,601.6563 Q1308.8438,601.0781 1308.25,600.8125 Q1307.6563,600.5313 1307.0313,600.5313 Q1305.6875,600.5313 1305,601.6094 Q1304.3125,602.6719 1304.3125,604.7656 Q1304.3125,606.8594 1305,607.9375 Q1305.6875,609 1307.0313,609 Q1307.6563,609 1308.25,608.7344 Q1308.8438,608.4531 1309.4688,607.875 L1309.4688,610.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="1320.5" y="609.1074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1292.5" x2="1568.5" y1="620.9531" y2="620.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1297.5" y="626.9531"/><ellipse cx="1302.5" cy="631.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="1311.5" y="635.1636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1292.5" x2="1568.5" y1="641.7578" y2="641.7578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="4448.5" y="1884.4531"/><ellipse cx="4463.5" cy="1900.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4466.4688,1906.0938 Q4465.8906,1906.3906 4465.25,1906.5313 Q4464.6094,1906.6875 4463.9063,1906.6875 Q4461.4063,1906.6875 4460.0781,1905.0469 Q4458.7656,1903.3906 4458.7656,1900.2656 Q4458.7656,1897.1406 4460.0781,1895.4844 Q4461.4063,1893.8281 4463.9063,1893.8281 Q4464.6094,1893.8281 4465.25,1893.9844 Q4465.9063,1894.1406 4466.4688,1894.4375 L4466.4688,1897.1563 Q4465.8438,1896.5781 4465.25,1896.3125 Q4464.6563,1896.0313 4464.0313,1896.0313 Q4462.6875,1896.0313 4462,1897.1094 Q4461.3125,1898.1719 4461.3125,1900.2656 Q4461.3125,1902.3594 4462,1903.4375 Q4462.6875,1904.5 4464.0313,1904.5 Q4464.6563,1904.5 4465.25,1904.2344 Q4465.8438,1903.9531 4466.4688,1903.375 L4466.4688,1906.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="4477.5" y="1904.6074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="4685.5" y="1881.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="4686.5" y="1893.5918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4449.5" x2="4927.5" y1="1916.4531" y2="1916.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4449.5" x2="4927.5" y1="1924.4531" y2="1924.4531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="559" x="4483" y="1458.9531"/><ellipse cx="4639.25" cy="1474.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4642.2188,1480.5938 Q4641.6406,1480.8906 4641,1481.0313 Q4640.3594,1481.1875 4639.6563,1481.1875 Q4637.1563,1481.1875 4635.8281,1479.5469 Q4634.5156,1477.8906 4634.5156,1474.7656 Q4634.5156,1471.6406 4635.8281,1469.9844 Q4637.1563,1468.3281 4639.6563,1468.3281 Q4640.3594,1468.3281 4641,1468.4844 Q4641.6563,1468.6406 4642.2188,1468.9375 L4642.2188,1471.6563 Q4641.5938,1471.0781 4641,1470.8125 Q4640.4063,1470.5313 4639.7813,1470.5313 Q4638.4375,1470.5313 4637.75,1471.6094 Q4637.0625,1472.6719 4637.0625,1474.7656 Q4637.0625,1476.8594 4637.75,1477.9375 Q4638.4375,1479 4639.7813,1479 Q4640.4063,1479 4641,1478.7344 Q4641.5938,1478.4531 4642.2188,1477.875 L4642.2188,1480.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="4659.75" y="1479.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4484" x2="5041" y1="1490.9531" y2="1490.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4489" y="1496.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4491" y="1498.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4503" y="1505.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4484" x2="5041" y1="1511.7578" y2="1511.7578"/><ellipse cx="4494" cy="1522.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4503" y="1525.9683">source_file() = default : void</text><ellipse cx="4494" cy="1535.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4503" y="1538.7729">source_file() : void</text><ellipse cx="4494" cy="1548.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="4503" y="1551.5776">set_path() : void</text><ellipse cx="4494" cy="1561.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="4503" y="1564.3823">set_absolute() : void</text><ellipse cx="4494" cy="1573.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4503" y="1577.187">is_absolute() const : bool</text><ellipse cx="4494" cy="1586.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="4503" y="1589.9917">set_type() : void</text><ellipse cx="4494" cy="1599.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="4503" y="1602.7964">type() const : clanguml::common::model::source_file_t</text><ellipse cx="4494" cy="1612.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4503" y="1615.6011">source_file() : void</text><ellipse cx="4494" cy="1625.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4503" y="1628.4058">source_file() = default : void</text><ellipse cx="4494" cy="1638" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4503" y="1641.2104">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="4494" cy="1650.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4503" y="1654.0151">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="4494" cy="1663.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4503" y="1666.8198">operator==() const : bool</text><ellipse cx="4494" cy="1676.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="4503" y="1679.6245">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="4494" cy="1689.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4503" y="1692.4292">full_name() const : std::string</text><ellipse cx="4494" cy="1702.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="4503" y="1705.2339">full_path() const : clanguml::common::model::path&lt;clanguml::common::model::fs_path_sep&gt;</text><ellipse cx="4494" cy="1714.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="4503" y="1718.0386">add_file() : void</text><ellipse cx="4494" cy="1727.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4503" y="1730.8433">fs_path() const : std::filesystem::path</text><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="3890" y="1884.4531"/><ellipse cx="3905" cy="1900.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3907.9688,1906.0938 Q3907.3906,1906.3906 3906.75,1906.5313 Q3906.1094,1906.6875 3905.4063,1906.6875 Q3902.9063,1906.6875 3901.5781,1905.0469 Q3900.2656,1903.3906 3900.2656,1900.2656 Q3900.2656,1897.1406 3901.5781,1895.4844 Q3902.9063,1893.8281 3905.4063,1893.8281 Q3906.1094,1893.8281 3906.75,1893.9844 Q3907.4063,1894.1406 3907.9688,1894.4375 L3907.9688,1897.1563 Q3907.3438,1896.5781 3906.75,1896.3125 Q3906.1563,1896.0313 3905.5313,1896.0313 Q3904.1875,1896.0313 3903.5,1897.1094 Q3902.8125,1898.1719 3902.8125,1900.2656 Q3902.8125,1902.3594 3903.5,1903.4375 Q3904.1875,1904.5 3905.5313,1904.5 Q3906.1563,1904.5 3906.75,1904.2344 Q3907.3438,1903.9531 3907.9688,1903.375 L3907.9688,1906.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="3919" y="1904.6074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="4127" y="1881.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="4128" y="1893.5918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3891" x2="4412" y1="1916.4531" y2="1916.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3891" x2="4412" y1="1924.4531" y2="1924.4531"/><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="581" x="1897" y="28.9531"/><ellipse cx="2072.25" cy="44.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2072.3594,40.2969 L2071.2031,45.375 L2073.5313,45.375 L2072.3594,40.2969 Z M2070.875,38.0625 L2073.8594,38.0625 L2077.2188,50.4531 L2074.7656,50.4531 L2074,47.3906 L2070.7188,47.3906 L2069.9688,50.4531 L2067.5313,50.4531 L2070.875,38.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="2092.75" y="49.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1898" x2="2477" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1903" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1905" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1917" y="75.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1903" y="79.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1905" y="81.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1917" y="87.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1898" x2="2477" y1="94.5625" y2="94.5625"/><ellipse cx="1908" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1917" y="108.7729">diagram() : void</text><ellipse cx="1908" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1917" y="121.5776">~diagram() : void</text><ellipse cx="1908" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="1917" y="134.3823">type() const = 0 : clanguml::common::model::diagram_t</text><ellipse cx="1908" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="1917" y="147.187">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="1908" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="1917" y="159.9917">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="1908" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1917" y="172.7964">diagram() : void</text><ellipse cx="1908" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1917" y="185.6011">diagram() : void</text><ellipse cx="1908" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1917" y="198.4058">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="1908" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1917" y="211.2104">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="1908" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1917" y="224.0151">set_name() : void</text><ellipse cx="1908" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1917" y="236.8198">name() const : std::string</text><ellipse cx="1908" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1917" y="249.6245">set_filter() : void</text><ellipse cx="1908" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1917" y="262.4292">set_complete() : void</text><ellipse cx="1908" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1917" y="275.2339">complete() const : bool</text><ellipse cx="1908" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="288.0386">should_include() const : bool</text><ellipse cx="1908" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="300.8433">should_include() const : bool</text><ellipse cx="1908" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="313.6479">should_include() const : bool</text><ellipse cx="1908" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="326.4526">should_include() const : bool</text><ellipse cx="1908" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="339.2573">should_include() const : bool</text><ellipse cx="1908" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="352.062">should_include() const : bool</text><ellipse cx="1908" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1917" y="364.8667">has_element() const : bool</text><ellipse cx="1908" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1917" y="377.6714">should_include() const : bool</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="201.6563" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="3983.5" y="1496.9531"/><ellipse cx="4100.25" cy="1512.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4103.2188,1518.5938 Q4102.6406,1518.8906 4102,1519.0313 Q4101.3594,1519.1875 4100.6563,1519.1875 Q4098.1563,1519.1875 4096.8281,1517.5469 Q4095.5156,1515.8906 4095.5156,1512.7656 Q4095.5156,1509.6406 4096.8281,1507.9844 Q4098.1563,1506.3281 4100.6563,1506.3281 Q4101.3594,1506.3281 4102,1506.4844 Q4102.6563,1506.6406 4103.2188,1506.9375 L4103.2188,1509.6563 Q4102.5938,1509.0781 4102,1508.8125 Q4101.4063,1508.5313 4100.7813,1508.5313 Q4099.4375,1508.5313 4098.75,1509.6094 Q4098.0625,1510.6719 4098.0625,1512.7656 Q4098.0625,1514.8594 4098.75,1515.9375 Q4099.4375,1517 4100.7813,1517 Q4101.4063,1517 4102,1516.7344 Q4102.5938,1516.4531 4103.2188,1515.875 L4103.2188,1518.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="4120.75" y="1517.1074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3984.5" x2="4446.5" y1="1528.9531" y2="1528.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3984.5" x2="4446.5" y1="1536.9531" y2="1536.9531"/><ellipse cx="3994.5" cy="1547.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="4003.5" y="1551.1636">element() : void</text><ellipse cx="3994.5" cy="1560.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4003.5" y="1563.9683">~element() = default : void</text><ellipse cx="3994.5" cy="1573.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4003.5" y="1576.7729">name_and_ns() const : std::string</text><ellipse cx="3994.5" cy="1586.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="4003.5" y="1589.5776">set_namespace() : void</text><ellipse cx="3994.5" cy="1599.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="4003.5" y="1602.3823">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="3994.5" cy="1611.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="4003.5" y="1615.187">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="3994.5" cy="1624.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4003.5" y="1627.9917">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="3994.5" cy="1637.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4003.5" y="1640.7964">full_name() const : std::string</text><ellipse cx="3994.5" cy="1650.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4003.5" y="1653.6011">full_name_no_ns() const : std::string</text><ellipse cx="3994.5" cy="1663.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="4003.5" y="1666.4058">set_using_namespaces() : void</text><ellipse cx="3994.5" cy="1676" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="4003.5" y="1679.2104">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="3994.5" cy="1688.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4003.5" y="1692.0151">context() const : inja::json</text></a><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="176.0469" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="3530.5" y="1820.4531"/><ellipse cx="3575.75" cy="1836.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3578.7188,1842.0938 Q3578.1406,1842.3906 3577.5,1842.5313 Q3576.8594,1842.6875 3576.1563,1842.6875 Q3573.6563,1842.6875 3572.3281,1841.0469 Q3571.0156,1839.3906 3571.0156,1836.2656 Q3571.0156,1833.1406 3572.3281,1831.4844 Q3573.6563,1829.8281 3576.1563,1829.8281 Q3576.8594,1829.8281 3577.5,1829.9844 Q3578.1563,1830.1406 3578.7188,1830.4375 L3578.7188,1833.1563 Q3578.0938,1832.5781 3577.5,1832.3125 Q3576.9063,1832.0313 3576.2813,1832.0313 Q3574.9375,1832.0313 3574.25,1833.1094 Q3573.5625,1834.1719 3573.5625,1836.2656 Q3573.5625,1838.3594 3574.25,1839.4375 Q3574.9375,1840.5 3576.2813,1840.5 Q3576.9063,1840.5 3577.5,1840.2344 Q3578.0938,1839.9531 3578.7188,1839.375 L3578.7188,1842.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="3596.25" y="1840.6074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3531.5" x2="3853.5" y1="1852.4531" y2="1852.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3536.5" y="1858.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3538.5" y="1860.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3550.5" y="1866.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3531.5" x2="3853.5" y1="1873.2578" y2="1873.2578"/><ellipse cx="3541.5" cy="1884.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3550.5" y="1887.4683">package() : void</text><ellipse cx="3541.5" cy="1897.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3550.5" y="1900.2729">package() : void</text><ellipse cx="3541.5" cy="1909.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3550.5" y="1913.0776">package() = default : void</text><ellipse cx="3541.5" cy="1922.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3550.5" y="1925.8823">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="3541.5" cy="1935.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3550.5" y="1938.687">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="3541.5" cy="1948.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3550.5" y="1951.4917">full_name() const : std::string</text><ellipse cx="3541.5" cy="1961.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3550.5" y="1964.2964">is_deprecated() const : bool</text><ellipse cx="3541.5" cy="1973.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3550.5" y="1977.1011">set_deprecated() : void</text><ellipse cx="3541.5" cy="1986.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3550.5" y="1989.9058">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="904.5" y="1560.9531"/><ellipse cx="919.5" cy="1576.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M923.6094,1582.9531 L915.8906,1582.9531 L915.8906,1570.5625 L923.6094,1570.5625 L923.6094,1572.7188 L918.3438,1572.7188 L918.3438,1575.3906 L923.1094,1575.3906 L923.1094,1577.5469 L918.3438,1577.5469 L918.3438,1580.7969 L923.6094,1580.7969 L923.6094,1582.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="933.5" y="1581.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="905.5" x2="1145.5" y1="1592.9531" y2="1592.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="910.5" y="1607.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="910.5" y="1619.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="905.5" x2="1145.5" y1="1626.5625" y2="1626.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="176.0469" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="1808.5" y="1128.9531"/><ellipse cx="1835.2" cy="1144.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1838.1688,1150.5938 Q1837.5906,1150.8906 1836.95,1151.0313 Q1836.3094,1151.1875 1835.6063,1151.1875 Q1833.1063,1151.1875 1831.7781,1149.5469 Q1830.4656,1147.8906 1830.4656,1144.7656 Q1830.4656,1141.6406 1831.7781,1139.9844 Q1833.1063,1138.3281 1835.6063,1138.3281 Q1836.3094,1138.3281 1836.95,1138.4844 Q1837.6063,1138.6406 1838.1688,1138.9375 L1838.1688,1141.6563 Q1837.5438,1141.0781 1836.95,1140.8125 Q1836.3563,1140.5313 1835.7313,1140.5313 Q1834.3875,1140.5313 1833.7,1141.6094 Q1833.0125,1142.6719 1833.0125,1144.7656 Q1833.0125,1146.8594 1833.7,1147.9375 Q1834.3875,1149 1835.7313,1149 Q1836.3563,1149 1836.95,1148.7344 Q1837.5438,1148.4531 1838.1688,1147.875 L1838.1688,1150.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="1851.8" y="1149.1074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1809.5" x2="2107.5" y1="1160.9531" y2="1160.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1809.5" x2="2107.5" y1="1168.9531" y2="1168.9531"/><ellipse cx="1819.5" cy="1179.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1828.5" y="1183.1636">filter_visitor() : void</text><ellipse cx="1819.5" cy="1192.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1828.5" y="1195.9683">~filter_visitor() = default : void</text><ellipse cx="1819.5" cy="1205.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1828.5" y="1208.7729">match() const : tvl::value_t</text><ellipse cx="1819.5" cy="1218.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1828.5" y="1221.5776">match() const : tvl::value_t</text><ellipse cx="1819.5" cy="1231.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1828.5" y="1234.3823">match() const : tvl::value_t</text><ellipse cx="1819.5" cy="1243.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1828.5" y="1247.187">match() const : tvl::value_t</text><ellipse cx="1819.5" cy="1256.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1828.5" y="1259.9917">match() const : tvl::value_t</text><ellipse cx="1819.5" cy="1269.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1828.5" y="1272.7964">is_inclusive() const : bool</text><ellipse cx="1819.5" cy="1282.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1828.5" y="1285.6011">is_exclusive() const : bool</text><ellipse cx="1819.5" cy="1295.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="1828.5" y="1298.4058">type() const : clanguml::common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="1182" y="1548.4531"/><ellipse cx="1197" cy="1564.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1199.9688,1570.0938 Q1199.3906,1570.3906 1198.75,1570.5313 Q1198.1094,1570.6875 1197.4063,1570.6875 Q1194.9063,1570.6875 1193.5781,1569.0469 Q1192.2656,1567.3906 1192.2656,1564.2656 Q1192.2656,1561.1406 1193.5781,1559.4844 Q1194.9063,1557.8281 1197.4063,1557.8281 Q1198.1094,1557.8281 1198.75,1557.9844 Q1199.4063,1558.1406 1199.9688,1558.4375 L1199.9688,1561.1563 Q1199.3438,1560.5781 1198.75,1560.3125 Q1198.1563,1560.0313 1197.5313,1560.0313 Q1196.1875,1560.0313 1195.5,1561.1094 Q1194.8125,1562.1719 1194.8125,1564.2656 Q1194.8125,1566.3594 1195.5,1567.4375 Q1196.1875,1568.5 1197.5313,1568.5 Q1198.1563,1568.5 1198.75,1568.2344 Q1199.3438,1567.9531 1199.9688,1567.375 L1199.9688,1570.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="1211" y="1568.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1183" x2="1452" y1="1580.4531" y2="1580.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1183" x2="1452" y1="1588.4531" y2="1588.4531"/><ellipse cx="1193" cy="1599.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1202" y="1602.6636">anyof_filter() : void</text><ellipse cx="1193" cy="1612.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1202" y="1615.4683">~anyof_filter() = default : void</text><ellipse cx="1193" cy="1625.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1202" y="1628.2729">match() const : tvl::value_t</text><ellipse cx="1193" cy="1637.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1202" y="1641.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="3567.5" y="1548.4531"/><ellipse cx="3582.5" cy="1564.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3585.4688,1570.0938 Q3584.8906,1570.3906 3584.25,1570.5313 Q3583.6094,1570.6875 3582.9063,1570.6875 Q3580.4063,1570.6875 3579.0781,1569.0469 Q3577.7656,1567.3906 3577.7656,1564.2656 Q3577.7656,1561.1406 3579.0781,1559.4844 Q3580.4063,1557.8281 3582.9063,1557.8281 Q3583.6094,1557.8281 3584.25,1557.9844 Q3584.9063,1558.1406 3585.4688,1558.4375 L3585.4688,1561.1563 Q3584.8438,1560.5781 3584.25,1560.3125 Q3583.6563,1560.0313 3583.0313,1560.0313 Q3581.6875,1560.0313 3581,1561.1094 Q3580.3125,1562.1719 3580.3125,1564.2656 Q3580.3125,1566.3594 3581,1567.4375 Q3581.6875,1568.5 3583.0313,1568.5 Q3583.6563,1568.5 3584.25,1568.2344 Q3584.8438,1567.9531 3585.4688,1567.375 L3585.4688,1570.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="3596.5" y="1568.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3568.5" x2="3876.5" y1="1580.4531" y2="1580.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3568.5" x2="3876.5" y1="1588.4531" y2="1588.4531"/><ellipse cx="3578.5" cy="1599.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3587.5" y="1602.6636">namespace_filter() : void</text><ellipse cx="3578.5" cy="1612.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="3587.5" y="1615.4683">~namespace_filter() = default : void</text><ellipse cx="3578.5" cy="1625.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3587.5" y="1628.2729">match() const : tvl::value_t</text><ellipse cx="3578.5" cy="1637.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3587.5" y="1641.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="1834.5" y="1548.4531"/><ellipse cx="1849.5" cy="1564.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1852.4688,1570.0938 Q1851.8906,1570.3906 1851.25,1570.5313 Q1850.6094,1570.6875 1849.9063,1570.6875 Q1847.4063,1570.6875 1846.0781,1569.0469 Q1844.7656,1567.3906 1844.7656,1564.2656 Q1844.7656,1561.1406 1846.0781,1559.4844 Q1847.4063,1557.8281 1849.9063,1557.8281 Q1850.6094,1557.8281 1851.25,1557.9844 Q1851.9063,1558.1406 1852.4688,1558.4375 L1852.4688,1561.1563 Q1851.8438,1560.5781 1851.25,1560.3125 Q1850.6563,1560.0313 1850.0313,1560.0313 Q1848.6875,1560.0313 1848,1561.1094 Q1847.3125,1562.1719 1847.3125,1564.2656 Q1847.3125,1566.3594 1848,1567.4375 Q1848.6875,1568.5 1850.0313,1568.5 Q1850.6563,1568.5 1851.25,1568.2344 Q1851.8438,1567.9531 1852.4688,1567.375 L1852.4688,1570.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="1863.5" y="1568.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1835.5" x2="2121.5" y1="1580.4531" y2="1580.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1840.5" y="1586.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1842.5" y="1588.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1854.5" y="1594.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1835.5" x2="2121.5" y1="1601.2578" y2="1601.2578"/><ellipse cx="1845.5" cy="1612.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1854.5" y="1615.4683">element_filter() : void</text><ellipse cx="1845.5" cy="1625.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1854.5" y="1628.2729">~element_filter() = default : void</text><ellipse cx="1845.5" cy="1637.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1854.5" y="1641.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="2157.5" y="1548.4531"/><ellipse cx="2172.5" cy="1564.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2175.4688,1570.0938 Q2174.8906,1570.3906 2174.25,1570.5313 Q2173.6094,1570.6875 2172.9063,1570.6875 Q2170.4063,1570.6875 2169.0781,1569.0469 Q2167.7656,1567.3906 2167.7656,1564.2656 Q2167.7656,1561.1406 2169.0781,1559.4844 Q2170.4063,1557.8281 2172.9063,1557.8281 Q2173.6094,1557.8281 2174.25,1557.9844 Q2174.9063,1558.1406 2175.4688,1558.4375 L2175.4688,1561.1563 Q2174.8438,1560.5781 2174.25,1560.3125 Q2173.6563,1560.0313 2173.0313,1560.0313 Q2171.6875,1560.0313 2171,1561.1094 Q2170.3125,1562.1719 2170.3125,1564.2656 Q2170.3125,1566.3594 2171,1567.4375 Q2171.6875,1568.5 2173.0313,1568.5 Q2173.6563,1568.5 2174.25,1568.2344 Q2174.8438,1567.9531 2175.4688,1567.375 L2175.4688,1570.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="2186.5" y="1568.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2158.5" x2="2448.5" y1="1580.4531" y2="1580.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2163.5" y="1586.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2165.5" y="1588.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2177.5" y="1594.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2158.5" x2="2448.5" y1="1601.2578" y2="1601.2578"/><ellipse cx="2168.5" cy="1612.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2177.5" y="1615.4683">subclass_filter() : void</text><ellipse cx="2168.5" cy="1625.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="2177.5" y="1628.2729">~subclass_filter() = default : void</text><ellipse cx="2168.5" cy="1637.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2177.5" y="1641.0776">match() const : tvl::value_t</text><!--MD5=[017a9910fffd6e456b2b03918511ff35]
class C_0001412380775311155780--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="176.0469" id="C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.5;" width="555" x="6" y="1509.9531"/><ellipse cx="21" cy="1525.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,1531.5938 Q23.3906,1531.8906 22.75,1532.0313 Q22.1094,1532.1875 21.4063,1532.1875 Q18.9063,1532.1875 17.5781,1530.5469 Q16.2656,1528.8906 16.2656,1525.7656 Q16.2656,1522.6406 17.5781,1520.9844 Q18.9063,1519.3281 21.4063,1519.3281 Q22.1094,1519.3281 22.75,1519.4844 Q23.4063,1519.6406 23.9688,1519.9375 L23.9688,1522.6563 Q23.3438,1522.0781 22.75,1521.8125 Q22.1563,1521.5313 21.5313,1521.5313 Q20.1875,1521.5313 19.5,1522.6094 Q18.8125,1523.6719 18.8125,1525.7656 Q18.8125,1527.8594 19.5,1528.9375 Q20.1875,1530 21.5313,1530 Q22.1563,1530 22.75,1529.7344 Q23.3438,1529.4531 23.9688,1528.875 L23.9688,1531.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="35" y="1530.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="223" x="341" y="1506.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="221" x="342" y="1519.0918">DiagramT,ElementT,MatchOverrideT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="560" y1="1541.9531" y2="1541.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="1547.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1549.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="1556.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="1560.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1562.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="26" y="1568.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="1573.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1575.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="26" y="1581.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="1586.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1588.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="26" y="1594.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="560" y1="1601.1719" y2="1601.1719"/><ellipse cx="17" cy="1612.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="26" y="1615.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="17" cy="1624.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="26" y="1628.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="17" cy="1637.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="1640.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1647.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="1653.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1660.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26" y="1666.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1673.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="1679.4058">add_adjacent() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="1488" y="1554.9531"/><ellipse cx="1503" cy="1570.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1505.9688,1576.5938 Q1505.3906,1576.8906 1504.75,1577.0313 Q1504.1094,1577.1875 1503.4063,1577.1875 Q1500.9063,1577.1875 1499.5781,1575.5469 Q1498.2656,1573.8906 1498.2656,1570.7656 Q1498.2656,1567.6406 1499.5781,1565.9844 Q1500.9063,1564.3281 1503.4063,1564.3281 Q1504.1094,1564.3281 1504.75,1564.4844 Q1505.4063,1564.6406 1505.9688,1564.9375 L1505.9688,1567.6563 Q1505.3438,1567.0781 1504.75,1566.8125 Q1504.1563,1566.5313 1503.5313,1566.5313 Q1502.1875,1566.5313 1501.5,1567.6094 Q1500.8125,1568.6719 1500.8125,1570.7656 Q1500.8125,1572.8594 1501.5,1573.9375 Q1502.1875,1575 1503.5313,1575 Q1504.1563,1575 1504.75,1574.7344 Q1505.3438,1574.4531 1505.9688,1573.875 L1505.9688,1576.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="1517" y="1575.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1489" x2="1798" y1="1586.9531" y2="1586.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1489" x2="1798" y1="1594.9531" y2="1594.9531"/><ellipse cx="1499" cy="1605.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1508" y="1609.1636">relationship_filter() : void</text><ellipse cx="1499" cy="1618.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1508" y="1621.9683">~relationship_filter() = default : void</text><ellipse cx="1499" cy="1631.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1508" y="1634.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="2804" y="1554.9531"/><ellipse cx="2819" cy="1570.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2821.9688,1576.5938 Q2821.3906,1576.8906 2820.75,1577.0313 Q2820.1094,1577.1875 2819.4063,1577.1875 Q2816.9063,1577.1875 2815.5781,1575.5469 Q2814.2656,1573.8906 2814.2656,1570.7656 Q2814.2656,1567.6406 2815.5781,1565.9844 Q2816.9063,1564.3281 2819.4063,1564.3281 Q2820.1094,1564.3281 2820.75,1564.4844 Q2821.4063,1564.6406 2821.9688,1564.9375 L2821.9688,1567.6563 Q2821.3438,1567.0781 2820.75,1566.8125 Q2820.1563,1566.5313 2819.5313,1566.5313 Q2818.1875,1566.5313 2817.5,1567.6094 Q2816.8125,1568.6719 2816.8125,1570.7656 Q2816.8125,1572.8594 2817.5,1573.9375 Q2818.1875,1575 2819.5313,1575 Q2820.1563,1575 2820.75,1574.7344 Q2821.3438,1574.4531 2821.9688,1573.875 L2821.9688,1576.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="2833" y="1575.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2805" x2="3084" y1="1586.9531" y2="1586.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2805" x2="3084" y1="1594.9531" y2="1594.9531"/><ellipse cx="2815" cy="1605.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2824" y="1609.1636">access_filter() : void</text><ellipse cx="2815" cy="1618.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2824" y="1621.9683">~access_filter() = default : void</text><ellipse cx="2815" cy="1631.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2824" y="1634.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="2484.5" y="1548.4531"/><ellipse cx="2499.5" cy="1564.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2502.4688,1570.0938 Q2501.8906,1570.3906 2501.25,1570.5313 Q2500.6094,1570.6875 2499.9063,1570.6875 Q2497.4063,1570.6875 2496.0781,1569.0469 Q2494.7656,1567.3906 2494.7656,1564.2656 Q2494.7656,1561.1406 2496.0781,1559.4844 Q2497.4063,1557.8281 2499.9063,1557.8281 Q2500.6094,1557.8281 2501.25,1557.9844 Q2501.9063,1558.1406 2502.4688,1558.4375 L2502.4688,1561.1563 Q2501.8438,1560.5781 2501.25,1560.3125 Q2500.6563,1560.0313 2500.0313,1560.0313 Q2498.6875,1560.0313 2498,1561.1094 Q2497.3125,1562.1719 2497.3125,1564.2656 Q2497.3125,1566.3594 2498,1567.4375 Q2498.6875,1568.5 2500.0313,1568.5 Q2500.6563,1568.5 2501.25,1568.2344 Q2501.8438,1567.9531 2502.4688,1567.375 L2502.4688,1570.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="2513.5" y="1568.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2485.5" x2="2767.5" y1="1580.4531" y2="1580.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2490.5" y="1586.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2492.5" y="1588.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2504.5" y="1594.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2485.5" x2="2767.5" y1="1601.2578" y2="1601.2578"/><ellipse cx="2495.5" cy="1612.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2504.5" y="1615.4683">context_filter() : void</text><ellipse cx="2495.5" cy="1625.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2504.5" y="1628.2729">~context_filter() = default : void</text><ellipse cx="2495.5" cy="1637.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2504.5" y="1641.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="86.4141" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="596" y="1554.9531"/><ellipse cx="611" cy="1570.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M613.9688,1576.5938 Q613.3906,1576.8906 612.75,1577.0313 Q612.1094,1577.1875 611.4063,1577.1875 Q608.9063,1577.1875 607.5781,1575.5469 Q606.2656,1573.8906 606.2656,1570.7656 Q606.2656,1567.6406 607.5781,1565.9844 Q608.9063,1564.3281 611.4063,1564.3281 Q612.1094,1564.3281 612.75,1564.4844 Q613.4063,1564.6406 613.9688,1564.9375 L613.9688,1567.6563 Q613.3438,1567.0781 612.75,1566.8125 Q612.1563,1566.5313 611.5313,1566.5313 Q610.1875,1566.5313 609.5,1567.6094 Q608.8125,1568.6719 608.8125,1570.7656 Q608.8125,1572.8594 609.5,1573.9375 Q610.1875,1575 611.5313,1575 Q612.1563,1575 612.75,1574.7344 Q613.3438,1574.4531 613.9688,1573.875 L613.9688,1576.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="625" y="1575.1074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="597" x2="868" y1="1586.9531" y2="1586.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="597" x2="868" y1="1594.9531" y2="1594.9531"/><ellipse cx="607" cy="1605.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="616" y="1609.1636">paths_filter() : void</text><ellipse cx="607" cy="1618.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="616" y="1621.9683">~paths_filter() = default : void</text><ellipse cx="607" cy="1631.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="616" y="1634.7729">match() const : tvl::value_t</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="1929.5" y="556.9531"/><ellipse cx="1944.5" cy="572.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1947.4688,578.5938 Q1946.8906,578.8906 1946.25,579.0313 Q1945.6094,579.1875 1944.9063,579.1875 Q1942.4063,579.1875 1941.0781,577.5469 Q1939.7656,575.8906 1939.7656,572.7656 Q1939.7656,569.6406 1941.0781,567.9844 Q1942.4063,566.3281 1944.9063,566.3281 Q1945.6094,566.3281 1946.25,566.4844 Q1946.9063,566.6406 1947.4688,566.9375 L1947.4688,569.6563 Q1946.8438,569.0781 1946.25,568.8125 Q1945.6563,568.5313 1945.0313,568.5313 Q1943.6875,568.5313 1943,569.6094 Q1942.3125,570.6719 1942.3125,572.7656 Q1942.3125,574.8594 1943,575.9375 Q1943.6875,577 1945.0313,577 Q1945.6563,577 1946.25,576.7344 Q1946.8438,576.4531 1947.4688,575.875 L1947.4688,578.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="1958.5" y="577.1074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1930.5" x2="2216.5" y1="588.9531" y2="588.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1930.5" x2="2216.5" y1="596.9531" y2="596.9531"/><ellipse cx="1940.5" cy="607.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1949.5" y="611.1636">diagram_filter() : void</text><ellipse cx="1940.5" cy="620.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1949.5" y="623.9683">add_inclusive_filter() : void</text><ellipse cx="1940.5" cy="633.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1949.5" y="636.7729">add_exclusive_filter() : void</text><ellipse cx="1940.5" cy="646.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1949.5" y="649.5776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1937.5" y="656.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1949.5" y="662.3823">init_filters() : void</text><ellipse cx="1940.5" cy="671.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1949.5" y="675.187">should_include() : _Bool</text></a><!--MD5=[bc315e7d0960eeae67e337de181c1bce]
class C_0000148537001046167478--><a href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/package_diagram/model/diagram.h#L28" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/package_diagram/model/diagram.h#L28" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1l0lywd07zayn)" height="214.4609" id="C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.5;" width="561" x="2432" y="807.9531"/><ellipse cx="2682.75" cy="823.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2685.7188,829.5938 Q2685.1406,829.8906 2684.5,830.0313 Q2683.8594,830.1875 2683.1563,830.1875 Q2680.6563,830.1875 2679.3281,828.5469 Q2678.0156,826.8906 2678.0156,823.7656 Q2678.0156,820.6406 2679.3281,818.9844 Q2680.6563,817.3281 2683.1563,817.3281 Q2683.8594,817.3281 2684.5,817.4844 Q2685.1563,817.6406 2685.7188,817.9375 L2685.7188,820.6563 Q2685.0938,820.0781 2684.5,819.8125 Q2683.9063,819.5313 2683.2813,819.5313 Q2681.9375,819.5313 2681.25,820.6094 Q2680.5625,821.6719 2680.5625,823.7656 Q2680.5625,825.8594 2681.25,826.9375 Q2681.9375,828 2683.2813,828 Q2683.9063,828 2684.5,827.7344 Q2685.0938,827.4531 2685.7188,826.875 L2685.7188,829.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="2703.25" y="828.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2433" x2="2992" y1="839.9531" y2="839.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2433" x2="2992" y1="847.9531" y2="847.9531"/><ellipse cx="2443" cy="858.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2452" y="862.1636">diagram() = default : void</text><ellipse cx="2443" cy="871.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2452" y="874.9683">diagram() : void</text><ellipse cx="2443" cy="884.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2452" y="887.7729">diagram() = default : void</text><ellipse cx="2443" cy="897.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2452" y="900.5776">operator=() : diagram &amp;</text><ellipse cx="2443" cy="910.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2452" y="913.3823">operator=() = default : diagram &amp;</text><ellipse cx="2443" cy="922.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2452" y="926.187">type() const : common::model::diagram_t</text><ellipse cx="2443" cy="935.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="2452" y="938.9917">packages() const : const common::reference_vector&lt;clanguml::common::model::package&gt; &amp;</text><ellipse cx="2443" cy="948.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="2452" y="951.7964">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="2443" cy="961.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="2452" y="964.6011">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="2443" cy="974.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2452" y="977.4058">add_package() : void</text><ellipse cx="2443" cy="987" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="2452" y="990.2104">get_package() const : clanguml::common::optional_ref&lt;clanguml::common::model::package&gt;</text><ellipse cx="2443" cy="999.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="2452" y="1003.0151">get_package() const : clanguml::common::optional_ref&lt;common::model::package&gt;</text><ellipse cx="2443" cy="1012.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2452" y="1015.8198">to_alias() const : std::string</text></a><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M3107.97,1734.7331 C3106.15,1735.4931 3104.33,1736.2331 3102.5,1736.9531 C2865.03,1830.3631 2107.22,1881.9231 1787.73,1899.9831 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3119.95,1729.4131,3112.8435,1728.1892,3108.9805,1734.2782,3116.0869,1735.5022,3119.95,1729.4131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2990.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3000.5" y="1780.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M3248.03,1749.5331 C3236.04,1792.0831 3223.93,1834.9931 3215.38,1865.3331 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3251.58,1736.9631,3246.1018,1741.6524,3248.3234,1748.5128,3253.8016,1743.8235,3251.58,1736.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3244.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3254.5" y="1780.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M3572.99,726.7531 C3515.3,904.4731 3399.3,1261.7931 3335.36,1458.7731 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3566.4,724.4031,3579.23,707.5431,3579.71,728.7231,3566.4,724.4031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M3783.03,1274.4031 C3737.79,1319.4831 3670.39,1382.5531 3604.5,1428.9531 C3600.75,1431.5931 3532.91,1467.9331 3461.25,1506.1431 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3778.14,1269.4031,3797.2,1260.1531,3788.07,1279.2731,3778.14,1269.4031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M4015.25,1379.3231 C4013.33,1380.2231 4011.42,1381.1031 4009.5,1381.9531 C3820.57,1466.1631 3746.38,1392.4931 3550.5,1458.9531 C3520.74,1469.0531 3490.27,1482.2631 3461.15,1496.5031 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4026.95,1373.5531,4019.8,1372.6165,4016.1854,1378.8563,4023.3354,1379.7929,4026.95,1373.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3919.5" y="1418.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="3929.5" y="1425.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M3710.97,721.7931 C3803.21,812.1431 3939.92,946.0431 4047.77,1051.6731 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3705.95,726.6731,3696.56,707.6831,3715.75,716.6731,3705.95,726.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M4676.63,1932.4831 C4663.95,1957.0631 4642.39,1998.8931 4618.1,2046.0031 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4624.24,2049.3631,4608.86,2063.9331,4611.8,2042.9431,4624.24,2049.3631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M4726.3,1749.8631 C4713.76,1802.1331 4701.1,1854.9131 4694.08,1884.1831 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4729.4,1736.9631,4724.1123,1741.8662,4726.6045,1748.633,4731.8922,1743.7299,4729.4,1736.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4723.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="4733.5" y="1780.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M4925.19,1745.7031 C4973.73,1789.4931 5023.17,1834.0831 5057.8,1865.3331 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4915.49,1736.9631,4917.2596,1743.9537,4924.3931,1745.0089,4922.6235,1738.0183,4915.49,1736.9631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4966.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4976.5" y="1780.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M4420.8,1360.1931 C4467.33,1392.4431 4516.68,1426.6331 4562.97,1458.7031 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4416.58,1365.7931,4404.13,1348.6531,4424.56,1354.2831,4416.58,1365.7931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M3882.45,1275.7931 C3914,1312.1731 3959.37,1356.8431 4009.5,1381.9531 C4193.26,1474.0131 4269.21,1397.9931 4465.5,1458.9531 C4471.2,1460.7231 4476.93,1462.5831 4482.69,1464.5131 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3876.92,1280.0831,3869.39,1260.2831,3887.62,1271.0731,3876.92,1280.0831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1bd93a173dba52ae25f3e9452d57eb86]
reverse link C_0000895261582183440230 to C_0000785714713072053129--><path d="M4697.84,1311.9931 C4707.88,1356.2431 4720.05,1409.8931 4731.12,1458.6531 " fill="none" id="C_0000895261582183440230&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4690.99,1313.4331,4693.39,1292.3831,4704.64,1310.3331,4690.99,1313.4331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M4170.43,1932.4831 C4190.94,1957.4431 4226.08,2000.1931 4265.52,2048.1831 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="4271.18,2044.0331,4278.47,2063.9331,4260.36,2052.9231,4271.18,2044.0331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M2157.21,397.2231 C2154.51,408.6931 2151.61,420.0131 2148.5,430.9531 C2136.29,473.9531 2117.64,520.6331 2101.99,556.6531 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2160.18,384.2231,2154.9476,389.1851,2157.5154,395.9236,2162.7479,390.9615,2160.18,384.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2154.5" y="420.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2164.5" y="427.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M2061.99,556.5131 C2056.61,515.3831 2053.85,460.5831 2066.5,413.9531 C2068.73,405.7331 2071.38,397.5031 2074.37,389.3231 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2076.27,384.2431,2069.3834,391.284,2074.5269,388.9295,2076.8815,394.073,2076.27,384.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2069.5" y="420.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="2079.5" y="427.02">diagram_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M4212.49,1712.3231 C4210.3,1736.1931 4206.86,1761.0631 4201.5,1783.9531 C4193.01,1820.2131 4175.42,1859.7131 4163.54,1884.0331 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4213.57,1699.1831,4209.0892,1704.8331,4212.5811,1711.1423,4217.0619,1705.4924,4213.57,1699.1831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4207.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="4217.5" y="1780.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M4090.29,1709.3131 C4076.56,1727.1531 4064.63,1746.5231 4056.5,1766.9531 C4038.42,1812.3631 4083.73,1857.9631 4117.83,1884.4031 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4098.56,1698.9931,4091.6846,1701.1678,4091.0476,1708.3507,4097.923,1706.176,4098.56,1698.9931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4059.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="4069.5" y="1780.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M4215.5,1402.2431 C4215.5,1434.8831 4215.5,1467.7331 4215.5,1496.9131 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4208.5,1401.9831,4215.5,1381.9831,4222.5,1401.9831,4208.5,1401.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17fdd0dd15c2164793acaf4e4273a1ea]
reverse link C_0000895261582183440230 to C_0002069520381434407937--><path d="M4570.42,1305.1631 C4500.91,1362.3131 4409.86,1437.1631 4337.38,1496.7531 " fill="none" id="C_0000895261582183440230&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4566.35,1299.4431,4586.25,1292.1531,4575.24,1310.2631,4566.35,1299.4431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M4073.6,1710.9631 C4036.74,1737.0331 3996.21,1763.2031 3956.5,1783.9531 C3921.37,1802.3131 3908.84,1798.1131 3872.5,1813.9531 C3866.69,1816.4831 3860.81,1819.1231 3854.89,1821.8431 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4069.93,1704.9831,4090.26,1699.0131,4078.09,1716.3631,4069.93,1704.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M3867.8,1278.4031 C3917.79,1387.4631 4003.08,1620.9231 3908.5,1783.9531 C3904.29,1791.2131 3882.71,1805.4631 3854.7,1821.7731 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3861.39,1281.2331,3859.22,1260.1531,3874.06,1275.2731,3861.39,1281.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M1795.58,1243.4531 C1628.11,1274.9531 1364.31,1339.6631 1164.5,1458.9531 C1119.83,1485.6231 1078.9,1529.7031 1053.2,1560.8631 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1808.47,1241.0531,1801.8412,1238.2144,1796.6712,1243.2415,1803.3001,1246.0802,1808.47,1241.0531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1245.5" y="1418.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1255.5" y="1425.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M1374.04,1539.0731 C1401.63,1512.6931 1436.21,1482.2231 1470.5,1458.9531 C1577.12,1386.5831 1708.63,1322.9331 1808.26,1279.2331 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1364.58,1548.2231,1371.6732,1546.9245,1373.2026,1539.8774,1366.1094,1541.1761,1364.58,1548.2231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1535.5" y="1418.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="1545.5" y="1425.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M1789.6,1275.0331 C1702.74,1308.3231 1597.38,1355.0031 1511.5,1411.9531 C1453.13,1450.6631 1396.34,1507.7931 1359.45,1548.3131 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1787.22,1268.4531,1808.4,1267.9231,1792.17,1281.5531,1787.22,1268.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M3784.83,1656.5331 C3827.44,1694.6431 3886.05,1744.6531 3941.5,1783.9531 C3996.37,1822.8331 4064.09,1861.0631 4107.53,1884.4431 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3774.89,1647.6031,3776.6813,1654.5882,3783.818,1655.6212,3782.0267,1648.6362,3774.89,1647.6031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3944.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="3954.5" y="1780.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M2128.97,1219.8631 C2498.9,1226.8731 3361.53,1259.5731 3604.5,1411.9531 C3654.68,1443.4231 3687.44,1504.9231 3705.42,1548.3531 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2128.66,1226.8531,2108.79,1219.4931,2128.92,1212.8631,2128.66,1226.8531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M1964.17,1325.4531 C1968.04,1398.7131 1972.97,1492.2331 1975.93,1548.2031 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1957.18,1325.7231,1963.11,1305.3831,1971.16,1324.9831,1957.18,1325.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M2051.69,1320.3231 C2119.03,1394.3031 2206.97,1490.9131 2259.12,1548.2031 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2046.37,1324.8831,2038.08,1305.3831,2056.72,1315.4531,2046.37,1324.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1a6800652bce38258685a15b776b4573]
reverse link C_0001412380775311155780 to C_0000229140160180072950--><path d="M461.02,1691.6831 C499.02,1708.7631 539.48,1724.9631 578.5,1736.9531 C898.89,1835.4131 1291.92,1879.5431 1499.37,1897.1831 " fill="none" id="C_0001412380775311155780&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="448.77,1686.1031,452.5731,1692.2298,459.6912,1691.0757,455.8881,1684.949,448.77,1686.1031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="752.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="762.5" y="1780.02">relationship_</text><!--MD5=[9f380ab2801284f963616461f482de06]
reverse link C_0000469458052685692314 to C_0001412380775311155780--><path d="M1788.28,1233.0531 C1524.29,1259.7131 1002.4,1325.3931 578.5,1458.9531 C535.63,1472.4631 490.93,1490.8931 449.68,1509.8731 " fill="none" id="C_0000469458052685692314&lt;-C_0001412380775311155780" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1787.79,1226.0731,1808.38,1231.0531,1789.18,1240.0031,1787.79,1226.0731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M1643.5,1654.3131 C1643.5,1698.6031 1643.5,1761.6931 1643.5,1813.8131 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1643.5,1641.2031,1639.5,1647.2031,1643.5,1653.2031,1647.5,1647.2031,1643.5,1641.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1646.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1656.5" y="1780.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M1872.94,1320.9031 C1809.04,1397.7831 1725.02,1498.8731 1678.43,1554.9231 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1867.67,1316.2831,1885.84,1305.3831,1878.44,1325.2331,1867.67,1316.2831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2988.43,1651.2731 C3039.06,1711.5931 3121.3,1809.5431 3168.04,1865.2231 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2979.97,1641.2031,2980.7634,1648.3704,2987.6846,1650.3947,2986.8912,1643.2274,2979.97,1641.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3099.5" y="1773.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="3109.5" y="1780.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M2128.71,1245.1131 C2302.19,1277.8031 2575.08,1343.2931 2786.5,1458.9531 C2832.19,1483.9531 2876.14,1524.0831 2906.03,1554.6331 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2127.23,1251.9631,2108.84,1241.4331,2129.78,1238.1931,2127.23,1251.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M2127.41,1284.1531 C2229.54,1327.4831 2360.28,1388.9331 2467.5,1458.9531 C2507.28,1484.9331 2547.66,1520.1131 2577.78,1548.4531 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2124.41,1290.4831,2108.69,1276.2731,2129.84,1277.5831,2124.41,1290.4831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M1788.22,1229.6331 C1568.87,1250.4731 1180.82,1307.2531 886.5,1458.9531 C840.39,1482.7231 797.27,1523.6231 768.45,1554.7431 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1787.71,1222.6531,1808.27,1227.7931,1788.99,1236.5931,1787.71,1222.6531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M2014.46,692.9331 C1991.26,725.9331 1967.38,766.7831 1955.5,807.9531 C1924.58,915.1431 1932.84,1044.8731 1943.78,1128.8331 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2022.28,682.0431,2015.5282,684.5756,2015.269,691.782,2022.0208,689.2496,2022.28,682.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1958.5" y="912.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="1968.5" y="919.52">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M2072.38,695.3031 C2069.75,776.7131 2061.27,910.1831 2034.5,1021.9531 C2025.91,1057.8331 2012.09,1095.9231 1998.59,1128.7631 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2072.77,682.2031,2068.5936,688.0817,2072.4137,694.1978,2076.5901,688.3192,2072.77,682.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2067.5" y="912.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="2077.5" y="919.52">exclusive_</text><!--MD5=[9a3a760a28542ff0b62640347abfd527]
reverse link C_0000148537001046167478 to C_0002143286684830686854--><path d="M2951.87,1028.1831 C3123.3,1120.5431 3346.35,1267.3431 3478.5,1458.9531 C3550.96,1564.0231 3492.25,1623.3931 3550.5,1736.9531 C3565.53,1766.2631 3586.36,1795.0131 3607.44,1820.3031 " fill="none" id="C_0000148537001046167478&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2940.4,1022.0431,2943.7978,1028.4035,2950.9758,1027.7134,2947.578,1021.353,2940.4,1022.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3454.5" y="1418.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="68" x="3464.5" y="1425.02">packages_</text><!--MD5=[d3df50313eac67d25f4285ef55f7c15c]
reverse link C_0000197068985320835874 to C_0000148537001046167478--><path d="M2331.01,400.5831 C2428.51,531.7831 2553.78,700.3631 2633.63,807.8131 " fill="none" id="C_0000197068985320835874&lt;-C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2325.27,404.5931,2318.96,384.3631,2336.51,396.2431,2325.27,404.5931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c62a15d45a0107b907e7ad5d924f7ad]
link C_0001331923285602672865 to C_0000911024010877522257--><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[e32f02f4b2f80da816701bb095b13f1e]
@startuml
title clang-uml package diagram model
class "clanguml::common::model::path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/path.h#L216{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/namespace.h#L29{value}]]]
}
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/enums.h#L42{message_t}]] {
kCall
kReturn
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L31{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<std::string>
+set_comment() : void
-comment_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/decorated_element.h#L55{comment_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : clanguml::common::model::relationship_t
+set_destination() : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : clanguml::common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/relationship.h#L64{label_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L33{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : clanguml::common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L77{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L78{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L80{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L81{complete_}]]]
{static} -m_nextId : std::atomic_uint64_t [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_element.h#L83{m_nextId}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element() : _Bool
+add_element() : _Bool
+get_element() : auto
+get_element_parent() : auto
+get_element() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/nested_trait.h#L171{elements_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L24{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+line() const : unsigned int
+set_line() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L43{file_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_location.h#L44{line_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L39{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L40{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L45{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : clanguml::common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : clanguml::common::model::source_file &
+operator=() : clanguml::common::model::source_file &
+operator==() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : clanguml::common::model::path<clanguml::common::model::fs_path_sep>
+add_file() : void
+fs_path() const : std::filesystem::path
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/source_file.h#L120{is_absolute_}]]]
}
class "clanguml::common::model::path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : clanguml::common::model::diagram &
+operator=() : clanguml::common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L78{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram.h#L80{complete_}]]]
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+path() const : const clanguml::common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+set_using_namespaces() : void
+using_namespace() const : const clanguml::common::model::namespace_ &
+context() const : inja::json
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : clanguml::common::model::package &
+operator=() : clanguml::common::model::package &
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/package.h#L54{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L36{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L56{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : clanguml::common::model::filter_t
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L86{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L102{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L115{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L123{elements_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L126{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L134{roots_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT>" as C_0001412380775311155780
class C_0001412380775311155780 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L139{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L272{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L274{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L275{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L276{forward_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L279{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L292{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L303{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L311{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L314{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/common/model/diagram_filter.h#L328{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include() : _Bool
}
class "diagram" as C_0000148537001046167478
class C_0000148537001046167478 [[https://github.com/bkryza/clang-uml/blob/b3382d8f041665d83d907a47f3dd9f0fd341e837/src/package_diagram/model/diagram.h#L28{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : diagram &
+operator=() = default : diagram &
+type() const : common::model::diagram_t
+packages() const : const common::reference_vector<clanguml::common::model::package> &
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+add_package() : void
+get_package() const : clanguml::common::optional_ref<clanguml::common::model::package>
+get_package() const : clanguml::common::optional_ref<common::model::package>
+to_alias() const : std::string
}
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000895261582183440230 <|- - C_0000785714713072053129
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000895261582183440230 <|- - C_0002069520381434407937
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0001412380775311155780 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001412380775311155780
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0000148537001046167478 o- - C_0002143286684830686854 : -packages_
C_0000197068985320835874 <|- - C_0000148537001046167478
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>