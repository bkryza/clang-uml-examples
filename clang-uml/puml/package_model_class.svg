<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2930px" preserveAspectRatio="none" style="width:6645px;height:2930px;" version="1.1" viewBox="0 0 6645 2930" width="6645px" zoomAndPan="magnify"><defs><filter height="300%" id="f1orapmlaq0eww" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="303" x="3177.5" y="16.708">clang-uml package diagram model</text><!--MD5=[aee218c97568fa70da3637cc3f06e0d6]
class C_0000911024010877522257--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24" target="_top" title="diagram_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24" xlink:show="new" xlink:title="diagram_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0000911024010877522257" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="34" y="169.9531"/><ellipse cx="49" cy="185.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M53.1094,191.9531 L45.3906,191.9531 L45.3906,179.5625 L53.1094,179.5625 L53.1094,181.7188 L47.8438,181.7188 L47.8438,184.3906 L52.6094,184.3906 L52.6094,186.5469 L47.8438,186.5469 L47.8438,189.7969 L53.1094,189.7969 L53.1094,191.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="233" x="63" y="190.1074">clanguml::common::model::diagram_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="298" y1="201.9531" y2="201.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="40" y="216.1636">kClass</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="40" y="228.9683">kSequence</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="40" y="241.7729">kPackage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="40" y="254.5776">kInclude</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="298" y1="261.1719" y2="261.1719"/></a><!--MD5=[d9b7c04ce0ebcadbf7fc6433b6cb7466]
class C_0002077031342744882956--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26" target="_top" title="access_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26" xlink:show="new" xlink:title="access_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="2061.5" y="2211.4531"/><ellipse cx="2076.5" cy="2227.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2080.6094,2233.4531 L2072.8906,2233.4531 L2072.8906,2221.0625 L2080.6094,2221.0625 L2080.6094,2223.2188 L2075.3438,2223.2188 L2075.3438,2225.8906 L2080.1094,2225.8906 L2080.1094,2228.0469 L2075.3438,2228.0469 L2075.3438,2231.2969 L2080.6094,2231.2969 L2080.6094,2233.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="226" x="2090.5" y="2231.6074">clanguml::common::model::access_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2062.5" x2="2318.5" y1="2243.4531" y2="2243.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="2067.5" y="2257.6636">kPublic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="2067.5" y="2270.4683">kProtected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="2067.5" y="2283.2729">kPrivate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="2067.5" y="2296.0776">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2062.5" x2="2318.5" y1="2302.6719" y2="2302.6719"/></a><!--MD5=[3f15cd2350ee4a1b49c5d4568952e615]
class C_0000229140160180072950--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28" target="_top" title="relationship_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28" xlink:show="new" xlink:title="relationship_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="201.6563" id="C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="5572.5" y="2159.9531"/><ellipse cx="5587.5" cy="2175.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5591.6094,2181.9531 L5583.8906,2181.9531 L5583.8906,2169.5625 L5591.6094,2169.5625 L5591.6094,2171.7188 L5586.3438,2171.7188 L5586.3438,2174.3906 L5591.1094,2174.3906 L5591.1094,2176.5469 L5586.3438,2176.5469 L5586.3438,2179.7969 L5591.6094,2179.7969 L5591.6094,2181.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="5601.5" y="2180.1074">clanguml::common::model::relationship_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5573.5" x2="5859.5" y1="2191.9531" y2="2191.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="5578.5" y="2206.1636">kNone</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="5578.5" y="2218.9683">kExtension</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5578.5" y="2231.7729">kComposition</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="5578.5" y="2244.5776">kAggregation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5578.5" y="2257.3823">kContainment</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5578.5" y="2270.187">kOwnership</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5578.5" y="2282.9917">kAssociation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5578.5" y="2295.7964">kInstantiation</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="5578.5" y="2308.6011">kFriendship</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="5578.5" y="2321.4058">kAlias</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="5578.5" y="2334.2104">kDependency</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="5578.5" y="2347.0151">kConstraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5573.5" x2="5859.5" y1="2353.6094" y2="2353.6094"/></a><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="334" y="54.4531"/><ellipse cx="349" cy="70.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M353.1094,76.4531 L345.3906,76.4531 L345.3906,64.0625 L353.1094,64.0625 L353.1094,66.2188 L347.8438,66.2188 L347.8438,68.8906 L352.6094,68.8906 L352.6094,71.0469 L347.8438,71.0469 L347.8438,74.2969 L353.1094,74.2969 L353.1094,76.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="363" y="74.6074">clanguml::common::model::message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="604" y1="86.4531" y2="86.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="340" y="100.6636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="340" y="113.4683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="340" y="126.2729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="340" y="139.0776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="340" y="151.8823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="340" y="164.687">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="177.4917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="340" y="190.2964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="340" y="203.1011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="340" y="215.9058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="340" y="228.7104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="340" y="241.5151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="340" y="254.3198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="340" y="267.1245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="340" y="279.9292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="340" y="292.7339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="305.5386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="340" y="318.3433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="340" y="331.1479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="340" y="343.9526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="340" y="356.7573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="340" y="369.562">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="604" y1="376.1563" y2="376.1563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="640" y="182.4531"/><ellipse cx="655" cy="198.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M659.1094,204.4531 L651.3906,204.4531 L651.3906,192.0625 L659.1094,192.0625 L659.1094,194.2188 L653.8438,194.2188 L653.8438,196.8906 L658.6094,196.8906 L658.6094,199.0469 L653.8438,199.0469 L653.8438,202.2969 L659.1094,202.2969 L659.1094,204.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="283" x="669" y="202.6074">clanguml::common::model::message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="641" x2="954" y1="214.4531" y2="214.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="646" y="228.6636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="646" y="241.4683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="641" x2="954" y1="248.0625" y2="248.0625"/></a><!--MD5=[b75d17d3ee67ca210c766132488de4b0]
class C_0001117102382624673118--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37" target="_top" title="decorated_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37" xlink:show="new" xlink:title="decorated_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="188.8516" id="C_0001117102382624673118" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="1032.5" y="704.4531"/><ellipse cx="1132.75" cy="720.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1135.7188,726.0938 Q1135.1406,726.3906 1134.5,726.5313 Q1133.8594,726.6875 1133.1563,726.6875 Q1130.6563,726.6875 1129.3281,725.0469 Q1128.0156,723.3906 1128.0156,720.2656 Q1128.0156,717.1406 1129.3281,715.4844 Q1130.6563,713.8281 1133.1563,713.8281 Q1133.8594,713.8281 1134.5,713.9844 Q1135.1563,714.1406 1135.7188,714.4375 L1135.7188,717.1563 Q1135.0938,716.5781 1134.5,716.3125 Q1133.9063,716.0313 1133.2813,716.0313 Q1131.9375,716.0313 1131.25,717.1094 Q1130.5625,718.1719 1130.5625,720.2656 Q1130.5625,722.3594 1131.25,723.4375 Q1131.9375,724.5 1133.2813,724.5 Q1133.9063,724.5 1134.5,724.2344 Q1135.0938,723.9531 1135.7188,723.375 L1135.7188,726.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="293" x="1153.25" y="724.6074">clanguml::common::model::decorated_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1033.5" x2="1533.5" y1="736.4531" y2="736.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1038.5" y="742.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1040.5" y="744.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" target="_top" title="decorators_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60" xlink:show="new" xlink:title="decorators_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="1052.5" y="750.6636">decorators_ : std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1038.5" y="755.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1040.5" y="757.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" target="_top" title="comment_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61" xlink:show="new" xlink:title="comment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1052.5" y="763.4683">comment_ : std::optional&lt;comment_t&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1033.5" x2="1533.5" y1="770.0625" y2="770.0625"/><ellipse cx="1043.5" cy="781.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1052.5" y="784.2729">skip() const : bool</text><ellipse cx="1043.5" cy="793.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1052.5" y="797.0776">skip_relationship() const : bool</text><ellipse cx="1043.5" cy="806.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1052.5" y="809.8823">get_relationship() const : std::pair&lt;relationship_t,std::string&gt;</text><ellipse cx="1043.5" cy="819.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1052.5" y="822.687">style_spec() const : std::string</text><ellipse cx="1043.5" cy="832.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="1052.5" y="835.4917">decorators() const : const std::vector&lt;std::shared_ptr&lt;decorators::decorator&gt;&gt; &amp;</text><ellipse cx="1043.5" cy="845.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1052.5" y="848.2964">add_decorators() : void</text><ellipse cx="1043.5" cy="857.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1052.5" y="861.1011">append() : void</text><ellipse cx="1043.5" cy="870.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1052.5" y="873.9058">comment() const : std::optional&lt;comment_t&gt;</text><ellipse cx="1043.5" cy="883.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1052.5" y="886.7104">set_comment() : void</text><!--MD5=[f862e5f61ea976202ee196a1ef68e0c4]
class C_0000895261582183440230--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25" target="_top" title="source_location" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25" xlink:show="new" xlink:title="source_location" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="227.2656" id="C_0000895261582183440230" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="1569.5" y="685.4531"/><ellipse cx="1584.5" cy="701.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1587.4688,707.0938 Q1586.8906,707.3906 1586.25,707.5313 Q1585.6094,707.6875 1584.9063,707.6875 Q1582.4063,707.6875 1581.0781,706.0469 Q1579.7656,704.3906 1579.7656,701.2656 Q1579.7656,698.1406 1581.0781,696.4844 Q1582.4063,694.8281 1584.9063,694.8281 Q1585.6094,694.8281 1586.25,694.9844 Q1586.9063,695.1406 1587.4688,695.4375 L1587.4688,698.1563 Q1586.8438,697.5781 1586.25,697.3125 Q1585.6563,697.0313 1585.0313,697.0313 Q1583.6875,697.0313 1583,698.1094 Q1582.3125,699.1719 1582.3125,701.2656 Q1582.3125,703.3594 1583,704.4375 Q1583.6875,705.5 1585.0313,705.5 Q1585.6563,705.5 1586.25,705.2344 Q1586.8438,704.9531 1587.4688,704.375 L1587.4688,707.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="270" x="1598.5" y="705.6074">clanguml::common::model::source_location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1570.5" x2="1870.5" y1="717.4531" y2="717.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="723.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="725.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" target="_top" title="file_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52" xlink:show="new" xlink:title="file_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1589.5" y="731.6636">file_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="736.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="738.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" target="_top" title="file_relative_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53" xlink:show="new" xlink:title="file_relative_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1589.5" y="744.4683">file_relative_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="749.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="751.0625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" target="_top" title="line_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54" xlink:show="new" xlink:title="line_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1589.5" y="757.2729">line_ : unsigned int</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1575.5" y="761.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1577.5" y="763.8672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" target="_top" title="hash_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55" xlink:show="new" xlink:title="hash_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1589.5" y="770.0776">hash_ : unsigned int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1570.5" x2="1870.5" y1="776.6719" y2="776.6719"/><ellipse cx="1580.5" cy="787.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1589.5" y="790.8823">source_location() = default : void</text><ellipse cx="1580.5" cy="800.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1589.5" y="803.687">source_location() : void</text><ellipse cx="1580.5" cy="813.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1589.5" y="816.4917">file() const : const std::string &amp;</text><ellipse cx="1580.5" cy="826.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1589.5" y="829.2964">set_file() : void</text><ellipse cx="1580.5" cy="838.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="1589.5" y="842.1011">file_relative() const : const std::string &amp;</text><ellipse cx="1580.5" cy="851.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1589.5" y="854.9058">set_file_relative() : void</text><ellipse cx="1580.5" cy="864.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1589.5" y="867.7104">line() const : unsigned int</text><ellipse cx="1580.5" cy="877.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1589.5" y="880.5151">set_line() : void</text><ellipse cx="1580.5" cy="890.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1589.5" y="893.3198">location_id() const : unsigned int</text><ellipse cx="1580.5" cy="902.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1589.5" y="906.1245">set_location_id() : void</text><!--MD5=[469defd29afa633cd07237fa3643de5f]
class C_0001932252426145029507--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28" target="_top" title="path" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28" xlink:show="new" xlink:title="path" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="496.1641" id="C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.5;" width="501" x="979" y="2422.9531"/><ellipse cx="1111.25" cy="2438.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1114.2188,2444.5938 Q1113.6406,2444.8906 1113,2445.0313 Q1112.3594,2445.1875 1111.6563,2445.1875 Q1109.1563,2445.1875 1107.8281,2443.5469 Q1106.5156,2441.8906 1106.5156,2438.7656 Q1106.5156,2435.6406 1107.8281,2433.9844 Q1109.1563,2432.3281 1111.6563,2432.3281 Q1112.3594,2432.3281 1113,2432.4844 Q1113.6563,2432.6406 1114.2188,2432.9375 L1114.2188,2435.6563 Q1113.5938,2435.0781 1113,2434.8125 Q1112.4063,2434.5313 1111.7813,2434.5313 Q1110.4375,2434.5313 1109.75,2435.6094 Q1109.0625,2436.6719 1109.0625,2438.7656 Q1109.0625,2440.8594 1109.75,2441.9375 Q1110.4375,2443 1111.7813,2443 Q1112.4063,2443 1113,2442.7344 Q1113.5938,2442.4531 1114.2188,2441.875 L1114.2188,2444.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1131.75" y="2443.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1457" y="2419.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1458" y="2432.0918">Sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="980" x2="1479" y1="2454.9531" y2="2454.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="985" y="2460.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="987" y="2462.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" target="_top" title="path_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224" xlink:show="new" xlink:title="path_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="999" y="2469.1636">path_ : clanguml::common::model::path::container_type</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="980" x2="1479" y1="2475.7578" y2="2475.7578"/><ellipse cx="990" cy="2486.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="999" y="2489.9683">path&lt;Sep&gt;() = default : void</text><ellipse cx="990" cy="2499.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="999" y="2502.7729">path&lt;Sep&gt;() : void</text><ellipse cx="990" cy="2512.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="999" y="2515.5776">path&lt;Sep&gt;() : void</text><ellipse cx="990" cy="2525.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="999" y="2528.3823">path&lt;Sep&gt;() : void</text><ellipse cx="990" cy="2537.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="999" y="2541.187">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="990" cy="2550.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="999" y="2553.9917">path&lt;Sep&gt;() = default : void</text><ellipse cx="990" cy="2563.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="999" y="2566.7964">operator=() = default : path&lt;Sep&gt; &amp;</text><ellipse cx="990" cy="2576.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="999" y="2579.6011">path&lt;Sep&gt;() : void</text><ellipse cx="990" cy="2589.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="999" y="2592.4058">path&lt;Sep&gt;() : void</text><ellipse cx="990" cy="2602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="999" y="2605.2104">to_string() const : std::string</text><ellipse cx="990" cy="2614.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="999" y="2618.0151">is_empty() const : bool</text><ellipse cx="990" cy="2627.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="999" y="2630.8198">size() const : size_t</text><ellipse cx="990" cy="2640.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="999" y="2643.6245">operator|() const : path&lt;Sep&gt;</text><ellipse cx="990" cy="2653.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="999" y="2656.4292">operator|=() : void</text><ellipse cx="990" cy="2666.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="999" y="2669.2339">operator|() const : path&lt;Sep&gt;</text><ellipse cx="990" cy="2678.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="999" y="2682.0386">operator|=() : void</text><ellipse cx="990" cy="2691.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="999" y="2694.8433">operator[]() : std::string &amp;</text><ellipse cx="990" cy="2704.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="999" y="2707.6479">operator[]() const : const std::string &amp;</text><ellipse cx="990" cy="2717.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="999" y="2720.4526">append() : void</text><ellipse cx="990" cy="2730.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="999" y="2733.2573">append() : void</text><ellipse cx="990" cy="2742.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="999" y="2746.062">pop_back() : void</text><ellipse cx="990" cy="2755.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="999" y="2758.8667">parent() const : std::optional&lt;path&lt;Sep&gt;&gt;</text><ellipse cx="990" cy="2768.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="999" y="2771.6714">starts_with() const : bool</text><ellipse cx="990" cy="2781.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="999" y="2784.4761">ends_with() const : bool</text><ellipse cx="990" cy="2794.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="999" y="2797.2808">common_path() const : path&lt;Sep&gt;</text><ellipse cx="990" cy="2806.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="999" y="2810.0854">relative_to() const : path&lt;Sep&gt;</text><ellipse cx="990" cy="2819.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="999" y="2822.8901">relative() const : std::string</text><ellipse cx="990" cy="2832.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="999" y="2835.6948">name() const : std::string</text><ellipse cx="990" cy="2845.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="999" y="2848.4995">begin() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="990" cy="2858.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="999" y="2861.3042">end() : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::iterator</text><ellipse cx="990" cy="2870.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="475" x="999" y="2874.1089">cbegin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="990" cy="2883.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="999" y="2886.9136">cend() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="990" cy="2896.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="999" y="2899.7183">begin() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><ellipse cx="990" cy="2909.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="999" y="2912.5229">end() const : __gnu_cxx::__normal_iterator&lt;Sep&gt;::container_type::const_iterator</text><!--MD5=[f900686223e5089b4f02919e46615b11]
class C_0001331923285602672865--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28" target="_top" title="ns_path_separator" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28" xlink:show="new" xlink:title="ns_path_separator" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="60.8047" id="C_0001331923285602672865" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="6" y="768.4531"/><ellipse cx="21" cy="784.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,790.0938 Q23.3906,790.3906 22.75,790.5313 Q22.1094,790.6875 21.4063,790.6875 Q18.9063,790.6875 17.5781,789.0469 Q16.2656,787.3906 16.2656,784.2656 Q16.2656,781.1406 17.5781,779.4844 Q18.9063,777.8281 21.4063,777.8281 Q22.1094,777.8281 22.75,777.9844 Q23.4063,778.1406 23.9688,778.4375 L23.9688,781.1563 Q23.3438,780.5781 22.75,780.3125 Q22.1563,780.0313 21.5313,780.0313 Q20.1875,780.0313 19.5,781.1094 Q18.8125,782.1719 18.8125,784.2656 Q18.8125,786.3594 19.5,787.4375 Q20.1875,788.5 21.5313,788.5 Q22.1563,788.5 22.75,788.2344 Q23.3438,787.9531 23.9688,787.375 L23.9688,790.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="289" x="35" y="788.6074">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="326" y1="800.4531" y2="800.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="806.4531"/><ellipse cx="17" cy="811.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="26" y="814.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="326" y1="821.2578" y2="821.2578"/><!--MD5=[aefae24c93df8a511f6663f0aaeb1068]
class C_0000362408953172993523--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29" target="_top" title="template_parameter_kind_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29" xlink:show="new" xlink:title="template_parameter_kind_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="112.0234" id="C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.5;" width="374" x="6025.5" y="1506.9531"/><ellipse cx="6040.5" cy="1522.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6044.6094,1528.9531 L6036.8906,1528.9531 L6036.8906,1516.5625 L6044.6094,1516.5625 L6044.6094,1518.7188 L6039.3438,1518.7188 L6039.3438,1521.3906 L6044.1094,1521.3906 L6044.1094,1523.5469 L6039.3438,1523.5469 L6039.3438,1526.7969 L6044.6094,1526.7969 L6044.6094,1528.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="342" x="6054.5" y="1527.1074">clanguml::common::model::template_parameter_kind_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6026.5" x2="6398.5" y1="1538.9531" y2="1538.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="6031.5" y="1553.1636">template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6031.5" y="1565.9683">template_template_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6031.5" y="1578.7729">non_type_template</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="6031.5" y="1591.5776">argument</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6031.5" y="1604.3823">concept_constraint</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6026.5" x2="6398.5" y1="1610.9766" y2="1610.9766"/></a><!--MD5=[f2a9ab6d37a0c7bc767faf34f36a32ca]
class C_0001618725806424907966--><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="48" id="C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.5;" width="523" x="542" y="2236.9531"/><ellipse cx="557" cy="2252.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M559.9688,2258.5938 Q559.3906,2258.8906 558.75,2259.0313 Q558.1094,2259.1875 557.4063,2259.1875 Q554.9063,2259.1875 553.5781,2257.5469 Q552.2656,2255.8906 552.2656,2252.7656 Q552.2656,2249.6406 553.5781,2247.9844 Q554.9063,2246.3281 557.4063,2246.3281 Q558.1094,2246.3281 558.75,2246.4844 Q559.4063,2246.6406 559.9688,2246.9375 L559.9688,2249.6563 Q559.3438,2249.0781 558.75,2248.8125 Q558.1563,2248.5313 557.5313,2248.5313 Q556.1875,2248.5313 555.5,2249.6094 Q554.8125,2250.6719 554.8125,2252.7656 Q554.8125,2254.8594 555.5,2255.9375 Q556.1875,2257 557.5313,2257 Q558.1563,2257 558.75,2256.7344 Q559.3438,2256.4531 559.9688,2255.875 L559.9688,2258.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="571" y="2257.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="289" x="779" y="2233.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="780" y="2246.0918">clanguml::common::model::ns_path_separator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="543" x2="1064" y1="2268.9531" y2="2268.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="543" x2="1064" y1="2276.9531" y2="2276.9531"/><!--MD5=[913c6f233a96408f73aaa4779df4a12a]
class C_0000178138562743079529--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45" target="_top" title="template_parameter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45" xlink:show="new" xlink:title="template_parameter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="624.2109" id="C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.5;" width="494" x="5965.5" y="486.9531"/><ellipse cx="6058.75" cy="502.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6061.7188,508.5938 Q6061.1406,508.8906 6060.5,509.0313 Q6059.8594,509.1875 6059.1563,509.1875 Q6056.6563,509.1875 6055.3281,507.5469 Q6054.0156,505.8906 6054.0156,502.7656 Q6054.0156,499.6406 6055.3281,497.9844 Q6056.6563,496.3281 6059.1563,496.3281 Q6059.8594,496.3281 6060.5,496.4844 Q6061.1563,496.6406 6061.7188,496.9375 L6061.7188,499.6563 Q6061.0938,499.0781 6060.5,498.8125 Q6059.9063,498.5313 6059.2813,498.5313 Q6057.9375,498.5313 6057.25,499.6094 Q6056.5625,500.6719 6056.5625,502.7656 Q6056.5625,504.8594 6057.25,505.9375 Q6057.9375,507 6059.2813,507 Q6059.9063,507 6060.5,506.7344 Q6061.0938,506.4531 6061.7188,505.875 L6061.7188,508.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="6079.25" y="507.1074">clanguml::common::model::template_parameter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5966.5" x2="6458.5" y1="518.9531" y2="518.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="524.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="526.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="5985.5" y="533.1636">type_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="537.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="539.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5985.5" y="545.9683">name_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="550.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="552.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" target="_top" title="default_value_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198" xlink:show="new" xlink:title="default_value_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="5985.5" y="558.7729">default_value_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="563.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="565.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" target="_top" title="is_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202" xlink:show="new" xlink:title="is_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5985.5" y="571.5776">is_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="576.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="578.1719"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" target="_top" title="is_template_template_parameter_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206" xlink:show="new" xlink:title="is_template_template_parameter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="5985.5" y="584.3823">is_template_template_parameter_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="588.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="590.9766"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" target="_top" title="is_variadic_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209" xlink:show="new" xlink:title="is_variadic_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="5985.5" y="597.187">is_variadic_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="601.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="603.7813"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" target="_top" title="is_function_template_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211" xlink:show="new" xlink:title="is_function_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5985.5" y="609.9917">is_function_template_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="614.5859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="616.5859"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" target="_top" title="concept_constraint_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215" xlink:show="new" xlink:title="concept_constraint_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5985.5" y="622.7964">concept_constraint_ : std::optional&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="627.3906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="629.3906"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="5985.5" y="635.6011">id_ : std::optional&lt;int64_t&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5971.5" y="640.1953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="642.1953"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" target="_top" title="is_unexposed_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223" xlink:show="new" xlink:title="is_unexposed_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="5985.5" y="648.4058">is_unexposed_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5966.5" x2="6458.5" y1="655" y2="655"/><ellipse cx="5976.5" cy="666" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="412" x="5985.5" y="669.2104">make_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="5976.5" cy="678.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="468" x="5985.5" y="682.0151">make_template_template_type() : clanguml::common::model::template_parameter</text><ellipse cx="5976.5" cy="691.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="439" x="5985.5" y="694.8198">make_non_type_template() : clanguml::common::model::template_parameter</text><ellipse cx="5976.5" cy="704.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="387" x="5985.5" y="707.6245">make_argument() : clanguml::common::model::template_parameter</text><ellipse cx="5976.5" cy="717.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="5985.5" y="720.4292">make_unexposed_argument() : clanguml::common::model::template_parameter</text><ellipse cx="5976.5" cy="730.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="5985.5" y="733.2339">set_type() : void</text><ellipse cx="5976.5" cy="742.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="5985.5" y="746.0386">type() const : std::optional&lt;std::string&gt;</text><ellipse cx="5976.5" cy="755.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5985.5" y="758.8433">set_id() : void</text><ellipse cx="5976.5" cy="768.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="5985.5" y="771.6479">id() const : const std::optional&lt;int64_t&gt; &amp;</text><ellipse cx="5976.5" cy="781.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5985.5" y="784.4526">set_name() : void</text><ellipse cx="5976.5" cy="794.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="5985.5" y="797.2573">name() const : std::optional&lt;std::string&gt;</text><ellipse cx="5976.5" cy="806.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5985.5" y="810.062">set_default_value() : void</text><ellipse cx="5976.5" cy="819.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="5985.5" y="822.8667">default_value() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="5976.5" cy="832.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="5985.5" y="835.6714">is_variadic() : void</text><ellipse cx="5976.5" cy="845.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5985.5" y="848.4761">is_variadic() const : bool</text><ellipse cx="5976.5" cy="858.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="5985.5" y="861.2808">calculate_specialization_match() const : int</text><ellipse cx="5976.5" cy="870.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="5985.5" y="874.0854">is_template_parameter() const : bool</text><ellipse cx="5976.5" cy="883.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="5985.5" y="886.8901">is_template_parameter() : void</text><ellipse cx="5976.5" cy="896.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="5985.5" y="899.6948">is_template_template_parameter() const : bool</text><ellipse cx="5976.5" cy="909.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5985.5" y="912.4995">is_template_template_parameter() : void</text><ellipse cx="5976.5" cy="922.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="5985.5" y="925.3042">to_string() const : std::string</text><ellipse cx="5976.5" cy="934.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5985.5" y="938.1089">add_template_param() : void</text><ellipse cx="5976.5" cy="947.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5985.5" y="950.9136">add_template_param() : void</text><ellipse cx="5976.5" cy="960.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="5985.5" y="963.7183">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="5976.5" cy="973.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5985.5" y="976.5229">clear_params() : void</text><ellipse cx="5976.5" cy="986.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="5985.5" y="989.3276">find_nested_relationships() const : bool</text><ellipse cx="5976.5" cy="998.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5985.5" y="1002.1323">set_concept_constraint() : void</text><ellipse cx="5976.5" cy="1011.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="5985.5" y="1014.937">concept_constraint() const : const std::optional&lt;std::string&gt; &amp;</text><ellipse cx="5976.5" cy="1024.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="5985.5" y="1027.7417">kind() const : clanguml::common::model::template_parameter_kind_t</text><ellipse cx="5976.5" cy="1037.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5985.5" y="1040.5464">set_kind() : void</text><ellipse cx="5976.5" cy="1050.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5985.5" y="1053.3511">is_unexposed() const : bool</text><ellipse cx="5976.5" cy="1062.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5985.5" y="1066.1558">set_unexposed() : void</text><ellipse cx="5976.5" cy="1075.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5985.5" y="1078.9604">set_function_template() : void</text><ellipse cx="5976.5" cy="1088.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="5985.5" y="1091.7651">is_function_template() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5973.5" y="1098.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5985.5" y="1104.5698">template_parameter() = default : void</text><!--MD5=[39023b0134efb4261990e1927fe4a3ac]
class C_0002077846075979426940--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24" target="_top" title="stylable_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24" xlink:show="new" xlink:title="stylable_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="86.4141" id="C_0002077846075979426940" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="1605.5" y="1519.9531"/><ellipse cx="1620.5" cy="1535.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1623.4688,1541.5938 Q1622.8906,1541.8906 1622.25,1542.0313 Q1621.6094,1542.1875 1620.9063,1542.1875 Q1618.4063,1542.1875 1617.0781,1540.5469 Q1615.7656,1538.8906 1615.7656,1535.7656 Q1615.7656,1532.6406 1617.0781,1530.9844 Q1618.4063,1529.3281 1620.9063,1529.3281 Q1621.6094,1529.3281 1622.25,1529.4844 Q1622.9063,1529.6406 1623.4688,1529.9375 L1623.4688,1532.6563 Q1622.8438,1532.0781 1622.25,1531.8125 Q1621.6563,1531.5313 1621.0313,1531.5313 Q1619.6875,1531.5313 1619,1532.6094 Q1618.3125,1533.6719 1618.3125,1535.7656 Q1618.3125,1537.8594 1619,1538.9375 Q1619.6875,1540 1621.0313,1540 Q1621.6563,1540 1622.25,1539.7344 Q1622.8438,1539.4531 1623.4688,1538.875 L1623.4688,1541.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="1634.5" y="1540.1074">clanguml::common::model::stylable_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1606.5" x2="1912.5" y1="1551.9531" y2="1551.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1611.5" y="1557.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1613.5" y="1559.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" target="_top" title="style_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30" xlink:show="new" xlink:title="style_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1625.5" y="1566.1636">style_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1606.5" x2="1912.5" y1="1572.7578" y2="1572.7578"/><ellipse cx="1616.5" cy="1583.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1625.5" y="1586.9683">set_style() : void</text><ellipse cx="1616.5" cy="1596.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1625.5" y="1599.7729">style() const : std::string</text><!--MD5=[e8deacb898fc3c022fd97c095b285f76]
class C_0002046336758797367926--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28" target="_top" title="relationship" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28" xlink:show="new" xlink:title="relationship" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="278.4844" id="C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.5;" width="341" x="1589" y="1804.9531"/><ellipse cx="1632.8" cy="1820.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1635.7688,1826.5938 Q1635.1906,1826.8906 1634.55,1827.0313 Q1633.9094,1827.1875 1633.2063,1827.1875 Q1630.7063,1827.1875 1629.3781,1825.5469 Q1628.0656,1823.8906 1628.0656,1820.7656 Q1628.0656,1817.6406 1629.3781,1815.9844 Q1630.7063,1814.3281 1633.2063,1814.3281 Q1633.9094,1814.3281 1634.55,1814.4844 Q1635.2063,1814.6406 1635.7688,1814.9375 L1635.7688,1817.6563 Q1635.1438,1817.0781 1634.55,1816.8125 Q1633.9563,1816.5313 1633.3313,1816.5313 Q1631.9875,1816.5313 1631.3,1817.6094 Q1630.6125,1818.6719 1630.6125,1820.7656 Q1630.6125,1822.8594 1631.3,1823.9375 Q1631.9875,1825 1633.3313,1825 Q1633.9563,1825 1634.55,1824.7344 Q1635.1438,1824.4531 1635.7688,1823.875 L1635.7688,1826.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="245" x="1653.2" y="1825.1074">clanguml::common::model::relationship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1590" x2="1929" y1="1836.9531" y2="1836.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1595" y="1842.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1597" y="1844.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" target="_top" title="destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61" xlink:show="new" xlink:title="destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1609" y="1851.1636">destination_ : int64_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1595" y="1855.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1597" y="1857.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" target="_top" title="multiplicity_source_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62" xlink:show="new" xlink:title="multiplicity_source_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="1609" y="1863.9683">multiplicity_source_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1595" y="1868.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1597" y="1870.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" target="_top" title="multiplicity_destination_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63" xlink:show="new" xlink:title="multiplicity_destination_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1609" y="1876.7729">multiplicity_destination_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1595" y="1881.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1597" y="1883.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" target="_top" title="label_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64" xlink:show="new" xlink:title="label_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1609" y="1889.5776">label_ : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1590" x2="1929" y1="1896.1719" y2="1896.1719"/><ellipse cx="1600" cy="1907.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1609" y="1910.3823">relationship() : void</text><ellipse cx="1600" cy="1919.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1609" y="1923.187">~relationship() = default : void</text><ellipse cx="1600" cy="1932.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1609" y="1935.9917">set_type() : void</text><ellipse cx="1600" cy="1945.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="1609" y="1948.7964">type() const : clanguml::common::model::relationship_t</text><ellipse cx="1600" cy="1958.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1609" y="1961.6011">set_destination() : void</text><ellipse cx="1600" cy="1971.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1609" y="1974.4058">destination() const : clanguml::common::id_t</text><ellipse cx="1600" cy="1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1609" y="1987.2104">set_multiplicity_source() : void</text><ellipse cx="1600" cy="1996.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1609" y="2000.0151">multiplicity_source() const : std::string</text><ellipse cx="1600" cy="2009.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1609" y="2012.8198">set_multiplicity_destination() : void</text><ellipse cx="1600" cy="2022.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1609" y="2025.6245">multiplicity_destination() const : std::string</text><ellipse cx="1600" cy="2035.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1609" y="2038.4292">set_label() : void</text><ellipse cx="1600" cy="2048.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1609" y="2051.2339">label() const : std::string</text><ellipse cx="1600" cy="2060.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1609" y="2064.0386">set_access() : void</text><ellipse cx="1600" cy="2073.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1609" y="2076.8433">access() const : clanguml::common::model::access_t</text><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34" target="_top" title="diagram_element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34" xlink:show="new" xlink:title="diagram_element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="329.7031" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="1095" y="1397.9531"/><ellipse cx="1139.75" cy="1413.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1142.7188,1419.5938 Q1142.1406,1419.8906 1141.5,1420.0313 Q1140.8594,1420.1875 1140.1563,1420.1875 Q1137.6563,1420.1875 1136.3281,1418.5469 Q1135.0156,1416.8906 1135.0156,1413.7656 Q1135.0156,1410.6406 1136.3281,1408.9844 Q1137.6563,1407.3281 1140.1563,1407.3281 Q1140.8594,1407.3281 1141.5,1407.4844 Q1142.1563,1407.6406 1142.7188,1407.9375 L1142.7188,1410.6563 Q1142.0938,1410.0781 1141.5,1409.8125 Q1140.9063,1409.5313 1140.2813,1409.5313 Q1138.9375,1409.5313 1138.25,1410.6094 Q1137.5625,1411.6719 1137.5625,1413.7656 Q1137.5625,1415.8594 1138.25,1416.9375 Q1138.9375,1418 1140.2813,1418 Q1140.9063,1418 1141.5,1417.7344 Q1142.0938,1417.4531 1142.7188,1416.875 L1142.7188,1419.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="1160.25" y="1418.1074">clanguml::common::model::diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1096" x2="1471" y1="1429.9531" y2="1429.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1101" y="1435.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1103" y="1437.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="1115" y="1444.1636">id_ : clanguml::common::model::diagram_element::id_t</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1101" y="1448.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1103" y="1450.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1115" y="1456.9683">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1101" y="1461.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1103" y="1463.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1115" y="1469.7729">nested_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1101" y="1474.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1103" y="1476.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1115" y="1482.5776">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1096" x2="1471" y1="1489.1719" y2="1489.1719"/><ellipse cx="1106" cy="1500.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1115" y="1503.3823">diagram_element() : void</text><ellipse cx="1106" cy="1512.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1115" y="1516.187">~diagram_element() = default : void</text><ellipse cx="1106" cy="1525.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="1115" y="1528.9917">id() const : clanguml::common::model::diagram_element::id_t</text><ellipse cx="1106" cy="1538.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1115" y="1541.7964">set_id() : void</text><ellipse cx="1106" cy="1551.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1115" y="1554.6011">alias() const : std::string</text><ellipse cx="1106" cy="1564.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1115" y="1567.4058">set_name() : void</text><ellipse cx="1106" cy="1577" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1115" y="1580.2104">name() const : std::string</text><ellipse cx="1106" cy="1589.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1115" y="1593.0151">type_name() const : std::string</text><ellipse cx="1106" cy="1602.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1115" y="1605.8198">full_name() const : std::string</text><ellipse cx="1106" cy="1615.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1115" y="1618.6245">relationships() : std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1106" cy="1628.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1115" y="1631.4292">relationships() const : const std::vector&lt;relationship&gt; &amp;</text><ellipse cx="1106" cy="1641.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1115" y="1644.2339">add_relationship() : void</text><ellipse cx="1106" cy="1653.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1115" y="1657.0386">append() : void</text><ellipse cx="1106" cy="1666.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1115" y="1669.8433">context() const : inja::json</text><ellipse cx="1106" cy="1679.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1115" y="1682.6479">is_nested() const : bool</text><ellipse cx="1106" cy="1692.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1115" y="1695.4526">nested() : void</text><ellipse cx="1106" cy="1705.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1115" y="1708.2573">complete() const : bool</text><ellipse cx="1106" cy="1717.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1115" y="1721.062">complete() : void</text><!--MD5=[61ee72164152887ec594509a8c6f7a5a]
class C_0002069520381434407937--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35" target="_top" title="element" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35" xlink:show="new" xlink:title="element" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="188.8516" id="C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="495.5" y="1849.4531"/><ellipse cx="612.25" cy="1865.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M615.2188,1871.0938 Q614.6406,1871.3906 614,1871.5313 Q613.3594,1871.6875 612.6563,1871.6875 Q610.1563,1871.6875 608.8281,1870.0469 Q607.5156,1868.3906 607.5156,1865.2656 Q607.5156,1862.1406 608.8281,1860.4844 Q610.1563,1858.8281 612.6563,1858.8281 Q613.3594,1858.8281 614,1858.9844 Q614.6563,1859.1406 615.2188,1859.4375 L615.2188,1862.1563 Q614.5938,1861.5781 614,1861.3125 Q613.4063,1861.0313 612.7813,1861.0313 Q611.4375,1861.0313 610.75,1862.1094 Q610.0625,1863.1719 610.0625,1865.2656 Q610.0625,1867.3594 610.75,1868.4375 Q611.4375,1869.5 612.7813,1869.5 Q613.4063,1869.5 614,1869.2344 Q614.5938,1868.9531 615.2188,1868.375 L615.2188,1871.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="632.75" y="1869.6074">clanguml::common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="496.5" x2="958.5" y1="1881.4531" y2="1881.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="496.5" x2="958.5" y1="1889.4531" y2="1889.4531"/><ellipse cx="506.5" cy="1900.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="515.5" y="1903.6636">element() : void</text><ellipse cx="506.5" cy="1913.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="515.5" y="1916.4683">~element() = default : void</text><ellipse cx="506.5" cy="1926.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="515.5" y="1929.2729">name_and_ns() const : std::string</text><ellipse cx="506.5" cy="1938.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="515.5" y="1942.0776">set_namespace() : void</text><ellipse cx="506.5" cy="1951.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="515.5" y="1954.8823">get_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="506.5" cy="1964.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="515.5" y="1967.687">get_relative_namespace() const : clanguml::common::model::namespace_</text><ellipse cx="506.5" cy="1977.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="515.5" y="1980.4917">path() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="506.5" cy="1990.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="515.5" y="1993.2964">full_name() const : std::string</text><ellipse cx="506.5" cy="2002.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="515.5" y="2006.1011">full_name_no_ns() const : std::string</text><ellipse cx="506.5" cy="2015.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="515.5" y="2018.9058">using_namespace() const : const clanguml::common::model::namespace_ &amp;</text><ellipse cx="506.5" cy="2028.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="515.5" y="2031.7104">context() const : inja::json</text></a><!--MD5=[2827fdd5558f2165e3e9bb4d89032bc9]
class C_0000464715462505216589--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28" target="_top" title="template_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28" xlink:show="new" xlink:title="template_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="176.0469" id="C_0000464715462505216589" style="stroke: #A80036; stroke-width: 1.5;" width="425" x="6000" y="131.4531"/><ellipse cx="6078.75" cy="147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6081.7188,153.0938 Q6081.1406,153.3906 6080.5,153.5313 Q6079.8594,153.6875 6079.1563,153.6875 Q6076.6563,153.6875 6075.3281,152.0469 Q6074.0156,150.3906 6074.0156,147.2656 Q6074.0156,144.1406 6075.3281,142.4844 Q6076.6563,140.8281 6079.1563,140.8281 Q6079.8594,140.8281 6080.5,140.9844 Q6081.1563,141.1406 6081.7188,141.4375 L6081.7188,144.1563 Q6081.0938,143.5781 6080.5,143.3125 Q6079.9063,143.0313 6079.2813,143.0313 Q6077.9375,143.0313 6077.25,144.1094 Q6076.5625,145.1719 6076.5625,147.2656 Q6076.5625,149.3594 6077.25,150.4375 Q6077.9375,151.5 6079.2813,151.5 Q6079.9063,151.5 6080.5,151.2344 Q6081.0938,150.9531 6081.7188,150.375 L6081.7188,153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="259" x="6099.25" y="151.6074">clanguml::common::model::template_trait</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6001" x2="6424" y1="163.4531" y2="163.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6006" y="169.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6008" y="171.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" target="_top" title="base_template_full_name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50" xlink:show="new" xlink:title="base_template_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="6020" y="177.6636">base_template_full_name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6006" y="182.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6008" y="184.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" target="_top" title="is_implicit_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51" xlink:show="new" xlink:title="is_implicit_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6020" y="190.4683">is_implicit_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6001" x2="6424" y1="197.0625" y2="197.0625"/><ellipse cx="6011" cy="208.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="6020" y="211.2729">render_template_params() const : std::ostream &amp;</text><ellipse cx="6011" cy="220.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6020" y="224.0776">set_base_template() : void</text><ellipse cx="6011" cy="233.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6020" y="236.8823">base_template() const : std::string</text><ellipse cx="6011" cy="246.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="6020" y="249.687">add_template() : void</text><ellipse cx="6011" cy="259.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="6020" y="262.4917">template_params() const : const std::vector&lt;template_parameter&gt; &amp;</text><ellipse cx="6011" cy="272.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6020" y="275.2964">calculate_template_specialization_match() const : int</text><ellipse cx="6011" cy="284.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6020" y="288.1011">is_implicit() const : bool</text><ellipse cx="6011" cy="297.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6020" y="300.9058">set_implicit() : void</text><!--MD5=[9fe22c22cfca4da03ec5635d5d7f9c7a]
class C_0000891208748219309562--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28" target="_top" title="nested_trait" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28" xlink:show="new" xlink:title="nested_trait" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="316.8984" id="C_0000891208748219309562" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="362.5" y="640.4531"/><ellipse cx="377.5" cy="656.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.4688,662.0938 Q379.8906,662.3906 379.25,662.5313 Q378.6094,662.6875 377.9063,662.6875 Q375.4063,662.6875 374.0781,661.0469 Q372.7656,659.3906 372.7656,656.2656 Q372.7656,653.1406 374.0781,651.4844 Q375.4063,649.8281 377.9063,649.8281 Q378.6094,649.8281 379.25,649.9844 Q379.9063,650.1406 380.4688,650.4375 L380.4688,653.1563 Q379.8438,652.5781 379.25,652.3125 Q378.6563,652.0313 378.0313,652.0313 Q376.6875,652.0313 376,653.1094 Q375.3125,654.1719 375.3125,656.2656 Q375.3125,658.3594 376,659.4375 Q376.6875,660.5 378.0313,660.5 Q378.6563,660.5 379.25,660.2344 Q379.8438,659.9531 380.4688,659.375 L380.4688,662.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="247" x="391.5" y="660.6074">clanguml::common::model::nested_trait</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="41" x="646.5" y="637.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="39" x="647.5" y="649.5918">T,Path</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="363.5" x2="683.5" y1="672.4531" y2="672.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="368.5" y="678.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="370.5" y="680.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="382.5" y="686.6636">elements_ : std::vector&lt;std::unique_ptr&lt;T&gt;&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="363.5" x2="683.5" y1="693.2578" y2="693.2578"/><ellipse cx="373.5" cy="704.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="382.5" y="707.4683">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="373.5" cy="717.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="382.5" y="720.2729">nested_trait&lt;T, Path&gt;() : void</text><ellipse cx="373.5" cy="729.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="382.5" y="733.0776">nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="373.5" cy="742.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="382.5" y="745.8823">operator=() : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="373.5" cy="755.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="382.5" y="758.687">operator=() = default : nested_trait&lt;T,Path&gt; &amp;</text><ellipse cx="373.5" cy="768.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="382.5" y="771.4917">~nested_trait&lt;T, Path&gt;() = default : void</text><ellipse cx="373.5" cy="781.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="382.5" y="784.2964">has_element() const : bool</text><ellipse cx="373.5" cy="793.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="382.5" y="797.1011">is_empty() const : bool</text><ellipse cx="373.5" cy="806.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="382.5" y="809.9058">begin() : auto</text><ellipse cx="373.5" cy="819.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="382.5" y="822.7104">end() : auto</text><ellipse cx="373.5" cy="832.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="382.5" y="835.5151">cbegin() const : auto</text><ellipse cx="373.5" cy="845.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="382.5" y="848.3198">cend() const : auto</text><ellipse cx="373.5" cy="857.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="382.5" y="861.1245">begin() const : auto</text><ellipse cx="373.5" cy="870.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="382.5" y="873.9292">end() const : auto</text><ellipse cx="373.5" cy="883.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="382.5" y="886.7339">print_tree() : void</text><ellipse cx="373.5" cy="896.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="382.5" y="899.5386">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="373.5" cy="909.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="382.5" y="912.3433">add_element&lt;V=T&gt;() : _Bool</text><ellipse cx="373.5" cy="921.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="382.5" y="925.1479">get_element&lt;V=T&gt;() : auto</text><ellipse cx="373.5" cy="934.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="382.5" y="937.9526">get_element_parent&lt;V=T&gt;() : auto</text><ellipse cx="373.5" cy="947.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="382.5" y="950.7573">get_element&lt;V=T&gt;() : auto</text><!--MD5=[9603c3f26c20de400c81ad6196c9ec35]
class C_0001490157860030300113--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37" target="_top" title="source_file_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37" xlink:show="new" xlink:title="source_file_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="86.4141" id="C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="1100" y="2217.9531"/><ellipse cx="1115" cy="2233.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1119.1094,2239.9531 L1111.3906,2239.9531 L1111.3906,2227.5625 L1119.1094,2227.5625 L1119.1094,2229.7188 L1113.8438,2229.7188 L1113.8438,2232.3906 L1118.6094,2232.3906 L1118.6094,2234.5469 L1113.8438,2234.5469 L1113.8438,2237.7969 L1119.1094,2237.7969 L1119.1094,2239.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="1129" y="2238.1074">clanguml::common::model::source_file_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1101" x2="1380" y1="2249.9531" y2="2249.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="1106" y="2264.1636">kDirectory</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1106" y="2276.9683">kHeader</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1106" y="2289.7729">kImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1101" x2="1380" y1="2296.3672" y2="2296.3672"/></a><!--MD5=[c57c98c07ee8aeeaef60b2f6b37c95ad]
class C_0000640258162892495349--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41" target="_top" title="fs_path_sep" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41" xlink:show="new" xlink:title="fs_path_sep" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="60.8047" id="C_0000640258162892495349" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="719.5" y="768.4531"/><ellipse cx="734.5" cy="784.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M737.4688,790.0938 Q736.8906,790.3906 736.25,790.5313 Q735.6094,790.6875 734.9063,790.6875 Q732.4063,790.6875 731.0781,789.0469 Q729.7656,787.3906 729.7656,784.2656 Q729.7656,781.1406 731.0781,779.4844 Q732.4063,777.8281 734.9063,777.8281 Q735.6094,777.8281 736.25,777.9844 Q736.9063,778.1406 737.4688,778.4375 L737.4688,781.1563 Q736.8438,780.5781 736.25,780.3125 Q735.6563,780.0313 735.0313,780.0313 Q733.6875,780.0313 733,781.1094 Q732.3125,782.1719 732.3125,784.2656 Q732.3125,786.3594 733,787.4375 Q733.6875,788.5 735.0313,788.5 Q735.6563,788.5 736.25,788.2344 Q736.8438,787.9531 737.4688,787.375 L737.4688,790.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="246" x="748.5" y="788.6074">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="720.5" x2="996.5" y1="800.4531" y2="800.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="725.5" y="806.4531"/><ellipse cx="730.5" cy="811.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" target="_top" title="value" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45" xlink:show="new" xlink:title="value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="739.5" y="814.6636">value : const std::string_view</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="720.5" x2="996.5" y1="821.2578" y2="821.2578"/><!--MD5=[37cb8ec901d4b34d82b5789a5c0e9ea4]
class C_0001035161069848456027--><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="48" id="C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.5;" width="480" x="1416.5" y="2236.9531"/><ellipse cx="1431.5" cy="2252.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1434.4688,2258.5938 Q1433.8906,2258.8906 1433.25,2259.0313 Q1432.6094,2259.1875 1431.9063,2259.1875 Q1429.4063,2259.1875 1428.0781,2257.5469 Q1426.7656,2255.8906 1426.7656,2252.7656 Q1426.7656,2249.6406 1428.0781,2247.9844 Q1429.4063,2246.3281 1431.9063,2246.3281 Q1432.6094,2246.3281 1433.25,2246.4844 Q1433.9063,2246.6406 1434.4688,2246.9375 L1434.4688,2249.6563 Q1433.8438,2249.0781 1433.25,2248.8125 Q1432.6563,2248.5313 1432.0313,2248.5313 Q1430.6875,2248.5313 1430,2249.6094 Q1429.3125,2250.6719 1429.3125,2252.7656 Q1429.3125,2254.8594 1430,2255.9375 Q1430.6875,2257 1432.0313,2257 Q1432.6563,2257 1433.25,2256.7344 Q1433.8438,2256.4531 1434.4688,2255.875 L1434.4688,2258.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="1445.5" y="2257.1074">clanguml::common::model::path</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="246" x="1653.5" y="2233.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="1654.5" y="2246.0918">clanguml::common::model::fs_path_sep</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1417.5" x2="1895.5" y1="2268.9531" y2="2268.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1417.5" x2="1895.5" y1="2276.9531" y2="2276.9531"/><!--MD5=[525da812764c4fe64f23950e964f77cd]
class C_0000785714713072053129--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51" target="_top" title="source_file" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51" xlink:show="new" xlink:title="source_file" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="278.4844" id="C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.5;" width="559" x="995" y="1804.9531"/><ellipse cx="1151.25" cy="1820.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1154.2188,1826.5938 Q1153.6406,1826.8906 1153,1827.0313 Q1152.3594,1827.1875 1151.6563,1827.1875 Q1149.1563,1827.1875 1147.8281,1825.5469 Q1146.5156,1823.8906 1146.5156,1820.7656 Q1146.5156,1817.6406 1147.8281,1815.9844 Q1149.1563,1814.3281 1151.6563,1814.3281 Q1152.3594,1814.3281 1153,1814.4844 Q1153.6563,1814.6406 1154.2188,1814.9375 L1154.2188,1817.6563 Q1153.5938,1817.0781 1153,1816.8125 Q1152.4063,1816.5313 1151.7813,1816.5313 Q1150.4375,1816.5313 1149.75,1817.6094 Q1149.0625,1818.6719 1149.0625,1820.7656 Q1149.0625,1822.8594 1149.75,1823.9375 Q1150.4375,1825 1151.7813,1825 Q1152.4063,1825 1153,1824.7344 Q1153.5938,1824.4531 1154.2188,1823.875 L1154.2188,1826.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="238" x="1171.75" y="1825.1074">clanguml::common::model::source_file</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="996" x2="1553" y1="1836.9531" y2="1836.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1001" y="1842.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1003" y="1844.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" target="_top" title="is_absolute_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131" xlink:show="new" xlink:title="is_absolute_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1015" y="1851.1636">is_absolute_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="996" x2="1553" y1="1857.7578" y2="1857.7578"/><ellipse cx="1006" cy="1868.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1015" y="1871.9683">source_file() = default : void</text><ellipse cx="1006" cy="1881.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1015" y="1884.7729">source_file() : void</text><ellipse cx="1006" cy="1894.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1015" y="1897.5776">set_path() : void</text><ellipse cx="1006" cy="1907.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1015" y="1910.3823">set_absolute() : void</text><ellipse cx="1006" cy="1919.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1015" y="1923.187">is_absolute() const : bool</text><ellipse cx="1006" cy="1932.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1015" y="1935.9917">set_type() : void</text><ellipse cx="1006" cy="1945.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1015" y="1948.7964">type() const : clanguml::common::model::source_file_t</text><ellipse cx="1006" cy="1958.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="1015" y="1961.6011">source_file() : void</text><ellipse cx="1006" cy="1971.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1015" y="1974.4058">source_file() = default : void</text><ellipse cx="1006" cy="1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1015" y="1987.2104">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="1006" cy="1996.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1015" y="2000.0151">operator=() : clanguml::common::model::source_file &amp;</text><ellipse cx="1006" cy="2009.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1015" y="2012.8198">operator==() const : bool</text><ellipse cx="1006" cy="2022.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="1015" y="2025.6245">path() const : const clanguml::common::model::filesystem_path &amp;</text><ellipse cx="1006" cy="2035.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1015" y="2038.4292">full_name() const : std::string</text><ellipse cx="1006" cy="2048.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="1015" y="2051.2339">full_path() const : clanguml::common::model::path&lt;clanguml::common::model::fs_path_sep&gt;</text><ellipse cx="1006" cy="2060.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1015" y="2064.0386">fs_path() const : std::filesystem::path</text><ellipse cx="1006" cy="2073.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1015" y="2076.8433">context() const : inja::json</text><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="380.9219" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="659" x="3906" y="28.9531"/><ellipse cx="4120.25" cy="44.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4120.3594,40.2969 L4119.2031,45.375 L4121.5313,45.375 L4120.3594,40.2969 Z M4118.875,38.0625 L4121.8594,38.0625 L4125.2188,50.4531 L4122.7656,50.4531 L4122,47.3906 L4118.7188,47.3906 L4117.9688,50.4531 L4115.5313,50.4531 L4118.875,38.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="222" x="4140.75" y="49.1074">clanguml::common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3907" x2="4564" y1="60.9531" y2="60.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3912" y="66.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3914" y="68.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3926" y="75.1636">name_ : std::string</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3912" y="79.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3914" y="81.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="3926" y="87.9683">complete_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3907" x2="4564" y1="94.5625" y2="94.5625"/><ellipse cx="3917" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3926" y="108.7729">diagram() : void</text><ellipse cx="3917" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3926" y="121.5776">~diagram() : void</text><ellipse cx="3917" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="3926" y="134.3823">type() const = 0 : clanguml::common::model::diagram_t</text><ellipse cx="3917" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="3926" y="147.187">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="3917" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="3926" y="159.9917">get() const = 0 : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="3917" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="633" x="3926" y="172.7964">get_with_namespace() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="3917" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3926" y="185.6011">diagram() : void</text><ellipse cx="3917" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3926" y="198.4058">diagram() : void</text><ellipse cx="3917" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3926" y="211.2104">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="3917" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3926" y="224.0151">operator=() : clanguml::common::model::diagram &amp;</text><ellipse cx="3917" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3926" y="236.8198">set_name() : void</text><ellipse cx="3917" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3926" y="249.6245">name() const : std::string</text><ellipse cx="3917" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="3926" y="262.4292">set_filter() : void</text><ellipse cx="3917" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3926" y="275.2339">set_complete() : void</text><ellipse cx="3917" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3926" y="288.0386">complete() const : bool</text><ellipse cx="3917" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="300.8433">should_include() const : bool</text><ellipse cx="3917" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="313.6479">should_include() const : bool</text><ellipse cx="3917" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="326.4526">should_include() const : bool</text><ellipse cx="3917" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="339.2573">should_include() const : bool</text><ellipse cx="3917" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="352.062">should_include() const : bool</text><ellipse cx="3917" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="364.8667">should_include() const : bool</text><ellipse cx="3917" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3926" y="377.6714">has_element() const : bool</text><ellipse cx="3917" cy="387.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3926" y="390.4761">should_include() const : bool</text><ellipse cx="3917" cy="400.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="3926" y="403.2808">context() const = 0 : inja::json</text><!--MD5=[41fe75f5c358e82f7c3b024ae1be5ac2]
class C_0002143286684830686854--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34" target="_top" title="package" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34" xlink:show="new" xlink:title="package" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="188.8516" id="C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="2483.5" y="2166.4531"/><ellipse cx="2528.75" cy="2182.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2531.7188,2188.0938 Q2531.1406,2188.3906 2530.5,2188.5313 Q2529.8594,2188.6875 2529.1563,2188.6875 Q2526.6563,2188.6875 2525.3281,2187.0469 Q2524.0156,2185.3906 2524.0156,2182.2656 Q2524.0156,2179.1406 2525.3281,2177.4844 Q2526.6563,2175.8281 2529.1563,2175.8281 Q2529.8594,2175.8281 2530.5,2175.9844 Q2531.1563,2176.1406 2531.7188,2176.4375 L2531.7188,2179.1563 Q2531.0938,2178.5781 2530.5,2178.3125 Q2529.9063,2178.0313 2529.2813,2178.0313 Q2527.9375,2178.0313 2527.25,2179.1094 Q2526.5625,2180.1719 2526.5625,2182.2656 Q2526.5625,2184.3594 2527.25,2185.4375 Q2527.9375,2186.5 2529.2813,2186.5 Q2529.9063,2186.5 2530.5,2186.2344 Q2531.0938,2185.9531 2531.7188,2185.375 L2531.7188,2188.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="2549.25" y="2186.6074">clanguml::common::model::package</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2484.5" x2="2806.5" y1="2198.4531" y2="2198.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2489.5" y="2204.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2491.5" y="2206.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" target="_top" title="is_deprecated_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56" xlink:show="new" xlink:title="is_deprecated_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2503.5" y="2212.6636">is_deprecated_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2484.5" x2="2806.5" y1="2219.2578" y2="2219.2578"/><ellipse cx="2494.5" cy="2230.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2503.5" y="2233.4683">package() : void</text><ellipse cx="2494.5" cy="2243.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2503.5" y="2246.2729">package() : void</text><ellipse cx="2494.5" cy="2255.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2503.5" y="2259.0776">package() = default : void</text><ellipse cx="2494.5" cy="2268.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2503.5" y="2271.8823">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="2494.5" cy="2281.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2503.5" y="2284.687">operator=() : clanguml::common::model::package &amp;</text><ellipse cx="2494.5" cy="2294.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2503.5" y="2297.4917">type_name() const : std::string</text><ellipse cx="2494.5" cy="2307.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2503.5" y="2310.2964">full_name() const : std::string</text><ellipse cx="2494.5" cy="2319.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="2503.5" y="2323.1011">is_deprecated() const : bool</text><ellipse cx="2494.5" cy="2332.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2503.5" y="2335.9058">set_deprecated() : void</text><ellipse cx="2494.5" cy="2345.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2503.5" y="2348.7104">add_package() : void</text><!--MD5=[4d8c0cfac9275c46dfd5cd6881d6bf32]
class C_0001931666600378768700--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37" target="_top" title="filter_t" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37" xlink:show="new" xlink:title="filter_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="73.6094" id="C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="3647.5" y="1906.9531"/><ellipse cx="3662.5" cy="1922.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3666.6094,1928.9531 L3658.8906,1928.9531 L3658.8906,1916.5625 L3666.6094,1916.5625 L3666.6094,1918.7188 L3661.3438,1918.7188 L3661.3438,1921.3906 L3666.1094,1921.3906 L3666.1094,1923.5469 L3661.3438,1923.5469 L3661.3438,1926.7969 L3666.6094,1926.7969 L3666.6094,1928.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="210" x="3676.5" y="1927.1074">clanguml::common::model::filter_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3648.5" x2="3888.5" y1="1938.9531" y2="1938.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="3653.5" y="1953.1636">kInclusive</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="3653.5" y="1965.9683">kExclusive</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3648.5" x2="3888.5" y1="1972.5625" y2="1972.5625"/></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57" target="_top" title="filter_visitor" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57" xlink:show="new" xlink:title="filter_visitor" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="188.8516" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="300" x="3852.5" y="1468.4531"/><ellipse cx="3879.2" cy="1484.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3882.1688,1490.0938 Q3881.5906,1490.3906 3880.95,1490.5313 Q3880.3094,1490.6875 3879.6063,1490.6875 Q3877.1063,1490.6875 3875.7781,1489.0469 Q3874.4656,1487.3906 3874.4656,1484.2656 Q3874.4656,1481.1406 3875.7781,1479.4844 Q3877.1063,1477.8281 3879.6063,1477.8281 Q3880.3094,1477.8281 3880.95,1477.9844 Q3881.6063,1478.1406 3882.1688,1478.4375 L3882.1688,1481.1563 Q3881.5438,1480.5781 3880.95,1480.3125 Q3880.3563,1480.0313 3879.7313,1480.0313 Q3878.3875,1480.0313 3877.7,1481.1094 Q3877.0125,1482.1719 3877.0125,1484.2656 Q3877.0125,1486.3594 3877.7,1487.4375 Q3878.3875,1488.5 3879.7313,1488.5 Q3880.3563,1488.5 3880.95,1488.2344 Q3881.5438,1487.9531 3882.1688,1487.375 L3882.1688,1490.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="3895.8" y="1488.6074">clanguml::common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3853.5" x2="4151.5" y1="1500.4531" y2="1500.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3853.5" x2="4151.5" y1="1508.4531" y2="1508.4531"/><ellipse cx="3863.5" cy="1519.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3872.5" y="1522.6636">filter_visitor() : void</text><ellipse cx="3863.5" cy="1532.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3872.5" y="1535.4683">~filter_visitor() = default : void</text><ellipse cx="3863.5" cy="1545.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3872.5" y="1548.2729">match() const : tvl::value_t</text><ellipse cx="3863.5" cy="1557.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3872.5" y="1561.0776">match() const : tvl::value_t</text><ellipse cx="3863.5" cy="1570.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3872.5" y="1573.8823">match() const : tvl::value_t</text><ellipse cx="3863.5" cy="1583.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3872.5" y="1586.687">match() const : tvl::value_t</text><ellipse cx="3863.5" cy="1596.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3872.5" y="1599.4917">match() const : tvl::value_t</text><ellipse cx="3863.5" cy="1609.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3872.5" y="1612.2964">match() const : tvl::value_t</text><ellipse cx="3863.5" cy="1621.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3872.5" y="1625.1011">is_inclusive() const : bool</text><ellipse cx="3863.5" cy="1634.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3872.5" y="1637.9058">is_exclusive() const : bool</text><ellipse cx="3863.5" cy="1647.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="3872.5" y="1650.7104">type() const : clanguml::common::model::filter_t</text></a><!--MD5=[4991383f4171a9218cca625e40b0fe42]
class C_0000605829206649563575--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90" target="_top" title="anyof_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90" xlink:show="new" xlink:title="anyof_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="3925" y="1894.4531"/><ellipse cx="3940" cy="1910.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3942.9688,1916.0938 Q3942.3906,1916.3906 3941.75,1916.5313 Q3941.1094,1916.6875 3940.4063,1916.6875 Q3937.9063,1916.6875 3936.5781,1915.0469 Q3935.2656,1913.3906 3935.2656,1910.2656 Q3935.2656,1907.1406 3936.5781,1905.4844 Q3937.9063,1903.8281 3940.4063,1903.8281 Q3941.1094,1903.8281 3941.75,1903.9844 Q3942.4063,1904.1406 3942.9688,1904.4375 L3942.9688,1907.1563 Q3942.3438,1906.5781 3941.75,1906.3125 Q3941.1563,1906.0313 3940.5313,1906.0313 Q3939.1875,1906.0313 3938.5,1907.1094 Q3937.8125,1908.1719 3937.8125,1910.2656 Q3937.8125,1912.3594 3938.5,1913.4375 Q3939.1875,1914.5 3940.5313,1914.5 Q3941.1563,1914.5 3941.75,1914.2344 Q3942.3438,1913.9531 3942.9688,1913.375 L3942.9688,1916.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="239" x="3954" y="1914.6074">clanguml::common::model::anyof_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3926" x2="4195" y1="1926.4531" y2="1926.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3926" x2="4195" y1="1934.4531" y2="1934.4531"/><ellipse cx="3936" cy="1945.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="3945" y="1948.6636">anyof_filter() : void</text><ellipse cx="3936" cy="1958.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3945" y="1961.4683">~anyof_filter() = default : void</text><ellipse cx="3936" cy="1971.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3945" y="1974.2729">match() const : tvl::value_t</text><ellipse cx="3936" cy="1983.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3945" y="1987.0776">match() const : tvl::value_t</text></a><!--MD5=[9cfce3424a6356171c77b8391b426661]
class C_0001816240256470820189--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106" target="_top" title="namespace_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106" xlink:show="new" xlink:title="namespace_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1965.5" y="1894.4531"/><ellipse cx="1980.5" cy="1910.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1983.4688,1916.0938 Q1982.8906,1916.3906 1982.25,1916.5313 Q1981.6094,1916.6875 1980.9063,1916.6875 Q1978.4063,1916.6875 1977.0781,1915.0469 Q1975.7656,1913.3906 1975.7656,1910.2656 Q1975.7656,1907.1406 1977.0781,1905.4844 Q1978.4063,1903.8281 1980.9063,1903.8281 Q1981.6094,1903.8281 1982.25,1903.9844 Q1982.9063,1904.1406 1983.4688,1904.4375 L1983.4688,1907.1563 Q1982.8438,1906.5781 1982.25,1906.3125 Q1981.6563,1906.0313 1981.0313,1906.0313 Q1979.6875,1906.0313 1979,1907.1094 Q1978.3125,1908.1719 1978.3125,1910.2656 Q1978.3125,1912.3594 1979,1913.4375 Q1979.6875,1914.5 1981.0313,1914.5 Q1981.6563,1914.5 1982.25,1914.2344 Q1982.8438,1913.9531 1983.4688,1913.375 L1983.4688,1916.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="278" x="1994.5" y="1914.6074">clanguml::common::model::namespace_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1966.5" x2="2274.5" y1="1926.4531" y2="1926.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1966.5" x2="2274.5" y1="1934.4531" y2="1934.4531"/><ellipse cx="1976.5" cy="1945.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1985.5" y="1948.6636">namespace_filter() : void</text><ellipse cx="1976.5" cy="1958.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1985.5" y="1961.4683">~namespace_filter() = default : void</text><ellipse cx="1976.5" cy="1971.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1985.5" y="1974.2729">match() const : tvl::value_t</text><ellipse cx="1976.5" cy="1983.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1985.5" y="1987.0776">match() const : tvl::value_t</text></a><!--MD5=[50a823d282f0d0a0713932d3b5318c3a]
class C_0000690341236618660423--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119" target="_top" title="element_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119" xlink:show="new" xlink:title="element_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="4231.5" y="1894.4531"/><ellipse cx="4246.5" cy="1910.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4249.4688,1916.0938 Q4248.8906,1916.3906 4248.25,1916.5313 Q4247.6094,1916.6875 4246.9063,1916.6875 Q4244.4063,1916.6875 4243.0781,1915.0469 Q4241.7656,1913.3906 4241.7656,1910.2656 Q4241.7656,1907.1406 4243.0781,1905.4844 Q4244.4063,1903.8281 4246.9063,1903.8281 Q4247.6094,1903.8281 4248.25,1903.9844 Q4248.9063,1904.1406 4249.4688,1904.4375 L4249.4688,1907.1563 Q4248.8438,1906.5781 4248.25,1906.3125 Q4247.6563,1906.0313 4247.0313,1906.0313 Q4245.6875,1906.0313 4245,1907.1094 Q4244.3125,1908.1719 4244.3125,1910.2656 Q4244.3125,1912.3594 4245,1913.4375 Q4245.6875,1914.5 4247.0313,1914.5 Q4247.6563,1914.5 4248.25,1914.2344 Q4248.8438,1913.9531 4249.4688,1913.375 L4249.4688,1916.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4260.5" y="1914.6074">clanguml::common::model::element_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4232.5" x2="4518.5" y1="1926.4531" y2="1926.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4237.5" y="1932.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4239.5" y="1934.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" target="_top" title="elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127" xlink:show="new" xlink:title="elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="4251.5" y="1940.6636">elements_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4232.5" x2="4518.5" y1="1947.2578" y2="1947.2578"/><ellipse cx="4242.5" cy="1958.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="4251.5" y="1961.4683">element_filter() : void</text><ellipse cx="4242.5" cy="1971.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4251.5" y="1974.2729">~element_filter() = default : void</text><ellipse cx="4242.5" cy="1983.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4251.5" y="1987.0776">match() const : tvl::value_t</text><!--MD5=[93944d09819381b622aaa2bef32f8341]
class C_0001389919526184251760--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130" target="_top" title="subclass_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130" xlink:show="new" xlink:title="subclass_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="4554.5" y="1894.4531"/><ellipse cx="4569.5" cy="1910.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4572.4688,1916.0938 Q4571.8906,1916.3906 4571.25,1916.5313 Q4570.6094,1916.6875 4569.9063,1916.6875 Q4567.4063,1916.6875 4566.0781,1915.0469 Q4564.7656,1913.3906 4564.7656,1910.2656 Q4564.7656,1907.1406 4566.0781,1905.4844 Q4567.4063,1903.8281 4569.9063,1903.8281 Q4570.6094,1903.8281 4571.25,1903.9844 Q4571.9063,1904.1406 4572.4688,1904.4375 L4572.4688,1907.1563 Q4571.8438,1906.5781 4571.25,1906.3125 Q4570.6563,1906.0313 4570.0313,1906.0313 Q4568.6875,1906.0313 4568,1907.1094 Q4567.3125,1908.1719 4567.3125,1910.2656 Q4567.3125,1912.3594 4568,1913.4375 Q4568.6875,1914.5 4570.0313,1914.5 Q4570.6563,1914.5 4571.25,1914.2344 Q4571.8438,1913.9531 4572.4688,1913.375 L4572.4688,1916.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="4583.5" y="1914.6074">clanguml::common::model::subclass_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4555.5" x2="4845.5" y1="1926.4531" y2="1926.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4560.5" y="1932.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4562.5" y="1934.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4574.5" y="1940.6636">roots_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4555.5" x2="4845.5" y1="1947.2578" y2="1947.2578"/><ellipse cx="4565.5" cy="1958.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4574.5" y="1961.4683">subclass_filter() : void</text><ellipse cx="4565.5" cy="1971.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4574.5" y="1974.2729">~subclass_filter() = default : void</text><ellipse cx="4565.5" cy="1983.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4574.5" y="1987.0776">match() const : tvl::value_t</text><!--MD5=[59291306c405f144f196302d19b0e086]
class C_0001773753487119877542--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141" target="_top" title="parents_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141" xlink:show="new" xlink:title="parents_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="2698.5" y="1894.4531"/><ellipse cx="2713.5" cy="1910.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2716.4688,1916.0938 Q2715.8906,1916.3906 2715.25,1916.5313 Q2714.6094,1916.6875 2713.9063,1916.6875 Q2711.4063,1916.6875 2710.0781,1915.0469 Q2708.7656,1913.3906 2708.7656,1910.2656 Q2708.7656,1907.1406 2710.0781,1905.4844 Q2711.4063,1903.8281 2713.9063,1903.8281 Q2714.6094,1903.8281 2715.25,1903.9844 Q2715.9063,1904.1406 2716.4688,1904.4375 L2716.4688,1907.1563 Q2715.8438,1906.5781 2715.25,1906.3125 Q2714.6563,1906.0313 2714.0313,1906.0313 Q2712.6875,1906.0313 2712,1907.1094 Q2711.3125,1908.1719 2711.3125,1910.2656 Q2711.3125,1912.3594 2712,1913.4375 Q2712.6875,1914.5 2714.0313,1914.5 Q2714.6563,1914.5 2715.25,1914.2344 Q2715.8438,1913.9531 2716.4688,1913.375 L2716.4688,1916.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="254" x="2727.5" y="1914.6074">clanguml::common::model::parents_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2699.5" x2="2983.5" y1="1926.4531" y2="1926.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="children_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2704.5" y="1932.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2706.5" y="1934.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" target="_top" title="children_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149" xlink:show="new" xlink:title="children_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="2718.5" y="1940.6636">children_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2699.5" x2="2983.5" y1="1947.2578" y2="1947.2578"/><ellipse cx="2709.5" cy="1958.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2718.5" y="1961.4683">parents_filter() : void</text><ellipse cx="2709.5" cy="1971.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2718.5" y="1974.2729">~parents_filter() = default : void</text><ellipse cx="2709.5" cy="1983.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2718.5" y="1987.0776">match() const : tvl::value_t</text><!--MD5=[962ddfd27a2e8cf4fdcc85bbba643303]
class C_0001979873989333693911--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154" target="_top" title="edge_traversal_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154" xlink:show="new" xlink:title="edge_traversal_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="176.0469" id="C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.5;" width="723" x="4882" y="1855.9531"/><ellipse cx="4897" cy="1871.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4899.9688,1877.5938 Q4899.3906,1877.8906 4898.75,1878.0313 Q4898.1094,1878.1875 4897.4063,1878.1875 Q4894.9063,1878.1875 4893.5781,1876.5469 Q4892.2656,1874.8906 4892.2656,1871.7656 Q4892.2656,1868.6406 4893.5781,1866.9844 Q4894.9063,1865.3281 4897.4063,1865.3281 Q4898.1094,1865.3281 4898.75,1865.4844 Q4899.4063,1865.6406 4899.9688,1865.9375 L4899.9688,1868.6563 Q4899.3438,1868.0781 4898.75,1867.8125 Q4898.1563,1867.5313 4897.5313,1867.5313 Q4896.1875,1867.5313 4895.5,1868.6094 Q4894.8125,1869.6719 4894.8125,1871.7656 Q4894.8125,1873.8594 4895.5,1874.9375 Q4896.1875,1876 4897.5313,1876 Q4898.1563,1876 4898.75,1875.7344 Q4899.3438,1875.4531 4899.9688,1874.875 L4899.9688,1877.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="298" x="4911" y="1876.1074">clanguml::common::model::edge_traversal_filter</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="391" x="5217" y="1852.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5218" y="1865.0918">DiagramT,ElementT,MatchOverrideT=common::model::element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4883" x2="5604" y1="1887.9531" y2="1887.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" xlink:show="new" xlink:title="roots_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4888" y="1893.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="1895.9531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" target="_top" title="roots_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287" xlink:show="new" xlink:title="roots_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="4902" y="1902.1636">roots_ : std::vector&lt;std::string&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4888" y="1906.7578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="1908.7578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" target="_top" title="initialized_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289" xlink:show="new" xlink:title="initialized_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="4902" y="1914.9683">initialized_ : bool</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4888" y="1919.5625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="1921.5625"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" target="_top" title="matching_elements_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290" xlink:show="new" xlink:title="matching_elements_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="4902" y="1927.7729">matching_elements_ : clanguml::common::reference_set&lt;ElementT&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" xlink:show="new" xlink:title="forward_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4888" y="1932.3672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="1934.3672"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" target="_top" title="forward_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291" xlink:show="new" xlink:title="forward_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4902" y="1940.5776">forward_ : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4883" x2="5604" y1="1947.1719" y2="1947.1719"/><ellipse cx="4893" cy="1958.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="4902" y="1961.3823">edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() : void</text><ellipse cx="4893" cy="1970.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="4902" y="1974.187">~edge_traversal_filter&lt;DiagramT, ElementT, MatchOverrideT&gt;() = default : void</text><ellipse cx="4893" cy="1983.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4902" y="1986.9917">match() const : tvl::value_t</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="1993.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4902" y="1999.7964">add_parents() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="2006.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4902" y="2012.6011">init() const : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4890" y="2019.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4902" y="2025.4058">add_adjacent&lt;C,D&gt;() : _Bool</text><!--MD5=[a4c9b97a7182ae70b67e10724bda717e]
class C_0001195713008101262477--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294" target="_top" title="relationship_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294" xlink:show="new" xlink:title="relationship_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="86.4141" id="C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="5712" y="1900.9531"/><ellipse cx="5727" cy="1916.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5729.9688,1922.5938 Q5729.3906,1922.8906 5728.75,1923.0313 Q5728.1094,1923.1875 5727.4063,1923.1875 Q5724.9063,1923.1875 5723.5781,1921.5469 Q5722.2656,1919.8906 5722.2656,1916.7656 Q5722.2656,1913.6406 5723.5781,1911.9844 Q5724.9063,1910.3281 5727.4063,1910.3281 Q5728.1094,1910.3281 5728.75,1910.4844 Q5729.4063,1910.6406 5729.9688,1910.9375 L5729.9688,1913.6563 Q5729.3438,1913.0781 5728.75,1912.8125 Q5728.1563,1912.5313 5727.5313,1912.5313 Q5726.1875,1912.5313 5725.5,1913.6094 Q5724.8125,1914.6719 5724.8125,1916.7656 Q5724.8125,1918.8594 5725.5,1919.9375 Q5726.1875,1921 5727.5313,1921 Q5728.1563,1921 5728.75,1920.7344 Q5729.3438,1920.4531 5729.9688,1919.875 L5729.9688,1922.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="279" x="5741" y="1921.1074">clanguml::common::model::relationship_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5713" x2="6022" y1="1932.9531" y2="1932.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5713" x2="6022" y1="1940.9531" y2="1940.9531"/><ellipse cx="5723" cy="1951.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5732" y="1955.1636">relationship_filter() : void</text><ellipse cx="5723" cy="1964.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="5732" y="1967.9683">~relationship_filter() = default : void</text><ellipse cx="5723" cy="1977.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5732" y="1980.7729">match() const : tvl::value_t</text></a><!--MD5=[6c09fa5ea90b219bff3c70efac9bebed]
class C_0001098184343448999590--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307" target="_top" title="access_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307" xlink:show="new" xlink:title="access_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="86.4141" id="C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.5;" width="281" x="2311" y="1900.9531"/><ellipse cx="2326" cy="1916.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2328.9688,1922.5938 Q2328.3906,1922.8906 2327.75,1923.0313 Q2327.1094,1923.1875 2326.4063,1923.1875 Q2323.9063,1923.1875 2322.5781,1921.5469 Q2321.2656,1919.8906 2321.2656,1916.7656 Q2321.2656,1913.6406 2322.5781,1911.9844 Q2323.9063,1910.3281 2326.4063,1910.3281 Q2327.1094,1910.3281 2327.75,1910.4844 Q2328.4063,1910.6406 2328.9688,1910.9375 L2328.9688,1913.6563 Q2328.3438,1913.0781 2327.75,1912.8125 Q2327.1563,1912.5313 2326.5313,1912.5313 Q2325.1875,1912.5313 2324.5,1913.6094 Q2323.8125,1914.6719 2323.8125,1916.7656 Q2323.8125,1918.8594 2324.5,1919.9375 Q2325.1875,1921 2326.5313,1921 Q2327.1563,1921 2327.75,1920.7344 Q2328.3438,1920.4531 2328.9688,1919.875 L2328.9688,1922.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="249" x="2340" y="1921.1074">clanguml::common::model::access_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2312" x2="2591" y1="1932.9531" y2="1932.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2312" x2="2591" y1="1940.9531" y2="1940.9531"/><ellipse cx="2322" cy="1951.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2331" y="1955.1636">access_filter() : void</text><ellipse cx="2322" cy="1964.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2331" y="1967.9683">~access_filter() = default : void</text><ellipse cx="2322" cy="1977.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2331" y="1980.7729">match() const : tvl::value_t</text></a><!--MD5=[99ac8d2cae89e3b0a3d5a4db7fc9126c]
class C_0002078668697238559556--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318" target="_top" title="context_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318" xlink:show="new" xlink:title="context_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="99.2188" id="C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="3019.5" y="1894.4531"/><ellipse cx="3034.5" cy="1910.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3037.4688,1916.0938 Q3036.8906,1916.3906 3036.25,1916.5313 Q3035.6094,1916.6875 3034.9063,1916.6875 Q3032.4063,1916.6875 3031.0781,1915.0469 Q3029.7656,1913.3906 3029.7656,1910.2656 Q3029.7656,1907.1406 3031.0781,1905.4844 Q3032.4063,1903.8281 3034.9063,1903.8281 Q3035.6094,1903.8281 3036.25,1903.9844 Q3036.9063,1904.1406 3037.4688,1904.4375 L3037.4688,1907.1563 Q3036.8438,1906.5781 3036.25,1906.3125 Q3035.6563,1906.0313 3035.0313,1906.0313 Q3033.6875,1906.0313 3033,1907.1094 Q3032.3125,1908.1719 3032.3125,1910.2656 Q3032.3125,1912.3594 3033,1913.4375 Q3033.6875,1914.5 3035.0313,1914.5 Q3035.6563,1914.5 3036.25,1914.2344 Q3036.8438,1913.9531 3037.4688,1913.375 L3037.4688,1916.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="252" x="3048.5" y="1914.6074">clanguml::common::model::context_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3020.5" x2="3302.5" y1="1926.4531" y2="1926.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" xlink:show="new" xlink:title="context_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3025.5" y="1932.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3027.5" y="1934.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" target="_top" title="context_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326" xlink:show="new" xlink:title="context_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3039.5" y="1940.6636">context_ : std::vector&lt;std::string&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3020.5" x2="3302.5" y1="1947.2578" y2="1947.2578"/><ellipse cx="3030.5" cy="1958.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3039.5" y="1961.4683">context_filter() : void</text><ellipse cx="3030.5" cy="1971.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="3039.5" y="1974.2729">~context_filter() = default : void</text><ellipse cx="3030.5" cy="1983.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3039.5" y="1987.0776">match() const : tvl::value_t</text><!--MD5=[ac53cd39b7f7f2f4a6ef560a1a5fdc85]
class C_0000831536458766184760--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329" target="_top" title="paths_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329" xlink:show="new" xlink:title="paths_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="124.8281" id="C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="3339" y="1881.4531"/><ellipse cx="3354" cy="1897.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3356.9688,1903.0938 Q3356.3906,1903.3906 3355.75,1903.5313 Q3355.1094,1903.6875 3354.4063,1903.6875 Q3351.9063,1903.6875 3350.5781,1902.0469 Q3349.2656,1900.3906 3349.2656,1897.2656 Q3349.2656,1894.1406 3350.5781,1892.4844 Q3351.9063,1890.8281 3354.4063,1890.8281 Q3355.1094,1890.8281 3355.75,1890.9844 Q3356.4063,1891.1406 3356.9688,1891.4375 L3356.9688,1894.1563 Q3356.3438,1893.5781 3355.75,1893.3125 Q3355.1563,1893.0313 3354.5313,1893.0313 Q3353.1875,1893.0313 3352.5,1894.1094 Q3351.8125,1895.1719 3351.8125,1897.2656 Q3351.8125,1899.3594 3352.5,1900.4375 Q3353.1875,1901.5 3354.5313,1901.5 Q3355.1563,1901.5 3355.75,1901.2344 Q3356.3438,1900.9531 3356.9688,1900.375 L3356.9688,1903.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="241" x="3368" y="1901.6074">clanguml::common::model::paths_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3340" x2="3611" y1="1913.4531" y2="1913.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" xlink:show="new" xlink:title="paths_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3345" y="1919.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3347" y="1921.4531"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" target="_top" title="paths_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342" xlink:show="new" xlink:title="paths_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="3359" y="1927.6636">paths_ : std::vector&lt;std::filesystem::path&gt;</text></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" xlink:show="new" xlink:title="root_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3345" y="1932.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3347" y="1934.2578"/></a><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" target="_top" title="root_" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343" xlink:show="new" xlink:title="root_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3359" y="1940.4683">root_ : std::filesystem::path</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3340" x2="3611" y1="1947.0625" y2="1947.0625"/><ellipse cx="3350" cy="1958.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3359" y="1961.2729">paths_filter() : void</text><ellipse cx="3350" cy="1970.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="3359" y="1974.0776">~paths_filter() = default : void</text><ellipse cx="3350" cy="1983.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3359" y="1986.8823">match() const : tvl::value_t</text><ellipse cx="3350" cy="1996.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3359" y="1999.687">match() const : tvl::value_t</text><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L346" target="_top" title="diagram_filter" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L346" xlink:show="new" xlink:title="diagram_filter" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="124.8281" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="3977.5" y="736.4531"/><ellipse cx="3992.5" cy="752.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3995.4688,758.0938 Q3994.8906,758.3906 3994.25,758.5313 Q3993.6094,758.6875 3992.9063,758.6875 Q3990.4063,758.6875 3989.0781,757.0469 Q3987.7656,755.3906 3987.7656,752.2656 Q3987.7656,749.1406 3989.0781,747.4844 Q3990.4063,745.8281 3992.9063,745.8281 Q3993.6094,745.8281 3994.25,745.9844 Q3994.9063,746.1406 3995.4688,746.4375 L3995.4688,749.1563 Q3994.8438,748.5781 3994.25,748.3125 Q3993.6563,748.0313 3993.0313,748.0313 Q3991.6875,748.0313 3991,749.1094 Q3990.3125,750.1719 3990.3125,752.2656 Q3990.3125,754.3594 3991,755.4375 Q3991.6875,756.5 3993.0313,756.5 Q3993.6563,756.5 3994.25,756.2344 Q3994.8438,755.9531 3995.4688,755.375 L3995.4688,758.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="256" x="4006.5" y="756.6074">clanguml::common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3978.5" x2="4264.5" y1="768.4531" y2="768.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3978.5" x2="4264.5" y1="776.4531" y2="776.4531"/><ellipse cx="3988.5" cy="787.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3997.5" y="790.6636">diagram_filter() : void</text><ellipse cx="3988.5" cy="800.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3997.5" y="803.4683">add_inclusive_filter() : void</text><ellipse cx="3988.5" cy="813.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3997.5" y="816.2729">add_exclusive_filter() : void</text><ellipse cx="3988.5" cy="825.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="3997.5" y="829.0776">should_include() const : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3985.5" y="835.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3997.5" y="841.8823">init_filters() : void</text><ellipse cx="3988.5" cy="851.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3997.5" y="854.687">should_include&lt;T&gt;() : _Bool</text></a><!--MD5=[bc315e7d0960eeae67e337de181c1bce]
class C_0000148537001046167478--><a href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/package_diagram/model/diagram.h#L28" target="_top" title="diagram" xlink:actuate="onRequest" xlink:href="https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/package_diagram/model/diagram.h#L28" xlink:show="new" xlink:title="diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1orapmlaq0eww)" height="227.2656" id="C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.5;" width="561" x="5064" y="1140.9531"/><ellipse cx="5314.75" cy="1156.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5317.7188,1162.5938 Q5317.1406,1162.8906 5316.5,1163.0313 Q5315.8594,1163.1875 5315.1563,1163.1875 Q5312.6563,1163.1875 5311.3281,1161.5469 Q5310.0156,1159.8906 5310.0156,1156.7656 Q5310.0156,1153.6406 5311.3281,1151.9844 Q5312.6563,1150.3281 5315.1563,1150.3281 Q5315.8594,1150.3281 5316.5,1150.4844 Q5317.1563,1150.6406 5317.7188,1150.9375 L5317.7188,1153.6563 Q5317.0938,1153.0781 5316.5,1152.8125 Q5315.9063,1152.5313 5315.2813,1152.5313 Q5313.9375,1152.5313 5313.25,1153.6094 Q5312.5625,1154.6719 5312.5625,1156.7656 Q5312.5625,1158.8594 5313.25,1159.9375 Q5313.9375,1161 5315.2813,1161 Q5315.9063,1161 5316.5,1160.7344 Q5317.0938,1160.4531 5317.7188,1159.875 L5317.7188,1162.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="5335.25" y="1161.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5065" x2="5624" y1="1172.9531" y2="1172.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5065" x2="5624" y1="1180.9531" y2="1180.9531"/><ellipse cx="5075" cy="1191.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5084" y="1195.1636">diagram() = default : void</text><ellipse cx="5075" cy="1204.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5084" y="1207.9683">diagram() : void</text><ellipse cx="5075" cy="1217.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5084" y="1220.7729">diagram() = default : void</text><ellipse cx="5075" cy="1230.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5084" y="1233.5776">operator=() : diagram &amp;</text><ellipse cx="5075" cy="1243.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5084" y="1246.3823">operator=() = default : diagram &amp;</text><ellipse cx="5075" cy="1255.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="5084" y="1259.187">type() const : common::model::diagram_t</text><ellipse cx="5075" cy="1268.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="5084" y="1271.9917">packages() const : const common::reference_vector&lt;clanguml::common::model::package&gt; &amp;</text><ellipse cx="5075" cy="1281.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="5084" y="1284.7964">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="5075" cy="1294.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="5084" y="1297.6011">get() const : clanguml::common::optional_ref&lt;clanguml::common::model::diagram_element&gt;</text><ellipse cx="5075" cy="1307.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="5084" y="1310.4058">add_package() : void</text><ellipse cx="5075" cy="1320" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="5084" y="1323.2104">get_package() const : clanguml::common::optional_ref&lt;clanguml::common::model::package&gt;</text><ellipse cx="5075" cy="1332.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="5084" y="1336.0151">get_package() const : clanguml::common::optional_ref&lt;common::model::package&gt;</text><ellipse cx="5075" cy="1345.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5084" y="1348.8198">to_alias() const : std::string</text><ellipse cx="5075" cy="1358.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5084" y="1361.6245">context() const : inja::json</text></a><!--MD5=[d9b81f80c67010998703c5c1c5378085]
link C_0001618725806424907966 to C_0001932252426145029507--><path d="M827.62,2285.0531 C856.38,2312.6031 907.72,2361.7731 964.29,2415.9531 " fill="none" id="C_0001618725806424907966-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="969.17,2410.9331,978.78,2429.8231,959.49,2421.0431,969.17,2410.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a19c95e58bc2202aaf67c22a29e4f801]
reverse link C_0000178138562743079529 to C_0000362408953172993523--><path d="M6212.5,1124.1131 C6212.5,1269.4831 6212.5,1426.1431 6212.5,1506.8731 " fill="none" id="C_0000178138562743079529&lt;-C_0000362408953172993523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6212.5,1110.9831,6208.5,1116.9831,6212.5,1122.9831,6216.5,1116.9831,6212.5,1110.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6215.5" y="1252.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="6225.5" y="1259.02">kind_</text><!--MD5=[8505caf16705ed6f5893bf86e39d9f72]
reverse link C_0000178138562743079529 to C_0000178138562743079529--><path d="M6470.74,754.2931 C6485.61,765.0431 6494.5,779.9331 6494.5,798.9531 C6494.5,822.3631 6481.04,839.5131 6459.52,850.3931 " fill="none" id="C_0000178138562743079529&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6459.52,747.5131,6462.5811,754.0422,6469.7854,753.7278,6466.7242,747.1987,6459.52,747.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6502.5" y="796.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="6512.5" y="803.52">template_params_</text><!--MD5=[3e19d1ef8cf1c094c8acc83e2588563e]
reverse link C_0002046336758797367926 to C_0000229140160180072950--><path d="M1942.07,2080.6331 C1943.88,2081.4231 1945.69,2082.2031 1947.5,2082.9531 C2010.01,2108.9431 2181.11,2123.4531 2248.5,2129.9531 C2416.16,2146.1331 4937.91,2233.2631 5572.44,2255.0231 " fill="none" id="C_0002046336758797367926&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1930.17,2075.1131,1933.9307,2081.266,1941.0566,2080.161,1937.2959,2074.0082,1930.17,2075.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2251.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="2261.5" y="2126.02">type_</text><!--MD5=[2664aedf2bd69fc9f300aeefc7c81c1c]
reverse link C_0002046336758797367926 to C_0002077031342744882956--><path d="M1940.68,2082.2431 C1962.45,2098.4231 1984.42,2114.6231 2005.5,2129.9531 C2043.12,2157.3131 2085.56,2187.1931 2120.28,2211.4031 " fill="none" id="C_0002046336758797367926&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1930.02,2074.3031,1932.4469,2081.0936,1939.6484,2081.4651,1937.2215,2074.6746,1930.02,2074.3031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2008.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2018.5" y="2126.02">access_</text><!--MD5=[eec8df5c621e16efacc55aa1cc3fe68f]
reverse link C_0001117102382624673118 to C_0002046336758797367926--><path d="M1323.88,912.4631 C1366.51,1032.3031 1434.95,1227.7831 1489.5,1397.9531 C1536.2,1543.6431 1516.62,1592.3631 1587.5,1727.9531 C1601.23,1754.2131 1618.4,1780.3731 1636.53,1804.9231 " fill="none" id="C_0001117102382624673118&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1317.25,914.7231,1317.13,893.5331,1330.44,910.0231,1317.25,914.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d476f3ed11f81b3c86253c8a660c2f2]
reverse link C_0002077846075979426940 to C_0002046336758797367926--><path d="M1759.5,1625.9831 C1759.5,1674.3531 1759.5,1743.3831 1759.5,1804.6831 " fill="none" id="C_0002077846075979426940&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1752.5,1625.9631,1759.5,1605.9631,1766.5,1625.9631,1752.5,1625.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[72997d05be5ec4d7c79f5239d6652a46]
reverse link C_0001073500714379115414 to C_0002046336758797367926--><path d="M1374.76,1738.4231 C1387.02,1752.2131 1400.59,1764.7331 1415.5,1774.9531 C1473.74,1814.8731 1506.79,1776.7031 1571.5,1804.9531 C1577.34,1807.5031 1583.18,1810.2631 1588.99,1813.1931 " fill="none" id="C_0001073500714379115414&lt;-C_0002046336758797367926" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1366.07,1728.1731,1366.9027,1735.336,1373.8349,1737.3222,1373.0022,1730.1594,1366.07,1728.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1418.5" y="1764.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="1428.5" y="1771.02">relationships_</text><!--MD5=[51b77a83e925bfa56ce9003126dec6da]
reverse link C_0001117102382624673118 to C_0001073500714379115414--><path d="M1283.5,914.0331 C1283.5,1042.3331 1283.5,1251.7931 1283.5,1397.7031 " fill="none" id="C_0001117102382624673118&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1276.5,913.7731,1283.5,893.7731,1290.5,913.7731,1276.5,913.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca2904572ba2305549e4f16921901e5a]
reverse link C_0000895261582183440230 to C_0001073500714379115414--><path d="M1650.96,930.5731 C1620.87,986.4031 1584.93,1052.1431 1551.5,1110.9531 C1497.03,1206.7531 1434.18,1312.7531 1383.04,1397.9031 " fill="none" id="C_0000895261582183440230&lt;-C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1644.88,927.1031,1660.52,912.8131,1657.21,933.7431,1644.88,927.1031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M715.37,2051.5531 C715.24,2077.5731 717.53,2105.0831 724.5,2129.9531 C736.04,2171.1531 764.61,2212.2631 784.03,2236.9031 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="715.63,2038.5131,711.5056,2044.4283,715.3795,2050.5105,719.5039,2044.5953,715.63,2038.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="727.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22" x="737.5" y="2126.02">ns_</text><!--MD5=[2bb1928726872535df2c0ced8639e324]
reverse link C_0002069520381434407937 to C_0001618725806424907966--><path d="M753.16,2051.2931 C769.22,2117.8631 788.58,2198.1031 797.92,2236.8231 " fill="none" id="C_0002069520381434407937&lt;-C_0001618725806424907966-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="750.1,2038.6131,747.615,2045.3825,752.908,2050.28,755.3929,2043.5106,750.1,2038.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="773.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="783.5" y="2126.02">using_namespace_</text><!--MD5=[4f2a77547d39d73bea822e52b2f0976b]
reverse link C_0001073500714379115414 to C_0002069520381434407937--><path d="M1077.93,1704.0831 C1006.88,1752.5131 929.05,1805.5631 864.83,1849.3431 " fill="none" id="C_0001073500714379115414&lt;-C_0002069520381434407937" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1074.41,1698.0131,1094.88,1692.5331,1082.29,1709.5831,1074.41,1698.0131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1421a7cb66ca20c748d686120e75df1f]
reverse link C_0000464715462505216589 to C_0000178138562743079529--><path d="M6212.5,320.7831 C6212.5,367.7731 6212.5,426.5931 6212.5,486.7131 " fill="none" id="C_0000464715462505216589&lt;-C_0000178138562743079529" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6212.5,307.5331,6208.5,313.5331,6212.5,319.5331,6216.5,313.5331,6212.5,307.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6215.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6225.5" y="453.02">templates_</text><!--MD5=[1a65d827972b3d0b1c08c5e12d66acb2]
link C_0001035161069848456027 to C_0001932252426145029507--><path d="M1632.32,2285.0531 C1603.37,2312.7231 1551.6,2362.1831 1494.61,2416.6431 " fill="none" id="C_0001035161069848456027-&gt;C_0001932252426145029507" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1499.32,2421.8231,1480.02,2430.5831,1489.64,2411.7031,1499.32,2421.8231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4702a191ed9a004bc3babc8108dac01b]
reverse link C_0000785714713072053129 to C_0001035161069848456027--><path d="M1452.08,2091.3931 C1520.22,2147.5731 1590.65,2205.6531 1628.45,2236.8231 " fill="none" id="C_0000785714713072053129&lt;-C_0001035161069848456027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1442.05,2083.1131,1444.1336,2090.0167,1451.3075,2090.7485,1449.2239,2083.845,1442.05,2083.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1491.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1501.5" y="2126.02">path_</text><!--MD5=[b5e6308907af673266175bb8d717e662]
reverse link C_0000785714713072053129 to C_0001490157860030300113--><path d="M1258.16,2096.3031 C1253.34,2140.9631 1248.45,2186.2731 1245.04,2217.8631 " fill="none" id="C_0000785714713072053129&lt;-C_0001490157860030300113" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1259.59,2083.1131,1254.9673,2088.6476,1258.2981,2095.0434,1262.9208,2089.5089,1259.59,2083.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1258.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1268.5" y="2126.02">type_</text><!--MD5=[5ecb1d83165a712adbd5650cef34b86b]
reverse link C_0001073500714379115414 to C_0000785714713072053129--><path d="M1279.13,1748.1831 C1278.67,1767.2331 1278.22,1786.3631 1277.78,1804.7831 " fill="none" id="C_0001073500714379115414&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1272.13,1747.8131,1279.6,1727.9831,1286.13,1748.1431,1272.13,1747.8131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f221eabf3421229e7e20303bd40a63c]
reverse link C_0002077846075979426940 to C_0000785714713072053129--><path d="M1702.21,1619.8731 C1656.04,1663.8831 1588.64,1725.7631 1525.5,1774.9531 C1512.68,1784.9431 1499.28,1794.9731 1485.63,1804.8931 " fill="none" id="C_0002077846075979426940&lt;-C_0000785714713072053129" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1697.44,1614.7531,1716.72,1605.9731,1707.13,1624.8631,1697.44,1614.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M4202.82,423.0431 C4200.74,434.5331 4198.63,445.8931 4196.5,456.9531 C4177.64,555.0231 4151.99,668.0931 4136.11,736.2431 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4205.15,410.0431,4200.1509,415.2402,4203.0254,421.8536,4208.0245,416.6565,4205.15,410.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4202.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="4212.5" y="453.02">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M4110.41,736.3031 C4099.65,664.0331 4088.43,541.2431 4114.5,439.9531 C4116.61,431.7531 4119.1,423.5331 4121.9,415.3331 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4123.68,410.2431,4116.9411,417.4256,4122.0346,414.9646,4124.4955,420.0582,4123.68,410.2431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4117.5" y="446.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4127.5" y="453.02">diagram_</text><!--MD5=[3b5b148458d09c1202603fe4c86398e5]
reverse link C_0002069520381434407937 to C_0002143286684830686854--><path d="M891.47,2047.8431 C919.34,2061.6831 948.62,2074.1231 977.5,2082.9531 C1120.45,2126.6831 1163.69,2098.7631 1312.5,2112.9531 C1387.21,2120.0731 1405.63,2124.8631 1480.5,2129.9531 C1670.4,2142.8731 2149.04,2127.0031 2336.5,2159.9531 C2385.09,2168.4931 2436.57,2182.8831 2483.27,2198.1131 " fill="none" id="C_0002069520381434407937&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="887.99,2053.9231,873.38,2038.5831,894.37,2041.4631,887.99,2053.9231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b57dc45e019868d19d5475e79e2f9cd]
reverse link C_0002077846075979426940 to C_0002143286684830686854--><path d="M1933.65,1589.6131 C2156.54,1626.2631 2524.19,1700.8931 2609.5,1804.9531 C2692.27,1905.9131 2683.42,2065.3631 2666.59,2166.2131 " fill="none" id="C_0002077846075979426940&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1932.49,1596.5131,1913.87,1586.3931,1934.74,1582.6931,1932.49,1596.5131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9464deaa0356be979d6a6d03dbe62d6]
reverse link C_0000469458052685692314 to C_0001931666600378768700--><path d="M3937.55,1669.1531 C3888.6,1748.4431 3824.37,1852.4631 3790.93,1906.6231 " fill="none" id="C_0000469458052685692314&lt;-C_0001931666600378768700" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3944.66,1657.6431,3938.104,1660.6463,3938.3546,1667.853,3944.9106,1664.8499,3944.66,1657.6431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3881.5" y="1764.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="3891.5" y="1771.02">type_</text><!--MD5=[831418144dcced3437ca2c7d6f720a6d]
reverse link C_0000605829206649563575 to C_0000469458052685692314--><path d="M4051.03,1881.1031 C4041.76,1820.5031 4027.5,1727.3331 4016.84,1657.6431 " fill="none" id="C_0000605829206649563575&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4053.05,1894.2731,4056.0933,1887.7357,4051.2293,1882.4121,4048.1859,1888.9495,4053.05,1894.2731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4036.5" y="1764.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="4046.5" y="1771.02">filters_</text><!--MD5=[ed31da81ed4d725db179a2248c5e61a9]
reverse link C_0000469458052685692314 to C_0000605829206649563575--><path d="M4012.89,1677.9631 C4016.31,1709.4631 4020.54,1743.6031 4025.5,1774.9531 C4031.9,1815.4131 4041.53,1860.8731 4049.06,1894.2931 " fill="none" id="C_0000469458052685692314&lt;-C_0000605829206649563575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4005.89,1678.3231,4010.75,1657.6931,4019.81,1676.8531,4005.89,1678.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[edbd2d8c9d2f42ebccaa44b6d39b519c]
reverse link C_0001816240256470820189 to C_0001618725806424907966--><path d="M2066.72,2002.8831 C2035.18,2032.6731 1992.71,2066.1731 1947.5,2082.9531 C1780.09,2145.0831 1318.68,2073.6031 1144.5,2112.9531 C1029.9,2138.8431 905.64,2202.3731 843.56,2236.8331 " fill="none" id="C_0001816240256470820189&lt;-C_0001618725806424907966" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2076.15,1993.7831,2069.0548,1995.0708,2067.5145,2002.1154,2074.6097,2000.8278,2076.15,1993.7831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1147.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="89" x="1157.5" y="2126.02">namespaces_</text><!--MD5=[e0dc600e7c925328edcaabc3147d0ebd]
reverse link C_0000469458052685692314 to C_0001816240256470820189--><path d="M3832.15,1576.5131 C3456.51,1606.0431 2568.62,1686.4531 2293.5,1804.9531 C2245.33,1825.7031 2199.35,1863.5531 2166.91,1894.3731 " fill="none" id="C_0000469458052685692314&lt;-C_0001816240256470820189" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3831.87,1569.5131,3852.35,1574.9331,3832.96,1583.4731,3831.87,1569.5131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb629725326211f0b3f68bd233fd5fbd]
reverse link C_0000469458052685692314 to C_0000690341236618660423--><path d="M4108.83,1671.9931 C4180.88,1745.2031 4272.65,1838.4431 4327.59,1894.2731 " fill="none" id="C_0000469458052685692314&lt;-C_0000690341236618660423" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4103.74,1676.8031,4094.7,1657.6431,4113.72,1666.9831,4103.74,1676.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[463c0ff6d6fa7400c8eeff270c9ffc56]
reverse link C_0000469458052685692314 to C_0001389919526184251760--><path d="M4171.35,1626.2031 C4279.55,1669.4131 4420.86,1732.1731 4536.5,1804.9531 C4577.44,1830.7231 4619.09,1865.9031 4650.18,1894.2931 " fill="none" id="C_0000469458052685692314&lt;-C_0001389919526184251760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4168.59,1632.6431,4152.57,1618.7631,4173.74,1619.6231,4168.59,1632.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80cf7e8cb68da798134584cd4dd66cc2]
reverse link C_0000469458052685692314 to C_0001773753487119877542--><path d="M3832.23,1580.1731 C3625.94,1605.2531 3272.4,1665.9831 3001.5,1804.9531 C2957.6,1827.4731 2915.66,1864.4231 2885.75,1894.4231 " fill="none" id="C_0000469458052685692314&lt;-C_0001773753487119877542" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3831.66,1573.1931,3852.34,1577.7831,3833.31,1587.0931,3831.66,1573.1931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df0ed4a8eff07d905c468fe1780635eb]
reverse link C_0001979873989333693911 to C_0000229140160180072950--><path d="M5385.25,2039.3531 C5444.42,2078.7531 5513.07,2124.4731 5572.47,2164.0331 " fill="none" id="C_0001979873989333693911&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5374.31,2032.0731,5377.0815,2038.7304,5384.2926,2038.7326,5381.5211,2032.0753,5374.31,2032.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5511.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="5521.5" y="2126.02">relationship_</text><!--MD5=[1a1a2b51148ee0371c58488db4579368]
reverse link C_0000469458052685692314 to C_0001979873989333693911--><path d="M4172.28,1607.4231 C4346.75,1653.0431 4625.72,1728.6231 4863.5,1804.9531 C4911.95,1820.5031 4963.44,1838.3231 5012.35,1855.8631 " fill="none" id="C_0000469458052685692314&lt;-C_0001979873989333693911" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4170.43,1614.1731,4152.84,1602.3531,4173.96,1600.6331,4170.43,1614.1731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b969c62887eac6763bc0133248b5cef]
reverse link C_0001195713008101262477 to C_0000229140160180072950--><path d="M5859.41,1999.9731 C5852.38,2037.9231 5840,2088.7731 5819.5,2129.9531 C5814.49,2140.0031 5808.62,2150.0131 5802.27,2159.7531 " fill="none" id="C_0001195713008101262477&lt;-C_0000229140160180072950" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5861.69,1987.1231,5856.7088,1992.3373,5859.6061,1998.9408,5864.5873,1993.7266,5861.69,1987.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5829.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="5839.5" y="2126.02">relationships_</text><!--MD5=[d86b4eed582c96e54383377f1609e355]
reverse link C_0000469458052685692314 to C_0001195713008101262477--><path d="M4172.7,1569.0131 C4473.2,1582.3331 5114.06,1630.6131 5622.5,1804.9531 C5689.69,1827.9931 5759.65,1869.4231 5807.52,1900.8931 " fill="none" id="C_0000469458052685692314&lt;-C_0001195713008101262477" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4172.21,1575.9931,4152.53,1568.1431,4172.81,1562.0131,4172.21,1575.9931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[47e8dce62e2b7a18fba68c05be47fd22]
reverse link C_0001098184343448999590 to C_0002077031342744882956--><path d="M2408.02,1997.4231 C2358.66,2056.9931 2278.78,2153.4031 2230.79,2211.3331 " fill="none" id="C_0001098184343448999590&lt;-C_0002077031342744882956" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2416.57,1987.1131,2409.6615,1989.1802,2408.9124,1996.3523,2415.8209,1994.2852,2416.57,1987.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2308.5" y="2119.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="2318.5" y="2126.02">access_</text><!--MD5=[90c300d9132d751d9486c98f25931374]
reverse link C_0000469458052685692314 to C_0001098184343448999590--><path d="M3832.38,1575.2731 C3575.5,1596.6931 3076.57,1655.2731 2680.5,1804.9531 C2617.76,1828.6631 2552.88,1869.5731 2508.28,1900.7131 " fill="none" id="C_0000469458052685692314&lt;-C_0001098184343448999590" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3831.83,1568.2931,3852.33,1573.6431,3832.97,1582.2531,3831.83,1568.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9b9ac0374d7c5a802db2f4ca855abc58]
reverse link C_0000469458052685692314 to C_0002078668697238559556--><path d="M3832.79,1605.0631 C3690.22,1643.9431 3484.27,1710.4731 3321.5,1804.9531 C3279.62,1829.2631 3238.39,1865.1931 3208.28,1894.2931 " fill="none" id="C_0000469458052685692314&lt;-C_0002078668697238559556" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3831.35,1598.2031,3852.48,1599.7631,3834.99,1611.7231,3831.35,1598.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[febc1b53ac8f674dce50ad76e14fb2e9]
reverse link C_0000469458052685692314 to C_0000831536458766184760--><path d="M3834.91,1664.3731 C3769.28,1705.7031 3694.33,1755.4531 3629.5,1804.9531 C3598.83,1828.3731 3566.76,1856.4631 3539.88,1881.1631 " fill="none" id="C_0000469458052685692314&lt;-C_0000831536458766184760" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3831.6,1658.1831,3852.27,1653.4931,3839.04,1670.0431,3831.6,1658.1831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4123.95,875.0631 C4125.84,984.8631 4122.98,1194.9531 4082.5,1367.9531 C4074.62,1401.6531 4061.57,1437.0531 4048.27,1468.2631 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4123.7,861.8531,4119.8194,867.9311,4123.9373,873.8508,4127.8179,867.7728,4123.7,861.8531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4118.5" y="1252.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4128.5" y="1259.02">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M4085.53,873.7531 C4054.69,941.4231 4012.6,1045.3231 3995.5,1140.9531 C3977.74,1240.2631 3993.68,1267.0831 3995.5,1367.9531 C3996.09,1400.6431 3997.24,1436.4031 3998.44,1468.2331 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4091.15,861.5531,4085.0102,865.335,4086.1397,872.4571,4092.2795,868.6752,4091.15,861.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3998.5" y="1252.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="4008.5" y="1259.02">exclusive_</text><!--MD5=[9a3a760a28542ff0b62640347abfd527]
reverse link C_0000148537001046167478 to C_0002143286684830686854--><path d="M5428.46,1379.1731 C5495.88,1486.4531 5585.21,1648.6431 5622.5,1804.9531 C5651.17,1925.1331 5707.23,1993.0331 5622.5,2082.9531 C5525.28,2186.1231 3415.15,2242.3231 2807.73,2256.4031 " fill="none" id="C_0000148537001046167478&lt;-C_0002143286684830686854" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5421.39,1367.9931,5421.2141,1375.2021,5427.8009,1378.1371,5427.9768,1370.9282,5421.39,1367.9931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5616.5" y="1764.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="68" x="5626.5" y="1771.02">packages_</text><!--MD5=[d3df50313eac67d25f4285ef55f7c15c]
reverse link C_0000197068985320835874 to C_0000148537001046167478--><path d="M4453.88,423.8631 C4684.21,638.4131 5038.83,968.7231 5223.42,1140.6731 " fill="none" id="C_0000197068985320835874&lt;-C_0000148537001046167478" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4449.09,428.9731,4439.23,410.2231,4458.64,418.7331,4449.09,428.9731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8988cd247ff3e5443fdd46d37fd9a639]
link C_0000911024010877522257 to C_0001623832985137466228--><!--MD5=[5b7e032bd111ee92656b8900da6e57da]
link C_0001623832985137466228 to C_0000202859212831973510--><!--MD5=[ba6282dbbae985b66f0bada3d0daf2a5]
link C_0000911024010877522257 to C_0001331923285602672865--><!--MD5=[2e9d6dc6805e4203d48866f9d6e14e12]
link C_0001331923285602672865 to C_0000891208748219309562--><!--MD5=[6758011949d3a9f91cc7b600d6839681]
link C_0000891208748219309562 to C_0000640258162892495349--><!--MD5=[f406e32f02b698cbbccf2113bcadcc55]
@startuml
title clang-uml package diagram model
enum "clanguml::common::model::diagram_t" as C_0000911024010877522257
enum C_0000911024010877522257 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L24{diagram_t}]] {
kClass
kSequence
kPackage
kInclude
}
enum "clanguml::common::model::access_t" as C_0002077031342744882956
enum C_0002077031342744882956 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L26{access_t}]] {
kPublic
kProtected
kPrivate
kNone
}
enum "clanguml::common::model::relationship_t" as C_0000229140160180072950
enum C_0000229140160180072950 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L28{relationship_t}]] {
kNone
kExtension
kComposition
kAggregation
kContainment
kOwnership
kAssociation
kInstantiation
kFriendship
kAlias
kDependency
kConstraint
}
enum "clanguml::common::model::message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L44{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "clanguml::common::model::message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/enums.h#L70{message_scope_t}]] {
kNormal
kCondition
}
class "clanguml::common::model::decorated_element" as C_0001117102382624673118
class C_0001117102382624673118 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L37{decorated_element}]] {
+skip() const : bool
+skip_relationship() const : bool
+get_relationship() const : std::pair<relationship_t,std::string>
+style_spec() const : std::string
+decorators() const : const std::vector<std::shared_ptr<decorators::decorator>> &
+add_decorators() : void
+append() : void
+comment() const : std::optional<comment_t>
+set_comment() : void
-decorators_ : std::vector<std::shared_ptr<decorators::decorator>> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L60{decorators_}]]]
-comment_ : std::optional<comment_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/decorated_element.h#L61{comment_}]]]
}
class "clanguml::common::model::source_location" as C_0000895261582183440230
class C_0000895261582183440230 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L25{source_location}]] {
+source_location() = default : void
+source_location() : void
+file() const : const std::string &
+set_file() : void
+file_relative() const : const std::string &
+set_file_relative() : void
+line() const : unsigned int
+set_line() : void
+location_id() const : unsigned int
+set_location_id() : void
-file_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L52{file_}]]]
-file_relative_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L53{file_relative_}]]]
-line_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L54{line_}]]]
-hash_ : unsigned int [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_location.h#L55{hash_}]]]
}
class "clanguml::common::model::path<Sep>" as C_0001932252426145029507
class C_0001932252426145029507 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L28{path}]] {
+path<Sep>() = default : void
+path<Sep>() : void
+path<Sep>() : void
+path<Sep>() : void
+operator=() = default : path<Sep> &
+path<Sep>() = default : void
+operator=() = default : path<Sep> &
+path<Sep>() : void
+path<Sep>() : void
+to_string() const : std::string
+is_empty() const : bool
+size() const : size_t
+operator|() const : path<Sep>
+operator|=() : void
+operator|() const : path<Sep>
+operator|=() : void
+operator[]() : std::string &
+operator[]() const : const std::string &
+append() : void
+append() : void
+pop_back() : void
+parent() const : std::optional<path<Sep>>
+starts_with() const : bool
+ends_with() const : bool
+common_path() const : path<Sep>
+relative_to() const : path<Sep>
+relative() const : std::string
+name() const : std::string
+begin() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+end() : __gnu_cxx::__normal_iterator<Sep>::container_type::iterator
+cbegin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+cend() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+begin() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
+end() const : __gnu_cxx::__normal_iterator<Sep>::container_type::const_iterator
-path_ : clanguml::common::model::path::container_type [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/path.h#L224{path_}]]]
}
class "clanguml::common::model::ns_path_separator" as C_0001331923285602672865
class C_0001331923285602672865 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L28{ns_path_separator}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/namespace.h#L29{value}]]]
}
enum "clanguml::common::model::template_parameter_kind_t" as C_0000362408953172993523
enum C_0000362408953172993523 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L29{template_parameter_kind_t}]] {
template_type
template_template_type
non_type_template
argument
concept_constraint
}
class "clanguml::common::model::path<clanguml::common::model::ns_path_separator>" as C_0001618725806424907966
class C_0001618725806424907966 {
}
class "clanguml::common::model::template_parameter" as C_0000178138562743079529
class C_0000178138562743079529 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L45{template_parameter}]] {
{static} +make_template_type() : clanguml::common::model::template_parameter
{static} +make_template_template_type() : clanguml::common::model::template_parameter
{static} +make_non_type_template() : clanguml::common::model::template_parameter
{static} +make_argument() : clanguml::common::model::template_parameter
{static} +make_unexposed_argument() : clanguml::common::model::template_parameter
+set_type() : void
+type() const : std::optional<std::string>
+set_id() : void
+id() const : const std::optional<int64_t> &
+set_name() : void
+name() const : std::optional<std::string>
+set_default_value() : void
+default_value() const : const std::optional<std::string> &
+is_variadic() : void
+is_variadic() const : bool
+calculate_specialization_match() const : int
+is_template_parameter() const : bool
+is_template_parameter() : void
+is_template_template_parameter() const : bool
+is_template_template_parameter() : void
+to_string() const : std::string
+add_template_param() : void
+add_template_param() : void
+template_params() const : const std::vector<template_parameter> &
+clear_params() : void
+find_nested_relationships() const : bool
+set_concept_constraint() : void
+concept_constraint() const : const std::optional<std::string> &
+kind() const : clanguml::common::model::template_parameter_kind_t
+set_kind() : void
+is_unexposed() const : bool
+set_unexposed() : void
+set_function_template() : void
+is_function_template() const : bool
-template_parameter() = default : void
-type_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L192{type_}]]]
-name_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L195{name_}]]]
-default_value_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L198{default_value_}]]]
-is_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L202{is_template_parameter_}]]]
-is_template_template_parameter_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L206{is_template_template_parameter_}]]]
-is_variadic_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L209{is_variadic_}]]]
-is_function_template_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L211{is_function_template_}]]]
-concept_constraint_ : std::optional<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L215{concept_constraint_}]]]
-id_ : std::optional<int64_t> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L221{id_}]]]
-is_unexposed_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_parameter.h#L223{is_unexposed_}]]]
}
class "clanguml::common::model::stylable_element" as C_0002077846075979426940
class C_0002077846075979426940 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L24{stylable_element}]] {
+set_style() : void
+style() const : std::string
-style_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/stylable_element.h#L30{style_}]]]
}
class "clanguml::common::model::relationship" as C_0002046336758797367926
class C_0002046336758797367926 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L28{relationship}]] {
+relationship() : void
+~relationship() = default : void
+set_type() : void
+type() const : clanguml::common::model::relationship_t
+set_destination() : void
+destination() const : clanguml::common::id_t
+set_multiplicity_source() : void
+multiplicity_source() const : std::string
+set_multiplicity_destination() : void
+multiplicity_destination() const : std::string
+set_label() : void
+label() const : std::string
+set_access() : void
+access() const : clanguml::common::model::access_t
-destination_ : int64_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L61{destination_}]]]
-multiplicity_source_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L62{multiplicity_source_}]]]
-multiplicity_destination_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L63{multiplicity_destination_}]]]
-label_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/relationship.h#L64{label_}]]]
}
class "clanguml::common::model::diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L34{diagram_element}]] {
+diagram_element() : void
+~diagram_element() = default : void
+id() const : clanguml::common::model::diagram_element::id_t
+set_id() : void
+alias() const : std::string
+set_name() : void
+name() const : std::string
+type_name() const : std::string
+full_name() const : std::string
+relationships() : std::vector<relationship> &
+relationships() const : const std::vector<relationship> &
+add_relationship() : void
+append() : void
+context() const : inja::json
+is_nested() const : bool
+nested() : void
+complete() const : bool
+complete() : void
-id_ : clanguml::common::model::diagram_element::id_t [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L80{id_}]]]
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L81{name_}]]]
-nested_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L83{nested_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_element.h#L84{complete_}]]]
}
class "clanguml::common::model::element" as C_0002069520381434407937
class C_0002069520381434407937 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/element.h#L35{element}]] {
+element() : void
+~element() = default : void
+name_and_ns() const : std::string
+set_namespace() : void
+get_namespace() const : clanguml::common::model::namespace_
+get_relative_namespace() const : clanguml::common::model::namespace_
+path() const : const clanguml::common::model::namespace_ &
+full_name() const : std::string
+full_name_no_ns() const : std::string
+using_namespace() const : const clanguml::common::model::namespace_ &
+context() const : inja::json
}
class "clanguml::common::model::template_trait" as C_0000464715462505216589
class C_0000464715462505216589 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L28{template_trait}]] {
+render_template_params() const : std::ostream &
+set_base_template() : void
+base_template() const : std::string
+add_template() : void
+template_params() const : const std::vector<template_parameter> &
+calculate_template_specialization_match() const : int
+is_implicit() const : bool
+set_implicit() : void
-base_template_full_name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L50{base_template_full_name_}]]]
-is_implicit_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/template_trait.h#L51{is_implicit_}]]]
}
class "clanguml::common::model::nested_trait<T,Path>" as C_0000891208748219309562
class C_0000891208748219309562 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L28{nested_trait}]] {
+nested_trait<T, Path>() = default : void
+nested_trait<T, Path>() : void
+nested_trait<T, Path>() = default : void
+operator=() : nested_trait<T,Path> &
+operator=() = default : nested_trait<T,Path> &
+~nested_trait<T, Path>() = default : void
+has_element() const : bool
+is_empty() const : bool
+begin() : auto
+end() : auto
+cbegin() const : auto
+cend() const : auto
+begin() const : auto
+end() const : auto
+print_tree() : void
+add_element<V=T>() : _Bool
+add_element<V=T>() : _Bool
+get_element<V=T>() : auto
+get_element_parent<V=T>() : auto
+get_element<V=T>() : auto
-elements_ : std::vector<std::unique_ptr<T>> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/nested_trait.h#L169{elements_}]]]
}
enum "clanguml::common::model::source_file_t" as C_0001490157860030300113
enum C_0001490157860030300113 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L37{source_file_t}]] {
kDirectory
kHeader
kImplementation
}
class "clanguml::common::model::fs_path_sep" as C_0000640258162892495349
class C_0000640258162892495349 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L41{fs_path_sep}]] {
{static} +value : const std::string_view [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L45{value}]]]
}
class "clanguml::common::model::path<clanguml::common::model::fs_path_sep>" as C_0001035161069848456027
class C_0001035161069848456027 {
}
class "clanguml::common::model::source_file" as C_0000785714713072053129
class C_0000785714713072053129 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L51{source_file}]] {
+source_file() = default : void
+source_file() : void
+set_path() : void
+set_absolute() : void
+is_absolute() const : bool
+set_type() : void
+type() const : clanguml::common::model::source_file_t
+source_file() : void
+source_file() = default : void
+operator=() : clanguml::common::model::source_file &
+operator=() : clanguml::common::model::source_file &
+operator==() const : bool
+path() const : const clanguml::common::model::filesystem_path &
+full_name() const : std::string
+full_path() const : clanguml::common::model::path<clanguml::common::model::fs_path_sep>
+fs_path() const : std::filesystem::path
+context() const : inja::json
-is_absolute_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/source_file.h#L131{is_absolute_}]]]
}
abstract "clanguml::common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L34{diagram}]] {
+diagram() : void
+~diagram() : void
{abstract} +type() const = 0 : clanguml::common::model::diagram_t
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
{abstract} +get() const = 0 : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get_with_namespace() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+diagram() : void
+diagram() : void
+operator=() : clanguml::common::model::diagram &
+operator=() : clanguml::common::model::diagram &
+set_name() : void
+name() const : std::string
+set_filter() : void
+set_complete() : void
+complete() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+should_include() const : bool
+has_element() const : bool
+should_include() const : bool
{abstract} +context() const = 0 : inja::json
-name_ : std::string [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L85{name_}]]]
-complete_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram.h#L87{complete_}]]]
}
class "clanguml::common::model::package" as C_0002143286684830686854
class C_0002143286684830686854 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L34{package}]] {
+package() : void
+package() : void
+package() = default : void
+operator=() : clanguml::common::model::package &
+operator=() : clanguml::common::model::package &
+type_name() const : std::string
+full_name() const : std::string
+is_deprecated() const : bool
+set_deprecated() : void
+add_package() : void
-is_deprecated_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/package.h#L56{is_deprecated_}]]]
}
enum "clanguml::common::model::filter_t" as C_0001931666600378768700
enum C_0001931666600378768700 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L37{filter_t}]] {
kInclusive
kExclusive
}
class "clanguml::common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L57{filter_visitor}]] {
+filter_visitor() : void
+~filter_visitor() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+match() const : tvl::value_t
+is_inclusive() const : bool
+is_exclusive() const : bool
+type() const : clanguml::common::model::filter_t
}
class "clanguml::common::model::anyof_filter" as C_0000605829206649563575
class C_0000605829206649563575 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L90{anyof_filter}]] {
+anyof_filter() : void
+~anyof_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::namespace_filter" as C_0001816240256470820189
class C_0001816240256470820189 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L106{namespace_filter}]] {
+namespace_filter() : void
+~namespace_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
}
class "clanguml::common::model::element_filter" as C_0000690341236618660423
class C_0000690341236618660423 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L119{element_filter}]] {
+element_filter() : void
+~element_filter() = default : void
+match() const : tvl::value_t
-elements_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L127{elements_}]]]
}
class "clanguml::common::model::subclass_filter" as C_0001389919526184251760
class C_0001389919526184251760 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L130{subclass_filter}]] {
+subclass_filter() : void
+~subclass_filter() = default : void
+match() const : tvl::value_t
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L138{roots_}]]]
}
class "clanguml::common::model::parents_filter" as C_0001773753487119877542
class C_0001773753487119877542 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L141{parents_filter}]] {
+parents_filter() : void
+~parents_filter() = default : void
+match() const : tvl::value_t
-children_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L149{children_}]]]
}
class "clanguml::common::model::edge_traversal_filter<DiagramT,ElementT,MatchOverrideT=common::model::element>" as C_0001979873989333693911
class C_0001979873989333693911 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L154{edge_traversal_filter}]] {
+edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() : void
+~edge_traversal_filter<DiagramT, ElementT, MatchOverrideT>() = default : void
+match() const : tvl::value_t
-add_parents() const : void
-init() const : void
-add_adjacent<C,D>() : _Bool
-roots_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L287{roots_}]]]
-initialized_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L289{initialized_}]]]
-matching_elements_ : clanguml::common::reference_set<ElementT> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L290{matching_elements_}]]]
-forward_ : bool [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L291{forward_}]]]
}
class "clanguml::common::model::relationship_filter" as C_0001195713008101262477
class C_0001195713008101262477 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L294{relationship_filter}]] {
+relationship_filter() : void
+~relationship_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::access_filter" as C_0001098184343448999590
class C_0001098184343448999590 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L307{access_filter}]] {
+access_filter() : void
+~access_filter() = default : void
+match() const : tvl::value_t
}
class "clanguml::common::model::context_filter" as C_0002078668697238559556
class C_0002078668697238559556 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L318{context_filter}]] {
+context_filter() : void
+~context_filter() = default : void
+match() const : tvl::value_t
-context_ : std::vector<std::string> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L326{context_}]]]
}
class "clanguml::common::model::paths_filter" as C_0000831536458766184760
class C_0000831536458766184760 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L329{paths_filter}]] {
+paths_filter() : void
+~paths_filter() = default : void
+match() const : tvl::value_t
+match() const : tvl::value_t
-paths_ : std::vector<std::filesystem::path> [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L342{paths_}]]]
-root_ : std::filesystem::path [[[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L343{root_}]]]
}
class "clanguml::common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/common/model/diagram_filter.h#L346{diagram_filter}]] {
+diagram_filter() : void
+add_inclusive_filter() : void
+add_exclusive_filter() : void
+should_include() const : bool
-init_filters() : void
+should_include<T>() : _Bool
}
class "diagram" as C_0000148537001046167478
class C_0000148537001046167478 [[https://github.com/bkryza/clang-uml/blob/b74bdab7857376d2095452368a8c88870b8ee2c5/src/package_diagram/model/diagram.h#L28{diagram}]] {
+diagram() = default : void
+diagram() : void
+diagram() = default : void
+operator=() : diagram &
+operator=() = default : diagram &
+type() const : common::model::diagram_t
+packages() const : const common::reference_vector<clanguml::common::model::package> &
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+get() const : clanguml::common::optional_ref<clanguml::common::model::diagram_element>
+add_package() : void
+get_package() const : clanguml::common::optional_ref<clanguml::common::model::package>
+get_package() const : clanguml::common::optional_ref<common::model::package>
+to_alias() const : std::string
+context() const : inja::json
}
C_0001618725806424907966 ..|> C_0001932252426145029507
C_0000178138562743079529 o- - C_0000362408953172993523 : -kind_
C_0000178138562743079529 o- - C_0000178138562743079529 : -template_params_
C_0002046336758797367926 o- - C_0000229140160180072950 : -type_
C_0002046336758797367926 o- - C_0002077031342744882956 : -access_
C_0001117102382624673118 <|- - C_0002046336758797367926
C_0002077846075979426940 <|- - C_0002046336758797367926
C_0001073500714379115414 o- - C_0002046336758797367926 : -relationships_
C_0001117102382624673118 <|- - C_0001073500714379115414
C_0000895261582183440230 <|- - C_0001073500714379115414
C_0002069520381434407937 o- - C_0001618725806424907966 : -ns_
C_0002069520381434407937 o- - C_0001618725806424907966 : -using_namespace_
C_0001073500714379115414 <|- - C_0002069520381434407937
C_0000464715462505216589 o- - C_0000178138562743079529 : -templates_
C_0001035161069848456027 ..|> C_0001932252426145029507
C_0000785714713072053129 o- - C_0001035161069848456027 : -path_
C_0000785714713072053129 o- - C_0001490157860030300113 : -type_
C_0001073500714379115414 <|- - C_0000785714713072053129
C_0002077846075979426940 <|- - C_0000785714713072053129
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0002069520381434407937 <|- - C_0002143286684830686854
C_0002077846075979426940 <|- - C_0002143286684830686854
C_0000469458052685692314 o- - C_0001931666600378768700 : -type_
C_0000605829206649563575 o- - C_0000469458052685692314 : -filters_
C_0000469458052685692314 <|- - C_0000605829206649563575
C_0001816240256470820189 o- - C_0001618725806424907966 : -namespaces_
C_0000469458052685692314 <|- - C_0001816240256470820189
C_0000469458052685692314 <|- - C_0000690341236618660423
C_0000469458052685692314 <|- - C_0001389919526184251760
C_0000469458052685692314 <|- - C_0001773753487119877542
C_0001979873989333693911 o- - C_0000229140160180072950 : -relationship_
C_0000469458052685692314 <|- - C_0001979873989333693911
C_0001195713008101262477 o- - C_0000229140160180072950 : -relationships_
C_0000469458052685692314 <|- - C_0001195713008101262477
C_0001098184343448999590 o- - C_0002077031342744882956 : -access_
C_0000469458052685692314 <|- - C_0001098184343448999590
C_0000469458052685692314 <|- - C_0002078668697238559556
C_0000469458052685692314 <|- - C_0000831536458766184760
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_
C_0000148537001046167478 o- - C_0002143286684830686854 : -packages_
C_0000197068985320835874 <|- - C_0000148537001046167478

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>