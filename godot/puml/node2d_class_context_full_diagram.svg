<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2503px" preserveAspectRatio="none" style="width:4821px;height:2503px;" version="1.1" viewBox="0 0 4821 2503" width="4821px" zoomAndPan="magnify"><defs><filter height="300%" id="f6o5ytppycvup" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="251" x="2288.5" y="16.708">Godot Node2D class context</text><!--MD5=[8fa627e1efcccdd4a5cadae89d2de99a]
class C_0000053309527800613276--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L39" target="_top" title="Vector2" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L39" xlink:show="new" xlink:title="Vector2" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6o5ytppycvup)" height="854.6953" id="C_0000053309527800613276" style="stroke: #A80036; stroke-width: 1.5;" width="734" x="4076" y="268.9531"/><ellipse cx="4414.25" cy="284.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4417.2188,290.5938 Q4416.6406,290.8906 4416,291.0313 Q4415.3594,291.1875 4414.6563,291.1875 Q4412.1563,291.1875 4410.8281,289.5469 Q4409.5156,287.8906 4409.5156,284.7656 Q4409.5156,281.6406 4410.8281,279.9844 Q4412.1563,278.3281 4414.6563,278.3281 Q4415.3594,278.3281 4416,278.4844 Q4416.6563,278.6406 4417.2188,278.9375 L4417.2188,281.6563 Q4416.5938,281.0781 4416,280.8125 Q4415.4063,280.5313 4414.7813,280.5313 Q4413.4375,280.5313 4412.75,281.6094 Q4412.0625,282.6719 4412.0625,284.7656 Q4412.0625,286.8594 4412.75,287.9375 Q4413.4375,289 4414.7813,289 Q4415.4063,289 4416,288.7344 Q4416.5938,288.4531 4417.2188,287.875 L4417.2188,290.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="4434.75" y="289.1074">Vector2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4077" x2="4809" y1="300.9531" y2="300.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4077" x2="4809" y1="308.9531" y2="308.9531"/><ellipse cx="4087" cy="319.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="4096" y="323.1636">operator[](int p_idx) : real_t &amp;</text><ellipse cx="4087" cy="332.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="4096" y="335.9683">operator[](int p_idx) const : const real_t &amp;</text><ellipse cx="4087" cy="345.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4096" y="348.7729">normalize() : void</text><ellipse cx="4087" cy="358.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4096" y="361.5776">normalized() const : Vector2</text><ellipse cx="4087" cy="371.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4096" y="374.3823">is_normalized() const : bool</text><ellipse cx="4087" cy="383.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4096" y="387.187">length() const : real_t</text><ellipse cx="4087" cy="396.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4096" y="399.9917">length_squared() const : real_t</text><ellipse cx="4087" cy="409.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="4096" y="412.7964">distance_to(const Vector2 &amp; p_vector2) const : real_t</text><ellipse cx="4087" cy="422.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="4096" y="425.6011">distance_squared_to(const Vector2 &amp; p_vector2) const : real_t</text><ellipse cx="4087" cy="435.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="4096" y="438.4058">angle_to(const Vector2 &amp; p_vector2) const : real_t</text><ellipse cx="4087" cy="448" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="4096" y="451.2104">angle_to_point(const Vector2 &amp; p_vector2) const : real_t</text><ellipse cx="4087" cy="460.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="4096" y="464.0151">direction_to(const Vector2 &amp; p_to) const : Vector2</text><ellipse cx="4087" cy="473.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="4096" y="476.8198">dot(const Vector2 &amp; p_other) const : real_t</text><ellipse cx="4087" cy="486.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4096" y="489.6245">cross(const Vector2 &amp; p_other) const : real_t</text><ellipse cx="4087" cy="499.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="4096" y="502.4292">posmod(const real_t p_mod) const : Vector2</text><ellipse cx="4087" cy="512.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4096" y="515.2339">posmodv(const Vector2 &amp; p_modv) const : Vector2</text><ellipse cx="4087" cy="524.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="4096" y="528.0386">project(const Vector2 &amp; p_to) const : Vector2</text><ellipse cx="4087" cy="537.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="4096" y="540.8433">plane_project(real_t p_d, const Vector2 &amp; p_vec) const : Vector2</text><ellipse cx="4087" cy="550.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="4096" y="553.6479">clamped(real_t p_len) const : Vector2</text><ellipse cx="4087" cy="563.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="496" x="4096" y="566.4526">linear_interpolate(const Vector2 &amp; p_a, const Vector2 &amp; p_b, real_t p_weight) : Vector2</text><ellipse cx="4087" cy="576.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="411" x="4096" y="579.2573">linear_interpolate(const Vector2 &amp; p_to, real_t p_weight) const : Vector2</text><ellipse cx="4087" cy="588.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="4096" y="592.062">slerp(const Vector2 &amp; p_to, real_t p_weight) const : Vector2</text><ellipse cx="4087" cy="601.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="708" x="4096" y="604.8667">cubic_interpolate(const Vector2 &amp; p_b, const Vector2 &amp; p_pre_a, const Vector2 &amp; p_post_b, real_t p_weight) const : Vector2</text><ellipse cx="4087" cy="614.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="4096" y="617.6714">move_toward(const Vector2 &amp; p_to, const real_t p_delta) const : Vector2</text><ellipse cx="4087" cy="627.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="4096" y="630.4761">slide(const Vector2 &amp; p_normal) const : Vector2</text><ellipse cx="4087" cy="640.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="4096" y="643.2808">bounce(const Vector2 &amp; p_normal) const : Vector2</text><ellipse cx="4087" cy="652.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="4096" y="656.0854">reflect(const Vector2 &amp; p_normal) const : Vector2</text><ellipse cx="4087" cy="665.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="4096" y="668.8901">is_equal_approx(const Vector2 &amp; p_v) const : bool</text><ellipse cx="4087" cy="678.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="4096" y="681.6948">operator+(const Vector2 &amp; p_v) const : Vector2</text><ellipse cx="4087" cy="691.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4096" y="694.4995">operator+=(const Vector2 &amp; p_v) : void</text><ellipse cx="4087" cy="704.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4096" y="707.3042">operator-(const Vector2 &amp; p_v) const : Vector2</text><ellipse cx="4087" cy="716.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="4096" y="720.1089">operator-=(const Vector2 &amp; p_v) : void</text><ellipse cx="4087" cy="729.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="4096" y="732.9136">operator*(const Vector2 &amp; p_v1) const : Vector2</text><ellipse cx="4087" cy="742.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4096" y="745.7183">operator*(const real_t &amp; rvalue) const : Vector2</text><ellipse cx="4087" cy="755.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="4096" y="758.5229">operator*=(const real_t &amp; rvalue) : void</text><ellipse cx="4087" cy="768.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="4096" y="771.3276">operator*=(const Vector2 &amp; rvalue) : void</text><ellipse cx="4087" cy="780.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="4096" y="784.1323">operator/(const Vector2 &amp; p_v1) const : Vector2</text><ellipse cx="4087" cy="793.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="4096" y="796.937">operator/(const real_t &amp; rvalue) const : Vector2</text><ellipse cx="4087" cy="806.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4096" y="809.7417">operator/=(const real_t &amp; rvalue) : void</text><ellipse cx="4087" cy="819.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="4096" y="822.5464">operator/=(const Vector2 &amp; rvalue) : void</text><ellipse cx="4087" cy="832.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="4096" y="835.3511">operator-() const : Vector2</text><ellipse cx="4087" cy="844.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4096" y="848.1558">operator==(const Vector2 &amp; p_vec2) const : bool</text><ellipse cx="4087" cy="857.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="4096" y="860.9604">operator!=(const Vector2 &amp; p_vec2) const : bool</text><ellipse cx="4087" cy="870.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4096" y="873.7651">operator&lt;(const Vector2 &amp; p_vec2) const : bool</text><ellipse cx="4087" cy="883.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4096" y="886.5698">operator&gt;(const Vector2 &amp; p_vec2) const : bool</text><ellipse cx="4087" cy="896.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4096" y="899.3745">operator&lt;=(const Vector2 &amp; p_vec2) const : bool</text><ellipse cx="4087" cy="908.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4096" y="912.1792">operator&gt;=(const Vector2 &amp; p_vec2) const : bool</text><ellipse cx="4087" cy="921.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4096" y="924.9839">angle() const : real_t</text><ellipse cx="4087" cy="934.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="4096" y="937.7886">set_rotation(real_t p_radians) : void</text><ellipse cx="4087" cy="947.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4096" y="950.5933">abs() const : Vector2</text><ellipse cx="4087" cy="960.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="4096" y="963.3979">rotated(real_t p_by) const : Vector2</text><ellipse cx="4087" cy="972.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4096" y="976.2026">tangent() const : Vector2</text><ellipse cx="4087" cy="985.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4096" y="989.0073">sign() const : Vector2</text><ellipse cx="4087" cy="998.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4096" y="1001.812">floor() const : Vector2</text><ellipse cx="4087" cy="1011.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="4096" y="1014.6167">ceil() const : Vector2</text><ellipse cx="4087" cy="1024.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="4096" y="1027.4214">round() const : Vector2</text><ellipse cx="4087" cy="1037.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="4096" y="1040.2261">snapped(const Vector2 &amp; p_by) const : Vector2</text><ellipse cx="4087" cy="1049.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="4096" y="1053.0308">aspect() const : real_t</text><ellipse cx="4087" cy="1062.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4096" y="1065.8354">operator String() const : String</text><ellipse cx="4087" cy="1075.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4096" y="1078.6401">Vector2(real_t p_x, real_t p_y) : void</text><ellipse cx="4087" cy="1088.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4096" y="1091.4448">Vector2() : void</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L46" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L46" xlink:show="new" xlink:title="" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4082" y="1096.0391"/><ellipse cx="4087" cy="1101.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L46" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L46" xlink:show="new" xlink:title="" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4096" y="1104.2495">: Vector2::(anonymous_506878)</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L50" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L50" xlink:show="new" xlink:title="" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4082" y="1108.8438"/><ellipse cx="4087" cy="1113.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L50" target="_top" title="" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L50" xlink:show="new" xlink:title="" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4096" y="1117.0542">: Vector2::(anonymous_506983)</text></a><!--MD5=[ab7e3a949030d623a36ad5df74e79d00]
class C_0001296138246691404804--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L37" target="_top" title="Transform2D" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L37" xlink:show="new" xlink:title="Transform2D" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6o5ytppycvup)" height="675.4297" id="C_0001296138246691404804" style="stroke: #A80036; stroke-width: 1.5;" width="507" x="2797" y="358.9531"/><ellipse cx="3006.25" cy="374.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3009.2188,380.5938 Q3008.6406,380.8906 3008,381.0313 Q3007.3594,381.1875 3006.6563,381.1875 Q3004.1563,381.1875 3002.8281,379.5469 Q3001.5156,377.8906 3001.5156,374.7656 Q3001.5156,371.6406 3002.8281,369.9844 Q3004.1563,368.3281 3006.6563,368.3281 Q3007.3594,368.3281 3008,368.4844 Q3008.6563,368.6406 3009.2188,368.9375 L3009.2188,371.6563 Q3008.5938,371.0781 3008,370.8125 Q3007.4063,370.5313 3006.7813,370.5313 Q3005.4375,370.5313 3004.75,371.6094 Q3004.0625,372.6719 3004.0625,374.7656 Q3004.0625,376.8594 3004.75,377.9375 Q3005.4375,379 3006.7813,379 Q3007.4063,379 3008,378.7344 Q3008.5938,378.4531 3009.2188,377.875 L3009.2188,380.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="3026.75" y="379.1074">Transform2D</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2798" x2="3303" y1="390.9531" y2="390.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L49" target="_top" title="elements" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L49" xlink:show="new" xlink:title="elements" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2803" y="396.9531"/><ellipse cx="2808" cy="401.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L49" target="_top" title="elements" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L49" xlink:show="new" xlink:title="elements" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2817" y="405.1636">elements : Vector2[3]</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2798" x2="3303" y1="411.7578" y2="411.7578"/><ellipse cx="2808" cy="422.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2817" y="425.9683">tdotx(const Vector2 &amp; v) const : real_t</text><ellipse cx="2808" cy="435.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2817" y="438.7729">tdoty(const Vector2 &amp; v) const : real_t</text><ellipse cx="2808" cy="448.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2817" y="451.5776">operator[](int p_idx) const : const Vector2 &amp;</text><ellipse cx="2808" cy="461.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2817" y="464.3823">operator[](int p_idx) : Vector2 &amp;</text><ellipse cx="2808" cy="473.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2817" y="477.187">get_axis(int p_axis) const : Vector2</text><ellipse cx="2808" cy="486.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="2817" y="489.9917">set_axis(int p_axis, const Vector2 &amp; p_vec) : void</text><ellipse cx="2808" cy="499.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="2817" y="502.7964">invert() : void</text><ellipse cx="2808" cy="512.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2817" y="515.6011">inverse() const : Transform2D</text><ellipse cx="2808" cy="525.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2817" y="528.4058">affine_invert() : void</text><ellipse cx="2808" cy="538" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="2817" y="541.2104">affine_inverse() const : Transform2D</text><ellipse cx="2808" cy="550.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2817" y="554.0151">set_rotation(real_t p_rot) : void</text><ellipse cx="2808" cy="563.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2817" y="566.8198">get_rotation() const : real_t</text><ellipse cx="2808" cy="576.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="2817" y="579.6245">set_rotation_and_scale(real_t p_rot, const Size2 &amp; p_scale) : void</text><ellipse cx="2808" cy="589.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2817" y="592.4292">rotate(real_t p_phi) : void</text><ellipse cx="2808" cy="602.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2817" y="605.2339">scale(const Size2 &amp; p_scale) : void</text><ellipse cx="2808" cy="614.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2817" y="618.0386">scale_basis(const Size2 &amp; p_scale) : void</text><ellipse cx="2808" cy="627.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2817" y="630.8433">translate(real_t p_tx, real_t p_ty) : void</text><ellipse cx="2808" cy="640.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="2817" y="643.6479">translate(const Vector2 &amp; p_translation) : void</text><ellipse cx="2808" cy="653.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2817" y="656.4526">basis_determinant() const : real_t</text><ellipse cx="2808" cy="666.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2817" y="669.2573">get_scale() const : Size2</text><ellipse cx="2808" cy="678.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2817" y="682.062">set_scale(const Size2 &amp; p_scale) : void</text><ellipse cx="2808" cy="691.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2817" y="694.8667">get_origin() const : const Vector2 &amp;</text><ellipse cx="2808" cy="704.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="2817" y="707.6714">set_origin(const Vector2 &amp; p_origin) : void</text><ellipse cx="2808" cy="717.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2817" y="720.4761">scaled(const Size2 &amp; p_scale) const : Transform2D</text><ellipse cx="2808" cy="730.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="2817" y="733.2808">basis_scaled(const Size2 &amp; p_scale) const : Transform2D</text><ellipse cx="2808" cy="742.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="2817" y="746.0854">translated(const Vector2 &amp; p_offset) const : Transform2D</text><ellipse cx="2808" cy="755.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="2817" y="758.8901">rotated(real_t p_phi) const : Transform2D</text><ellipse cx="2808" cy="768.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2817" y="771.6948">untranslated() const : Transform2D</text><ellipse cx="2808" cy="781.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2817" y="784.4995">orthonormalize() : void</text><ellipse cx="2808" cy="794.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="2817" y="797.3042">orthonormalized() const : Transform2D</text><ellipse cx="2808" cy="806.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="2817" y="810.1089">is_equal_approx(const Transform2D &amp; p_transform) const : bool</text><ellipse cx="2808" cy="819.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2817" y="822.9136">operator==(const Transform2D &amp; p_transform) const : bool</text><ellipse cx="2808" cy="832.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="2817" y="835.7183">operator!=(const Transform2D &amp; p_transform) const : bool</text><ellipse cx="2808" cy="845.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="2817" y="848.5229">operator*=(const Transform2D &amp; p_transform) : void</text><ellipse cx="2808" cy="858.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="2817" y="861.3276">operator*(const Transform2D &amp; p_transform) const : Transform2D</text><ellipse cx="2808" cy="870.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="481" x="2817" y="874.1323">interpolate_with(const Transform2D &amp; p_transform, real_t p_c) const : Transform2D</text><ellipse cx="2808" cy="883.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2817" y="886.937">basis_xform(const Vector2 &amp; p_vec) const : Vector2</text><ellipse cx="2808" cy="896.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="2817" y="899.7417">basis_xform_inv(const Vector2 &amp; p_vec) const : Vector2</text><ellipse cx="2808" cy="909.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="2817" y="912.5464">xform(const Vector2 &amp; p_vec) const : Vector2</text><ellipse cx="2808" cy="922.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2817" y="925.3511">xform_inv(const Vector2 &amp; p_vec) const : Vector2</text><ellipse cx="2808" cy="934.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="2817" y="938.1558">xform(const Rect2 &amp; p_rect) const : Rect2</text><ellipse cx="2808" cy="947.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="2817" y="950.9604">xform_inv(const Rect2 &amp; p_rect) const : Rect2</text><ellipse cx="2808" cy="960.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="426" x="2817" y="963.7651">xform(const PoolVector&lt;Vector2&gt; &amp; p_array) const : PoolVector&lt;Vector2&gt;</text><ellipse cx="2808" cy="973.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="2817" y="976.5698">xform_inv(const PoolVector&lt;Vector2&gt; &amp; p_array) const : PoolVector&lt;Vector2&gt;</text><ellipse cx="2808" cy="986.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2817" y="989.3745">operator String() const : String</text><ellipse cx="2808" cy="998.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="2817" y="1002.1792">Transform2D(real_t xx, real_t xy, real_t yx, real_t yy, real_t ox, real_t oy) : void</text><ellipse cx="2808" cy="1011.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="2817" y="1014.9839">Transform2D(real_t p_rot, const Vector2 &amp; p_pos) : void</text><ellipse cx="2808" cy="1024.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="2817" y="1027.7886">Transform2D() : void</text><!--MD5=[bdf481e0258441d9ea4c4f618bd16c94]
class C_0001858199404643284193--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44" target="_top" title="StringName" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44" xlink:show="new" xlink:title="StringName" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6o5ytppycvup)" height="444.9453" id="C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.5;" width="346" x="4270" y="1632.9531"/><ellipse cx="4402.25" cy="1648.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4405.2188,1654.5938 Q4404.6406,1654.8906 4404,1655.0313 Q4403.3594,1655.1875 4402.6563,1655.1875 Q4400.1563,1655.1875 4398.8281,1653.5469 Q4397.5156,1651.8906 4397.5156,1648.7656 Q4397.5156,1645.6406 4398.8281,1643.9844 Q4400.1563,1642.3281 4402.6563,1642.3281 Q4403.3594,1642.3281 4404,1642.4844 Q4404.6563,1642.6406 4405.2188,1642.9375 L4405.2188,1645.6563 Q4404.5938,1645.0781 4404,1644.8125 Q4403.4063,1644.5313 4402.7813,1644.5313 Q4401.4375,1644.5313 4400.75,1645.6094 Q4400.0625,1646.6719 4400.0625,1648.7656 Q4400.0625,1650.8594 4400.75,1651.9375 Q4401.4375,1653 4402.7813,1653 Q4403.4063,1653 4404,1652.7344 Q4404.5938,1652.4531 4405.2188,1651.875 L4405.2188,1654.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="4422.75" y="1653.1074">StringName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4271" x2="4615" y1="1664.9531" y2="1664.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L73" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L73" xlink:show="new" xlink:title="_data" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4276" y="1670.9531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1672.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L73" target="_top" title="_data" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L73" xlink:show="new" xlink:title="_data" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4290" y="1679.1636">_data : StringName::_Data *</text></a><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1685.7578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4290" y="1691.9683">STRING_TABLE_BITS : enum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1698.5625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4290" y="1704.7729">STRING_TABLE_LEN : enum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1711.3672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4290" y="1717.5776">STRING_TABLE_MASK : enum</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L71" target="_top" title="_table" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L71" xlink:show="new" xlink:title="_table" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4276" y="1722.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1724.1719"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L71" target="_top" title="_table" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L71" xlink:show="new" xlink:title="_table" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="4290" y="1730.3823">_table : StringName::_Data *[4096]</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L85" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L85" xlink:show="new" xlink:title="lock" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4276" y="1734.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1736.9766"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L85" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L85" xlink:show="new" xlink:title="lock" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="67" x="4290" y="1743.187">lock : Mutex</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L88" target="_top" title="configured" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L88" xlink:show="new" xlink:title="configured" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4276" y="1747.7813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1749.7813"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L88" target="_top" title="configured" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L88" xlink:show="new" xlink:title="configured" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="96" x="4290" y="1755.9917">configured : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4271" x2="4615" y1="1762.5859" y2="1762.5859"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1770.5859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4290" y="1776.7964">unref() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1783.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="75" x="4290" y="1789.6011">setup() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1796.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="87" x="4290" y="1802.4058">cleanup() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4278" y="1809"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="4290" y="1815.2104">StringName(StringName::_Data * p_data) : void</text><ellipse cx="4281" cy="1824.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="4290" y="1828.0151">operator const void *() const : const void *</text><ellipse cx="4281" cy="1837.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="4290" y="1840.8198">operator==(const String &amp; p_name) const : bool</text><ellipse cx="4281" cy="1850.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="4290" y="1853.6245">operator==(const char * p_name) const : bool</text><ellipse cx="4281" cy="1863.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4290" y="1866.4292">operator!=(const String &amp; p_name) const : bool</text><ellipse cx="4281" cy="1876.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4290" y="1879.2339">operator&lt;(const StringName &amp; p_name) const : bool</text><ellipse cx="4281" cy="1888.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="4290" y="1892.0386">operator==(const StringName &amp; p_name) const : bool</text><ellipse cx="4281" cy="1901.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4290" y="1904.8433">hash() const : uint32_t</text><ellipse cx="4281" cy="1914.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="4290" y="1917.6479">data_unique_pointer() const : const void *</text><ellipse cx="4281" cy="1927.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="4290" y="1930.4526">operator!=(const StringName &amp; p_name) const : bool</text><ellipse cx="4281" cy="1940.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4290" y="1943.2573">operator String() const : String</text><ellipse cx="4281" cy="1952.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="245" x="4290" y="1956.062">search(const char * p_name) : StringName</text><ellipse cx="4281" cy="1965.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="4290" y="1968.8667">search(const CharType * p_name) : StringName</text><ellipse cx="4281" cy="1978.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="4290" y="1981.6714">search(const String &amp; p_name) : StringName</text><ellipse cx="4281" cy="1991.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="4290" y="1994.4761">operator=(const StringName &amp; p_name) : void</text><ellipse cx="4281" cy="2004.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="4290" y="2007.2808">StringName(const char * p_name) : void</text><ellipse cx="4281" cy="2016.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="4290" y="2020.0854">StringName(const StringName &amp; p_name) : void</text><ellipse cx="4281" cy="2029.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4290" y="2032.8901">StringName(const String &amp; p_name) : void</text><ellipse cx="4281" cy="2042.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="4290" y="2045.6948">StringName(const StaticCString &amp; p_static_string) : void</text><ellipse cx="4281" cy="2055.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4290" y="2058.4995">StringName() : void</text><ellipse cx="4281" cy="2068.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4290" y="2071.3042">~StringName() : void</text><!--MD5=[cefc1761acd014682fb46e6592f2db8a]
class C_0000104564426296396960--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94" target="_top" title="ClassDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94" xlink:show="new" xlink:title="ClassDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6o5ytppycvup)" height="1046.7656" id="C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.5;" width="1563" x="2269" y="1445.9531"/><ellipse cx="3021.25" cy="1461.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3024.2188,1467.5938 Q3023.6406,1467.8906 3023,1468.0313 Q3022.3594,1468.1875 3021.6563,1468.1875 Q3019.1563,1468.1875 3017.8281,1466.5469 Q3016.5156,1464.8906 3016.5156,1461.7656 Q3016.5156,1458.6406 3017.8281,1456.9844 Q3019.1563,1455.3281 3021.6563,1455.3281 Q3022.3594,1455.3281 3023,1455.4844 Q3023.6563,1455.6406 3024.2188,1455.9375 L3024.2188,1458.6563 Q3023.5938,1458.0781 3023,1457.8125 Q3022.4063,1457.5313 3021.7813,1457.5313 Q3020.4375,1457.5313 3019.75,1458.6094 Q3019.0625,1459.6719 3019.0625,1461.7656 Q3019.0625,1463.8594 3019.75,1464.9375 Q3020.4375,1466 3021.7813,1466 Q3022.4063,1466 3023,1465.7344 Q3023.5938,1465.4531 3024.2188,1464.875 L3024.2188,1467.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="3041.75" y="1466.1074">ClassDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="3831" y1="1477.9531" y2="1477.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" xlink:show="new" xlink:title="lock" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1483.9531"/><ellipse cx="2280" cy="1488.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" xlink:show="new" xlink:title="lock" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="75" x="2289" y="1492.1636">lock : RWLock</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" target="_top" title="classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" xlink:show="new" xlink:title="classes" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1496.7578"/><ellipse cx="2280" cy="1501.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" target="_top" title="classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" xlink:show="new" xlink:title="classes" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="306" x="2289" y="1504.9683">classes : HashMap&lt;StringName,ClassDB::ClassInfo&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" target="_top" title="resource_base_extensions" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" xlink:show="new" xlink:title="resource_base_extensions" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1509.5625"/><ellipse cx="2280" cy="1514.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" target="_top" title="resource_base_extensions" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" xlink:show="new" xlink:title="resource_base_extensions" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="373" x="2289" y="1517.7729">resource_base_extensions : HashMap&lt;StringName,StringName&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" target="_top" title="compat_classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" xlink:show="new" xlink:title="compat_classes" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1522.3672"/><ellipse cx="2280" cy="1527.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" target="_top" title="compat_classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" xlink:show="new" xlink:title="compat_classes" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="312" x="2289" y="1530.5776">compat_classes : HashMap&lt;StringName,StringName&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" target="_top" title="current_api" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" xlink:show="new" xlink:title="current_api" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1535.1719"/><ellipse cx="2280" cy="1540.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" target="_top" title="current_api" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" xlink:show="new" xlink:title="current_api" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="2289" y="1543.3823">current_api : ClassDB::APIType</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" target="_top" title="default_values" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" xlink:show="new" xlink:title="default_values" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1547.9766"/><ellipse cx="2280" cy="1552.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" target="_top" title="default_values" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" xlink:show="new" xlink:title="default_values" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="416" x="2289" y="1556.187">default_values : HashMap&lt;StringName,HashMap&lt;StringName,Variant&gt;&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" target="_top" title="default_values_cached" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" xlink:show="new" xlink:title="default_values_cached" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2275" y="1560.7813"/><ellipse cx="2280" cy="1565.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" target="_top" title="default_values_cached" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" xlink:show="new" xlink:title="default_values_cached" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="244" x="2289" y="1568.9917">default_values_cached : Set&lt;StringName&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2270" x2="3831" y1="1575.5859" y2="1575.5859"/><ellipse cx="2280" cy="1586.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="856" x="2289" y="1589.7964">bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition &amp; method_name, const Variant ** p_defs, int p_defcount) : MethodBind *</text><ellipse cx="2280" cy="1599.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="460" x="2289" y="1602.6011">_add_class2(const StringName &amp; p_class, const StringName &amp; p_inherits) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="1609.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="353" x="2289" y="1615.4058">_get_parent_class(const StringName &amp; p_class) : StringName</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2277" y="1622"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="486" x="2289" y="1628.2104">_is_parent_class(const StringName &amp; p_class, const StringName &amp; p_inherits) : bool</text><ellipse cx="2280" cy="1637.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="296" x="2289" y="1641.0151">get_class_list(List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="2280" cy="1650.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="538" x="2289" y="1653.8198">get_inheriters_from_class(const StringName &amp; p_class, List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="2280" cy="1663.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="576" x="2289" y="1666.6245">get_direct_inheriters_from_class(const StringName &amp; p_class, List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="2280" cy="1676.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="399" x="2289" y="1679.4292">get_parent_class_nocheck(const StringName &amp; p_class) : StringName</text><ellipse cx="2280" cy="1689.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="347" x="2289" y="1692.2339">get_parent_class(const StringName &amp; p_class) : StringName</text><ellipse cx="2280" cy="1701.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="2289" y="1705.0386">class_exists(const StringName &amp; p_class) : bool</text><ellipse cx="2280" cy="1714.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="480" x="2289" y="1717.8433">is_parent_class(const StringName &amp; p_class, const StringName &amp; p_inherits) : bool</text><ellipse cx="2280" cy="1727.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="2289" y="1730.6479">can_instance(const StringName &amp; p_class) : bool</text><ellipse cx="2280" cy="1740.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="2289" y="1743.4526">instance(const StringName &amp; p_class) : Object *</text><ellipse cx="2280" cy="1753.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="354" x="2289" y="1756.2573">get_api_type(const StringName &amp; p_class) : ClassDB::APIType</text><ellipse cx="2280" cy="1765.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="2289" y="1769.062">get_api_hash(ClassDB::APIType p_api) : uint64_t</text><ellipse cx="2280" cy="1778.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="388" x="2289" y="1781.8667">add_signal(StringName p_class, const MethodInfo &amp; p_signal) : void</text><ellipse cx="2280" cy="1791.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="345" x="2289" y="1794.6714">has_signal(StringName p_class, StringName p_signal) : bool</text><ellipse cx="2280" cy="1804.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="471" x="2289" y="1807.4761">get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool</text><ellipse cx="2280" cy="1817.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="591" x="2289" y="1820.2808">get_signal_list(StringName p_class, List&lt;MethodInfo&gt; * p_signals, bool p_no_inheritance = false) : void</text><ellipse cx="2280" cy="1829.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="578" x="2289" y="1833.0854">add_property_group(StringName p_class, const String &amp; p_name, const String &amp; p_prefix = "") : void</text><ellipse cx="2280" cy="1842.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="850" x="2289" y="1845.8901">add_property(StringName p_class, const PropertyInfo &amp; p_pinfo, const StringName &amp; p_setter, const StringName &amp; p_getter, int p_index = -1) : void</text><ellipse cx="2280" cy="1855.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="636" x="2289" y="1858.6948">set_property_default_value(StringName p_class, const StringName &amp; p_name, const Variant &amp; p_default) : void</text><ellipse cx="2280" cy="1868.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="792" x="2289" y="1871.4995">get_property_list(StringName p_class, List&lt;PropertyInfo&gt; * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void</text><ellipse cx="2280" cy="1881.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="678" x="2289" y="1884.3042">set_property(Object * p_object, const StringName &amp; p_property, const Variant &amp; p_value, bool * r_valid = __null) : bool</text><ellipse cx="2280" cy="1893.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="509" x="2289" y="1897.1089">get_property(Object * p_object, const StringName &amp; p_property, Variant &amp; r_value) : bool</text><ellipse cx="2280" cy="1906.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="648" x="2289" y="1909.9136">has_property(const StringName &amp; p_class, const StringName &amp; p_property, bool p_no_inheritance = false) : bool</text><ellipse cx="2280" cy="1919.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="642" x="2289" y="1922.7183">get_property_index(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_is_valid = __null) : int</text><ellipse cx="2280" cy="1932.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="697" x="2289" y="1935.5229">get_property_type(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_is_valid = __null) : Variant::Type</text><ellipse cx="2280" cy="1945.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="502" x="2289" y="1948.3276">get_property_setter(StringName p_class, const StringName &amp; p_property) : StringName</text><ellipse cx="2280" cy="1957.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="502" x="2289" y="1961.1323">get_property_getter(StringName p_class, const StringName &amp; p_property) : StringName</text><ellipse cx="2280" cy="1970.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="540" x="2289" y="1973.937">has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool</text><ellipse cx="2280" cy="1983.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="460" x="2289" y="1986.7417">set_method_flags(StringName p_class, StringName p_method, int p_flags) : void</text><ellipse cx="2280" cy="1996.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="844" x="2289" y="1999.5464">get_method_list(StringName p_class, List&lt;MethodInfo&gt; * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void</text><ellipse cx="2280" cy="2009.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="401" x="2289" y="2012.3511">get_method(StringName p_class, StringName p_name) : MethodBind *</text><ellipse cx="2280" cy="2021.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="620" x="2289" y="2025.1558">add_virtual_method(const StringName &amp; p_class, const MethodInfo &amp; p_method, bool p_virtual = true) : void</text><ellipse cx="2280" cy="2034.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="683" x="2289" y="2037.9604">get_virtual_methods(const StringName &amp; p_class, List&lt;MethodInfo&gt; * p_methods, bool p_no_inheritance = false) : void</text><ellipse cx="2280" cy="2047.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="765" x="2289" y="2050.7651">bind_integer_constant(const StringName &amp; p_class, const StringName &amp; p_enum, const StringName &amp; p_name, int p_constant) : void</text><ellipse cx="2280" cy="2060.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="688" x="2289" y="2063.5698">get_integer_constant_list(const StringName &amp; p_class, List&lt;String&gt; * p_constants, bool p_no_inheritance = false) : void</text><ellipse cx="2280" cy="2073.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="644" x="2289" y="2076.3745">get_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name, bool * p_success = __null) : int</text><ellipse cx="2280" cy="2085.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="757" x="2289" y="2089.1792">get_integer_constant_enum(const StringName &amp; p_class, const StringName &amp; p_name, bool p_no_inheritance = false) : StringName</text><ellipse cx="2280" cy="2098.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="641" x="2289" y="2101.9839">get_enum_list(const StringName &amp; p_class, List&lt;StringName&gt; * p_enums, bool p_no_inheritance = false) : void</text><ellipse cx="2280" cy="2111.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="870" x="2289" y="2114.7886">get_enum_constants(const StringName &amp; p_class, const StringName &amp; p_enum, List&lt;StringName&gt; * p_constants, bool p_no_inheritance = false) : void</text><ellipse cx="2280" cy="2124.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="733" x="2289" y="2127.5933">class_get_default_property_value(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_valid = __null) : Variant</text><ellipse cx="2280" cy="2137.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="321" x="2289" y="2140.3979">get_category(const StringName &amp; p_node) : StringName</text><ellipse cx="2280" cy="2149.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="349" x="2289" y="2153.2026">set_class_enabled(StringName p_class, bool p_enable) : void</text><ellipse cx="2280" cy="2162.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="255" x="2289" y="2166.0073">is_class_enabled(StringName p_class) : bool</text><ellipse cx="2280" cy="2175.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="2289" y="2178.812">is_class_exposed(StringName p_class) : bool</text><ellipse cx="2280" cy="2188.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="575" x="2289" y="2191.6167">add_resource_base_extension(const StringName &amp; p_extension, const StringName &amp; p_class) : void</text><ellipse cx="2280" cy="2201.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="381" x="2289" y="2204.4214">get_resource_base_extensions(List&lt;String&gt; * p_extensions) : void</text><ellipse cx="2280" cy="2214.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="513" x="2289" y="2217.2261">get_extensions_for_type(const StringName &amp; p_class, List&lt;String&gt; * p_extensions) : void</text><ellipse cx="2280" cy="2226.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="524" x="2289" y="2230.0308">add_compatibility_class(const StringName &amp; p_class, const StringName &amp; p_fallback) : void</text><ellipse cx="2280" cy="2239.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="265" x="2289" y="2242.8354">set_current_api(ClassDB::APIType p_api) : void</text><ellipse cx="2280" cy="2252.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="2289" y="2255.6401">get_current_api() : ClassDB::APIType</text><ellipse cx="2280" cy="2265.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="2289" y="2268.4448">cleanup_defaults() : void</text><ellipse cx="2280" cy="2278.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="87" x="2289" y="2281.2495">cleanup() : void</text><ellipse cx="2280" cy="2290.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="2289" y="2294.0542">creator&lt;T&gt;() : class Object *</text><ellipse cx="2280" cy="2303.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="131" x="2289" y="2306.8589">_add_class&lt;T&gt;() : void</text><ellipse cx="2280" cy="2316.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="2289" y="2319.6636">register_class&lt;T&gt;() : void</text><ellipse cx="2280" cy="2329.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="190" x="2289" y="2332.4683">register_virtual_class&lt;T&gt;() : void</text><ellipse cx="2280" cy="2342.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="219" x="2289" y="2345.2729">_create_ptr_func&lt;T&gt;() : class Object *</text><ellipse cx="2280" cy="2354.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="251" x="2289" y="2358.0776">register_custom_instance_class&lt;T&gt;() : void</text><ellipse cx="2280" cy="2367.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="425" x="2289" y="2370.8823">bind_method&lt;N,M&gt;(N p_method_name, M p_method) : class MethodBind *</text><ellipse cx="2280" cy="2380.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="564" x="2289" y="2383.687">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1) : class MethodBind *</text><ellipse cx="2280" cy="2393.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="703" x="2289" y="2396.4917">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2) : class MethodBind *</text><ellipse cx="2280" cy="2406.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="842" x="2289" y="2409.2964">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3) : class MethodBind *</text><ellipse cx="2280" cy="2418.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="981" x="2289" y="2422.1011">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4) : class MethodBind *</text><ellipse cx="2280" cy="2431.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1120" x="2289" y="2434.9058">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5) : class MethodBind *</text><ellipse cx="2280" cy="2444.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1259" x="2289" y="2447.7104">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6) : class MethodBind *</text><ellipse cx="2280" cy="2457.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1398" x="2289" y="2460.5151">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6, const Variant &amp; p_def7) : class MethodBind *</text><ellipse cx="2280" cy="2470.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1537" x="2289" y="2473.3198">bind_method&lt;N,M&gt;(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6, const Variant &amp; p_def7, const Variant &amp; p_def8) : class MethodBind *</text><ellipse cx="2280" cy="2482.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1370" x="2289" y="2486.1245">bind_vararg_method&lt;M&gt;(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo &amp; p_info = MethodInfo(), const Vector&lt;Variant&gt; &amp; p_default_args = Vector&lt;Variant&gt;(), bool p_return_nil_is_variant = true) : class MethodBind *</text><!--MD5=[eb192d77dba9a1188ad367651d748528]
class C_0002074383603489565895--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L165" target="_top" title="CanvasItem" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L165" xlink:show="new" xlink:title="CanvasItem" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6o5ytppycvup)" height="2019.9219" id="C_0002074383603489565895" style="stroke: #A80036; stroke-width: 1.5;" width="1572" x="6" y="91.4531"/><ellipse cx="751.75" cy="107.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M751.8594,102.7969 L750.7031,107.875 L753.0313,107.875 L751.8594,102.7969 Z M750.375,100.5625 L753.3594,100.5625 L756.7188,112.9531 L754.2656,112.9531 L753.5,109.8906 L750.2188,109.8906 L749.4688,112.9531 L747.0313,112.9531 L750.375,100.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="772.25" y="111.6074">CanvasItem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="1577" y1="123.4531" y2="123.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="131.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="137.6636">_class_name : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L181" target="_top" title="xform_change" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L181" xlink:show="new" xlink:title="xform_change" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="142.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="144.2578"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L181" target="_top" title="xform_change" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L181" xlink:show="new" xlink:title="xform_change" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="26" y="150.4683">xform_change : SelfList&lt;Node&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L183" target="_top" title="canvas_item" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L183" xlink:show="new" xlink:title="canvas_item" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="155.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="157.0625"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L183" target="_top" title="canvas_item" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L183" xlink:show="new" xlink:title="canvas_item" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="163.2729">canvas_item : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L184" target="_top" title="group" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L184" xlink:show="new" xlink:title="group" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="167.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="169.8672"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L184" target="_top" title="group" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L184" xlink:show="new" xlink:title="group" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="26" y="176.0776">group : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L186" target="_top" title="canvas_layer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L186" xlink:show="new" xlink:title="canvas_layer" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="180.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="182.6719"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L186" target="_top" title="canvas_layer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L186" xlink:show="new" xlink:title="canvas_layer" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="188.8823">canvas_layer : CanvasLayer *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L188" target="_top" title="modulate" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L188" xlink:show="new" xlink:title="modulate" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="193.4766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="195.4766"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L188" target="_top" title="modulate" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L188" xlink:show="new" xlink:title="modulate" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26" y="201.687">modulate : Color</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L189" target="_top" title="self_modulate" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L189" xlink:show="new" xlink:title="self_modulate" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="206.2813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="208.2813"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L189" target="_top" title="self_modulate" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L189" xlink:show="new" xlink:title="self_modulate" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26" y="214.4917">self_modulate : Color</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L191" target="_top" title="children_items" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L191" xlink:show="new" xlink:title="children_items" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="219.0859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="221.0859"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L191" target="_top" title="children_items" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L191" xlink:show="new" xlink:title="children_items" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="26" y="227.2964">children_items : List&lt;CanvasItem *&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L192" target="_top" title="C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L192" xlink:show="new" xlink:title="C" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="231.8906"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="233.8906"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L192" target="_top" title="C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L192" xlink:show="new" xlink:title="C" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="26" y="240.1011">C : List&lt;CanvasItem *&gt;::Element *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L194" target="_top" title="light_mask" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L194" xlink:show="new" xlink:title="light_mask" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="244.6953"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="246.6953"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L194" target="_top" title="light_mask" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L194" xlink:show="new" xlink:title="light_mask" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="26" y="252.9058">light_mask : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L196" target="_top" title="first_draw" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L196" xlink:show="new" xlink:title="first_draw" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="257.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="259.5"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L196" target="_top" title="first_draw" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L196" xlink:show="new" xlink:title="first_draw" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="265.7104">first_draw : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L197" target="_top" title="visible" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L197" xlink:show="new" xlink:title="visible" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="270.3047"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="272.3047"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L197" target="_top" title="visible" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L197" xlink:show="new" xlink:title="visible" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="26" y="278.5151">visible : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L198" target="_top" title="pending_update" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L198" xlink:show="new" xlink:title="pending_update" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="283.1094"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="285.1094"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L198" target="_top" title="pending_update" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L198" xlink:show="new" xlink:title="pending_update" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="291.3198">pending_update : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L199" target="_top" title="toplevel" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L199" xlink:show="new" xlink:title="toplevel" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="295.9141"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="297.9141"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L199" target="_top" title="toplevel" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L199" xlink:show="new" xlink:title="toplevel" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="26" y="304.1245">toplevel : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L200" target="_top" title="drawing" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L200" xlink:show="new" xlink:title="drawing" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="308.7188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="310.7188"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L200" target="_top" title="drawing" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L200" xlink:show="new" xlink:title="drawing" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26" y="316.9292">drawing : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L201" target="_top" title="block_transform_notify" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L201" xlink:show="new" xlink:title="block_transform_notify" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="321.5234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="323.5234"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L201" target="_top" title="block_transform_notify" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L201" xlink:show="new" xlink:title="block_transform_notify" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="329.7339">block_transform_notify : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L202" target="_top" title="behind" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L202" xlink:show="new" xlink:title="behind" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="334.3281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="336.3281"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L202" target="_top" title="behind" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L202" xlink:show="new" xlink:title="behind" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="26" y="342.5386">behind : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L203" target="_top" title="use_parent_material" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L203" xlink:show="new" xlink:title="use_parent_material" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="347.1328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="349.1328"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L203" target="_top" title="use_parent_material" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L203" xlink:show="new" xlink:title="use_parent_material" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="355.3433">use_parent_material : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L204" target="_top" title="notify_local_transform" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L204" xlink:show="new" xlink:title="notify_local_transform" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="359.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="361.9375"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L204" target="_top" title="notify_local_transform" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L204" xlink:show="new" xlink:title="notify_local_transform" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="26" y="368.1479">notify_local_transform : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L205" target="_top" title="notify_transform" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L205" xlink:show="new" xlink:title="notify_transform" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="372.7422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="374.7422"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L205" target="_top" title="notify_transform" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L205" xlink:show="new" xlink:title="notify_transform" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="26" y="380.9526">notify_transform : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L207" target="_top" title="material" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L207" xlink:show="new" xlink:title="material" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="385.5469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="387.5469"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L207" target="_top" title="material" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L207" xlink:show="new" xlink:title="material" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="393.7573">material : Ref&lt;Material&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L209" target="_top" title="global_transform" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L209" xlink:show="new" xlink:title="global_transform" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="398.3516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="400.3516"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L209" target="_top" title="global_transform" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L209" xlink:show="new" xlink:title="global_transform" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="406.562">global_transform : Transform2D</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L210" target="_top" title="global_invalid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L210" xlink:show="new" xlink:title="global_invalid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="411.1563"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="413.1563"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L210" target="_top" title="global_invalid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L210" xlink:show="new" xlink:title="global_invalid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="26" y="419.3667">global_invalid : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L226" target="_top" title="current_item_drawn" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L226" xlink:show="new" xlink:title="current_item_drawn" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="423.9609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="425.9609"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L226" target="_top" title="current_item_drawn" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L226" xlink:show="new" xlink:title="current_item_drawn" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="26" y="432.1714">current_item_drawn : CanvasItem *</text></a><ellipse cx="17" cy="441.7656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="26" y="444.9761">NOTIFICATION_TRANSFORM_CHANGED : enum</text><ellipse cx="17" cy="454.5703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="26" y="457.7808">NOTIFICATION_DRAW : enum</text><ellipse cx="17" cy="467.375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="26" y="470.5854">NOTIFICATION_VISIBILITY_CHANGED : enum</text><ellipse cx="17" cy="480.1797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="26" y="483.3901">NOTIFICATION_ENTER_CANVAS : enum</text><ellipse cx="17" cy="492.9844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="26" y="496.1948">NOTIFICATION_EXIT_CANVAS : enum</text><ellipse cx="17" cy="505.7891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="26" y="508.9995">NOTIFICATION_LOCAL_TRANSFORM_CHANGED : enum</text><ellipse cx="17" cy="518.5938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="26" y="521.8042">NOTIFICATION_WORLD_2D_CHANGED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="1577" y1="528.3984" y2="528.3984"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="536.3984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26" y="542.6089">operator=(const CanvasItem &amp; p_rval) : void</text><ellipse cx="17" cy="552.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="555.4136">get_class() const : String</text><ellipse cx="17" cy="565.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26" y="568.2183">_get_class_namev() const : const StringName *</text><ellipse cx="17" cy="577.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26" y="581.0229">get_class_ptr_static() : void *</text><ellipse cx="17" cy="590.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26" y="593.8276">get_class_static() : String</text><ellipse cx="17" cy="603.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26" y="606.6323">get_parent_class_static() : String</text><ellipse cx="17" cy="616.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26" y="619.437">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="17" cy="629.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26" y="632.2417">get_category_static() : String</text><ellipse cx="17" cy="641.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26" y="645.0464">inherits_static() : String</text><ellipse cx="17" cy="654.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26" y="657.8511">is_class(const String &amp; p_class) const : bool</text><ellipse cx="17" cy="667.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26" y="670.6558">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="17" cy="680.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26" y="683.4604">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><polygon fill="#FFFF44" points="17,688.0547,21,692.0547,17,696.0547,13,692.0547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="26" y="696.2651">_get_bind_methods() : void (*)()</text><ellipse cx="17" cy="705.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26" y="709.0698">initialize_class() : void</text><polygon fill="#FFFF44" points="17,713.6641,21,717.6641,17,721.6641,13,717.6641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="26" y="721.8745">_initialize_classv() : void</text><polygon fill="#FFFF44" points="17,726.4688,21,730.4688,17,734.4688,13,730.4688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="26" y="734.6792">_get_get() const : bool (Object::*)(const StringName &amp;,Variant &amp;) const</text><polygon fill="#FFFF44" points="17,739.2734,21,743.2734,17,747.2734,13,743.2734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="26" y="747.4839">_getv(const StringName &amp; p_name, Variant &amp; r_ret) const : bool</text><polygon fill="#FFFF44" points="17,752.0781,21,756.0781,17,760.0781,13,756.0781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="26" y="760.2886">_get_set() const : bool (Object::*)(const StringName &amp;,const Variant &amp;)</text><polygon fill="#FFFF44" points="17,764.8828,21,768.8828,17,772.8828,13,768.8828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="26" y="773.0933">_setv(const StringName &amp; p_name, const Variant &amp; p_property) : bool</text><polygon fill="#FFFF44" points="17,777.6875,21,781.6875,17,785.6875,13,781.6875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="26" y="785.8979">_get_get_property_list() const : void (Object::*)(List&lt;PropertyInfo&gt; *) const</text><polygon fill="#FFFF44" points="17,790.4922,21,794.4922,17,798.4922,13,794.4922" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="26" y="798.7026">_get_property_listv(List&lt;PropertyInfo&gt; * p_list, bool p_reversed) const : void</text><polygon fill="#FFFF44" points="17,803.2969,21,807.2969,17,811.2969,13,807.2969" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="26" y="811.5073">_get_notification() const : void (Object::*)(int)</text><polygon fill="#FFFF44" points="17,816.1016,21,820.1016,17,824.1016,13,820.1016" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="26" y="824.312">_notificationv(int p_notification, bool p_reversed) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="830.9063"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="26" y="837.1167">_toplevel_raise_self() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="843.7109"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="26" y="849.9214">_propagate_visibility_changed(bool p_visible) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="856.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="862.7261">_update_callback() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="869.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="26" y="875.5308">_enter_canvas() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="882.125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="888.3354">_exit_canvas() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="894.9297"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="26" y="901.1401">_notify_transform(CanvasItem * p_node) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="907.7344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="26" y="913.9448">_set_on_top(bool p_on_top) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="920.5391"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="926.7495">_is_on_top() const : bool</text><polygon fill="#FFFF44" points="17,931.3438,21,935.3438,17,939.3438,13,935.3438" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="939.5542">_notify_transform() : void</text><polygon fill="#FFFF44" points="17,944.1484,21,948.1484,17,952.1484,13,948.1484" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="26" y="952.3589">item_rect_changed(bool p_size_changed = true) : void</text><polygon fill="#FFFF44" points="17,956.9531,21,960.9531,17,964.9531,13,960.9531" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="965.1636">_notification(int p_what) : void</text><polygon fill="#FFFF44" points="17,969.7578,21,973.7578,17,977.7578,13,973.7578" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="26" y="977.9683">_bind_methods() : void</text><ellipse cx="17" cy="987.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="26" y="990.7729">_edit_is_selected_on_click(const Point2 &amp; p_point, double p_tolerance) const : bool</text><ellipse cx="17" cy="1000.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="26" y="1003.5776">_edit_set_state(const Dictionary &amp; p_state) : void</text><ellipse cx="17" cy="1013.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="26" y="1016.3823">_edit_get_state() const : Dictionary</text><ellipse cx="17" cy="1025.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="311" x="26" y="1029.187">_edit_set_position(const Point2 &amp; p_position) = 0 : void</text><ellipse cx="17" cy="1038.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="214" x="26" y="1041.9917">_edit_get_position() const = 0 : Point2</text><ellipse cx="17" cy="1051.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="26" y="1054.7964">_edit_set_scale(const Size2 &amp; p_scale) = 0 : void</text><ellipse cx="17" cy="1064.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="1067.6011">_edit_get_scale() const = 0 : Size2</text><ellipse cx="17" cy="1077.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="1080.4058">_edit_use_rotation() const : bool</text><ellipse cx="17" cy="1090" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="26" y="1093.2104">_edit_set_rotation(float p_rotation) : void</text><ellipse cx="17" cy="1102.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="26" y="1106.0151">_edit_get_rotation() const : float</text><ellipse cx="17" cy="1115.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="26" y="1118.8198">_edit_use_rect() const : bool</text><ellipse cx="17" cy="1128.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="26" y="1131.6245">_edit_set_rect(const Rect2 &amp; p_rect) : void</text><ellipse cx="17" cy="1141.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="1144.4292">_edit_get_rect() const : Rect2</text><ellipse cx="17" cy="1154.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="26" y="1157.2339">_edit_get_minimum_size() const : Size2</text><ellipse cx="17" cy="1166.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="1170.0386">_edit_use_pivot() const : bool</text><ellipse cx="17" cy="1179.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26" y="1182.8433">_edit_set_pivot(const Point2 &amp; p_pivot) : void</text><ellipse cx="17" cy="1192.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="26" y="1195.6479">_edit_get_pivot() const : Point2</text><ellipse cx="17" cy="1205.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="26" y="1208.4526">_edit_get_transform() const : Transform2D</text><ellipse cx="17" cy="1218.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="26" y="1221.2573">set_visible(bool p_visible) : void</text><ellipse cx="17" cy="1230.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26" y="1234.062">is_visible() const : bool</text><ellipse cx="17" cy="1243.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="26" y="1246.8667">is_visible_in_tree() const : bool</text><ellipse cx="17" cy="1256.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="26" y="1259.6714">show() : void</text><ellipse cx="17" cy="1269.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="26" y="1272.4761">hide() : void</text><ellipse cx="17" cy="1282.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="1285.2808">update() : void</text><ellipse cx="17" cy="1294.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="26" y="1298.0854">set_light_mask(int p_light_mask) : void</text><ellipse cx="17" cy="1307.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="26" y="1310.8901">get_light_mask() const : int</text><ellipse cx="17" cy="1320.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="26" y="1323.6948">set_modulate(const Color &amp; p_modulate) : void</text><ellipse cx="17" cy="1333.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="26" y="1336.4995">get_modulate() const : Color</text><ellipse cx="17" cy="1346.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="26" y="1349.3042">set_self_modulate(const Color &amp; p_self_modulate) : void</text><ellipse cx="17" cy="1358.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="1362.1089">get_self_modulate() const : Color</text><ellipse cx="17" cy="1371.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="748" x="26" y="1374.9136">draw_line(const Point2 &amp; p_from, const Point2 &amp; p_to, const Color &amp; p_color, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1384.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="713" x="26" y="1387.7183">draw_polyline(const Vector&lt;Point2&gt; &amp; p_points, const Color &amp; p_color, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1397.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="815" x="26" y="1400.5229">draw_polyline_colors(const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1410.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1055" x="26" y="1413.3276">draw_arc(const Vector2 &amp; p_center, float p_radius, float p_start_angle, float p_end_angle, int p_point_count, const Color &amp; p_color, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1422.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="718" x="26" y="1426.1323">draw_multiline(const Vector&lt;Point2&gt; &amp; p_points, const Color &amp; p_color, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1435.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="820" x="26" y="1438.937">draw_multiline_colors(const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1448.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="737" x="26" y="1451.7417">draw_rect(const Rect2 &amp; p_rect, const Color &amp; p_color, bool p_filled = true, float p_width = 1.0, bool p_antialiased = false) : void</text><ellipse cx="17" cy="1461.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="26" y="1464.5464">draw_circle(const Point2 &amp; p_pos, float p_radius, const Color &amp; p_color) : void</text><ellipse cx="17" cy="1474.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1024" x="26" y="1477.3511">draw_texture(const Ref&lt;Texture&gt; &amp; p_texture, const Point2 &amp; p_pos, const Color &amp; p_modulate = Color(1, 1, 1, 1), const Ref&lt;Texture&gt; &amp; p_normal_map = Ref&lt;Texture&gt;()) : void</text><ellipse cx="17" cy="1486.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1297" x="26" y="1490.1558">draw_texture_rect(const Ref&lt;Texture&gt; &amp; p_texture, const Rect2 &amp; p_rect, bool p_tile = false, const Color &amp; p_modulate = Color(1, 1, 1), bool p_transpose = false, const Ref&lt;Texture&gt; &amp; p_normal_map = Ref&lt;Texture&gt;()) : void</text><ellipse cx="17" cy="1499.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1511" x="26" y="1502.9604">draw_texture_rect_region(const Ref&lt;Texture&gt; &amp; p_texture, const Rect2 &amp; p_rect, const Rect2 &amp; p_src_rect, const Color &amp; p_modulate = Color(1, 1, 1), bool p_transpose = false, const Ref&lt;Texture&gt; &amp; p_normal_map = Ref&lt;Texture&gt;(), bool p_clip_uv = false) : void</text><ellipse cx="17" cy="1512.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="26" y="1515.7651">draw_style_box(const Ref&lt;StyleBox&gt; &amp; p_style_box, const Rect2 &amp; p_rect) : void</text><ellipse cx="17" cy="1525.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1385" x="26" y="1528.5698">draw_primitive(const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs, Ref&lt;Texture&gt; p_texture = = Ref&lt;Texture&gt;(), float p_width = 1, const Ref&lt;Texture&gt; &amp; p_normal_map = Ref&lt;Texture&gt;()) : void</text><ellipse cx="17" cy="1538.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1546" x="26" y="1541.3745">draw_polygon(const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs = Vector&lt;Point2&gt;(), Ref&lt;Texture&gt; p_texture = = Ref&lt;Texture&gt;(), const Ref&lt;Texture&gt; &amp; p_normal_map = Ref&lt;Texture&gt;(), bool p_antialiased = false) : void</text><ellipse cx="17" cy="1550.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1533" x="26" y="1554.1792">draw_colored_polygon(const Vector&lt;Point2&gt; &amp; p_points, const Color &amp; p_color, const Vector&lt;Point2&gt; &amp; p_uvs = Vector&lt;Point2&gt;(), Ref&lt;Texture&gt; p_texture = = Ref&lt;Texture&gt;(), const Ref&lt;Texture&gt; &amp; p_normal_map = Ref&lt;Texture&gt;(), bool p_antialiased = false) : void</text><ellipse cx="17" cy="1563.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1245" x="26" y="1566.9839">draw_mesh(const Ref&lt;Mesh&gt; &amp; p_mesh, const Ref&lt;Texture&gt; &amp; p_texture, const Ref&lt;Texture&gt; &amp; p_normal_map, const Transform2D &amp; p_transform = Transform2D(), const Color &amp; p_modulate = Color(1, 1, 1)) : void</text><ellipse cx="17" cy="1576.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="772" x="26" y="1579.7886">draw_multimesh(const Ref&lt;MultiMesh&gt; &amp; p_multimesh, const Ref&lt;Texture&gt; &amp; p_texture, const Ref&lt;Texture&gt; &amp; p_normal_map) : void</text><ellipse cx="17" cy="1589.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="867" x="26" y="1592.5933">draw_string(const Ref&lt;Font&gt; &amp; p_font, const Point2 &amp; p_pos, const String &amp; p_text, const Color &amp; p_modulate = Color(1, 1, 1), int p_clip_w = -1) : void</text><ellipse cx="17" cy="1602.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="923" x="26" y="1605.3979">draw_char(const Ref&lt;Font&gt; &amp; p_font, const Point2 &amp; p_pos, const String &amp; p_char, const String &amp; p_next = "", const Color &amp; p_modulate = Color(1, 1, 1)) : float</text><ellipse cx="17" cy="1614.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="492" x="26" y="1618.2026">draw_set_transform(const Point2 &amp; p_offset, float p_rot, const Size2 &amp; p_scale) : void</text><ellipse cx="17" cy="1627.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="26" y="1631.0073">draw_set_transform_matrix(const Transform2D &amp; p_matrix) : void</text><ellipse cx="17" cy="1640.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="234" x="26" y="1643.812">get_current_item_drawn() : CanvasItem *</text><ellipse cx="17" cy="1653.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="26" y="1656.6167">set_as_toplevel(bool p_toplevel) : void</text><ellipse cx="17" cy="1666.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="1669.4214">is_set_as_toplevel() const : bool</text><ellipse cx="17" cy="1679.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26" y="1682.2261">set_draw_behind_parent(bool p_enable) : void</text><ellipse cx="17" cy="1691.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26" y="1695.0308">is_draw_behind_parent_enabled() const : bool</text><ellipse cx="17" cy="1704.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="26" y="1707.8354">get_parent_item() const : CanvasItem *</text><ellipse cx="17" cy="1717.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="26" y="1720.6401">get_transform() const = 0 : Transform2D</text><ellipse cx="17" cy="1730.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="26" y="1733.4448">get_global_transform() const : Transform2D</text><ellipse cx="17" cy="1743.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="26" y="1746.2495">get_global_transform_with_canvas() const : Transform2D</text><ellipse cx="17" cy="1755.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="26" y="1759.0542">get_toplevel() const : CanvasItem *</text><ellipse cx="17" cy="1768.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="1771.8589">get_canvas_item() const : RID</text><ellipse cx="17" cy="1781.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="26" y="1784.6636">set_block_transform_notify(bool p_enable) : void</text><ellipse cx="17" cy="1794.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="26" y="1797.4683">is_block_transform_notify_enabled() const : bool</text><ellipse cx="17" cy="1807.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="26" y="1810.2729">get_canvas_transform() const : Transform2D</text><ellipse cx="17" cy="1819.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="26" y="1823.0776">get_viewport_transform() const : Transform2D</text><ellipse cx="17" cy="1832.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="1835.8823">get_viewport_rect() const : Rect2</text><ellipse cx="17" cy="1845.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="1848.687">get_viewport_rid() const : RID</text><ellipse cx="17" cy="1858.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="1861.4917">get_canvas() const : RID</text><ellipse cx="17" cy="1871.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="26" y="1874.2964">get_canvas_layer_instance_id() const : ObjectID</text><ellipse cx="17" cy="1883.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="26" y="1887.1011">get_world_2d() const : Ref&lt;World2D&gt;</text><ellipse cx="17" cy="1896.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="26" y="1899.9058">set_material(const Ref&lt;Material&gt; &amp; p_material) : void</text><ellipse cx="17" cy="1909.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="26" y="1912.7104">get_material() const : Ref&lt;Material&gt;</text><ellipse cx="17" cy="1922.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="1925.5151">set_use_parent_material(bool p_use_parent_material) : void</text><ellipse cx="17" cy="1935.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="26" y="1938.3198">get_use_parent_material() const : bool</text><ellipse cx="17" cy="1947.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="439" x="26" y="1951.1245">make_input_local(const Ref&lt;InputEvent&gt; &amp; p_event) const : Ref&lt;InputEvent&gt;</text><ellipse cx="17" cy="1960.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="26" y="1963.9292">make_canvas_position_local(const Vector2 &amp; screen_point) const : Vector2</text><ellipse cx="17" cy="1973.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="1976.7339">get_global_mouse_position() const : Vector2</text><ellipse cx="17" cy="1986.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="26" y="1989.5386">get_local_mouse_position() const : Vector2</text><ellipse cx="17" cy="1999.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="26" y="2002.3433">set_notify_local_transform(bool p_enable) : void</text><ellipse cx="17" cy="2011.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26" y="2015.1479">is_local_transform_notification_enabled() const : bool</text><ellipse cx="17" cy="2024.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="26" y="2027.9526">set_notify_transform(bool p_enable) : void</text><ellipse cx="17" cy="2037.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26" y="2040.7573">is_transform_notification_enabled() const : bool</text><ellipse cx="17" cy="2050.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="26" y="2053.562">force_update_transform() : void</text><ellipse cx="17" cy="2063.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="2066.3667">get_anchorable_rect() const : Rect2</text><ellipse cx="17" cy="2075.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="26" y="2079.1714">get_canvas_layer() const : int</text><ellipse cx="17" cy="2088.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="2091.9761">CanvasItem() : void</text><ellipse cx="17" cy="2101.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="26" y="2104.7808">~CanvasItem() : void</text><!--MD5=[6819c02738426d8b4a0c51cbdd89c521]
class C_0002289363354048605759--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L36" target="_top" title="Node2D" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L36" xlink:show="new" xlink:title="Node2D" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f6o5ytppycvup)" height="1059.5703" id="C_0002289363354048605759" style="stroke: #A80036; stroke-width: 1.5;" width="473" x="1639" y="279.4531"/><ellipse cx="1846.25" cy="295.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1849.2188,301.0938 Q1848.6406,301.3906 1848,301.5313 Q1847.3594,301.6875 1846.6563,301.6875 Q1844.1563,301.6875 1842.8281,300.0469 Q1841.5156,298.3906 1841.5156,295.2656 Q1841.5156,292.1406 1842.8281,290.4844 Q1844.1563,288.8281 1846.6563,288.8281 Q1847.3594,288.8281 1848,288.9844 Q1848.6563,289.1406 1849.2188,289.4375 L1849.2188,292.1563 Q1848.5938,291.5781 1848,291.3125 Q1847.4063,291.0313 1846.7813,291.0313 Q1845.4375,291.0313 1844.75,292.1094 Q1844.0625,293.1719 1844.0625,295.2656 Q1844.0625,297.3594 1844.75,298.4375 Q1845.4375,299.5 1846.7813,299.5 Q1847.4063,299.5 1848,299.2344 Q1848.5938,298.9531 1849.2188,298.375 L1849.2188,301.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="1866.75" y="299.6074">Node2D</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1640" x2="2111" y1="311.4531" y2="311.4531"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="319.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="1659" y="325.6636">_class_name : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L40" target="_top" title="pos" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L40" xlink:show="new" xlink:title="pos" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="330.2578"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="332.2578"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L40" target="_top" title="pos" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L40" xlink:show="new" xlink:title="pos" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1659" y="338.4683">pos : Point2</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L41" target="_top" title="angle" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L41" xlink:show="new" xlink:title="angle" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="343.0625"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="345.0625"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L41" target="_top" title="angle" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L41" xlink:show="new" xlink:title="angle" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1659" y="351.2729">angle : float</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L42" target="_top" title="_scale" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L42" xlink:show="new" xlink:title="_scale" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="355.8672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="357.8672"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L42" target="_top" title="_scale" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L42" xlink:show="new" xlink:title="_scale" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1659" y="364.0776">_scale : Size2</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L43" target="_top" title="z_index" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L43" xlink:show="new" xlink:title="z_index" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="368.6719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="370.6719"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L43" target="_top" title="z_index" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L43" xlink:show="new" xlink:title="z_index" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1659" y="376.8823">z_index : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L44" target="_top" title="z_relative" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L44" xlink:show="new" xlink:title="z_relative" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="381.4766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="383.4766"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L44" target="_top" title="z_relative" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L44" xlink:show="new" xlink:title="z_relative" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1659" y="389.687">z_relative : bool</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L46" target="_top" title="_mat" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L46" xlink:show="new" xlink:title="_mat" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="394.2813"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="396.2813"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L46" target="_top" title="_mat" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L46" xlink:show="new" xlink:title="_mat" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1659" y="402.4917">_mat : Transform2D</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L48" target="_top" title="_xform_dirty" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L48" xlink:show="new" xlink:title="_xform_dirty" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1645" y="407.0859"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="409.0859"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L48" target="_top" title="_xform_dirty" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L48" xlink:show="new" xlink:title="_xform_dirty" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1659" y="415.2964">_xform_dirty : bool</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1640" x2="2111" y1="421.8906" y2="421.8906"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="429.8906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1659" y="436.1011">operator=(const Node2D &amp; p_rval) : void</text><ellipse cx="1650" cy="445.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1659" y="448.9058">get_class() const : String</text><ellipse cx="1650" cy="458.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1659" y="461.7104">_get_class_namev() const : const StringName *</text><ellipse cx="1650" cy="471.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="1659" y="474.5151">get_class_ptr_static() : void *</text><ellipse cx="1650" cy="484.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="1659" y="487.3198">get_class_static() : String</text><ellipse cx="1650" cy="496.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="1659" y="500.1245">get_parent_class_static() : String</text><ellipse cx="1650" cy="509.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="1659" y="512.9292">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="1650" cy="522.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="1659" y="525.7339">get_category_static() : String</text><ellipse cx="1650" cy="535.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1659" y="538.5386">inherits_static() : String</text><ellipse cx="1650" cy="548.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="1659" y="551.3433">is_class(const String &amp; p_class) const : bool</text><ellipse cx="1650" cy="560.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1659" y="564.1479">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="1650" cy="573.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1659" y="576.9526">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><polygon fill="#FFFF44" points="1650,581.5469,1654,585.5469,1650,589.5469,1646,585.5469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="179" x="1659" y="589.7573">_get_bind_methods() : void (*)()</text><ellipse cx="1650" cy="599.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1659" y="602.562">initialize_class() : void</text><polygon fill="#FFFF44" points="1650,607.1563,1654,611.1563,1650,615.1563,1646,611.1563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1659" y="615.3667">_initialize_classv() : void</text><polygon fill="#FFFF44" points="1650,619.9609,1654,623.9609,1650,627.9609,1646,623.9609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="1659" y="628.1714">_get_get() const : bool (Object::*)(const StringName &amp;,Variant &amp;) const</text><polygon fill="#FFFF44" points="1650,632.7656,1654,636.7656,1650,640.7656,1646,636.7656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="1659" y="640.9761">_getv(const StringName &amp; p_name, Variant &amp; r_ret) const : bool</text><polygon fill="#FFFF44" points="1650,645.5703,1654,649.5703,1650,653.5703,1646,649.5703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="1659" y="653.7808">_get_set() const : bool (Object::*)(const StringName &amp;,const Variant &amp;)</text><polygon fill="#FFFF44" points="1650,658.375,1654,662.375,1650,666.375,1646,662.375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="1659" y="666.5854">_setv(const StringName &amp; p_name, const Variant &amp; p_property) : bool</text><polygon fill="#FFFF44" points="1650,671.1797,1654,675.1797,1650,679.1797,1646,675.1797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="1659" y="679.3901">_get_get_property_list() const : void (Object::*)(List&lt;PropertyInfo&gt; *) const</text><polygon fill="#FFFF44" points="1650,683.9844,1654,687.9844,1650,691.9844,1646,687.9844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="1659" y="692.1948">_get_property_listv(List&lt;PropertyInfo&gt; * p_list, bool p_reversed) const : void</text><polygon fill="#FFFF44" points="1650,696.7891,1654,700.7891,1650,704.7891,1646,700.7891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1659" y="704.9995">_get_notification() const : void (Object::*)(int)</text><polygon fill="#FFFF44" points="1650,709.5938,1654,713.5938,1650,717.5938,1646,713.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1659" y="717.8042">_notificationv(int p_notification, bool p_reversed) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="724.3984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1659" y="730.6089">_update_transform() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1647" y="737.2031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1659" y="743.4136">_update_xform_values() : void</text><polygon fill="#FFFF44" points="1650,748.0078,1654,752.0078,1650,756.0078,1646,752.0078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="1659" y="756.2183">_bind_methods() : void</text><ellipse cx="1650" cy="765.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1659" y="769.0229">_edit_get_state() const : Dictionary</text><ellipse cx="1650" cy="778.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1659" y="781.8276">_edit_set_state(const Dictionary &amp; p_state) : void</text><ellipse cx="1650" cy="791.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="1659" y="794.6323">_edit_set_position(const Point2 &amp; p_position) : void</text><ellipse cx="1650" cy="804.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1659" y="807.437">_edit_get_position() const : Point2</text><ellipse cx="1650" cy="817.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="1659" y="820.2417">_edit_set_scale(const Size2 &amp; p_scale) : void</text><ellipse cx="1650" cy="829.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1659" y="833.0464">_edit_get_scale() const : Size2</text><ellipse cx="1650" cy="842.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="1659" y="845.8511">_edit_set_rotation(float p_rotation) : void</text><ellipse cx="1650" cy="855.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="1659" y="858.6558">_edit_get_rotation() const : float</text><ellipse cx="1650" cy="868.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1659" y="871.4604">_edit_use_rotation() const : bool</text><ellipse cx="1650" cy="881.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1659" y="884.2651">_edit_set_rect(const Rect2 &amp; p_edit_rect) : void</text><ellipse cx="1650" cy="893.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1659" y="897.0698">set_position(const Point2 &amp; p_pos) : void</text><ellipse cx="1650" cy="906.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1659" y="909.8745">set_rotation(float p_radians) : void</text><ellipse cx="1650" cy="919.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="1659" y="922.6792">set_rotation_degrees(float p_degrees) : void</text><ellipse cx="1650" cy="932.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1659" y="935.4839">set_scale(const Size2 &amp; p_scale) : void</text><ellipse cx="1650" cy="945.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1659" y="948.2886">rotate(float p_radians) : void</text><ellipse cx="1650" cy="957.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="1659" y="961.0933">move_x(float p_delta, bool p_scaled = false) : void</text><ellipse cx="1650" cy="970.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="1659" y="973.8979">move_y(float p_delta, bool p_scaled = false) : void</text><ellipse cx="1650" cy="983.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="1659" y="986.7026">translate(const Vector2 &amp; p_amount) : void</text><ellipse cx="1650" cy="996.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="1659" y="999.5073">global_translate(const Vector2 &amp; p_amount) : void</text><ellipse cx="1650" cy="1009.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="1659" y="1012.312">apply_scale(const Size2 &amp; p_amount) : void</text><ellipse cx="1650" cy="1021.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1659" y="1025.1167">get_position() const : Point2</text><ellipse cx="1650" cy="1034.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1659" y="1037.9214">get_rotation() const : float</text><ellipse cx="1650" cy="1047.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1659" y="1050.7261">get_rotation_degrees() const : float</text><ellipse cx="1650" cy="1060.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1659" y="1063.5308">get_scale() const : Size2</text><ellipse cx="1650" cy="1073.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="1659" y="1076.3354">get_global_position() const : Point2</text><ellipse cx="1650" cy="1085.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1659" y="1089.1401">get_global_rotation() const : float</text><ellipse cx="1650" cy="1098.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1659" y="1101.9448">get_global_rotation_degrees() const : float</text><ellipse cx="1650" cy="1111.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1659" y="1114.7495">get_global_scale() const : Size2</text><ellipse cx="1650" cy="1124.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="1659" y="1127.5542">set_transform(const Transform2D &amp; p_transform) : void</text><ellipse cx="1650" cy="1137.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="1659" y="1140.3589">set_global_transform(const Transform2D &amp; p_transform) : void</text><ellipse cx="1650" cy="1149.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="1659" y="1153.1636">set_global_position(const Point2 &amp; p_pos) : void</text><ellipse cx="1650" cy="1162.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1659" y="1165.9683">set_global_rotation(float p_radians) : void</text><ellipse cx="1650" cy="1175.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1659" y="1178.7729">set_global_rotation_degrees(float p_degrees) : void</text><ellipse cx="1650" cy="1188.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="1659" y="1191.5776">set_global_scale(const Size2 &amp; p_scale) : void</text><ellipse cx="1650" cy="1201.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1659" y="1204.3823">set_z_index(int p_z) : void</text><ellipse cx="1650" cy="1213.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1659" y="1217.187">get_z_index() const : int</text><ellipse cx="1650" cy="1226.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="1659" y="1229.9917">look_at(const Vector2 &amp; p_pos) : void</text><ellipse cx="1650" cy="1239.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1659" y="1242.7964">get_angle_to(const Vector2 &amp; p_pos) const : float</text><ellipse cx="1650" cy="1252.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1659" y="1255.6011">to_local(Point2 p_global) const : Point2</text><ellipse cx="1650" cy="1265.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1659" y="1268.4058">to_global(Point2 p_local) const : Point2</text><ellipse cx="1650" cy="1278" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1659" y="1281.2104">set_z_as_relative(bool p_enabled) : void</text><ellipse cx="1650" cy="1290.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1659" y="1294.0151">is_z_relative() const : bool</text><ellipse cx="1650" cy="1303.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="1659" y="1306.8198">get_relative_transform_to_parent(const Node * p_parent) const : Transform2D</text><ellipse cx="1650" cy="1316.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1659" y="1319.6245">get_transform() const : Transform2D</text><ellipse cx="1650" cy="1329.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1659" y="1332.4292">Node2D() : void</text><!--MD5=[ef8688b7a9f08943ee9e274fdcea5f32]
reverse link C_0001296138246691404804 to C_0000053309527800613276--><path d="M3317.18,696.4531 C3532.23,696.4531 3837.44,696.4531 4075.68,696.4531 " fill="none" id="C_0001296138246691404804&lt;-C_0000053309527800613276" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3304.12,696.4531,3310.12,700.4531,3316.12,696.4531,3310.12,692.4531,3304.12,696.4531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3923" cy="688.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="3930" y="692.52">elements</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M3832.12,2056.1031 C3904.8,2052.2931 3977.02,2043.9431 4046,2029.4531 C4120.64,2013.7831 4198.38,1983.1531 4265.02,1951.9131 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4269.8,1949.6631,4259.9533,1949.8715,4265.2749,1951.79,4263.3564,1957.1116,4269.8,1949.6631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3929.5" cy="2021.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="47" x="3936.5" y="2025.52">classes</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M3832.25,1840.0031 C3842.22,1839.1031 3852.14,1838.2531 3862,1837.4531 C3943.51,1830.8631 3964.24,1835.5931 4046,1837.4531 C4117.41,1839.0731 4196.02,1842.3431 4264.24,1845.6531 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4269.55,1845.9131,4260.7553,1841.48,4264.5559,1845.6699,4260.366,1849.4705,4269.55,1845.9131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3868" cy="1825.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="170" x="3875" y="1829.52">resource_base_extensions</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M3832.23,1896.8531 C3842.21,1896.0431 3852.14,1895.2431 3862,1894.4531 C3997.06,1883.6631 4149.98,1873.4631 4264.88,1866.2031 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4269.98,1865.8831,4260.7462,1862.4573,4264.9899,1866.1977,4261.2495,1870.4414,4269.98,1865.8831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3901.5" cy="1872.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="103" x="3908.5" y="1876.52">compat_classes</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M3832.2,1938.3731 C3904.56,1933.0231 3976.7,1926.7731 4046,1919.4531 C4117.72,1911.8831 4196.21,1899.9631 4264.26,1888.4531 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4269.56,1887.5531,4260.0145,1885.1275,4264.6315,1888.396,4261.3631,1893.013,4269.56,1887.5531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3907" cy="1911.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="3914" y="1915.52">default_values</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M3832.19,1978.8531 C3904.63,1974.2931 3976.79,1967.6931 4046,1958.4531 C4118.72,1948.7431 4197.21,1930.1031 4264.98,1911.3231 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4269.84,1909.9731,4260.1002,1908.5114,4265.0202,1911.3032,4262.2284,1916.2232,4269.84,1909.9731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3880.5" cy="1950.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="3887.5" y="1954.52">default_values_cached</text><!--MD5=[208c0dda235c298627a059cb6fd90643]
reverse link C_0002074383603489565895 to C_0001858199404643284193--><path d="M1590.96,1348.9731 C1607.07,1352.0031 1623.09,1354.8331 1639,1357.4531 C2601.24,1515.8031 2906.8,1120.2631 3832,1428.4531 C3996.04,1483.0931 4155.18,1597.1931 4269.76,1693.7131 " fill="none" id="C_0002074383603489565895&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1578.03,1346.5031,1583.1717,1351.5591,1589.8163,1348.7576,1584.6746,1343.7016,1578.03,1346.5031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2145" y="1381.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="2155" y="1388.52">_class_name</text><!--MD5=[afd1aea1ec5cee6a64d7dc349dc64f1b]
reverse link C_0002074383603489565895 to C_0001296138246691404804--><path d="M1589.81,283.3731 C1606.05,275.5931 1622.45,268.2731 1639,261.4531 C1833.36,181.3531 1908.6,208.3331 2112,261.4531 C2189.4,281.6631 2197.49,313.6131 2269,349.4531 C2442.5,436.4131 2642.6,525.1531 2796.74,591.1231 " fill="none" id="C_0002074383603489565895&lt;-C_0001296138246691404804" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1578.01,289.1131,1585.1553,290.0849,1588.8005,283.863,1581.6552,282.8912,1578.01,289.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1817.5" y="200.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="1827.5" y="207.52">global_transform</text><!--MD5=[a3df4fe4f220f4afa7c7fc465542181b]
link C_0002074383603489565895 to C_0002074383603489565895--><path d="M721.08,91.3631 C741.07,68.9231 764.71,56.4531 792,56.4531 C817.69,56.4531 840.15,67.5031 859.37,87.5231 " fill="none" id="C_0002074383603489565895-&gt;C_0002074383603489565895" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="862.92,91.3631,859.7592,82.0352,859.5304,87.6875,853.8782,87.4586,862.92,91.3631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="724.5" y="40.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="127" x="734.5" y="47.52">current_item_drawn</text><!--MD5=[5b551e6b697c4ae3c6c9e93874a3a897]
reverse link C_0002074383603489565895 to C_0000104564426296396960--><path d="M1582.9,1413.7131 C1601.78,1421.0431 1620.5,1428.3031 1639,1435.4531 C1842.77,1514.2431 2063.55,1598.4031 2268.6,1676.0531 " fill="none" id="C_0002074383603489565895&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1578.1,1411.8531,1585.0341,1418.8473,1582.7589,1413.6681,1587.9381,1411.3929,1578.1,1411.8531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1848.5" cy="1427.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="1855.5" y="1431.52">«friend»</text><!--MD5=[3dc2ca534d90f0fcfb562c5d6ae1ec53]
reverse link C_0002289363354048605759 to C_0001858199404643284193--><path d="M2122.22,1076.8831 C2167.51,1112.4331 2217.04,1143.9531 2269,1165.4531 C3003.45,1469.2831 3349.01,984.4431 4046,1366.4531 C4157.72,1427.6831 4249.84,1534.6131 4317.02,1632.8931 " fill="none" id="C_0002289363354048605759&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2112.02,1068.7531,2114.2171,1075.6214,2121.402,1076.235,2119.2049,1069.3667,2112.02,1068.7531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3005" y="1154.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="3015" y="1161.52">_class_name</text><!--MD5=[e1c81cfbaff1c53a4f32d17cf37c9056]
reverse link C_0002289363354048605759 to C_0000053309527800613276--><path d="M2121.75,445.3631 C2165.7,403.3931 2214.95,366.6631 2269,341.4531 C2898.55,47.7931 3161.32,160.5031 3832,341.4531 C3915.11,363.8731 3998.54,400.7231 4075.85,442.3931 " fill="none" id="C_0002289363354048605759&lt;-C_0000053309527800613276" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2112.16,454.6831,2119.2512,453.3734,2120.7696,446.324,2113.6784,447.6337,2112.16,454.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3035" y="150.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="3045" y="157.52">pos</text><!--MD5=[e1c81cfbaff1c53a4f32d17cf37c9056]
reverse link C_0002289363354048605759 to C_0000053309527800613276--><path d="M2123.53,1002.8131 C2169.62,1029.8331 2219.07,1053.4631 2269,1068.4531 C2601.67,1168.3231 3497.61,1162.3731 3832,1068.4531 C3915.45,1045.0131 3998.78,1006.6631 4075.86,963.2731 " fill="none" id="C_0002289363354048605759&lt;-C_0000053309527800613276-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2112.2,996.0631,2115.3066,1002.5707,2122.5085,1002.206,2119.4019,995.6984,2112.2,996.0631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3026.5" y="1057.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="3036.5" y="1064.52">_scale</text><!--MD5=[eca0b1c865317536e8e6656357133ac0]
reverse link C_0002289363354048605759 to C_0001296138246691404804--><path d="M2125.31,785.4831 C2322.93,766.4431 2598.13,739.9331 2796.76,720.8031 " fill="none" id="C_0002289363354048605759&lt;-C_0001296138246691404804" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2112.11,786.7531,2118.4686,790.1543,2124.0538,785.593,2117.6952,782.1918,2112.11,786.7531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2170" y="765.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="33" x="2180" y="772.52">_mat</text><!--MD5=[814e220375a0bfd12a745b29dfae6f13]
reverse link C_0002289363354048605759 to C_0000104564426296396960--><path d="M2115.38,1224.6731 C2124.11,1235.5631 2132.98,1246.1831 2142,1256.4531 C2199.25,1321.6731 2263.1,1385.2331 2329.69,1445.8331 " fill="none" id="C_0002289363354048605759&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2112.17,1220.6431,2114.6645,1230.1708,2115.2917,1224.5489,2120.9137,1225.1761,2112.17,1220.6431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2163.5" cy="1248.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="2170.5" y="1252.52">«friend»</text><!--MD5=[53255873fd636afdcc2a0189ef9318cd]
reverse link C_0002074383603489565895 to C_0002289363354048605759--><path d="M1597.62,884.2131 C1611.68,880.4131 1625.42,876.7031 1638.79,873.0931 " fill="none" id="C_0002074383603489565895&lt;-C_0002289363354048605759" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1599.39,890.9831,1578.26,889.4331,1595.74,877.4631,1599.39,890.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d885f3ecfc506c59934506bbd5330418]
@startuml
title Godot Node2D class context
left to right direction
class "Vector2" as C_0000053309527800613276
class C_0000053309527800613276 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L39{Vector2}]] {
+operator[](int p_idx) : real_t &
+operator[](int p_idx) const : const real_t &
+normalize() : void
+normalized() const : Vector2
+is_normalized() const : bool
+length() const : real_t
+length_squared() const : real_t
+distance_to(const Vector2 & p_vector2) const : real_t
+distance_squared_to(const Vector2 & p_vector2) const : real_t
+angle_to(const Vector2 & p_vector2) const : real_t
+angle_to_point(const Vector2 & p_vector2) const : real_t
+direction_to(const Vector2 & p_to) const : Vector2
+dot(const Vector2 & p_other) const : real_t
+cross(const Vector2 & p_other) const : real_t
+posmod(const real_t p_mod) const : Vector2
+posmodv(const Vector2 & p_modv) const : Vector2
+project(const Vector2 & p_to) const : Vector2
+plane_project(real_t p_d, const Vector2 & p_vec) const : Vector2
+clamped(real_t p_len) const : Vector2
{static} +linear_interpolate(const Vector2 & p_a, const Vector2 & p_b, real_t p_weight) : Vector2
+linear_interpolate(const Vector2 & p_to, real_t p_weight) const : Vector2
+slerp(const Vector2 & p_to, real_t p_weight) const : Vector2
+cubic_interpolate(const Vector2 & p_b, const Vector2 & p_pre_a, const Vector2 & p_post_b, real_t p_weight) const : Vector2
+move_toward(const Vector2 & p_to, const real_t p_delta) const : Vector2
+slide(const Vector2 & p_normal) const : Vector2
+bounce(const Vector2 & p_normal) const : Vector2
+reflect(const Vector2 & p_normal) const : Vector2
+is_equal_approx(const Vector2 & p_v) const : bool
+operator+(const Vector2 & p_v) const : Vector2
+operator+=(const Vector2 & p_v) : void
+operator-(const Vector2 & p_v) const : Vector2
+operator-=(const Vector2 & p_v) : void
+operator*(const Vector2 & p_v1) const : Vector2
+operator*(const real_t & rvalue) const : Vector2
+operator*=(const real_t & rvalue) : void
+operator*=(const Vector2 & rvalue) : void
+operator/(const Vector2 & p_v1) const : Vector2
+operator/(const real_t & rvalue) const : Vector2
+operator/=(const real_t & rvalue) : void
+operator/=(const Vector2 & rvalue) : void
+operator-() const : Vector2
+operator==(const Vector2 & p_vec2) const : bool
+operator!=(const Vector2 & p_vec2) const : bool
+operator<(const Vector2 & p_vec2) const : bool
+operator>(const Vector2 & p_vec2) const : bool
+operator<=(const Vector2 & p_vec2) const : bool
+operator>=(const Vector2 & p_vec2) const : bool
+angle() const : real_t
+set_rotation(real_t p_radians) : void
+abs() const : Vector2
+rotated(real_t p_by) const : Vector2
+tangent() const : Vector2
+sign() const : Vector2
+floor() const : Vector2
+ceil() const : Vector2
+round() const : Vector2
+snapped(const Vector2 & p_by) const : Vector2
+aspect() const : real_t
+operator String() const : String
+Vector2(real_t p_x, real_t p_y) : void
+Vector2() : void
+ : Vector2::(anonymous_506878) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L46{}]]]
+ : Vector2::(anonymous_506983) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L50{}]]]
}
class "Transform2D" as C_0001296138246691404804
class C_0001296138246691404804 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L37{Transform2D}]] {
+tdotx(const Vector2 & v) const : real_t
+tdoty(const Vector2 & v) const : real_t
+operator[](int p_idx) const : const Vector2 &
+operator[](int p_idx) : Vector2 &
+get_axis(int p_axis) const : Vector2
+set_axis(int p_axis, const Vector2 & p_vec) : void
+invert() : void
+inverse() const : Transform2D
+affine_invert() : void
+affine_inverse() const : Transform2D
+set_rotation(real_t p_rot) : void
+get_rotation() const : real_t
+set_rotation_and_scale(real_t p_rot, const Size2 & p_scale) : void
+rotate(real_t p_phi) : void
+scale(const Size2 & p_scale) : void
+scale_basis(const Size2 & p_scale) : void
+translate(real_t p_tx, real_t p_ty) : void
+translate(const Vector2 & p_translation) : void
+basis_determinant() const : real_t
+get_scale() const : Size2
+set_scale(const Size2 & p_scale) : void
+get_origin() const : const Vector2 &
+set_origin(const Vector2 & p_origin) : void
+scaled(const Size2 & p_scale) const : Transform2D
+basis_scaled(const Size2 & p_scale) const : Transform2D
+translated(const Vector2 & p_offset) const : Transform2D
+rotated(real_t p_phi) const : Transform2D
+untranslated() const : Transform2D
+orthonormalize() : void
+orthonormalized() const : Transform2D
+is_equal_approx(const Transform2D & p_transform) const : bool
+operator==(const Transform2D & p_transform) const : bool
+operator!=(const Transform2D & p_transform) const : bool
+operator*=(const Transform2D & p_transform) : void
+operator*(const Transform2D & p_transform) const : Transform2D
+interpolate_with(const Transform2D & p_transform, real_t p_c) const : Transform2D
+basis_xform(const Vector2 & p_vec) const : Vector2
+basis_xform_inv(const Vector2 & p_vec) const : Vector2
+xform(const Vector2 & p_vec) const : Vector2
+xform_inv(const Vector2 & p_vec) const : Vector2
+xform(const Rect2 & p_rect) const : Rect2
+xform_inv(const Rect2 & p_rect) const : Rect2
+xform(const PoolVector<Vector2> & p_array) const : PoolVector<Vector2>
+xform_inv(const PoolVector<Vector2> & p_array) const : PoolVector<Vector2>
+operator String() const : String
+Transform2D(real_t xx, real_t xy, real_t yx, real_t yy, real_t ox, real_t oy) : void
+Transform2D(real_t p_rot, const Vector2 & p_pos) : void
+Transform2D() : void
+elements : Vector2[3] [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L49{elements}]]]
}
class "StringName" as C_0001858199404643284193
class C_0001858199404643284193 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44{StringName}]] {
-unref() : void
{static} -setup() : void
{static} -cleanup() : void
-StringName(StringName::_Data * p_data) : void
+operator const void *() const : const void *
+operator==(const String & p_name) const : bool
+operator==(const char * p_name) const : bool
+operator!=(const String & p_name) const : bool
+operator<(const StringName & p_name) const : bool
+operator==(const StringName & p_name) const : bool
+hash() const : uint32_t
+data_unique_pointer() const : const void *
+operator!=(const StringName & p_name) const : bool
+operator String() const : String
{static} +search(const char * p_name) : StringName
{static} +search(const CharType * p_name) : StringName
{static} +search(const String & p_name) : StringName
+operator=(const StringName & p_name) : void
+StringName(const char * p_name) : void
+StringName(const StringName & p_name) : void
+StringName(const String & p_name) : void
+StringName(const StaticCString & p_static_string) : void
+StringName() : void
+~StringName() : void
-_data : StringName::_Data * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L73{_data}]]]
-STRING_TABLE_BITS : enum
-STRING_TABLE_LEN : enum
-STRING_TABLE_MASK : enum
{static} -_table : StringName::_Data *[4096] [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L71{_table}]]]
{static} -lock : Mutex [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L85{lock}]]]
{static} -configured : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L88{configured}]]]
}
class "ClassDB" as C_0000104564426296396960
class C_0000104564426296396960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94{ClassDB}]] {
{static} +bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition & method_name, const Variant ** p_defs, int p_defcount) : MethodBind *
{static} +_add_class2(const StringName & p_class, const StringName & p_inherits) : void
{static} -_get_parent_class(const StringName & p_class) : StringName
{static} -_is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +get_class_list(List<StringName> * p_classes) : void
{static} +get_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_direct_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_parent_class_nocheck(const StringName & p_class) : StringName
{static} +get_parent_class(const StringName & p_class) : StringName
{static} +class_exists(const StringName & p_class) : bool
{static} +is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +can_instance(const StringName & p_class) : bool
{static} +instance(const StringName & p_class) : Object *
{static} +get_api_type(const StringName & p_class) : ClassDB::APIType
{static} +get_api_hash(ClassDB::APIType p_api) : uint64_t
{static} +add_signal(StringName p_class, const MethodInfo & p_signal) : void
{static} +has_signal(StringName p_class, StringName p_signal) : bool
{static} +get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool
{static} +get_signal_list(StringName p_class, List<MethodInfo> * p_signals, bool p_no_inheritance = false) : void
{static} +add_property_group(StringName p_class, const String & p_name, const String & p_prefix = "") : void
{static} +add_property(StringName p_class, const PropertyInfo & p_pinfo, const StringName & p_setter, const StringName & p_getter, int p_index = -1) : void
{static} +set_property_default_value(StringName p_class, const StringName & p_name, const Variant & p_default) : void
{static} +get_property_list(StringName p_class, List<PropertyInfo> * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void
{static} +set_property(Object * p_object, const StringName & p_property, const Variant & p_value, bool * r_valid = __null) : bool
{static} +get_property(Object * p_object, const StringName & p_property, Variant & r_value) : bool
{static} +has_property(const StringName & p_class, const StringName & p_property, bool p_no_inheritance = false) : bool
{static} +get_property_index(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : int
{static} +get_property_type(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : Variant::Type
{static} +get_property_setter(StringName p_class, const StringName & p_property) : StringName
{static} +get_property_getter(StringName p_class, const StringName & p_property) : StringName
{static} +has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool
{static} +set_method_flags(StringName p_class, StringName p_method, int p_flags) : void
{static} +get_method_list(StringName p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void
{static} +get_method(StringName p_class, StringName p_name) : MethodBind *
{static} +add_virtual_method(const StringName & p_class, const MethodInfo & p_method, bool p_virtual = true) : void
{static} +get_virtual_methods(const StringName & p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false) : void
{static} +bind_integer_constant(const StringName & p_class, const StringName & p_enum, const StringName & p_name, int p_constant) : void
{static} +get_integer_constant_list(const StringName & p_class, List<String> * p_constants, bool p_no_inheritance = false) : void
{static} +get_integer_constant(const StringName & p_class, const StringName & p_name, bool * p_success = __null) : int
{static} +get_integer_constant_enum(const StringName & p_class, const StringName & p_name, bool p_no_inheritance = false) : StringName
{static} +get_enum_list(const StringName & p_class, List<StringName> * p_enums, bool p_no_inheritance = false) : void
{static} +get_enum_constants(const StringName & p_class, const StringName & p_enum, List<StringName> * p_constants, bool p_no_inheritance = false) : void
{static} +class_get_default_property_value(const StringName & p_class, const StringName & p_property, bool * r_valid = __null) : Variant
{static} +get_category(const StringName & p_node) : StringName
{static} +set_class_enabled(StringName p_class, bool p_enable) : void
{static} +is_class_enabled(StringName p_class) : bool
{static} +is_class_exposed(StringName p_class) : bool
{static} +add_resource_base_extension(const StringName & p_extension, const StringName & p_class) : void
{static} +get_resource_base_extensions(List<String> * p_extensions) : void
{static} +get_extensions_for_type(const StringName & p_class, List<String> * p_extensions) : void
{static} +add_compatibility_class(const StringName & p_class, const StringName & p_fallback) : void
{static} +set_current_api(ClassDB::APIType p_api) : void
{static} +get_current_api() : ClassDB::APIType
{static} +cleanup_defaults() : void
{static} +cleanup() : void
{static} +creator<T>() : class Object *
{static} +_add_class<T>() : void
{static} +register_class<T>() : void
{static} +register_virtual_class<T>() : void
{static} +_create_ptr_func<T>() : class Object *
{static} +register_custom_instance_class<T>() : void
{static} +bind_method<N,M>(N p_method_name, M p_method) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7, const Variant & p_def8) : class MethodBind *
{static} +bind_vararg_method<M>(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo & p_info = MethodInfo(), const Vector<Variant> & p_default_args = Vector<Variant>(), bool p_return_nil_is_variant = true) : class MethodBind *
{static} +lock : RWLock [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146{lock}]]]
{static} +classes : HashMap<StringName,ClassDB::ClassInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147{classes}]]]
{static} +resource_base_extensions : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148{resource_base_extensions}]]]
{static} +compat_classes : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149{compat_classes}]]]
{static} +current_api : ClassDB::APIType [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157{current_api}]]]
{static} +default_values : HashMap<StringName,HashMap<StringName,Variant>> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161{default_values}]]]
{static} +default_values_cached : Set<StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162{default_values_cached}]]]
}
abstract "CanvasItem" as C_0002074383603489565895
abstract C_0002074383603489565895 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L165{CanvasItem}]] {
-operator=(const CanvasItem & p_rval) : void
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} #_get_bind_methods() : void (*)()
{static} +initialize_class() : void
#_initialize_classv() : void
#_get_get() const : bool (Object::*)(const StringName &,Variant &) const
#_getv(const StringName & p_name, Variant & r_ret) const : bool
#_get_set() const : bool (Object::*)(const StringName &,const Variant &)
#_setv(const StringName & p_name, const Variant & p_property) : bool
#_get_get_property_list() const : void (Object::*)(List<PropertyInfo> *) const
#_get_property_listv(List<PropertyInfo> * p_list, bool p_reversed) const : void
#_get_notification() const : void (Object::*)(int)
#_notificationv(int p_notification, bool p_reversed) : void
-_toplevel_raise_self() : void
-_propagate_visibility_changed(bool p_visible) : void
-_update_callback() : void
-_enter_canvas() : void
-_exit_canvas() : void
-_notify_transform(CanvasItem * p_node) : void
-_set_on_top(bool p_on_top) : void
-_is_on_top() const : bool
#_notify_transform() : void
#item_rect_changed(bool p_size_changed = true) : void
#_notification(int p_what) : void
{static} #_bind_methods() : void
+_edit_is_selected_on_click(const Point2 & p_point, double p_tolerance) const : bool
+_edit_set_state(const Dictionary & p_state) : void
+_edit_get_state() const : Dictionary
{abstract} +_edit_set_position(const Point2 & p_position) = 0 : void
{abstract} +_edit_get_position() const = 0 : Point2
{abstract} +_edit_set_scale(const Size2 & p_scale) = 0 : void
{abstract} +_edit_get_scale() const = 0 : Size2
+_edit_use_rotation() const : bool
+_edit_set_rotation(float p_rotation) : void
+_edit_get_rotation() const : float
+_edit_use_rect() const : bool
+_edit_set_rect(const Rect2 & p_rect) : void
+_edit_get_rect() const : Rect2
+_edit_get_minimum_size() const : Size2
+_edit_use_pivot() const : bool
+_edit_set_pivot(const Point2 & p_pivot) : void
+_edit_get_pivot() const : Point2
+_edit_get_transform() const : Transform2D
+set_visible(bool p_visible) : void
+is_visible() const : bool
+is_visible_in_tree() const : bool
+show() : void
+hide() : void
+update() : void
+set_light_mask(int p_light_mask) : void
+get_light_mask() const : int
+set_modulate(const Color & p_modulate) : void
+get_modulate() const : Color
+set_self_modulate(const Color & p_self_modulate) : void
+get_self_modulate() const : Color
+draw_line(const Point2 & p_from, const Point2 & p_to, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_polyline(const Vector<Point2> & p_points, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_polyline_colors(const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) : void
+draw_arc(const Vector2 & p_center, float p_radius, float p_start_angle, float p_end_angle, int p_point_count, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_multiline(const Vector<Point2> & p_points, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_multiline_colors(const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) : void
+draw_rect(const Rect2 & p_rect, const Color & p_color, bool p_filled = true, float p_width = 1.0, bool p_antialiased = false) : void
+draw_circle(const Point2 & p_pos, float p_radius, const Color & p_color) : void
+draw_texture(const Ref<Texture> & p_texture, const Point2 & p_pos, const Color & p_modulate = Color(1, 1, 1, 1), const Ref<Texture> & p_normal_map = Ref<Texture>()) : void
+draw_texture_rect(const Ref<Texture> & p_texture, const Rect2 & p_rect, bool p_tile = false, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, const Ref<Texture> & p_normal_map = Ref<Texture>()) : void
+draw_texture_rect_region(const Ref<Texture> & p_texture, const Rect2 & p_rect, const Rect2 & p_src_rect, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, const Ref<Texture> & p_normal_map = Ref<Texture>(), bool p_clip_uv = false) : void
+draw_style_box(const Ref<StyleBox> & p_style_box, const Rect2 & p_rect) : void
+draw_primitive(const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs, Ref<Texture> p_texture = = Ref<Texture>(), float p_width = 1, const Ref<Texture> & p_normal_map = Ref<Texture>()) : void
+draw_polygon(const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), Ref<Texture> p_texture = = Ref<Texture>(), const Ref<Texture> & p_normal_map = Ref<Texture>(), bool p_antialiased = false) : void
+draw_colored_polygon(const Vector<Point2> & p_points, const Color & p_color, const Vector<Point2> & p_uvs = Vector<Point2>(), Ref<Texture> p_texture = = Ref<Texture>(), const Ref<Texture> & p_normal_map = Ref<Texture>(), bool p_antialiased = false) : void
+draw_mesh(const Ref<Mesh> & p_mesh, const Ref<Texture> & p_texture, const Ref<Texture> & p_normal_map, const Transform2D & p_transform = Transform2D(), const Color & p_modulate = Color(1, 1, 1)) : void
+draw_multimesh(const Ref<MultiMesh> & p_multimesh, const Ref<Texture> & p_texture, const Ref<Texture> & p_normal_map) : void
+draw_string(const Ref<Font> & p_font, const Point2 & p_pos, const String & p_text, const Color & p_modulate = Color(1, 1, 1), int p_clip_w = -1) : void
+draw_char(const Ref<Font> & p_font, const Point2 & p_pos, const String & p_char, const String & p_next = "", const Color & p_modulate = Color(1, 1, 1)) : float
+draw_set_transform(const Point2 & p_offset, float p_rot, const Size2 & p_scale) : void
+draw_set_transform_matrix(const Transform2D & p_matrix) : void
{static} +get_current_item_drawn() : CanvasItem *
+set_as_toplevel(bool p_toplevel) : void
+is_set_as_toplevel() const : bool
+set_draw_behind_parent(bool p_enable) : void
+is_draw_behind_parent_enabled() const : bool
+get_parent_item() const : CanvasItem *
{abstract} +get_transform() const = 0 : Transform2D
+get_global_transform() const : Transform2D
+get_global_transform_with_canvas() const : Transform2D
+get_toplevel() const : CanvasItem *
+get_canvas_item() const : RID
+set_block_transform_notify(bool p_enable) : void
+is_block_transform_notify_enabled() const : bool
+get_canvas_transform() const : Transform2D
+get_viewport_transform() const : Transform2D
+get_viewport_rect() const : Rect2
+get_viewport_rid() const : RID
+get_canvas() const : RID
+get_canvas_layer_instance_id() const : ObjectID
+get_world_2d() const : Ref<World2D>
+set_material(const Ref<Material> & p_material) : void
+get_material() const : Ref<Material>
+set_use_parent_material(bool p_use_parent_material) : void
+get_use_parent_material() const : bool
+make_input_local(const Ref<InputEvent> & p_event) const : Ref<InputEvent>
+make_canvas_position_local(const Vector2 & screen_point) const : Vector2
+get_global_mouse_position() const : Vector2
+get_local_mouse_position() const : Vector2
+set_notify_local_transform(bool p_enable) : void
+is_local_transform_notification_enabled() const : bool
+set_notify_transform(bool p_enable) : void
+is_transform_notification_enabled() const : bool
+force_update_transform() : void
+get_anchorable_rect() const : Rect2
+get_canvas_layer() const : int
+CanvasItem() : void
+~CanvasItem() : void
-_class_name : StringName
-xform_change : SelfList<Node> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L181{xform_change}]]]
-canvas_item : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L183{canvas_item}]]]
-group : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L184{group}]]]
-canvas_layer : CanvasLayer * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L186{canvas_layer}]]]
-modulate : Color [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L188{modulate}]]]
-self_modulate : Color [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L189{self_modulate}]]]
-children_items : List<CanvasItem *> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L191{children_items}]]]
-C : List<CanvasItem *>::Element * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L192{C}]]]
-light_mask : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L194{light_mask}]]]
-first_draw : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L196{first_draw}]]]
-visible : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L197{visible}]]]
-pending_update : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L198{pending_update}]]]
-toplevel : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L199{toplevel}]]]
-drawing : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L200{drawing}]]]
-block_transform_notify : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L201{block_transform_notify}]]]
-behind : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L202{behind}]]]
-use_parent_material : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L203{use_parent_material}]]]
-notify_local_transform : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L204{notify_local_transform}]]]
-notify_transform : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L205{notify_transform}]]]
-material : Ref<Material> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L207{material}]]]
-global_transform : Transform2D [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L209{global_transform}]]]
-global_invalid : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L210{global_invalid}]]]
{static} -current_item_drawn : CanvasItem * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L226{current_item_drawn}]]]
+NOTIFICATION_TRANSFORM_CHANGED : enum
+NOTIFICATION_DRAW : enum
+NOTIFICATION_VISIBILITY_CHANGED : enum
+NOTIFICATION_ENTER_CANVAS : enum
+NOTIFICATION_EXIT_CANVAS : enum
+NOTIFICATION_LOCAL_TRANSFORM_CHANGED : enum
+NOTIFICATION_WORLD_2D_CHANGED : enum
}
class "Node2D" as C_0002289363354048605759
class C_0002289363354048605759 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L36{Node2D}]] {
-operator=(const Node2D & p_rval) : void
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} #_get_bind_methods() : void (*)()
{static} +initialize_class() : void
#_initialize_classv() : void
#_get_get() const : bool (Object::*)(const StringName &,Variant &) const
#_getv(const StringName & p_name, Variant & r_ret) const : bool
#_get_set() const : bool (Object::*)(const StringName &,const Variant &)
#_setv(const StringName & p_name, const Variant & p_property) : bool
#_get_get_property_list() const : void (Object::*)(List<PropertyInfo> *) const
#_get_property_listv(List<PropertyInfo> * p_list, bool p_reversed) const : void
#_get_notification() const : void (Object::*)(int)
#_notificationv(int p_notification, bool p_reversed) : void
-_update_transform() : void
-_update_xform_values() : void
{static} #_bind_methods() : void
+_edit_get_state() const : Dictionary
+_edit_set_state(const Dictionary & p_state) : void
+_edit_set_position(const Point2 & p_position) : void
+_edit_get_position() const : Point2
+_edit_set_scale(const Size2 & p_scale) : void
+_edit_get_scale() const : Size2
+_edit_set_rotation(float p_rotation) : void
+_edit_get_rotation() const : float
+_edit_use_rotation() const : bool
+_edit_set_rect(const Rect2 & p_edit_rect) : void
+set_position(const Point2 & p_pos) : void
+set_rotation(float p_radians) : void
+set_rotation_degrees(float p_degrees) : void
+set_scale(const Size2 & p_scale) : void
+rotate(float p_radians) : void
+move_x(float p_delta, bool p_scaled = false) : void
+move_y(float p_delta, bool p_scaled = false) : void
+translate(const Vector2 & p_amount) : void
+global_translate(const Vector2 & p_amount) : void
+apply_scale(const Size2 & p_amount) : void
+get_position() const : Point2
+get_rotation() const : float
+get_rotation_degrees() const : float
+get_scale() const : Size2
+get_global_position() const : Point2
+get_global_rotation() const : float
+get_global_rotation_degrees() const : float
+get_global_scale() const : Size2
+set_transform(const Transform2D & p_transform) : void
+set_global_transform(const Transform2D & p_transform) : void
+set_global_position(const Point2 & p_pos) : void
+set_global_rotation(float p_radians) : void
+set_global_rotation_degrees(float p_degrees) : void
+set_global_scale(const Size2 & p_scale) : void
+set_z_index(int p_z) : void
+get_z_index() const : int
+look_at(const Vector2 & p_pos) : void
+get_angle_to(const Vector2 & p_pos) const : float
+to_local(Point2 p_global) const : Point2
+to_global(Point2 p_local) const : Point2
+set_z_as_relative(bool p_enabled) : void
+is_z_relative() const : bool
+get_relative_transform_to_parent(const Node * p_parent) const : Transform2D
+get_transform() const : Transform2D
+Node2D() : void
-_class_name : StringName
-pos : Point2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L40{pos}]]]
-angle : float [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L41{angle}]]]
-_scale : Size2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L42{_scale}]]]
-z_index : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L43{z_index}]]]
-z_relative : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L44{z_relative}]]]
-_mat : Transform2D [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L46{_mat}]]]
-_xform_dirty : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L48{_xform_dirty}]]]
}
C_0001296138246691404804 o- - C_0000053309527800613276 : +elements
C_0000104564426296396960 - -> C_0001858199404643284193 : +classes
C_0000104564426296396960 - -> C_0001858199404643284193 : +resource_base_extensions
C_0000104564426296396960 - -> C_0001858199404643284193 : +compat_classes
C_0000104564426296396960 - -> C_0001858199404643284193 : +default_values
C_0000104564426296396960 - -> C_0001858199404643284193 : +default_values_cached
C_0002074383603489565895 o- - C_0001858199404643284193 : -_class_name
C_0002074383603489565895 o- - C_0001296138246691404804 : -global_transform
C_0002074383603489565895 - -> C_0002074383603489565895 : -current_item_drawn
C_0002074383603489565895 <.. C_0000104564426296396960 : +<<friend>>
C_0002289363354048605759 o- - C_0001858199404643284193 : -_class_name
C_0002289363354048605759 o- - C_0000053309527800613276 : -pos
C_0002289363354048605759 o- - C_0000053309527800613276 : -_scale
C_0002289363354048605759 o- - C_0001296138246691404804 : -_mat
C_0002289363354048605759 <.. C_0000104564426296396960 : +<<friend>>
C_0002074383603489565895 <|- - C_0002289363354048605759

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>