@startuml
title Godot Object class hierarchy
class "SafeNumeric<uint32_t>" as C_0001357046052919104842
class C_0001357046052919104842 {
}
class "SafeRefCount" as C_0000699772808699382057
class C_0000699772808699382057 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164{SafeRefCount}]] {
+ref() : bool
+refval() : uint32_t
+unref() : bool
+unrefval() : uint32_t
+get() const : uint32_t
+init(uint32_t p_value = 1) : void
}
class "Dictionary" as C_0001299121424291583786
class C_0001299121424291583786 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42{Dictionary}]] {
+get_key_list(List<Variant> * p_keys) const : void
+get_key_at_index(int p_index) const : Variant
+get_value_at_index(int p_index) const : Variant
+operator[](const Variant & p_key) : Variant &
+operator[](const Variant & p_key) const : const Variant &
+getptr(const Variant & p_key) const : const Variant *
+getptr(const Variant & p_key) : Variant *
+get_valid(const Variant & p_key) const : Variant
+get(const Variant & p_key, const Variant & p_default) const : Variant
+size() const : int
+empty() const : bool
+clear() : void
+has(const Variant & p_key) const : bool
+has_all(const Array & p_keys) const : bool
+erase(const Variant & p_key) : bool
+operator==(const Dictionary & p_dictionary) const : bool
+operator!=(const Dictionary & p_dictionary) const : bool
+hash() const : uint32_t
+operator=(const Dictionary & p_dictionary) : void
+next(const Variant * p_key = __null) const : const Variant *
+keys() const : Array
+values() const : Array
+duplicate(bool p_deep = false) const : Dictionary
+id() const : const void *
+Dictionary(const Dictionary & p_from) : void
+Dictionary() : void
+~Dictionary() : void
}
class "StringName" as C_0001858199404643284193
class C_0001858199404643284193 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44{StringName}]] {
+operator const void *() const : const void *
+operator==(const String & p_name) const : bool
+operator==(const char * p_name) const : bool
+operator!=(const String & p_name) const : bool
+operator<(const StringName & p_name) const : bool
+operator==(const StringName & p_name) const : bool
+hash() const : uint32_t
+data_unique_pointer() const : const void *
+operator!=(const StringName & p_name) const : bool
+operator String() const : String
{static} +search(const char * p_name) : StringName
{static} +search(const CharType * p_name) : StringName
{static} +search(const String & p_name) : StringName
+operator=(const StringName & p_name) : void
+StringName(const char * p_name) : void
+StringName(const StringName & p_name) : void
+StringName(const String & p_name) : void
+StringName(const StaticCString & p_static_string) : void
+StringName() : void
+~StringName() : void
}
class "RefPtr" as C_0002025812040042972946
class C_0002025812040042972946 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41{RefPtr}]] {
+is_null() const : bool
+operator=(const RefPtr & p_other) : void
+operator==(const RefPtr & p_other) const : bool
+operator!=(const RefPtr & p_other) const : bool
+get_rid() const : RID
+unref() : void
+get_data() const : void *
+RefPtr(const RefPtr & p_other) : void
+RefPtr() : void
+~RefPtr() : void
}
class "List<Object::Connection>" as C_0000751300156436098886
class C_0000751300156436098886 {
}
class "Set<String>" as C_0001682405743486361214
class C_0001682405743486361214 {
}
class "HashMap<StringName,Object::Signal>" as C_0001578539238208480863
class C_0001578539238208480863 {
}
class "Set<Object *>" as C_0000051860595756965531
class C_0000051860595756965531 {
}
class "Object" as C_0001531814603945772616
class C_0001531814603945772616 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408{Object}]] {
{static} +initialize_class() : void
{static} +register_custom_data_to_otdb() : void
+_change_notify(const char * p_property = "") : void
{static} +get_class_ptr_static() : void *
+_use_rc() : ObjectRC *
+_is_gpl_reversed() const : bool
+get_instance_id() const : ObjectID
+add_change_receptor(Object * p_receptor) : void
+remove_change_receptor(Object * p_receptor) : void
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_category_static() : String
+get_class() const : String
+get_save_class() const : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
+get_class_name() const : const StringName &
+set(const StringName & p_name, const Variant & p_value, bool * r_valid = __null) : void
+get(const StringName & p_name, bool * r_valid = __null) const : Variant
+set_indexed(const Vector<StringName> & p_names, const Variant & p_value, bool * r_valid = __null) : void
+get_indexed(const Vector<StringName> & p_names, bool * r_valid = __null) const : Variant
+get_property_list(List<PropertyInfo> * p_list, bool p_reversed = false) const : void
+has_method(const StringName & p_method) const : bool
+get_method_list(List<MethodInfo> * p_list) const : void
+callv(const StringName & p_method, const Array & p_args) : Variant
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call_multilevel(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call_multilevel_reversed(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
+call_multilevel(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notification(int p_notification, bool p_reversed = false) : void
+to_string() : String
+getvar(const Variant & p_key, bool * r_valid = __null) const : Variant
+setvar(const Variant & p_key, const Variant & p_value, bool * r_valid = __null) : void
+set_script(const RefPtr & p_script) : void
+get_script() const : RefPtr
+has_meta(const String & p_name) const : bool
+set_meta(const String & p_name, const Variant & p_value) : void
+remove_meta(const String & p_name) : void
+get_meta(const String & p_name) const : Variant
+get_meta_list(List<String> * p_list) const : void
+set_edited(bool p_edited) : void
+is_edited() const : bool
+get_edited_version() const : uint32_t
+set_script_instance(ScriptInstance * p_instance) : void
+get_script_instance() const : ScriptInstance *
+set_script_and_instance(const RefPtr & p_script, ScriptInstance * p_instance) : void
+add_user_signal(const MethodInfo & p_signal) : void
+emit_signal(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+emit_signal(const StringName & p_name, const Variant ** p_args, int p_argcount) : Error
+has_signal(const StringName & p_name) const : bool
+get_signal_list(List<MethodInfo> * p_signals) const : void
+get_signal_connection_list(const StringName & p_signal, List<Object::Connection> * p_connections) const : void
+get_all_signal_connections(List<Object::Connection> * p_connections) const : void
+get_persistent_signal_connection_count() const : int
+get_signals_connected_to_this(List<Object::Connection> * p_connections) const : void
+connect(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method, const Vector<Variant> & p_binds = Vector<Variant>(), uint32_t p_flags = 0) : Error
+disconnect(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method) : void
+is_connected(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method) const : bool
+call_deferred(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+set_deferred(const StringName & p_property, const Variant & p_value) : void
+set_block_signals(bool p_block) : void
+is_blocking_signals() const : bool
+get_static_property_type(const StringName & p_property, bool * r_valid = __null) const : Variant::Type
+get_static_property_type_indexed(const Vector<StringName> & p_path, bool * r_valid = __null) const : Variant::Type
+get_translatable_strings(List<String> * p_strings) const : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+tr(const StringName & p_message) const : StringName
+is_queued_for_deletion() const : bool
+set_message_translation(bool p_enable) : void
+can_translate_messages() const : bool
+editor_set_section_unfold(const String & p_section, bool p_unfolded) : void
+editor_is_section_unfolded(const String & p_section) : bool
+editor_get_section_folding() const : const Set<String> &
+editor_clear_section_folding() : void
+get_script_instance_binding(int p_script_language_index) : void *
+has_script_instance_binding(int p_script_language_index) : bool
+set_script_instance_binding(int p_script_language_index, void * p_data) : void
+clear_internal_resource_paths() : void
+Object() : void
+~Object() : void
{static} +cast_to<T>(Object * p_object) : T *
{static} +cast_to<T>(const Object * p_object) : const T *
+_is_queued_for_deletion : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745{_is_queued_for_deletion}]]]
+NOTIFICATION_POSTINITIALIZE : enum
+NOTIFICATION_PREDELETE : enum
}
enum "Object::ConnectFlags" as C_0000219886141561409828
enum C_0000219886141561409828 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410{Object##ConnectFlags}]] {
CONNECT_DEFERRED
CONNECT_PERSIST
CONNECT_ONESHOT
CONNECT_REFERENCE_COUNTED
}
class "Object::Connection" as C_0001267214583673362755
class C_0001267214583673362755 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418{Object##Connection}]] {
+operator<(const Object::Connection & p_conn) const : bool
+operator Variant() const : Variant
+Connection() : void
+Connection(const Variant & p_variant) : void
+source : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420{source}]]]
+signal : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421{signal}]]]
+target : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422{target}]]]
+method : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423{method}]]]
+flags : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424{flags}]]]
+binds : Vector<Variant> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425{binds}]]]
}
class "Object::Signal" as C_0000250357724807605097
class C_0000250357724807605097 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448{Object##Signal}]] {
+Signal() : void
+user : MethodInfo [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472{user}]]]
+slot_map : VMap<Object::Signal::Target,Object::Signal::Slot> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473{slot_map}]]]
}
class "ObjectDB" as C_0002064336919270342687
class C_0002064336919270342687 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773{ObjectDB}]] {
{static} +get_instance(ObjectID p_instance_id) : Object *
{static} +debug_objects(ObjectDB::DebugFunc p_func) : void
{static} +get_object_count() : int
{static} +instance_validate(Object * p_ptr) : bool
}
class "ClassDB" as C_0000104564426296396960
class C_0000104564426296396960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94{ClassDB}]] {
{static} +bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition & method_name, const Variant ** p_defs, int p_defcount) : MethodBind *
{static} +_add_class2(const StringName & p_class, const StringName & p_inherits) : void
{static} +get_class_list(List<StringName> * p_classes) : void
{static} +get_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_direct_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_parent_class_nocheck(const StringName & p_class) : StringName
{static} +get_parent_class(const StringName & p_class) : StringName
{static} +class_exists(const StringName & p_class) : bool
{static} +is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +can_instance(const StringName & p_class) : bool
{static} +instance(const StringName & p_class) : Object *
{static} +get_api_type(const StringName & p_class) : ClassDB::APIType
{static} +get_api_hash(ClassDB::APIType p_api) : uint64_t
{static} +add_signal(StringName p_class, const MethodInfo & p_signal) : void
{static} +has_signal(StringName p_class, StringName p_signal) : bool
{static} +get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool
{static} +get_signal_list(StringName p_class, List<MethodInfo> * p_signals, bool p_no_inheritance = false) : void
{static} +add_property_group(StringName p_class, const String & p_name, const String & p_prefix = "") : void
{static} +add_property(StringName p_class, const PropertyInfo & p_pinfo, const StringName & p_setter, const StringName & p_getter, int p_index = -1) : void
{static} +set_property_default_value(StringName p_class, const StringName & p_name, const Variant & p_default) : void
{static} +get_property_list(StringName p_class, List<PropertyInfo> * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void
{static} +set_property(Object * p_object, const StringName & p_property, const Variant & p_value, bool * r_valid = __null) : bool
{static} +get_property(Object * p_object, const StringName & p_property, Variant & r_value) : bool
{static} +has_property(const StringName & p_class, const StringName & p_property, bool p_no_inheritance = false) : bool
{static} +get_property_index(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : int
{static} +get_property_type(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : Variant::Type
{static} +get_property_setter(StringName p_class, const StringName & p_property) : StringName
{static} +get_property_getter(StringName p_class, const StringName & p_property) : StringName
{static} +has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool
{static} +set_method_flags(StringName p_class, StringName p_method, int p_flags) : void
{static} +get_method_list(StringName p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void
{static} +get_method(StringName p_class, StringName p_name) : MethodBind *
{static} +add_virtual_method(const StringName & p_class, const MethodInfo & p_method, bool p_virtual = true) : void
{static} +get_virtual_methods(const StringName & p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false) : void
{static} +bind_integer_constant(const StringName & p_class, const StringName & p_enum, const StringName & p_name, int p_constant) : void
{static} +get_integer_constant_list(const StringName & p_class, List<String> * p_constants, bool p_no_inheritance = false) : void
{static} +get_integer_constant(const StringName & p_class, const StringName & p_name, bool * p_success = __null) : int
{static} +get_integer_constant_enum(const StringName & p_class, const StringName & p_name, bool p_no_inheritance = false) : StringName
{static} +get_enum_list(const StringName & p_class, List<StringName> * p_enums, bool p_no_inheritance = false) : void
{static} +get_enum_constants(const StringName & p_class, const StringName & p_enum, List<StringName> * p_constants, bool p_no_inheritance = false) : void
{static} +class_get_default_property_value(const StringName & p_class, const StringName & p_property, bool * r_valid = __null) : Variant
{static} +get_category(const StringName & p_node) : StringName
{static} +set_class_enabled(StringName p_class, bool p_enable) : void
{static} +is_class_enabled(StringName p_class) : bool
{static} +is_class_exposed(StringName p_class) : bool
{static} +add_resource_base_extension(const StringName & p_extension, const StringName & p_class) : void
{static} +get_resource_base_extensions(List<String> * p_extensions) : void
{static} +get_extensions_for_type(const StringName & p_class, List<String> * p_extensions) : void
{static} +add_compatibility_class(const StringName & p_class, const StringName & p_fallback) : void
{static} +set_current_api(ClassDB::APIType p_api) : void
{static} +get_current_api() : ClassDB::APIType
{static} +cleanup_defaults() : void
{static} +cleanup() : void
{static} +creator<T>() : class Object *
{static} +_add_class<T>() : void
{static} +register_class<T>() : void
{static} +register_virtual_class<T>() : void
{static} +_create_ptr_func<T>() : class Object *
{static} +register_custom_instance_class<T>() : void
{static} +bind_method<N,M>(N p_method_name, M p_method) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7, const Variant & p_def8) : class MethodBind *
{static} +bind_vararg_method<M>(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo & p_info = MethodInfo(), const Vector<Variant> & p_default_args = Vector<Variant>(), bool p_return_nil_is_variant = true) : class MethodBind *
{static} +lock : RWLock [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146{lock}]]]
{static} +classes : HashMap<StringName,ClassDB::ClassInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147{classes}]]]
{static} +resource_base_extensions : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148{resource_base_extensions}]]]
{static} +compat_classes : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149{compat_classes}]]]
{static} +current_api : ClassDB::APIType [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157{current_api}]]]
{static} +default_values : HashMap<StringName,HashMap<StringName,Variant>> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161{default_values}]]]
{static} +default_values_cached : Set<StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162{default_values_cached}]]]
}
class "Reference" as C_0001778859257025660860
class C_0001778859257025660860 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39{Reference}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+is_referenced() const : bool
+init_ref() : bool
+reference() : bool
+unreference() : bool
+reference_get_count() const : int
+Reference() : void
+~Reference() : void
}
class "Node" as C_0000218299049716973303
class C_0000218299049716973303 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55{Node}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_name() const : StringName
+set_name(const String & p_name) : void
+add_child(Node * p_child, bool p_legible_unique_name = false) : void
+add_child_below_node(Node * p_node, Node * p_child, bool p_legible_unique_name = false) : void
+remove_child(Node * p_child) : void
+get_child_count() const : int
+get_child(int p_index) const : Node *
+has_node(const NodePath & p_path) const : bool
+get_node(const NodePath & p_path) const : Node *
+get_node_or_null(const NodePath & p_path) const : Node *
+find_node(const String & p_mask, bool p_recursive = true, bool p_owned = true) const : Node *
+has_node_and_resource(const NodePath & p_path) const : bool
+get_node_and_resource(const NodePath & p_path, RES & r_res, Vector<StringName> & r_leftover_subpath, bool p_last_is_property = true) const : Node *
+get_parent() const : Node *
+find_parent(const String & p_mask) const : Node *
+get_tree() const : SceneTree *
+is_inside_tree() const : bool
+is_a_parent_of(const Node * p_node) const : bool
+is_greater_than(const Node * p_node) const : bool
+get_path() const : NodePath
+get_path_to(const Node * p_node) const : NodePath
+find_common_parent_with(const Node * p_node) const : Node *
+add_to_group(const StringName & p_identifier, bool p_persistent = false) : void
+remove_from_group(const StringName & p_identifier) : void
+is_in_group(const StringName & p_identifier) const : bool
+get_groups(List<Node::GroupInfo> * p_groups) const : void
+get_persistent_group_count() const : int
+move_child(Node * p_child, int p_pos) : void
+raise() : void
+set_owner(Node * p_owner) : void
+get_owner() const : Node *
+get_owned_by(Node * p_by, List<Node *> * p_owned) : void
+remove_and_skip() : void
+get_index() const : int
+print_tree() : void
+print_tree_pretty() : void
+set_filename(const String & p_filename) : void
+get_filename() const : String
+set_editor_description(const String & p_editor_description) : void
+get_editor_description() const : String
+set_editable_instance(Node * p_node, bool p_editable) : void
+is_editable_instance(const Node * p_node) const : bool
+get_deepest_editable_node(Node * start_node) const : Node *
+propagate_notification(int p_notification) : void
+propagate_call(const StringName & p_method, const Array & p_args = Array(), const bool p_parent_first = false) : void
+set_physics_process(bool p_process) : void
+get_physics_process_delta_time() const : float
+is_physics_processing() const : bool
+set_process(bool p_idle_process) : void
+get_process_delta_time() const : float
+is_processing() const : bool
+set_physics_process_internal(bool p_process_internal) : void
+is_physics_processing_internal() const : bool
+set_process_internal(bool p_idle_process_internal) : void
+is_processing_internal() const : bool
+set_process_priority(int p_priority) : void
+get_process_priority() const : int
+set_process_input(bool p_enable) : void
+is_processing_input() const : bool
+set_process_unhandled_input(bool p_enable) : void
+is_processing_unhandled_input() const : bool
+set_process_unhandled_key_input(bool p_enable) : void
+is_processing_unhandled_key_input() const : bool
+get_position_in_parent() const : int
+duplicate(int p_flags = DUPLICATE_GROUPS | DUPLICATE_SIGNALS | DUPLICATE_SCRIPTS) const : Node *
+duplicate_and_reown(const Map<Node *,Node *> & p_reown_map) const : Node *
+duplicate_from_editor(Map<const Node *,Node *> & r_duplimap) const : Node *
+duplicate_from_editor(Map<const Node *,Node *> & r_duplimap, const Map<RES,RES> & p_resource_remap) const : Node *
+remap_node_resources(Node * p_node, const Map<RES,RES> & p_resource_remap) const : void
+remap_nested_resources(RES p_resource, const Map<RES,RES> & p_resource_remap) const : void
+set_scene_instance_state(const Ref<SceneState> & p_state) : void
+get_scene_instance_state() const : Ref<SceneState>
+set_scene_inherited_state(const Ref<SceneState> & p_state) : void
+get_scene_inherited_state() const : Ref<SceneState>
+set_scene_instance_load_placeholder(bool p_enable) : void
+get_scene_instance_load_placeholder() const : bool
{static} +make_binds(const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Vector<Variant>
+replace_by(Node * p_node, bool p_keep_data = false) : void
+set_pause_mode(Node::PauseMode p_mode) : void
+get_pause_mode() const : Node::PauseMode
+can_process() const : bool
+can_process_notification(int p_what) const : bool
+request_ready() : void
{static} +print_stray_nodes() : void
+validate_child_name(Node * p_child) : String
+queue_delete() : void
{static} +set_human_readable_collision_renaming(bool p_enabled) : void
{static} +init_node_hrcr() : void
+force_parent_owned() : void
+set_import_path(const NodePath & p_import_path) : void
+get_import_path() const : NodePath
+is_owned_by_parent() const : bool
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+clear_internal_tree_resource_paths() : void
+get_viewport() const : Viewport *
+get_configuration_warning() const : String
+update_configuration_warning() : void
+set_display_folded(bool p_folded) : void
+is_displayed_folded() const : bool
+set_network_master(int p_peer_id, bool p_recursive = true) : void
+get_network_master() const : int
+is_network_master() const : bool
+rpc_config(const StringName & p_method, MultiplayerAPI::RPCMode p_mode) : void
+rset_config(const StringName & p_property, MultiplayerAPI::RPCMode p_mode) : void
+rpc(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_unreliable(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_id(int p_peer_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_unreliable_id(int p_peer_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rset(const StringName & p_property, const Variant & p_value) : void
+rset_unreliable(const StringName & p_property, const Variant & p_value) : void
+rset_id(int p_peer_id, const StringName & p_property, const Variant & p_value) : void
+rset_unreliable_id(int p_peer_id, const StringName & p_property, const Variant & p_value) : void
+rpcp(int p_peer_id, bool p_unreliable, const StringName & p_method, const Variant ** p_arg, int p_argcount) : void
+rsetp(int p_peer_id, bool p_unreliable, const StringName & p_property, const Variant & p_value) : void
+get_multiplayer() const : Ref<MultiplayerAPI>
+get_custom_multiplayer() const : Ref<MultiplayerAPI>
+set_custom_multiplayer(Ref<MultiplayerAPI> p_multiplayer) : void
+get_node_rpc_mode(const StringName & p_method) : const Map<StringName,MultiplayerAPI::RPCMode>::Element *
+get_node_rset_mode(const StringName & p_property) : const Map<StringName,MultiplayerAPI::RPCMode>::Element *
+Node() : void
+~Node() : void
{static} +orphan_node_count : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78{orphan_node_count}]]]
+NOTIFICATION_ENTER_TREE : enum
+NOTIFICATION_EXIT_TREE : enum
+NOTIFICATION_MOVED_IN_PARENT : enum
+NOTIFICATION_READY : enum
+NOTIFICATION_PAUSED : enum
+NOTIFICATION_UNPAUSED : enum
+NOTIFICATION_PHYSICS_PROCESS : enum
+NOTIFICATION_PROCESS : enum
+NOTIFICATION_PARENTED : enum
+NOTIFICATION_UNPARENTED : enum
+NOTIFICATION_INSTANCED : enum
+NOTIFICATION_DRAG_BEGIN : enum
+NOTIFICATION_DRAG_END : enum
+NOTIFICATION_PATH_CHANGED : enum
+NOTIFICATION_INTERNAL_PROCESS : enum
+NOTIFICATION_INTERNAL_PHYSICS_PROCESS : enum
+NOTIFICATION_POST_ENTER_TREE : enum
+NOTIFICATION_WM_MOUSE_ENTER : enum
+NOTIFICATION_WM_MOUSE_EXIT : enum
+NOTIFICATION_WM_FOCUS_IN : enum
+NOTIFICATION_WM_FOCUS_OUT : enum
+NOTIFICATION_WM_QUIT_REQUEST : enum
+NOTIFICATION_WM_GO_BACK_REQUEST : enum
+NOTIFICATION_WM_UNFOCUS_REQUEST : enum
+NOTIFICATION_OS_MEMORY_WARNING : enum
+NOTIFICATION_TRANSLATION_CHANGED : enum
+NOTIFICATION_WM_ABOUT : enum
+NOTIFICATION_CRASH : enum
+NOTIFICATION_OS_IME_UPDATE : enum
+NOTIFICATION_APP_RESUMED : enum
+NOTIFICATION_APP_PAUSED : enum
}
class "ObjectRC" as C_0000933379568804427881
class C_0000933379568804427881 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54{ObjectRC}]] {
+increment() : void
+decrement() : bool
+invalidate() : bool
+get_ptr() : Object *
+ObjectRC(Object * p_object) : void
+instance_id : const ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52{instance_id}]]]
}
abstract "ScriptInstance" as C_0001735438654351294549
abstract C_0001735438654351294549 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405{ScriptInstance}]] {
{abstract} +set(const StringName & p_name, const Variant & p_value) = 0 : bool
{abstract} +get(const StringName & p_name, Variant & r_ret) const = 0 : bool
{abstract} +get_property_list(List<PropertyInfo> * p_properties) const = 0 : void
{abstract} +get_property_type(const StringName & p_name, bool * r_is_valid = __null) const = 0 : Variant::Type
+get_owner() : Object *
+get_property_state(List<Pair<StringName,Variant>> & state) : void
{abstract} +get_method_list(List<MethodInfo> * p_list) const = 0 : void
{abstract} +has_method(const StringName & p_method) const = 0 : bool
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
{abstract} +call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) = 0 : Variant
+call_multilevel(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+call_multilevel(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call_multilevel_reversed(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
{abstract} +notification(int p_notification) = 0 : void
+to_string(bool * r_valid) : String
+refcount_incremented() : void
+refcount_decremented() : bool
{abstract} +get_script() const = 0 : Ref<Script>
+is_placeholder() const : bool
+property_set_fallback(const StringName & p_name, const Variant & p_value, bool * r_valid) : void
+property_get_fallback(const StringName & p_name, bool * r_valid) : Variant
{abstract} +get_rpc_mode(const StringName & p_method) const = 0 : MultiplayerAPI::RPCMode
{abstract} +get_rset_mode(const StringName & p_variable) const = 0 : MultiplayerAPI::RPCMode
{abstract} +get_language() = 0 : ScriptLanguage *
+~ScriptInstance() : void
}
class "PlaceHolderScriptInstance" as C_0001649884439586022807
class C_0001649884439586022807 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374{PlaceHolderScriptInstance}]] {
+set(const StringName & p_name, const Variant & p_value) : bool
+get(const StringName & p_name, Variant & r_ret) const : bool
+get_property_list(List<PropertyInfo> * p_properties) const : void
+get_property_type(const StringName & p_name, bool * r_is_valid = __null) const : Variant::Type
+get_method_list(List<MethodInfo> * p_list) const : void
+has_method(const StringName & p_method) const : bool
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+notification(int p_notification) : void
+get_script() const : Ref<Script>
+get_language() : ScriptLanguage *
+get_owner() : Object *
+update(const List<PropertyInfo> & p_properties, const Map<StringName,Variant> & p_values) : void
+is_placeholder() const : bool
+property_set_fallback(const StringName & p_name, const Variant & p_value, bool * r_valid = __null) : void
+property_get_fallback(const StringName & p_name, bool * r_valid = __null) : Variant
+get_rpc_mode(const StringName & p_method) const : MultiplayerAPI::RPCMode
+get_rset_mode(const StringName & p_variable) const : MultiplayerAPI::RPCMode
+PlaceHolderScriptInstance(ScriptLanguage * p_language, Ref<Script> p_script, Object * p_owner) : void
+~PlaceHolderScriptInstance() : void
}
class "MainLoop" as C_0000970940027123558604
class C_0000970940027123558604 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38{MainLoop}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+input_event(const Ref<InputEvent> & p_event) : void
+input_text(const String & p_text) : void
+init() : void
+iteration(float p_time) : bool
+idle(float p_time) : bool
+finish() : void
+drop_files(const Vector<String> & p_files, int p_from_screen = 0) : void
+global_menu_action(const Variant & p_id, const Variant & p_meta) : void
+set_init_script(const Ref<Script> & p_init_script) : void
+MainLoop() : void
+~MainLoop() : void
+NOTIFICATION_WM_MOUSE_ENTER : enum
+NOTIFICATION_WM_MOUSE_EXIT : enum
+NOTIFICATION_WM_FOCUS_IN : enum
+NOTIFICATION_WM_FOCUS_OUT : enum
+NOTIFICATION_WM_QUIT_REQUEST : enum
+NOTIFICATION_WM_GO_BACK_REQUEST : enum
+NOTIFICATION_WM_UNFOCUS_REQUEST : enum
+NOTIFICATION_OS_MEMORY_WARNING : enum
+NOTIFICATION_TRANSLATION_CHANGED : enum
+NOTIFICATION_WM_ABOUT : enum
+NOTIFICATION_CRASH : enum
+NOTIFICATION_OS_IME_UPDATE : enum
+NOTIFICATION_APP_RESUMED : enum
+NOTIFICATION_APP_PAUSED : enum
}
class "Engine::Singleton" as C_0001823345232236209470
class C_0001823345232236209470 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42{Engine##Singleton}]] {
+Singleton(const StringName & p_name = StringName(), Object * p_ptr = __null) : void
+name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43{name}]]]
+ptr : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44{ptr}]]]
}
class "TranslationServer" as C_0001485048025194488343
class C_0001485048025194488343 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67{TranslationServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : TranslationServer *
+set_enabled(bool p_enabled) : void
+is_enabled() const : bool
+set_locale(const String & p_locale) : void
+get_locale() const : String
+get_locale_name(const String & p_locale) const : String
+get_loaded_locales() const : Array
+add_translation(const Ref<Translation> & p_translation) : void
+remove_translation(const Ref<Translation> & p_translation) : void
+translate(const StringName & p_message) const : StringName
{static} +get_all_locales() : Vector<String>
{static} +get_all_locale_names() : Vector<String>
{static} +is_locale_valid(const String & p_locale) : bool
{static} +standardize_locale(const String & p_locale) : String
{static} +get_language_code(const String & p_locale) : String
+set_tool_translation(const Ref<Translation> & p_translation) : void
+tool_translate(const StringName & p_message) const : StringName
+setup() : void
+clear() : void
+load_translations() : void
+TranslationServer() : void
}
class "_ObjectDebugLock" as C_0000132048052014479231
class C_0000132048052014479231 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45{_ObjectDebugLock}]] {
+_ObjectDebugLock(Object * p_obj) : void
+~_ObjectDebugLock() : void
+obj : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47{obj}]]]
}
class "_ObjectSignalDisconnectData" as C_0000115801560197752094
class C_0000115801560197752094 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147{_ObjectSignalDisconnectData}]] {
+signal : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149{signal}]]]
+target : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150{target}]]]
+method : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151{method}]]]
}
class "ProjectSettings" as C_0000066148521405667716
class C_0000066148521405667716 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38{ProjectSettings}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+set_setting(const String & p_setting, const Variant & p_value) : void
+get_setting(const String & p_setting) const : Variant
+has_setting(String p_var) const : bool
+localize_path(const String & p_path) const : String
+globalize_path(const String & p_path) const : String
+set_initial_value(const String & p_name, const Variant & p_value) : void
+set_restart_if_changed(const String & p_name, bool p_restart) : void
+property_can_revert(const String & p_name) : bool
+property_get_revert(const String & p_name) : Variant
+get_resource_path() const : String
{static} +get_singleton() : ProjectSettings *
+clear(const String & p_name) : void
+get_order(const String & p_name) const : int
+set_order(const String & p_name, int p_order) : void
+set_builtin_order(const String & p_name) : void
+setup(const String & p_path, const String & p_main_pack, bool p_upwards = false) : Error
+save_custom(const String & p_path = "", const ProjectSettings::CustomMap & p_custom = CustomMap(), const Vector<String> & p_custom_features = Vector<String>(), bool p_merge_with_current = true) : Error
+save() : Error
+set_custom_property_info(const String & p_prop, const PropertyInfo & p_info) : void
+get_custom_property_info() const : const Map<StringName,PropertyInfo> &
+get_last_saved_time() : uint64_t
+get_optimizer_presets() const : Vector<String>
+get_input_presets() const : List<String>
+set_disable_feature_overrides(bool p_disable) : void
+is_using_datapack() const : bool
+set_registering_order(bool p_enable) : void
+has_custom_feature(const String & p_feature) const : bool
+ProjectSettings() : void
+~ProjectSettings() : void
+NO_BUILTIN_ORDER_BASE : enum
{static} +CONFIG_VERSION : const int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117{CONFIG_VERSION}]]]
}
abstract "IP" as C_0001191393512042218074
abstract C_0001191393512042218074 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39{IP}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+resolve_hostname(const String & p_hostname, IP::Type p_type = TYPE_ANY) : IP_Address
+resolve_hostname_queue_item(const String & p_hostname, IP::Type p_type = TYPE_ANY) : IP::ResolverID
+get_resolve_item_status(IP::ResolverID p_id) const : IP::ResolverStatus
+get_resolve_item_address(IP::ResolverID p_id) const : IP_Address
+get_local_addresses(List<IP_Address> * r_addresses) const : void
{abstract} +get_local_interfaces(Map<String,IP::Interface_Info> * r_interfaces) const = 0 : void
+erase_resolve_item(IP::ResolverID p_id) : void
+clear_cache(const String & p_hostname = "") : void
{static} +get_singleton() : IP *
{static} +create() : IP *
+IP() : void
+~IP() : void
+RESOLVER_MAX_QUERIES : enum
+RESOLVER_INVALID_ID : enum
}
class "_ResourceLoader" as C_0001197720528033242618
class C_0001197720528033242618 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45{_ResourceLoader}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _ResourceLoader *
+load_interactive(const String & p_path, const String & p_type_hint = "") : Ref<ResourceInteractiveLoader>
+load(const String & p_path, const String & p_type_hint = "", bool p_no_cache = false) : RES
+get_recognized_extensions_for_type(const String & p_type) : PoolVector<String>
+set_abort_on_missing_resources(bool p_abort) : void
+get_dependencies(const String & p_path) : PoolStringArray
+has(const String & p_path) : bool
+has_cached(const String & p_path) : bool
+exists(const String & p_path, const String & p_type_hint = "") : bool
+_ResourceLoader() : void
}
class "_ResourceSaver" as C_0001130773750498288283
class C_0001130773750498288283 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68{_ResourceSaver}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _ResourceSaver *
+save(const String & p_path, const RES & p_resource, _ResourceSaver::SaverFlags p_flags) : Error
+get_recognized_extensions(const RES & p_resource) : PoolVector<String>
+_ResourceSaver() : void
}
class "_OS" as C_0000790752023609648644
class C_0000790752023609648644 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99{_OS}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+global_menu_add_item(const String & p_menu, const String & p_label, const Variant & p_signal, const Variant & p_meta) : void
+global_menu_add_separator(const String & p_menu) : void
+global_menu_remove_item(const String & p_menu, int p_idx) : void
+global_menu_clear(const String & p_menu) : void
+get_mouse_position() const : Point2
+set_window_title(const String & p_title) : void
+set_window_mouse_passthrough(const PoolVector2Array & p_region) : void
+get_mouse_button_state() const : int
+set_clipboard(const String & p_text) : void
+get_clipboard() const : String
+set_video_mode(const Size2 & p_size, bool p_fullscreen, bool p_resizeable, int p_screen = 0) : void
+get_video_mode(int p_screen = 0) const : Size2
+is_video_mode_fullscreen(int p_screen = 0) const : bool
+is_video_mode_resizable(int p_screen = 0) const : bool
+get_fullscreen_mode_list(int p_screen = 0) const : Array
+get_video_driver_count() const : int
+get_video_driver_name(_OS::VideoDriver p_driver) const : String
+get_current_video_driver() const : _OS::VideoDriver
+get_audio_driver_count() const : int
+get_audio_driver_name(int p_driver) const : String
+get_connected_midi_inputs() : PoolStringArray
+open_midi_inputs() : void
+close_midi_inputs() : void
+get_screen_count() const : int
+get_current_screen() const : int
+set_current_screen(int p_screen) : void
+get_screen_position(int p_screen = -1) const : Point2
+get_screen_size(int p_screen = -1) const : Size2
+get_screen_dpi(int p_screen = -1) const : int
+get_screen_scale(int p_screen = -1) const : float
+get_screen_max_scale() const : float
+get_window_position() const : Point2
+set_window_position(const Point2 & p_position) : void
+get_max_window_size() const : Size2
+get_min_window_size() const : Size2
+get_window_size() const : Size2
+get_real_window_size() const : Size2
+get_window_safe_area() const : Rect2
+set_max_window_size(const Size2 & p_size) : void
+set_min_window_size(const Size2 & p_size) : void
+set_window_size(const Size2 & p_size) : void
+set_window_fullscreen(bool p_enabled) : void
+is_window_fullscreen() const : bool
+set_window_resizable(bool p_enabled) : void
+is_window_resizable() const : bool
+set_window_minimized(bool p_enabled) : void
+is_window_minimized() const : bool
+set_window_maximized(bool p_enabled) : void
+is_window_maximized() const : bool
+set_window_always_on_top(bool p_enabled) : void
+is_window_always_on_top() const : bool
+is_window_focused() const : bool
+request_attention() : void
+center_window() : void
+move_window_to_foreground() : void
+get_native_handle(_OS::HandleType p_handle_type) : int64_t
+set_borderless_window(bool p_borderless) : void
+get_borderless_window() const : bool
+get_window_per_pixel_transparency_enabled() const : bool
+set_window_per_pixel_transparency_enabled(bool p_enabled) : void
+set_ime_active(const bool p_active) : void
+set_ime_position(const Point2 & p_pos) : void
+get_ime_selection() const : Point2
+get_ime_text() const : String
+native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error
+native_video_is_playing() : bool
+native_video_pause() : void
+native_video_unpause() : void
+native_video_stop() : void
+set_low_processor_usage_mode(bool p_enabled) : void
+is_in_low_processor_usage_mode() const : bool
+set_low_processor_usage_mode_sleep_usec(int p_usec) : void
+get_low_processor_usage_mode_sleep_usec() const : int
+get_executable_path() const : String
+execute(const String & p_path, const Vector<String> & p_arguments, bool p_blocking = true, Array p_output = = Array(), bool p_read_stderr = false) : int
+kill(int p_pid) : Error
+shell_open(String p_uri) : Error
+get_process_id() const : int
+has_environment(const String & p_var) const : bool
+get_environment(const String & p_var) const : String
+set_environment(const String & p_var, const String & p_value) const : bool
+get_name() const : String
+get_cmdline_args() : Vector<String>
+get_locale() const : String
+get_latin_keyboard_variant() const : String
+keyboard_get_layout_count() const : int
+keyboard_get_current_layout() const : int
+keyboard_set_current_layout(int p_index) : void
+keyboard_get_layout_language(int p_index) const : String
+keyboard_get_layout_name(int p_index) const : String
+get_model_name() const : String
+dump_memory_to_file(const String & p_file) : void
+dump_resources_to_file(const String & p_file) : void
+has_virtual_keyboard() const : bool
+show_virtual_keyboard(const String & p_existing_text = "", bool p_multiline = false) : void
+hide_virtual_keyboard() : void
+get_virtual_keyboard_height() : int
+print_resources_in_use(bool p_short = false) : void
+print_all_resources(const String & p_to_file) : void
+print_all_textures_by_size() : void
+print_resources_by_type(const Vector<String> & p_types) : void
+has_touchscreen_ui_hint() const : bool
+is_debug_build() const : bool
+get_unique_id() const : String
+get_scancode_string(uint32_t p_code) const : String
+is_scancode_unicode(uint32_t p_unicode) const : bool
+find_scancode_from_string(const String & p_code) const : int
+set_use_file_access_save_and_swap(bool p_enable) : void
+set_native_icon(const String & p_filename) : void
+set_icon(const Ref<Image> & p_icon) : void
+get_exit_code() const : int
+set_exit_code(int p_code) : void
+get_date(bool utc) const : Dictionary
+get_time(bool utc) const : Dictionary
+get_datetime(bool utc) const : Dictionary
+get_datetime_from_unix_time(int64_t unix_time_val) const : Dictionary
+get_unix_time_from_datetime(Dictionary datetime) const : int64_t
+get_time_zone_info() const : Dictionary
+get_unix_time() const : uint64_t
+get_system_time_secs() const : uint64_t
+get_system_time_msecs() const : uint64_t
+get_static_memory_usage() const : uint64_t
+get_static_memory_peak_usage() const : uint64_t
+get_dynamic_memory_usage() const : uint64_t
+delay_usec(int p_usec) const : void
+delay_msec(int p_msec) const : void
+get_ticks_msec() const : uint32_t
+get_ticks_usec() const : uint64_t
+get_splash_tick_msec() const : uint32_t
+can_use_threads() const : bool
+can_draw() const : bool
+is_userfs_persistent() const : bool
+is_stdout_verbose() const : bool
+get_processor_count() const : int
+get_system_dir(_OS::SystemDir p_dir, bool p_shared_storage = true) const : String
+get_user_data_dir() const : String
+alert(const String & p_alert, const String & p_title = "ALERT!") : void
+set_screen_orientation(_OS::ScreenOrientation p_orientation) : void
+get_screen_orientation() const : _OS::ScreenOrientation
+set_keep_screen_on(bool p_enabled) : void
+is_keep_screen_on() const : bool
+is_ok_left_and_cancel_right() const : bool
+set_thread_name(const String & p_name) : Error
+get_thread_caller_id() const : Thread::ID
+set_use_vsync(bool p_enable) : void
+is_vsync_enabled() const : bool
+set_vsync_via_compositor(bool p_enable) : void
+is_vsync_via_compositor_enabled() const : bool
+get_power_state() : _OS::PowerState
+get_power_seconds_left() : int
+get_power_percent_left() : int
+has_feature(const String & p_feature) const : bool
+request_permission(const String & p_name) : bool
+request_permissions() : bool
+get_granted_permissions() const : Vector<String>
+get_tablet_driver_count() const : int
+get_tablet_driver_name(int p_driver) const : String
+get_current_tablet_driver() const : String
+set_current_tablet_driver(const String & p_driver) : void
{static} +get_singleton() : _OS *
+_OS() : void
}
class "_Geometry" as C_0000897221634691489964
class C_0000897221634691489964 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401{_Geometry}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Geometry *
+build_box_planes(const Vector3 & p_extents) : PoolVector<Plane>
+build_cylinder_planes(float p_radius, float p_height, int p_sides, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector<Plane>
+build_capsule_planes(float p_radius, float p_height, int p_sides, int p_lats, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector<Plane>
+segment_intersects_segment_2d(const Vector2 & p_from_a, const Vector2 & p_to_a, const Vector2 & p_from_b, const Vector2 & p_to_b) : Variant
+line_intersects_line_2d(const Vector2 & p_from_a, const Vector2 & p_dir_a, const Vector2 & p_from_b, const Vector2 & p_dir_b) : Variant
+get_closest_points_between_segments_2d(const Vector2 & p1, const Vector2 & q1, const Vector2 & p2, const Vector2 & q2) : PoolVector<Vector2>
+get_closest_points_between_segments(const Vector3 & p1, const Vector3 & p2, const Vector3 & q1, const Vector3 & q2) : PoolVector<Vector3>
+get_closest_point_to_segment_2d(const Vector2 & p_point, const Vector2 & p_a, const Vector2 & p_b) : Vector2
+get_closest_point_to_segment(const Vector3 & p_point, const Vector3 & p_a, const Vector3 & p_b) : Vector3
+get_closest_point_to_segment_uncapped_2d(const Vector2 & p_point, const Vector2 & p_a, const Vector2 & p_b) : Vector2
+get_closest_point_to_segment_uncapped(const Vector3 & p_point, const Vector3 & p_a, const Vector3 & p_b) : Vector3
+ray_intersects_triangle(const Vector3 & p_from, const Vector3 & p_dir, const Vector3 & p_v0, const Vector3 & p_v1, const Vector3 & p_v2) : Variant
+segment_intersects_triangle(const Vector3 & p_from, const Vector3 & p_to, const Vector3 & p_v0, const Vector3 & p_v1, const Vector3 & p_v2) : Variant
+point_is_inside_triangle(const Vector2 & s, const Vector2 & a, const Vector2 & b, const Vector2 & c) const : bool
+segment_intersects_sphere(const Vector3 & p_from, const Vector3 & p_to, const Vector3 & p_sphere_pos, real_t p_sphere_radius) : PoolVector<Vector3>
+segment_intersects_cylinder(const Vector3 & p_from, const Vector3 & p_to, float p_height, float p_radius) : PoolVector<Vector3>
+segment_intersects_convex(const Vector3 & p_from, const Vector3 & p_to, const Vector<Plane> & p_planes) : PoolVector<Vector3>
+is_point_in_circle(const Vector2 & p_point, const Vector2 & p_circle_pos, real_t p_circle_radius) : bool
+segment_intersects_circle(const Vector2 & p_from, const Vector2 & p_to, const Vector2 & p_circle_pos, real_t p_circle_radius) : real_t
+get_uv84_normal_bit(const Vector3 & p_vector) : int
+is_polygon_clockwise(const Vector<Vector2> & p_polygon) : bool
+is_point_in_polygon(const Point2 & p_point, const Vector<Vector2> & p_polygon) : bool
+triangulate_polygon(const Vector<Vector2> & p_polygon) : Vector<int>
+triangulate_delaunay_2d(const Vector<Vector2> & p_points) : Vector<int>
+convex_hull_2d(const Vector<Point2> & p_points) : Vector<Point2>
+clip_polygon(const Vector<Vector3> & p_points, const Plane & p_plane) : Vector<Vector3>
+merge_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+clip_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+intersect_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+exclude_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+clip_polyline_with_polygon_2d(const Vector<Vector2> & p_polyline, const Vector<Vector2> & p_polygon) : Array
+intersect_polyline_with_polygon_2d(const Vector<Vector2> & p_polyline, const Vector<Vector2> & p_polygon) : Array
+offset_polygon_2d(const Vector<Vector2> & p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE) : Array
+offset_polyline_2d(const Vector<Vector2> & p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE, _Geometry::PolyEndType p_end_type = END_SQUARE) : Array
+make_atlas(const Vector<Size2> & p_rects) : Dictionary
+_Geometry() : void
}
class "_Marshalls" as C_0000135188690773659020
class C_0000135188690773659020 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629{_Marshalls}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Marshalls *
+variant_to_base64(const Variant & p_var, bool p_full_objects = false) : String
+base64_to_variant(const String & p_str, bool p_allow_objects = false) : Variant
+raw_to_base64(const PoolVector<uint8_t> & p_arr) : String
+base64_to_raw(const String & p_str) : PoolVector<uint8_t>
+utf8_to_base64(const String & p_str) : String
+base64_to_utf8(const String & p_str) : String
+_Marshalls() : void
+~_Marshalls() : void
}
class "_Thread" as C_0001150621116588802549
class C_0001150621116588802549 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679{_Thread}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+start(Object * p_instance, const StringName & p_method, const Variant & p_userdata = Variant(), _Thread::Priority p_priority = PRIORITY_NORMAL) : Error
+get_id() const : String
+is_active() const : bool
+wait_to_finish() : Variant
+_Thread() : void
+~_Thread() : void
}
class "_ClassDB" as C_0001186331261774827872
class C_0001186331261774827872 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713{_ClassDB}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_class_list() const : PoolStringArray
+get_inheriters_from_class(const StringName & p_class) const : PoolStringArray
+get_parent_class(const StringName & p_class) const : StringName
+class_exists(const StringName & p_class) const : bool
+is_parent_class(const StringName & p_class, const StringName & p_inherits) const : bool
+can_instance(const StringName & p_class) const : bool
+instance(const StringName & p_class) const : Variant
+has_signal(StringName p_class, StringName p_signal) const : bool
+get_signal(StringName p_class, StringName p_signal) const : Dictionary
+get_signal_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_property_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_property(Object * p_object, const StringName & p_property) const : Variant
+set_property(Object * p_object, const StringName & p_property, const Variant & p_value) const : Error
+has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) const : bool
+get_method_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_integer_constant_list(const StringName & p_class, bool p_no_inheritance = false) const : PoolStringArray
+has_integer_constant(const StringName & p_class, const StringName & p_name) const : bool
+get_integer_constant(const StringName & p_class, const StringName & p_name) const : int
+get_category(const StringName & p_node) const : StringName
+is_class_enabled(StringName p_class) const : bool
+_ClassDB() : void
+~_ClassDB() : void
}
class "_Engine" as C_0001895218672297528471
class C_0001895218672297528471 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752{_Engine}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Engine *
+set_iterations_per_second(int p_ips) : void
+get_iterations_per_second() const : int
+set_physics_jitter_fix(float p_threshold) : void
+get_physics_jitter_fix() const : float
+get_physics_interpolation_fraction() const : float
+set_target_fps(int p_fps) : void
+get_target_fps() const : int
+get_frames_per_second() const : float
+get_physics_frames() const : uint64_t
+get_idle_frames() const : uint64_t
+get_frames_drawn() : int
+set_time_scale(float p_scale) : void
+get_time_scale() : float
+get_main_loop() const : MainLoop *
+get_version_info() const : Dictionary
+get_author_info() const : Dictionary
+get_copyright_info() const : Array
+get_donor_info() const : Dictionary
+get_license_info() const : Dictionary
+get_license_text() const : String
+is_in_physics_frame() const : bool
+has_singleton(const String & p_name) const : bool
+get_singleton_object(const String & p_name) const : Object *
+set_editor_hint(bool p_enabled) : void
+is_editor_hint() const : bool
+_Engine() : void
}
class "_JSON" as C_0000979065355535690103
class C_0000979065355535690103 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833{_JSON}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _JSON *
+print(const Variant & p_value, const String & p_indent = "", bool p_sort_keys = false) : String
+parse(const String & p_json) : Ref<JSONParseResult>
+_JSON() : void
}
class "CameraServer" as C_0001701907280759632930
class C_0001701907280759632930 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49{CameraServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : CameraServer *
{static} +create() : CameraServer *
+get_free_id() : int
+get_feed_index(int p_id) : int
+get_feed_by_id(int p_id) : Ref<CameraFeed>
+add_feed(const Ref<CameraFeed> & p_feed) : void
+remove_feed(const Ref<CameraFeed> & p_feed) : void
+get_feed(int p_index) : Ref<CameraFeed>
+get_feed_count() : int
+get_feeds() : Array
+feed_texture(int p_id, CameraServer::FeedImage p_texture) : RID
+CameraServer() : void
+~CameraServer() : void
{static} +make_default<T>() : void
}
abstract "VisualServer" as C_0001589464385186808769
abstract C_0001589464385186808769 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42{VisualServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : VisualServer *
{static} +create() : VisualServer *
{abstract} +texture_create() = 0 : RID
+texture_create_from_image(const Ref<Image> & p_image, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) : RID
{abstract} +texture_allocate(RID p_texture, int p_width, int p_height, int p_depth_3d, Image::Format p_format, VisualServer::TextureType p_type, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) = 0 : void
{abstract} +texture_set_data(RID p_texture, const Ref<Image> & p_image, int p_layer = 0) = 0 : void
{abstract} +texture_set_data_partial(RID p_texture, const Ref<Image> & p_image, int src_x, int src_y, int src_w, int src_h, int dst_x, int dst_y, int p_dst_mip, int p_layer = 0) = 0 : void
{abstract} +texture_get_data(RID p_texture, int p_layer = 0) const = 0 : Ref<Image>
{abstract} +texture_set_flags(RID p_texture, uint32_t p_flags) = 0 : void
{abstract} +texture_get_flags(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_format(RID p_texture) const = 0 : Image::Format
{abstract} +texture_get_type(RID p_texture) const = 0 : VisualServer::TextureType
{abstract} +texture_get_texid(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_width(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_height(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_depth(RID p_texture) const = 0 : uint32_t
{abstract} +texture_set_size_override(RID p_texture, int p_width, int p_height, int p_depth_3d) = 0 : void
{abstract} +texture_bind(RID p_texture, uint32_t p_texture_no) = 0 : void
{abstract} +texture_set_path(RID p_texture, const String & p_path) = 0 : void
{abstract} +texture_get_path(RID p_texture) const = 0 : String
{abstract} +texture_set_shrink_all_x2_on_set_data(bool p_enable) = 0 : void
{abstract} +texture_set_detect_3d_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_set_detect_srgb_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_set_detect_normal_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_debug_usage(List<VisualServer::TextureInfo> * r_info) = 0 : void
+_texture_debug_usage_bind() : Array
{abstract} +textures_keep_original(bool p_enable) = 0 : void
{abstract} +texture_set_proxy(RID p_proxy, RID p_base) = 0 : void
{abstract} +texture_set_force_redraw_if_visible(RID p_texture, bool p_enable) = 0 : void
{abstract} +sky_create() = 0 : RID
{abstract} +sky_set_texture(RID p_sky, RID p_cube_map, int p_radiance_size) = 0 : void
{abstract} +shader_create() = 0 : RID
{abstract} +shader_set_code(RID p_shader, const String & p_code) = 0 : void
{abstract} +shader_get_code(RID p_shader) const = 0 : String
{abstract} +shader_get_param_list(RID p_shader, List<PropertyInfo> * p_param_list) const = 0 : void
+_shader_get_param_list_bind(RID p_shader) const : Array
{abstract} +shader_set_default_texture_param(RID p_shader, const StringName & p_name, RID p_texture) = 0 : void
{abstract} +shader_get_default_texture_param(RID p_shader, const StringName & p_name) const = 0 : RID
{abstract} +shader_add_custom_define(RID p_shader, const String & p_define) = 0 : void
{abstract} +shader_get_custom_defines(RID p_shader, Vector<String> * p_defines) const = 0 : void
{abstract} +shader_remove_custom_define(RID p_shader, const String & p_define) = 0 : void
{abstract} +material_create() = 0 : RID
{abstract} +material_set_shader(RID p_shader_material, RID p_shader) = 0 : void
{abstract} +material_get_shader(RID p_shader_material) const = 0 : RID
{abstract} +material_set_param(RID p_material, const StringName & p_param, const Variant & p_value) = 0 : void
{abstract} +material_get_param(RID p_material, const StringName & p_param) const = 0 : Variant
{abstract} +material_get_param_default(RID p_material, const StringName & p_param) const = 0 : Variant
{abstract} +material_set_render_priority(RID p_material, int priority) = 0 : void
{abstract} +material_set_line_width(RID p_material, float p_width) = 0 : void
{abstract} +material_set_next_pass(RID p_material, RID p_next_material) = 0 : void
{abstract} +mesh_create() = 0 : RID
+mesh_surface_get_format_offset(uint32_t p_format, int p_vertex_len, int p_index_len, int p_array_index) const : uint32_t
+mesh_surface_get_format_stride(uint32_t p_format, int p_vertex_len, int p_index_len) const : uint32_t
+mesh_surface_make_offsets_from_format(uint32_t p_format, int p_vertex_len, int p_index_len, uint32_t * r_offsets) const : uint32_t
+mesh_add_surface_from_arrays(RID p_mesh, VisualServer::PrimitiveType p_primitive, const Array & p_arrays, const Array & p_blend_shapes = Array(), uint32_t p_compress_format = ARRAY_COMPRESS_DEFAULT) : void
{abstract} +mesh_add_surface(RID p_mesh, uint32_t p_format, VisualServer::PrimitiveType p_primitive, const PoolVector<uint8_t> & p_array, int p_vertex_count, const PoolVector<uint8_t> & p_index_array, int p_index_count, const AABB & p_aabb, const Vector<PoolVector<uint8_t>> & p_blend_shapes = Vector<PoolVector<uint8_t> >(), const Vector<AABB> & p_bone_aabbs = Vector<AABB>()) = 0 : void
{abstract} +mesh_set_blend_shape_count(RID p_mesh, int p_amount) = 0 : void
{abstract} +mesh_get_blend_shape_count(RID p_mesh) const = 0 : int
{abstract} +mesh_set_blend_shape_mode(RID p_mesh, VisualServer::BlendShapeMode p_mode) = 0 : void
{abstract} +mesh_get_blend_shape_mode(RID p_mesh) const = 0 : VisualServer::BlendShapeMode
{abstract} +mesh_surface_update_region(RID p_mesh, int p_surface, int p_offset, const PoolVector<uint8_t> & p_data) = 0 : void
{abstract} +mesh_surface_set_material(RID p_mesh, int p_surface, RID p_material) = 0 : void
{abstract} +mesh_surface_get_material(RID p_mesh, int p_surface) const = 0 : RID
{abstract} +mesh_surface_get_array_len(RID p_mesh, int p_surface) const = 0 : int
{abstract} +mesh_surface_get_array_index_len(RID p_mesh, int p_surface) const = 0 : int
{abstract} +mesh_surface_get_array(RID p_mesh, int p_surface) const = 0 : PoolVector<uint8_t>
{abstract} +mesh_surface_get_index_array(RID p_mesh, int p_surface) const = 0 : PoolVector<uint8_t>
+mesh_surface_get_arrays(RID p_mesh, int p_surface) const : Array
+mesh_surface_get_blend_shape_arrays(RID p_mesh, int p_surface) const : Array
{abstract} +mesh_surface_get_format(RID p_mesh, int p_surface) const = 0 : uint32_t
{abstract} +mesh_surface_get_primitive_type(RID p_mesh, int p_surface) const = 0 : VisualServer::PrimitiveType
{abstract} +mesh_surface_get_aabb(RID p_mesh, int p_surface) const = 0 : AABB
{abstract} +mesh_surface_get_blend_shapes(RID p_mesh, int p_surface) const = 0 : Vector<PoolVector<uint8_t>>
{abstract} +mesh_surface_get_skeleton_aabb(RID p_mesh, int p_surface) const = 0 : Vector<AABB>
+_mesh_surface_get_skeleton_aabb_bind(RID p_mesh, int p_surface) const : Array
{abstract} +mesh_remove_surface(RID p_mesh, int p_index) = 0 : void
{abstract} +mesh_get_surface_count(RID p_mesh) const = 0 : int
{abstract} +mesh_set_custom_aabb(RID p_mesh, const AABB & p_aabb) = 0 : void
{abstract} +mesh_get_custom_aabb(RID p_mesh) const = 0 : AABB
{abstract} +mesh_clear(RID p_mesh) = 0 : void
{abstract} +multimesh_create() = 0 : RID
{abstract} +multimesh_allocate(RID p_multimesh, int p_instances, VisualServer::MultimeshTransformFormat p_transform_format, VisualServer::MultimeshColorFormat p_color_format, VisualServer::MultimeshCustomDataFormat p_data_format = MULTIMESH_CUSTOM_DATA_NONE) = 0 : void
{abstract} +multimesh_get_instance_count(RID p_multimesh) const = 0 : int
{abstract} +multimesh_set_mesh(RID p_multimesh, RID p_mesh) = 0 : void
{abstract} +multimesh_instance_set_transform(RID p_multimesh, int p_index, const Transform & p_transform) = 0 : void
{abstract} +multimesh_instance_set_transform_2d(RID p_multimesh, int p_index, const Transform2D & p_transform) = 0 : void
{abstract} +multimesh_instance_set_color(RID p_multimesh, int p_index, const Color & p_color) = 0 : void
{abstract} +multimesh_instance_set_custom_data(RID p_multimesh, int p_index, const Color & p_color) = 0 : void
{abstract} +multimesh_get_mesh(RID p_multimesh) const = 0 : RID
{abstract} +multimesh_get_aabb(RID p_multimesh) const = 0 : AABB
{abstract} +multimesh_instance_get_transform(RID p_multimesh, int p_index) const = 0 : Transform
{abstract} +multimesh_instance_get_transform_2d(RID p_multimesh, int p_index) const = 0 : Transform2D
{abstract} +multimesh_instance_get_color(RID p_multimesh, int p_index) const = 0 : Color
{abstract} +multimesh_instance_get_custom_data(RID p_multimesh, int p_index) const = 0 : Color
{abstract} +multimesh_set_as_bulk_array(RID p_multimesh, const PoolVector<float> & p_array) = 0 : void
{abstract} +multimesh_set_visible_instances(RID p_multimesh, int p_visible) = 0 : void
{abstract} +multimesh_get_visible_instances(RID p_multimesh) const = 0 : int
{abstract} +immediate_create() = 0 : RID
{abstract} +immediate_begin(RID p_immediate, VisualServer::PrimitiveType p_rimitive, RID p_texture = = RID()) = 0 : void
{abstract} +immediate_vertex(RID p_immediate, const Vector3 & p_vertex) = 0 : void
+immediate_vertex_2d(RID p_immediate, const Vector2 & p_vertex) : void
{abstract} +immediate_normal(RID p_immediate, const Vector3 & p_normal) = 0 : void
{abstract} +immediate_tangent(RID p_immediate, const Plane & p_tangent) = 0 : void
{abstract} +immediate_color(RID p_immediate, const Color & p_color) = 0 : void
{abstract} +immediate_uv(RID p_immediate, const Vector2 & tex_uv) = 0 : void
{abstract} +immediate_uv2(RID p_immediate, const Vector2 & tex_uv) = 0 : void
{abstract} +immediate_end(RID p_immediate) = 0 : void
{abstract} +immediate_clear(RID p_immediate) = 0 : void
{abstract} +immediate_set_material(RID p_immediate, RID p_material) = 0 : void
{abstract} +immediate_get_material(RID p_immediate) const = 0 : RID
{abstract} +skeleton_create() = 0 : RID
{abstract} +skeleton_allocate(RID p_skeleton, int p_bones, bool p_2d_skeleton = false) = 0 : void
{abstract} +skeleton_get_bone_count(RID p_skeleton) const = 0 : int
{abstract} +skeleton_bone_set_transform(RID p_skeleton, int p_bone, const Transform & p_transform) = 0 : void
{abstract} +skeleton_bone_get_transform(RID p_skeleton, int p_bone) const = 0 : Transform
{abstract} +skeleton_bone_set_transform_2d(RID p_skeleton, int p_bone, const Transform2D & p_transform) = 0 : void
{abstract} +skeleton_bone_get_transform_2d(RID p_skeleton, int p_bone) const = 0 : Transform2D
{abstract} +skeleton_set_base_transform_2d(RID p_skeleton, const Transform2D & p_base_transform) = 0 : void
{abstract} +directional_light_create() = 0 : RID
{abstract} +omni_light_create() = 0 : RID
{abstract} +spot_light_create() = 0 : RID
{abstract} +light_set_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +light_set_param(RID p_light, VisualServer::LightParam p_param, float p_value) = 0 : void
{abstract} +light_set_shadow(RID p_light, bool p_enabled) = 0 : void
{abstract} +light_set_shadow_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +light_set_projector(RID p_light, RID p_texture) = 0 : void
{abstract} +light_set_negative(RID p_light, bool p_enable) = 0 : void
{abstract} +light_set_cull_mask(RID p_light, uint32_t p_mask) = 0 : void
{abstract} +light_set_reverse_cull_face_mode(RID p_light, bool p_enabled) = 0 : void
{abstract} +light_set_use_gi(RID p_light, bool p_enable) = 0 : void
{abstract} +light_set_bake_mode(RID p_light, VisualServer::LightBakeMode p_bake_mode) = 0 : void
{abstract} +light_omni_set_shadow_mode(RID p_light, VisualServer::LightOmniShadowMode p_mode) = 0 : void
{abstract} +light_omni_set_shadow_detail(RID p_light, VisualServer::LightOmniShadowDetail p_detail) = 0 : void
{abstract} +light_directional_set_shadow_mode(RID p_light, VisualServer::LightDirectionalShadowMode p_mode) = 0 : void
{abstract} +light_directional_set_blend_splits(RID p_light, bool p_enable) = 0 : void
{abstract} +light_directional_set_shadow_depth_range_mode(RID p_light, VisualServer::LightDirectionalShadowDepthRangeMode p_range_mode) = 0 : void
{abstract} +reflection_probe_create() = 0 : RID
{abstract} +reflection_probe_set_update_mode(RID p_probe, VisualServer::ReflectionProbeUpdateMode p_mode) = 0 : void
{abstract} +reflection_probe_set_intensity(RID p_probe, float p_intensity) = 0 : void
{abstract} +reflection_probe_set_interior_ambient(RID p_probe, const Color & p_color) = 0 : void
{abstract} +reflection_probe_set_interior_ambient_energy(RID p_probe, float p_energy) = 0 : void
{abstract} +reflection_probe_set_interior_ambient_probe_contribution(RID p_probe, float p_contrib) = 0 : void
{abstract} +reflection_probe_set_max_distance(RID p_probe, float p_distance) = 0 : void
{abstract} +reflection_probe_set_extents(RID p_probe, const Vector3 & p_extents) = 0 : void
{abstract} +reflection_probe_set_origin_offset(RID p_probe, const Vector3 & p_offset) = 0 : void
{abstract} +reflection_probe_set_as_interior(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_enable_box_projection(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_enable_shadows(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_cull_mask(RID p_probe, uint32_t p_layers) = 0 : void
{abstract} +reflection_probe_set_resolution(RID p_probe, int p_resolution) = 0 : void
{abstract} +gi_probe_create() = 0 : RID
{abstract} +gi_probe_set_bounds(RID p_probe, const AABB & p_bounds) = 0 : void
{abstract} +gi_probe_get_bounds(RID p_probe) const = 0 : AABB
{abstract} +gi_probe_set_cell_size(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_cell_size(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_to_cell_xform(RID p_probe, const Transform & p_xform) = 0 : void
{abstract} +gi_probe_get_to_cell_xform(RID p_probe) const = 0 : Transform
{abstract} +gi_probe_set_dynamic_data(RID p_probe, const PoolVector<int> & p_data) = 0 : void
{abstract} +gi_probe_get_dynamic_data(RID p_probe) const = 0 : PoolVector<int>
{abstract} +gi_probe_set_dynamic_range(RID p_probe, int p_range) = 0 : void
{abstract} +gi_probe_get_dynamic_range(RID p_probe) const = 0 : int
{abstract} +gi_probe_set_energy(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_energy(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_bias(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_bias(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_normal_bias(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_normal_bias(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_propagation(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_propagation(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_interior(RID p_probe, bool p_enable) = 0 : void
{abstract} +gi_probe_is_interior(RID p_probe) const = 0 : bool
{abstract} +gi_probe_set_compress(RID p_probe, bool p_enable) = 0 : void
{abstract} +gi_probe_is_compressed(RID p_probe) const = 0 : bool
{abstract} +lightmap_capture_create() = 0 : RID
{abstract} +lightmap_capture_set_bounds(RID p_capture, const AABB & p_bounds) = 0 : void
{abstract} +lightmap_capture_get_bounds(RID p_capture) const = 0 : AABB
{abstract} +lightmap_capture_set_octree(RID p_capture, const PoolVector<uint8_t> & p_octree) = 0 : void
{abstract} +lightmap_capture_set_octree_cell_transform(RID p_capture, const Transform & p_xform) = 0 : void
{abstract} +lightmap_capture_get_octree_cell_transform(RID p_capture) const = 0 : Transform
{abstract} +lightmap_capture_set_octree_cell_subdiv(RID p_capture, int p_subdiv) = 0 : void
{abstract} +lightmap_capture_get_octree_cell_subdiv(RID p_capture) const = 0 : int
{abstract} +lightmap_capture_get_octree(RID p_capture) const = 0 : PoolVector<uint8_t>
{abstract} +lightmap_capture_set_energy(RID p_capture, float p_energy) = 0 : void
{abstract} +lightmap_capture_get_energy(RID p_capture) const = 0 : float
{abstract} +lightmap_capture_set_interior(RID p_capture, bool p_interior) = 0 : void
{abstract} +lightmap_capture_is_interior(RID p_capture) const = 0 : bool
{abstract} +particles_create() = 0 : RID
{abstract} +particles_set_emitting(RID p_particles, bool p_emitting) = 0 : void
{abstract} +particles_get_emitting(RID p_particles) = 0 : bool
{abstract} +particles_set_amount(RID p_particles, int p_amount) = 0 : void
{abstract} +particles_set_lifetime(RID p_particles, float p_lifetime) = 0 : void
{abstract} +particles_set_one_shot(RID p_particles, bool p_one_shot) = 0 : void
{abstract} +particles_set_pre_process_time(RID p_particles, float p_time) = 0 : void
{abstract} +particles_set_explosiveness_ratio(RID p_particles, float p_ratio) = 0 : void
{abstract} +particles_set_randomness_ratio(RID p_particles, float p_ratio) = 0 : void
{abstract} +particles_set_custom_aabb(RID p_particles, const AABB & p_aabb) = 0 : void
{abstract} +particles_set_speed_scale(RID p_particles, float p_scale) = 0 : void
{abstract} +particles_set_use_local_coordinates(RID p_particles, bool p_enable) = 0 : void
{abstract} +particles_set_process_material(RID p_particles, RID p_material) = 0 : void
{abstract} +particles_set_fixed_fps(RID p_particles, int p_fps) = 0 : void
{abstract} +particles_set_fractional_delta(RID p_particles, bool p_enable) = 0 : void
{abstract} +particles_is_inactive(RID p_particles) = 0 : bool
{abstract} +particles_request_process(RID p_particles) = 0 : void
{abstract} +particles_restart(RID p_particles) = 0 : void
{abstract} +particles_set_draw_order(RID p_particles, VisualServer::ParticlesDrawOrder p_order) = 0 : void
{abstract} +particles_set_draw_passes(RID p_particles, int p_count) = 0 : void
{abstract} +particles_set_draw_pass_mesh(RID p_particles, int p_pass, RID p_mesh) = 0 : void
{abstract} +particles_get_current_aabb(RID p_particles) = 0 : AABB
{abstract} +particles_set_emission_transform(RID p_particles, const Transform & p_transform) = 0 : void
{abstract} +camera_create() = 0 : RID
{abstract} +camera_set_perspective(RID p_camera, float p_fovy_degrees, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_orthogonal(RID p_camera, float p_size, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_frustum(RID p_camera, float p_size, Vector2 p_offset, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_transform(RID p_camera, const Transform & p_transform) = 0 : void
{abstract} +camera_set_cull_mask(RID p_camera, uint32_t p_layers) = 0 : void
{abstract} +camera_set_environment(RID p_camera, RID p_env) = 0 : void
{abstract} +camera_set_use_vertical_aspect(RID p_camera, bool p_enable) = 0 : void
{abstract} +viewport_create() = 0 : RID
{abstract} +viewport_set_use_arvr(RID p_viewport, bool p_use_arvr) = 0 : void
{abstract} +viewport_set_size(RID p_viewport, int p_width, int p_height) = 0 : void
{abstract} +viewport_set_active(RID p_viewport, bool p_active) = 0 : void
{abstract} +viewport_set_parent_viewport(RID p_viewport, RID p_parent_viewport) = 0 : void
{abstract} +viewport_attach_to_screen(RID p_viewport, const Rect2 & p_rect = Rect2(), int p_screen = 0) = 0 : void
{abstract} +viewport_set_render_direct_to_screen(RID p_viewport, bool p_enable) = 0 : void
{abstract} +viewport_detach(RID p_viewport) = 0 : void
{abstract} +viewport_set_update_mode(RID p_viewport, VisualServer::ViewportUpdateMode p_mode) = 0 : void
{abstract} +viewport_set_vflip(RID p_viewport, bool p_enable) = 0 : void
{abstract} +viewport_set_clear_mode(RID p_viewport, VisualServer::ViewportClearMode p_clear_mode) = 0 : void
{abstract} +viewport_get_texture(RID p_viewport) const = 0 : RID
{abstract} +viewport_set_hide_scenario(RID p_viewport, bool p_hide) = 0 : void
{abstract} +viewport_set_hide_canvas(RID p_viewport, bool p_hide) = 0 : void
{abstract} +viewport_set_disable_environment(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_set_disable_3d(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_set_keep_3d_linear(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_attach_camera(RID p_viewport, RID p_camera) = 0 : void
{abstract} +viewport_set_scenario(RID p_viewport, RID p_scenario) = 0 : void
{abstract} +viewport_attach_canvas(RID p_viewport, RID p_canvas) = 0 : void
{abstract} +viewport_remove_canvas(RID p_viewport, RID p_canvas) = 0 : void
{abstract} +viewport_set_canvas_transform(RID p_viewport, RID p_canvas, const Transform2D & p_offset) = 0 : void
{abstract} +viewport_set_transparent_background(RID p_viewport, bool p_enabled) = 0 : void
{abstract} +viewport_set_global_canvas_transform(RID p_viewport, const Transform2D & p_transform) = 0 : void
{abstract} +viewport_set_canvas_stacking(RID p_viewport, RID p_canvas, int p_layer, int p_sublayer) = 0 : void
{abstract} +viewport_set_shadow_atlas_size(RID p_viewport, int p_size) = 0 : void
{abstract} +viewport_set_shadow_atlas_quadrant_subdivision(RID p_viewport, int p_quadrant, int p_subdiv) = 0 : void
{abstract} +viewport_set_msaa(RID p_viewport, VisualServer::ViewportMSAA p_msaa) = 0 : void
{abstract} +viewport_set_use_fxaa(RID p_viewport, bool p_fxaa) = 0 : void
{abstract} +viewport_set_use_debanding(RID p_viewport, bool p_debanding) = 0 : void
{abstract} +viewport_set_hdr(RID p_viewport, bool p_enabled) = 0 : void
{abstract} +viewport_set_usage(RID p_viewport, VisualServer::ViewportUsage p_usage) = 0 : void
{abstract} +viewport_get_render_info(RID p_viewport, VisualServer::ViewportRenderInfo p_info) = 0 : int
{abstract} +viewport_set_debug_draw(RID p_viewport, VisualServer::ViewportDebugDraw p_draw) = 0 : void
{abstract} +environment_create() = 0 : RID
{abstract} +environment_set_background(RID p_env, VisualServer::EnvironmentBG p_bg) = 0 : void
{abstract} +environment_set_sky(RID p_env, RID p_sky) = 0 : void
{abstract} +environment_set_sky_custom_fov(RID p_env, float p_scale) = 0 : void
{abstract} +environment_set_sky_orientation(RID p_env, const Basis & p_orientation) = 0 : void
{abstract} +environment_set_bg_color(RID p_env, const Color & p_color) = 0 : void
{abstract} +environment_set_bg_energy(RID p_env, float p_energy) = 0 : void
{abstract} +environment_set_canvas_max_layer(RID p_env, int p_max_layer) = 0 : void
{abstract} +environment_set_ambient_light(RID p_env, const Color & p_color, float p_energy = 1.0, float p_sky_contribution = 0.0) = 0 : void
{abstract} +environment_set_camera_feed_id(RID p_env, int p_camera_feed_id) = 0 : void
{abstract} +environment_set_dof_blur_near(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void
{abstract} +environment_set_dof_blur_far(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void
{abstract} +environment_set_glow(RID p_env, bool p_enable, int p_level_flags, float p_intensity, float p_strength, float p_bloom_threshold, VisualServer::EnvironmentGlowBlendMode p_blend_mode, float p_hdr_bleed_threshold, float p_hdr_bleed_scale, float p_hdr_luminance_cap, bool p_bicubic_upscale) = 0 : void
{abstract} +environment_set_tonemap(RID p_env, VisualServer::EnvironmentToneMapper p_tone_mapper, float p_exposure, float p_white, bool p_auto_exposure, float p_min_luminance, float p_max_luminance, float p_auto_exp_speed, float p_auto_exp_grey) = 0 : void
{abstract} +environment_set_adjustment(RID p_env, bool p_enable, float p_brightness, float p_contrast, float p_saturation, RID p_ramp) = 0 : void
{abstract} +environment_set_ssr(RID p_env, bool p_enable, int p_max_steps, float p_fade_in, float p_fade_out, float p_depth_tolerance, bool p_roughness) = 0 : void
{abstract} +environment_set_ssao(RID p_env, bool p_enable, float p_radius, float p_intensity, float p_radius2, float p_intensity2, float p_bias, float p_light_affect, float p_ao_channel_affect, const Color & p_color, VisualServer::EnvironmentSSAOQuality p_quality, VisualServer::EnvironmentSSAOBlur p_blur, float p_bilateral_sharpness) = 0 : void
{abstract} +environment_set_fog(RID p_env, bool p_enable, const Color & p_color, const Color & p_sun_color, float p_sun_amount) = 0 : void
{abstract} +environment_set_fog_depth(RID p_env, bool p_enable, float p_depth_begin, float p_depth_end, float p_depth_curve, bool p_transmit, float p_transmit_curve) = 0 : void
{abstract} +environment_set_fog_height(RID p_env, bool p_enable, float p_min_height, float p_max_height, float p_height_curve) = 0 : void
{abstract} +scenario_create() = 0 : RID
{abstract} +scenario_set_debug(RID p_scenario, VisualServer::ScenarioDebugMode p_debug_mode) = 0 : void
{abstract} +scenario_set_environment(RID p_scenario, RID p_environment) = 0 : void
{abstract} +scenario_set_reflection_atlas_size(RID p_scenario, int p_size, int p_subdiv) = 0 : void
{abstract} +scenario_set_fallback_environment(RID p_scenario, RID p_environment) = 0 : void
+instance_create2(RID p_base, RID p_scenario) : RID
{abstract} +instance_create() = 0 : RID
{abstract} +instance_set_base(RID p_instance, RID p_base) = 0 : void
{abstract} +instance_set_scenario(RID p_instance, RID p_scenario) = 0 : void
{abstract} +instance_set_layer_mask(RID p_instance, uint32_t p_mask) = 0 : void
{abstract} +instance_set_transform(RID p_instance, const Transform & p_transform) = 0 : void
{abstract} +instance_attach_object_instance_id(RID p_instance, ObjectID p_id) = 0 : void
{abstract} +instance_set_blend_shape_weight(RID p_instance, int p_shape, float p_weight) = 0 : void
{abstract} +instance_set_surface_material(RID p_instance, int p_surface, RID p_material) = 0 : void
{abstract} +instance_set_visible(RID p_instance, bool p_visible) = 0 : void
{abstract} +instance_set_use_lightmap(RID p_instance, RID p_lightmap_instance, RID p_lightmap, int p_lightmap_slice, const Rect2 & p_lightmap_uv_rect) = 0 : void
{abstract} +instance_set_custom_aabb(RID p_instance, AABB aabb) = 0 : void
{abstract} +instance_attach_skeleton(RID p_instance, RID p_skeleton) = 0 : void
{abstract} +instance_set_exterior(RID p_instance, bool p_enabled) = 0 : void
{abstract} +instance_set_extra_visibility_margin(RID p_instance, real_t p_margin) = 0 : void
{abstract} +instances_cull_aabb(const AABB & p_aabb, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
{abstract} +instances_cull_ray(const Vector3 & p_from, const Vector3 & p_to, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
{abstract} +instances_cull_convex(const Vector<Plane> & p_convex, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
+_instances_cull_aabb_bind(const AABB & p_aabb, RID p_scenario = = RID()) const : Array
+_instances_cull_ray_bind(const Vector3 & p_from, const Vector3 & p_to, RID p_scenario = = RID()) const : Array
+_instances_cull_convex_bind(const Array & p_convex, RID p_scenario = = RID()) const : Array
{abstract} +instance_geometry_set_flag(RID p_instance, VisualServer::InstanceFlags p_flags, bool p_enabled) = 0 : void
{abstract} +instance_geometry_set_cast_shadows_setting(RID p_instance, VisualServer::ShadowCastingSetting p_shadow_casting_setting) = 0 : void
{abstract} +instance_geometry_set_material_override(RID p_instance, RID p_material) = 0 : void
{abstract} +instance_geometry_set_draw_range(RID p_instance, float p_min, float p_max, float p_min_margin, float p_max_margin) = 0 : void
{abstract} +instance_geometry_set_as_instance_lod(RID p_instance, RID p_as_lod_of_instance) = 0 : void
{abstract} +canvas_create() = 0 : RID
{abstract} +canvas_set_item_mirroring(RID p_canvas, RID p_item, const Point2 & p_mirroring) = 0 : void
{abstract} +canvas_set_modulate(RID p_canvas, const Color & p_color) = 0 : void
{abstract} +canvas_set_parent(RID p_canvas, RID p_parent, float p_scale) = 0 : void
{abstract} +canvas_set_disable_scale(bool p_disable) = 0 : void
{abstract} +canvas_item_create() = 0 : RID
{abstract} +canvas_item_set_parent(RID p_item, RID p_parent) = 0 : void
{abstract} +canvas_item_set_visible(RID p_item, bool p_visible) = 0 : void
{abstract} +canvas_item_set_light_mask(RID p_item, int p_mask) = 0 : void
{abstract} +canvas_item_set_update_when_visible(RID p_item, bool p_update) = 0 : void
{abstract} +canvas_item_set_transform(RID p_item, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_item_set_clip(RID p_item, bool p_clip) = 0 : void
{abstract} +canvas_item_set_distance_field_mode(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_custom_rect(RID p_item, bool p_custom_rect, const Rect2 & p_rect = Rect2()) = 0 : void
{abstract} +canvas_item_set_modulate(RID p_item, const Color & p_color) = 0 : void
{abstract} +canvas_item_set_self_modulate(RID p_item, const Color & p_color) = 0 : void
{abstract} +canvas_item_set_draw_behind_parent(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_add_line(RID p_item, const Point2 & p_from, const Point2 & p_to, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_polyline(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_multiline(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_rect(RID p_item, const Rect2 & p_rect, const Color & p_color) = 0 : void
{abstract} +canvas_item_add_circle(RID p_item, const Point2 & p_pos, float p_radius, const Color & p_color) = 0 : void
{abstract} +canvas_item_add_texture_rect(RID p_item, const Rect2 & p_rect, RID p_texture, bool p_tile = false, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_texture_rect_region(RID p_item, const Rect2 & p_rect, RID p_texture, const Rect2 & p_src_rect, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID(), bool p_clip_uv = false) = 0 : void
{abstract} +canvas_item_add_nine_patch(RID p_item, const Rect2 & p_rect, const Rect2 & p_source, RID p_texture, const Vector2 & p_topleft, const Vector2 & p_bottomright, VisualServer::NinePatchAxisMode p_x_axis_mode = NINE_PATCH_STRETCH, VisualServer::NinePatchAxisMode p_y_axis_mode = NINE_PATCH_STRETCH, bool p_draw_center = true, const Color & p_modulate = Color(1, 1, 1), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_primitive(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs, RID p_texture, float p_width = 1.0, RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_polygon(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), RID p_texture = = RID(), RID p_normal_map = = RID(), bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_triangle_array(RID p_item, const Vector<int> & p_indices, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), const Vector<int> & p_bones = Vector<int>(), const Vector<float> & p_weights = Vector<float>(), RID p_texture = = RID(), int p_count = -1, RID p_normal_map = = RID(), bool p_antialiased = false, bool p_antialiasing_use_indices = false) = 0 : void
{abstract} +canvas_item_add_mesh(RID p_item, const RID & p_mesh, const Transform2D & p_transform = Transform2D(), const Color & p_modulate = Color(1, 1, 1), RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_multimesh(RID p_item, RID p_mesh, RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_particles(RID p_item, RID p_particles, RID p_texture, RID p_normal_map) = 0 : void
{abstract} +canvas_item_add_set_transform(RID p_item, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_item_add_clip_ignore(RID p_item, bool p_ignore) = 0 : void
{abstract} +canvas_item_set_sort_children_by_y(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_z_index(RID p_item, int p_z) = 0 : void
{abstract} +canvas_item_set_z_as_relative_to_parent(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_copy_to_backbuffer(RID p_item, bool p_enable, const Rect2 & p_rect) = 0 : void
{abstract} +canvas_item_attach_skeleton(RID p_item, RID p_skeleton) = 0 : void
{abstract} +canvas_item_clear(RID p_item) = 0 : void
{abstract} +canvas_item_set_draw_index(RID p_item, int p_index) = 0 : void
{abstract} +canvas_item_set_material(RID p_item, RID p_material) = 0 : void
{abstract} +canvas_item_set_use_parent_material(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_light_create() = 0 : RID
{abstract} +canvas_light_attach_to_canvas(RID p_light, RID p_canvas) = 0 : void
{abstract} +canvas_light_set_enabled(RID p_light, bool p_enabled) = 0 : void
{abstract} +canvas_light_set_scale(RID p_light, float p_scale) = 0 : void
{abstract} +canvas_light_set_transform(RID p_light, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_light_set_texture(RID p_light, RID p_texture) = 0 : void
{abstract} +canvas_light_set_texture_offset(RID p_light, const Vector2 & p_offset) = 0 : void
{abstract} +canvas_light_set_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +canvas_light_set_height(RID p_light, float p_height) = 0 : void
{abstract} +canvas_light_set_energy(RID p_light, float p_energy) = 0 : void
{abstract} +canvas_light_set_z_range(RID p_light, int p_min_z, int p_max_z) = 0 : void
{abstract} +canvas_light_set_layer_range(RID p_light, int p_min_layer, int p_max_layer) = 0 : void
{abstract} +canvas_light_set_item_cull_mask(RID p_light, int p_mask) = 0 : void
{abstract} +canvas_light_set_item_shadow_cull_mask(RID p_light, int p_mask) = 0 : void
{abstract} +canvas_light_set_mode(RID p_light, VisualServer::CanvasLightMode p_mode) = 0 : void
{abstract} +canvas_light_set_shadow_enabled(RID p_light, bool p_enabled) = 0 : void
{abstract} +canvas_light_set_shadow_buffer_size(RID p_light, int p_size) = 0 : void
{abstract} +canvas_light_set_shadow_gradient_length(RID p_light, float p_length) = 0 : void
{abstract} +canvas_light_set_shadow_filter(RID p_light, VisualServer::CanvasLightShadowFilter p_filter) = 0 : void
{abstract} +canvas_light_set_shadow_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +canvas_light_set_shadow_smooth(RID p_light, float p_smooth) = 0 : void
{abstract} +canvas_light_occluder_create() = 0 : RID
{abstract} +canvas_light_occluder_attach_to_canvas(RID p_occluder, RID p_canvas) = 0 : void
{abstract} +canvas_light_occluder_set_enabled(RID p_occluder, bool p_enabled) = 0 : void
{abstract} +canvas_light_occluder_set_polygon(RID p_occluder, RID p_polygon) = 0 : void
{abstract} +canvas_light_occluder_set_transform(RID p_occluder, const Transform2D & p_xform) = 0 : void
{abstract} +canvas_light_occluder_set_light_mask(RID p_occluder, int p_mask) = 0 : void
{abstract} +canvas_occluder_polygon_create() = 0 : RID
{abstract} +canvas_occluder_polygon_set_shape(RID p_occluder_polygon, const PoolVector<Vector2> & p_shape, bool p_closed) = 0 : void
{abstract} +canvas_occluder_polygon_set_shape_as_lines(RID p_occluder_polygon, const PoolVector<Vector2> & p_shape) = 0 : void
{abstract} +canvas_occluder_polygon_set_cull_mode(RID p_occluder_polygon, VisualServer::CanvasOccluderPolygonCullMode p_mode) = 0 : void
{abstract} +black_bars_set_margins(int p_left, int p_top, int p_right, int p_bottom) = 0 : void
{abstract} +black_bars_set_images(RID p_left, RID p_top, RID p_right, RID p_bottom) = 0 : void
{abstract} +free(RID p_rid) = 0 : void
{abstract} +request_frame_drawn_callback(Object * p_where, const StringName & p_method, const Variant & p_userdata) = 0 : void
{abstract} +draw(bool p_swap_buffers = true, double frame_step = 0.0) = 0 : void
{abstract} +sync() = 0 : void
{abstract} +has_changed() const = 0 : bool
{abstract} +init() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +get_render_info(VisualServer::RenderInfo p_info) = 0 : uint64_t
{abstract} +get_video_adapter_name() const = 0 : String
{abstract} +get_video_adapter_vendor() const = 0 : String
{abstract} +get_test_cube() = 0 : RID
+get_test_texture() : RID
+get_white_texture() : RID
+make_sphere_mesh(int p_lats, int p_lons, float p_radius) : RID
+mesh_add_surface_from_mesh_data(RID p_mesh, const Geometry::MeshData & p_mesh_data) : void
+mesh_add_surface_from_planes(RID p_mesh, const PoolVector<Plane> & p_planes) : void
{abstract} +set_boot_image(const Ref<Image> & p_image, const Color & p_color, bool p_scale, bool p_use_filter = true) = 0 : void
{abstract} +set_default_clear_color(const Color & p_color) = 0 : void
{abstract} +set_shader_time_scale(float p_scale) = 0 : void
{abstract} +has_feature(VisualServer::Features p_feature) const = 0 : bool
{abstract} +has_os_feature(const String & p_feature) const = 0 : bool
{abstract} +set_debug_generate_wireframes(bool p_generate) = 0 : void
{abstract} +call_set_use_vsync(bool p_enable) = 0 : void
{abstract} +is_low_end() const = 0 : bool
+is_render_loop_enabled() const : bool
+set_render_loop_enabled(bool p_enabled) : void
+VisualServer() : void
+~VisualServer() : void
+NO_INDEX_ARRAY : enum
+ARRAY_WEIGHTS_SIZE : enum
+CANVAS_ITEM_Z_MIN : enum
+CANVAS_ITEM_Z_MAX : enum
+MAX_GLOW_LEVELS : enum
+MAX_CURSORS : enum
+MATERIAL_RENDER_PRIORITY_MIN : enum
+MATERIAL_RENDER_PRIORITY_MAX : enum
}
abstract "PhysicsDirectBodyState" as C_0001559146041463814963
abstract C_0001559146041463814963 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39{PhysicsDirectBodyState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +get_total_gravity() const = 0 : Vector3
{abstract} +get_total_angular_damp() const = 0 : float
{abstract} +get_total_linear_damp() const = 0 : float
{abstract} +get_center_of_mass() const = 0 : Vector3
{abstract} +get_principal_inertia_axes() const = 0 : Basis
{abstract} +get_inverse_mass() const = 0 : float
{abstract} +get_inverse_inertia() const = 0 : Vector3
{abstract} +get_inverse_inertia_tensor() const = 0 : Basis
{abstract} +set_linear_velocity(const Vector3 & p_velocity) = 0 : void
{abstract} +get_linear_velocity() const = 0 : Vector3
{abstract} +set_angular_velocity(const Vector3 & p_velocity) = 0 : void
{abstract} +get_angular_velocity() const = 0 : Vector3
{abstract} +set_transform(const Transform & p_transform) = 0 : void
{abstract} +get_transform() const = 0 : Transform
{abstract} +add_central_force(const Vector3 & p_force) = 0 : void
{abstract} +add_force(const Vector3 & p_force, const Vector3 & p_pos) = 0 : void
{abstract} +add_torque(const Vector3 & p_torque) = 0 : void
{abstract} +apply_central_impulse(const Vector3 & p_j) = 0 : void
{abstract} +apply_impulse(const Vector3 & p_pos, const Vector3 & p_j) = 0 : void
{abstract} +apply_torque_impulse(const Vector3 & p_j) = 0 : void
{abstract} +set_sleep_state(bool p_enable) = 0 : void
{abstract} +is_sleeping() const = 0 : bool
{abstract} +get_contact_count() const = 0 : int
{abstract} +get_contact_local_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_local_normal(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_impulse(int p_contact_idx) const = 0 : float
{abstract} +get_contact_local_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider(int p_contact_idx) const = 0 : RID
{abstract} +get_contact_collider_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID
+get_contact_collider_object(int p_contact_idx) const : Object *
{abstract} +get_contact_collider_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_step() const = 0 : real_t
+integrate_forces() : void
{abstract} +get_space_state() = 0 : PhysicsDirectSpaceState *
+PhysicsDirectBodyState() : void
}
abstract "PhysicsDirectSpaceState" as C_0000503002593685351124
abstract C_0000503002593685351124 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143{PhysicsDirectSpaceState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +intersect_point(const Vector3 & p_point, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +intersect_ray(const Vector3 & p_from, const Vector3 & p_to, PhysicsDirectSpaceState::RayResult & r_result, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_ray = false) = 0 : bool
{abstract} +intersect_shape(const RID & p_shape, const Transform & p_xform, float p_margin, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +cast_motion(const RID & p_shape, const Transform & p_xform, const Vector3 & p_motion, float p_margin, float & p_closest_safe, float & p_closest_unsafe, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, PhysicsDirectSpaceState::ShapeRestInfo * r_info = __null) = 0 : bool
{abstract} +collide_shape(RID p_shape, const Transform & p_shape_xform, float p_margin, Vector3 * r_results, int p_result_max, int & r_result_count, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +rest_info(RID p_shape, const Transform & p_shape_xform, float p_margin, PhysicsDirectSpaceState::ShapeRestInfo * r_info, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +get_closest_point_to_object_volume(RID p_object, const Vector3 p_point) const = 0 : Vector3
+PhysicsDirectSpaceState() : void
}
class "PhysicsDirectSpaceState::ShapeResult" as C_0000493041171271776846
class C_0000493041171271776846 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158{PhysicsDirectSpaceState##ShapeResult}]] {
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163{shape}]]]
}
class "PhysicsDirectSpaceState::RayResult" as C_0000461609734144368587
class C_0000461609734144368587 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168{PhysicsDirectSpaceState##RayResult}]] {
+position : Vector3 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170{position}]]]
+normal : Vector3 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171{normal}]]]
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175{shape}]]]
}
abstract "PhysicsServer" as C_0001034902024938599899
abstract C_0001034902024938599899 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224{PhysicsServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : PhysicsServer *
{abstract} +shape_create(PhysicsServer::ShapeType p_shape) = 0 : RID
{abstract} +shape_set_data(RID p_shape, const Variant & p_data) = 0 : void
{abstract} +shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void
{abstract} +shape_get_type(RID p_shape) const = 0 : PhysicsServer::ShapeType
{abstract} +shape_get_data(RID p_shape) const = 0 : Variant
{abstract} +shape_set_margin(RID p_shape, real_t p_margin) = 0 : void
{abstract} +shape_get_margin(RID p_shape) const = 0 : real_t
{abstract} +shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t
{abstract} +space_create() = 0 : RID
{abstract} +space_set_active(RID p_space, bool p_active) = 0 : void
{abstract} +space_is_active(RID p_space) const = 0 : bool
{abstract} +space_set_param(RID p_space, PhysicsServer::SpaceParameter p_param, real_t p_value) = 0 : void
{abstract} +space_get_param(RID p_space, PhysicsServer::SpaceParameter p_param) const = 0 : real_t
{abstract} +space_get_direct_state(RID p_space) = 0 : PhysicsDirectSpaceState *
{abstract} +space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void
{abstract} +space_get_contacts(RID p_space) const = 0 : Vector<Vector3>
{abstract} +space_get_contact_count(RID p_space) const = 0 : int
{abstract} +area_create() = 0 : RID
{abstract} +area_set_space(RID p_area, RID p_space) = 0 : void
{abstract} +area_get_space(RID p_area) const = 0 : RID
{abstract} +area_set_space_override_mode(RID p_area, PhysicsServer::AreaSpaceOverrideMode p_mode) = 0 : void
{abstract} +area_get_space_override_mode(RID p_area) const = 0 : PhysicsServer::AreaSpaceOverrideMode
{abstract} +area_add_shape(RID p_area, RID p_shape, const Transform & p_transform = Transform(), bool p_disabled = false) = 0 : void
{abstract} +area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +area_set_shape_transform(RID p_area, int p_shape_idx, const Transform & p_transform) = 0 : void
{abstract} +area_get_shape_count(RID p_area) const = 0 : int
{abstract} +area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID
{abstract} +area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform
{abstract} +area_remove_shape(RID p_area, int p_shape_idx) = 0 : void
{abstract} +area_clear_shapes(RID p_area) = 0 : void
{abstract} +area_set_shape_disabled(RID p_area, int p_shape_idx, bool p_disabled) = 0 : void
{abstract} +area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_object_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_set_param(RID p_area, PhysicsServer::AreaParameter p_param, const Variant & p_value) = 0 : void
{abstract} +area_set_transform(RID p_area, const Transform & p_transform) = 0 : void
{abstract} +area_get_param(RID p_parea, PhysicsServer::AreaParameter p_param) const = 0 : Variant
{abstract} +area_get_transform(RID p_area) const = 0 : Transform
{abstract} +area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void
{abstract} +area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void
{abstract} +area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void
{abstract} +area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_ray_pickable(RID p_area, bool p_enable) = 0 : void
{abstract} +area_is_ray_pickable(RID p_area) const = 0 : bool
{abstract} +body_create(PhysicsServer::BodyMode p_mode = BODY_MODE_RIGID, bool p_init_sleeping = false) = 0 : RID
{abstract} +body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +body_get_space(RID p_body) const = 0 : RID
{abstract} +body_set_mode(RID p_body, PhysicsServer::BodyMode p_mode) = 0 : void
{abstract} +body_get_mode(RID p_body) const = 0 : PhysicsServer::BodyMode
{abstract} +body_add_shape(RID p_body, RID p_shape, const Transform & p_transform = Transform(), bool p_disabled = false) = 0 : void
{abstract} +body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +body_set_shape_transform(RID p_body, int p_shape_idx, const Transform & p_transform) = 0 : void
{abstract} +body_get_shape_count(RID p_body) const = 0 : int
{abstract} +body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID
{abstract} +body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform
{abstract} +body_remove_shape(RID p_body, int p_shape_idx) = 0 : void
{abstract} +body_clear_shapes(RID p_body) = 0 : void
{abstract} +body_set_shape_disabled(RID p_body, int p_shape_idx, bool p_disabled) = 0 : void
{abstract} +body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_object_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_set_enable_continuous_collision_detection(RID p_body, bool p_enable) = 0 : void
{abstract} +body_is_continuous_collision_detection_enabled(RID p_body) const = 0 : bool
{abstract} +body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +body_set_user_flags(RID p_body, uint32_t p_flags) = 0 : void
{abstract} +body_get_user_flags(RID p_body) const = 0 : uint32_t
{abstract} +body_set_param(RID p_body, PhysicsServer::BodyParameter p_param, float p_value) = 0 : void
{abstract} +body_get_param(RID p_body, PhysicsServer::BodyParameter p_param) const = 0 : float
{abstract} +body_set_kinematic_safe_margin(RID p_body, real_t p_margin) = 0 : void
{abstract} +body_get_kinematic_safe_margin(RID p_body) const = 0 : real_t
{abstract} +body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant
{abstract} +body_set_applied_force(RID p_body, const Vector3 & p_force) = 0 : void
{abstract} +body_get_applied_force(RID p_body) const = 0 : Vector3
{abstract} +body_set_applied_torque(RID p_body, const Vector3 & p_torque) = 0 : void
{abstract} +body_get_applied_torque(RID p_body) const = 0 : Vector3
{abstract} +body_add_central_force(RID p_body, const Vector3 & p_force) = 0 : void
{abstract} +body_add_force(RID p_body, const Vector3 & p_force, const Vector3 & p_pos) = 0 : void
{abstract} +body_add_torque(RID p_body, const Vector3 & p_torque) = 0 : void
{abstract} +body_apply_central_impulse(RID p_body, const Vector3 & p_impulse) = 0 : void
{abstract} +body_apply_impulse(RID p_body, const Vector3 & p_pos, const Vector3 & p_impulse) = 0 : void
{abstract} +body_apply_torque_impulse(RID p_body, const Vector3 & p_impulse) = 0 : void
{abstract} +body_set_axis_velocity(RID p_body, const Vector3 & p_axis_velocity) = 0 : void
{abstract} +body_set_axis_lock(RID p_body, PhysicsServer::BodyAxis p_axis, bool p_lock) = 0 : void
{abstract} +body_is_axis_locked(RID p_body, PhysicsServer::BodyAxis p_axis) const = 0 : bool
{abstract} +body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void
{abstract} +body_get_max_contacts_reported(RID p_body) const = 0 : int
{abstract} +body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void
{abstract} +body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float
{abstract} +body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void
{abstract} +body_is_omitting_force_integration(RID p_body) const = 0 : bool
{abstract} +body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName & p_method, const Variant & p_udata = Variant()) = 0 : void
{abstract} +body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void
{abstract} +body_is_ray_pickable(RID p_body) const = 0 : bool
{abstract} +body_get_direct_state(RID p_body) = 0 : PhysicsDirectBodyState *
{abstract} +body_test_motion(RID p_body, const Transform & p_from, const Vector3 & p_motion, bool p_infinite_inertia, PhysicsServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool
{abstract} +body_test_ray_separation(RID p_body, const Transform & p_transform, bool p_infinite_inertia, Vector3 & r_recover_motion, PhysicsServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int
{abstract} +soft_body_create(bool p_init_sleeping = false) = 0 : RID
{abstract} +soft_body_update_visual_server(RID p_body, class SoftBodyVisualServerHandler * p_visual_server_handler) = 0 : void
{abstract} +soft_body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +soft_body_get_space(RID p_body) const = 0 : RID
{abstract} +soft_body_set_mesh(RID p_body, const REF & p_mesh) = 0 : void
{abstract} +soft_body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +soft_body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +soft_body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +soft_body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +soft_body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +soft_body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +soft_body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +soft_body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +soft_body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant
{abstract} +soft_body_set_transform(RID p_body, const Transform & p_transform) = 0 : void
{abstract} +soft_body_get_vertex_position(RID p_body, int vertex_index) const = 0 : Vector3
{abstract} +soft_body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void
{abstract} +soft_body_is_ray_pickable(RID p_body) const = 0 : bool
{abstract} +soft_body_set_simulation_precision(RID p_body, int p_simulation_precision) = 0 : void
{abstract} +soft_body_get_simulation_precision(RID p_body) = 0 : int
{abstract} +soft_body_set_total_mass(RID p_body, real_t p_total_mass) = 0 : void
{abstract} +soft_body_get_total_mass(RID p_body) = 0 : real_t
{abstract} +soft_body_set_linear_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_linear_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_areaAngular_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_areaAngular_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_volume_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_volume_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_pressure_coefficient(RID p_body, real_t p_pressure_coefficient) = 0 : void
{abstract} +soft_body_get_pressure_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_pose_matching_coefficient(RID p_body, real_t p_pose_matching_coefficient) = 0 : void
{abstract} +soft_body_get_pose_matching_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_damping_coefficient(RID p_body, real_t p_damping_coefficient) = 0 : void
{abstract} +soft_body_get_damping_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_drag_coefficient(RID p_body, real_t p_drag_coefficient) = 0 : void
{abstract} +soft_body_get_drag_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_move_point(RID p_body, int p_point_index, const Vector3 & p_global_position) = 0 : void
{abstract} +soft_body_get_point_global_position(RID p_body, int p_point_index) = 0 : Vector3
{abstract} +soft_body_get_point_offset(RID p_body, int p_point_index) const = 0 : Vector3
{abstract} +soft_body_remove_all_pinned_points(RID p_body) = 0 : void
{abstract} +soft_body_pin_point(RID p_body, int p_point_index, bool p_pin) = 0 : void
{abstract} +soft_body_is_point_pinned(RID p_body, int p_point_index) = 0 : bool
{abstract} +joint_get_type(RID p_joint) const = 0 : PhysicsServer::JointType
{abstract} +joint_set_solver_priority(RID p_joint, int p_priority) = 0 : void
{abstract} +joint_get_solver_priority(RID p_joint) const = 0 : int
{abstract} +joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void
{abstract} +joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool
{abstract} +joint_create_pin(RID p_body_A, const Vector3 & p_local_A, RID p_body_B, const Vector3 & p_local_B) = 0 : RID
{abstract} +pin_joint_set_param(RID p_joint, PhysicsServer::PinJointParam p_param, float p_value) = 0 : void
{abstract} +pin_joint_get_param(RID p_joint, PhysicsServer::PinJointParam p_param) const = 0 : float
{abstract} +pin_joint_set_local_a(RID p_joint, const Vector3 & p_A) = 0 : void
{abstract} +pin_joint_get_local_a(RID p_joint) const = 0 : Vector3
{abstract} +pin_joint_set_local_b(RID p_joint, const Vector3 & p_B) = 0 : void
{abstract} +pin_joint_get_local_b(RID p_joint) const = 0 : Vector3
{abstract} +joint_create_hinge(RID p_body_A, const Transform & p_hinge_A, RID p_body_B, const Transform & p_hinge_B) = 0 : RID
{abstract} +joint_create_hinge_simple(RID p_body_A, const Vector3 & p_pivot_A, const Vector3 & p_axis_A, RID p_body_B, const Vector3 & p_pivot_B, const Vector3 & p_axis_B) = 0 : RID
{abstract} +hinge_joint_set_param(RID p_joint, PhysicsServer::HingeJointParam p_param, float p_value) = 0 : void
{abstract} +hinge_joint_get_param(RID p_joint, PhysicsServer::HingeJointParam p_param) const = 0 : float
{abstract} +hinge_joint_set_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag, bool p_value) = 0 : void
{abstract} +hinge_joint_get_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag) const = 0 : bool
{abstract} +joint_create_slider(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +slider_joint_set_param(RID p_joint, PhysicsServer::SliderJointParam p_param, float p_value) = 0 : void
{abstract} +slider_joint_get_param(RID p_joint, PhysicsServer::SliderJointParam p_param) const = 0 : float
{abstract} +joint_create_cone_twist(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +cone_twist_joint_set_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param, float p_value) = 0 : void
{abstract} +cone_twist_joint_get_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param) const = 0 : float
{abstract} +joint_create_generic_6dof(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +generic_6dof_joint_set_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param, float p_value) = 0 : void
{abstract} +generic_6dof_joint_get_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param) = 0 : float
{abstract} +generic_6dof_joint_set_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag, bool p_enable) = 0 : void
{abstract} +generic_6dof_joint_get_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag) = 0 : bool
{abstract} +free(RID p_rid) = 0 : void
{abstract} +set_active(bool p_active) = 0 : void
{abstract} +init() = 0 : void
{abstract} +step(float p_step) = 0 : void
{abstract} +flush_queries() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +is_flushing_queries() const = 0 : bool
{abstract} +get_process_info(PhysicsServer::ProcessInfo p_info) = 0 : int
+PhysicsServer() : void
+~PhysicsServer() : void
}
abstract "Physics2DDirectBodyState" as C_0002302096389852429221
abstract C_0002302096389852429221 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40{Physics2DDirectBodyState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +get_total_gravity() const = 0 : Vector2
{abstract} +get_total_linear_damp() const = 0 : float
{abstract} +get_total_angular_damp() const = 0 : float
{abstract} +get_inverse_mass() const = 0 : float
{abstract} +get_inverse_inertia() const = 0 : real_t
{abstract} +set_linear_velocity(const Vector2 & p_velocity) = 0 : void
{abstract} +get_linear_velocity() const = 0 : Vector2
{abstract} +set_angular_velocity(real_t p_velocity) = 0 : void
{abstract} +get_angular_velocity() const = 0 : real_t
{abstract} +set_transform(const Transform2D & p_transform) = 0 : void
{abstract} +get_transform() const = 0 : Transform2D
{abstract} +add_central_force(const Vector2 & p_force) = 0 : void
{abstract} +add_force(const Vector2 & p_offset, const Vector2 & p_force) = 0 : void
{abstract} +add_torque(real_t p_torque) = 0 : void
{abstract} +apply_central_impulse(const Vector2 & p_impulse) = 0 : void
{abstract} +apply_torque_impulse(real_t p_torque) = 0 : void
{abstract} +apply_impulse(const Vector2 & p_offset, const Vector2 & p_impulse) = 0 : void
{abstract} +set_sleep_state(bool p_enable) = 0 : void
{abstract} +is_sleeping() const = 0 : bool
{abstract} +get_contact_count() const = 0 : int
{abstract} +get_contact_local_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_local_normal(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_local_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider(int p_contact_idx) const = 0 : RID
{abstract} +get_contact_collider_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID
+get_contact_collider_object(int p_contact_idx) const : Object *
{abstract} +get_contact_collider_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider_shape_metadata(int p_contact_idx) const = 0 : Variant
{abstract} +get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_step() const = 0 : real_t
+integrate_forces() : void
{abstract} +get_space_state() = 0 : Physics2DDirectSpaceState *
+Physics2DDirectBodyState() : void
}
abstract "Physics2DDirectSpaceState" as C_0000236996062289735257
abstract C_0000236996062289735257 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145{Physics2DDirectSpaceState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +intersect_ray(const Vector2 & p_from, const Vector2 & p_to, Physics2DDirectSpaceState::RayResult & r_result, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +intersect_point(const Vector2 & p_point, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int
{abstract} +intersect_point_on_canvas(const Vector2 & p_point, ObjectID p_canvas_instance_id, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int
{abstract} +intersect_shape(const RID & p_shape, const Transform2D & p_xform, const Vector2 & p_motion, float p_margin, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +cast_motion(const RID & p_shape, const Transform2D & p_xform, const Vector2 & p_motion, float p_margin, float & p_closest_safe, float & p_closest_unsafe, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +collide_shape(RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, float p_margin, Vector2 * r_results, int p_result_max, int & r_result_count, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +rest_info(RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, float p_margin, Physics2DDirectSpaceState::ShapeRestInfo * r_info, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
+Physics2DDirectSpaceState() : void
}
class "Physics2DDirectSpaceState::RayResult" as C_0001801355352189289676
class C_0001801355352189289676 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162{Physics2DDirectSpaceState##RayResult}]] {
+position : Vector2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164{position}]]]
+normal : Vector2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165{normal}]]]
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169{shape}]]]
+metadata : Variant [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170{metadata}]]]
}
class "Physics2DDirectSpaceState::ShapeResult" as C_0001771770302499309898
class C_0001771770302499309898 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175{Physics2DDirectSpaceState##ShapeResult}]] {
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180{shape}]]]
+metadata : Variant [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181{metadata}]]]
}
abstract "Physics2DServer" as C_0001561529841391244418
abstract C_0001561529841391244418 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232{Physics2DServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : Physics2DServer *
{abstract} +line_shape_create() = 0 : RID
{abstract} +ray_shape_create() = 0 : RID
{abstract} +segment_shape_create() = 0 : RID
{abstract} +circle_shape_create() = 0 : RID
{abstract} +rectangle_shape_create() = 0 : RID
{abstract} +capsule_shape_create() = 0 : RID
{abstract} +convex_polygon_shape_create() = 0 : RID
{abstract} +concave_polygon_shape_create() = 0 : RID
{abstract} +shape_set_data(RID p_shape, const Variant & p_data) = 0 : void
{abstract} +shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void
{abstract} +shape_get_type(RID p_shape) const = 0 : Physics2DServer::ShapeType
{abstract} +shape_get_data(RID p_shape) const = 0 : Variant
{abstract} +shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t
{abstract} +shape_collide(RID p_shape_A, const Transform2D & p_xform_A, const Vector2 & p_motion_A, RID p_shape_B, const Transform2D & p_xform_B, const Vector2 & p_motion_B, Vector2 * r_results, int p_result_max, int & r_result_count) = 0 : bool
{abstract} +space_create() = 0 : RID
{abstract} +space_set_active(RID p_space, bool p_active) = 0 : void
{abstract} +space_is_active(RID p_space) const = 0 : bool
{abstract} +space_set_param(RID p_space, Physics2DServer::SpaceParameter p_param, real_t p_value) = 0 : void
{abstract} +space_get_param(RID p_space, Physics2DServer::SpaceParameter p_param) const = 0 : real_t
{abstract} +space_get_direct_state(RID p_space) = 0 : Physics2DDirectSpaceState *
{abstract} +space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void
{abstract} +space_get_contacts(RID p_space) const = 0 : Vector<Vector2>
{abstract} +space_get_contact_count(RID p_space) const = 0 : int
{abstract} +area_create() = 0 : RID
{abstract} +area_set_space(RID p_area, RID p_space) = 0 : void
{abstract} +area_get_space(RID p_area) const = 0 : RID
{abstract} +area_set_space_override_mode(RID p_area, Physics2DServer::AreaSpaceOverrideMode p_mode) = 0 : void
{abstract} +area_get_space_override_mode(RID p_area) const = 0 : Physics2DServer::AreaSpaceOverrideMode
{abstract} +area_add_shape(RID p_area, RID p_shape, const Transform2D & p_transform = Transform2D(), bool p_disabled = false) = 0 : void
{abstract} +area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +area_set_shape_transform(RID p_area, int p_shape_idx, const Transform2D & p_transform) = 0 : void
{abstract} +area_get_shape_count(RID p_area) const = 0 : int
{abstract} +area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID
{abstract} +area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform2D
{abstract} +area_remove_shape(RID p_area, int p_shape_idx) = 0 : void
{abstract} +area_clear_shapes(RID p_area) = 0 : void
{abstract} +area_set_shape_disabled(RID p_area, int p_shape, bool p_disabled) = 0 : void
{abstract} +area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_object_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_attach_canvas_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_canvas_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_set_param(RID p_area, Physics2DServer::AreaParameter p_param, const Variant & p_value) = 0 : void
{abstract} +area_set_transform(RID p_area, const Transform2D & p_transform) = 0 : void
{abstract} +area_get_param(RID p_parea, Physics2DServer::AreaParameter p_param) const = 0 : Variant
{abstract} +area_get_transform(RID p_area) const = 0 : Transform2D
{abstract} +area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void
{abstract} +area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void
{abstract} +area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void
{abstract} +area_set_pickable(RID p_area, bool p_pickable) = 0 : void
{abstract} +area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +body_create() = 0 : RID
{abstract} +body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +body_get_space(RID p_body) const = 0 : RID
{abstract} +body_set_mode(RID p_body, Physics2DServer::BodyMode p_mode) = 0 : void
{abstract} +body_get_mode(RID p_body) const = 0 : Physics2DServer::BodyMode
{abstract} +body_add_shape(RID p_body, RID p_shape, const Transform2D & p_transform = Transform2D(), bool p_disabled = false) = 0 : void
{abstract} +body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +body_set_shape_transform(RID p_body, int p_shape_idx, const Transform2D & p_transform) = 0 : void
{abstract} +body_set_shape_metadata(RID p_body, int p_shape_idx, const Variant & p_metadata) = 0 : void
{abstract} +body_get_shape_count(RID p_body) const = 0 : int
{abstract} +body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID
{abstract} +body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform2D
{abstract} +body_get_shape_metadata(RID p_body, int p_shape_idx) const = 0 : Variant
{abstract} +body_set_shape_disabled(RID p_body, int p_shape, bool p_disabled) = 0 : void
{abstract} +body_set_shape_as_one_way_collision(RID p_body, int p_shape, bool p_enabled, float p_margin = 0) = 0 : void
{abstract} +body_remove_shape(RID p_body, int p_shape_idx) = 0 : void
{abstract} +body_clear_shapes(RID p_body) = 0 : void
{abstract} +body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_object_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_attach_canvas_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_canvas_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_set_continuous_collision_detection_mode(RID p_body, Physics2DServer::CCDMode p_mode) = 0 : void
{abstract} +body_get_continuous_collision_detection_mode(RID p_body) const = 0 : Physics2DServer::CCDMode
{abstract} +body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +body_set_param(RID p_body, Physics2DServer::BodyParameter p_param, float p_value) = 0 : void
{abstract} +body_get_param(RID p_body, Physics2DServer::BodyParameter p_param) const = 0 : float
{abstract} +body_set_state(RID p_body, Physics2DServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +body_get_state(RID p_body, Physics2DServer::BodyState p_state) const = 0 : Variant
{abstract} +body_set_applied_force(RID p_body, const Vector2 & p_force) = 0 : void
{abstract} +body_get_applied_force(RID p_body) const = 0 : Vector2
{abstract} +body_set_applied_torque(RID p_body, float p_torque) = 0 : void
{abstract} +body_get_applied_torque(RID p_body) const = 0 : float
{abstract} +body_add_central_force(RID p_body, const Vector2 & p_force) = 0 : void
{abstract} +body_add_force(RID p_body, const Vector2 & p_offset, const Vector2 & p_force) = 0 : void
{abstract} +body_add_torque(RID p_body, float p_torque) = 0 : void
{abstract} +body_apply_central_impulse(RID p_body, const Vector2 & p_impulse) = 0 : void
{abstract} +body_apply_torque_impulse(RID p_body, float p_torque) = 0 : void
{abstract} +body_apply_impulse(RID p_body, const Vector2 & p_offset, const Vector2 & p_impulse) = 0 : void
{abstract} +body_set_axis_velocity(RID p_body, const Vector2 & p_axis_velocity) = 0 : void
{abstract} +body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void
{abstract} +body_get_max_contacts_reported(RID p_body) const = 0 : int
{abstract} +body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void
{abstract} +body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float
{abstract} +body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void
{abstract} +body_is_omitting_force_integration(RID p_body) const = 0 : bool
{abstract} +body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName & p_method, const Variant & p_udata = Variant()) = 0 : void
{abstract} +body_collide_shape(RID p_body, int p_body_shape, RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, Vector2 * r_results, int p_result_max, int & r_result_count) = 0 : bool
{abstract} +body_set_pickable(RID p_body, bool p_pickable) = 0 : void
{abstract} +body_get_direct_state(RID p_body) = 0 : Physics2DDirectBodyState *
{abstract} +body_test_motion(RID p_body, const Transform2D & p_from, const Vector2 & p_motion, bool p_infinite_inertia, float p_margin = 0.001, Physics2DServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool
{abstract} +body_test_ray_separation(RID p_body, const Transform2D & p_transform, bool p_infinite_inertia, Vector2 & r_recover_motion, Physics2DServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int
{abstract} +joint_set_param(RID p_joint, Physics2DServer::JointParam p_param, real_t p_value) = 0 : void
{abstract} +joint_get_param(RID p_joint, Physics2DServer::JointParam p_param) const = 0 : real_t
{abstract} +joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void
{abstract} +joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool
{abstract} +pin_joint_create(const Vector2 & p_anchor, RID p_body_a, RID p_body_b = = RID()) = 0 : RID
{abstract} +groove_joint_create(const Vector2 & p_a_groove1, const Vector2 & p_a_groove2, const Vector2 & p_b_anchor, RID p_body_a, RID p_body_b) = 0 : RID
{abstract} +damped_spring_joint_create(const Vector2 & p_anchor_a, const Vector2 & p_anchor_b, RID p_body_a, RID p_body_b = = RID()) = 0 : RID
{abstract} +pin_joint_set_param(RID p_joint, Physics2DServer::PinJointParam p_param, real_t p_value) = 0 : void
{abstract} +pin_joint_get_param(RID p_joint, Physics2DServer::PinJointParam p_param) const = 0 : real_t
{abstract} +damped_string_joint_set_param(RID p_joint, Physics2DServer::DampedStringParam p_param, real_t p_value) = 0 : void
{abstract} +damped_string_joint_get_param(RID p_joint, Physics2DServer::DampedStringParam p_param) const = 0 : real_t
{abstract} +joint_get_type(RID p_joint) const = 0 : Physics2DServer::JointType
{abstract} +free(RID p_rid) = 0 : void
{abstract} +set_active(bool p_active) = 0 : void
{abstract} +init() = 0 : void
{abstract} +step(float p_step) = 0 : void
{abstract} +sync() = 0 : void
{abstract} +flush_queries() = 0 : void
{abstract} +end_sync() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +is_flushing_queries() const = 0 : bool
{abstract} +get_process_info(Physics2DServer::ProcessInfo p_info) = 0 : int
+Physics2DServer() : void
+~Physics2DServer() : void
}
class "_ArrayVariantSortCustom" as C_0000762417759113755306
class C_0000762417759113755306 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298{_ArrayVariantSortCustom}]] {
+operator()(const Variant & p_l, const Variant & p_r) const : bool
+obj : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300{obj}]]]
+func : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301{func}]]]
}
class "InputMap" as C_0000314051240057057851
class C_0000314051240057057851 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37{InputMap}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : InputMap *
+has_action(const StringName & p_action) const : bool
+get_actions() const : List<StringName>
+add_action(const StringName & p_action, float p_deadzone = 0.5) : void
+erase_action(const StringName & p_action) : void
+action_get_deadzone(const StringName & p_action) : float
+action_set_deadzone(const StringName & p_action, float p_deadzone) : void
+action_add_event(const StringName & p_action, const Ref<InputEvent> & p_event) : void
+action_has_event(const StringName & p_action, const Ref<InputEvent> & p_event) : bool
+action_erase_event(const StringName & p_action, const Ref<InputEvent> & p_event) : void
+action_erase_events(const StringName & p_action) : void
+get_action_list(const StringName & p_action) : const List<Ref<InputEvent>> *
+event_is_action(const Ref<InputEvent> & p_event, const StringName & p_action) const : bool
+event_get_action_status(const Ref<InputEvent> & p_event, const StringName & p_action, bool * p_pressed = __null, float * p_strength = __null) const : bool
+get_action_map() const : const Map<StringName,InputMap::Action> &
+load_from_globals() : void
+load_default() : void
+InputMap() : void
{static} +ALL_DEVICES : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45{ALL_DEVICES}]]]
}
abstract "Input" as C_0000535376932101028371
abstract C_0000535376932101028371 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38{Input}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+set_mouse_mode(Input::MouseMode p_mode) : void
+get_mouse_mode() const : Input::MouseMode
{static} +get_singleton() : Input *
{abstract} +is_key_pressed(int p_scancode) const = 0 : bool
{abstract} +is_mouse_button_pressed(int p_button) const = 0 : bool
{abstract} +is_joy_button_pressed(int p_device, int p_button) const = 0 : bool
{abstract} +is_action_pressed(const StringName & p_action) const = 0 : bool
{abstract} +is_action_just_pressed(const StringName & p_action) const = 0 : bool
{abstract} +is_action_just_released(const StringName & p_action) const = 0 : bool
{abstract} +get_action_strength(const StringName & p_action) const = 0 : float
{abstract} +get_joy_axis(int p_device, int p_axis) const = 0 : float
{abstract} +get_joy_name(int p_idx) = 0 : String
{abstract} +get_connected_joypads() = 0 : Array
{abstract} +joy_connection_changed(int p_idx, bool p_connected, String p_name, String p_guid) = 0 : void
{abstract} +add_joy_mapping(String p_mapping, bool p_update_existing = false) = 0 : void
{abstract} +remove_joy_mapping(String p_guid) = 0 : void
{abstract} +is_joy_known(int p_device) = 0 : bool
{abstract} +get_joy_guid(int p_device) const = 0 : String
{abstract} +get_joy_vibration_strength(int p_device) = 0 : Vector2
{abstract} +get_joy_vibration_duration(int p_device) = 0 : float
{abstract} +get_joy_vibration_timestamp(int p_device) = 0 : uint64_t
{abstract} +start_joy_vibration(int p_device, float p_weak_magnitude, float p_strong_magnitude, float p_duration = 0) = 0 : void
{abstract} +stop_joy_vibration(int p_device) = 0 : void
{abstract} +vibrate_handheld(int p_duration_ms = 500) = 0 : void
{abstract} +get_mouse_position() const = 0 : Point2
{abstract} +get_last_mouse_speed() const = 0 : Point2
{abstract} +get_mouse_button_mask() const = 0 : int
{abstract} +warp_mouse_position(const Vector2 & p_to) = 0 : void
{abstract} +warp_mouse_motion(const Ref<InputEventMouseMotion> & p_motion, const Rect2 & p_rect) = 0 : Point2i
{abstract} +get_gravity() const = 0 : Vector3
{abstract} +get_accelerometer() const = 0 : Vector3
{abstract} +get_magnetometer() const = 0 : Vector3
{abstract} +get_gyroscope() const = 0 : Vector3
{abstract} +action_press(const StringName & p_action, float p_strength = 1.f) = 0 : void
{abstract} +action_release(const StringName & p_action) = 0 : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
{abstract} +is_emulating_touch_from_mouse() const = 0 : bool
{abstract} +is_emulating_mouse_from_touch() const = 0 : bool
{abstract} +get_default_cursor_shape() const = 0 : Input::CursorShape
{abstract} +set_default_cursor_shape(Input::CursorShape p_shape) = 0 : void
{abstract} +get_current_cursor_shape() const = 0 : Input::CursorShape
{abstract} +set_custom_mouse_cursor(const RES & p_cursor, Input::CursorShape p_shape = CURSOR_ARROW, const Vector2 & p_hotspot = Vector2()) = 0 : void
{abstract} +get_joy_button_string(int p_button) = 0 : String
{abstract} +get_joy_axis_string(int p_axis) = 0 : String
{abstract} +get_joy_button_index_from_string(String p_button) = 0 : int
{abstract} +get_joy_axis_index_from_string(String p_axis) = 0 : int
{abstract} +parse_input_event(const Ref<InputEvent> & p_event) = 0 : void
{abstract} +accumulate_input_event(const Ref<InputEvent> & p_event) = 0 : void
{abstract} +flush_accumulated_events() = 0 : void
{abstract} +set_use_accumulated_input(bool p_enable) = 0 : void
+Input() : void
}
class "AudioServer" as C_0001370497546359815893
class C_0001370497546359815893 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148{AudioServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_channel_count() const : int
+thread_has_channel_mix_buffer(int p_bus, int p_buffer) const : bool
+thread_get_channel_mix_buffer(int p_bus, int p_buffer) : AudioFrame *
+thread_get_mix_buffer_size() const : int
+thread_find_bus_index(const StringName & p_name) : int
+set_bus_count(int p_count) : void
+get_bus_count() const : int
+remove_bus(int p_index) : void
+add_bus(int p_at_pos = -1) : void
+move_bus(int p_bus, int p_to_pos) : void
+set_bus_name(int p_bus, const String & p_name) : void
+get_bus_name(int p_bus) const : String
+get_bus_index(const StringName & p_bus_name) const : int
+get_bus_channels(int p_bus) const : int
+set_bus_volume_db(int p_bus, float p_volume_db) : void
+get_bus_volume_db(int p_bus) const : float
+set_bus_send(int p_bus, const StringName & p_send) : void
+get_bus_send(int p_bus) const : StringName
+set_bus_solo(int p_bus, bool p_enable) : void
+is_bus_solo(int p_bus) const : bool
+set_bus_mute(int p_bus, bool p_enable) : void
+is_bus_mute(int p_bus) const : bool
+set_bus_bypass_effects(int p_bus, bool p_enable) : void
+is_bus_bypassing_effects(int p_bus) const : bool
+add_bus_effect(int p_bus, const Ref<AudioEffect> & p_effect, int p_at_pos = -1) : void
+remove_bus_effect(int p_bus, int p_effect) : void
+get_bus_effect_count(int p_bus) : int
+get_bus_effect(int p_bus, int p_effect) : Ref<AudioEffect>
+get_bus_effect_instance(int p_bus, int p_effect, int p_channel = 0) : Ref<AudioEffectInstance>
+swap_bus_effects(int p_bus, int p_effect, int p_by_effect) : void
+set_bus_effect_enabled(int p_bus, int p_effect, bool p_enabled) : void
+is_bus_effect_enabled(int p_bus, int p_effect) const : bool
+get_bus_peak_volume_left_db(int p_bus, int p_channel) const : float
+get_bus_peak_volume_right_db(int p_bus, int p_channel) const : float
+is_bus_channel_active(int p_bus, int p_channel) const : bool
+set_global_rate_scale(float p_scale) : void
+get_global_rate_scale() const : float
+init() : void
+finish() : void
+update() : void
+load_default_bus_layout() : void
+lock() : void
+unlock() : void
+get_speaker_mode() const : AudioServer::SpeakerMode
+get_mix_rate() const : float
+read_output_peak_db() const : float
{static} +get_singleton() : AudioServer *
+get_output_latency() const : double
+get_time_to_next_mix() const : double
+get_time_since_last_mix() const : double
+audio_data_alloc(uint32_t p_data_len, const uint8_t * p_from_data = __null) : void *
+audio_data_free(void * p_data) : void
+audio_data_get_total_memory_usage() const : size_t
+audio_data_get_max_memory_usage() const : size_t
+add_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+remove_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+add_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+remove_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+set_bus_layout(const Ref<AudioBusLayout> & p_bus_layout) : void
+generate_bus_layout() const : Ref<AudioBusLayout>
+get_device_list() : Array
+get_device() : String
+set_device(String device) : void
+capture_get_device_list() : Array
+capture_get_device() : String
+capture_set_device(const String & p_name) : void
+AudioServer() : void
+~AudioServer() : void
+AUDIO_DATA_INVALID_ID : enum
}
class "UndoRedo" as C_0000096380574950611570
class C_0000096380574950611570 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37{UndoRedo}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_save_class() const : String
+_add_do_method(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+_add_undo_method(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+create_action(const String & p_name = "", UndoRedo::MergeMode p_mode = MERGE_DISABLE) : void
+add_do_method(Object * p_object, const String & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+add_undo_method(Object * p_object, const String & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+add_do_property(Object * p_object, const String & p_property, const Variant & p_value) : void
+add_undo_property(Object * p_object, const String & p_property, const Variant & p_value) : void
+add_do_reference(Object * p_object) : void
+add_undo_reference(Object * p_object) : void
+is_committing_action() const : bool
+commit_action() : void
+redo() : bool
+undo() : bool
+get_current_action_name() const : String
+clear_history(bool p_increase_version = true) : void
+has_undo() : bool
+has_redo() : bool
+get_version() const : uint64_t
+set_commit_notify_callback(UndoRedo::CommitNotifyCallback p_callback, void * p_ud) : void
+set_method_notify_callback(UndoRedo::MethodNotifyCallback p_method_callback, void * p_ud) : void
+set_property_notify_callback(UndoRedo::PropertyNotifyCallback p_property_callback, void * p_ud) : void
+UndoRedo() : void
+~UndoRedo() : void
}
C_0000699772808699382057 o-- C_0001357046052919104842 : -count
C_0001531814603945772616 o-- C_0001578539238208480863 : -signal_map
C_0001531814603945772616 o-- C_0000751300156436098886 : -connections
C_0001531814603945772616 o-- C_0000699772808699382057 : -_lock_index
C_0001531814603945772616 o-- C_0000051860595756965531 : -change_receptors
C_0001531814603945772616 --> C_0000933379568804427881 : -_rc
C_0001531814603945772616 o-- C_0001682405743486361214 : -editor_section_folding
C_0001531814603945772616 --> C_0001735438654351294549 : -script_instance
C_0001531814603945772616 o-- C_0002025812040042972946 : -script
C_0001531814603945772616 o-- C_0001299121424291583786 : -metadata
C_0001531814603945772616 o-- C_0001858199404643284193 : -_class_name
C_0001531814603945772616 --> C_0001858199404643284193 : -_class_ptr
C_0001531814603945772616 o-- C_0001357046052919104842 : -instance_binding_count
C_0001531814603945772616 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <.. C_0001778859257025660860 : +<<friend>>
C_0001531814603945772616 <.. C_0000132048052014479231 : +<<friend>>
C_0000219886141561409828 --+ C_0001531814603945772616
C_0001267214583673362755 --+ C_0001531814603945772616
C_0001267214583673362755 --> C_0001531814603945772616 : +source
C_0001267214583673362755 o-- C_0001858199404643284193 : +signal
C_0001267214583673362755 --> C_0001531814603945772616 : +target
C_0001267214583673362755 o-- C_0001858199404643284193 : +method
C_0000250357724807605097 --+ C_0001531814603945772616
C_0002064336919270342687 --> C_0001531814603945772616 : -instances
C_0002064336919270342687 --> C_0001531814603945772616 : -instance_checks
C_0002064336919270342687 <.. C_0001531814603945772616 : +<<friend>>
C_0000104564426296396960 --> C_0001858199404643284193 : +classes
C_0000104564426296396960 --> C_0001858199404643284193 : +resource_base_extensions
C_0000104564426296396960 --> C_0001858199404643284193 : +compat_classes
C_0000104564426296396960 --> C_0001858199404643284193 : +default_values
C_0000104564426296396960 --> C_0001858199404643284193 : +default_values_cached
C_0001778859257025660860 o-- C_0001858199404643284193 : -_class_name
C_0001778859257025660860 o-- C_0000699772808699382057 : -refcount
C_0001778859257025660860 o-- C_0000699772808699382057 : -refcount_init
C_0001778859257025660860 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001778859257025660860
C_0000218299049716973303 o-- C_0001858199404643284193 : -_class_name
C_0000218299049716973303 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000218299049716973303
C_0000933379568804427881 --> C_0001531814603945772616 : -_ptr
C_0001649884439586022807 --> C_0001531814603945772616 : -owner
C_0001735438654351294549 <|-- C_0001649884439586022807
C_0000970940027123558604 o-- C_0001858199404643284193 : -_class_name
C_0000970940027123558604 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000970940027123558604
C_0001823345232236209470 o-- C_0001858199404643284193 : +name
C_0001823345232236209470 --> C_0001531814603945772616 : +ptr
C_0001485048025194488343 o-- C_0001858199404643284193 : -_class_name
C_0001485048025194488343 --> C_0001485048025194488343 : -singleton
C_0001485048025194488343 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001485048025194488343
C_0000132048052014479231 --> C_0001531814603945772616 : +obj
C_0000115801560197752094 o-- C_0001858199404643284193 : +signal
C_0000115801560197752094 --> C_0001531814603945772616 : +target
C_0000115801560197752094 o-- C_0001858199404643284193 : +method
C_0000066148521405667716 o-- C_0001858199404643284193 : -_class_name
C_0000066148521405667716 o-- C_0001682405743486361214 : #custom_features
C_0000066148521405667716 --> C_0000066148521405667716 : #singleton
C_0000066148521405667716 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000066148521405667716
C_0001191393512042218074 o-- C_0001858199404643284193 : -_class_name
C_0001191393512042218074 --> C_0001191393512042218074 : #singleton
C_0001191393512042218074 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001191393512042218074
C_0001197720528033242618 o-- C_0001858199404643284193 : -_class_name
C_0001197720528033242618 --> C_0001197720528033242618 : #singleton
C_0001197720528033242618 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001197720528033242618
C_0001130773750498288283 o-- C_0001858199404643284193 : -_class_name
C_0001130773750498288283 --> C_0001130773750498288283 : #singleton
C_0001130773750498288283 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001130773750498288283
C_0000790752023609648644 o-- C_0001858199404643284193 : -_class_name
C_0000790752023609648644 --> C_0000790752023609648644 : #singleton
C_0000790752023609648644 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000790752023609648644
C_0000897221634691489964 o-- C_0001858199404643284193 : -_class_name
C_0000897221634691489964 --> C_0000897221634691489964 : -singleton
C_0000897221634691489964 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000897221634691489964
C_0000135188690773659020 o-- C_0001858199404643284193 : -_class_name
C_0000135188690773659020 --> C_0000135188690773659020 : -singleton
C_0000135188690773659020 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000135188690773659020
C_0001150621116588802549 o-- C_0001858199404643284193 : -_class_name
C_0001150621116588802549 --> C_0001531814603945772616 : #target_instance
C_0001150621116588802549 o-- C_0001858199404643284193 : #target_method
C_0001150621116588802549 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|-- C_0001150621116588802549
C_0001186331261774827872 o-- C_0001858199404643284193 : -_class_name
C_0001186331261774827872 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001186331261774827872
C_0001895218672297528471 o-- C_0001858199404643284193 : -_class_name
C_0001895218672297528471 --> C_0001895218672297528471 : #singleton
C_0001895218672297528471 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001895218672297528471
C_0000979065355535690103 o-- C_0001858199404643284193 : -_class_name
C_0000979065355535690103 --> C_0000979065355535690103 : #singleton
C_0000979065355535690103 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000979065355535690103
C_0001701907280759632930 o-- C_0001858199404643284193 : -_class_name
C_0001701907280759632930 --> C_0001701907280759632930 : #singleton
C_0001701907280759632930 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001701907280759632930
C_0001589464385186808769 o-- C_0001858199404643284193 : -_class_name
C_0001589464385186808769 --> C_0001589464385186808769 : -singleton
C_0001589464385186808769 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001589464385186808769
C_0001559146041463814963 o-- C_0001858199404643284193 : -_class_name
C_0001559146041463814963 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001559146041463814963
C_0000503002593685351124 o-- C_0001858199404643284193 : -_class_name
C_0000503002593685351124 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000503002593685351124
C_0000493041171271776846 --+ C_0000503002593685351124
C_0000493041171271776846 --> C_0001531814603945772616 : +collider
C_0000461609734144368587 --+ C_0000503002593685351124
C_0000461609734144368587 --> C_0001531814603945772616 : +collider
C_0001034902024938599899 o-- C_0001858199404643284193 : -_class_name
C_0001034902024938599899 --> C_0001034902024938599899 : -singleton
C_0001034902024938599899 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001034902024938599899
C_0002302096389852429221 o-- C_0001858199404643284193 : -_class_name
C_0002302096389852429221 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0002302096389852429221
C_0000236996062289735257 o-- C_0001858199404643284193 : -_class_name
C_0000236996062289735257 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000236996062289735257
C_0001801355352189289676 --+ C_0000236996062289735257
C_0001801355352189289676 --> C_0001531814603945772616 : +collider
C_0001771770302499309898 --+ C_0000236996062289735257
C_0001771770302499309898 --> C_0001531814603945772616 : +collider
C_0001561529841391244418 o-- C_0001858199404643284193 : -_class_name
C_0001561529841391244418 --> C_0001561529841391244418 : -singleton
C_0001561529841391244418 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001561529841391244418
C_0000762417759113755306 --> C_0001531814603945772616 : +obj
C_0000762417759113755306 o-- C_0001858199404643284193 : +func
C_0000314051240057057851 o-- C_0001858199404643284193 : -_class_name
C_0000314051240057057851 --> C_0000314051240057057851 : -singleton
C_0000314051240057057851 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000314051240057057851
C_0000535376932101028371 o-- C_0001858199404643284193 : -_class_name
C_0000535376932101028371 --> C_0000535376932101028371 : -singleton
C_0000535376932101028371 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000535376932101028371
C_0001370497546359815893 o-- C_0001858199404643284193 : -_class_name
C_0001370497546359815893 --> C_0001370497546359815893 : -singleton
C_0001370497546359815893 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0001370497546359815893
C_0000096380574950611570 o-- C_0001858199404643284193 : -_class_name
C_0000096380574950611570 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|-- C_0000096380574950611570

'Generated with clang-uml, version 0.3.4-2-gc91fe43
'LLVM version Ubuntu clang version 15.0.6
@enduml
