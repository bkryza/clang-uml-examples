<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="16889px" preserveAspectRatio="none" style="width:37388px;height:16889px;" version="1.1" viewBox="0 0 37388 16889" width="37388px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ka2an7e8vu1m" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="253" x="18540.5" y="16.708">Godot Object class hierarchy</text><!--MD5=[9ddbd22804041489fb45650d196dcfe6]
class C_0001357046052919104842--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0001357046052919104842" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="23152.29" y="4747.4531"/><ellipse cx="23167.29" cy="4763.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23170.2588,4769.0938 Q23169.6806,4769.3906 23169.04,4769.5313 Q23168.3994,4769.6875 23167.6963,4769.6875 Q23165.1963,4769.6875 23163.8681,4768.0469 Q23162.5556,4766.3906 23162.5556,4763.2656 Q23162.5556,4760.1406 23163.8681,4758.4844 Q23165.1963,4756.8281 23167.6963,4756.8281 Q23168.3994,4756.8281 23169.04,4756.9844 Q23169.6963,4757.1406 23170.2588,4757.4375 L23170.2588,4760.1563 Q23169.6338,4759.5781 23169.04,4759.3125 Q23168.4463,4759.0313 23167.8213,4759.0313 Q23166.4775,4759.0313 23165.79,4760.1094 Q23165.1025,4761.1719 23165.1025,4763.2656 Q23165.1025,4765.3594 23165.79,4766.4375 Q23166.4775,4767.5 23167.8213,4767.5 Q23168.4463,4767.5 23169.04,4767.2344 Q23169.6338,4766.9531 23170.2588,4766.375 L23170.2588,4769.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="23181.29" y="4767.6074">SafeNumeric</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="53" x="23268.29" y="4744.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="23269.29" y="4756.5918">uint32_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23153.29" x2="23317.29" y1="4779.4531" y2="4779.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23153.29" x2="23317.29" y1="4787.4531" y2="4787.4531"/><!--MD5=[0248b83d95ca29d05ff879ba22e97aa0]
class C_0000699772808699382057--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164" target="_top" title="SafeRefCount" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164" xlink:show="new" xlink:title="SafeRefCount" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="124.8281" id="C_0000699772808699382057" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="22991.29" y="3232.9531"/><ellipse cx="23045.54" cy="3248.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23048.5088,3254.5938 Q23047.9306,3254.8906 23047.29,3255.0313 Q23046.6494,3255.1875 23045.9463,3255.1875 Q23043.4463,3255.1875 23042.1181,3253.5469 Q23040.8056,3251.8906 23040.8056,3248.7656 Q23040.8056,3245.6406 23042.1181,3243.9844 Q23043.4463,3242.3281 23045.9463,3242.3281 Q23046.6494,3242.3281 23047.29,3242.4844 Q23047.9463,3242.6406 23048.5088,3242.9375 L23048.5088,3245.6563 Q23047.8838,3245.0781 23047.29,3244.8125 Q23046.6963,3244.5313 23046.0713,3244.5313 Q23044.7275,3244.5313 23044.04,3245.6094 Q23043.3525,3246.6719 23043.3525,3248.7656 Q23043.3525,3250.8594 23044.04,3251.9375 Q23044.7275,3253 23046.0713,3253 Q23046.6963,3253 23047.29,3252.7344 Q23047.8838,3252.4531 23048.5088,3251.875 L23048.5088,3254.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="23066.04" y="3253.1074">SafeRefCount</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22992.29" x2="23192.29" y1="3264.9531" y2="3264.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22992.29" x2="23192.29" y1="3272.9531" y2="3272.9531"/><ellipse cx="23002.29" cy="3283.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="23011.29" y="3287.1636">ref() : bool</text><ellipse cx="23002.29" cy="3296.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="23011.29" y="3299.9683">refval() : uint32_t</text><ellipse cx="23002.29" cy="3309.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="23011.29" y="3312.7729">unref() : bool</text><ellipse cx="23002.29" cy="3322.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="23011.29" y="3325.5776">unrefval() : uint32_t</text><ellipse cx="23002.29" cy="3335.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="23011.29" y="3338.3823">get() const : uint32_t</text><ellipse cx="23002.29" cy="3347.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="23011.29" y="3351.187">init(uint32_t p_value = 1) : void</text></a><!--MD5=[5a779d11372386480685e002af2832e5]
class C_0000945411446247634027--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/error_macros.h#L60" target="_top" title="String" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/error_macros.h#L60" xlink:show="new" xlink:title="String" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="2288.8203" id="C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.5;" width="608" x="33378.29" y="14589.9531"/><ellipse cx="33659.54" cy="14605.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33662.5088,14611.5938 Q33661.9306,14611.8906 33661.29,14612.0313 Q33660.6494,14612.1875 33659.9463,14612.1875 Q33657.4463,14612.1875 33656.1181,14610.5469 Q33654.8056,14608.8906 33654.8056,14605.7656 Q33654.8056,14602.6406 33656.1181,14600.9844 Q33657.4463,14599.3281 33659.9463,14599.3281 Q33660.6494,14599.3281 33661.29,14599.4844 Q33661.9463,14599.6406 33662.5088,14599.9375 L33662.5088,14602.6563 Q33661.8838,14602.0781 33661.29,14601.8125 Q33660.6963,14601.5313 33660.0713,14601.5313 Q33658.7275,14601.5313 33658.04,14602.6094 Q33657.3525,14603.6719 33657.3525,14605.7656 Q33657.3525,14607.8594 33658.04,14608.9375 Q33658.7275,14610 33660.0713,14610 Q33660.6963,14610 33661.29,14609.7344 Q33661.8838,14609.4531 33662.5088,14608.875 L33662.5088,14611.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="33680.04" y="14610.1074">String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33379.29" x2="33985.29" y1="14621.9531" y2="14621.9531"/><ellipse cx="33389.29" cy="14632.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="33398.29" y="14636.1636">npos : enum</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" target="_top" title="invalid_node_name_characters" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" xlink:show="new" xlink:title="invalid_node_name_characters" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33384.29" y="14640.7578"/><ellipse cx="33389.29" cy="14645.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" target="_top" title="invalid_node_name_characters" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" xlink:show="new" xlink:title="invalid_node_name_characters" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="33398.29" y="14648.9683">invalid_node_name_characters : const String</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33379.29" x2="33985.29" y1="14655.5625" y2="14655.5625"/><ellipse cx="33389.29" cy="14666.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="33398.29" y="14669.7729">ptrw() : CharType *</text><ellipse cx="33389.29" cy="14679.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="33398.29" y="14682.5776">ptr() const : const CharType *</text><ellipse cx="33389.29" cy="14692.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="33398.29" y="14695.3823">remove(int p_index) : void</text><ellipse cx="33389.29" cy="14704.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="33398.29" y="14708.187">clear() : void</text><ellipse cx="33389.29" cy="14717.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="33398.29" y="14720.9917">get(int p_index) const : CharType</text><ellipse cx="33389.29" cy="14730.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="33398.29" y="14733.7964">set(int p_index, const CharType &amp; p_elem) : void</text><ellipse cx="33389.29" cy="14743.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="33398.29" y="14746.6011">size() const : int</text><ellipse cx="33389.29" cy="14756.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="33398.29" y="14759.4058">resize(int p_size) : Error</text><ellipse cx="33389.29" cy="14769" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="33398.29" y="14772.2104">operator[](int p_index) const : const CharType &amp;</text><ellipse cx="33389.29" cy="14781.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="33398.29" y="14785.0151">operator[](int p_index) : CharProxy&lt;CharType&gt;</text><ellipse cx="33389.29" cy="14794.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="33398.29" y="14797.8198">operator==(const String &amp; p_str) const : bool</text><ellipse cx="33389.29" cy="14807.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="33398.29" y="14810.6245">operator!=(const String &amp; p_str) const : bool</text><ellipse cx="33389.29" cy="14820.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="33398.29" y="14823.4292">operator+(const String &amp; p_str) const : String</text><ellipse cx="33389.29" cy="14833.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="33398.29" y="14836.2339">operator+=(const String &amp; ) : String &amp;</text><ellipse cx="33389.29" cy="14845.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="33398.29" y="14849.0386">operator+=(CharType p_char) : String &amp;</text><ellipse cx="33389.29" cy="14858.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="33398.29" y="14861.8433">operator+=(const char * p_str) : String &amp;</text><ellipse cx="33389.29" cy="14871.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="33398.29" y="14874.6479">operator+=(const CharType * p_str) : String &amp;</text><ellipse cx="33389.29" cy="14884.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="33398.29" y="14887.4526">operator=(const char * p_str) : void</text><ellipse cx="33389.29" cy="14897.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="33398.29" y="14900.2573">operator=(const CharType * p_str) : void</text><ellipse cx="33389.29" cy="14909.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="33398.29" y="14913.062">operator==(const char * p_str) const : bool</text><ellipse cx="33389.29" cy="14922.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="33398.29" y="14925.8667">operator==(const CharType * p_str) const : bool</text><ellipse cx="33389.29" cy="14935.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="33398.29" y="14938.6714">operator==(const StrRange &amp; p_str_range) const : bool</text><ellipse cx="33389.29" cy="14948.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="33398.29" y="14951.4761">operator!=(const char * p_str) const : bool</text><ellipse cx="33389.29" cy="14961.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="33398.29" y="14964.2808">operator!=(const CharType * p_str) const : bool</text><ellipse cx="33389.29" cy="14973.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="33398.29" y="14977.0854">operator&lt;(const CharType * p_str) const : bool</text><ellipse cx="33389.29" cy="14986.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="33398.29" y="14989.8901">operator&lt;(const char * p_str) const : bool</text><ellipse cx="33389.29" cy="14999.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="33398.29" y="15002.6948">operator&lt;(const String &amp; p_str) const : bool</text><ellipse cx="33389.29" cy="15012.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="33398.29" y="15015.4995">operator&lt;=(const String &amp; p_str) const : bool</text><ellipse cx="33389.29" cy="15025.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="33398.29" y="15028.3042">casecmp_to(const String &amp; p_str) const : signed char</text><ellipse cx="33389.29" cy="15037.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="33398.29" y="15041.1089">nocasecmp_to(const String &amp; p_str) const : signed char</text><ellipse cx="33389.29" cy="15050.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="33398.29" y="15053.9136">naturalnocasecmp_to(const String &amp; p_str) const : signed char</text><ellipse cx="33389.29" cy="15063.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="33398.29" y="15066.7183">c_str() const : const CharType *</text><ellipse cx="33389.29" cy="15076.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="33398.29" y="15079.5229">length() const : int</text><ellipse cx="33389.29" cy="15089.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="33398.29" y="15092.3276">substr(int p_from, int p_chars = -1) const : String</text><ellipse cx="33389.29" cy="15101.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="33398.29" y="15105.1323">find(const String &amp; p_str, int p_from = 0) const : int</text><ellipse cx="33389.29" cy="15114.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="33398.29" y="15117.937">find(const char * p_str, int p_from = 0) const : int</text><ellipse cx="33389.29" cy="15127.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="33398.29" y="15130.7417">find_char(const CharType &amp; p_char, int p_from = 0) const : int</text><ellipse cx="33389.29" cy="15140.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="33398.29" y="15143.5464">find_last(const String &amp; p_str) const : int</text><ellipse cx="33389.29" cy="15153.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="33398.29" y="15156.3511">findn(const String &amp; p_str, int p_from = 0) const : int</text><ellipse cx="33389.29" cy="15165.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="33398.29" y="15169.1558">rfind(const String &amp; p_str, int p_from = -1) const : int</text><ellipse cx="33389.29" cy="15178.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="33398.29" y="15181.9604">rfindn(const String &amp; p_str, int p_from = -1) const : int</text><ellipse cx="33389.29" cy="15191.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="492" x="33398.29" y="15194.7651">findmk(const Vector&lt;String&gt; &amp; p_keys, int p_from = 0, int * r_key = __null) const : int</text><ellipse cx="33389.29" cy="15204.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="33398.29" y="15207.5698">match(const String &amp; p_wildcard) const : bool</text><ellipse cx="33389.29" cy="15217.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="33398.29" y="15220.3745">matchn(const String &amp; p_wildcard) const : bool</text><ellipse cx="33389.29" cy="15229.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="33398.29" y="15233.1792">begins_with(const String &amp; p_string) const : bool</text><ellipse cx="33389.29" cy="15242.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="33398.29" y="15245.9839">begins_with(const char * p_string) const : bool</text><ellipse cx="33389.29" cy="15255.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="33398.29" y="15258.7886">ends_with(const String &amp; p_string) const : bool</text><ellipse cx="33389.29" cy="15268.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="33398.29" y="15271.5933">is_enclosed_in(const String &amp; p_string) const : bool</text><ellipse cx="33389.29" cy="15281.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="33398.29" y="15284.3979">is_subsequence_of(const String &amp; p_string) const : bool</text><ellipse cx="33389.29" cy="15293.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="33398.29" y="15297.2026">is_subsequence_ofi(const String &amp; p_string) const : bool</text><ellipse cx="33389.29" cy="15306.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="33398.29" y="15310.0073">is_quoted() const : bool</text><ellipse cx="33389.29" cy="15319.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="33398.29" y="15322.812">bigrams() const : Vector&lt;String&gt;</text><ellipse cx="33389.29" cy="15332.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="33398.29" y="15335.6167">similarity(const String &amp; p_string) const : float</text><ellipse cx="33389.29" cy="15345.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="33398.29" y="15348.4214">format(const Variant &amp; values, String placeholder = "{_}") const : String</text><ellipse cx="33389.29" cy="15358.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="33398.29" y="15361.2261">replace_first(const String &amp; p_key, const String &amp; p_with) const : String</text><ellipse cx="33389.29" cy="15370.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="33398.29" y="15374.0308">replace(const String &amp; p_key, const String &amp; p_with) const : String</text><ellipse cx="33389.29" cy="15383.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="33398.29" y="15386.8354">replace(const char * p_key, const char * p_with) const : String</text><ellipse cx="33389.29" cy="15396.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="33398.29" y="15399.6401">replacen(const String &amp; p_key, const String &amp; p_with) const : String</text><ellipse cx="33389.29" cy="15409.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="33398.29" y="15412.4448">repeat(int p_count) const : String</text><ellipse cx="33389.29" cy="15422.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="33398.29" y="15425.2495">insert(int p_at_pos, const String &amp; p_string) const : String</text><ellipse cx="33389.29" cy="15434.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="33398.29" y="15438.0542">pad_decimals(int p_digits) const : String</text><ellipse cx="33389.29" cy="15447.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="33398.29" y="15450.8589">pad_zeros(int p_digits) const : String</text><ellipse cx="33389.29" cy="15460.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="33398.29" y="15463.6636">trim_prefix(const String &amp; p_prefix) const : String</text><ellipse cx="33389.29" cy="15473.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="33398.29" y="15476.4683">trim_suffix(const String &amp; p_suffix) const : String</text><ellipse cx="33389.29" cy="15486.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="33398.29" y="15489.2729">lpad(int min_length, const String &amp; character = " ") const : String</text><ellipse cx="33389.29" cy="15498.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="33398.29" y="15502.0776">rpad(int min_length, const String &amp; character = " ") const : String</text><ellipse cx="33389.29" cy="15511.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="33398.29" y="15514.8823">sprintf(const Array &amp; values, bool * error) const : String</text><ellipse cx="33389.29" cy="15524.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="33398.29" y="15527.687">quote(String quotechar = "\"") const : String</text><ellipse cx="33389.29" cy="15537.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="33398.29" y="15540.4917">unquote() const : String</text><ellipse cx="33389.29" cy="15550.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="33398.29" y="15553.2964">num(double p_num, int p_decimals = -1) : String</text><ellipse cx="33389.29" cy="15562.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="33398.29" y="15566.1011">num_scientific(double p_num) : String</text><ellipse cx="33389.29" cy="15575.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="33398.29" y="15578.9058">num_real(double p_num) : String</text><ellipse cx="33389.29" cy="15588.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="437" x="33398.29" y="15591.7104">num_int64(int64_t p_num, int base = 10, bool capitalize_hex = false) : String</text><ellipse cx="33389.29" cy="15601.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="451" x="33398.29" y="15604.5151">num_uint64(uint64_t p_num, int base = 10, bool capitalize_hex = false) : String</text><ellipse cx="33389.29" cy="15614.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="33398.29" y="15617.3198">chr(CharType p_char) : String</text><ellipse cx="33389.29" cy="15626.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="33398.29" y="15630.1245">md5(const uint8_t * p_md5) : String</text><ellipse cx="33389.29" cy="15639.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="351" x="33398.29" y="15642.9292">hex_encode_buffer(const uint8_t * p_buffer, int p_len) : String</text><ellipse cx="33389.29" cy="15652.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="33398.29" y="15655.7339">is_numeric() const : bool</text><ellipse cx="33389.29" cy="15665.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="33398.29" y="15668.5386">to_double() const : double</text><ellipse cx="33389.29" cy="15678.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="33398.29" y="15681.3433">to_float() const : float</text><ellipse cx="33389.29" cy="15690.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="33398.29" y="15694.1479">hex_to_int(bool p_with_prefix = true) const : int</text><ellipse cx="33389.29" cy="15703.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="33398.29" y="15706.9526">to_int() const : int</text><ellipse cx="33389.29" cy="15716.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="33398.29" y="15719.7573">hex_to_int64(bool p_with_prefix = true) const : int64_t</text><ellipse cx="33389.29" cy="15729.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="33398.29" y="15732.562">bin_to_int64(bool p_with_prefix = true) const : int64_t</text><ellipse cx="33389.29" cy="15742.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="33398.29" y="15745.3667">to_int64() const : int64_t</text><ellipse cx="33389.29" cy="15754.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="33398.29" y="15758.1714">to_int(const char * p_str, int p_len = -1) : int</text><ellipse cx="33389.29" cy="15767.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="216" x="33398.29" y="15770.9761">to_double(const char * p_str) : double</text><ellipse cx="33389.29" cy="15780.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="443" x="33398.29" y="15783.7808">to_double(const CharType * p_str, const CharType ** r_end = __null) : double</text><ellipse cx="33389.29" cy="15793.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="305" x="33398.29" y="15796.5854">to_int(const CharType * p_str, int p_len = -1) : int64_t</text><ellipse cx="33389.29" cy="15806.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="33398.29" y="15809.3901">capitalize() const : String</text><ellipse cx="33389.29" cy="15818.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="33398.29" y="15822.1948">camelcase_to_underscore(bool lowercase = true) const : String</text><ellipse cx="33389.29" cy="15831.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="33398.29" y="15834.9995">get_slice_count(String p_splitter) const : int</text><ellipse cx="33389.29" cy="15844.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="33398.29" y="15847.8042">get_slice(String p_splitter, int p_slice) const : String</text><ellipse cx="33389.29" cy="15857.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="33398.29" y="15860.6089">get_slicec(CharType p_splitter, int p_slice) const : String</text><ellipse cx="33389.29" cy="15870.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="33398.29" y="15873.4136">split(const String &amp; p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector&lt;String&gt;</text><ellipse cx="33389.29" cy="15883.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="33398.29" y="15886.2183">rsplit(const String &amp; p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector&lt;String&gt;</text><ellipse cx="33389.29" cy="15895.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="33398.29" y="15899.0229">split_spaces() const : Vector&lt;String&gt;</text><ellipse cx="33389.29" cy="15908.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="33398.29" y="15911.8276">split_floats(const String &amp; p_splitter, bool p_allow_empty = true) const : Vector&lt;float&gt;</text><ellipse cx="33389.29" cy="15921.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="33398.29" y="15924.6323">split_floats_mk(const Vector&lt;String&gt; &amp; p_splitters, bool p_allow_empty = true) const : Vector&lt;float&gt;</text><ellipse cx="33389.29" cy="15934.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="33398.29" y="15937.437">split_ints(const String &amp; p_splitter, bool p_allow_empty = true) const : Vector&lt;int&gt;</text><ellipse cx="33389.29" cy="15947.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="33398.29" y="15950.2417">split_ints_mk(const Vector&lt;String&gt; &amp; p_splitters, bool p_allow_empty = true) const : Vector&lt;int&gt;</text><ellipse cx="33389.29" cy="15959.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="33398.29" y="15963.0464">join(Vector&lt;String&gt; parts) : String</text><ellipse cx="33389.29" cy="15972.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="261" x="33398.29" y="15975.8511">char_uppercase(CharType p_char) : CharType</text><ellipse cx="33389.29" cy="15985.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="259" x="33398.29" y="15988.6558">char_lowercase(CharType p_char) : CharType</text><ellipse cx="33389.29" cy="15998.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="33398.29" y="16001.4604">to_upper() const : String</text><ellipse cx="33389.29" cy="16011.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="33398.29" y="16014.2651">to_lower() const : String</text><ellipse cx="33389.29" cy="16023.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="33398.29" y="16027.0698">count(const String &amp; p_string, int p_from = 0, int p_to = 0) const : int</text><ellipse cx="33389.29" cy="16036.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="404" x="33398.29" y="16039.8745">countn(const String &amp; p_string, int p_from = 0, int p_to = 0) const : int</text><ellipse cx="33389.29" cy="16049.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="33398.29" y="16052.6792">left(int p_pos) const : String</text><ellipse cx="33389.29" cy="16062.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="33398.29" y="16065.4839">right(int p_pos) const : String</text><ellipse cx="33389.29" cy="16075.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="33398.29" y="16078.2886">dedent() const : String</text><ellipse cx="33389.29" cy="16087.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="33398.29" y="16091.0933">strip_edges(bool left = true, bool right = true) const : String</text><ellipse cx="33389.29" cy="16100.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="33398.29" y="16103.8979">strip_escapes() const : String</text><ellipse cx="33389.29" cy="16113.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="33398.29" y="16116.7026">lstrip(const String &amp; p_chars) const : String</text><ellipse cx="33389.29" cy="16126.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="33398.29" y="16129.5073">rstrip(const String &amp; p_chars) const : String</text><ellipse cx="33389.29" cy="16139.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="33398.29" y="16142.312">get_extension() const : String</text><ellipse cx="33389.29" cy="16151.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="33398.29" y="16155.1167">get_basename() const : String</text><ellipse cx="33389.29" cy="16164.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="33398.29" y="16167.9214">plus_file(const String &amp; p_file) const : String</text><ellipse cx="33389.29" cy="16177.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="33398.29" y="16180.7261">ord_at(int p_idx) const : CharType</text><ellipse cx="33389.29" cy="16190.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="33398.29" y="16193.5308">erase(int p_pos, int p_chars) : void</text><ellipse cx="33389.29" cy="16203.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="33398.29" y="16206.3354">ascii(bool p_allow_extended = false) const : CharString</text><ellipse cx="33389.29" cy="16215.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="33398.29" y="16219.1401">utf8() const : CharString</text><ellipse cx="33389.29" cy="16228.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="33398.29" y="16231.9448">parse_utf8(const char * p_utf8, int p_len = -1) : bool</text><ellipse cx="33389.29" cy="16241.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="269" x="33398.29" y="16244.7495">utf8(const char * p_utf8, int p_len = -1) : String</text><ellipse cx="33389.29" cy="16254.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="287" x="33398.29" y="16257.5542">hash(const CharType * p_cstr, int p_len) : uint32_t</text><ellipse cx="33389.29" cy="16267.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="231" x="33398.29" y="16270.3589">hash(const CharType * p_cstr) : uint32_t</text><ellipse cx="33389.29" cy="16279.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="33398.29" y="16283.1636">hash(const char * p_cstr, int p_len) : uint32_t</text><ellipse cx="33389.29" cy="16292.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="33398.29" y="16295.9683">hash(const char * p_cstr) : uint32_t</text><ellipse cx="33389.29" cy="16305.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="33398.29" y="16308.7729">hash() const : uint32_t</text><ellipse cx="33389.29" cy="16318.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="33398.29" y="16321.5776">hash64() const : uint64_t</text><ellipse cx="33389.29" cy="16331.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="33398.29" y="16334.3823">md5_text() const : String</text><ellipse cx="33389.29" cy="16343.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="33398.29" y="16347.187">sha1_text() const : String</text><ellipse cx="33389.29" cy="16356.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="33398.29" y="16359.9917">sha256_text() const : String</text><ellipse cx="33389.29" cy="16369.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="33398.29" y="16372.7964">md5_buffer() const : Vector&lt;uint8_t&gt;</text><ellipse cx="33389.29" cy="16382.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="33398.29" y="16385.6011">sha1_buffer() const : Vector&lt;uint8_t&gt;</text><ellipse cx="33389.29" cy="16395.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="33398.29" y="16398.4058">sha256_buffer() const : Vector&lt;uint8_t&gt;</text><ellipse cx="33389.29" cy="16408" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="33398.29" y="16411.2104">empty() const : bool</text><ellipse cx="33389.29" cy="16420.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="33398.29" y="16424.0151">is_abs_path() const : bool</text><ellipse cx="33389.29" cy="16433.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="33398.29" y="16436.8198">is_rel_path() const : bool</text><ellipse cx="33389.29" cy="16446.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="33398.29" y="16449.6245">is_resource_file() const : bool</text><ellipse cx="33389.29" cy="16459.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="33398.29" y="16462.4292">path_to(const String &amp; p_path) const : String</text><ellipse cx="33389.29" cy="16472.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="33398.29" y="16475.2339">path_to_file(const String &amp; p_path) const : String</text><ellipse cx="33389.29" cy="16484.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="33398.29" y="16488.0386">get_base_dir() const : String</text><ellipse cx="33389.29" cy="16497.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="33398.29" y="16500.8433">get_file() const : String</text><ellipse cx="33389.29" cy="16510.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="33398.29" y="16513.6479">humanize_size(uint64_t p_size) : String</text><ellipse cx="33389.29" cy="16523.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="33398.29" y="16526.4526">simplify_path() const : String</text><ellipse cx="33389.29" cy="16536.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="33398.29" y="16539.2573">xml_escape(bool p_escape_quotes = false) const : String</text><ellipse cx="33389.29" cy="16548.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="33398.29" y="16552.062">xml_unescape() const : String</text><ellipse cx="33389.29" cy="16561.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="33398.29" y="16564.8667">http_escape() const : String</text><ellipse cx="33389.29" cy="16574.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="33398.29" y="16577.6714">http_unescape() const : String</text><ellipse cx="33389.29" cy="16587.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="33398.29" y="16590.4761">c_escape() const : String</text><ellipse cx="33389.29" cy="16600.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="33398.29" y="16603.2808">c_escape_multiline() const : String</text><ellipse cx="33389.29" cy="16612.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="33398.29" y="16616.0854">c_unescape() const : String</text><ellipse cx="33389.29" cy="16625.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="33398.29" y="16628.8901">json_escape() const : String</text><ellipse cx="33389.29" cy="16638.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="33398.29" y="16641.6948">word_wrap(int p_chars_per_line) const : String</text><ellipse cx="33389.29" cy="16651.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="33398.29" y="16654.4995">parse_url(String &amp; r_scheme, String &amp; r_host, int &amp; r_port, String &amp; r_path) const : Error</text><ellipse cx="33389.29" cy="16664.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="33398.29" y="16667.3042">percent_encode() const : String</text><ellipse cx="33389.29" cy="16676.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="33398.29" y="16680.1089">percent_decode() const : String</text><ellipse cx="33389.29" cy="16689.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="33398.29" y="16692.9136">property_name_encode() const : String</text><ellipse cx="33389.29" cy="16702.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="33398.29" y="16705.7183">validate_node_name() const : String</text><ellipse cx="33389.29" cy="16715.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="33398.29" y="16718.5229">is_valid_identifier() const : bool</text><ellipse cx="33389.29" cy="16728.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="33398.29" y="16731.3276">is_valid_integer() const : bool</text><ellipse cx="33389.29" cy="16740.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="33398.29" y="16744.1323">is_valid_float() const : bool</text><ellipse cx="33389.29" cy="16753.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="33398.29" y="16756.937">is_valid_hex_number(bool p_with_prefix) const : bool</text><ellipse cx="33389.29" cy="16766.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="33398.29" y="16769.7417">is_valid_html_color() const : bool</text><ellipse cx="33389.29" cy="16779.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="33398.29" y="16782.5464">is_valid_ip_address() const : bool</text><ellipse cx="33389.29" cy="16792.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="33398.29" y="16795.3511">is_valid_filename() const : bool</text><ellipse cx="33389.29" cy="16804.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="33398.29" y="16808.1558">String() : void</text><ellipse cx="33389.29" cy="16817.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="33398.29" y="16820.9604">String(const String &amp; p_str) : void</text><ellipse cx="33389.29" cy="16830.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="33398.29" y="16833.7651">operator=(const String &amp; p_str) : String</text><ellipse cx="33389.29" cy="16843.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="33398.29" y="16846.5698">String(const char * p_str) : void</text><ellipse cx="33389.29" cy="16856.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="33398.29" y="16859.3745">String(const CharType * p_str, int p_clip_to_len = -1) : void</text><ellipse cx="33389.29" cy="16868.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="33398.29" y="16872.1792">String(const StrRange &amp; p_range) : void</text><!--MD5=[21563e0a78186e4573d15ccf86d60a54]
class C_0000228469999635536560--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/array.h#L41" target="_top" title="Array" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/array.h#L41" xlink:show="new" xlink:title="Array" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="572.9922" id="C_0000228469999635536560" style="stroke: #A80036; stroke-width: 1.5;" width="690" x="11215.29" y="28.9531"/><ellipse cx="11540.04" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11543.0088,50.5938 Q11542.4306,50.8906 11541.79,51.0313 Q11541.1494,51.1875 11540.4463,51.1875 Q11537.9463,51.1875 11536.6181,49.5469 Q11535.3056,47.8906 11535.3056,44.7656 Q11535.3056,41.6406 11536.6181,39.9844 Q11537.9463,38.3281 11540.4463,38.3281 Q11541.1494,38.3281 11541.79,38.4844 Q11542.4463,38.6406 11543.0088,38.9375 L11543.0088,41.6563 Q11542.3838,41.0781 11541.79,40.8125 Q11541.1963,40.5313 11540.5713,40.5313 Q11539.2275,40.5313 11538.54,41.6094 Q11537.8525,42.6719 11537.8525,44.7656 Q11537.8525,46.8594 11538.54,47.9375 Q11539.2275,49 11540.5713,49 Q11541.1963,49 11541.79,48.7344 Q11542.3838,48.4531 11543.0088,47.875 L11543.0088,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="11560.54" y="49.1074">Array</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11216.29" x2="11904.29" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11216.29" x2="11904.29" y1="68.9531" y2="68.9531"/><ellipse cx="11226.29" cy="79.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="11235.29" y="83.1636">operator[](int p_idx) : Variant &amp;</text><ellipse cx="11226.29" cy="92.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="11235.29" y="95.9683">operator[](int p_idx) const : const Variant &amp;</text><ellipse cx="11226.29" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="11235.29" y="108.7729">set(int p_idx, const Variant &amp; p_value) : void</text><ellipse cx="11226.29" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="11235.29" y="121.5776">get(int p_idx) const : const Variant &amp;</text><ellipse cx="11226.29" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="11235.29" y="134.3823">size() const : int</text><ellipse cx="11226.29" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="11235.29" y="147.187">empty() const : bool</text><ellipse cx="11226.29" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="11235.29" y="159.9917">clear() : void</text><ellipse cx="11226.29" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="11235.29" y="172.7964">operator==(const Array &amp; p_array) const : bool</text><ellipse cx="11226.29" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="11235.29" y="185.6011">hash() const : uint32_t</text><ellipse cx="11226.29" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="11235.29" y="198.4058">operator=(const Array &amp; p_array) : void</text><ellipse cx="11226.29" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="11235.29" y="211.2104">push_back(const Variant &amp; p_value) : void</text><ellipse cx="11226.29" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="11235.29" y="224.0151">append(const Variant &amp; p_value) : void</text><ellipse cx="11226.29" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="11235.29" y="236.8198">append_array(const Array &amp; p_array) : void</text><ellipse cx="11226.29" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="11235.29" y="249.6245">resize(int p_new_size) : Error</text><ellipse cx="11226.29" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="11235.29" y="262.4292">insert(int p_pos, const Variant &amp; p_value) : void</text><ellipse cx="11226.29" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="11235.29" y="275.2339">remove(int p_pos) : void</text><ellipse cx="11226.29" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="11235.29" y="288.0386">front() const : Variant</text><ellipse cx="11226.29" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="11235.29" y="300.8433">back() const : Variant</text><ellipse cx="11226.29" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="11235.29" y="313.6479">sort() : Array &amp;</text><ellipse cx="11226.29" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="11235.29" y="326.4526">sort_custom(Object * p_obj, const StringName &amp; p_function) : Array &amp;</text><ellipse cx="11226.29" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="11235.29" y="339.2573">shuffle() : void</text><ellipse cx="11226.29" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="11235.29" y="352.062">bsearch(const Variant &amp; p_value, bool p_before = true) : int</text><ellipse cx="11226.29" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="664" x="11235.29" y="364.8667">bsearch_custom(const Variant &amp; p_value, Object * p_obj, const StringName &amp; p_function, bool p_before = true) : int</text><ellipse cx="11226.29" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="11235.29" y="377.6714">invert() : Array &amp;</text><ellipse cx="11226.29" cy="387.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="11235.29" y="390.4761">find(const Variant &amp; p_value, int p_from = 0) const : int</text><ellipse cx="11226.29" cy="400.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="11235.29" y="403.2808">rfind(const Variant &amp; p_value, int p_from = -1) const : int</text><ellipse cx="11226.29" cy="412.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="11235.29" y="416.0854">find_last(const Variant &amp; p_value) const : int</text><ellipse cx="11226.29" cy="425.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11235.29" y="428.8901">count(const Variant &amp; p_value) const : int</text><ellipse cx="11226.29" cy="438.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11235.29" y="441.6948">has(const Variant &amp; p_value) const : bool</text><ellipse cx="11226.29" cy="451.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="11235.29" y="454.4995">erase(const Variant &amp; p_value) : void</text><ellipse cx="11226.29" cy="464.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="11235.29" y="467.3042">push_front(const Variant &amp; p_value) : void</text><ellipse cx="11226.29" cy="476.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="11235.29" y="480.1089">pop_back() : Variant</text><ellipse cx="11226.29" cy="489.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="11235.29" y="492.9136">pop_front() : Variant</text><ellipse cx="11226.29" cy="502.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="11235.29" y="505.7183">duplicate(bool p_deep = false) const : Array</text><ellipse cx="11226.29" cy="515.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="11235.29" y="518.5229">slice(int p_begin, int p_end, int p_step = 1, bool p_deep = false) const : Array</text><ellipse cx="11226.29" cy="528.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="11235.29" y="531.3276">min() const : Variant</text><ellipse cx="11226.29" cy="540.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="11235.29" y="544.1323">max() const : Variant</text><ellipse cx="11226.29" cy="553.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="11235.29" y="556.937">id() const : const void *</text><ellipse cx="11226.29" cy="566.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="11235.29" y="569.7417">Array(const Array &amp; p_from) : void</text><ellipse cx="11226.29" cy="579.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="11235.29" y="582.5464">Array() : void</text><ellipse cx="11226.29" cy="592.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="11235.29" y="595.3511">~Array() : void</text></a><!--MD5=[c9ab0454be9bc9dd8cd0824f6bdde71d]
class C_0001299121424291583786--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42" target="_top" title="Dictionary" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42" xlink:show="new" xlink:title="Dictionary" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="393.7266" id="C_0001299121424291583786" style="stroke: #A80036; stroke-width: 1.5;" width="417" x="24000.79" y="2154.9531"/><ellipse cx="24174.04" cy="2170.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24177.0088,2176.5938 Q24176.4306,2176.8906 24175.79,2177.0313 Q24175.1494,2177.1875 24174.4463,2177.1875 Q24171.9463,2177.1875 24170.6181,2175.5469 Q24169.3056,2173.8906 24169.3056,2170.7656 Q24169.3056,2167.6406 24170.6181,2165.9844 Q24171.9463,2164.3281 24174.4463,2164.3281 Q24175.1494,2164.3281 24175.79,2164.4844 Q24176.4463,2164.6406 24177.0088,2164.9375 L24177.0088,2167.6563 Q24176.3838,2167.0781 24175.79,2166.8125 Q24175.1963,2166.5313 24174.5713,2166.5313 Q24173.2275,2166.5313 24172.54,2167.6094 Q24171.8525,2168.6719 24171.8525,2170.7656 Q24171.8525,2172.8594 24172.54,2173.9375 Q24173.2275,2175 24174.5713,2175 Q24175.1963,2175 24175.79,2174.7344 Q24176.3838,2174.4531 24177.0088,2173.875 L24177.0088,2176.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="24194.54" y="2175.1074">Dictionary</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24001.79" x2="24416.79" y1="2186.9531" y2="2186.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24001.79" x2="24416.79" y1="2194.9531" y2="2194.9531"/><ellipse cx="24011.79" cy="2205.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="24020.79" y="2209.1636">get_key_list(List&lt;Variant&gt; * p_keys) const : void</text><ellipse cx="24011.79" cy="2218.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="24020.79" y="2221.9683">get_key_at_index(int p_index) const : Variant</text><ellipse cx="24011.79" cy="2231.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="24020.79" y="2234.7729">get_value_at_index(int p_index) const : Variant</text><ellipse cx="24011.79" cy="2244.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="24020.79" y="2247.5776">operator[](const Variant &amp; p_key) : Variant &amp;</text><ellipse cx="24011.79" cy="2257.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="24020.79" y="2260.3823">operator[](const Variant &amp; p_key) const : const Variant &amp;</text><ellipse cx="24011.79" cy="2269.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="24020.79" y="2273.187">getptr(const Variant &amp; p_key) const : const Variant *</text><ellipse cx="24011.79" cy="2282.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="24020.79" y="2285.9917">getptr(const Variant &amp; p_key) : Variant *</text><ellipse cx="24011.79" cy="2295.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="24020.79" y="2298.7964">get_valid(const Variant &amp; p_key) const : Variant</text><ellipse cx="24011.79" cy="2308.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="24020.79" y="2311.6011">get(const Variant &amp; p_key, const Variant &amp; p_default) const : Variant</text><ellipse cx="24011.79" cy="2321.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="24020.79" y="2324.4058">size() const : int</text><ellipse cx="24011.79" cy="2334" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="24020.79" y="2337.2104">empty() const : bool</text><ellipse cx="24011.79" cy="2346.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="24020.79" y="2350.0151">clear() : void</text><ellipse cx="24011.79" cy="2359.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="24020.79" y="2362.8198">has(const Variant &amp; p_key) const : bool</text><ellipse cx="24011.79" cy="2372.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="24020.79" y="2375.6245">has_all(const Array &amp; p_keys) const : bool</text><ellipse cx="24011.79" cy="2385.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="24020.79" y="2388.4292">erase(const Variant &amp; p_key) : bool</text><ellipse cx="24011.79" cy="2398.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="24020.79" y="2401.2339">operator==(const Dictionary &amp; p_dictionary) const : bool</text><ellipse cx="24011.79" cy="2410.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="24020.79" y="2414.0386">operator!=(const Dictionary &amp; p_dictionary) const : bool</text><ellipse cx="24011.79" cy="2423.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="24020.79" y="2426.8433">hash() const : uint32_t</text><ellipse cx="24011.79" cy="2436.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="24020.79" y="2439.6479">operator=(const Dictionary &amp; p_dictionary) : void</text><ellipse cx="24011.79" cy="2449.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="24020.79" y="2452.4526">next(const Variant * p_key = __null) const : const Variant *</text><ellipse cx="24011.79" cy="2462.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="24020.79" y="2465.2573">keys() const : Array</text><ellipse cx="24011.79" cy="2474.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="24020.79" y="2478.062">values() const : Array</text><ellipse cx="24011.79" cy="2487.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="24020.79" y="2490.8667">duplicate(bool p_deep = false) const : Dictionary</text><ellipse cx="24011.79" cy="2500.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="24020.79" y="2503.6714">id() const : const void *</text><ellipse cx="24011.79" cy="2513.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="24020.79" y="2516.4761">Dictionary(const Dictionary &amp; p_from) : void</text><ellipse cx="24011.79" cy="2526.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="24020.79" y="2529.2808">Dictionary() : void</text><ellipse cx="24011.79" cy="2538.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="24020.79" y="2542.0854">~Dictionary() : void</text></a><!--MD5=[bdf481e0258441d9ea4c4f618bd16c94]
class C_0001858199404643284193--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44" target="_top" title="StringName" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44" xlink:show="new" xlink:title="StringName" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="304.0938" id="C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.5;" width="346" x="16427.29" y="15582.4531"/><ellipse cx="16559.54" cy="15598.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M16562.5088,15604.0938 Q16561.9306,15604.3906 16561.29,15604.5313 Q16560.6494,15604.6875 16559.9463,15604.6875 Q16557.4463,15604.6875 16556.1181,15603.0469 Q16554.8056,15601.3906 16554.8056,15598.2656 Q16554.8056,15595.1406 16556.1181,15593.4844 Q16557.4463,15591.8281 16559.9463,15591.8281 Q16560.6494,15591.8281 16561.29,15591.9844 Q16561.9463,15592.1406 16562.5088,15592.4375 L16562.5088,15595.1563 Q16561.8838,15594.5781 16561.29,15594.3125 Q16560.6963,15594.0313 16560.0713,15594.0313 Q16558.7275,15594.0313 16558.04,15595.1094 Q16557.3525,15596.1719 16557.3525,15598.2656 Q16557.3525,15600.3594 16558.04,15601.4375 Q16558.7275,15602.5 16560.0713,15602.5 Q16560.6963,15602.5 16561.29,15602.2344 Q16561.8838,15601.9531 16562.5088,15601.375 L16562.5088,15604.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="16580.04" y="15602.6074">StringName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16428.29" x2="16772.29" y1="15614.4531" y2="15614.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="16428.29" x2="16772.29" y1="15622.4531" y2="15622.4531"/><ellipse cx="16438.29" cy="15633.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="16447.29" y="15636.6636">operator const void *() const : const void *</text><ellipse cx="16438.29" cy="15646.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="16447.29" y="15649.4683">operator==(const String &amp; p_name) const : bool</text><ellipse cx="16438.29" cy="15659.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="16447.29" y="15662.2729">operator==(const char * p_name) const : bool</text><ellipse cx="16438.29" cy="15671.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="16447.29" y="15675.0776">operator!=(const String &amp; p_name) const : bool</text><ellipse cx="16438.29" cy="15684.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="16447.29" y="15687.8823">operator&lt;(const StringName &amp; p_name) const : bool</text><ellipse cx="16438.29" cy="15697.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="16447.29" y="15700.687">operator==(const StringName &amp; p_name) const : bool</text><ellipse cx="16438.29" cy="15710.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="16447.29" y="15713.4917">hash() const : uint32_t</text><ellipse cx="16438.29" cy="15723.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="16447.29" y="15726.2964">data_unique_pointer() const : const void *</text><ellipse cx="16438.29" cy="15735.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="16447.29" y="15739.1011">operator!=(const StringName &amp; p_name) const : bool</text><ellipse cx="16438.29" cy="15748.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="16447.29" y="15751.9058">operator String() const : String</text><ellipse cx="16438.29" cy="15761.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="245" x="16447.29" y="15764.7104">search(const char * p_name) : StringName</text><ellipse cx="16438.29" cy="15774.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="16447.29" y="15777.5151">search(const CharType * p_name) : StringName</text><ellipse cx="16438.29" cy="15787.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="16447.29" y="15790.3198">search(const String &amp; p_name) : StringName</text><ellipse cx="16438.29" cy="15799.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="16447.29" y="15803.1245">operator=(const StringName &amp; p_name) : void</text><ellipse cx="16438.29" cy="15812.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="16447.29" y="15815.9292">StringName(const char * p_name) : void</text><ellipse cx="16438.29" cy="15825.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="16447.29" y="15828.7339">StringName(const StringName &amp; p_name) : void</text><ellipse cx="16438.29" cy="15838.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="16447.29" y="15841.5386">StringName(const String &amp; p_name) : void</text><ellipse cx="16438.29" cy="15851.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="16447.29" y="15854.3433">StringName(const StaticCString &amp; p_static_string) : void</text><ellipse cx="16438.29" cy="15863.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="16447.29" y="15867.1479">StringName() : void</text><ellipse cx="16438.29" cy="15876.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="16447.29" y="15879.9526">~StringName() : void</text></a><!--MD5=[c2088384ac946f1d792706371e974b46]
class C_0001169846630986447699--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0001169846630986447699" style="stroke: #A80036; stroke-width: 1.5;" width="150" x="4800.29" y="4747.4531"/><ellipse cx="4815.29" cy="4763.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4818.2588,4769.0938 Q4817.6806,4769.3906 4817.04,4769.5313 Q4816.3994,4769.6875 4815.6963,4769.6875 Q4813.1963,4769.6875 4811.8681,4768.0469 Q4810.5556,4766.3906 4810.5556,4763.2656 Q4810.5556,4760.1406 4811.8681,4758.4844 Q4813.1963,4756.8281 4815.6963,4756.8281 Q4816.3994,4756.8281 4817.04,4756.9844 Q4817.6963,4757.1406 4818.2588,4757.4375 L4818.2588,4760.1563 Q4817.6338,4759.5781 4817.04,4759.3125 Q4816.4463,4759.0313 4815.8213,4759.0313 Q4814.4775,4759.0313 4813.79,4760.1094 Q4813.1025,4761.1719 4813.1025,4763.2656 Q4813.1025,4765.3594 4813.79,4766.4375 Q4814.4775,4767.5 4815.8213,4767.5 Q4816.4463,4767.5 4817.04,4767.2344 Q4817.6338,4766.9531 4818.2588,4766.375 L4818.2588,4769.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="4829.29" y="4767.6074">Vector</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="4878.29" y="4744.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="4879.29" y="4756.5918">StringName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4801.29" x2="4949.29" y1="4779.4531" y2="4779.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4801.29" x2="4949.29" y1="4787.4531" y2="4787.4531"/><!--MD5=[69f431c87134c5ebe27607fdbce24f25]
class C_0001768230974934037264--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/node_path.h#L37" target="_top" title="NodePath" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/node_path.h#L37" xlink:show="new" xlink:title="NodePath" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="393.7266" id="C_0001768230974934037264" style="stroke: #A80036; stroke-width: 1.5;" width="674" x="28480.29" y="12966.4531"/><ellipse cx="28782.04" cy="12982.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28785.0088,12988.0938 Q28784.4306,12988.3906 28783.79,12988.5313 Q28783.1494,12988.6875 28782.4463,12988.6875 Q28779.9463,12988.6875 28778.6181,12987.0469 Q28777.3056,12985.3906 28777.3056,12982.2656 Q28777.3056,12979.1406 28778.6181,12977.4844 Q28779.9463,12975.8281 28782.4463,12975.8281 Q28783.1494,12975.8281 28783.79,12975.9844 Q28784.4463,12976.1406 28785.0088,12976.4375 L28785.0088,12979.1563 Q28784.3838,12978.5781 28783.79,12978.3125 Q28783.1963,12978.0313 28782.5713,12978.0313 Q28781.2275,12978.0313 28780.54,12979.1094 Q28779.8525,12980.1719 28779.8525,12982.2656 Q28779.8525,12984.3594 28780.54,12985.4375 Q28781.2275,12986.5 28782.5713,12986.5 Q28783.1963,12986.5 28783.79,12986.2344 Q28784.3838,12985.9531 28785.0088,12985.375 L28785.0088,12988.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="28802.54" y="12986.6074">NodePath</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28481.29" x2="29153.29" y1="12998.4531" y2="12998.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28481.29" x2="29153.29" y1="13006.4531" y2="13006.4531"/><ellipse cx="28491.29" cy="13017.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="28500.29" y="13020.6636">get_sname() const : StringName</text><ellipse cx="28491.29" cy="13030.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="28500.29" y="13033.4683">is_absolute() const : bool</text><ellipse cx="28491.29" cy="13043.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="28500.29" y="13046.2729">get_name_count() const : int</text><ellipse cx="28491.29" cy="13055.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="28500.29" y="13059.0776">get_name(int p_idx) const : StringName</text><ellipse cx="28491.29" cy="13068.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="28500.29" y="13071.8823">get_subname_count() const : int</text><ellipse cx="28491.29" cy="13081.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="28500.29" y="13084.687">get_subname(int p_idx) const : StringName</text><ellipse cx="28491.29" cy="13094.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="28500.29" y="13097.4917">get_names() const : Vector&lt;StringName&gt;</text><ellipse cx="28491.29" cy="13107.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="28500.29" y="13110.2964">get_subnames() const : Vector&lt;StringName&gt;</text><ellipse cx="28491.29" cy="13119.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="28500.29" y="13123.1011">get_concatenated_subnames() const : StringName</text><ellipse cx="28491.29" cy="13132.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="28500.29" y="13135.9058">rel_path_to(const NodePath &amp; p_np) const : NodePath</text><ellipse cx="28491.29" cy="13145.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="28500.29" y="13148.7104">get_as_property_path() const : NodePath</text><ellipse cx="28491.29" cy="13158.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="28500.29" y="13161.5151">prepend_period() : void</text><ellipse cx="28491.29" cy="13171.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="28500.29" y="13174.3198">get_parent() const : NodePath</text><ellipse cx="28491.29" cy="13183.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="28500.29" y="13187.1245">hash() const : uint32_t</text><ellipse cx="28491.29" cy="13196.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="28500.29" y="13199.9292">operator String() const : String</text><ellipse cx="28491.29" cy="13209.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="28500.29" y="13212.7339">is_empty() const : bool</text><ellipse cx="28491.29" cy="13222.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="28500.29" y="13225.5386">operator==(const NodePath &amp; p_path) const : bool</text><ellipse cx="28491.29" cy="13235.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="28500.29" y="13238.3433">operator!=(const NodePath &amp; p_path) const : bool</text><ellipse cx="28491.29" cy="13247.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="28500.29" y="13251.1479">operator=(const NodePath &amp; p_path) : void</text><ellipse cx="28491.29" cy="13260.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="28500.29" y="13263.9526">simplify() : void</text><ellipse cx="28491.29" cy="13273.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="28500.29" y="13276.7573">simplified() const : NodePath</text><ellipse cx="28491.29" cy="13286.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="28500.29" y="13289.562">NodePath(const Vector&lt;StringName&gt; &amp; p_path, bool p_absolute) : void</text><ellipse cx="28491.29" cy="13299.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="648" x="28500.29" y="13302.3667">NodePath(const Vector&lt;StringName&gt; &amp; p_path, const Vector&lt;StringName&gt; &amp; p_subpath, bool p_absolute) : void</text><ellipse cx="28491.29" cy="13311.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="28500.29" y="13315.1714">NodePath(const NodePath &amp; p_path) : void</text><ellipse cx="28491.29" cy="13324.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="28500.29" y="13327.9761">NodePath(const String &amp; p_path) : void</text><ellipse cx="28491.29" cy="13337.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="28500.29" y="13340.7808">NodePath() : void</text><ellipse cx="28491.29" cy="13350.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="28500.29" y="13353.5854">~NodePath() : void</text></a><!--MD5=[5ff974ea4457aef713dc6a6e7de5ffac]
class C_0002025812040042972946--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41" target="_top" title="RefPtr" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41" xlink:show="new" xlink:title="RefPtr" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0002025812040042972946" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="24737.29" y="2263.9531"/><ellipse cx="24865.04" cy="2279.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24868.0088,2285.5938 Q24867.4306,2285.8906 24866.79,2286.0313 Q24866.1494,2286.1875 24865.4463,2286.1875 Q24862.9463,2286.1875 24861.6181,2284.5469 Q24860.3056,2282.8906 24860.3056,2279.7656 Q24860.3056,2276.6406 24861.6181,2274.9844 Q24862.9463,2273.3281 24865.4463,2273.3281 Q24866.1494,2273.3281 24866.79,2273.4844 Q24867.4463,2273.6406 24868.0088,2273.9375 L24868.0088,2276.6563 Q24867.3838,2276.0781 24866.79,2275.8125 Q24866.1963,2275.5313 24865.5713,2275.5313 Q24864.2275,2275.5313 24863.54,2276.6094 Q24862.8525,2277.6719 24862.8525,2279.7656 Q24862.8525,2281.8594 24863.54,2282.9375 Q24864.2275,2284 24865.5713,2284 Q24866.1963,2284 24866.79,2283.7344 Q24867.3838,2283.4531 24868.0088,2282.875 L24868.0088,2285.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="24885.54" y="2284.1074">RefPtr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24738.29" x2="25038.29" y1="2295.9531" y2="2295.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24738.29" x2="25038.29" y1="2303.9531" y2="2303.9531"/><ellipse cx="24748.29" cy="2314.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="24757.29" y="2318.1636">is_null() const : bool</text><ellipse cx="24748.29" cy="2327.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="24757.29" y="2330.9683">operator=(const RefPtr &amp; p_other) : void</text><ellipse cx="24748.29" cy="2340.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="24757.29" y="2343.7729">operator==(const RefPtr &amp; p_other) const : bool</text><ellipse cx="24748.29" cy="2353.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="24757.29" y="2356.5776">operator!=(const RefPtr &amp; p_other) const : bool</text><ellipse cx="24748.29" cy="2366.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="24757.29" y="2369.3823">get_rid() const : RID</text><ellipse cx="24748.29" cy="2378.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="24757.29" y="2382.187">unref() : void</text><ellipse cx="24748.29" cy="2391.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="24757.29" y="2394.9917">get_data() const : void *</text><ellipse cx="24748.29" cy="2404.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="24757.29" y="2407.7964">RefPtr(const RefPtr &amp; p_other) : void</text><ellipse cx="24748.29" cy="2417.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="24757.29" y="2420.6011">RefPtr() : void</text><ellipse cx="24748.29" cy="2430.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="24757.29" y="2433.4058">~RefPtr() : void</text></a><!--MD5=[81c07ba5b31299569f70a78c93d1c952]
class C_0000367042517371617856--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.5;" width="122" x="3121.29" y="13139.4531"/><ellipse cx="3136.29" cy="13155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3139.2588,13161.0938 Q3138.6806,13161.3906 3138.04,13161.5313 Q3137.3994,13161.6875 3136.6963,13161.6875 Q3134.1963,13161.6875 3132.8681,13160.0469 Q3131.5556,13158.3906 3131.5556,13155.2656 Q3131.5556,13152.1406 3132.8681,13150.4844 Q3134.1963,13148.8281 3136.6963,13148.8281 Q3137.3994,13148.8281 3138.04,13148.9844 Q3138.6963,13149.1406 3139.2588,13149.4375 L3139.2588,13152.1563 Q3138.6338,13151.5781 3138.04,13151.3125 Q3137.4463,13151.0313 3136.8213,13151.0313 Q3135.4775,13151.0313 3134.79,13152.1094 Q3134.1025,13153.1719 3134.1025,13155.2656 Q3134.1025,13157.3594 3134.79,13158.4375 Q3135.4775,13159.5 3136.8213,13159.5 Q3137.4463,13159.5 3138.04,13159.2344 Q3138.6338,13158.9531 3139.2588,13158.375 L3139.2588,13161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="3150.29" y="13159.6074">Vector</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="47" x="3199.29" y="13136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="45" x="3200.29" y="13148.5918">Variant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3122.29" x2="3242.29" y1="13171.4531" y2="13171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3122.29" x2="3242.29" y1="13179.4531" y2="13179.4531"/><!--MD5=[24355c39fbd6cf2d4f795e1435793478]
class C_0001789265459324510060--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0001789265459324510060" style="stroke: #A80036; stroke-width: 1.5;" width="128" x="11940.29" y="291.4531"/><ellipse cx="11955.29" cy="307.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11958.2588,313.0938 Q11957.6806,313.3906 11957.04,313.5313 Q11956.3994,313.6875 11955.6963,313.6875 Q11953.1963,313.6875 11951.8681,312.0469 Q11950.5556,310.3906 11950.5556,307.2656 Q11950.5556,304.1406 11951.8681,302.4844 Q11953.1963,300.8281 11955.6963,300.8281 Q11956.3994,300.8281 11957.04,300.9844 Q11957.6963,301.1406 11958.2588,301.4375 L11958.2588,304.1563 Q11957.6338,303.5781 11957.04,303.3125 Q11956.4463,303.0313 11955.8213,303.0313 Q11954.4775,303.0313 11953.79,304.1094 Q11953.1025,305.1719 11953.1025,307.2656 Q11953.1025,309.3594 11953.79,310.4375 Q11954.4775,311.5 11955.8213,311.5 Q11956.4463,311.5 11957.04,311.2344 Q11957.6338,310.9531 11958.2588,310.375 L11958.2588,313.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="11969.29" y="311.6074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="73" x="11998.29" y="288.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="11999.29" y="300.5918">MethodInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11941.29" x2="12067.29" y1="323.4531" y2="323.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11941.29" x2="12067.29" y1="331.4531" y2="331.4531"/><!--MD5=[a4093d4f9ea5ea0f34ea630196a7906a]
class C_0000788782266645010446--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0000788782266645010446" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="32009.29" y="13139.4531"/><ellipse cx="32024.29" cy="13155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32027.2588,13161.0938 Q32026.6806,13161.3906 32026.04,13161.5313 Q32025.3994,13161.6875 32024.6963,13161.6875 Q32022.1963,13161.6875 32020.8681,13160.0469 Q32019.5556,13158.3906 32019.5556,13155.2656 Q32019.5556,13152.1406 32020.8681,13150.4844 Q32022.1963,13148.8281 32024.6963,13148.8281 Q32025.3994,13148.8281 32026.04,13148.9844 Q32026.6963,13149.1406 32027.2588,13149.4375 L32027.2588,13152.1563 Q32026.6338,13151.5781 32026.04,13151.3125 Q32025.4463,13151.0313 32024.8213,13151.0313 Q32023.4775,13151.0313 32022.79,13152.1094 Q32022.1025,13153.1719 32022.1025,13155.2656 Q32022.1025,13157.3594 32022.79,13158.4375 Q32023.4775,13159.5 32024.8213,13159.5 Q32025.4463,13159.5 32026.04,13159.2344 Q32026.6338,13158.9531 32027.2588,13158.375 L32027.2588,13161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="32038.29" y="13159.6074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="79" x="32067.29" y="13136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="32068.29" y="13148.5918">PropertyInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32010.29" x2="32142.29" y1="13171.4531" y2="13171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="32010.29" x2="32142.29" y1="13179.4531" y2="13179.4531"/><!--MD5=[81164fdf4de04db55f7d70df92bbb983]
class C_0000210234563198599367--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L93" target="_top" title="Variant" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L93" xlink:show="new" xlink:title="Variant" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="2135.1641" id="C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.5;" width="1306" x="34587.29" y="14666.9531"/><ellipse cx="35213.54" cy="14682.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35216.5088,14688.5938 Q35215.9306,14688.8906 35215.29,14689.0313 Q35214.6494,14689.1875 35213.9463,14689.1875 Q35211.4463,14689.1875 35210.1181,14687.5469 Q35208.8056,14685.8906 35208.8056,14682.7656 Q35208.8056,14679.6406 35210.1181,14677.9844 Q35211.4463,14676.3281 35213.9463,14676.3281 Q35214.6494,14676.3281 35215.29,14676.4844 Q35215.9463,14676.6406 35216.5088,14676.9375 L35216.5088,14679.6563 Q35215.8838,14679.0781 35215.29,14678.8125 Q35214.6963,14678.5313 35214.0713,14678.5313 Q35212.7275,14678.5313 35212.04,14679.6094 Q35211.3525,14680.6719 35211.3525,14682.7656 Q35211.3525,14684.8594 35212.04,14685.9375 Q35212.7275,14687 35214.0713,14687 Q35214.6963,14687 35215.29,14686.7344 Q35215.8838,14686.4531 35216.5088,14685.875 L35216.5088,14688.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="45" x="35234.04" y="14687.1074">Variant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34588.29" x2="35892.29" y1="14698.9531" y2="14698.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="34588.29" x2="35892.29" y1="14706.9531" y2="14706.9531"/><ellipse cx="34598.29" cy="14717.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="34607.29" y="14721.1636">get_type() const : Variant::Type</text><ellipse cx="34598.29" cy="14730.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="34607.29" y="14733.9683">get_type_name(Variant::Type p_type) : String</text><ellipse cx="34598.29" cy="14743.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="402" x="34607.29" y="14746.7729">can_convert(Variant::Type p_type_from, Variant::Type p_type_to) : bool</text><ellipse cx="34598.29" cy="14756.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="437" x="34607.29" y="14759.5776">can_convert_strict(Variant::Type p_type_from, Variant::Type p_type_to) : bool</text><ellipse cx="34598.29" cy="14769.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="34607.29" y="14772.3823">is_ref() const : bool</text><ellipse cx="34598.29" cy="14781.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="34607.29" y="14785.187">is_num() const : bool</text><ellipse cx="34598.29" cy="14794.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="34607.29" y="14797.9917">is_array() const : bool</text><ellipse cx="34598.29" cy="14807.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="34607.29" y="14810.7964">is_shared() const : bool</text><ellipse cx="34598.29" cy="14820.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="34607.29" y="14823.6011">is_zero() const : bool</text><ellipse cx="34598.29" cy="14833.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="34607.29" y="14836.4058">is_one() const : bool</text><ellipse cx="34598.29" cy="14846" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="34607.29" y="14849.2104">operator bool() const : bool</text><ellipse cx="34598.29" cy="14858.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="34607.29" y="14862.0151">operator int() const : int</text><ellipse cx="34598.29" cy="14871.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="34607.29" y="14874.8198">operator unsigned int() const : unsigned int</text><ellipse cx="34598.29" cy="14884.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="34607.29" y="14887.6245">operator short() const : short</text><ellipse cx="34598.29" cy="14897.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="34607.29" y="14900.4292">operator unsigned short() const : unsigned short</text><ellipse cx="34598.29" cy="14910.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="34607.29" y="14913.2339">operator signed char() const : signed char</text><ellipse cx="34598.29" cy="14922.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="34607.29" y="14926.0386">operator unsigned char() const : unsigned char</text><ellipse cx="34598.29" cy="14935.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="34607.29" y="14938.8433">operator long() const : int64_t</text><ellipse cx="34598.29" cy="14948.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="34607.29" y="14951.6479">operator unsigned long() const : uint64_t</text><ellipse cx="34598.29" cy="14961.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="34607.29" y="14964.4526">operator wchar_t() const : CharType</text><ellipse cx="34598.29" cy="14974.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="34607.29" y="14977.2573">operator float() const : float</text><ellipse cx="34598.29" cy="14986.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="34607.29" y="14990.062">operator double() const : double</text><ellipse cx="34598.29" cy="14999.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="34607.29" y="15002.8667">operator String() const : String</text><ellipse cx="34598.29" cy="15012.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="34607.29" y="15015.6714">operator StringName() const : StringName</text><ellipse cx="34598.29" cy="15025.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="34607.29" y="15028.4761">operator Vector2() const : Vector2</text><ellipse cx="34598.29" cy="15038.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="34607.29" y="15041.2808">operator Rect2() const : Rect2</text><ellipse cx="34598.29" cy="15050.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="34607.29" y="15054.0854">operator Vector3() const : Vector3</text><ellipse cx="34598.29" cy="15063.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="34607.29" y="15066.8901">operator Plane() const : Plane</text><ellipse cx="34598.29" cy="15076.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="34607.29" y="15079.6948">operator AABB() const : ::AABB</text><ellipse cx="34598.29" cy="15089.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="34607.29" y="15092.4995">operator Quat() const : Quat</text><ellipse cx="34598.29" cy="15102.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="34607.29" y="15105.3042">operator Basis() const : Basis</text><ellipse cx="34598.29" cy="15114.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="34607.29" y="15118.1089">operator Transform() const : Transform</text><ellipse cx="34598.29" cy="15127.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="34607.29" y="15130.9136">operator Transform2D() const : Transform2D</text><ellipse cx="34598.29" cy="15140.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="34607.29" y="15143.7183">operator Color() const : Color</text><ellipse cx="34598.29" cy="15153.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="34607.29" y="15156.5229">operator NodePath() const : NodePath</text><ellipse cx="34598.29" cy="15166.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="34607.29" y="15169.3276">operator RefPtr() const : RefPtr</text><ellipse cx="34598.29" cy="15178.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="34607.29" y="15182.1323">operator RID() const : RID</text><ellipse cx="34598.29" cy="15191.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="34607.29" y="15194.937">operator Object *() const : Object *</text><ellipse cx="34598.29" cy="15204.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="34607.29" y="15207.7417">operator Node *() const : Node *</text><ellipse cx="34598.29" cy="15217.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="34607.29" y="15220.5464">operator Control *() const : Control *</text><ellipse cx="34598.29" cy="15230.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="34607.29" y="15233.3511">operator Dictionary() const : Dictionary</text><ellipse cx="34598.29" cy="15242.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="34607.29" y="15246.1558">operator Array() const : Array</text><ellipse cx="34598.29" cy="15255.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="34607.29" y="15258.9604">operator PoolVector() const : PoolVector&lt;uint8_t&gt;</text><ellipse cx="34598.29" cy="15268.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="34607.29" y="15271.7651">operator PoolVector() const : PoolVector&lt;int&gt;</text><ellipse cx="34598.29" cy="15281.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="34607.29" y="15284.5698">operator PoolVector() const : PoolVector&lt;real_t&gt;</text><ellipse cx="34598.29" cy="15294.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="34607.29" y="15297.3745">operator PoolVector() const : PoolVector&lt;String&gt;</text><ellipse cx="34598.29" cy="15306.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="34607.29" y="15310.1792">operator PoolVector() const : PoolVector&lt;Vector3&gt;</text><ellipse cx="34598.29" cy="15319.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="34607.29" y="15322.9839">operator PoolVector() const : PoolVector&lt;Color&gt;</text><ellipse cx="34598.29" cy="15332.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="34607.29" y="15335.7886">operator PoolVector() const : PoolVector&lt;Plane&gt;</text><ellipse cx="34598.29" cy="15345.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="34607.29" y="15348.5933">operator PoolVector() const : PoolVector&lt;Face3&gt;</text><ellipse cx="34598.29" cy="15358.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="34607.29" y="15361.3979">operator Vector() const : Vector&lt;Variant&gt;</text><ellipse cx="34598.29" cy="15370.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="34607.29" y="15374.2026">operator Vector() const : Vector&lt;uint8_t&gt;</text><ellipse cx="34598.29" cy="15383.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="34607.29" y="15387.0073">operator Vector() const : Vector&lt;int&gt;</text><ellipse cx="34598.29" cy="15396.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="34607.29" y="15399.812">operator Vector() const : Vector&lt;real_t&gt;</text><ellipse cx="34598.29" cy="15409.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="34607.29" y="15412.6167">operator Vector() const : Vector&lt;String&gt;</text><ellipse cx="34598.29" cy="15422.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="34607.29" y="15425.4214">operator Vector() const : Vector&lt;StringName&gt;</text><ellipse cx="34598.29" cy="15435.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="34607.29" y="15438.2261">operator Vector() const : Vector&lt;Vector3&gt;</text><ellipse cx="34598.29" cy="15447.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="34607.29" y="15451.0308">operator Vector() const : Vector&lt;Color&gt;</text><ellipse cx="34598.29" cy="15460.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="34607.29" y="15463.8354">operator Vector() const : Vector&lt;RID&gt;</text><ellipse cx="34598.29" cy="15473.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="34607.29" y="15476.6401">operator Vector() const : Vector&lt;Vector2&gt;</text><ellipse cx="34598.29" cy="15486.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="34607.29" y="15489.4448">operator PoolVector() const : PoolVector&lt;Vector2&gt;</text><ellipse cx="34598.29" cy="15499.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="34607.29" y="15502.2495">operator Vector() const : Vector&lt;Plane&gt;</text><ellipse cx="34598.29" cy="15511.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="34607.29" y="15515.0542">operator Margin() const : Margin</text><ellipse cx="34598.29" cy="15524.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="34607.29" y="15527.8589">operator Orientation() const : Orientation</text><ellipse cx="34598.29" cy="15537.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="34607.29" y="15540.6636">operator IP_Address() const : IP_Address</text><ellipse cx="34598.29" cy="15550.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="34607.29" y="15553.4683">Variant(bool p_bool) : void</text><ellipse cx="34598.29" cy="15563.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="34607.29" y="15566.2729">Variant(int p_int) : void</text><ellipse cx="34598.29" cy="15575.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="34607.29" y="15579.0776">Variant(unsigned int p_int) : void</text><ellipse cx="34598.29" cy="15588.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="34607.29" y="15591.8823">Variant(short p_short) : void</text><ellipse cx="34598.29" cy="15601.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="34607.29" y="15604.687">Variant(unsigned short p_short) : void</text><ellipse cx="34598.29" cy="15614.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="34607.29" y="15617.4917">Variant(signed char p_char) : void</text><ellipse cx="34598.29" cy="15627.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="34607.29" y="15630.2964">Variant(unsigned char p_char) : void</text><ellipse cx="34598.29" cy="15639.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="34607.29" y="15643.1011">Variant(int64_t p_int) : void</text><ellipse cx="34598.29" cy="15652.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="34607.29" y="15655.9058">Variant(uint64_t p_int) : void</text><ellipse cx="34598.29" cy="15665.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="34607.29" y="15668.7104">Variant(float p_float) : void</text><ellipse cx="34598.29" cy="15678.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="34607.29" y="15681.5151">Variant(double p_double) : void</text><ellipse cx="34598.29" cy="15691.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="34607.29" y="15694.3198">Variant(const String &amp; p_string) : void</text><ellipse cx="34598.29" cy="15703.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="34607.29" y="15707.1245">Variant(const StringName &amp; p_string) : void</text><ellipse cx="34598.29" cy="15716.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="34607.29" y="15719.9292">Variant(const char *const p_cstring) : void</text><ellipse cx="34598.29" cy="15729.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="34607.29" y="15732.7339">Variant(const CharType * p_wstring) : void</text><ellipse cx="34598.29" cy="15742.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="34607.29" y="15745.5386">Variant(const Vector2 &amp; p_vector2) : void</text><ellipse cx="34598.29" cy="15755.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="34607.29" y="15758.3433">Variant(const Rect2 &amp; p_rect2) : void</text><ellipse cx="34598.29" cy="15767.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="34607.29" y="15771.1479">Variant(const Vector3 &amp; p_vector3) : void</text><ellipse cx="34598.29" cy="15780.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="34607.29" y="15783.9526">Variant(const Plane &amp; p_plane) : void</text><ellipse cx="34598.29" cy="15793.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="34607.29" y="15796.7573">Variant(const ::AABB &amp; p_aabb) : void</text><ellipse cx="34598.29" cy="15806.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="34607.29" y="15809.562">Variant(const Quat &amp; p_quat) : void</text><ellipse cx="34598.29" cy="15819.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="34607.29" y="15822.3667">Variant(const Basis &amp; p_matrix) : void</text><ellipse cx="34598.29" cy="15831.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="34607.29" y="15835.1714">Variant(const Transform2D &amp; p_transform) : void</text><ellipse cx="34598.29" cy="15844.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="34607.29" y="15847.9761">Variant(const Transform &amp; p_transform) : void</text><ellipse cx="34598.29" cy="15857.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="34607.29" y="15860.7808">Variant(const Color &amp; p_color) : void</text><ellipse cx="34598.29" cy="15870.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="34607.29" y="15873.5854">Variant(const NodePath &amp; p_node_path) : void</text><ellipse cx="34598.29" cy="15883.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="34607.29" y="15886.3901">Variant(const RefPtr &amp; p_resource) : void</text><ellipse cx="34598.29" cy="15895.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="34607.29" y="15899.1948">Variant(const RID &amp; p_rid) : void</text><ellipse cx="34598.29" cy="15908.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="34607.29" y="15911.9995">Variant(const Object * p_object) : void</text><ellipse cx="34598.29" cy="15921.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="34607.29" y="15924.8042">Variant(const Dictionary &amp; p_dictionary) : void</text><ellipse cx="34598.29" cy="15934.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="34607.29" y="15937.6089">Variant(const Array &amp; p_array) : void</text><ellipse cx="34598.29" cy="15947.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="34607.29" y="15950.4136">Variant(const PoolVector&lt;Plane&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="15960.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="34607.29" y="15963.2183">Variant(const PoolVector&lt;uint8_t&gt; &amp; p_raw_array) : void</text><ellipse cx="34598.29" cy="15972.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="34607.29" y="15976.0229">Variant(const PoolVector&lt;int&gt; &amp; p_int_array) : void</text><ellipse cx="34598.29" cy="15985.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="34607.29" y="15988.8276">Variant(const PoolVector&lt;real_t&gt; &amp; p_real_array) : void</text><ellipse cx="34598.29" cy="15998.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="34607.29" y="16001.6323">Variant(const PoolVector&lt;String&gt; &amp; p_string_array) : void</text><ellipse cx="34598.29" cy="16011.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="34607.29" y="16014.437">Variant(const PoolVector&lt;Vector3&gt; &amp; p_vector3_array) : void</text><ellipse cx="34598.29" cy="16024.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="34607.29" y="16027.2417">Variant(const PoolVector&lt;Color&gt; &amp; p_color_array) : void</text><ellipse cx="34598.29" cy="16036.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="34607.29" y="16040.0464">Variant(const PoolVector&lt;Face3&gt; &amp; p_face_array) : void</text><ellipse cx="34598.29" cy="16049.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="34607.29" y="16052.8511">Variant(const Vector&lt;Variant&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16062.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="34607.29" y="16065.6558">Variant(const Vector&lt;uint8_t&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16075.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="34607.29" y="16078.4604">Variant(const Vector&lt;int&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16088.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="34607.29" y="16091.2651">Variant(const Vector&lt;real_t&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16100.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="34607.29" y="16104.0698">Variant(const Vector&lt;String&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16113.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="34607.29" y="16116.8745">Variant(const Vector&lt;StringName&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16126.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="34607.29" y="16129.6792">Variant(const Vector&lt;Vector3&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16139.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="34607.29" y="16142.4839">Variant(const Vector&lt;Color&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16152.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="34607.29" y="16155.2886">Variant(const Vector&lt;Plane&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16164.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="34607.29" y="16168.0933">Variant(const Vector&lt;RID&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16177.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="34607.29" y="16180.8979">Variant(const Vector&lt;Vector2&gt; &amp; p_array) : void</text><ellipse cx="34598.29" cy="16190.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="34607.29" y="16193.7026">Variant(const PoolVector&lt;Vector2&gt; &amp; p_vector2_array) : void</text><ellipse cx="34598.29" cy="16203.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="34607.29" y="16206.5073">Variant(const IP_Address &amp; p_address) : void</text><ellipse cx="34598.29" cy="16216.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="295" x="34607.29" y="16219.312">get_operator_name(Variant::Operator p_op) : String</text><ellipse cx="34598.29" cy="16228.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="692" x="34607.29" y="16232.1167">evaluate(const Variant::Operator &amp; p_op, const Variant &amp; p_a, const Variant &amp; p_b, Variant &amp; r_ret, bool &amp; r_valid) : void</text><ellipse cx="34598.29" cy="16241.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="529" x="34607.29" y="16244.9214">evaluate(const Variant::Operator &amp; p_op, const Variant &amp; p_a, const Variant &amp; p_b) : Variant</text><ellipse cx="34598.29" cy="16254.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="34607.29" y="16257.7261">zero() : void</text><ellipse cx="34598.29" cy="16267.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="34607.29" y="16270.5308">duplicate(bool deep = false) const : Variant</text><ellipse cx="34598.29" cy="16280.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="420" x="34607.29" y="16283.3354">blend(const Variant &amp; a, const Variant &amp; b, float c, Variant &amp; r_dst) : void</text><ellipse cx="34598.29" cy="16292.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="34607.29" y="16296.1401">interpolate(const Variant &amp; a, const Variant &amp; b, float c, Variant &amp; r_dst) : void</text><ellipse cx="34598.29" cy="16305.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="744" x="34607.29" y="16308.9448">call_ptr(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant * r_ret, Variant::CallError &amp; r_error) : void</text><ellipse cx="34598.29" cy="16318.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="34607.29" y="16321.7495">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="34598.29" cy="16331.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1280" x="34607.29" y="16334.5542">call(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="34598.29" cy="16344.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="853" x="34607.29" y="16347.3589">get_call_error_text(Object * p_base, const StringName &amp; p_method, const Variant ** p_argptrs, int p_argcount, const Variant::CallError &amp; ce) : String</text><ellipse cx="34598.29" cy="16356.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="740" x="34607.29" y="16360.1636">construct(const Variant::Type , const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error, bool p_strict = true) : Variant</text><ellipse cx="34598.29" cy="16369.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="34607.29" y="16372.9683">get_method_list(List&lt;MethodInfo&gt; * p_list) const : void</text><ellipse cx="34598.29" cy="16382.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="34607.29" y="16385.7729">has_method(const StringName &amp; p_method) const : bool</text><ellipse cx="34598.29" cy="16395.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="614" x="34607.29" y="16398.5776">get_method_argument_types(Variant::Type p_type, const StringName &amp; p_method) : Vector&lt;Variant::Type&gt;</text><ellipse cx="34598.29" cy="16408.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="594" x="34607.29" y="16411.3823">get_method_default_arguments(Variant::Type p_type, const StringName &amp; p_method) : Vector&lt;Variant&gt;</text><ellipse cx="34598.29" cy="16420.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="701" x="34607.29" y="16424.187">get_method_return_type(Variant::Type p_type, const StringName &amp; p_method, bool * r_has_return = __null) : Variant::Type</text><ellipse cx="34598.29" cy="16433.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="614" x="34607.29" y="16436.9917">get_method_argument_names(Variant::Type p_type, const StringName &amp; p_method) : Vector&lt;StringName&gt;</text><ellipse cx="34598.29" cy="16446.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="440" x="34607.29" y="16449.7964">is_method_const(Variant::Type p_type, const StringName &amp; p_method) : bool</text><ellipse cx="34598.29" cy="16459.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="545" x="34607.29" y="16462.6011">set_named(const StringName &amp; p_index, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="34598.29" cy="16472.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="34607.29" y="16475.4058">get_named(const StringName &amp; p_index, bool * r_valid = __null) const : Variant</text><ellipse cx="34598.29" cy="16485" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="34607.29" y="16488.2104">set(const Variant &amp; p_index, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="34598.29" cy="16497.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="34607.29" y="16501.0151">get(const Variant &amp; p_index, bool * r_valid = __null) const : Variant</text><ellipse cx="34598.29" cy="16510.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="34607.29" y="16513.8198">in(const Variant &amp; p_index, bool * r_valid = __null) const : bool</text><ellipse cx="34598.29" cy="16523.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="34607.29" y="16526.6245">iter_init(Variant &amp; r_iter, bool &amp; r_valid) const : bool</text><ellipse cx="34598.29" cy="16536.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="34607.29" y="16539.4292">iter_next(Variant &amp; r_iter, bool &amp; r_valid) const : bool</text><ellipse cx="34598.29" cy="16549.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="34607.29" y="16552.2339">iter_get(const Variant &amp; r_iter, bool &amp; r_valid) const : Variant</text><ellipse cx="34598.29" cy="16561.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="34607.29" y="16565.0386">get_property_list(List&lt;PropertyInfo&gt; * p_list) const : void</text><ellipse cx="34598.29" cy="16574.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="34607.29" y="16577.8433">operator==(const Variant &amp; p_variant) const : bool</text><ellipse cx="34598.29" cy="16587.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="34607.29" y="16590.6479">operator!=(const Variant &amp; p_variant) const : bool</text><ellipse cx="34598.29" cy="16600.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="34607.29" y="16603.4526">operator&lt;(const Variant &amp; p_variant) const : bool</text><ellipse cx="34598.29" cy="16613.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="34607.29" y="16616.2573">hash() const : uint32_t</text><ellipse cx="34598.29" cy="16625.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="34607.29" y="16629.062">hash_compare(const Variant &amp; p_variant) const : bool</text><ellipse cx="34598.29" cy="16638.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="34607.29" y="16641.8667">booleanize() const : bool</text><ellipse cx="34598.29" cy="16651.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="34607.29" y="16654.6714">stringify(List&lt;const void *&gt; &amp; stack) const : String</text><ellipse cx="34598.29" cy="16664.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="34607.29" y="16667.4761">static_assign(const Variant &amp; p_variant) : void</text><ellipse cx="34598.29" cy="16677.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="423" x="34607.29" y="16680.2808">get_constructor_list(Variant::Type p_type, List&lt;MethodInfo&gt; * p_list) : void</text><ellipse cx="34598.29" cy="16689.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="487" x="34607.29" y="16693.0854">get_constants_for_type(Variant::Type p_type, List&lt;StringName&gt; * p_constants) : void</text><ellipse cx="34598.29" cy="16702.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="407" x="34607.29" y="16705.8901">has_constant(Variant::Type p_type, const StringName &amp; p_value) : bool</text><ellipse cx="34598.29" cy="16715.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="588" x="34607.29" y="16718.6948">get_constant_value(Variant::Type p_type, const StringName &amp; p_value, bool * r_valid = __null) : Variant</text><ellipse cx="34598.29" cy="16728.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="34607.29" y="16731.4995">get_construct_string() const : String</text><ellipse cx="34598.29" cy="16741.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="877" x="34607.29" y="16744.3042">construct_from_string(const String &amp; p_string, Variant &amp; r_value, Variant::ObjectConstruct p_obj_construct = __null, void * p_construct_ud = __null) : void</text><ellipse cx="34598.29" cy="16753.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="34607.29" y="16757.1089">operator=(const Variant &amp; p_variant) : void</text><ellipse cx="34598.29" cy="16766.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="34607.29" y="16769.9136">Variant(const Variant &amp; p_variant) : void</text><ellipse cx="34598.29" cy="16779.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="34607.29" y="16782.7183">Variant() : void</text><ellipse cx="34598.29" cy="16792.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="34607.29" y="16795.5229">~Variant() : void</text></a><!--MD5=[48c1d650122612d88514dc7f32d5a165]
class C_0002153970433534458832--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L144" target="_top" title="PropertyInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L144" xlink:show="new" xlink:title="PropertyInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="227.2656" id="C_0002153970433534458832" style="stroke: #A80036; stroke-width: 1.5;" width="1417" x="32974.79" y="13049.9531"/><ellipse cx="33641.04" cy="13065.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33644.0088,13071.5938 Q33643.4306,13071.8906 33642.79,13072.0313 Q33642.1494,13072.1875 33641.4463,13072.1875 Q33638.9463,13072.1875 33637.6181,13070.5469 Q33636.3056,13068.8906 33636.3056,13065.7656 Q33636.3056,13062.6406 33637.6181,13060.9844 Q33638.9463,13059.3281 33641.4463,13059.3281 Q33642.1494,13059.3281 33642.79,13059.4844 Q33643.4463,13059.6406 33644.0088,13059.9375 L33644.0088,13062.6563 Q33643.3838,13062.0781 33642.79,13061.8125 Q33642.1963,13061.5313 33641.5713,13061.5313 Q33640.2275,13061.5313 33639.54,13062.6094 Q33638.8525,13063.6719 33638.8525,13065.7656 Q33638.8525,13067.8594 33639.54,13068.9375 Q33640.2275,13070 33641.5713,13070 Q33642.1963,13070 33642.79,13069.7344 Q33643.3838,13069.4531 33644.0088,13068.875 L33644.0088,13071.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="33661.54" y="13070.1074">PropertyInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32975.79" x2="34390.79" y1="13081.9531" y2="13081.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" target="_top" title="type" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" xlink:show="new" xlink:title="type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32980.79" y="13087.9531"/><ellipse cx="32985.79" cy="13092.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" target="_top" title="type" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" xlink:show="new" xlink:title="type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="32994.79" y="13096.1636">type : Variant::Type</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32980.79" y="13100.7578"/><ellipse cx="32985.79" cy="13105.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32994.79" y="13108.9683">name : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" target="_top" title="class_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" xlink:show="new" xlink:title="class_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32980.79" y="13113.5625"/><ellipse cx="32985.79" cy="13118.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" target="_top" title="class_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" xlink:show="new" xlink:title="class_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="32994.79" y="13121.7729">class_name : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" target="_top" title="hint" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" xlink:show="new" xlink:title="hint" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32980.79" y="13126.3672"/><ellipse cx="32985.79" cy="13131.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" target="_top" title="hint" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" xlink:show="new" xlink:title="hint" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="32994.79" y="13134.5776">hint : PropertyHint</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" target="_top" title="hint_string" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" xlink:show="new" xlink:title="hint_string" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32980.79" y="13139.1719"/><ellipse cx="32985.79" cy="13144.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" target="_top" title="hint_string" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" xlink:show="new" xlink:title="hint_string" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="32994.79" y="13147.3823">hint_string : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" target="_top" title="usage" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" xlink:show="new" xlink:title="usage" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32980.79" y="13151.9766"/><ellipse cx="32985.79" cy="13156.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" target="_top" title="usage" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" xlink:show="new" xlink:title="usage" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="32994.79" y="13160.187">usage : uint32_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32975.79" x2="34390.79" y1="13166.7813" y2="13166.7813"/><ellipse cx="32985.79" cy="13177.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="32994.79" y="13180.9917">added_usage(int p_fl) const : PropertyInfo</text><ellipse cx="32985.79" cy="13190.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="32994.79" y="13193.7964">operator Dictionary() const : Dictionary</text><ellipse cx="32985.79" cy="13203.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="32994.79" y="13206.6011">from_dict(const Dictionary &amp; p_dict) : PropertyInfo</text><ellipse cx="32985.79" cy="13216.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="32994.79" y="13219.4058">PropertyInfo() : void</text><ellipse cx="32985.79" cy="13229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1391" x="32994.79" y="13232.2104">PropertyInfo(Variant::Type p_type, const String p_name, PropertyHint p_hint = PROPERTY_HINT_NONE, const String &amp; p_hint_string = "", uint32_t p_usage = PROPERTY_USAGE_DEFAULT, const StringName &amp; p_class_name = StringName()) : void</text><ellipse cx="32985.79" cy="13241.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="32994.79" y="13245.0151">PropertyInfo(const StringName &amp; p_class_name) : void</text><ellipse cx="32985.79" cy="13254.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="32994.79" y="13257.8198">operator==(const PropertyInfo &amp; p_info) const : bool</text><ellipse cx="32985.79" cy="13267.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="32994.79" y="13270.6245">operator&lt;(const PropertyInfo &amp; p_info) const : bool</text><!--MD5=[ca6c9fa1e022a24af365dbb8523429c2]
class C_0000774532299576474923--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L206" target="_top" title="MethodInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L206" xlink:show="new" xlink:title="MethodInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="432.1406" id="C_0000774532299576474923" style="stroke: #A80036; stroke-width: 1.5;" width="1357" x="32263.79" y="8616.9531"/><ellipse cx="32903.04" cy="8632.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32906.0088,8638.5938 Q32905.4306,8638.8906 32904.79,8639.0313 Q32904.1494,8639.1875 32903.4463,8639.1875 Q32900.9463,8639.1875 32899.6181,8637.5469 Q32898.3056,8635.8906 32898.3056,8632.7656 Q32898.3056,8629.6406 32899.6181,8627.9844 Q32900.9463,8626.3281 32903.4463,8626.3281 Q32904.1494,8626.3281 32904.79,8626.4844 Q32905.4463,8626.6406 32906.0088,8626.9375 L32906.0088,8629.6563 Q32905.3838,8629.0781 32904.79,8628.8125 Q32904.1963,8628.5313 32903.5713,8628.5313 Q32902.2275,8628.5313 32901.54,8629.6094 Q32900.8525,8630.6719 32900.8525,8632.7656 Q32900.8525,8634.8594 32901.54,8635.9375 Q32902.2275,8637 32903.5713,8637 Q32904.1963,8637 32904.79,8636.7344 Q32905.3838,8636.4531 32906.0088,8635.875 L32906.0088,8638.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="32923.54" y="8637.1074">MethodInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32264.79" x2="33619.79" y1="8648.9531" y2="8648.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32269.79" y="8654.9531"/><ellipse cx="32274.79" cy="8659.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32283.79" y="8663.1636">name : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" target="_top" title="return_val" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" xlink:show="new" xlink:title="return_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32269.79" y="8667.7578"/><ellipse cx="32274.79" cy="8672.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" target="_top" title="return_val" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" xlink:show="new" xlink:title="return_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="32283.79" y="8675.9683">return_val : PropertyInfo</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" xlink:show="new" xlink:title="flags" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32269.79" y="8680.5625"/><ellipse cx="32274.79" cy="8685.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" xlink:show="new" xlink:title="flags" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="32283.79" y="8688.7729">flags : uint32_t</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" target="_top" title="id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" xlink:show="new" xlink:title="id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32269.79" y="8693.3672"/><ellipse cx="32274.79" cy="8698.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" target="_top" title="id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" xlink:show="new" xlink:title="id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="32283.79" y="8701.5776">id : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" target="_top" title="arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" xlink:show="new" xlink:title="arguments" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32269.79" y="8706.1719"/><ellipse cx="32274.79" cy="8711.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" target="_top" title="arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" xlink:show="new" xlink:title="arguments" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="32283.79" y="8714.3823">arguments : List&lt;PropertyInfo&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" target="_top" title="default_arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" xlink:show="new" xlink:title="default_arguments" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32269.79" y="8718.9766"/><ellipse cx="32274.79" cy="8723.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" target="_top" title="default_arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" xlink:show="new" xlink:title="default_arguments" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="32283.79" y="8727.187">default_arguments : Vector&lt;Variant&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32264.79" x2="33619.79" y1="8733.7813" y2="8733.7813"/><ellipse cx="32274.79" cy="8744.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="32283.79" y="8747.9917">operator==(const MethodInfo &amp; p_method) const : bool</text><ellipse cx="32274.79" cy="8757.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="32283.79" y="8760.7964">operator&lt;(const MethodInfo &amp; p_method) const : bool</text><ellipse cx="32274.79" cy="8770.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="32283.79" y="8773.6011">operator Dictionary() const : Dictionary</text><ellipse cx="32274.79" cy="8783.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="32283.79" y="8786.4058">from_dict(const Dictionary &amp; p_dict) : MethodInfo</text><ellipse cx="32274.79" cy="8796" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="32283.79" y="8799.2104">MethodInfo() : void</text><ellipse cx="32274.79" cy="8808.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="32283.79" y="8812.0151">MethodInfo(const String &amp; p_name) : void</text><ellipse cx="32274.79" cy="8821.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="32283.79" y="8824.8198">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1) : void</text><ellipse cx="32274.79" cy="8834.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="611" x="32283.79" y="8837.6245">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2) : void</text><ellipse cx="32274.79" cy="8847.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="798" x="32283.79" y="8850.4292">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3) : void</text><ellipse cx="32274.79" cy="8860.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="985" x="32283.79" y="8863.2339">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4) : void</text><ellipse cx="32274.79" cy="8872.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1172" x="32283.79" y="8876.0386">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4, const PropertyInfo &amp; p_param5) : void</text><ellipse cx="32274.79" cy="8885.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="32283.79" y="8888.8433">MethodInfo(Variant::Type ret) : void</text><ellipse cx="32274.79" cy="8898.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="32283.79" y="8901.6479">MethodInfo(Variant::Type ret, const String &amp; p_name) : void</text><ellipse cx="32274.79" cy="8911.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="527" x="32283.79" y="8914.4526">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1) : void</text><ellipse cx="32274.79" cy="8924.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="714" x="32283.79" y="8927.2573">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2) : void</text><ellipse cx="32274.79" cy="8936.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="901" x="32283.79" y="8940.062">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3) : void</text><ellipse cx="32274.79" cy="8949.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1088" x="32283.79" y="8952.8667">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4) : void</text><ellipse cx="32274.79" cy="8962.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1275" x="32283.79" y="8965.6714">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4, const PropertyInfo &amp; p_param5) : void</text><ellipse cx="32274.79" cy="8975.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="396" x="32283.79" y="8978.4761">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name) : void</text><ellipse cx="32274.79" cy="8988.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="32283.79" y="8991.2808">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1) : void</text><ellipse cx="32274.79" cy="9000.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="770" x="32283.79" y="9004.0854">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2) : void</text><ellipse cx="32274.79" cy="9013.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="957" x="32283.79" y="9016.8901">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3) : void</text><ellipse cx="32274.79" cy="9026.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1144" x="32283.79" y="9029.6948">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4) : void</text><ellipse cx="32274.79" cy="9039.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1331" x="32283.79" y="9042.4995">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4, const PropertyInfo &amp; p_param5) : void</text><!--MD5=[e19ea3ddc80c91fbe5870b7030365a5f]
class C_0002063845175027013341--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0002063845175027013341" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="37109.29" y="15710.4531"/><ellipse cx="37124.29" cy="15726.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M37127.2588,15732.0938 Q37126.6806,15732.3906 37126.04,15732.5313 Q37125.3994,15732.6875 37124.6963,15732.6875 Q37122.1963,15732.6875 37120.8681,15731.0469 Q37119.5556,15729.3906 37119.5556,15726.2656 Q37119.5556,15723.1406 37120.8681,15721.4844 Q37122.1963,15719.8281 37124.6963,15719.8281 Q37125.3994,15719.8281 37126.04,15719.9844 Q37126.6963,15720.1406 37127.2588,15720.4375 L37127.2588,15723.1563 Q37126.6338,15722.5781 37126.04,15722.3125 Q37125.4463,15722.0313 37124.8213,15722.0313 Q37123.4775,15722.0313 37122.79,15723.1094 Q37122.1025,15724.1719 37122.1025,15726.2656 Q37122.1025,15728.3594 37122.79,15729.4375 Q37123.4775,15730.5 37124.8213,15730.5 Q37125.4463,15730.5 37126.04,15730.2344 Q37126.6338,15729.9531 37127.2588,15729.375 L37127.2588,15732.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="37138.29" y="15730.6074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="39" x="37167.29" y="15707.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="37168.29" y="15719.5918">String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="37110.29" x2="37202.29" y1="15742.4531" y2="15742.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="37110.29" x2="37202.29" y1="15750.4531" y2="15750.4531"/><!--MD5=[fcb6dc9edc5e54eb9e8bfa0c33478799]
class C_0000751300156436098886--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0000751300156436098886" style="stroke: #A80036; stroke-width: 1.5;" width="175" x="25074.79" y="2327.9531"/><ellipse cx="25089.79" cy="2343.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25092.7588,2349.5938 Q25092.1806,2349.8906 25091.54,2350.0313 Q25090.8994,2350.1875 25090.1963,2350.1875 Q25087.6963,2350.1875 25086.3681,2348.5469 Q25085.0556,2346.8906 25085.0556,2343.7656 Q25085.0556,2340.6406 25086.3681,2338.9844 Q25087.6963,2337.3281 25090.1963,2337.3281 Q25090.8994,2337.3281 25091.54,2337.4844 Q25092.1963,2337.6406 25092.7588,2337.9375 L25092.7588,2340.6563 Q25092.1338,2340.0781 25091.54,2339.8125 Q25090.9463,2339.5313 25090.3213,2339.5313 Q25088.9775,2339.5313 25088.29,2340.6094 Q25087.6025,2341.6719 25087.6025,2343.7656 Q25087.6025,2345.8594 25088.29,2346.9375 Q25088.9775,2348 25090.3213,2348 Q25090.9463,2348 25091.54,2347.7344 Q25092.1338,2347.4531 25092.7588,2346.875 L25092.7588,2349.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="25103.79" y="2348.1074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="120" x="25132.79" y="2324.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="118" x="25133.79" y="2337.0918">Object::Connection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25075.79" x2="25248.79" y1="2359.9531" y2="2359.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25075.79" x2="25248.79" y1="2367.9531" y2="2367.9531"/><!--MD5=[7554e1c91c178cfd46cd5992944992da]
class C_0001578539238208480863--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0001578539238208480863" style="stroke: #A80036; stroke-width: 1.5;" width="256" x="25285.29" y="2327.9531"/><ellipse cx="25300.29" cy="2343.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25303.2588,2349.5938 Q25302.6806,2349.8906 25302.04,2350.0313 Q25301.3994,2350.1875 25300.6963,2350.1875 Q25298.1963,2350.1875 25296.8681,2348.5469 Q25295.5556,2346.8906 25295.5556,2343.7656 Q25295.5556,2340.6406 25296.8681,2338.9844 Q25298.1963,2337.3281 25300.6963,2337.3281 Q25301.3994,2337.3281 25302.04,2337.4844 Q25302.6963,2337.6406 25303.2588,2337.9375 L25303.2588,2340.6563 Q25302.6338,2340.0781 25302.04,2339.8125 Q25301.4463,2339.5313 25300.8213,2339.5313 Q25299.4775,2339.5313 25298.79,2340.6094 Q25298.1025,2341.6719 25298.1025,2343.7656 Q25298.1025,2345.8594 25298.79,2346.9375 Q25299.4775,2348 25300.8213,2348 Q25301.4463,2348 25302.04,2347.7344 Q25302.6338,2347.4531 25303.2588,2346.875 L25303.2588,2349.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="25314.29" y="2348.1074">HashMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="164" x="25380.29" y="2324.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="162" x="25381.29" y="2337.0918">StringName,Object::Signal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25286.29" x2="25540.29" y1="2359.9531" y2="2359.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25286.29" x2="25540.29" y1="2367.9531" y2="2367.9531"/><!--MD5=[75bc4a0739afdfacd2c3e3c13cd7e181]
class C_0000051860595756965531--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0000051860595756965531" style="stroke: #A80036; stroke-width: 1.5;" width="106" x="25576.29" y="2327.9531"/><ellipse cx="25591.29" cy="2343.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25594.2588,2349.5938 Q25593.6806,2349.8906 25593.04,2350.0313 Q25592.3994,2350.1875 25591.6963,2350.1875 Q25589.1963,2350.1875 25587.8681,2348.5469 Q25586.5556,2346.8906 25586.5556,2343.7656 Q25586.5556,2340.6406 25587.8681,2338.9844 Q25589.1963,2337.3281 25591.6963,2337.3281 Q25592.3994,2337.3281 25593.04,2337.4844 Q25593.6963,2337.6406 25594.2588,2337.9375 L25594.2588,2340.6563 Q25593.6338,2340.0781 25593.04,2339.8125 Q25592.4463,2339.5313 25591.8213,2339.5313 Q25590.4775,2339.5313 25589.79,2340.6094 Q25589.1025,2341.6719 25589.1025,2343.7656 Q25589.1025,2345.8594 25589.79,2346.9375 Q25590.4775,2348 25591.8213,2348 Q25592.4463,2348 25593.04,2347.7344 Q25593.6338,2347.4531 25594.2588,2346.875 L25594.2588,2349.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="25605.29" y="2348.1074">Set</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="51" x="25634.29" y="2324.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="49" x="25635.29" y="2337.0918">Object *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25577.29" x2="25681.29" y1="2359.9531" y2="2359.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25577.29" x2="25681.29" y1="2367.9531" y2="2367.9531"/><!--MD5=[6bf78f0ec114838316d8adbe773b0c0e]
class C_0001682405743486361214--><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="48" id="C_0001682405743486361214" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="32608.29" y="13139.4531"/><ellipse cx="32623.29" cy="13155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32626.2588,13161.0938 Q32625.6806,13161.3906 32625.04,13161.5313 Q32624.3994,13161.6875 32623.6963,13161.6875 Q32621.1963,13161.6875 32619.8681,13160.0469 Q32618.5556,13158.3906 32618.5556,13155.2656 Q32618.5556,13152.1406 32619.8681,13150.4844 Q32621.1963,13148.8281 32623.6963,13148.8281 Q32624.3994,13148.8281 32625.04,13148.9844 Q32625.6963,13149.1406 32626.2588,13149.4375 L32626.2588,13152.1563 Q32625.6338,13151.5781 32625.04,13151.3125 Q32624.4463,13151.0313 32623.8213,13151.0313 Q32622.4775,13151.0313 32621.79,13152.1094 Q32621.1025,13153.1719 32621.1025,13155.2656 Q32621.1025,13157.3594 32621.79,13158.4375 Q32622.4775,13159.5 32623.8213,13159.5 Q32624.4463,13159.5 32625.04,13159.2344 Q32625.6338,13158.9531 32626.2588,13158.375 L32626.2588,13161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="32637.29" y="13159.6074">Set</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="39" x="32666.29" y="13136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="32667.29" y="13148.5918">String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32609.29" x2="32701.29" y1="13171.4531" y2="13171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="32609.29" x2="32701.29" y1="13179.4531" y2="13179.4531"/><!--MD5=[f0802071db4c55ed48c8eca4075aaca6]
class C_0001531814603945772616--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408" target="_top" title="Object" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408" xlink:show="new" xlink:title="Object" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="1162.0078" id="C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.5;" width="1344" x="23835.29" y="915.9531"/><ellipse cx="24483.04" cy="931.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24486.0088,937.5938 Q24485.4306,937.8906 24484.79,938.0313 Q24484.1494,938.1875 24483.4463,938.1875 Q24480.9463,938.1875 24479.6181,936.5469 Q24478.3056,934.8906 24478.3056,931.7656 Q24478.3056,928.6406 24479.6181,926.9844 Q24480.9463,925.3281 24483.4463,925.3281 Q24484.1494,925.3281 24484.79,925.4844 Q24485.4463,925.6406 24486.0088,925.9375 L24486.0088,928.6563 Q24485.3838,928.0781 24484.79,927.8125 Q24484.1963,927.5313 24483.5713,927.5313 Q24482.2275,927.5313 24481.54,928.6094 Q24480.8525,929.6719 24480.8525,931.7656 Q24480.8525,933.8594 24481.54,934.9375 Q24482.2275,936 24483.5713,936 Q24484.1963,936 24484.79,935.7344 Q24485.3838,935.4531 24486.0088,934.875 L24486.0088,937.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="24503.54" y="936.1074">Object</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23836.29" x2="25178.29" y1="947.9531" y2="947.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" target="_top" title="_is_queued_for_deletion" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" xlink:show="new" xlink:title="_is_queued_for_deletion" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="23841.29" y="953.9531"/><ellipse cx="23846.29" cy="958.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" target="_top" title="_is_queued_for_deletion" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" xlink:show="new" xlink:title="_is_queued_for_deletion" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="23855.29" y="962.1636">_is_queued_for_deletion : bool</text></a><ellipse cx="23846.29" cy="971.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="23855.29" y="974.9683">NOTIFICATION_POSTINITIALIZE : enum</text><ellipse cx="23846.29" cy="984.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="23855.29" y="987.7729">NOTIFICATION_PREDELETE : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23836.29" x2="25178.29" y1="994.3672" y2="994.3672"/><ellipse cx="23846.29" cy="1005.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="23855.29" y="1008.5776">initialize_class() : void</text><ellipse cx="23846.29" cy="1018.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="23855.29" y="1021.3823">register_custom_data_to_otdb() : void</text><ellipse cx="23846.29" cy="1030.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="23855.29" y="1034.187">_change_notify(const char * p_property = "") : void</text><ellipse cx="23846.29" cy="1043.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="23855.29" y="1046.9917">get_class_ptr_static() : void *</text><ellipse cx="23846.29" cy="1056.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="23855.29" y="1059.7964">_use_rc() : ObjectRC *</text><ellipse cx="23846.29" cy="1069.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="23855.29" y="1072.6011">_is_gpl_reversed() const : bool</text><ellipse cx="23846.29" cy="1082.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="23855.29" y="1085.4058">get_instance_id() const : ObjectID</text><ellipse cx="23846.29" cy="1095" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="23855.29" y="1098.2104">add_change_receptor(Object * p_receptor) : void</text><ellipse cx="23846.29" cy="1107.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="23855.29" y="1111.0151">remove_change_receptor(Object * p_receptor) : void</text><ellipse cx="23846.29" cy="1120.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="23855.29" y="1123.8198">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="23846.29" cy="1133.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="23855.29" y="1136.6245">get_class_static() : String</text><ellipse cx="23846.29" cy="1146.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="23855.29" y="1149.4292">get_parent_class_static() : String</text><ellipse cx="23846.29" cy="1159.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="23855.29" y="1162.2339">get_category_static() : String</text><ellipse cx="23846.29" cy="1171.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="23855.29" y="1175.0386">get_class() const : String</text><ellipse cx="23846.29" cy="1184.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="23855.29" y="1187.8433">get_save_class() const : String</text><ellipse cx="23846.29" cy="1197.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="23855.29" y="1200.6479">is_class(const String &amp; p_class) const : bool</text><ellipse cx="23846.29" cy="1210.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23855.29" y="1213.4526">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="23846.29" cy="1223.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="23855.29" y="1226.2573">get_class_name() const : const StringName &amp;</text><ellipse cx="23846.29" cy="1235.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="23855.29" y="1239.062">set(const StringName &amp; p_name, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="23846.29" cy="1248.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="23855.29" y="1251.8667">get(const StringName &amp; p_name, bool * r_valid = __null) const : Variant</text><ellipse cx="23846.29" cy="1261.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="613" x="23855.29" y="1264.6714">set_indexed(const Vector&lt;StringName&gt; &amp; p_names, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="23846.29" cy="1274.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="23855.29" y="1277.4761">get_indexed(const Vector&lt;StringName&gt; &amp; p_names, bool * r_valid = __null) const : Variant</text><ellipse cx="23846.29" cy="1287.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="23855.29" y="1290.2808">get_property_list(List&lt;PropertyInfo&gt; * p_list, bool p_reversed = false) const : void</text><ellipse cx="23846.29" cy="1299.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="23855.29" y="1303.0854">has_method(const StringName &amp; p_method) const : bool</text><ellipse cx="23846.29" cy="1312.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="23855.29" y="1315.8901">get_method_list(List&lt;MethodInfo&gt; * p_list) const : void</text><ellipse cx="23846.29" cy="1325.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="23855.29" y="1328.6948">callv(const StringName &amp; p_method, const Array &amp; p_args) : Variant</text><ellipse cx="23846.29" cy="1338.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="23855.29" y="1341.4995">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="23846.29" cy="1351.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="23855.29" y="1354.3042">call_multilevel(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="23846.29" cy="1363.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="23855.29" y="1367.1089">call_multilevel_reversed(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="23846.29" cy="1376.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1269" x="23855.29" y="1379.9136">call(const StringName &amp; p_name, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="23846.29" cy="1389.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1312" x="23855.29" y="1392.7183">call_multilevel(const StringName &amp; p_name, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="23846.29" cy="1402.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="23855.29" y="1405.5229">notification(int p_notification, bool p_reversed = false) : void</text><ellipse cx="23846.29" cy="1415.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="23855.29" y="1418.3276">to_string() : String</text><ellipse cx="23846.29" cy="1427.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="23855.29" y="1431.1323">getvar(const Variant &amp; p_key, bool * r_valid = __null) const : Variant</text><ellipse cx="23846.29" cy="1440.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="23855.29" y="1443.937">setvar(const Variant &amp; p_key, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="23846.29" cy="1453.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="23855.29" y="1456.7417">set_script(const RefPtr &amp; p_script) : void</text><ellipse cx="23846.29" cy="1466.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="23855.29" y="1469.5464">get_script() const : RefPtr</text><ellipse cx="23846.29" cy="1479.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="23855.29" y="1482.3511">has_meta(const String &amp; p_name) const : bool</text><ellipse cx="23846.29" cy="1491.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="23855.29" y="1495.1558">set_meta(const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="23846.29" cy="1504.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="23855.29" y="1507.9604">remove_meta(const String &amp; p_name) : void</text><ellipse cx="23846.29" cy="1517.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="23855.29" y="1520.7651">get_meta(const String &amp; p_name) const : Variant</text><ellipse cx="23846.29" cy="1530.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="23855.29" y="1533.5698">get_meta_list(List&lt;String&gt; * p_list) const : void</text><ellipse cx="23846.29" cy="1543.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="23855.29" y="1546.3745">set_edited(bool p_edited) : void</text><ellipse cx="23846.29" cy="1555.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="23855.29" y="1559.1792">is_edited() const : bool</text><ellipse cx="23846.29" cy="1568.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="23855.29" y="1571.9839">get_edited_version() const : uint32_t</text><ellipse cx="23846.29" cy="1581.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="23855.29" y="1584.7886">set_script_instance(ScriptInstance * p_instance) : void</text><ellipse cx="23846.29" cy="1594.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="23855.29" y="1597.5933">get_script_instance() const : ScriptInstance *</text><ellipse cx="23846.29" cy="1607.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="23855.29" y="1610.3979">set_script_and_instance(const RefPtr &amp; p_script, ScriptInstance * p_instance) : void</text><ellipse cx="23846.29" cy="1619.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="23855.29" y="1623.2026">add_user_signal(const MethodInfo &amp; p_signal) : void</text><ellipse cx="23846.29" cy="1632.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1304" x="23855.29" y="1636.0073">emit_signal(const StringName &amp; p_name, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Error</text><ellipse cx="23846.29" cy="1645.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="23855.29" y="1648.812">emit_signal(const StringName &amp; p_name, const Variant ** p_args, int p_argcount) : Error</text><ellipse cx="23846.29" cy="1658.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="23855.29" y="1661.6167">has_signal(const StringName &amp; p_name) const : bool</text><ellipse cx="23846.29" cy="1671.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="23855.29" y="1674.4214">get_signal_list(List&lt;MethodInfo&gt; * p_signals) const : void</text><ellipse cx="23846.29" cy="1684.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="23855.29" y="1687.2261">get_signal_connection_list(const StringName &amp; p_signal, List&lt;Object::Connection&gt; * p_connections) const : void</text><ellipse cx="23846.29" cy="1696.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="23855.29" y="1700.0308">get_all_signal_connections(List&lt;Object::Connection&gt; * p_connections) const : void</text><ellipse cx="23846.29" cy="1709.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="23855.29" y="1712.8354">get_persistent_signal_connection_count() const : int</text><ellipse cx="23846.29" cy="1722.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="23855.29" y="1725.6401">get_signals_connected_to_this(List&lt;Object::Connection&gt; * p_connections) const : void</text><ellipse cx="23846.29" cy="1735.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1023" x="23855.29" y="1738.4448">connect(const StringName &amp; p_signal, Object * p_to_object, const StringName &amp; p_to_method, const Vector&lt;Variant&gt; &amp; p_binds = Vector&lt;Variant&gt;(), uint32_t p_flags = 0) : Error</text><ellipse cx="23846.29" cy="1748.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="23855.29" y="1751.2495">disconnect(const StringName &amp; p_signal, Object * p_to_object, const StringName &amp; p_to_method) : void</text><ellipse cx="23846.29" cy="1760.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="23855.29" y="1764.0542">is_connected(const StringName &amp; p_signal, Object * p_to_object, const StringName &amp; p_to_method) const : bool</text><ellipse cx="23846.29" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1318" x="23855.29" y="1776.8589">call_deferred(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="23846.29" cy="1786.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="23855.29" y="1789.6636">set_deferred(const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="23846.29" cy="1799.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23855.29" y="1802.4683">set_block_signals(bool p_block) : void</text><ellipse cx="23846.29" cy="1812.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="23855.29" y="1815.2729">is_blocking_signals() const : bool</text><ellipse cx="23846.29" cy="1824.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="23855.29" y="1828.0776">get_static_property_type(const StringName &amp; p_property, bool * r_valid = __null) const : Variant::Type</text><ellipse cx="23846.29" cy="1837.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="663" x="23855.29" y="1840.8823">get_static_property_type_indexed(const Vector&lt;StringName&gt; &amp; p_path, bool * r_valid = __null) const : Variant::Type</text><ellipse cx="23846.29" cy="1850.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="23855.29" y="1853.687">get_translatable_strings(List&lt;String&gt; * p_strings) const : void</text><ellipse cx="23846.29" cy="1863.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="23855.29" y="1866.4917">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="23846.29" cy="1876.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="23855.29" y="1879.2964">tr(const StringName &amp; p_message) const : StringName</text><ellipse cx="23846.29" cy="1888.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="23855.29" y="1892.1011">is_queued_for_deletion() const : bool</text><ellipse cx="23846.29" cy="1901.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="23855.29" y="1904.9058">set_message_translation(bool p_enable) : void</text><ellipse cx="23846.29" cy="1914.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="23855.29" y="1917.7104">can_translate_messages() const : bool</text><ellipse cx="23846.29" cy="1927.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="23855.29" y="1930.5151">editor_set_section_unfold(const String &amp; p_section, bool p_unfolded) : void</text><ellipse cx="23846.29" cy="1940.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="23855.29" y="1943.3198">editor_is_section_unfolded(const String &amp; p_section) : bool</text><ellipse cx="23846.29" cy="1952.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="23855.29" y="1956.1245">editor_get_section_folding() const : const Set&lt;String&gt; &amp;</text><ellipse cx="23846.29" cy="1965.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="23855.29" y="1968.9292">editor_clear_section_folding() : void</text><ellipse cx="23846.29" cy="1978.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="23855.29" y="1981.7339">get_script_instance_binding(int p_script_language_index) : void *</text><ellipse cx="23846.29" cy="1991.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="23855.29" y="1994.5386">has_script_instance_binding(int p_script_language_index) : bool</text><ellipse cx="23846.29" cy="2004.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="23855.29" y="2007.3433">set_script_instance_binding(int p_script_language_index, void * p_data) : void</text><ellipse cx="23846.29" cy="2016.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="23855.29" y="2020.1479">clear_internal_resource_paths() : void</text><ellipse cx="23846.29" cy="2029.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="23855.29" y="2032.9526">Object() : void</text><ellipse cx="23846.29" cy="2042.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="23855.29" y="2045.7573">~Object() : void</text><ellipse cx="23846.29" cy="2055.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="23855.29" y="2058.562">cast_to(Object * p_object) : T *</text><ellipse cx="23846.29" cy="2068.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="245" x="23855.29" y="2071.3667">cast_to(const Object * p_object) : const T *</text><!--MD5=[8eacd4da8b6a8f3c33abf484b38f77cb]
class C_0000219886141561409828--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410" target="_top" title="Object##ConnectFlags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410" xlink:show="new" xlink:title="Object##ConnectFlags" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="99.2188" id="C_0000219886141561409828" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="24228.29" y="701.4531"/><ellipse cx="24258.14" cy="717.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24262.2494,723.4531 L24254.5306,723.4531 L24254.5306,711.0625 L24262.2494,711.0625 L24262.2494,713.2188 L24256.9838,713.2188 L24256.9838,715.8906 L24261.7494,715.8906 L24261.7494,718.0469 L24256.9838,718.0469 L24256.9838,721.2969 L24262.2494,721.2969 L24262.2494,723.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="133" x="24275.44" y="721.6074">Object::ConnectFlags</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24229.29" x2="24425.29" y1="733.4531" y2="733.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="24234.29" y="747.6636">CONNECT_DEFERRED</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="24234.29" y="760.4683">CONNECT_PERSIST</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="24234.29" y="773.2729">CONNECT_ONESHOT</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="24234.29" y="786.0776">CONNECT_REFERENCE_COUNTED</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24229.29" x2="24425.29" y1="792.6719" y2="792.6719"/></a><!--MD5=[c100d2fcbd7e4572a54d94b4ec867b89]
class C_0001267214583673362755--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418" target="_top" title="Object##Connection" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418" xlink:show="new" xlink:title="Object##Connection" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001267214583673362755" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="12407.79" y="662.9531"/><ellipse cx="12525.54" cy="678.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12528.5088,684.5938 Q12527.9306,684.8906 12527.29,685.0313 Q12526.6494,685.1875 12525.9463,685.1875 Q12523.4463,685.1875 12522.1181,683.5469 Q12520.8056,681.8906 12520.8056,678.7656 Q12520.8056,675.6406 12522.1181,673.9844 Q12523.4463,672.3281 12525.9463,672.3281 Q12526.6494,672.3281 12527.29,672.4844 Q12527.9463,672.6406 12528.5088,672.9375 L12528.5088,675.6563 Q12527.8838,675.0781 12527.29,674.8125 Q12526.6963,674.5313 12526.0713,674.5313 Q12524.7275,674.5313 12524.04,675.6094 Q12523.3525,676.6719 12523.3525,678.7656 Q12523.3525,680.8594 12524.04,681.9375 Q12524.7275,683 12526.0713,683 Q12526.6963,683 12527.29,682.7344 Q12527.8838,682.4531 12528.5088,681.875 L12528.5088,684.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="12546.04" y="683.1074">Object::Connection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12408.79" x2="12769.79" y1="694.9531" y2="694.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" target="_top" title="source" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" xlink:show="new" xlink:title="source" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12413.79" y="700.9531"/><ellipse cx="12418.79" cy="705.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" target="_top" title="source" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" xlink:show="new" xlink:title="source" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="12427.79" y="709.1636">source : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" xlink:show="new" xlink:title="signal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12413.79" y="713.7578"/><ellipse cx="12418.79" cy="718.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" xlink:show="new" xlink:title="signal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="12427.79" y="721.9683">signal : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" xlink:show="new" xlink:title="target" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12413.79" y="726.5625"/><ellipse cx="12418.79" cy="731.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" xlink:show="new" xlink:title="target" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="12427.79" y="734.7729">target : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" xlink:show="new" xlink:title="flags" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12413.79" y="739.3672"/><ellipse cx="12418.79" cy="744.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" xlink:show="new" xlink:title="flags" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="12427.79" y="747.5776">flags : uint32_t</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" target="_top" title="binds" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" xlink:show="new" xlink:title="binds" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12413.79" y="752.1719"/><ellipse cx="12418.79" cy="757.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" target="_top" title="binds" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" xlink:show="new" xlink:title="binds" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="12427.79" y="760.3823">binds : Vector&lt;Variant&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="12408.79" x2="12769.79" y1="766.9766" y2="766.9766"/><ellipse cx="12418.79" cy="777.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="12427.79" y="781.187">operator&lt;(const Object::Connection &amp; p_conn) const : bool</text><ellipse cx="12418.79" cy="790.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="12427.79" y="793.9917">operator Variant() const : Variant</text><ellipse cx="12418.79" cy="803.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="12427.79" y="806.7964">Connection() : void</text><ellipse cx="12418.79" cy="816.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="12427.79" y="819.6011">Connection(const Variant &amp; p_variant) : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12413.79" y="824.1953"/><ellipse cx="12418.79" cy="829.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="12427.79" y="832.4058">method : StringName</text></a><!--MD5=[d874fe1d316004bca753fee73a8324d9]
class C_0000250357724807605097--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448" target="_top" title="Object##Signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448" xlink:show="new" xlink:title="Object##Signal" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0000250357724807605097" style="stroke: #A80036; stroke-width: 1.5;" width="375" x="32771.79" y="707.9531"/><ellipse cx="32912.04" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32915.0088,729.5938 Q32914.4306,729.8906 32913.79,730.0313 Q32913.1494,730.1875 32912.4463,730.1875 Q32909.9463,730.1875 32908.6181,728.5469 Q32907.3056,726.8906 32907.3056,723.7656 Q32907.3056,720.6406 32908.6181,718.9844 Q32909.9463,717.3281 32912.4463,717.3281 Q32913.1494,717.3281 32913.79,717.4844 Q32914.4463,717.6406 32915.0088,717.9375 L32915.0088,720.6563 Q32914.3838,720.0781 32913.79,719.8125 Q32913.1963,719.5313 32912.5713,719.5313 Q32911.2275,719.5313 32910.54,720.6094 Q32909.8525,721.6719 32909.8525,723.7656 Q32909.8525,725.8594 32910.54,726.9375 Q32911.2275,728 32912.5713,728 Q32913.1963,728 32913.79,727.7344 Q32914.3838,727.4531 32915.0088,726.875 L32915.0088,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="32932.54" y="728.1074">Object::Signal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32772.79" x2="33145.79" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" target="_top" title="user" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" xlink:show="new" xlink:title="user" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32777.79" y="745.9531"/><ellipse cx="32782.79" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" target="_top" title="user" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" xlink:show="new" xlink:title="user" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="32791.79" y="754.1636">user : MethodInfo</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" target="_top" title="slot_map" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" xlink:show="new" xlink:title="slot_map" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32777.79" y="758.7578"/><ellipse cx="32782.79" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" target="_top" title="slot_map" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" xlink:show="new" xlink:title="slot_map" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="32791.79" y="766.9683">slot_map : VMap&lt;Object::Signal::Target,Object::Signal::Slot&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32772.79" x2="33145.79" y1="773.5625" y2="773.5625"/><ellipse cx="32782.79" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32791.79" y="787.7729">Signal() : void</text><!--MD5=[4eb60b73893006bfd9288c7c65337e99]
class C_0002064336919270342687--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773" target="_top" title="ObjectDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773" xlink:show="new" xlink:title="ObjectDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="99.2188" id="C_0002064336919270342687" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="24461.29" y="701.4531"/><ellipse cx="24585.54" cy="717.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24588.5088,723.0938 Q24587.9306,723.3906 24587.29,723.5313 Q24586.6494,723.6875 24585.9463,723.6875 Q24583.4463,723.6875 24582.1181,722.0469 Q24580.8056,720.3906 24580.8056,717.2656 Q24580.8056,714.1406 24582.1181,712.4844 Q24583.4463,710.8281 24585.9463,710.8281 Q24586.6494,710.8281 24587.29,710.9844 Q24587.9463,711.1406 24588.5088,711.4375 L24588.5088,714.1563 Q24587.8838,713.5781 24587.29,713.3125 Q24586.6963,713.0313 24586.0713,713.0313 Q24584.7275,713.0313 24584.04,714.1094 Q24583.3525,715.1719 24583.3525,717.2656 Q24583.3525,719.3594 24584.04,720.4375 Q24584.7275,721.5 24586.0713,721.5 Q24586.6963,721.5 24587.29,721.2344 Q24587.8838,720.9531 24588.5088,720.375 L24588.5088,723.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="24606.04" y="721.6074">ObjectDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24462.29" x2="24774.29" y1="733.4531" y2="733.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24462.29" x2="24774.29" y1="741.4531" y2="741.4531"/><ellipse cx="24472.29" cy="752.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="266" x="24481.29" y="755.6636">get_instance(ObjectID p_instance_id) : Object *</text><ellipse cx="24472.29" cy="765.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="24481.29" y="768.4683">debug_objects(ObjectDB::DebugFunc p_func) : void</text><ellipse cx="24472.29" cy="778.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="24481.29" y="781.2729">get_object_count() : int</text><ellipse cx="24472.29" cy="790.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="24481.29" y="794.0776">instance_validate(Object * p_ptr) : bool</text></a><!--MD5=[84493b5de8053214b7de638c818a1c90]
class C_0001040552259499621557--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L775" target="_top" title="ObjectDB##ObjectPtrHash" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L775" xlink:show="new" xlink:title="ObjectDB##ObjectPtrHash" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="60.8047" id="C_0001040552259499621557" style="stroke: #A80036; stroke-width: 1.5;" width="234" x="24501.29" y="284.9531"/><ellipse cx="24537.44" cy="300.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24540.4088,306.5938 Q24539.8306,306.8906 24539.19,307.0313 Q24538.5494,307.1875 24537.8463,307.1875 Q24535.3463,307.1875 24534.0181,305.5469 Q24532.7056,303.8906 24532.7056,300.7656 Q24532.7056,297.6406 24534.0181,295.9844 Q24535.3463,294.3281 24537.8463,294.3281 Q24538.5494,294.3281 24539.19,294.4844 Q24539.8463,294.6406 24540.4088,294.9375 L24540.4088,297.6563 Q24539.7838,297.0781 24539.19,296.8125 Q24538.5963,296.5313 24537.9713,296.5313 Q24536.6275,296.5313 24535.94,297.6094 Q24535.2525,298.6719 24535.2525,300.7656 Q24535.2525,302.8594 24535.94,303.9375 Q24536.6275,305 24537.9713,305 Q24538.5963,305 24539.19,304.7344 Q24539.7838,304.4531 24540.4088,303.875 L24540.4088,306.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="24556.14" y="305.1074">ObjectDB::ObjectPtrHash</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24502.29" x2="24734.29" y1="316.9531" y2="316.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24502.29" x2="24734.29" y1="324.9531" y2="324.9531"/><ellipse cx="24512.29" cy="335.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="24521.29" y="339.1636">hash(const Object * p_obj) : uint32_t</text></a><!--MD5=[acae977502fa5a12b95dcdad70114268]
class C_0001201075309499995726--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L244" target="_top" title="GetTypeInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L244" xlink:show="new" xlink:title="GetTypeInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0001201075309499995726" style="stroke: #A80036; stroke-width: 1.5;" width="416" x="11352.29" y="707.9531"/><ellipse cx="11367.29" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11370.2588,729.5938 Q11369.6806,729.8906 11369.04,730.0313 Q11368.3994,730.1875 11367.6963,730.1875 Q11365.1963,730.1875 11363.8681,728.5469 Q11362.5556,726.8906 11362.5556,723.7656 Q11362.5556,720.6406 11363.8681,718.9844 Q11365.1963,717.3281 11367.6963,717.3281 Q11368.3994,717.3281 11369.04,717.4844 Q11369.6963,717.6406 11370.2588,717.9375 L11370.2588,720.6563 Q11369.6338,720.0781 11369.04,719.8125 Q11368.4463,719.5313 11367.8213,719.5313 Q11366.4775,719.5313 11365.79,720.6094 Q11365.1025,721.6719 11365.1025,723.7656 Q11365.1025,725.8594 11365.79,726.9375 Q11366.4775,728 11367.8213,728 Q11368.4463,728 11369.04,727.7344 Q11369.6338,727.4531 11370.2588,726.875 L11370.2588,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="11381.29" y="728.1074">GetTypeInfo</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="308" x="11463.29" y="704.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="11464.29" y="717.0918">T *,typename EnableIf&lt;TypeInherits&lt;Object,T&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11353.29" x2="11767.29" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="11358.29" y="745.9531"/><ellipse cx="11363.29" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="11372.29" y="754.1636">VARIANT_TYPE : const Variant::Type</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="11358.29" y="758.7578"/><ellipse cx="11363.29" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="248" x="11372.29" y="766.9683">METADATA : const GodotTypeInfo::Metadata</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="11353.29" x2="11767.29" y1="773.5625" y2="773.5625"/><ellipse cx="11363.29" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="11372.29" y="787.7729">get_class_info() : PropertyInfo</text><!--MD5=[b29480471b2d78616b61e0762c4ff355]
class C_0002270819269735237405--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L253" target="_top" title="GetTypeInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L253" xlink:show="new" xlink:title="GetTypeInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0002270819269735237405" style="stroke: #A80036; stroke-width: 1.5;" width="569" x="11803.79" y="707.9531"/><ellipse cx="11818.79" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11821.7588,729.5938 Q11821.1806,729.8906 11820.54,730.0313 Q11819.8994,730.1875 11819.1963,730.1875 Q11816.6963,730.1875 11815.3681,728.5469 Q11814.0556,726.8906 11814.0556,723.7656 Q11814.0556,720.6406 11815.3681,718.9844 Q11816.6963,717.3281 11819.1963,717.3281 Q11819.8994,717.3281 11820.54,717.4844 Q11821.1963,717.6406 11821.7588,717.9375 L11821.7588,720.6563 Q11821.1338,720.0781 11820.54,719.8125 Q11819.9463,719.5313 11819.3213,719.5313 Q11817.9775,719.5313 11817.29,720.6094 Q11816.6025,721.6719 11816.6025,723.7656 Q11816.6025,725.8594 11817.29,726.9375 Q11817.9775,728 11819.3213,728 Q11819.9463,728 11820.54,727.7344 Q11821.1338,727.4531 11821.7588,726.875 L11821.7588,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="11832.79" y="728.1074">GetTypeInfo</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="461" x="11914.79" y="704.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="11915.79" y="717.0918">const type-parameter-0-0 *,typename EnableIf&lt;TypeInherits&lt;Object,T&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11804.79" x2="12371.79" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="11809.79" y="745.9531"/><ellipse cx="11814.79" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="11823.79" y="754.1636">VARIANT_TYPE : const Variant::Type</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="11809.79" y="758.7578"/><ellipse cx="11814.79" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="248" x="11823.79" y="766.9683">METADATA : const GodotTypeInfo::Metadata</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="11804.79" x2="12371.79" y1="773.5625" y2="773.5625"/><ellipse cx="11814.79" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="11823.79" y="787.7729">get_class_info() : PropertyInfo</text><!--MD5=[429b9eeb82fc254252e04d2fe78f09a2]
class C_0001725595510223069271--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L207" target="_top" title="MethodBind" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L207" xlink:show="new" xlink:title="MethodBind" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="368.1172" id="C_0001725595510223069271" style="stroke: #A80036; stroke-width: 1.5;" width="627" x="3677.79" y="3111.4531"/><ellipse cx="3950.04" cy="3127.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3950.1494,3122.7969 L3948.9931,3127.875 L3951.3213,3127.875 L3950.1494,3122.7969 Z M3948.665,3120.5625 L3951.6494,3120.5625 L3955.0088,3132.9531 L3952.5556,3132.9531 L3951.79,3129.8906 L3948.5088,3129.8906 L3947.7588,3132.9531 L3945.3213,3132.9531 L3948.665,3120.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="3970.54" y="3131.6074">MethodBind</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3678.79" x2="4303.79" y1="3143.4531" y2="3143.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3678.79" x2="4303.79" y1="3151.4531" y2="3151.4531"/><ellipse cx="3688.79" cy="3162.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="3697.79" y="3165.6636">get_default_arguments() const : Vector&lt;Variant&gt;</text><ellipse cx="3688.79" cy="3175.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="3697.79" y="3178.4683">get_default_argument_count() const : int</text><ellipse cx="3688.79" cy="3188.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="3697.79" y="3191.2729">has_default_argument(int p_arg) const : Variant</text><ellipse cx="3688.79" cy="3200.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="3697.79" y="3204.0776">get_default_argument(int p_arg) const : Variant</text><ellipse cx="3688.79" cy="3213.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="3697.79" y="3216.8823">get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3688.79" cy="3226.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="3697.79" y="3229.687">get_argument_info(int p_argument) const : PropertyInfo</text><ellipse cx="3688.79" cy="3239.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3697.79" y="3242.4917">get_return_info() const : PropertyInfo</text><ellipse cx="3688.79" cy="3252.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3697.79" y="3255.2964">set_argument_names(const Vector&lt;StringName&gt; &amp; p_names) : void</text><ellipse cx="3688.79" cy="3264.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="3697.79" y="3268.1011">get_argument_names() const : Vector&lt;StringName&gt;</text><ellipse cx="3688.79" cy="3277.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="3697.79" y="3280.9058">get_argument_meta(int p_arg) const = 0 : GodotTypeInfo::Metadata</text><ellipse cx="3688.79" cy="3290.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="3697.79" y="3293.7104">set_hint_flags(uint32_t p_hint) : void</text><ellipse cx="3688.79" cy="3303.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3697.79" y="3306.5151">get_hint_flags() const : uint32_t</text><ellipse cx="3688.79" cy="3316.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="216" x="3697.79" y="3319.3198">get_instance_class() const = 0 : String</text><ellipse cx="3688.79" cy="3328.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="3697.79" y="3332.1245">get_argument_count() const : int</text><ellipse cx="3688.79" cy="3341.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="601" x="3697.79" y="3344.9292">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) = 0 : Variant</text><ellipse cx="3688.79" cy="3354.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="3697.79" y="3357.7339">ptrcall(Object * p_object, const void ** p_args, void * r_ret) = 0 : void</text><ellipse cx="3688.79" cy="3367.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3697.79" y="3370.5386">get_name() const : StringName</text><ellipse cx="3688.79" cy="3380.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="3697.79" y="3383.3433">set_name(const StringName &amp; p_name) : void</text><ellipse cx="3688.79" cy="3392.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3697.79" y="3396.1479">get_method_id() const : int</text><ellipse cx="3688.79" cy="3405.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3697.79" y="3408.9526">is_const() const : bool</text><ellipse cx="3688.79" cy="3418.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3697.79" y="3421.7573">has_return() const : bool</text><ellipse cx="3688.79" cy="3431.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3697.79" y="3434.562">is_vararg() const : bool</text><ellipse cx="3688.79" cy="3444.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="3697.79" y="3447.3667">set_default_arguments(const Vector&lt;Variant&gt; &amp; p_defargs) : void</text><ellipse cx="3688.79" cy="3456.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3697.79" y="3460.1714">MethodBind() : void</text><ellipse cx="3688.79" cy="3469.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="3697.79" y="3472.9761">~MethodBind() : void</text></a><!--MD5=[b0cd7d2b6e06ebb84bc64d0e2ab05237]
class C_0000626842387047507019--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L301" target="_top" title="MethodBindVarArg" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L301" xlink:show="new" xlink:title="MethodBindVarArg" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="188.8516" id="C_0000626842387047507019" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="30190.79" y="4676.9531"/><ellipse cx="30424.54" cy="4692.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30427.5088,4698.5938 Q30426.9306,4698.8906 30426.29,4699.0313 Q30425.6494,4699.1875 30424.9463,4699.1875 Q30422.4463,4699.1875 30421.1181,4697.5469 Q30419.8056,4695.8906 30419.8056,4692.7656 Q30419.8056,4689.6406 30421.1181,4687.9844 Q30422.4463,4686.3281 30424.9463,4686.3281 Q30425.6494,4686.3281 30426.29,4686.4844 Q30426.9463,4686.6406 30427.5088,4686.9375 L30427.5088,4689.6563 Q30426.8838,4689.0781 30426.29,4688.8125 Q30425.6963,4688.5313 30425.0713,4688.5313 Q30423.7275,4688.5313 30423.04,4689.6094 Q30422.3525,4690.6719 30422.3525,4692.7656 Q30422.3525,4694.8594 30423.04,4695.9375 Q30423.7275,4697 30425.0713,4697 Q30425.6963,4697 30426.29,4696.7344 Q30426.8838,4696.4531 30427.5088,4695.875 L30427.5088,4698.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="30445.04" y="4697.1074">MethodBindVarArg</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="30787.79" y="4673.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="30788.79" y="4686.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30191.79" x2="30792.79" y1="4708.9531" y2="4708.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30191.79" x2="30792.79" y1="4716.9531" y2="4716.9531"/><ellipse cx="30201.79" cy="4727.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="30210.79" y="4731.1636">_gen_argument_type_info(int p_arg) const : PropertyInfo</text><ellipse cx="30201.79" cy="4740.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="30210.79" y="4743.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="30201.79" cy="4753.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="30210.79" y="4756.7729">get_argument_meta(int ) const : GodotTypeInfo::Metadata</text><ellipse cx="30201.79" cy="4766.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="30210.79" y="4769.5776">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="30201.79" cy="4779.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="30210.79" y="4782.3823">set_method_info(const MethodInfo &amp; p_info, bool p_return_nil_is_variant) : void</text><ellipse cx="30201.79" cy="4791.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="30210.79" y="4795.187">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="30201.79" cy="4804.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="30210.79" y="4807.9917">set_method(MethodBindVarArg::NativeCall p_method) : void</text><ellipse cx="30201.79" cy="4817.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="30210.79" y="4820.7964">is_const() const : bool</text><ellipse cx="30201.79" cy="4830.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="30210.79" y="4833.6011">get_instance_class() const : String</text><ellipse cx="30201.79" cy="4843.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="30210.79" y="4846.4058">is_vararg() const : bool</text><ellipse cx="30201.79" cy="4856" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="30210.79" y="4859.2104">MethodBindVarArg&lt;T&gt;() : void</text></a><!--MD5=[4e2433468be1bf4f91db1e1408bce40c]
class C_0002161264899189627575--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4" target="_top" title="MethodBind0" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4" xlink:show="new" xlink:title="MethodBind0" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0002161264899189627575" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="2604.79" y="5881.9531"/><ellipse cx="2861.04" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2864.0088,5903.5938 Q2863.4306,5903.8906 2862.79,5904.0313 Q2862.1494,5904.1875 2861.4463,5904.1875 Q2858.9463,5904.1875 2857.6181,5902.5469 Q2856.3056,5900.8906 2856.3056,5897.7656 Q2856.3056,5894.6406 2857.6181,5892.9844 Q2858.9463,5891.3281 2861.4463,5891.3281 Q2862.1494,5891.3281 2862.79,5891.4844 Q2863.4463,5891.6406 2864.0088,5891.9375 L2864.0088,5894.6563 Q2863.3838,5894.0781 2862.79,5893.8125 Q2862.1963,5893.5313 2861.5713,5893.5313 Q2860.2275,5893.5313 2859.54,5894.6094 Q2858.8525,5895.6719 2858.8525,5897.7656 Q2858.8525,5899.8594 2859.54,5900.9375 Q2860.2275,5902 2861.5713,5902 Q2862.1963,5902 2862.79,5901.7344 Q2863.3838,5901.4531 2864.0088,5900.875 L2864.0088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2881.54" y="5902.1074">MethodBind0</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2605.79" x2="3206.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L8" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L8" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2610.79" y="5919.9531"/><ellipse cx="2615.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L8" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L8" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2624.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2605.79" x2="3206.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="2615.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2624.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="2615.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="2624.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="2615.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2624.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="2615.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2624.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="2615.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2624.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="2615.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="2624.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="2615.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="2624.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="2615.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2624.79" y="6038.6011">MethodBind0() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2610.79" y="6043.1953"/><ellipse cx="2615.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2624.79" y="6051.4058">method : void (__UnexistingClass::*)()</text></a><!--MD5=[402a780a243bcc136218f82ea435190e]
class C_0000514530488699023626--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L182" target="_top" title="MethodBind0R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L182" xlink:show="new" xlink:title="MethodBind0R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000514530488699023626" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3205.79" y="11607.9531"/><ellipse cx="3452.04" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3455.0088,11629.5938 Q3454.4306,11629.8906 3453.79,11630.0313 Q3453.1494,11630.1875 3452.4463,11630.1875 Q3449.9463,11630.1875 3448.6181,11628.5469 Q3447.3056,11626.8906 3447.3056,11623.7656 Q3447.3056,11620.6406 3448.6181,11618.9844 Q3449.9463,11617.3281 3452.4463,11617.3281 Q3453.1494,11617.3281 3453.79,11617.4844 Q3454.4463,11617.6406 3455.0088,11617.9375 L3455.0088,11620.6563 Q3454.3838,11620.0781 3453.79,11619.8125 Q3453.1963,11619.5313 3452.5713,11619.5313 Q3451.2275,11619.5313 3450.54,11620.6094 Q3449.8525,11621.6719 3449.8525,11623.7656 Q3449.8525,11625.8594 3450.54,11626.9375 Q3451.2275,11628 3452.5713,11628 Q3453.1963,11628 3453.79,11627.7344 Q3454.3838,11627.4531 3455.0088,11626.875 L3455.0088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="3472.54" y="11628.1074">MethodBind0R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="3801.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="3802.79" y="11617.0918">R</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3206.79" x2="3807.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L186" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L186" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3211.79" y="11645.9531"/><ellipse cx="3216.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L186" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L186" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3225.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3206.79" x2="3807.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="3216.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3225.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3216.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3225.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3216.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3225.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3216.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3225.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3216.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3225.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="3216.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3225.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3216.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3225.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3216.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3225.79" y="11764.6011">MethodBind0R&lt;R&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3211.79" y="11769.1953"/><ellipse cx="3216.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="3225.79" y="11777.4058">method : R (__UnexistingClass::*)()</text></a><!--MD5=[bbd81add5d463cd7c646b9b15b455900]
class C_0001500902353747816170--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L360" target="_top" title="MethodBind0C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L360" xlink:show="new" xlink:title="MethodBind0C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001500902353747816170" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3470.79" y="5881.9531"/><ellipse cx="3723.04" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3726.0088,5903.5938 Q3725.4306,5903.8906 3724.79,5904.0313 Q3724.1494,5904.1875 3723.4463,5904.1875 Q3720.9463,5904.1875 3719.6181,5902.5469 Q3718.3056,5900.8906 3718.3056,5897.7656 Q3718.3056,5894.6406 3719.6181,5892.9844 Q3720.9463,5891.3281 3723.4463,5891.3281 Q3724.1494,5891.3281 3724.79,5891.4844 Q3725.4463,5891.6406 3726.0088,5891.9375 L3726.0088,5894.6563 Q3725.3838,5894.0781 3724.79,5893.8125 Q3724.1963,5893.5313 3723.5713,5893.5313 Q3722.2275,5893.5313 3721.54,5894.6094 Q3720.8525,5895.6719 3720.8525,5897.7656 Q3720.8525,5899.8594 3721.54,5900.9375 Q3722.2275,5902 3723.5713,5902 Q3724.1963,5902 3724.79,5901.7344 Q3725.3838,5901.4531 3726.0088,5900.875 L3726.0088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="3743.54" y="5902.1074">MethodBind0C</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3471.79" x2="4072.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L364" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L364" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3476.79" y="5919.9531"/><ellipse cx="3481.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L364" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L364" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3490.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3471.79" x2="4072.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="3481.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3490.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3481.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3490.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3481.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3490.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3481.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3490.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3481.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3490.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="3481.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3490.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3481.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3490.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3481.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3490.79" y="6038.6011">MethodBind0C() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3476.79" y="6043.1953"/><ellipse cx="3481.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="3490.79" y="6051.4058">method : void (__UnexistingClass::*)() const</text></a><!--MD5=[2e6b94c4a210e718e460b74e109abf55]
class C_0001463339540638256927--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L538" target="_top" title="MethodBind0RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L538" xlink:show="new" xlink:title="MethodBind0RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001463339540638256927" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3940.79" y="11607.9531"/><ellipse cx="4183.04" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4186.0088,11629.5938 Q4185.4306,11629.8906 4184.79,11630.0313 Q4184.1494,11630.1875 4183.4463,11630.1875 Q4180.9463,11630.1875 4179.6181,11628.5469 Q4178.3056,11626.8906 4178.3056,11623.7656 Q4178.3056,11620.6406 4179.6181,11618.9844 Q4180.9463,11617.3281 4183.4463,11617.3281 Q4184.1494,11617.3281 4184.79,11617.4844 Q4185.4463,11617.6406 4186.0088,11617.9375 L4186.0088,11620.6563 Q4185.3838,11620.0781 4184.79,11619.8125 Q4184.1963,11619.5313 4183.5713,11619.5313 Q4182.2275,11619.5313 4181.54,11620.6094 Q4180.8525,11621.6719 4180.8525,11623.7656 Q4180.8525,11625.8594 4181.54,11626.9375 Q4182.2275,11628 4183.5713,11628 Q4184.1963,11628 4184.79,11627.7344 Q4185.3838,11627.4531 4186.0088,11626.875 L4186.0088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="4203.54" y="11628.1074">MethodBind0RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="4536.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="4537.79" y="11617.0918">R</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3941.79" x2="4542.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.79" y="11645.9531"/><ellipse cx="3951.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3960.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3941.79" x2="4542.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="3951.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3960.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3951.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3960.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3951.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3960.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3951.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3960.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3951.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3960.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="3951.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3960.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3951.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3960.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3951.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3960.79" y="11764.6011">MethodBind0RC&lt;R&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3946.79" y="11769.1953"/><ellipse cx="3951.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="3960.79" y="11777.4058">method : R (__UnexistingClass::*)() const</text></a><!--MD5=[0008824f5d6ab5b87bf209ad1b96abdf]
class C_0001770130608234301442--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L716" target="_top" title="MethodBind1" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L716" xlink:show="new" xlink:title="MethodBind1" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001770130608234301442" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="4120.79" y="5881.9531"/><ellipse cx="4367.54" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4370.5088,5903.5938 Q4369.9306,5903.8906 4369.29,5904.0313 Q4368.6494,5904.1875 4367.9463,5904.1875 Q4365.4463,5904.1875 4364.1181,5902.5469 Q4362.8056,5900.8906 4362.8056,5897.7656 Q4362.8056,5894.6406 4364.1181,5892.9844 Q4365.4463,5891.3281 4367.9463,5891.3281 Q4368.6494,5891.3281 4369.29,5891.4844 Q4369.9463,5891.6406 4370.5088,5891.9375 L4370.5088,5894.6563 Q4369.8838,5894.0781 4369.29,5893.8125 Q4368.6963,5893.5313 4368.0713,5893.5313 Q4366.7275,5893.5313 4366.04,5894.6094 Q4365.3525,5895.6719 4365.3525,5897.7656 Q4365.3525,5899.8594 4366.04,5900.9375 Q4366.7275,5902 4368.0713,5902 Q4368.6963,5902 4369.29,5901.7344 Q4369.8838,5901.4531 4370.5088,5900.875 L4370.5088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="4388.04" y="5902.1074">MethodBind1</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="17" x="4709.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="15" x="4710.79" y="5891.0918">P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4121.79" x2="4722.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L720" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L720" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4126.79" y="5919.9531"/><ellipse cx="4131.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L720" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L720" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4140.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4121.79" x2="4722.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="4131.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4140.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="4131.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="4140.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="4131.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4140.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="4131.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4140.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="4131.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4140.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="4131.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="4140.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="4131.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4140.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="4131.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4140.79" y="6038.6011">MethodBind1&lt;P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4126.79" y="6043.1953"/><ellipse cx="4131.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="4140.79" y="6051.4058">method : void (__UnexistingClass::*)(P1)</text></a><!--MD5=[9e6f6d7d75b1f768a4fe6441ee630102]
class C_0001227602006568872099--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L902" target="_top" title="MethodBind1R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L902" xlink:show="new" xlink:title="MethodBind1R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001227602006568872099" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="4675.79" y="11607.9531"/><ellipse cx="4912.54" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4915.5088,11629.5938 Q4914.9306,11629.8906 4914.29,11630.0313 Q4913.6494,11630.1875 4912.9463,11630.1875 Q4910.4463,11630.1875 4909.1181,11628.5469 Q4907.8056,11626.8906 4907.8056,11623.7656 Q4907.8056,11620.6406 4909.1181,11618.9844 Q4910.4463,11617.3281 4912.9463,11617.3281 Q4913.6494,11617.3281 4914.29,11617.4844 Q4914.9463,11617.6406 4915.5088,11617.9375 L4915.5088,11620.6563 Q4914.8838,11620.0781 4914.29,11619.8125 Q4913.6963,11619.5313 4913.0713,11619.5313 Q4911.7275,11619.5313 4911.04,11620.6094 Q4910.3525,11621.6719 4910.3525,11623.7656 Q4910.3525,11625.8594 4911.04,11626.9375 Q4911.7275,11628 4913.0713,11628 Q4913.6963,11628 4914.29,11627.7344 Q4914.8838,11627.4531 4915.5088,11626.875 L4915.5088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="4933.04" y="11628.1074">MethodBind1R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="5252.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="5253.79" y="11617.0918">R,P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4676.79" x2="5277.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L906" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L906" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4681.79" y="11645.9531"/><ellipse cx="4686.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L906" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L906" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4695.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4676.79" x2="5277.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="4686.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4695.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="4686.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="4695.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="4686.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4695.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="4686.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4695.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="4686.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4695.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="4686.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="4695.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="4686.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4695.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="4686.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="4695.79" y="11764.6011">MethodBind1R&lt;R, P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4681.79" y="11769.1953"/><ellipse cx="4686.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4695.79" y="11777.4058">method : R (__UnexistingClass::*)(P1)</text></a><!--MD5=[e81848522d508248c74593b89fdc2a23]
class C_0000721345300172868993--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1088" target="_top" title="MethodBind1C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1088" xlink:show="new" xlink:title="MethodBind1C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000721345300172868993" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="4770.79" y="5881.9531"/><ellipse cx="5013.54" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5016.5088,5903.5938 Q5015.9306,5903.8906 5015.29,5904.0313 Q5014.6494,5904.1875 5013.9463,5904.1875 Q5011.4463,5904.1875 5010.1181,5902.5469 Q5008.8056,5900.8906 5008.8056,5897.7656 Q5008.8056,5894.6406 5010.1181,5892.9844 Q5011.4463,5891.3281 5013.9463,5891.3281 Q5014.6494,5891.3281 5015.29,5891.4844 Q5015.9463,5891.6406 5016.5088,5891.9375 L5016.5088,5894.6563 Q5015.8838,5894.0781 5015.29,5893.8125 Q5014.6963,5893.5313 5014.0713,5893.5313 Q5012.7275,5893.5313 5012.04,5894.6094 Q5011.3525,5895.6719 5011.3525,5897.7656 Q5011.3525,5899.8594 5012.04,5900.9375 Q5012.7275,5902 5014.0713,5902 Q5014.6963,5902 5015.29,5901.7344 Q5015.8838,5901.4531 5016.5088,5900.875 L5016.5088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="5034.04" y="5902.1074">MethodBind1C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="17" x="5359.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="15" x="5360.79" y="5891.0918">P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4771.79" x2="5372.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1092" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1092" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4776.79" y="5919.9531"/><ellipse cx="4781.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1092" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1092" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4790.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4771.79" x2="5372.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="4781.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4790.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="4781.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="4790.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="4781.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4790.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="4781.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4790.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="4781.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4790.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="4781.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="4790.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="4781.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4790.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="4781.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4790.79" y="6038.6011">MethodBind1C&lt;P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4776.79" y="6043.1953"/><ellipse cx="4781.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4790.79" y="6051.4058">method : void (__UnexistingClass::*)(P1) const</text></a><!--MD5=[d3f74a66180c820beb47965a2e4477bd]
class C_0000779559418824132960--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1274" target="_top" title="MethodBind1RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1274" xlink:show="new" xlink:title="MethodBind1RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000779559418824132960" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="5410.79" y="11607.9531"/><ellipse cx="5643.54" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5646.5088,11629.5938 Q5645.9306,11629.8906 5645.29,11630.0313 Q5644.6494,11630.1875 5643.9463,11630.1875 Q5641.4463,11630.1875 5640.1181,11628.5469 Q5638.8056,11626.8906 5638.8056,11623.7656 Q5638.8056,11620.6406 5640.1181,11618.9844 Q5641.4463,11617.3281 5643.9463,11617.3281 Q5644.6494,11617.3281 5645.29,11617.4844 Q5645.9463,11617.6406 5646.5088,11617.9375 L5646.5088,11620.6563 Q5645.8838,11620.0781 5645.29,11619.8125 Q5644.6963,11619.5313 5644.0713,11619.5313 Q5642.7275,11619.5313 5642.04,11620.6094 Q5641.3525,11621.6719 5641.3525,11623.7656 Q5641.3525,11625.8594 5642.04,11626.9375 Q5642.7275,11628 5644.0713,11628 Q5644.6963,11628 5645.29,11627.7344 Q5645.8838,11627.4531 5646.5088,11626.875 L5646.5088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="5664.04" y="11628.1074">MethodBind1RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="5987.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="5988.79" y="11617.0918">R,P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5411.79" x2="6012.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1278" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1278" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5416.79" y="11645.9531"/><ellipse cx="5421.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1278" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1278" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5430.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5411.79" x2="6012.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="5421.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5430.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="5421.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="5430.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="5421.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="5430.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="5421.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="5430.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="5421.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="5430.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="5421.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="5430.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="5421.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5430.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="5421.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="5430.79" y="11764.6011">MethodBind1RC&lt;R, P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5416.79" y="11769.1953"/><ellipse cx="5421.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="5430.79" y="11777.4058">method : R (__UnexistingClass::*)(P1) const</text></a><!--MD5=[0b280f1abb16f5cdc51055da58a97cd8]
class C_0001326581917102107425--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1460" target="_top" title="MethodBind2" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1460" xlink:show="new" xlink:title="MethodBind2" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001326581917102107425" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="5420.79" y="5881.9531"/><ellipse cx="5658.04" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5661.0088,5903.5938 Q5660.4306,5903.8906 5659.79,5904.0313 Q5659.1494,5904.1875 5658.4463,5904.1875 Q5655.9463,5904.1875 5654.6181,5902.5469 Q5653.3056,5900.8906 5653.3056,5897.7656 Q5653.3056,5894.6406 5654.6181,5892.9844 Q5655.9463,5891.3281 5658.4463,5891.3281 Q5659.1494,5891.3281 5659.79,5891.4844 Q5660.4463,5891.6406 5661.0088,5891.9375 L5661.0088,5894.6563 Q5660.3838,5894.0781 5659.79,5893.8125 Q5659.1963,5893.5313 5658.5713,5893.5313 Q5657.2275,5893.5313 5656.54,5894.6094 Q5655.8525,5895.6719 5655.8525,5897.7656 Q5655.8525,5899.8594 5656.54,5900.9375 Q5657.2275,5902 5658.5713,5902 Q5659.1963,5902 5659.79,5901.7344 Q5660.3838,5901.4531 5661.0088,5900.875 L5661.0088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="5678.54" y="5902.1074">MethodBind2</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="5990.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="5991.79" y="5891.0918">P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5421.79" x2="6022.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1464" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1464" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5426.79" y="5919.9531"/><ellipse cx="5431.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1464" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1464" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5440.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5421.79" x2="6022.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="5431.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5440.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="5431.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="5440.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="5431.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="5440.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="5431.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="5440.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="5431.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="5440.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="5431.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="5440.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="5431.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5440.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="5431.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5440.79" y="6038.6011">MethodBind2&lt;P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5426.79" y="6043.1953"/><ellipse cx="5431.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5440.79" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2)</text></a><!--MD5=[5bb124d142bc7bb4b95bdbec111eb0d0]
class C_0000845455246171879191--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1654" target="_top" title="MethodBind2R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1654" xlink:show="new" xlink:title="MethodBind2R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000845455246171879191" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6145.79" y="11607.9531"/><ellipse cx="6373.04" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6376.0088,11629.5938 Q6375.4306,11629.8906 6374.79,11630.0313 Q6374.1494,11630.1875 6373.4463,11630.1875 Q6370.9463,11630.1875 6369.6181,11628.5469 Q6368.3056,11626.8906 6368.3056,11623.7656 Q6368.3056,11620.6406 6369.6181,11618.9844 Q6370.9463,11617.3281 6373.4463,11617.3281 Q6374.1494,11617.3281 6374.79,11617.4844 Q6375.4463,11617.6406 6376.0088,11617.9375 L6376.0088,11620.6563 Q6375.3838,11620.0781 6374.79,11619.8125 Q6374.1963,11619.5313 6373.5713,11619.5313 Q6372.2275,11619.5313 6371.54,11620.6094 Q6370.8525,11621.6719 6370.8525,11623.7656 Q6370.8525,11625.8594 6371.54,11626.9375 Q6372.2275,11628 6373.5713,11628 Q6374.1963,11628 6374.79,11627.7344 Q6375.3838,11627.4531 6376.0088,11626.875 L6376.0088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="6393.54" y="11628.1074">MethodBind2R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="48" x="6703.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="46" x="6704.79" y="11617.0918">R,P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6146.79" x2="6747.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1658" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1658" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6151.79" y="11645.9531"/><ellipse cx="6156.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1658" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1658" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6165.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6146.79" x2="6747.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="6156.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6165.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6156.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6165.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6156.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6165.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6156.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6165.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6156.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6165.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="6156.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6165.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6156.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6165.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6156.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6165.79" y="11764.6011">MethodBind2R&lt;R, P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6151.79" y="11769.1953"/><ellipse cx="6156.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="6165.79" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2)</text></a><!--MD5=[f3e63cb25455a0f6a876b1db68574a30]
class C_0000081704011730798793--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1848" target="_top" title="MethodBind2C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1848" xlink:show="new" xlink:title="MethodBind2C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000081704011730798793" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6070.79" y="5881.9531"/><ellipse cx="6304.04" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6307.0088,5903.5938 Q6306.4306,5903.8906 6305.79,5904.0313 Q6305.1494,5904.1875 6304.4463,5904.1875 Q6301.9463,5904.1875 6300.6181,5902.5469 Q6299.3056,5900.8906 6299.3056,5897.7656 Q6299.3056,5894.6406 6300.6181,5892.9844 Q6301.9463,5891.3281 6304.4463,5891.3281 Q6305.1494,5891.3281 6305.79,5891.4844 Q6306.4463,5891.6406 6307.0088,5891.9375 L6307.0088,5894.6563 Q6306.3838,5894.0781 6305.79,5893.8125 Q6305.1963,5893.5313 6304.5713,5893.5313 Q6303.2275,5893.5313 6302.54,5894.6094 Q6301.8525,5895.6719 6301.8525,5897.7656 Q6301.8525,5899.8594 6302.54,5900.9375 Q6303.2275,5902 6304.5713,5902 Q6305.1963,5902 6305.79,5901.7344 Q6306.3838,5901.4531 6307.0088,5900.875 L6307.0088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="6324.54" y="5902.1074">MethodBind2C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="6640.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="6641.79" y="5891.0918">P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6071.79" x2="6672.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1852" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1852" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6076.79" y="5919.9531"/><ellipse cx="6081.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1852" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1852" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6090.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6071.79" x2="6672.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="6081.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6090.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6081.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6090.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6081.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6090.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6081.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6090.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6081.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6090.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="6081.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6090.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6081.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6090.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6081.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="6090.79" y="6038.6011">MethodBind2C&lt;P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6076.79" y="6043.1953"/><ellipse cx="6081.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="6090.79" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2) const</text></a><!--MD5=[ac182821b3cb083d6fc084edf3c4f85b]
class C_0002027329212022555569--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2042" target="_top" title="MethodBind2RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2042" xlink:show="new" xlink:title="MethodBind2RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0002027329212022555569" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6880.79" y="11607.9531"/><ellipse cx="7104.04" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7107.0088,11629.5938 Q7106.4306,11629.8906 7105.79,11630.0313 Q7105.1494,11630.1875 7104.4463,11630.1875 Q7101.9463,11630.1875 7100.6181,11628.5469 Q7099.3056,11626.8906 7099.3056,11623.7656 Q7099.3056,11620.6406 7100.6181,11618.9844 Q7101.9463,11617.3281 7104.4463,11617.3281 Q7105.1494,11617.3281 7105.79,11617.4844 Q7106.4463,11617.6406 7107.0088,11617.9375 L7107.0088,11620.6563 Q7106.3838,11620.0781 7105.79,11619.8125 Q7105.1963,11619.5313 7104.5713,11619.5313 Q7103.2275,11619.5313 7102.54,11620.6094 Q7101.8525,11621.6719 7101.8525,11623.7656 Q7101.8525,11625.8594 7102.54,11626.9375 Q7103.2275,11628 7104.5713,11628 Q7105.1963,11628 7105.79,11627.7344 Q7106.3838,11627.4531 7107.0088,11626.875 L7107.0088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="7124.54" y="11628.1074">MethodBind2RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="48" x="7438.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="46" x="7439.79" y="11617.0918">R,P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6881.79" x2="7482.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2046" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2046" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6886.79" y="11645.9531"/><ellipse cx="6891.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2046" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2046" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6900.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6881.79" x2="7482.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="6891.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6900.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6891.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6900.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6891.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6900.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6891.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6900.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6891.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6900.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="6891.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6900.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6891.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6900.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6891.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6900.79" y="11764.6011">MethodBind2RC&lt;R, P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6886.79" y="11769.1953"/><ellipse cx="6891.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="6900.79" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2) const</text></a><!--MD5=[17e614214ddada7f353fed9c02a33d4a]
class C_0000512545424965820103--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2236" target="_top" title="MethodBind3" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2236" xlink:show="new" xlink:title="MethodBind3" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000512545424965820103" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6720.79" y="5881.9531"/><ellipse cx="6948.54" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6951.5088,5903.5938 Q6950.9306,5903.8906 6950.29,5904.0313 Q6949.6494,5904.1875 6948.9463,5904.1875 Q6946.4463,5904.1875 6945.1181,5902.5469 Q6943.8056,5900.8906 6943.8056,5897.7656 Q6943.8056,5894.6406 6945.1181,5892.9844 Q6946.4463,5891.3281 6948.9463,5891.3281 Q6949.6494,5891.3281 6950.29,5891.4844 Q6950.9463,5891.6406 6951.5088,5891.9375 L6951.5088,5894.6563 Q6950.8838,5894.0781 6950.29,5893.8125 Q6949.6963,5893.5313 6949.0713,5893.5313 Q6947.7275,5893.5313 6947.04,5894.6094 Q6946.3525,5895.6719 6946.3525,5897.7656 Q6946.3525,5899.8594 6947.04,5900.9375 Q6947.7275,5902 6949.0713,5902 Q6949.6963,5902 6950.29,5901.7344 Q6950.8838,5901.4531 6951.5088,5900.875 L6951.5088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="6969.04" y="5902.1074">MethodBind3</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="55" x="7271.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="53" x="7272.79" y="5891.0918">P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6721.79" x2="7322.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2240" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2240" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6726.79" y="5919.9531"/><ellipse cx="6731.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2240" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2240" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6740.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6721.79" x2="7322.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="6731.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6740.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6731.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6740.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6731.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6740.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6731.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6740.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6731.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6740.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="6731.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6740.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6731.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6740.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6731.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6740.79" y="6038.6011">MethodBind3&lt;P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6726.79" y="6043.1953"/><ellipse cx="6731.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="6740.79" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2,P3)</text></a><!--MD5=[90a698c2e8da22a8d90f4a3ddca391d6]
class C_0002087322448002339587--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2438" target="_top" title="MethodBind3R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2438" xlink:show="new" xlink:title="MethodBind3R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0002087322448002339587" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="9403.79" y="11607.9531"/><ellipse cx="9621.54" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9624.5088,11629.5938 Q9623.9306,11629.8906 9623.29,11630.0313 Q9622.6494,11630.1875 9621.9463,11630.1875 Q9619.4463,11630.1875 9618.1181,11628.5469 Q9616.8056,11626.8906 9616.8056,11623.7656 Q9616.8056,11620.6406 9618.1181,11618.9844 Q9619.4463,11617.3281 9621.9463,11617.3281 Q9622.6494,11617.3281 9623.29,11617.4844 Q9623.9463,11617.6406 9624.5088,11617.9375 L9624.5088,11620.6563 Q9623.8838,11620.0781 9623.29,11619.8125 Q9622.6963,11619.5313 9622.0713,11619.5313 Q9620.7275,11619.5313 9620.04,11620.6094 Q9619.3525,11621.6719 9619.3525,11623.7656 Q9619.3525,11625.8594 9620.04,11626.9375 Q9620.7275,11628 9622.0713,11628 Q9622.6963,11628 9623.29,11627.7344 Q9623.8838,11627.4531 9624.5088,11626.875 L9624.5088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="9642.04" y="11628.1074">MethodBind3R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="67" x="9942.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="65" x="9943.79" y="11617.0918">R,P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9404.79" x2="10005.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2442" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2442" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="9409.79" y="11645.9531"/><ellipse cx="9414.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2442" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2442" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="9423.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="9404.79" x2="10005.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="9414.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="9423.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="9414.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="9423.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="9414.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="9423.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="9414.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="9423.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="9414.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="9423.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="9414.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="9423.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="9414.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="9423.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="9414.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="9423.79" y="11764.6011">MethodBind3R&lt;R, P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="9409.79" y="11769.1953"/><ellipse cx="9414.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="9423.79" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2,P3)</text></a><!--MD5=[b632b12cd2345bad18fde235bd753922]
class C_0000031906668996487033--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2640" target="_top" title="MethodBind3C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2640" xlink:show="new" xlink:title="MethodBind3C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000031906668996487033" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="266.79" y="5881.9531"/><ellipse cx="490.54" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M493.5088,5903.5938 Q492.9306,5903.8906 492.29,5904.0313 Q491.6494,5904.1875 490.9463,5904.1875 Q488.4463,5904.1875 487.1181,5902.5469 Q485.8056,5900.8906 485.8056,5897.7656 Q485.8056,5894.6406 487.1181,5892.9844 Q488.4463,5891.3281 490.9463,5891.3281 Q491.6494,5891.3281 492.29,5891.4844 Q492.9463,5891.6406 493.5088,5891.9375 L493.5088,5894.6563 Q492.8838,5894.0781 492.29,5893.8125 Q491.6963,5893.5313 491.0713,5893.5313 Q489.7275,5893.5313 489.04,5894.6094 Q488.3525,5895.6719 488.3525,5897.7656 Q488.3525,5899.8594 489.04,5900.9375 Q489.7275,5902 491.0713,5902 Q491.6963,5902 492.29,5901.7344 Q492.8838,5901.4531 493.5088,5900.875 L493.5088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="511.04" y="5902.1074">MethodBind3C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="55" x="817.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="53" x="818.79" y="5891.0918">P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="267.79" x2="868.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2644" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2644" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="272.79" y="5919.9531"/><ellipse cx="277.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2644" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2644" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="286.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="267.79" x2="868.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="277.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="286.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="277.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="286.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="277.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="286.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="277.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="286.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="277.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="286.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="277.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="286.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="277.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="286.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="277.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="286.79" y="6038.6011">MethodBind3C&lt;P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="272.79" y="6043.1953"/><ellipse cx="277.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="286.79" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2,P3) const</text></a><!--MD5=[1a1508661ff0b5b3b5b63d08a9961abe]
class C_0001134043413451695381--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2842" target="_top" title="MethodBind3RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2842" xlink:show="new" xlink:title="MethodBind3RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001134043413451695381" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="405.79" y="11607.9531"/><ellipse cx="619.54" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M622.5088,11629.5938 Q621.9306,11629.8906 621.29,11630.0313 Q620.6494,11630.1875 619.9463,11630.1875 Q617.4463,11630.1875 616.1181,11628.5469 Q614.8056,11626.8906 614.8056,11623.7656 Q614.8056,11620.6406 616.1181,11618.9844 Q617.4463,11617.3281 619.9463,11617.3281 Q620.6494,11617.3281 621.29,11617.4844 Q621.9463,11617.6406 622.5088,11617.9375 L622.5088,11620.6563 Q621.8838,11620.0781 621.29,11619.8125 Q620.6963,11619.5313 620.0713,11619.5313 Q618.7275,11619.5313 618.04,11620.6094 Q617.3525,11621.6719 617.3525,11623.7656 Q617.3525,11625.8594 618.04,11626.9375 Q618.7275,11628 620.0713,11628 Q620.6963,11628 621.29,11627.7344 Q621.8838,11627.4531 622.5088,11626.875 L622.5088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="640.04" y="11628.1074">MethodBind3RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="67" x="944.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="65" x="945.79" y="11617.0918">R,P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="406.79" x2="1007.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2846" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2846" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="411.79" y="11645.9531"/><ellipse cx="416.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2846" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2846" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="425.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="406.79" x2="1007.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="416.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="425.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="416.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="425.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="416.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="425.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="416.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="425.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="416.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="425.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="416.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="425.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="416.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="425.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="416.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="425.79" y="11764.6011">MethodBind3RC&lt;R, P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="411.79" y="11769.1953"/><ellipse cx="416.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="425.79" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2,P3) const</text></a><!--MD5=[36695f22eea8c142ddc88250416f5f61]
class C_0001212767095252394753--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3044" target="_top" title="MethodBind4" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3044" xlink:show="new" xlink:title="MethodBind4" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001212767095252394753" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="916.79" y="5881.9531"/><ellipse cx="1135.04" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1138.0088,5903.5938 Q1137.4306,5903.8906 1136.79,5904.0313 Q1136.1494,5904.1875 1135.4463,5904.1875 Q1132.9463,5904.1875 1131.6181,5902.5469 Q1130.3056,5900.8906 1130.3056,5897.7656 Q1130.3056,5894.6406 1131.6181,5892.9844 Q1132.9463,5891.3281 1135.4463,5891.3281 Q1136.1494,5891.3281 1136.79,5891.4844 Q1137.4463,5891.6406 1138.0088,5891.9375 L1138.0088,5894.6563 Q1137.3838,5894.0781 1136.79,5893.8125 Q1136.1963,5893.5313 1135.5713,5893.5313 Q1134.2275,5893.5313 1133.54,5894.6094 Q1132.8525,5895.6719 1132.8525,5897.7656 Q1132.8525,5899.8594 1133.54,5900.9375 Q1134.2275,5902 1135.5713,5902 Q1136.1963,5902 1136.79,5901.7344 Q1137.3838,5901.4531 1138.0088,5900.875 L1138.0088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="1155.54" y="5902.1074">MethodBind4</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="74" x="1448.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="1449.79" y="5891.0918">P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="917.79" x2="1518.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3048" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3048" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="922.79" y="5919.9531"/><ellipse cx="927.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3048" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3048" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="936.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="917.79" x2="1518.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="927.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="936.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="927.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="936.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="927.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="936.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="927.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="936.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="927.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="936.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="927.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="936.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="927.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="936.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="927.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="936.79" y="6038.6011">MethodBind4&lt;P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="922.79" y="6043.1953"/><ellipse cx="927.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="936.79" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2,P3,P4)</text></a><!--MD5=[dd636e86033463e1071042e0449ab4f2]
class C_0001038624653636336005--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3254" target="_top" title="MethodBind4R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3254" xlink:show="new" xlink:title="MethodBind4R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001038624653636336005" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1140.79" y="11607.9531"/><ellipse cx="1349.04" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1352.0088,11629.5938 Q1351.4306,11629.8906 1350.79,11630.0313 Q1350.1494,11630.1875 1349.4463,11630.1875 Q1346.9463,11630.1875 1345.6181,11628.5469 Q1344.3056,11626.8906 1344.3056,11623.7656 Q1344.3056,11620.6406 1345.6181,11618.9844 Q1346.9463,11617.3281 1349.4463,11617.3281 Q1350.1494,11617.3281 1350.79,11617.4844 Q1351.4463,11617.6406 1352.0088,11617.9375 L1352.0088,11620.6563 Q1351.3838,11620.0781 1350.79,11619.8125 Q1350.1963,11619.5313 1349.5713,11619.5313 Q1348.2275,11619.5313 1347.54,11620.6094 Q1346.8525,11621.6719 1346.8525,11623.7656 Q1346.8525,11625.8594 1347.54,11626.9375 Q1348.2275,11628 1349.5713,11628 Q1350.1963,11628 1350.79,11627.7344 Q1351.3838,11627.4531 1352.0088,11626.875 L1352.0088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="1369.54" y="11628.1074">MethodBind4R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="86" x="1660.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="1661.79" y="11617.0918">R,P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1141.79" x2="1742.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3258" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3258" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1146.79" y="11645.9531"/><ellipse cx="1151.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3258" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3258" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1160.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1141.79" x2="1742.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="1151.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1160.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1151.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1160.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1151.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1160.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1151.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1160.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1151.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1160.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="1151.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1160.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1151.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1160.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1151.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1160.79" y="11764.6011">MethodBind4R&lt;R, P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1146.79" y="11769.1953"/><ellipse cx="1151.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="1160.79" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2,P3,P4)</text></a><!--MD5=[7b3902a64b81f472ab380936808f0588]
class C_0000375613860790632263--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3464" target="_top" title="MethodBind4C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3464" xlink:show="new" xlink:title="MethodBind4C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000375613860790632263" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1465.79" y="13075.4531"/><ellipse cx="1680.04" cy="13091.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1683.0088,13097.0938 Q1682.4306,13097.3906 1681.79,13097.5313 Q1681.1494,13097.6875 1680.4463,13097.6875 Q1677.9463,13097.6875 1676.6181,13096.0469 Q1675.3056,13094.3906 1675.3056,13091.2656 Q1675.3056,13088.1406 1676.6181,13086.4844 Q1677.9463,13084.8281 1680.4463,13084.8281 Q1681.1494,13084.8281 1681.79,13084.9844 Q1682.4463,13085.1406 1683.0088,13085.4375 L1683.0088,13088.1563 Q1682.3838,13087.5781 1681.79,13087.3125 Q1681.1963,13087.0313 1680.5713,13087.0313 Q1679.2275,13087.0313 1678.54,13088.1094 Q1677.8525,13089.1719 1677.8525,13091.2656 Q1677.8525,13093.3594 1678.54,13094.4375 Q1679.2275,13095.5 1680.5713,13095.5 Q1681.1963,13095.5 1681.79,13095.2344 Q1682.3838,13094.9531 1683.0088,13094.375 L1683.0088,13097.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="1700.54" y="13095.6074">MethodBind4C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="74" x="1997.79" y="13072.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="1998.79" y="13084.5918">P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1466.79" x2="2067.79" y1="13107.4531" y2="13107.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3468" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3468" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1471.79" y="13113.4531"/><ellipse cx="1476.79" cy="13118.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3468" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3468" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1485.79" y="13121.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1466.79" x2="2067.79" y1="13128.2578" y2="13128.2578"/><ellipse cx="1476.79" cy="13139.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1485.79" y="13142.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1476.79" cy="13152.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1485.79" y="13155.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1476.79" cy="13164.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1485.79" y="13168.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1476.79" cy="13177.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1485.79" y="13180.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1476.79" cy="13190.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1485.79" y="13193.687">get_instance_class() const : String</text><ellipse cx="1476.79" cy="13203.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1485.79" y="13206.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1476.79" cy="13216.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1485.79" y="13219.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1476.79" cy="13228.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1485.79" y="13232.1011">MethodBind4C&lt;P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1471.79" y="13236.6953"/><ellipse cx="1476.79" cy="13241.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="1485.79" y="13244.9058">method : void (__UnexistingClass::*)(P1,P2,P3,P4) const</text></a><!--MD5=[0dba3cdeea08b2509f757ebd26ae2958]
class C_0001053911039767528095--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3674" target="_top" title="MethodBind4RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3674" xlink:show="new" xlink:title="MethodBind4RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001053911039767528095" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1637.79" y="5881.9531"/><ellipse cx="1842.04" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1845.0088,5903.5938 Q1844.4306,5903.8906 1843.79,5904.0313 Q1843.1494,5904.1875 1842.4463,5904.1875 Q1839.9463,5904.1875 1838.6181,5902.5469 Q1837.3056,5900.8906 1837.3056,5897.7656 Q1837.3056,5894.6406 1838.6181,5892.9844 Q1839.9463,5891.3281 1842.4463,5891.3281 Q1843.1494,5891.3281 1843.79,5891.4844 Q1844.4463,5891.6406 1845.0088,5891.9375 L1845.0088,5894.6563 Q1844.3838,5894.0781 1843.79,5893.8125 Q1843.1963,5893.5313 1842.5713,5893.5313 Q1841.2275,5893.5313 1840.54,5894.6094 Q1839.8525,5895.6719 1839.8525,5897.7656 Q1839.8525,5899.8594 1840.54,5900.9375 Q1841.2275,5902 1842.5713,5902 Q1843.1963,5902 1843.79,5901.7344 Q1844.3838,5901.4531 1845.0088,5900.875 L1845.0088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="1862.54" y="5902.1074">MethodBind4RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="86" x="2157.79" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="2158.79" y="5891.0918">R,P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1638.79" x2="2239.79" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3678" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3678" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1643.79" y="5919.9531"/><ellipse cx="1648.79" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3678" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3678" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1657.79" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1638.79" x2="2239.79" y1="5934.7578" y2="5934.7578"/><ellipse cx="1648.79" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1657.79" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1648.79" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1657.79" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1648.79" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1657.79" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1648.79" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1657.79" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1648.79" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1657.79" y="6000.187">get_instance_class() const : String</text><ellipse cx="1648.79" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1657.79" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1648.79" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1657.79" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1648.79" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1657.79" y="6038.6011">MethodBind4RC&lt;R, P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1643.79" y="6043.1953"/><ellipse cx="1648.79" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="1657.79" y="6051.4058">method : R (__UnexistingClass::*)(P1,P2,P3,P4) const</text></a><!--MD5=[01d74cf402958cca4ba75a4a04d8c1a9]
class C_0000462780498821063561--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3884" target="_top" title="MethodBind5" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3884" xlink:show="new" xlink:title="MethodBind5" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000462780498821063561" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1916.79" y="11607.9531"/><ellipse cx="2125.54" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2128.5088,11629.5938 Q2127.9306,11629.8906 2127.29,11630.0313 Q2126.6494,11630.1875 2125.9463,11630.1875 Q2123.4463,11630.1875 2122.1181,11628.5469 Q2120.8056,11626.8906 2120.8056,11623.7656 Q2120.8056,11620.6406 2122.1181,11618.9844 Q2123.4463,11617.3281 2125.9463,11617.3281 Q2126.6494,11617.3281 2127.29,11617.4844 Q2127.9463,11617.6406 2128.5088,11617.9375 L2128.5088,11620.6563 Q2127.8838,11620.0781 2127.29,11619.8125 Q2126.6963,11619.5313 2126.0713,11619.5313 Q2124.7275,11619.5313 2124.04,11620.6094 Q2123.3525,11621.6719 2123.3525,11623.7656 Q2123.3525,11625.8594 2124.04,11626.9375 Q2124.7275,11628 2126.0713,11628 Q2126.6963,11628 2127.29,11627.7344 Q2127.8838,11627.4531 2128.5088,11626.875 L2128.5088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2146.04" y="11628.1074">MethodBind5</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="93" x="2429.79" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="2430.79" y="11617.0918">P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1917.79" x2="2518.79" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3888" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3888" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1922.79" y="11645.9531"/><ellipse cx="1927.79" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3888" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3888" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1936.79" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1917.79" x2="2518.79" y1="11660.7578" y2="11660.7578"/><ellipse cx="1927.79" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1936.79" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1927.79" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1936.79" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1927.79" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1936.79" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1927.79" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1936.79" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1927.79" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1936.79" y="11726.187">get_instance_class() const : String</text><ellipse cx="1927.79" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1936.79" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1927.79" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1936.79" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1927.79" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1936.79" y="11764.6011">MethodBind5&lt;P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1922.79" y="11769.1953"/><ellipse cx="1927.79" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1936.79" y="11777.4058">method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5)</text></a><!--MD5=[ee5ae2bb211f195d8a2bb24077f49263]
class C_0000803203155573352820--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4102" target="_top" title="MethodBind5R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4102" xlink:show="new" xlink:title="MethodBind5R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000803203155573352820" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1809.79" y="4683.4531"/><ellipse cx="2008.54" cy="4699.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2011.5088,4705.0938 Q2010.9306,4705.3906 2010.29,4705.5313 Q2009.6494,4705.6875 2008.9463,4705.6875 Q2006.4463,4705.6875 2005.1181,4704.0469 Q2003.8056,4702.3906 2003.8056,4699.2656 Q2003.8056,4696.1406 2005.1181,4694.4844 Q2006.4463,4692.8281 2008.9463,4692.8281 Q2009.6494,4692.8281 2010.29,4692.9844 Q2010.9463,4693.1406 2011.5088,4693.4375 L2011.5088,4696.1563 Q2010.8838,4695.5781 2010.29,4695.3125 Q2009.6963,4695.0313 2009.0713,4695.0313 Q2007.7275,4695.0313 2007.04,4696.1094 Q2006.3525,4697.1719 2006.3525,4699.2656 Q2006.3525,4701.3594 2007.04,4702.4375 Q2007.7275,4703.5 2009.0713,4703.5 Q2009.6963,4703.5 2010.29,4703.2344 Q2010.8838,4702.9531 2011.5088,4702.375 L2011.5088,4705.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="2029.04" y="4703.6074">MethodBind5R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="105" x="2310.79" y="4680.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="103" x="2311.79" y="4692.5918">R,P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1810.79" x2="2411.79" y1="4715.4531" y2="4715.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4106" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4106" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1815.79" y="4721.4531"/><ellipse cx="1820.79" cy="4726.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4106" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4106" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1829.79" y="4729.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1810.79" x2="2411.79" y1="4736.2578" y2="4736.2578"/><ellipse cx="1820.79" cy="4747.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1829.79" y="4750.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1820.79" cy="4760.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1829.79" y="4763.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1820.79" cy="4772.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1829.79" y="4776.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1820.79" cy="4785.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1829.79" y="4788.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1820.79" cy="4798.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1829.79" y="4801.687">get_instance_class() const : String</text><ellipse cx="1820.79" cy="4811.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1829.79" y="4814.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1820.79" cy="4824.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1829.79" y="4827.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1820.79" cy="4836.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1829.79" y="4840.1011">MethodBind5R&lt;R, P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1815.79" y="4844.6953"/><ellipse cx="1820.79" cy="4849.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="1829.79" y="4852.9058">method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5)</text></a><!--MD5=[84527e5cd0d747f927ab34f5e3f0eb9f]
class C_0001728875246190146863--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4320" target="_top" title="MethodBind5C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4320" xlink:show="new" xlink:title="MethodBind5C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0001728875246190146863" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="2447.79" y="4683.4531"/><ellipse cx="2652.54" cy="4699.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2655.5088,4705.0938 Q2654.9306,4705.3906 2654.29,4705.5313 Q2653.6494,4705.6875 2652.9463,4705.6875 Q2650.4463,4705.6875 2649.1181,4704.0469 Q2647.8056,4702.3906 2647.8056,4699.2656 Q2647.8056,4696.1406 2649.1181,4694.4844 Q2650.4463,4692.8281 2652.9463,4692.8281 Q2653.6494,4692.8281 2654.29,4692.9844 Q2654.9463,4693.1406 2655.5088,4693.4375 L2655.5088,4696.1563 Q2654.8838,4695.5781 2654.29,4695.3125 Q2653.6963,4695.0313 2653.0713,4695.0313 Q2651.7275,4695.0313 2651.04,4696.1094 Q2650.3525,4697.1719 2650.3525,4699.2656 Q2650.3525,4701.3594 2651.04,4702.4375 Q2651.7275,4703.5 2653.0713,4703.5 Q2653.6963,4703.5 2654.29,4703.2344 Q2654.8838,4702.9531 2655.5088,4702.375 L2655.5088,4705.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="2673.04" y="4703.6074">MethodBind5C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="93" x="2960.79" y="4680.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="2961.79" y="4692.5918">P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2448.79" x2="3049.79" y1="4715.4531" y2="4715.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4324" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4324" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2453.79" y="4721.4531"/><ellipse cx="2458.79" cy="4726.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4324" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4324" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2467.79" y="4729.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2448.79" x2="3049.79" y1="4736.2578" y2="4736.2578"/><ellipse cx="2458.79" cy="4747.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2467.79" y="4750.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="2458.79" cy="4760.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="2467.79" y="4763.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="2458.79" cy="4772.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2467.79" y="4776.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="2458.79" cy="4785.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2467.79" y="4788.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="2458.79" cy="4798.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2467.79" y="4801.687">get_instance_class() const : String</text><ellipse cx="2458.79" cy="4811.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="2467.79" y="4814.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="2458.79" cy="4824.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="2467.79" y="4827.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="2458.79" cy="4836.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="2467.79" y="4840.1011">MethodBind5C&lt;P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2453.79" y="4844.6953"/><ellipse cx="2458.79" cy="4849.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="2467.79" y="4852.9058">method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5) const</text></a><!--MD5=[91417ae7b48fde2554ca395f7d7eaa17]
class C_0000319868049196089894--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4538" target="_top" title="MethodBind5RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4538" xlink:show="new" xlink:title="MethodBind5RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="176.0469" id="C_0000319868049196089894" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3085.79" y="4683.4531"/><ellipse cx="3280.54" cy="4699.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3283.5088,4705.0938 Q3282.9306,4705.3906 3282.29,4705.5313 Q3281.6494,4705.6875 3280.9463,4705.6875 Q3278.4463,4705.6875 3277.1181,4704.0469 Q3275.8056,4702.3906 3275.8056,4699.2656 Q3275.8056,4696.1406 3277.1181,4694.4844 Q3278.4463,4692.8281 3280.9463,4692.8281 Q3281.6494,4692.8281 3282.29,4692.9844 Q3282.9463,4693.1406 3283.5088,4693.4375 L3283.5088,4696.1563 Q3282.8838,4695.5781 3282.29,4695.3125 Q3281.6963,4695.0313 3281.0713,4695.0313 Q3279.7275,4695.0313 3279.04,4696.1094 Q3278.3525,4697.1719 3278.3525,4699.2656 Q3278.3525,4701.3594 3279.04,4702.4375 Q3279.7275,4703.5 3281.0713,4703.5 Q3281.6963,4703.5 3282.29,4703.2344 Q3282.8838,4702.9531 3283.5088,4702.375 L3283.5088,4705.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="3301.04" y="4703.6074">MethodBind5RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="105" x="3586.79" y="4680.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="103" x="3587.79" y="4692.5918">R,P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3086.79" x2="3687.79" y1="4715.4531" y2="4715.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3091.79" y="4721.4531"/><ellipse cx="3096.79" cy="4726.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3105.79" y="4729.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3086.79" x2="3687.79" y1="4736.2578" y2="4736.2578"/><ellipse cx="3096.79" cy="4747.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3105.79" y="4750.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3096.79" cy="4760.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3105.79" y="4763.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3096.79" cy="4772.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3105.79" y="4776.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3096.79" cy="4785.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3105.79" y="4788.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3096.79" cy="4798.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3105.79" y="4801.687">get_instance_class() const : String</text><ellipse cx="3096.79" cy="4811.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3105.79" y="4814.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3096.79" cy="4824.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3105.79" y="4827.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3096.79" cy="4836.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="3105.79" y="4840.1011">MethodBind5RC&lt;R, P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3091.79" y="4844.6953"/><ellipse cx="3096.79" cy="4849.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="3105.79" y="4852.9058">method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5) const</text></a><!--MD5=[cefc1761acd014682fb46e6592f2db8a]
class C_0000104564426296396960--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94" target="_top" title="ClassDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94" xlink:show="new" xlink:title="ClassDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="1021.1563" id="C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.5;" width="1524" x="17583.29" y="12652.9531"/><ellipse cx="18316.04" cy="12668.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18319.0088,12674.5938 Q18318.4306,12674.8906 18317.79,12675.0313 Q18317.1494,12675.1875 18316.4463,12675.1875 Q18313.9463,12675.1875 18312.6181,12673.5469 Q18311.3056,12671.8906 18311.3056,12668.7656 Q18311.3056,12665.6406 18312.6181,12663.9844 Q18313.9463,12662.3281 18316.4463,12662.3281 Q18317.1494,12662.3281 18317.79,12662.4844 Q18318.4463,12662.6406 18319.0088,12662.9375 L18319.0088,12665.6563 Q18318.3838,12665.0781 18317.79,12664.8125 Q18317.1963,12664.5313 18316.5713,12664.5313 Q18315.2275,12664.5313 18314.54,12665.6094 Q18313.8525,12666.6719 18313.8525,12668.7656 Q18313.8525,12670.8594 18314.54,12671.9375 Q18315.2275,12673 18316.5713,12673 Q18317.1963,12673 18317.79,12672.7344 Q18318.3838,12672.4531 18319.0088,12671.875 L18319.0088,12674.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="18336.54" y="12673.1074">ClassDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17584.29" x2="19106.29" y1="12684.9531" y2="12684.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" xlink:show="new" xlink:title="lock" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12690.9531"/><ellipse cx="17594.29" cy="12695.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" xlink:show="new" xlink:title="lock" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="75" x="17603.29" y="12699.1636">lock : RWLock</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" target="_top" title="classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" xlink:show="new" xlink:title="classes" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12703.7578"/><ellipse cx="17594.29" cy="12708.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" target="_top" title="classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" xlink:show="new" xlink:title="classes" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="306" x="17603.29" y="12711.9683">classes : HashMap&lt;StringName,ClassDB::ClassInfo&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" target="_top" title="resource_base_extensions" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" xlink:show="new" xlink:title="resource_base_extensions" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12716.5625"/><ellipse cx="17594.29" cy="12721.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" target="_top" title="resource_base_extensions" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" xlink:show="new" xlink:title="resource_base_extensions" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="373" x="17603.29" y="12724.7729">resource_base_extensions : HashMap&lt;StringName,StringName&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" target="_top" title="compat_classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" xlink:show="new" xlink:title="compat_classes" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12729.3672"/><ellipse cx="17594.29" cy="12734.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" target="_top" title="compat_classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" xlink:show="new" xlink:title="compat_classes" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="312" x="17603.29" y="12737.5776">compat_classes : HashMap&lt;StringName,StringName&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" target="_top" title="current_api" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" xlink:show="new" xlink:title="current_api" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12742.1719"/><ellipse cx="17594.29" cy="12747.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" target="_top" title="current_api" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" xlink:show="new" xlink:title="current_api" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="17603.29" y="12750.3823">current_api : ClassDB::APIType</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" target="_top" title="default_values" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" xlink:show="new" xlink:title="default_values" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12754.9766"/><ellipse cx="17594.29" cy="12759.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" target="_top" title="default_values" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" xlink:show="new" xlink:title="default_values" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="416" x="17603.29" y="12763.187">default_values : HashMap&lt;StringName,HashMap&lt;StringName,Variant&gt;&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" target="_top" title="default_values_cached" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" xlink:show="new" xlink:title="default_values_cached" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="17589.29" y="12767.7813"/><ellipse cx="17594.29" cy="12772.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" target="_top" title="default_values_cached" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" xlink:show="new" xlink:title="default_values_cached" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="244" x="17603.29" y="12775.9917">default_values_cached : Set&lt;StringName&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="17584.29" x2="19106.29" y1="12782.5859" y2="12782.5859"/><ellipse cx="17594.29" cy="12793.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="856" x="17603.29" y="12796.7964">bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition &amp; method_name, const Variant ** p_defs, int p_defcount) : MethodBind *</text><ellipse cx="17594.29" cy="12806.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="460" x="17603.29" y="12809.6011">_add_class2(const StringName &amp; p_class, const StringName &amp; p_inherits) : void</text><ellipse cx="17594.29" cy="12819.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="296" x="17603.29" y="12822.4058">get_class_list(List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="17594.29" cy="12832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="538" x="17603.29" y="12835.2104">get_inheriters_from_class(const StringName &amp; p_class, List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="17594.29" cy="12844.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="576" x="17603.29" y="12848.0151">get_direct_inheriters_from_class(const StringName &amp; p_class, List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="17594.29" cy="12857.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="399" x="17603.29" y="12860.8198">get_parent_class_nocheck(const StringName &amp; p_class) : StringName</text><ellipse cx="17594.29" cy="12870.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="347" x="17603.29" y="12873.6245">get_parent_class(const StringName &amp; p_class) : StringName</text><ellipse cx="17594.29" cy="12883.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="17603.29" y="12886.4292">class_exists(const StringName &amp; p_class) : bool</text><ellipse cx="17594.29" cy="12896.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="480" x="17603.29" y="12899.2339">is_parent_class(const StringName &amp; p_class, const StringName &amp; p_inherits) : bool</text><ellipse cx="17594.29" cy="12908.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="17603.29" y="12912.0386">can_instance(const StringName &amp; p_class) : bool</text><ellipse cx="17594.29" cy="12921.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="17603.29" y="12924.8433">instance(const StringName &amp; p_class) : Object *</text><ellipse cx="17594.29" cy="12934.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="354" x="17603.29" y="12937.6479">get_api_type(const StringName &amp; p_class) : ClassDB::APIType</text><ellipse cx="17594.29" cy="12947.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="17603.29" y="12950.4526">get_api_hash(ClassDB::APIType p_api) : uint64_t</text><ellipse cx="17594.29" cy="12960.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="388" x="17603.29" y="12963.2573">add_signal(StringName p_class, const MethodInfo &amp; p_signal) : void</text><ellipse cx="17594.29" cy="12972.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="345" x="17603.29" y="12976.062">has_signal(StringName p_class, StringName p_signal) : bool</text><ellipse cx="17594.29" cy="12985.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="471" x="17603.29" y="12988.8667">get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool</text><ellipse cx="17594.29" cy="12998.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="591" x="17603.29" y="13001.6714">get_signal_list(StringName p_class, List&lt;MethodInfo&gt; * p_signals, bool p_no_inheritance = false) : void</text><ellipse cx="17594.29" cy="13011.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="578" x="17603.29" y="13014.4761">add_property_group(StringName p_class, const String &amp; p_name, const String &amp; p_prefix = "") : void</text><ellipse cx="17594.29" cy="13024.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="850" x="17603.29" y="13027.2808">add_property(StringName p_class, const PropertyInfo &amp; p_pinfo, const StringName &amp; p_setter, const StringName &amp; p_getter, int p_index = -1) : void</text><ellipse cx="17594.29" cy="13036.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="636" x="17603.29" y="13040.0854">set_property_default_value(StringName p_class, const StringName &amp; p_name, const Variant &amp; p_default) : void</text><ellipse cx="17594.29" cy="13049.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="792" x="17603.29" y="13052.8901">get_property_list(StringName p_class, List&lt;PropertyInfo&gt; * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void</text><ellipse cx="17594.29" cy="13062.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="678" x="17603.29" y="13065.6948">set_property(Object * p_object, const StringName &amp; p_property, const Variant &amp; p_value, bool * r_valid = __null) : bool</text><ellipse cx="17594.29" cy="13075.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="509" x="17603.29" y="13078.4995">get_property(Object * p_object, const StringName &amp; p_property, Variant &amp; r_value) : bool</text><ellipse cx="17594.29" cy="13088.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="648" x="17603.29" y="13091.3042">has_property(const StringName &amp; p_class, const StringName &amp; p_property, bool p_no_inheritance = false) : bool</text><ellipse cx="17594.29" cy="13100.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="642" x="17603.29" y="13104.1089">get_property_index(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_is_valid = __null) : int</text><ellipse cx="17594.29" cy="13113.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="697" x="17603.29" y="13116.9136">get_property_type(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_is_valid = __null) : Variant::Type</text><ellipse cx="17594.29" cy="13126.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="502" x="17603.29" y="13129.7183">get_property_setter(StringName p_class, const StringName &amp; p_property) : StringName</text><ellipse cx="17594.29" cy="13139.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="502" x="17603.29" y="13142.5229">get_property_getter(StringName p_class, const StringName &amp; p_property) : StringName</text><ellipse cx="17594.29" cy="13152.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="540" x="17603.29" y="13155.3276">has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool</text><ellipse cx="17594.29" cy="13164.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="460" x="17603.29" y="13168.1323">set_method_flags(StringName p_class, StringName p_method, int p_flags) : void</text><ellipse cx="17594.29" cy="13177.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="844" x="17603.29" y="13180.937">get_method_list(StringName p_class, List&lt;MethodInfo&gt; * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void</text><ellipse cx="17594.29" cy="13190.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="401" x="17603.29" y="13193.7417">get_method(StringName p_class, StringName p_name) : MethodBind *</text><ellipse cx="17594.29" cy="13203.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="620" x="17603.29" y="13206.5464">add_virtual_method(const StringName &amp; p_class, const MethodInfo &amp; p_method, bool p_virtual = true) : void</text><ellipse cx="17594.29" cy="13216.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="683" x="17603.29" y="13219.3511">get_virtual_methods(const StringName &amp; p_class, List&lt;MethodInfo&gt; * p_methods, bool p_no_inheritance = false) : void</text><ellipse cx="17594.29" cy="13228.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="765" x="17603.29" y="13232.1558">bind_integer_constant(const StringName &amp; p_class, const StringName &amp; p_enum, const StringName &amp; p_name, int p_constant) : void</text><ellipse cx="17594.29" cy="13241.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="688" x="17603.29" y="13244.9604">get_integer_constant_list(const StringName &amp; p_class, List&lt;String&gt; * p_constants, bool p_no_inheritance = false) : void</text><ellipse cx="17594.29" cy="13254.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="644" x="17603.29" y="13257.7651">get_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name, bool * p_success = __null) : int</text><ellipse cx="17594.29" cy="13267.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="757" x="17603.29" y="13270.5698">get_integer_constant_enum(const StringName &amp; p_class, const StringName &amp; p_name, bool p_no_inheritance = false) : StringName</text><ellipse cx="17594.29" cy="13280.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="641" x="17603.29" y="13283.3745">get_enum_list(const StringName &amp; p_class, List&lt;StringName&gt; * p_enums, bool p_no_inheritance = false) : void</text><ellipse cx="17594.29" cy="13292.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="870" x="17603.29" y="13296.1792">get_enum_constants(const StringName &amp; p_class, const StringName &amp; p_enum, List&lt;StringName&gt; * p_constants, bool p_no_inheritance = false) : void</text><ellipse cx="17594.29" cy="13305.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="733" x="17603.29" y="13308.9839">class_get_default_property_value(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_valid = __null) : Variant</text><ellipse cx="17594.29" cy="13318.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="321" x="17603.29" y="13321.7886">get_category(const StringName &amp; p_node) : StringName</text><ellipse cx="17594.29" cy="13331.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="349" x="17603.29" y="13334.5933">set_class_enabled(StringName p_class, bool p_enable) : void</text><ellipse cx="17594.29" cy="13344.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="255" x="17603.29" y="13347.3979">is_class_enabled(StringName p_class) : bool</text><ellipse cx="17594.29" cy="13356.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="17603.29" y="13360.2026">is_class_exposed(StringName p_class) : bool</text><ellipse cx="17594.29" cy="13369.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="575" x="17603.29" y="13373.0073">add_resource_base_extension(const StringName &amp; p_extension, const StringName &amp; p_class) : void</text><ellipse cx="17594.29" cy="13382.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="381" x="17603.29" y="13385.812">get_resource_base_extensions(List&lt;String&gt; * p_extensions) : void</text><ellipse cx="17594.29" cy="13395.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="513" x="17603.29" y="13398.6167">get_extensions_for_type(const StringName &amp; p_class, List&lt;String&gt; * p_extensions) : void</text><ellipse cx="17594.29" cy="13408.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="524" x="17603.29" y="13411.4214">add_compatibility_class(const StringName &amp; p_class, const StringName &amp; p_fallback) : void</text><ellipse cx="17594.29" cy="13421.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="265" x="17603.29" y="13424.2261">set_current_api(ClassDB::APIType p_api) : void</text><ellipse cx="17594.29" cy="13433.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="17603.29" y="13437.0308">get_current_api() : ClassDB::APIType</text><ellipse cx="17594.29" cy="13446.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="17603.29" y="13449.8354">cleanup_defaults() : void</text><ellipse cx="17594.29" cy="13459.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="87" x="17603.29" y="13462.6401">cleanup() : void</text><ellipse cx="17594.29" cy="13472.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="17603.29" y="13475.4448">creator() : class Object *</text><ellipse cx="17594.29" cy="13485.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="17603.29" y="13488.2495">_add_class() : void</text><ellipse cx="17594.29" cy="13497.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="17603.29" y="13501.0542">register_class() : void</text><ellipse cx="17594.29" cy="13510.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="165" x="17603.29" y="13513.8589">register_virtual_class() : void</text><ellipse cx="17594.29" cy="13523.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="194" x="17603.29" y="13526.6636">_create_ptr_func() : class Object *</text><ellipse cx="17594.29" cy="13536.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="226" x="17603.29" y="13539.4683">register_custom_instance_class() : void</text><ellipse cx="17594.29" cy="13549.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="386" x="17603.29" y="13552.2729">bind_method(N p_method_name, M p_method) : class MethodBind *</text><ellipse cx="17594.29" cy="13561.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="525" x="17603.29" y="13565.0776">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1) : class MethodBind *</text><ellipse cx="17594.29" cy="13574.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="664" x="17603.29" y="13577.8823">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2) : class MethodBind *</text><ellipse cx="17594.29" cy="13587.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="803" x="17603.29" y="13590.687">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3) : class MethodBind *</text><ellipse cx="17594.29" cy="13600.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="942" x="17603.29" y="13603.4917">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4) : class MethodBind *</text><ellipse cx="17594.29" cy="13613.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1081" x="17603.29" y="13616.2964">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5) : class MethodBind *</text><ellipse cx="17594.29" cy="13625.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1220" x="17603.29" y="13629.1011">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6) : class MethodBind *</text><ellipse cx="17594.29" cy="13638.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1359" x="17603.29" y="13641.9058">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6, const Variant &amp; p_def7) : class MethodBind *</text><ellipse cx="17594.29" cy="13651.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1498" x="17603.29" y="13654.7104">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6, const Variant &amp; p_def7, const Variant &amp; p_def8) : class MethodBind *</text><ellipse cx="17594.29" cy="13664.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1343" x="17603.29" y="13667.5151">bind_vararg_method(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo &amp; p_info = MethodInfo(), const Vector&lt;Variant&gt; &amp; p_default_args = Vector&lt;Variant&gt;(), bool p_return_nil_is_variant = true) : class MethodBind *</text><!--MD5=[fde6ed13e18da825139d9e33a0c6db3f]
class C_0001778859257025660860--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39" target="_top" title="Reference" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39" xlink:show="new" xlink:title="Reference" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="291.2891" id="C_0001778859257025660860" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="22706.79" y="2206.4531"/><ellipse cx="22871.04" cy="2222.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22874.0088,2228.0938 Q22873.4306,2228.3906 22872.79,2228.5313 Q22872.1494,2228.6875 22871.4463,2228.6875 Q22868.9463,2228.6875 22867.6181,2227.0469 Q22866.3056,2225.3906 22866.3056,2222.2656 Q22866.3056,2219.1406 22867.6181,2217.4844 Q22868.9463,2215.8281 22871.4463,2215.8281 Q22872.1494,2215.8281 22872.79,2215.9844 Q22873.4463,2216.1406 22874.0088,2216.4375 L22874.0088,2219.1563 Q22873.3838,2218.5781 22872.79,2218.3125 Q22872.1963,2218.0313 22871.5713,2218.0313 Q22870.2275,2218.0313 22869.54,2219.1094 Q22868.8525,2220.1719 22868.8525,2222.2656 Q22868.8525,2224.3594 22869.54,2225.4375 Q22870.2275,2226.5 22871.5713,2226.5 Q22872.1963,2226.5 22872.79,2226.2344 Q22873.3838,2225.9531 22874.0088,2225.375 L22874.0088,2228.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="22891.54" y="2226.6074">Reference</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22707.79" x2="23106.79" y1="2238.4531" y2="2238.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22707.79" x2="23106.79" y1="2246.4531" y2="2246.4531"/><ellipse cx="22717.79" cy="2257.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="22726.79" y="2260.6636">get_class() const : String</text><ellipse cx="22717.79" cy="2270.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="22726.79" y="2273.4683">_get_class_namev() const : const StringName *</text><ellipse cx="22717.79" cy="2283.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="22726.79" y="2286.2729">get_class_ptr_static() : void *</text><ellipse cx="22717.79" cy="2295.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="22726.79" y="2299.0776">get_class_static() : String</text><ellipse cx="22717.79" cy="2308.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="22726.79" y="2311.8823">get_parent_class_static() : String</text><ellipse cx="22717.79" cy="2321.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="22726.79" y="2324.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="22717.79" cy="2334.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="22726.79" y="2337.4917">get_category_static() : String</text><ellipse cx="22717.79" cy="2347.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="22726.79" y="2350.2964">inherits_static() : String</text><ellipse cx="22717.79" cy="2359.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="22726.79" y="2363.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="22717.79" cy="2372.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="22726.79" y="2375.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="22717.79" cy="2385.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="22726.79" y="2388.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="22717.79" cy="2398.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="22726.79" y="2401.5151">initialize_class() : void</text><ellipse cx="22717.79" cy="2411.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="22726.79" y="2414.3198">is_referenced() const : bool</text><ellipse cx="22717.79" cy="2423.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="22726.79" y="2427.1245">init_ref() : bool</text><ellipse cx="22717.79" cy="2436.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="22726.79" y="2439.9292">reference() : bool</text><ellipse cx="22717.79" cy="2449.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="22726.79" y="2452.7339">unreference() : bool</text><ellipse cx="22717.79" cy="2462.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="22726.79" y="2465.5386">reference_get_count() const : int</text><ellipse cx="22717.79" cy="2475.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="22726.79" y="2478.3433">Reference() : void</text><ellipse cx="22717.79" cy="2487.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="22726.79" y="2491.1479">~Reference() : void</text></a><!--MD5=[5360686211fdfa9f40545236d2116688]
class C_0001213123647052694419--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L301" target="_top" title="WeakRef" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L301" xlink:show="new" xlink:title="WeakRef" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="252.875" id="C_0001213123647052694419" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="17451.79" y="8706.4531"/><ellipse cx="17621.04" cy="8722.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17624.0088,8728.0938 Q17623.4306,8728.3906 17622.79,8728.5313 Q17622.1494,8728.6875 17621.4463,8728.6875 Q17618.9463,8728.6875 17617.6181,8727.0469 Q17616.3056,8725.3906 17616.3056,8722.2656 Q17616.3056,8719.1406 17617.6181,8717.4844 Q17618.9463,8715.8281 17621.4463,8715.8281 Q17622.1494,8715.8281 17622.79,8715.9844 Q17623.4463,8716.1406 17624.0088,8716.4375 L17624.0088,8719.1563 Q17623.3838,8718.5781 17622.79,8718.3125 Q17622.1963,8718.0313 17621.5713,8718.0313 Q17620.2275,8718.0313 17619.54,8719.1094 Q17618.8525,8720.1719 17618.8525,8722.2656 Q17618.8525,8724.3594 17619.54,8725.4375 Q17620.2275,8726.5 17621.5713,8726.5 Q17622.1963,8726.5 17622.79,8726.2344 Q17623.3838,8725.9531 17624.0088,8725.375 L17624.0088,8728.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="17641.54" y="8726.6074">WeakRef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17452.79" x2="17851.79" y1="8738.4531" y2="8738.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="17452.79" x2="17851.79" y1="8746.4531" y2="8746.4531"/><ellipse cx="17462.79" cy="8757.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="17471.79" y="8760.6636">get_class() const : String</text><ellipse cx="17462.79" cy="8770.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="17471.79" y="8773.4683">_get_class_namev() const : const StringName *</text><ellipse cx="17462.79" cy="8783.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="17471.79" y="8786.2729">get_class_ptr_static() : void *</text><ellipse cx="17462.79" cy="8795.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="17471.79" y="8799.0776">get_class_static() : String</text><ellipse cx="17462.79" cy="8808.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="17471.79" y="8811.8823">get_parent_class_static() : String</text><ellipse cx="17462.79" cy="8821.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="17471.79" y="8824.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="17462.79" cy="8834.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="17471.79" y="8837.4917">get_category_static() : String</text><ellipse cx="17462.79" cy="8847.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="17471.79" y="8850.2964">inherits_static() : String</text><ellipse cx="17462.79" cy="8859.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="17471.79" y="8863.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="17462.79" cy="8872.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="17471.79" y="8875.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="17462.79" cy="8885.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="17471.79" y="8888.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="17462.79" cy="8898.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="17471.79" y="8901.5151">initialize_class() : void</text><ellipse cx="17462.79" cy="8911.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="17471.79" y="8914.3198">get_ref() const : Variant</text><ellipse cx="17462.79" cy="8923.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="17471.79" y="8927.1245">set_obj(Object * p_object) : void</text><ellipse cx="17462.79" cy="8936.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="17471.79" y="8939.9292">set_ref(const REF &amp; p_ref) : void</text><ellipse cx="17462.79" cy="8949.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="17471.79" y="8952.7339">WeakRef() : void</text></a><!--MD5=[dd2998d45ec54ba5be719aa7e503205b]
class C_0000218299049716973303--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55" target="_top" title="Node" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55" xlink:show="new" xlink:title="Node" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="2160.7734" id="C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.5;" width="1447" x="26602.79" y="3690.9531"/><ellipse cx="27305.54" cy="3706.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27308.5088,3712.5938 Q27307.9306,3712.8906 27307.29,3713.0313 Q27306.6494,3713.1875 27305.9463,3713.1875 Q27303.4463,3713.1875 27302.1181,3711.5469 Q27300.8056,3709.8906 27300.8056,3706.7656 Q27300.8056,3703.6406 27302.1181,3701.9844 Q27303.4463,3700.3281 27305.9463,3700.3281 Q27306.6494,3700.3281 27307.29,3700.4844 Q27307.9463,3700.6406 27308.5088,3700.9375 L27308.5088,3703.6563 Q27307.8838,3703.0781 27307.29,3702.8125 Q27306.6963,3702.5313 27306.0713,3702.5313 Q27304.7275,3702.5313 27304.04,3703.6094 Q27303.3525,3704.6719 27303.3525,3706.7656 Q27303.3525,3708.8594 27304.04,3709.9375 Q27304.7275,3711 27306.0713,3711 Q27306.6963,3711 27307.29,3710.7344 Q27307.8838,3710.4531 27308.5088,3709.875 L27308.5088,3712.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="27326.04" y="3711.1074">Node</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26603.79" x2="28048.79" y1="3722.9531" y2="3722.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" target="_top" title="orphan_node_count" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" xlink:show="new" xlink:title="orphan_node_count" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26608.79" y="3728.9531"/><ellipse cx="26613.79" cy="3733.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" target="_top" title="orphan_node_count" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" xlink:show="new" xlink:title="orphan_node_count" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="137" x="26622.79" y="3737.1636">orphan_node_count : int</text></a><ellipse cx="26613.79" cy="3746.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="26622.79" y="3749.9683">NOTIFICATION_ENTER_TREE : enum</text><ellipse cx="26613.79" cy="3759.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26622.79" y="3762.7729">NOTIFICATION_EXIT_TREE : enum</text><ellipse cx="26613.79" cy="3772.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26622.79" y="3775.5776">NOTIFICATION_MOVED_IN_PARENT : enum</text><ellipse cx="26613.79" cy="3785.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26622.79" y="3788.3823">NOTIFICATION_READY : enum</text><ellipse cx="26613.79" cy="3797.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26622.79" y="3801.187">NOTIFICATION_PAUSED : enum</text><ellipse cx="26613.79" cy="3810.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26622.79" y="3813.9917">NOTIFICATION_UNPAUSED : enum</text><ellipse cx="26613.79" cy="3823.5859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="26622.79" y="3826.7964">NOTIFICATION_PHYSICS_PROCESS : enum</text><ellipse cx="26613.79" cy="3836.3906" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="26622.79" y="3839.6011">NOTIFICATION_PROCESS : enum</text><ellipse cx="26613.79" cy="3849.1953" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26622.79" y="3852.4058">NOTIFICATION_PARENTED : enum</text><ellipse cx="26613.79" cy="3862" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="26622.79" y="3865.2104">NOTIFICATION_UNPARENTED : enum</text><ellipse cx="26613.79" cy="3874.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26622.79" y="3878.0151">NOTIFICATION_INSTANCED : enum</text><ellipse cx="26613.79" cy="3887.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="26622.79" y="3890.8198">NOTIFICATION_DRAG_BEGIN : enum</text><ellipse cx="26613.79" cy="3900.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="26622.79" y="3903.6245">NOTIFICATION_DRAG_END : enum</text><ellipse cx="26613.79" cy="3913.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="26622.79" y="3916.4292">NOTIFICATION_PATH_CHANGED : enum</text><ellipse cx="26613.79" cy="3926.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="26622.79" y="3929.2339">NOTIFICATION_INTERNAL_PROCESS : enum</text><ellipse cx="26613.79" cy="3938.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="26622.79" y="3942.0386">NOTIFICATION_INTERNAL_PHYSICS_PROCESS : enum</text><ellipse cx="26613.79" cy="3951.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="26622.79" y="3954.8433">NOTIFICATION_POST_ENTER_TREE : enum</text><ellipse cx="26613.79" cy="3964.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="26622.79" y="3967.6479">NOTIFICATION_WM_MOUSE_ENTER : enum</text><ellipse cx="26613.79" cy="3977.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="26622.79" y="3980.4526">NOTIFICATION_WM_MOUSE_EXIT : enum</text><ellipse cx="26613.79" cy="3990.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26622.79" y="3993.2573">NOTIFICATION_WM_FOCUS_IN : enum</text><ellipse cx="26613.79" cy="4002.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="26622.79" y="4006.062">NOTIFICATION_WM_FOCUS_OUT : enum</text><ellipse cx="26613.79" cy="4015.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26622.79" y="4018.8667">NOTIFICATION_WM_QUIT_REQUEST : enum</text><ellipse cx="26613.79" cy="4028.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="26622.79" y="4031.6714">NOTIFICATION_WM_GO_BACK_REQUEST : enum</text><ellipse cx="26613.79" cy="4041.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="26622.79" y="4044.4761">NOTIFICATION_WM_UNFOCUS_REQUEST : enum</text><ellipse cx="26613.79" cy="4054.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="26622.79" y="4057.2808">NOTIFICATION_OS_MEMORY_WARNING : enum</text><ellipse cx="26613.79" cy="4066.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="26622.79" y="4070.0854">NOTIFICATION_TRANSLATION_CHANGED : enum</text><ellipse cx="26613.79" cy="4079.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26622.79" y="4082.8901">NOTIFICATION_WM_ABOUT : enum</text><ellipse cx="26613.79" cy="4092.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26622.79" y="4095.6948">NOTIFICATION_CRASH : enum</text><ellipse cx="26613.79" cy="4105.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="26622.79" y="4108.4995">NOTIFICATION_OS_IME_UPDATE : enum</text><ellipse cx="26613.79" cy="4118.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="26622.79" y="4121.3042">NOTIFICATION_APP_RESUMED : enum</text><ellipse cx="26613.79" cy="4130.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="26622.79" y="4134.1089">NOTIFICATION_APP_PAUSED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26603.79" x2="28048.79" y1="4140.7031" y2="4140.7031"/><ellipse cx="26613.79" cy="4151.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26622.79" y="4154.9136">get_class() const : String</text><ellipse cx="26613.79" cy="4164.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26622.79" y="4167.7183">_get_class_namev() const : const StringName *</text><ellipse cx="26613.79" cy="4177.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26622.79" y="4180.5229">get_class_ptr_static() : void *</text><ellipse cx="26613.79" cy="4190.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26622.79" y="4193.3276">get_class_static() : String</text><ellipse cx="26613.79" cy="4202.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26622.79" y="4206.1323">get_parent_class_static() : String</text><ellipse cx="26613.79" cy="4215.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26622.79" y="4218.937">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26613.79" cy="4228.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26622.79" y="4231.7417">get_category_static() : String</text><ellipse cx="26613.79" cy="4241.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26622.79" y="4244.5464">inherits_static() : String</text><ellipse cx="26613.79" cy="4254.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26622.79" y="4257.3511">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26613.79" cy="4266.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26622.79" y="4270.1558">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26613.79" cy="4279.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26622.79" y="4282.9604">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26613.79" cy="4292.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26622.79" y="4295.7651">initialize_class() : void</text><ellipse cx="26613.79" cy="4305.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="26622.79" y="4308.5698">get_name() const : StringName</text><ellipse cx="26613.79" cy="4318.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26622.79" y="4321.3745">set_name(const String &amp; p_name) : void</text><ellipse cx="26613.79" cy="4330.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="26622.79" y="4334.1792">add_child(Node * p_child, bool p_legible_unique_name = false) : void</text><ellipse cx="26613.79" cy="4343.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="26622.79" y="4346.9839">add_child_below_node(Node * p_node, Node * p_child, bool p_legible_unique_name = false) : void</text><ellipse cx="26613.79" cy="4356.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="26622.79" y="4359.7886">remove_child(Node * p_child) : void</text><ellipse cx="26613.79" cy="4369.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="26622.79" y="4372.5933">get_child_count() const : int</text><ellipse cx="26613.79" cy="4382.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="26622.79" y="4385.3979">get_child(int p_index) const : Node *</text><ellipse cx="26613.79" cy="4394.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="26622.79" y="4398.2026">has_node(const NodePath &amp; p_path) const : bool</text><ellipse cx="26613.79" cy="4407.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="26622.79" y="4411.0073">get_node(const NodePath &amp; p_path) const : Node *</text><ellipse cx="26613.79" cy="4420.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="26622.79" y="4423.812">get_node_or_null(const NodePath &amp; p_path) const : Node *</text><ellipse cx="26613.79" cy="4433.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="548" x="26622.79" y="4436.6167">find_node(const String &amp; p_mask, bool p_recursive = true, bool p_owned = true) const : Node *</text><ellipse cx="26613.79" cy="4446.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="26622.79" y="4449.4214">has_node_and_resource(const NodePath &amp; p_path) const : bool</text><ellipse cx="26613.79" cy="4459.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="886" x="26622.79" y="4462.2261">get_node_and_resource(const NodePath &amp; p_path, RES &amp; r_res, Vector&lt;StringName&gt; &amp; r_leftover_subpath, bool p_last_is_property = true) const : Node *</text><ellipse cx="26613.79" cy="4471.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="26622.79" y="4475.0308">get_parent() const : Node *</text><ellipse cx="26613.79" cy="4484.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="26622.79" y="4487.8354">find_parent(const String &amp; p_mask) const : Node *</text><ellipse cx="26613.79" cy="4497.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26622.79" y="4500.6401">get_tree() const : SceneTree *</text><ellipse cx="26613.79" cy="4510.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26622.79" y="4513.4448">is_inside_tree() const : bool</text><ellipse cx="26613.79" cy="4523.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="26622.79" y="4526.2495">is_a_parent_of(const Node * p_node) const : bool</text><ellipse cx="26613.79" cy="4535.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="26622.79" y="4539.0542">is_greater_than(const Node * p_node) const : bool</text><ellipse cx="26613.79" cy="4548.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26622.79" y="4551.8589">get_path() const : NodePath</text><ellipse cx="26613.79" cy="4561.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="26622.79" y="4564.6636">get_path_to(const Node * p_node) const : NodePath</text><ellipse cx="26613.79" cy="4574.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="26622.79" y="4577.4683">find_common_parent_with(const Node * p_node) const : Node *</text><ellipse cx="26613.79" cy="4587.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="26622.79" y="4590.2729">add_to_group(const StringName &amp; p_identifier, bool p_persistent = false) : void</text><ellipse cx="26613.79" cy="4599.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="26622.79" y="4603.0776">remove_from_group(const StringName &amp; p_identifier) : void</text><ellipse cx="26613.79" cy="4612.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="26622.79" y="4615.8823">is_in_group(const StringName &amp; p_identifier) const : bool</text><ellipse cx="26613.79" cy="4625.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="26622.79" y="4628.687">get_groups(List&lt;Node::GroupInfo&gt; * p_groups) const : void</text><ellipse cx="26613.79" cy="4638.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26622.79" y="4641.4917">get_persistent_group_count() const : int</text><ellipse cx="26613.79" cy="4651.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="26622.79" y="4654.2964">move_child(Node * p_child, int p_pos) : void</text><ellipse cx="26613.79" cy="4663.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="26622.79" y="4667.1011">raise() : void</text><ellipse cx="26613.79" cy="4676.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="26622.79" y="4679.9058">set_owner(Node * p_owner) : void</text><ellipse cx="26613.79" cy="4689.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26622.79" y="4692.7104">get_owner() const : Node *</text><ellipse cx="26613.79" cy="4702.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="26622.79" y="4705.5151">get_owned_by(Node * p_by, List&lt;Node *&gt; * p_owned) : void</text><ellipse cx="26613.79" cy="4715.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26622.79" y="4718.3198">remove_and_skip() : void</text><ellipse cx="26613.79" cy="4727.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26622.79" y="4731.1245">get_index() const : int</text><ellipse cx="26613.79" cy="4740.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="26622.79" y="4743.9292">print_tree() : void</text><ellipse cx="26613.79" cy="4753.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26622.79" y="4756.7339">print_tree_pretty() : void</text><ellipse cx="26613.79" cy="4766.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="26622.79" y="4769.5386">set_filename(const String &amp; p_filename) : void</text><ellipse cx="26613.79" cy="4779.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="26622.79" y="4782.3433">get_filename() const : String</text><ellipse cx="26613.79" cy="4791.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="26622.79" y="4795.1479">set_editor_description(const String &amp; p_editor_description) : void</text><ellipse cx="26613.79" cy="4804.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="26622.79" y="4807.9526">get_editor_description() const : String</text><ellipse cx="26613.79" cy="4817.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="26622.79" y="4820.7573">set_editable_instance(Node * p_node, bool p_editable) : void</text><ellipse cx="26613.79" cy="4830.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="26622.79" y="4833.562">is_editable_instance(const Node * p_node) const : bool</text><ellipse cx="26613.79" cy="4843.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="26622.79" y="4846.3667">get_deepest_editable_node(Node * start_node) const : Node *</text><ellipse cx="26613.79" cy="4855.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="26622.79" y="4859.1714">propagate_notification(int p_notification) : void</text><ellipse cx="26613.79" cy="4868.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="26622.79" y="4871.9761">propagate_call(const StringName &amp; p_method, const Array &amp; p_args = Array(), const bool p_parent_first = false) : void</text><ellipse cx="26613.79" cy="4881.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="26622.79" y="4884.7808">set_physics_process(bool p_process) : void</text><ellipse cx="26613.79" cy="4894.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="26622.79" y="4897.5854">get_physics_process_delta_time() const : float</text><ellipse cx="26613.79" cy="4907.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="26622.79" y="4910.3901">is_physics_processing() const : bool</text><ellipse cx="26613.79" cy="4919.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="26622.79" y="4923.1948">set_process(bool p_idle_process) : void</text><ellipse cx="26613.79" cy="4932.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="26622.79" y="4935.9995">get_process_delta_time() const : float</text><ellipse cx="26613.79" cy="4945.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26622.79" y="4948.8042">is_processing() const : bool</text><ellipse cx="26613.79" cy="4958.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26622.79" y="4961.6089">set_physics_process_internal(bool p_process_internal) : void</text><ellipse cx="26613.79" cy="4971.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="26622.79" y="4974.4136">is_physics_processing_internal() const : bool</text><ellipse cx="26613.79" cy="4984.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="26622.79" y="4987.2183">set_process_internal(bool p_idle_process_internal) : void</text><ellipse cx="26613.79" cy="4996.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="26622.79" y="5000.0229">is_processing_internal() const : bool</text><ellipse cx="26613.79" cy="5009.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="26622.79" y="5012.8276">set_process_priority(int p_priority) : void</text><ellipse cx="26613.79" cy="5022.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="26622.79" y="5025.6323">get_process_priority() const : int</text><ellipse cx="26613.79" cy="5035.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="26622.79" y="5038.437">set_process_input(bool p_enable) : void</text><ellipse cx="26613.79" cy="5048.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26622.79" y="5051.2417">is_processing_input() const : bool</text><ellipse cx="26613.79" cy="5060.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="26622.79" y="5064.0464">set_process_unhandled_input(bool p_enable) : void</text><ellipse cx="26613.79" cy="5073.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="26622.79" y="5076.8511">is_processing_unhandled_input() const : bool</text><ellipse cx="26613.79" cy="5086.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="26622.79" y="5089.6558">set_process_unhandled_key_input(bool p_enable) : void</text><ellipse cx="26613.79" cy="5099.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="26622.79" y="5102.4604">is_processing_unhandled_key_input() const : bool</text><ellipse cx="26613.79" cy="5112.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="26622.79" y="5115.2651">get_position_in_parent() const : int</text><ellipse cx="26613.79" cy="5124.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="26622.79" y="5128.0698">duplicate(int p_flags = DUPLICATE_GROUPS | DUPLICATE_SIGNALS | DUPLICATE_SCRIPTS) const : Node *</text><ellipse cx="26613.79" cy="5137.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="26622.79" y="5140.8745">duplicate_and_reown(const Map&lt;Node *,Node *&gt; &amp; p_reown_map) const : Node *</text><ellipse cx="26613.79" cy="5150.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="26622.79" y="5153.6792">duplicate_from_editor(Map&lt;const Node *,Node *&gt; &amp; r_duplimap) const : Node *</text><ellipse cx="26613.79" cy="5163.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="713" x="26622.79" y="5166.4839">duplicate_from_editor(Map&lt;const Node *,Node *&gt; &amp; r_duplimap, const Map&lt;RES,RES&gt; &amp; p_resource_remap) const : Node *</text><ellipse cx="26613.79" cy="5176.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="26622.79" y="5179.2886">remap_node_resources(Node * p_node, const Map&lt;RES,RES&gt; &amp; p_resource_remap) const : void</text><ellipse cx="26613.79" cy="5188.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="571" x="26622.79" y="5192.0933">remap_nested_resources(RES p_resource, const Map&lt;RES,RES&gt; &amp; p_resource_remap) const : void</text><ellipse cx="26613.79" cy="5201.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="26622.79" y="5204.8979">set_scene_instance_state(const Ref&lt;SceneState&gt; &amp; p_state) : void</text><ellipse cx="26613.79" cy="5214.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26622.79" y="5217.7026">get_scene_instance_state() const : Ref&lt;SceneState&gt;</text><ellipse cx="26613.79" cy="5227.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="26622.79" y="5230.5073">set_scene_inherited_state(const Ref&lt;SceneState&gt; &amp; p_state) : void</text><ellipse cx="26613.79" cy="5240.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="26622.79" y="5243.312">get_scene_inherited_state() const : Ref&lt;SceneState&gt;</text><ellipse cx="26613.79" cy="5252.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="26622.79" y="5256.1167">set_scene_instance_load_placeholder(bool p_enable) : void</text><ellipse cx="26613.79" cy="5265.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="26622.79" y="5268.9214">get_scene_instance_load_placeholder() const : bool</text><ellipse cx="26613.79" cy="5278.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1199" x="26622.79" y="5281.7261">make_binds(const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Vector&lt;Variant&gt;</text><ellipse cx="26613.79" cy="5291.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="26622.79" y="5294.5308">replace_by(Node * p_node, bool p_keep_data = false) : void</text><ellipse cx="26613.79" cy="5304.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="26622.79" y="5307.3354">set_pause_mode(Node::PauseMode p_mode) : void</text><ellipse cx="26613.79" cy="5316.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="26622.79" y="5320.1401">get_pause_mode() const : Node::PauseMode</text><ellipse cx="26613.79" cy="5329.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26622.79" y="5332.9448">can_process() const : bool</text><ellipse cx="26613.79" cy="5342.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="26622.79" y="5345.7495">can_process_notification(int p_what) const : bool</text><ellipse cx="26613.79" cy="5355.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="26622.79" y="5358.5542">request_ready() : void</text><ellipse cx="26613.79" cy="5368.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26622.79" y="5371.3589">print_stray_nodes() : void</text><ellipse cx="26613.79" cy="5380.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="26622.79" y="5384.1636">validate_child_name(Node * p_child) : String</text><ellipse cx="26613.79" cy="5393.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="26622.79" y="5396.9683">queue_delete() : void</text><ellipse cx="26613.79" cy="5406.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="360" x="26622.79" y="5409.7729">set_human_readable_collision_renaming(bool p_enabled) : void</text><ellipse cx="26613.79" cy="5419.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="26622.79" y="5422.5776">init_node_hrcr() : void</text><ellipse cx="26613.79" cy="5432.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26622.79" y="5435.3823">force_parent_owned() : void</text><ellipse cx="26613.79" cy="5444.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="26622.79" y="5448.187">set_import_path(const NodePath &amp; p_import_path) : void</text><ellipse cx="26613.79" cy="5457.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26622.79" y="5460.9917">get_import_path() const : NodePath</text><ellipse cx="26613.79" cy="5470.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26622.79" y="5473.7964">is_owned_by_parent() const : bool</text><ellipse cx="26613.79" cy="5483.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="26622.79" y="5486.6011">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="26613.79" cy="5496.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="26622.79" y="5499.4058">clear_internal_tree_resource_paths() : void</text><ellipse cx="26613.79" cy="5509" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26622.79" y="5512.2104">get_viewport() const : Viewport *</text><ellipse cx="26613.79" cy="5521.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26622.79" y="5525.0151">get_configuration_warning() const : String</text><ellipse cx="26613.79" cy="5534.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26622.79" y="5537.8198">update_configuration_warning() : void</text><ellipse cx="26613.79" cy="5547.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="26622.79" y="5550.6245">set_display_folded(bool p_folded) : void</text><ellipse cx="26613.79" cy="5560.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="26622.79" y="5563.4292">is_displayed_folded() const : bool</text><ellipse cx="26613.79" cy="5573.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="26622.79" y="5576.2339">set_network_master(int p_peer_id, bool p_recursive = true) : void</text><ellipse cx="26613.79" cy="5585.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="26622.79" y="5589.0386">get_network_master() const : int</text><ellipse cx="26613.79" cy="5598.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="26622.79" y="5601.8433">is_network_master() const : bool</text><ellipse cx="26613.79" cy="5611.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="26622.79" y="5614.6479">rpc_config(const StringName &amp; p_method, MultiplayerAPI::RPCMode p_mode) : void</text><ellipse cx="26613.79" cy="5624.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="26622.79" y="5627.4526">rset_config(const StringName &amp; p_property, MultiplayerAPI::RPCMode p_mode) : void</text><ellipse cx="26613.79" cy="5637.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1262" x="26622.79" y="5640.2573">rpc(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="26613.79" cy="5649.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1324" x="26622.79" y="5653.062">rpc_unreliable(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="26613.79" cy="5662.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1359" x="26622.79" y="5665.8667">rpc_id(int p_peer_id, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="26613.79" cy="5675.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1421" x="26622.79" y="5678.6714">rpc_unreliable_id(int p_peer_id, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="26613.79" cy="5688.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="26622.79" y="5691.4761">rset(const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="26613.79" cy="5701.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="26622.79" y="5704.2808">rset_unreliable(const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="26613.79" cy="5713.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="26622.79" y="5717.0854">rset_id(int p_peer_id, const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="26613.79" cy="5726.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="550" x="26622.79" y="5729.8901">rset_unreliable_id(int p_peer_id, const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="26613.79" cy="5739.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="654" x="26622.79" y="5742.6948">rpcp(int p_peer_id, bool p_unreliable, const StringName &amp; p_method, const Variant ** p_arg, int p_argcount) : void</text><ellipse cx="26613.79" cy="5752.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="584" x="26622.79" y="5755.4995">rsetp(int p_peer_id, bool p_unreliable, const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="26613.79" cy="5765.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="26622.79" y="5768.3042">get_multiplayer() const : Ref&lt;MultiplayerAPI&gt;</text><ellipse cx="26613.79" cy="5777.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="26622.79" y="5781.1089">get_custom_multiplayer() const : Ref&lt;MultiplayerAPI&gt;</text><ellipse cx="26613.79" cy="5790.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="26622.79" y="5793.9136">set_custom_multiplayer(Ref&lt;MultiplayerAPI&gt; p_multiplayer) : void</text><ellipse cx="26613.79" cy="5803.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="659" x="26622.79" y="5806.7183">get_node_rpc_mode(const StringName &amp; p_method) : const Map&lt;StringName,MultiplayerAPI::RPCMode&gt;::Element *</text><ellipse cx="26613.79" cy="5816.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="26622.79" y="5819.5229">get_node_rset_mode(const StringName &amp; p_property) : const Map&lt;StringName,MultiplayerAPI::RPCMode&gt;::Element *</text><ellipse cx="26613.79" cy="5829.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="26622.79" y="5832.3276">Node() : void</text><ellipse cx="26613.79" cy="5841.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="26622.79" y="5845.1323">~Node() : void</text><!--MD5=[88b426eff1894866fc41c8357e83d201]
class C_0000933379568804427881--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54" target="_top" title="ObjectRC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54" xlink:show="new" xlink:title="ObjectRC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="124.8281" id="C_0000933379568804427881" style="stroke: #A80036; stroke-width: 1.5;" width="217" x="25717.79" y="2289.4531"/><ellipse cx="25794.04" cy="2305.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25797.0088,2311.0938 Q25796.4306,2311.3906 25795.79,2311.5313 Q25795.1494,2311.6875 25794.4463,2311.6875 Q25791.9463,2311.6875 25790.6181,2310.0469 Q25789.3056,2308.3906 25789.3056,2305.2656 Q25789.3056,2302.1406 25790.6181,2300.4844 Q25791.9463,2298.8281 25794.4463,2298.8281 Q25795.1494,2298.8281 25795.79,2298.9844 Q25796.4463,2299.1406 25797.0088,2299.4375 L25797.0088,2302.1563 Q25796.3838,2301.5781 25795.79,2301.3125 Q25795.1963,2301.0313 25794.5713,2301.0313 Q25793.2275,2301.0313 25792.54,2302.1094 Q25791.8525,2303.1719 25791.8525,2305.2656 Q25791.8525,2307.3594 25792.54,2308.4375 Q25793.2275,2309.5 25794.5713,2309.5 Q25795.1963,2309.5 25795.79,2309.2344 Q25796.3838,2308.9531 25797.0088,2308.375 L25797.0088,2311.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="25814.54" y="2309.6074">ObjectRC</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25718.79" x2="25933.79" y1="2321.4531" y2="2321.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" target="_top" title="instance_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" xlink:show="new" xlink:title="instance_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="25723.79" y="2327.4531"/><ellipse cx="25728.79" cy="2332.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" target="_top" title="instance_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" xlink:show="new" xlink:title="instance_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="25737.79" y="2335.6636">instance_id : const ObjectID</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="25718.79" x2="25933.79" y1="2342.2578" y2="2342.2578"/><ellipse cx="25728.79" cy="2353.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="25737.79" y="2356.4683">increment() : void</text><ellipse cx="25728.79" cy="2366.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="25737.79" y="2369.2729">decrement() : bool</text><ellipse cx="25728.79" cy="2378.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="25737.79" y="2382.0776">invalidate() : bool</text><ellipse cx="25728.79" cy="2391.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="25737.79" y="2394.8823">get_ptr() : Object *</text><ellipse cx="25728.79" cy="2404.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="25737.79" y="2407.687">ObjectRC(Object * p_object) : void</text><!--MD5=[20a137ad8bfb5b27a1303d95d4ed4f68]
class C_0001735438654351294549--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405" target="_top" title="ScriptInstance" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405" xlink:show="new" xlink:title="ScriptInstance" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="368.1172" id="C_0001735438654351294549" style="stroke: #A80036; stroke-width: 1.5;" width="1349" x="30969.79" y="2578.9531"/><ellipse cx="31595.04" cy="2594.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31595.1494,2590.2969 L31593.9931,2595.375 L31596.3213,2595.375 L31595.1494,2590.2969 Z M31593.665,2588.0625 L31596.6494,2588.0625 L31600.0088,2600.4531 L31597.5556,2600.4531 L31596.79,2597.3906 L31593.5088,2597.3906 L31592.7588,2600.4531 L31590.3213,2600.4531 L31593.665,2588.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="31615.54" y="2599.1074">ScriptInstance</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30970.79" x2="32317.79" y1="2610.9531" y2="2610.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30970.79" x2="32317.79" y1="2618.9531" y2="2618.9531"/><ellipse cx="30980.79" cy="2629.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="391" x="30989.79" y="2633.1636">set(const StringName &amp; p_name, const Variant &amp; p_value) = 0 : bool</text><ellipse cx="30980.79" cy="2642.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="375" x="30989.79" y="2645.9683">get(const StringName &amp; p_name, Variant &amp; r_ret) const = 0 : bool</text><ellipse cx="30980.79" cy="2655.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="30989.79" y="2658.7729">get_property_list(List&lt;PropertyInfo&gt; * p_properties) const = 0 : void</text><ellipse cx="30980.79" cy="2668.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="569" x="30989.79" y="2671.5776">get_property_type(const StringName &amp; p_name, bool * r_is_valid = __null) const = 0 : Variant::Type</text><ellipse cx="30980.79" cy="2681.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="30989.79" y="2684.3823">get_owner() : Object *</text><ellipse cx="30980.79" cy="2693.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="30989.79" y="2697.187">get_property_state(List&lt;Pair&lt;StringName,Variant&gt;&gt; &amp; state) : void</text><ellipse cx="30980.79" cy="2706.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="30989.79" y="2709.9917">get_method_list(List&lt;MethodInfo&gt; * p_list) const = 0 : void</text><ellipse cx="30980.79" cy="2719.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="30989.79" y="2722.7964">has_method(const StringName &amp; p_method) const = 0 : bool</text><ellipse cx="30980.79" cy="2732.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1280" x="30989.79" y="2735.6011">call(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="30980.79" cy="2745.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="671" x="30989.79" y="2748.4058">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) = 0 : Variant</text><ellipse cx="30980.79" cy="2758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1323" x="30989.79" y="2761.2104">call_multilevel(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="30980.79" cy="2770.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="30989.79" y="2774.0151">call_multilevel(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="30980.79" cy="2783.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="30989.79" y="2786.8198">call_multilevel_reversed(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="30980.79" cy="2796.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="30989.79" y="2799.6245">notification(int p_notification) = 0 : void</text><ellipse cx="30980.79" cy="2809.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="30989.79" y="2812.4292">to_string(bool * r_valid) : String</text><ellipse cx="30980.79" cy="2822.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="30989.79" y="2825.2339">refcount_incremented() : void</text><ellipse cx="30980.79" cy="2834.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="30989.79" y="2838.0386">refcount_decremented() : bool</text><ellipse cx="30980.79" cy="2847.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="30989.79" y="2850.8433">get_script() const = 0 : Ref&lt;Script&gt;</text><ellipse cx="30980.79" cy="2860.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="30989.79" y="2863.6479">is_placeholder() const : bool</text><ellipse cx="30980.79" cy="2873.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="30989.79" y="2876.4526">property_set_fallback(const StringName &amp; p_name, const Variant &amp; p_value, bool * r_valid) : void</text><ellipse cx="30980.79" cy="2886.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="30989.79" y="2889.2573">property_get_fallback(const StringName &amp; p_name, bool * r_valid) : Variant</text><ellipse cx="30980.79" cy="2898.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="472" x="30989.79" y="2902.062">get_rpc_mode(const StringName &amp; p_method) const = 0 : MultiplayerAPI::RPCMode</text><ellipse cx="30980.79" cy="2911.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="479" x="30989.79" y="2914.8667">get_rset_mode(const StringName &amp; p_variable) const = 0 : MultiplayerAPI::RPCMode</text><ellipse cx="30980.79" cy="2924.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="30989.79" y="2927.6714">get_language() = 0 : ScriptLanguage *</text><ellipse cx="30980.79" cy="2937.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="30989.79" y="2940.4761">~ScriptInstance() : void</text></a><!--MD5=[1137d76ee25faee82ca73468ac4cb7a9]
class C_0001951177692366602790--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L48" target="_top" title="Resource" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L48" xlink:show="new" xlink:title="Resource" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="637.0156" id="C_0001951177692366602790" style="stroke: #A80036; stroke-width: 1.5;" width="717" x="24778.79" y="2976.9531"/><ellipse cx="25103.54" cy="2992.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25106.5088,2998.5938 Q25105.9306,2998.8906 25105.29,2999.0313 Q25104.6494,2999.1875 25103.9463,2999.1875 Q25101.4463,2999.1875 25100.1181,2997.5469 Q25098.8056,2995.8906 25098.8056,2992.7656 Q25098.8056,2989.6406 25100.1181,2987.9844 Q25101.4463,2986.3281 25103.9463,2986.3281 Q25104.6494,2986.3281 25105.29,2986.4844 Q25105.9463,2986.6406 25106.5088,2986.9375 L25106.5088,2989.6563 Q25105.8838,2989.0781 25105.29,2988.8125 Q25104.6963,2988.5313 25104.0713,2988.5313 Q25102.7275,2988.5313 25102.04,2989.6094 Q25101.3525,2990.6719 25101.3525,2992.7656 Q25101.3525,2994.8594 25102.04,2995.9375 Q25102.7275,2997 25104.0713,2997 Q25104.6963,2997 25105.29,2996.7344 Q25105.8838,2996.4531 25106.5088,2995.875 L25106.5088,2998.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="25124.04" y="2997.1074">Resource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24779.79" x2="25494.79" y1="3008.9531" y2="3008.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24779.79" x2="25494.79" y1="3016.9531" y2="3016.9531"/><ellipse cx="24789.79" cy="3027.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="24798.79" y="3031.1636">get_class() const : String</text><ellipse cx="24789.79" cy="3040.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="24798.79" y="3043.9683">_get_class_namev() const : const StringName *</text><ellipse cx="24789.79" cy="3053.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="24798.79" y="3056.7729">get_class_ptr_static() : void *</text><ellipse cx="24789.79" cy="3066.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="24798.79" y="3069.5776">get_class_static() : String</text><ellipse cx="24789.79" cy="3079.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="24798.79" y="3082.3823">get_parent_class_static() : String</text><ellipse cx="24789.79" cy="3091.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="24798.79" y="3095.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="24789.79" cy="3104.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="24798.79" y="3107.9917">get_category_static() : String</text><ellipse cx="24789.79" cy="3117.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="24798.79" y="3120.7964">inherits_static() : String</text><ellipse cx="24789.79" cy="3130.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="24798.79" y="3133.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="24789.79" cy="3143.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="24798.79" y="3146.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="24789.79" cy="3156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="24798.79" y="3159.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="24789.79" cy="3168.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="24798.79" y="3172.0151">initialize_class() : void</text><ellipse cx="24789.79" cy="3181.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="24798.79" y="3184.8198">register_custom_data_to_otdb() : void</text><ellipse cx="24789.79" cy="3194.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="24798.79" y="3197.6245">get_base_extension() const : String</text><ellipse cx="24789.79" cy="3207.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="24798.79" y="3210.4292">editor_can_reload_from_file() : bool</text><ellipse cx="24789.79" cy="3220.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="24798.79" y="3223.2339">reload_from_file() : void</text><ellipse cx="24789.79" cy="3232.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="24798.79" y="3236.0386">register_owner(Object * p_owner) : void</text><ellipse cx="24789.79" cy="3245.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="24798.79" y="3248.8433">unregister_owner(Object * p_owner) : void</text><ellipse cx="24789.79" cy="3258.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="24798.79" y="3261.6479">set_name(const String &amp; p_name) : void</text><ellipse cx="24789.79" cy="3271.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="24798.79" y="3274.4526">get_name() const : String</text><ellipse cx="24789.79" cy="3284.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="24798.79" y="3287.2573">set_path(const String &amp; p_path, bool p_take_over = false) : void</text><ellipse cx="24789.79" cy="3296.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="24798.79" y="3300.062">get_path() const : String</text><ellipse cx="24789.79" cy="3309.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="24798.79" y="3312.8667">set_subindex(int p_sub_index) : void</text><ellipse cx="24789.79" cy="3322.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="24798.79" y="3325.6714">get_subindex() const : int</text><ellipse cx="24789.79" cy="3335.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="24798.79" y="3338.4761">duplicate(bool p_subresources = false) const : Ref&lt;Resource&gt;</text><ellipse cx="24789.79" cy="3348.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="691" x="24798.79" y="3351.2808">duplicate_for_local_scene(Node * p_for_scene, Map&lt;Ref&lt;Resource&gt;,Ref&lt;Resource&gt;&gt; &amp; remap_cache) : Ref&lt;Resource&gt;</text><ellipse cx="24789.79" cy="3360.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="24798.79" y="3364.0854">configure_for_local_scene(Node * p_for_scene, Map&lt;Ref&lt;Resource&gt;,Ref&lt;Resource&gt;&gt; &amp; remap_cache) : void</text><ellipse cx="24789.79" cy="3373.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="24798.79" y="3376.8901">set_local_to_scene(bool p_enable) : void</text><ellipse cx="24789.79" cy="3386.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="24798.79" y="3389.6948">is_local_to_scene() const : bool</text><ellipse cx="24789.79" cy="3399.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="24798.79" y="3402.4995">setup_local_to_scene() : void</text><ellipse cx="24789.79" cy="3412.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="24798.79" y="3415.3042">get_local_scene() const : Node *</text><ellipse cx="24789.79" cy="3424.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="24798.79" y="3428.1089">hash_edited_version() const : uint32_t</text><ellipse cx="24789.79" cy="3437.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="24798.79" y="3440.9136">set_last_modified_time(uint64_t p_time) : void</text><ellipse cx="24789.79" cy="3450.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="24798.79" y="3453.7183">get_last_modified_time() const : uint64_t</text><ellipse cx="24789.79" cy="3463.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="24798.79" y="3466.5229">set_import_last_modified_time(uint64_t p_time) : void</text><ellipse cx="24789.79" cy="3476.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="24798.79" y="3479.3276">get_import_last_modified_time() const : uint64_t</text><ellipse cx="24789.79" cy="3488.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="24798.79" y="3492.1323">set_import_path(const String &amp; p_path) : void</text><ellipse cx="24789.79" cy="3501.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="24798.79" y="3504.937">get_import_path() const : String</text><ellipse cx="24789.79" cy="3514.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="24798.79" y="3517.7417">set_as_translation_remapped(bool p_remapped) : void</text><ellipse cx="24789.79" cy="3527.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="24798.79" y="3530.5464">is_translation_remapped() const : bool</text><ellipse cx="24789.79" cy="3540.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="24798.79" y="3543.3511">get_rid() const : RID</text><ellipse cx="24789.79" cy="3552.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="24798.79" y="3556.1558">set_id_for_path(const String &amp; p_path, int p_id) : void</text><ellipse cx="24789.79" cy="3565.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="24798.79" y="3568.9604">get_id_for_path(const String &amp; p_path) const : int</text><ellipse cx="24789.79" cy="3578.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="24798.79" y="3581.7651">Resource() : void</text><ellipse cx="24789.79" cy="3591.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="24798.79" y="3594.5698">~Resource() : void</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" target="_top" title="_get_local_scene_func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" xlink:show="new" xlink:title="_get_local_scene_func" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="24784.79" y="3599.1641"/><ellipse cx="24789.79" cy="3604.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" target="_top" title="_get_local_scene_func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" xlink:show="new" xlink:title="_get_local_scene_func" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="24798.79" y="3607.3745">_get_local_scene_func : Node *(*)()</text></a><!--MD5=[3d4aa6b0ee5484ffc25bead94ef18955]
class C_0001485048025194488343--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67" target="_top" title="TranslationServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67" xlink:show="new" xlink:title="TranslationServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="470.5547" id="C_0001485048025194488343" style="stroke: #A80036; stroke-width: 1.5;" width="412" x="35319.29" y="8597.4531"/><ellipse cx="35466.04" cy="8613.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35469.0088,8619.0938 Q35468.4306,8619.3906 35467.79,8619.5313 Q35467.1494,8619.6875 35466.4463,8619.6875 Q35463.9463,8619.6875 35462.6181,8618.0469 Q35461.3056,8616.3906 35461.3056,8613.2656 Q35461.3056,8610.1406 35462.6181,8608.4844 Q35463.9463,8606.8281 35466.4463,8606.8281 Q35467.1494,8606.8281 35467.79,8606.9844 Q35468.4463,8607.1406 35469.0088,8607.4375 L35469.0088,8610.1563 Q35468.3838,8609.5781 35467.79,8609.3125 Q35467.1963,8609.0313 35466.5713,8609.0313 Q35465.2275,8609.0313 35464.54,8610.1094 Q35463.8525,8611.1719 35463.8525,8613.2656 Q35463.8525,8615.3594 35464.54,8616.4375 Q35465.2275,8617.5 35466.5713,8617.5 Q35467.1963,8617.5 35467.79,8617.2344 Q35468.3838,8616.9531 35469.0088,8616.375 L35469.0088,8619.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="35486.54" y="8617.6074">TranslationServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35320.29" x2="35730.29" y1="8629.4531" y2="8629.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="35320.29" x2="35730.29" y1="8637.4531" y2="8637.4531"/><ellipse cx="35330.29" cy="8648.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="35339.29" y="8651.6636">get_class() const : String</text><ellipse cx="35330.29" cy="8661.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="35339.29" y="8664.4683">_get_class_namev() const : const StringName *</text><ellipse cx="35330.29" cy="8674.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="35339.29" y="8677.2729">get_class_ptr_static() : void *</text><ellipse cx="35330.29" cy="8686.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="35339.29" y="8690.0776">get_class_static() : String</text><ellipse cx="35330.29" cy="8699.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="35339.29" y="8702.8823">get_parent_class_static() : String</text><ellipse cx="35330.29" cy="8712.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="35339.29" y="8715.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="35330.29" cy="8725.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="35339.29" y="8728.4917">get_category_static() : String</text><ellipse cx="35330.29" cy="8738.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="35339.29" y="8741.2964">inherits_static() : String</text><ellipse cx="35330.29" cy="8750.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="35339.29" y="8754.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="35330.29" cy="8763.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="35339.29" y="8766.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="35330.29" cy="8776.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="35339.29" y="8779.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="35330.29" cy="8789.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="35339.29" y="8792.5151">initialize_class() : void</text><ellipse cx="35330.29" cy="8802.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="35339.29" y="8805.3198">get_singleton() : TranslationServer *</text><ellipse cx="35330.29" cy="8814.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="35339.29" y="8818.1245">set_enabled(bool p_enabled) : void</text><ellipse cx="35330.29" cy="8827.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="35339.29" y="8830.9292">is_enabled() const : bool</text><ellipse cx="35330.29" cy="8840.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="35339.29" y="8843.7339">set_locale(const String &amp; p_locale) : void</text><ellipse cx="35330.29" cy="8853.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="35339.29" y="8856.5386">get_locale() const : String</text><ellipse cx="35330.29" cy="8866.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="35339.29" y="8869.3433">get_locale_name(const String &amp; p_locale) const : String</text><ellipse cx="35330.29" cy="8878.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="35339.29" y="8882.1479">get_loaded_locales() const : Array</text><ellipse cx="35330.29" cy="8891.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="35339.29" y="8894.9526">add_translation(const Ref&lt;Translation&gt; &amp; p_translation) : void</text><ellipse cx="35330.29" cy="8904.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="35339.29" y="8907.7573">remove_translation(const Ref&lt;Translation&gt; &amp; p_translation) : void</text><ellipse cx="35330.29" cy="8917.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="35339.29" y="8920.562">translate(const StringName &amp; p_message) const : StringName</text><ellipse cx="35330.29" cy="8930.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="35339.29" y="8933.3667">get_all_locales() : Vector&lt;String&gt;</text><ellipse cx="35330.29" cy="8942.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="229" x="35339.29" y="8946.1714">get_all_locale_names() : Vector&lt;String&gt;</text><ellipse cx="35330.29" cy="8955.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="35339.29" y="8958.9761">is_locale_valid(const String &amp; p_locale) : bool</text><ellipse cx="35330.29" cy="8968.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="292" x="35339.29" y="8971.7808">standardize_locale(const String &amp; p_locale) : String</text><ellipse cx="35330.29" cy="8981.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="296" x="35339.29" y="8984.5854">get_language_code(const String &amp; p_locale) : String</text><ellipse cx="35330.29" cy="8994.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="35339.29" y="8997.3901">set_tool_translation(const Ref&lt;Translation&gt; &amp; p_translation) : void</text><ellipse cx="35330.29" cy="9006.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="35339.29" y="9010.1948">tool_translate(const StringName &amp; p_message) const : StringName</text><ellipse cx="35330.29" cy="9019.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="35339.29" y="9022.9995">setup() : void</text><ellipse cx="35330.29" cy="9032.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="35339.29" y="9035.8042">clear() : void</text><ellipse cx="35330.29" cy="9045.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="35339.29" y="9048.6089">load_translations() : void</text><ellipse cx="35330.29" cy="9058.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="35339.29" y="9061.4136">TranslationServer() : void</text></a><!--MD5=[572807c339726b4650e58d5aced39533]
class C_0000066148521405667716--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38" target="_top" title="ProjectSettings" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38" xlink:show="new" xlink:title="ProjectSettings" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="598.6016" id="C_0000066148521405667716" style="stroke: #A80036; stroke-width: 1.5;" width="1244" x="33798.29" y="8533.4531"/><ellipse cx="34368.04" cy="8549.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34371.0088,8555.0938 Q34370.4306,8555.3906 34369.79,8555.5313 Q34369.1494,8555.6875 34368.4463,8555.6875 Q34365.9463,8555.6875 34364.6181,8554.0469 Q34363.3056,8552.3906 34363.3056,8549.2656 Q34363.3056,8546.1406 34364.6181,8544.4844 Q34365.9463,8542.8281 34368.4463,8542.8281 Q34369.1494,8542.8281 34369.79,8542.9844 Q34370.4463,8543.1406 34371.0088,8543.4375 L34371.0088,8546.1563 Q34370.3838,8545.5781 34369.79,8545.3125 Q34369.1963,8545.0313 34368.5713,8545.0313 Q34367.2275,8545.0313 34366.54,8546.1094 Q34365.8525,8547.1719 34365.8525,8549.2656 Q34365.8525,8551.3594 34366.54,8552.4375 Q34367.2275,8553.5 34368.5713,8553.5 Q34369.1963,8553.5 34369.79,8553.2344 Q34370.3838,8552.9531 34371.0088,8552.375 L34371.0088,8555.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="34388.54" y="8553.6074">ProjectSettings</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33799.29" x2="35041.29" y1="8565.4531" y2="8565.4531"/><ellipse cx="33809.29" cy="8576.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="33818.29" y="8579.6636">NO_BUILTIN_ORDER_BASE : enum</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" target="_top" title="CONFIG_VERSION" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" xlink:show="new" xlink:title="CONFIG_VERSION" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33804.29" y="8584.2578"/><ellipse cx="33809.29" cy="8589.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" target="_top" title="CONFIG_VERSION" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" xlink:show="new" xlink:title="CONFIG_VERSION" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="33818.29" y="8592.4683">CONFIG_VERSION : const int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33799.29" x2="35041.29" y1="8599.0625" y2="8599.0625"/><ellipse cx="33809.29" cy="8610.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="33818.29" y="8613.2729">get_class() const : String</text><ellipse cx="33809.29" cy="8622.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="33818.29" y="8626.0776">_get_class_namev() const : const StringName *</text><ellipse cx="33809.29" cy="8635.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="33818.29" y="8638.8823">get_class_ptr_static() : void *</text><ellipse cx="33809.29" cy="8648.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="33818.29" y="8651.687">get_class_static() : String</text><ellipse cx="33809.29" cy="8661.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="33818.29" y="8664.4917">get_parent_class_static() : String</text><ellipse cx="33809.29" cy="8674.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="33818.29" y="8677.2964">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="33809.29" cy="8686.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="33818.29" y="8690.1011">get_category_static() : String</text><ellipse cx="33809.29" cy="8699.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="33818.29" y="8702.9058">inherits_static() : String</text><ellipse cx="33809.29" cy="8712.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="33818.29" y="8715.7104">is_class(const String &amp; p_class) const : bool</text><ellipse cx="33809.29" cy="8725.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="33818.29" y="8728.5151">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="33809.29" cy="8738.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="33818.29" y="8741.3198">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="33809.29" cy="8750.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="33818.29" y="8754.1245">initialize_class() : void</text><ellipse cx="33809.29" cy="8763.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="33818.29" y="8766.9292">set_setting(const String &amp; p_setting, const Variant &amp; p_value) : void</text><ellipse cx="33809.29" cy="8776.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="33818.29" y="8779.7339">get_setting(const String &amp; p_setting) const : Variant</text><ellipse cx="33809.29" cy="8789.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="33818.29" y="8792.5386">has_setting(String p_var) const : bool</text><ellipse cx="33809.29" cy="8802.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="33818.29" y="8805.3433">localize_path(const String &amp; p_path) const : String</text><ellipse cx="33809.29" cy="8814.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="33818.29" y="8818.1479">globalize_path(const String &amp; p_path) const : String</text><ellipse cx="33809.29" cy="8827.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="33818.29" y="8830.9526">set_initial_value(const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="33809.29" cy="8840.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="33818.29" y="8843.7573">set_restart_if_changed(const String &amp; p_name, bool p_restart) : void</text><ellipse cx="33809.29" cy="8853.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="33818.29" y="8856.562">property_can_revert(const String &amp; p_name) : bool</text><ellipse cx="33809.29" cy="8866.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="33818.29" y="8869.3667">property_get_revert(const String &amp; p_name) : Variant</text><ellipse cx="33809.29" cy="8878.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="33818.29" y="8882.1714">get_resource_path() const : String</text><ellipse cx="33809.29" cy="8891.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="192" x="33818.29" y="8894.9761">get_singleton() : ProjectSettings *</text><ellipse cx="33809.29" cy="8904.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="33818.29" y="8907.7808">clear(const String &amp; p_name) : void</text><ellipse cx="33809.29" cy="8917.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="33818.29" y="8920.5854">get_order(const String &amp; p_name) const : int</text><ellipse cx="33809.29" cy="8930.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="33818.29" y="8933.3901">set_order(const String &amp; p_name, int p_order) : void</text><ellipse cx="33809.29" cy="8942.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="33818.29" y="8946.1948">set_builtin_order(const String &amp; p_name) : void</text><ellipse cx="33809.29" cy="8955.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="33818.29" y="8958.9995">setup(const String &amp; p_path, const String &amp; p_main_pack, bool p_upwards = false) : Error</text><ellipse cx="33809.29" cy="8968.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1218" x="33818.29" y="8971.8042">save_custom(const String &amp; p_path = "", const ProjectSettings::CustomMap &amp; p_custom = CustomMap(), const Vector&lt;String&gt; &amp; p_custom_features = Vector&lt;String&gt;(), bool p_merge_with_current = true) : Error</text><ellipse cx="33809.29" cy="8981.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33818.29" y="8984.6089">save() : Error</text><ellipse cx="33809.29" cy="8994.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="33818.29" y="8997.4136">set_custom_property_info(const String &amp; p_prop, const PropertyInfo &amp; p_info) : void</text><ellipse cx="33809.29" cy="9007.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="33818.29" y="9010.2183">get_custom_property_info() const : const Map&lt;StringName,PropertyInfo&gt; &amp;</text><ellipse cx="33809.29" cy="9019.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="33818.29" y="9023.0229">get_last_saved_time() : uint64_t</text><ellipse cx="33809.29" cy="9032.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="33818.29" y="9035.8276">get_optimizer_presets() const : Vector&lt;String&gt;</text><ellipse cx="33809.29" cy="9045.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="33818.29" y="9048.6323">get_input_presets() const : List&lt;String&gt;</text><ellipse cx="33809.29" cy="9058.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="33818.29" y="9061.437">set_disable_feature_overrides(bool p_disable) : void</text><ellipse cx="33809.29" cy="9071.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="33818.29" y="9074.2417">is_using_datapack() const : bool</text><ellipse cx="33809.29" cy="9083.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="33818.29" y="9087.0464">set_registering_order(bool p_enable) : void</text><ellipse cx="33809.29" cy="9096.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="33818.29" y="9099.8511">has_custom_feature(const String &amp; p_feature) const : bool</text><ellipse cx="33809.29" cy="9109.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="33818.29" y="9112.6558">ProjectSettings() : void</text><ellipse cx="33809.29" cy="9122.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="33818.29" y="9125.4604">~ProjectSettings() : void</text><!--MD5=[c4334e394e97c2c54b6e754d68658f48]
class C_0001608678623693693822--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L99" target="_top" title="Script" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L99" xlink:show="new" xlink:title="Script" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="547.3828" id="C_0001608678623693693822" style="stroke: #A80036; stroke-width: 1.5;" width="570" x="23760.29" y="4497.9531"/><ellipse cx="24023.04" cy="4513.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24023.1494,4509.2969 L24021.9931,4514.375 L24024.3213,4514.375 L24023.1494,4509.2969 Z M24021.665,4507.0625 L24024.6494,4507.0625 L24028.0088,4519.4531 L24025.5556,4519.4531 L24024.79,4516.3906 L24021.5088,4516.3906 L24020.7588,4519.4531 L24018.3213,4519.4531 L24021.665,4507.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="36" x="24043.54" y="4518.1074">Script</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23761.29" x2="24329.29" y1="4529.9531" y2="4529.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23761.29" x2="24329.29" y1="4537.9531" y2="4537.9531"/><ellipse cx="23771.29" cy="4548.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="23780.29" y="4552.1636">get_class() const : String</text><ellipse cx="23771.29" cy="4561.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="23780.29" y="4564.9683">_get_class_namev() const : const StringName *</text><ellipse cx="23771.29" cy="4574.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="23780.29" y="4577.7729">get_class_ptr_static() : void *</text><ellipse cx="23771.29" cy="4587.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="23780.29" y="4590.5776">get_class_static() : String</text><ellipse cx="23771.29" cy="4600.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="23780.29" y="4603.3823">get_parent_class_static() : String</text><ellipse cx="23771.29" cy="4612.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="23780.29" y="4616.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="23771.29" cy="4625.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="23780.29" y="4628.9917">get_category_static() : String</text><ellipse cx="23771.29" cy="4638.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="23780.29" y="4641.7964">inherits_static() : String</text><ellipse cx="23771.29" cy="4651.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="23780.29" y="4654.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="23771.29" cy="4664.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23780.29" y="4667.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="23771.29" cy="4677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="23780.29" y="4680.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="23771.29" cy="4689.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="23780.29" y="4693.0151">initialize_class() : void</text><ellipse cx="23771.29" cy="4702.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="23780.29" y="4705.8198">get_save_class() const : String</text><ellipse cx="23771.29" cy="4715.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="23780.29" y="4718.6245">can_instance() const = 0 : bool</text><ellipse cx="23771.29" cy="4728.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="235" x="23780.29" y="4731.4292">get_base_script() const = 0 : Ref&lt;Script&gt;</text><ellipse cx="23771.29" cy="4741.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="279" x="23780.29" y="4744.2339">get_instance_base_type() const = 0 : StringName</text><ellipse cx="23771.29" cy="4753.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="23780.29" y="4757.0386">instance_create(Object * p_this) = 0 : ScriptInstance *</text><ellipse cx="23771.29" cy="4766.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="23780.29" y="4769.8433">placeholder_instance_create(Object * p_this) : PlaceHolderScriptInstance *</text><ellipse cx="23771.29" cy="4779.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="292" x="23780.29" y="4782.6479">instance_has(const Object * p_this) const = 0 : bool</text><ellipse cx="23771.29" cy="4792.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="199" x="23780.29" y="4795.4526">has_source_code() const = 0 : bool</text><ellipse cx="23771.29" cy="4805.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="206" x="23780.29" y="4808.2573">get_source_code() const = 0 : String</text><ellipse cx="23771.29" cy="4817.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="23780.29" y="4821.062">set_source_code(const String &amp; p_code) = 0 : void</text><ellipse cx="23771.29" cy="4830.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="23780.29" y="4833.8667">reload(bool p_keep_state = false) = 0 : Error</text><ellipse cx="23771.29" cy="4843.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="23780.29" y="4846.6714">has_method(const StringName &amp; p_method) const = 0 : bool</text><ellipse cx="23771.29" cy="4856.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="23780.29" y="4859.4761">get_method_info(const StringName &amp; p_method) const = 0 : MethodInfo</text><ellipse cx="23771.29" cy="4869.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="23780.29" y="4872.2808">is_tool() const = 0 : bool</text><ellipse cx="23771.29" cy="4881.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="23780.29" y="4885.0854">is_valid() const = 0 : bool</text><ellipse cx="23771.29" cy="4894.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="251" x="23780.29" y="4897.8901">get_language() const = 0 : ScriptLanguage *</text><ellipse cx="23771.29" cy="4907.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="361" x="23780.29" y="4910.6948">has_script_signal(const StringName &amp; p_signal) const = 0 : bool</text><ellipse cx="23771.29" cy="4920.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="381" x="23780.29" y="4923.4995">get_script_signal_list(List&lt;MethodInfo&gt; * r_signals) const = 0 : void</text><ellipse cx="23771.29" cy="4933.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="544" x="23780.29" y="4936.3042">get_property_default_value(const StringName &amp; p_property, Variant &amp; r_value) const = 0 : bool</text><ellipse cx="23771.29" cy="4945.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="23780.29" y="4949.1089">update_exports() : void</text><ellipse cx="23771.29" cy="4958.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="23780.29" y="4961.9136">get_script_method_list(List&lt;MethodInfo&gt; * p_list) const = 0 : void</text><ellipse cx="23771.29" cy="4971.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="23780.29" y="4974.7183">get_script_property_list(List&lt;PropertyInfo&gt; * p_list) const = 0 : void</text><ellipse cx="23771.29" cy="4984.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="23780.29" y="4987.5229">get_member_line(const StringName &amp; p_member) const : int</text><ellipse cx="23771.29" cy="4997.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="23780.29" y="5000.3276">get_constants(Map&lt;StringName,Variant&gt; * p_constants) : void</text><ellipse cx="23771.29" cy="5009.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="23780.29" y="5013.1323">get_members(Set&lt;StringName&gt; * p_constants) : void</text><ellipse cx="23771.29" cy="5022.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="23780.29" y="5025.937">is_placeholder_fallback_enabled() const : bool</text><ellipse cx="23771.29" cy="5035.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="23780.29" y="5038.7417">Script() : void</text></a><!--MD5=[6f34983ac71ec17bb0bbeb8f1438fe2a]
class C_0002110837736536862228--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L249" target="_top" title="ScriptLanguage" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L249" xlink:show="new" xlink:title="ScriptLanguage" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="790.6719" id="C_0002110837736536862228" style="stroke: #A80036; stroke-width: 1.5;" width="1492" x="30482.29" y="12767.9531"/><ellipse cx="31174.54" cy="12783.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31174.6494,12779.2969 L31173.4931,12784.375 L31175.8213,12784.375 L31174.6494,12779.2969 Z M31173.165,12777.0625 L31176.1494,12777.0625 L31179.5088,12789.4531 L31177.0556,12789.4531 L31176.29,12786.3906 L31173.0088,12786.3906 L31172.2588,12789.4531 L31169.8213,12789.4531 L31173.165,12777.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="31195.04" y="12788.1074">ScriptLanguage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30483.29" x2="31973.29" y1="12799.9531" y2="12799.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30483.29" x2="31973.29" y1="12807.9531" y2="12807.9531"/><ellipse cx="30493.29" cy="12818.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="167" x="30502.29" y="12822.1636">get_name() const = 0 : String</text><ellipse cx="30493.29" cy="12831.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="30502.29" y="12834.9683">init() = 0 : void</text><ellipse cx="30493.29" cy="12844.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="30502.29" y="12847.7729">get_type() const = 0 : String</text><ellipse cx="30493.29" cy="12857.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="190" x="30502.29" y="12860.5776">get_extension() const = 0 : String</text><ellipse cx="30493.29" cy="12870.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="263" x="30502.29" y="12873.3823">execute_file(const String &amp; p_path) = 0 : Error</text><ellipse cx="30493.29" cy="12882.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="30502.29" y="12886.187">finish() = 0 : void</text><ellipse cx="30493.29" cy="12895.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="30502.29" y="12898.9917">get_reserved_words(List&lt;String&gt; * p_words) const = 0 : void</text><ellipse cx="30493.29" cy="12908.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="30502.29" y="12911.7964">get_comment_delimiters(List&lt;String&gt; * p_delimiters) const = 0 : void</text><ellipse cx="30493.29" cy="12921.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="373" x="30502.29" y="12924.6011">get_string_delimiters(List&lt;String&gt; * p_delimiters) const = 0 : void</text><ellipse cx="30493.29" cy="12934.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="588" x="30502.29" y="12937.4058">get_template(const String &amp; p_class_name, const String &amp; p_base_class_name) const = 0 : Ref&lt;Script&gt;</text><ellipse cx="30493.29" cy="12947" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="648" x="30502.29" y="12950.2104">make_template(const String &amp; p_class_name, const String &amp; p_base_class_name, Ref&lt;Script&gt; &amp; p_script) : void</text><ellipse cx="30493.29" cy="12959.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="30502.29" y="12963.0151">is_using_templates() : bool</text><ellipse cx="30493.29" cy="12972.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1466" x="30502.29" y="12975.8198">validate(const String &amp; p_script, int &amp; r_line_error, int &amp; r_col_error, String &amp; r_test_error, const String &amp; p_path = "", List&lt;String&gt; * r_functions = __null, List&lt;ScriptLanguage::Warning&gt; * r_warnings = __null, Set&lt;int&gt; * r_safe_lines = __null) const = 0 : bool</text><ellipse cx="30493.29" cy="12985.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="30502.29" y="12988.6245">validate_path(const String &amp; p_path) const : String</text><ellipse cx="30493.29" cy="12998.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="30502.29" y="13001.4292">create_script() const = 0 : Script *</text><ellipse cx="30493.29" cy="13011.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="214" x="30502.29" y="13014.2339">has_named_classes() const = 0 : bool</text><ellipse cx="30493.29" cy="13023.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="229" x="30502.29" y="13027.0386">supports_builtin_mode() const = 0 : bool</text><ellipse cx="30493.29" cy="13036.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="30502.29" y="13039.8433">can_inherit_from_file() : bool</text><ellipse cx="30493.29" cy="13049.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="30502.29" y="13052.6479">find_function(const String &amp; p_function, const String &amp; p_code) const = 0 : int</text><ellipse cx="30493.29" cy="13062.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="641" x="30502.29" y="13065.4526">make_function(const String &amp; p_class, const String &amp; p_name, const PoolStringArray &amp; p_args) const = 0 : String</text><ellipse cx="30493.29" cy="13075.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="30502.29" y="13078.2573">open_in_external_editor(const Ref&lt;Script&gt; &amp; p_script, int p_line, int p_col) : Error</text><ellipse cx="30493.29" cy="13087.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="30502.29" y="13091.062">overrides_external_editor() : bool</text><ellipse cx="30493.29" cy="13100.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="983" x="30502.29" y="13103.8667">complete_code(const String &amp; p_code, const String &amp; p_path, Object * p_owner, List&lt;ScriptCodeCompletionOption&gt; * r_options, bool &amp; r_force, String &amp; r_call_hint) : Error</text><ellipse cx="30493.29" cy="13113.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="875" x="30502.29" y="13116.6714">lookup_code(const String &amp; p_code, const String &amp; p_symbol, const String &amp; p_path, Object * p_owner, ScriptLanguage::LookupResult &amp; r_result) : Error</text><ellipse cx="30493.29" cy="13126.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="30502.29" y="13129.4761">auto_indent_code(String &amp; p_code, int p_from_line, int p_to_line) const = 0 : void</text><ellipse cx="30493.29" cy="13139.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="30502.29" y="13142.2808">add_global_constant(const StringName &amp; p_variable, const Variant &amp; p_value) = 0 : void</text><ellipse cx="30493.29" cy="13151.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="30502.29" y="13155.0854">add_named_global_constant(const StringName &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="30493.29" cy="13164.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="30502.29" y="13167.8901">remove_named_global_constant(const StringName &amp; p_name) : void</text><ellipse cx="30493.29" cy="13177.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="30502.29" y="13180.6948">thread_enter() : void</text><ellipse cx="30493.29" cy="13190.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="30502.29" y="13193.4995">thread_exit() : void</text><ellipse cx="30493.29" cy="13203.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="30502.29" y="13206.3042">debug_get_error() const = 0 : String</text><ellipse cx="30493.29" cy="13215.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="256" x="30502.29" y="13219.1089">debug_get_stack_level_count() const = 0 : int</text><ellipse cx="30493.29" cy="13228.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="30502.29" y="13231.9136">debug_get_stack_level_line(int p_level) const = 0 : int</text><ellipse cx="30493.29" cy="13241.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="30502.29" y="13244.7183">debug_get_stack_level_function(int p_level) const = 0 : String</text><ellipse cx="30493.29" cy="13254.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="30502.29" y="13257.5229">debug_get_stack_level_source(int p_level) const = 0 : String</text><ellipse cx="30493.29" cy="13267.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="857" x="30502.29" y="13270.3276">debug_get_stack_level_locals(int p_level, List&lt;String&gt; * p_locals, List&lt;Variant&gt; * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void</text><ellipse cx="30493.29" cy="13279.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="901" x="30502.29" y="13283.1323">debug_get_stack_level_members(int p_level, List&lt;String&gt; * p_members, List&lt;Variant&gt; * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void</text><ellipse cx="30493.29" cy="13292.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="30502.29" y="13295.937">debug_get_stack_level_instance(int p_level) : ScriptInstance *</text><ellipse cx="30493.29" cy="13305.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="739" x="30502.29" y="13308.7417">debug_get_globals(List&lt;String&gt; * p_globals, List&lt;Variant&gt; * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void</text><ellipse cx="30493.29" cy="13318.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="790" x="30502.29" y="13321.5464">debug_parse_stack_level_expression(int p_level, const String &amp; p_expression, int p_max_subitems = -1, int p_max_depth = -1) = 0 : String</text><ellipse cx="30493.29" cy="13331.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="30502.29" y="13334.3511">debug_get_current_stack_info() : Vector&lt;ScriptLanguage::StackInfo&gt;</text><ellipse cx="30493.29" cy="13343.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="30502.29" y="13347.1558">reload_all_scripts() = 0 : void</text><ellipse cx="30493.29" cy="13356.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="444" x="30502.29" y="13359.9604">reload_tool_script(const Ref&lt;Script&gt; &amp; p_script, bool p_soft_reload) = 0 : void</text><ellipse cx="30493.29" cy="13369.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="413" x="30502.29" y="13372.7651">get_recognized_extensions(List&lt;String&gt; * p_extensions) const = 0 : void</text><ellipse cx="30493.29" cy="13382.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="393" x="30502.29" y="13385.5698">get_public_functions(List&lt;MethodInfo&gt; * p_functions) const = 0 : void</text><ellipse cx="30493.29" cy="13395.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="455" x="30502.29" y="13398.3745">get_public_constants(List&lt;Pair&lt;String,Variant&gt;&gt; * p_constants) const = 0 : void</text><ellipse cx="30493.29" cy="13407.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="30502.29" y="13411.1792">profiling_start() = 0 : void</text><ellipse cx="30493.29" cy="13420.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="30502.29" y="13423.9839">profiling_stop() = 0 : void</text><ellipse cx="30493.29" cy="13433.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="561" x="30502.29" y="13436.7886">profiling_get_accumulated_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int</text><ellipse cx="30493.29" cy="13446.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="523" x="30502.29" y="13449.5933">profiling_get_frame_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int</text><ellipse cx="30493.29" cy="13459.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="30502.29" y="13462.3979">alloc_instance_binding_data(Object * p_object) : void *</text><ellipse cx="30493.29" cy="13471.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="30502.29" y="13475.2026">free_instance_binding_data(void * p_data) : void</text><ellipse cx="30493.29" cy="13484.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="30502.29" y="13488.0073">refcount_incremented_instance_binding(Object * p_object) : void</text><ellipse cx="30493.29" cy="13497.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="30502.29" y="13500.812">refcount_decremented_instance_binding(Object * p_object) : bool</text><ellipse cx="30493.29" cy="13510.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="30502.29" y="13513.6167">frame() : void</text><ellipse cx="30493.29" cy="13523.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="30502.29" y="13526.4214">handles_global_class_type(const String &amp; p_type) const : bool</text><ellipse cx="30493.29" cy="13536.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="690" x="30502.29" y="13539.2261">get_global_class_name(const String &amp; p_path, String * r_base_type = __null, String * r_icon_path = __null) const : String</text><ellipse cx="30493.29" cy="13548.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="30502.29" y="13552.0308">~ScriptLanguage() : void</text></a><!--MD5=[20209edb2b2a39856a637a9459a4ae92]
class C_0001649884439586022807--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374" target="_top" title="PlaceHolderScriptInstance" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374" xlink:show="new" xlink:title="PlaceHolderScriptInstance" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="304.0938" id="C_0001649884439586022807" style="stroke: #A80036; stroke-width: 1.5;" width="1306" x="30922.29" y="8680.9531"/><ellipse cx="31488.54" cy="8696.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31491.5088,8702.5938 Q31490.9306,8702.8906 31490.29,8703.0313 Q31489.6494,8703.1875 31488.9463,8703.1875 Q31486.4463,8703.1875 31485.1181,8701.5469 Q31483.8056,8699.8906 31483.8056,8696.7656 Q31483.8056,8693.6406 31485.1181,8691.9844 Q31486.4463,8690.3281 31488.9463,8690.3281 Q31489.6494,8690.3281 31490.29,8690.4844 Q31490.9463,8690.6406 31491.5088,8690.9375 L31491.5088,8693.6563 Q31490.8838,8693.0781 31490.29,8692.8125 Q31489.6963,8692.5313 31489.0713,8692.5313 Q31487.7275,8692.5313 31487.04,8693.6094 Q31486.3525,8694.6719 31486.3525,8696.7656 Q31486.3525,8698.8594 31487.04,8699.9375 Q31487.7275,8701 31489.0713,8701 Q31489.6963,8701 31490.29,8700.7344 Q31490.8838,8700.4531 31491.5088,8699.875 L31491.5088,8702.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="165" x="31509.04" y="8701.1074">PlaceHolderScriptInstance</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30923.29" x2="32227.29" y1="8712.9531" y2="8712.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30923.29" x2="32227.29" y1="8720.9531" y2="8720.9531"/><ellipse cx="30933.29" cy="8731.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="30942.29" y="8735.1636">set(const StringName &amp; p_name, const Variant &amp; p_value) : bool</text><ellipse cx="30933.29" cy="8744.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="30942.29" y="8747.9683">get(const StringName &amp; p_name, Variant &amp; r_ret) const : bool</text><ellipse cx="30933.29" cy="8757.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="30942.29" y="8760.7729">get_property_list(List&lt;PropertyInfo&gt; * p_properties) const : void</text><ellipse cx="30933.29" cy="8770.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="545" x="30942.29" y="8773.5776">get_property_type(const StringName &amp; p_name, bool * r_is_valid = __null) const : Variant::Type</text><ellipse cx="30933.29" cy="8783.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="30942.29" y="8786.3823">get_method_list(List&lt;MethodInfo&gt; * p_list) const : void</text><ellipse cx="30933.29" cy="8795.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="30942.29" y="8799.187">has_method(const StringName &amp; p_method) const : bool</text><ellipse cx="30933.29" cy="8808.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1280" x="30942.29" y="8811.9917">call(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="30933.29" cy="8821.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="30942.29" y="8824.7964">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="30933.29" cy="8834.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="30942.29" y="8837.6011">notification(int p_notification) : void</text><ellipse cx="30933.29" cy="8847.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="30942.29" y="8850.4058">get_script() const : Ref&lt;Script&gt;</text><ellipse cx="30933.29" cy="8860" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="30942.29" y="8863.2104">get_language() : ScriptLanguage *</text><ellipse cx="30933.29" cy="8872.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="30942.29" y="8876.0151">get_owner() : Object *</text><ellipse cx="30933.29" cy="8885.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="30942.29" y="8888.8198">update(const List&lt;PropertyInfo&gt; &amp; p_properties, const Map&lt;StringName,Variant&gt; &amp; p_values) : void</text><ellipse cx="30933.29" cy="8898.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="30942.29" y="8901.6245">is_placeholder() const : bool</text><ellipse cx="30933.29" cy="8911.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="605" x="30942.29" y="8914.4292">property_set_fallback(const StringName &amp; p_name, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="30933.29" cy="8924.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="478" x="30942.29" y="8927.2339">property_get_fallback(const StringName &amp; p_name, bool * r_valid = __null) : Variant</text><ellipse cx="30933.29" cy="8936.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="30942.29" y="8940.0386">get_rpc_mode(const StringName &amp; p_method) const : MultiplayerAPI::RPCMode</text><ellipse cx="30933.29" cy="8949.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="30942.29" y="8952.8433">get_rset_mode(const StringName &amp; p_variable) const : MultiplayerAPI::RPCMode</text><ellipse cx="30933.29" cy="8962.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="590" x="30942.29" y="8965.6479">PlaceHolderScriptInstance(ScriptLanguage * p_language, Ref&lt;Script&gt; p_script, Object * p_owner) : void</text><ellipse cx="30933.29" cy="8975.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="30942.29" y="8978.4526">~PlaceHolderScriptInstance() : void</text></a><!--MD5=[79e27d258fa9a526a1771d31d80b94ef]
class C_0000970940027123558604--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38" target="_top" title="MainLoop" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38" xlink:show="new" xlink:title="MainLoop" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="521.7734" id="C_0000970940027123558604" style="stroke: #A80036; stroke-width: 1.5;" width="440" x="28085.29" y="4510.4531"/><ellipse cx="28271.54" cy="4526.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28274.5088,4532.0938 Q28273.9306,4532.3906 28273.29,4532.5313 Q28272.6494,4532.6875 28271.9463,4532.6875 Q28269.4463,4532.6875 28268.1181,4531.0469 Q28266.8056,4529.3906 28266.8056,4526.2656 Q28266.8056,4523.1406 28268.1181,4521.4844 Q28269.4463,4519.8281 28271.9463,4519.8281 Q28272.6494,4519.8281 28273.29,4519.9844 Q28273.9463,4520.1406 28274.5088,4520.4375 L28274.5088,4523.1563 Q28273.8838,4522.5781 28273.29,4522.3125 Q28272.6963,4522.0313 28272.0713,4522.0313 Q28270.7275,4522.0313 28270.04,4523.1094 Q28269.3525,4524.1719 28269.3525,4526.2656 Q28269.3525,4528.3594 28270.04,4529.4375 Q28270.7275,4530.5 28272.0713,4530.5 Q28272.6963,4530.5 28273.29,4530.2344 Q28273.8838,4529.9531 28274.5088,4529.375 L28274.5088,4532.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="28292.04" y="4530.6074">MainLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28086.29" x2="28524.29" y1="4542.4531" y2="4542.4531"/><ellipse cx="28096.29" cy="4553.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="28105.29" y="4556.6636">NOTIFICATION_WM_MOUSE_ENTER : enum</text><ellipse cx="28096.29" cy="4566.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="28105.29" y="4569.4683">NOTIFICATION_WM_MOUSE_EXIT : enum</text><ellipse cx="28096.29" cy="4579.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="28105.29" y="4582.2729">NOTIFICATION_WM_FOCUS_IN : enum</text><ellipse cx="28096.29" cy="4591.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="28105.29" y="4595.0776">NOTIFICATION_WM_FOCUS_OUT : enum</text><ellipse cx="28096.29" cy="4604.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="28105.29" y="4607.8823">NOTIFICATION_WM_QUIT_REQUEST : enum</text><ellipse cx="28096.29" cy="4617.4766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="28105.29" y="4620.687">NOTIFICATION_WM_GO_BACK_REQUEST : enum</text><ellipse cx="28096.29" cy="4630.2813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="28105.29" y="4633.4917">NOTIFICATION_WM_UNFOCUS_REQUEST : enum</text><ellipse cx="28096.29" cy="4643.0859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="28105.29" y="4646.2964">NOTIFICATION_OS_MEMORY_WARNING : enum</text><ellipse cx="28096.29" cy="4655.8906" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="28105.29" y="4659.1011">NOTIFICATION_TRANSLATION_CHANGED : enum</text><ellipse cx="28096.29" cy="4668.6953" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="28105.29" y="4671.9058">NOTIFICATION_WM_ABOUT : enum</text><ellipse cx="28096.29" cy="4681.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="28105.29" y="4684.7104">NOTIFICATION_CRASH : enum</text><ellipse cx="28096.29" cy="4694.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="28105.29" y="4697.5151">NOTIFICATION_OS_IME_UPDATE : enum</text><ellipse cx="28096.29" cy="4707.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="28105.29" y="4710.3198">NOTIFICATION_APP_RESUMED : enum</text><ellipse cx="28096.29" cy="4719.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="28105.29" y="4723.1245">NOTIFICATION_APP_PAUSED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28086.29" x2="28524.29" y1="4729.7188" y2="4729.7188"/><ellipse cx="28096.29" cy="4740.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="28105.29" y="4743.9292">get_class() const : String</text><ellipse cx="28096.29" cy="4753.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="28105.29" y="4756.7339">_get_class_namev() const : const StringName *</text><ellipse cx="28096.29" cy="4766.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="28105.29" y="4769.5386">get_class_ptr_static() : void *</text><ellipse cx="28096.29" cy="4779.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="28105.29" y="4782.3433">get_class_static() : String</text><ellipse cx="28096.29" cy="4791.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="28105.29" y="4795.1479">get_parent_class_static() : String</text><ellipse cx="28096.29" cy="4804.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="28105.29" y="4807.9526">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="28096.29" cy="4817.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="28105.29" y="4820.7573">get_category_static() : String</text><ellipse cx="28096.29" cy="4830.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="28105.29" y="4833.562">inherits_static() : String</text><ellipse cx="28096.29" cy="4843.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="28105.29" y="4846.3667">is_class(const String &amp; p_class) const : bool</text><ellipse cx="28096.29" cy="4855.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="28105.29" y="4859.1714">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="28096.29" cy="4868.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="28105.29" y="4871.9761">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="28096.29" cy="4881.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="28105.29" y="4884.7808">initialize_class() : void</text><ellipse cx="28096.29" cy="4894.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="28105.29" y="4897.5854">input_event(const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="28096.29" cy="4907.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="28105.29" y="4910.3901">input_text(const String &amp; p_text) : void</text><ellipse cx="28096.29" cy="4919.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="28105.29" y="4923.1948">init() : void</text><ellipse cx="28096.29" cy="4932.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="28105.29" y="4935.9995">iteration(float p_time) : bool</text><ellipse cx="28096.29" cy="4945.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="28105.29" y="4948.8042">idle(float p_time) : bool</text><ellipse cx="28096.29" cy="4958.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="28105.29" y="4961.6089">finish() : void</text><ellipse cx="28096.29" cy="4971.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="28105.29" y="4974.4136">drop_files(const Vector&lt;String&gt; &amp; p_files, int p_from_screen = 0) : void</text><ellipse cx="28096.29" cy="4984.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="28105.29" y="4987.2183">global_menu_action(const Variant &amp; p_id, const Variant &amp; p_meta) : void</text><ellipse cx="28096.29" cy="4996.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="28105.29" y="5000.0229">set_init_script(const Ref&lt;Script&gt; &amp; p_init_script) : void</text><ellipse cx="28096.29" cy="5009.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="28105.29" y="5012.8276">MainLoop() : void</text><ellipse cx="28096.29" cy="5022.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="28105.29" y="5025.6323">~MainLoop() : void</text></a><!--MD5=[2ff27342a65908c4b6ff1f7f17075b0e]
class C_0001823345232236209470--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42" target="_top" title="Engine##Singleton" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42" xlink:show="new" xlink:title="Engine##Singleton" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0001823345232236209470" style="stroke: #A80036; stroke-width: 1.5;" width="515" x="31239.79" y="707.9531"/><ellipse cx="31438.04" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31441.0088,729.5938 Q31440.4306,729.8906 31439.79,730.0313 Q31439.1494,730.1875 31438.4463,730.1875 Q31435.9463,730.1875 31434.6181,728.5469 Q31433.3056,726.8906 31433.3056,723.7656 Q31433.3056,720.6406 31434.6181,718.9844 Q31435.9463,717.3281 31438.4463,717.3281 Q31439.1494,717.3281 31439.79,717.4844 Q31440.4463,717.6406 31441.0088,717.9375 L31441.0088,720.6563 Q31440.3838,720.0781 31439.79,719.8125 Q31439.1963,719.5313 31438.5713,719.5313 Q31437.2275,719.5313 31436.54,720.6094 Q31435.8525,721.6719 31435.8525,723.7656 Q31435.8525,725.8594 31436.54,726.9375 Q31437.2275,728 31438.5713,728 Q31439.1963,728 31439.79,727.7344 Q31440.3838,727.4531 31441.0088,726.875 L31441.0088,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="31458.54" y="728.1074">Engine::Singleton</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31240.79" x2="31753.79" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="31245.79" y="745.9531"/><ellipse cx="31250.79" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="31259.79" y="754.1636">name : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" target="_top" title="ptr" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" xlink:show="new" xlink:title="ptr" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="31245.79" y="758.7578"/><ellipse cx="31250.79" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" target="_top" title="ptr" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" xlink:show="new" xlink:title="ptr" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="31259.79" y="766.9683">ptr : Object *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="31240.79" x2="31753.79" y1="773.5625" y2="773.5625"/><ellipse cx="31250.79" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="489" x="31259.79" y="787.7729">Singleton(const StringName &amp; p_name = StringName(), Object * p_ptr = __null) : void</text><!--MD5=[ebdaeccedfca549d9dc34e5fd7d7aea5]
class C_0000361490529588572420--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L45" target="_top" title="OS" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L45" xlink:show="new" xlink:title="OS" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="2698.5703" id="C_0000361490529588572420" style="stroke: #A80036; stroke-width: 1.5;" width="1420" x="35350.29" y="11813.9531"/><ellipse cx="36048.04" cy="11829.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36048.1494,11825.2969 L36046.9931,11830.375 L36049.3213,11830.375 L36048.1494,11825.2969 Z M36046.665,11823.0625 L36049.6494,11823.0625 L36053.0088,11835.4531 L36050.5556,11835.4531 L36049.79,11832.3906 L36046.5088,11832.3906 L36045.7588,11835.4531 L36043.3213,11835.4531 L36046.665,11823.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="16" x="36068.54" y="11834.1074">OS</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35351.29" x2="36769.29" y1="11845.9531" y2="11845.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" target="_top" title="switch_vsync_function" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" xlink:show="new" xlink:title="switch_vsync_function" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35356.29" y="11851.9531"/><ellipse cx="35361.29" cy="11856.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" target="_top" title="switch_vsync_function" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" xlink:show="new" xlink:title="switch_vsync_function" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="35370.29" y="11860.1636">switch_vsync_function : OS::SwitchVSyncCallbackInThread</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="35351.29" x2="36769.29" y1="11866.7578" y2="11866.7578"/><ellipse cx="35361.29" cy="11877.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="35370.29" y="11880.9683">get_singleton() : OS *</text><ellipse cx="35361.29" cy="11890.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="731" x="35370.29" y="11893.7729">global_menu_add_item(const String &amp; p_menu, const String &amp; p_label, const Variant &amp; p_signal, const Variant &amp; p_meta) : void</text><ellipse cx="35361.29" cy="11903.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="35370.29" y="11906.5776">global_menu_add_separator(const String &amp; p_menu) : void</text><ellipse cx="35361.29" cy="11916.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="35370.29" y="11919.3823">global_menu_remove_item(const String &amp; p_menu, int p_idx) : void</text><ellipse cx="35361.29" cy="11928.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="35370.29" y="11932.187">global_menu_clear(const String &amp; p_menu) : void</text><ellipse cx="35361.29" cy="11941.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="954" x="35370.29" y="11944.9917">print_error(const char * p_function, const char * p_file, int p_line, const char * p_code, const char * p_rationale, Logger::ErrorType p_type = Logger::ERR_ERROR) : void</text><ellipse cx="35361.29" cy="11954.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="35370.29" y="11957.7964">print(const char * p_format) : void</text><ellipse cx="35361.29" cy="11967.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="35370.29" y="11970.6011">printerr(const char * p_format) : void</text><ellipse cx="35361.29" cy="11980.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="35370.29" y="11983.4058">alert(const String &amp; p_alert, const String &amp; p_title = "ALERT!") = 0 : void</text><ellipse cx="35361.29" cy="11993" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="35370.29" y="11996.2104">get_stdin_string(bool p_block = true) = 0 : String</text><ellipse cx="35361.29" cy="12005.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="35370.29" y="12009.0151">set_mouse_mode(OS::MouseMode p_mode) : void</text><ellipse cx="35361.29" cy="12018.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="35370.29" y="12021.8198">get_mouse_mode() const : OS::MouseMode</text><ellipse cx="35361.29" cy="12031.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="35370.29" y="12034.6245">warp_mouse_position(const Point2 &amp; p_to) : void</text><ellipse cx="35361.29" cy="12044.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="35370.29" y="12047.4292">get_mouse_position() const = 0 : Point2</text><ellipse cx="35361.29" cy="12057.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="35370.29" y="12060.2339">get_mouse_button_state() const = 0 : int</text><ellipse cx="35361.29" cy="12069.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="35370.29" y="12073.0386">set_window_title(const String &amp; p_title) = 0 : void</text><ellipse cx="35361.29" cy="12082.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="431" x="35370.29" y="12085.8433">set_window_mouse_passthrough(const PoolVector2Array &amp; p_region) : void</text><ellipse cx="35361.29" cy="12095.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="35370.29" y="12098.6479">set_clipboard(const String &amp; p_text) : void</text><ellipse cx="35361.29" cy="12108.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="35370.29" y="12111.4526">get_clipboard() const : String</text><ellipse cx="35361.29" cy="12121.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="35370.29" y="12124.2573">set_video_mode(const OS::VideoMode &amp; p_video_mode, int p_screen = 0) = 0 : void</text><ellipse cx="35361.29" cy="12133.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="35370.29" y="12137.062">get_video_mode(int p_screen = 0) const = 0 : OS::VideoMode</text><ellipse cx="35361.29" cy="12146.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="35370.29" y="12149.8667">get_fullscreen_mode_list(List&lt;OS::VideoMode&gt; * p_list, int p_screen = 0) const = 0 : void</text><ellipse cx="35361.29" cy="12159.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="35370.29" y="12162.6714">get_video_driver_count() const : int</text><ellipse cx="35361.29" cy="12172.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="35370.29" y="12175.4761">get_video_driver_name(int p_driver) const : const char *</text><ellipse cx="35361.29" cy="12185.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="35370.29" y="12188.2808">get_current_video_driver() const = 0 : int</text><ellipse cx="35361.29" cy="12197.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="35370.29" y="12201.0854">get_audio_driver_count() const : int</text><ellipse cx="35361.29" cy="12210.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="35370.29" y="12213.8901">get_audio_driver_name(int p_driver) const : const char *</text><ellipse cx="35361.29" cy="12223.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="35370.29" y="12226.6948">get_tablet_driver_count() const : int</text><ellipse cx="35361.29" cy="12236.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="35370.29" y="12239.4995">get_tablet_driver_name(int p_driver) const : String</text><ellipse cx="35361.29" cy="12249.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="35370.29" y="12252.3042">get_current_tablet_driver() const : String</text><ellipse cx="35361.29" cy="12261.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="35370.29" y="12265.1089">set_current_tablet_driver(const String &amp; p_driver) : void</text><ellipse cx="35361.29" cy="12274.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="35370.29" y="12277.9136">get_connected_midi_inputs() : PoolStringArray</text><ellipse cx="35361.29" cy="12287.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="35370.29" y="12290.7183">open_midi_inputs() : void</text><ellipse cx="35361.29" cy="12300.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="35370.29" y="12303.5229">close_midi_inputs() : void</text><ellipse cx="35361.29" cy="12313.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="35370.29" y="12316.3276">get_screen_count() const : int</text><ellipse cx="35361.29" cy="12325.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="35370.29" y="12329.1323">get_current_screen() const : int</text><ellipse cx="35361.29" cy="12338.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="35370.29" y="12341.937">set_current_screen(int p_screen) : void</text><ellipse cx="35361.29" cy="12351.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="35370.29" y="12354.7417">get_screen_position(int p_screen = -1) const : Point2</text><ellipse cx="35361.29" cy="12364.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="35370.29" y="12367.5464">get_screen_size(int p_screen = -1) const : Size2</text><ellipse cx="35361.29" cy="12377.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="35370.29" y="12380.3511">get_screen_dpi(int p_screen = -1) const : int</text><ellipse cx="35361.29" cy="12389.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="35370.29" y="12393.1558">get_screen_scale(int p_screen = -1) const : float</text><ellipse cx="35361.29" cy="12402.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="35370.29" y="12405.9604">get_screen_max_scale() const : float</text><ellipse cx="35361.29" cy="12415.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="35370.29" y="12418.7651">get_window_position() const : Point2</text><ellipse cx="35361.29" cy="12428.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="35370.29" y="12431.5698">set_window_position(const Point2 &amp; p_position) : void</text><ellipse cx="35361.29" cy="12441.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="35370.29" y="12444.3745">get_max_window_size() const : Size2</text><ellipse cx="35361.29" cy="12453.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="35370.29" y="12457.1792">get_min_window_size() const : Size2</text><ellipse cx="35361.29" cy="12466.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="35370.29" y="12469.9839">get_window_size() const = 0 : Size2</text><ellipse cx="35361.29" cy="12479.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="35370.29" y="12482.7886">get_real_window_size() const : Size2</text><ellipse cx="35361.29" cy="12492.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="35370.29" y="12495.5933">set_min_window_size(const Size2 p_size) : void</text><ellipse cx="35361.29" cy="12505.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="35370.29" y="12508.3979">set_max_window_size(const Size2 p_size) : void</text><ellipse cx="35361.29" cy="12517.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="35370.29" y="12521.2026">set_window_size(const Size2 p_size) : void</text><ellipse cx="35361.29" cy="12530.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="35370.29" y="12534.0073">set_window_fullscreen(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12543.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="35370.29" y="12546.812">is_window_fullscreen() const : bool</text><ellipse cx="35361.29" cy="12556.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="35370.29" y="12559.6167">set_window_resizable(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12569.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="35370.29" y="12572.4214">is_window_resizable() const : bool</text><ellipse cx="35361.29" cy="12582.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="35370.29" y="12585.2261">set_window_minimized(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12594.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="35370.29" y="12598.0308">is_window_minimized() const : bool</text><ellipse cx="35361.29" cy="12607.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="35370.29" y="12610.8354">set_window_maximized(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12620.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="35370.29" y="12623.6401">is_window_maximized() const : bool</text><ellipse cx="35361.29" cy="12633.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="35370.29" y="12636.4448">set_window_always_on_top(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12646.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="35370.29" y="12649.2495">is_window_always_on_top() const : bool</text><ellipse cx="35361.29" cy="12658.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="35370.29" y="12662.0542">is_window_focused() const : bool</text><ellipse cx="35361.29" cy="12671.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="35370.29" y="12674.8589">set_console_visible(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12684.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="35370.29" y="12687.6636">is_console_visible() const : bool</text><ellipse cx="35361.29" cy="12697.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="35370.29" y="12700.4683">request_attention() : void</text><ellipse cx="35361.29" cy="12710.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="35370.29" y="12713.2729">center_window() : void</text><ellipse cx="35361.29" cy="12722.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="35370.29" y="12726.0776">get_native_handle(int p_handle_type) : void *</text><ellipse cx="35361.29" cy="12735.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="35370.29" y="12738.8823">get_window_safe_area() const : Rect2</text><ellipse cx="35361.29" cy="12748.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="35370.29" y="12751.687">set_borderless_window(bool p_borderless) : void</text><ellipse cx="35361.29" cy="12761.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="35370.29" y="12764.4917">get_borderless_window() : bool</text><ellipse cx="35361.29" cy="12774.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="35370.29" y="12777.2964">get_window_per_pixel_transparency_enabled() const : bool</text><ellipse cx="35361.29" cy="12786.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="35370.29" y="12790.1011">set_window_per_pixel_transparency_enabled(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12799.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="35370.29" y="12802.9058">set_ime_active(const bool p_active) : void</text><ellipse cx="35361.29" cy="12812.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="35370.29" y="12815.7104">set_ime_position(const Point2 &amp; p_pos) : void</text><ellipse cx="35361.29" cy="12825.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="35370.29" y="12828.5151">get_ime_selection() const : Point2</text><ellipse cx="35361.29" cy="12838.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="35370.29" y="12841.3198">get_ime_text() const : String</text><ellipse cx="35361.29" cy="12850.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="35370.29" y="12854.1245">open_dynamic_library(const String p_path, void *&amp; p_library_handle, bool p_also_set_library_path = false) : Error</text><ellipse cx="35361.29" cy="12863.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="35370.29" y="12866.9292">close_dynamic_library(void * p_library_handle) : Error</text><ellipse cx="35361.29" cy="12876.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="801" x="35370.29" y="12879.7339">get_dynamic_library_symbol_handle(void * p_library_handle, const String p_name, void *&amp; p_symbol_handle, bool p_optional = false) : Error</text><ellipse cx="35361.29" cy="12889.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="35370.29" y="12892.5386">set_keep_screen_on(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12902.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="35370.29" y="12905.3433">is_keep_screen_on() const : bool</text><ellipse cx="35361.29" cy="12914.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="35370.29" y="12918.1479">set_low_processor_usage_mode(bool p_enabled) : void</text><ellipse cx="35361.29" cy="12927.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="35370.29" y="12930.9526">is_in_low_processor_usage_mode() const : bool</text><ellipse cx="35361.29" cy="12940.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="35370.29" y="12943.7573">set_low_processor_usage_mode_sleep_usec(int p_usec) : void</text><ellipse cx="35361.29" cy="12953.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="35370.29" y="12956.562">get_low_processor_usage_mode_sleep_usec() const : int</text><ellipse cx="35361.29" cy="12966.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="35370.29" y="12969.3667">get_executable_path() const : String</text><ellipse cx="35361.29" cy="12978.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1394" x="35370.29" y="12982.1714">execute(const String &amp; p_path, const List&lt;String&gt; &amp; p_arguments, bool p_blocking = true, OS::ProcessID * r_child_id = __null, String * r_pipe = __null, int * r_exitcode = __null, bool read_stderr = false, Mutex * p_pipe_mutex = __null) = 0 : Error</text><ellipse cx="35361.29" cy="12991.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="35370.29" y="12994.9761">kill(const OS::ProcessID &amp; p_pid) = 0 : Error</text><ellipse cx="35361.29" cy="13004.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="35370.29" y="13007.7808">get_process_id() const : int</text><ellipse cx="35361.29" cy="13017.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="35370.29" y="13020.5854">vibrate_handheld(int p_duration_ms = 500) : void</text><ellipse cx="35361.29" cy="13030.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="35370.29" y="13033.3901">shell_open(String p_uri) : Error</text><ellipse cx="35361.29" cy="13042.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="35370.29" y="13046.1948">set_cwd(const String &amp; p_cwd) : Error</text><ellipse cx="35361.29" cy="13055.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="35370.29" y="13058.9995">has_environment(const String &amp; p_var) const = 0 : bool</text><ellipse cx="35361.29" cy="13068.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="323" x="35370.29" y="13071.8042">get_environment(const String &amp; p_var) const = 0 : String</text><ellipse cx="35361.29" cy="13081.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="35370.29" y="13084.6089">set_environment(const String &amp; p_var, const String &amp; p_value) const = 0 : bool</text><ellipse cx="35361.29" cy="13094.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="167" x="35370.29" y="13097.4136">get_name() const = 0 : String</text><ellipse cx="35361.29" cy="13107.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="35370.29" y="13110.2183">get_cmdline_args() const : List&lt;String&gt;</text><ellipse cx="35361.29" cy="13119.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="35370.29" y="13123.0229">get_model_name() const : String</text><ellipse cx="35361.29" cy="13132.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="35370.29" y="13135.8276">ensure_user_data_dir() : void</text><ellipse cx="35361.29" cy="13145.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="35370.29" y="13148.6323">get_main_loop() const = 0 : MainLoop *</text><ellipse cx="35361.29" cy="13158.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="35370.29" y="13161.437">yield() : void</text><ellipse cx="35361.29" cy="13171.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="275" x="35370.29" y="13174.2417">get_date(bool local = false) const = 0 : OS::Date</text><ellipse cx="35361.29" cy="13183.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="35370.29" y="13187.0464">get_time(bool local = false) const = 0 : OS::Time</text><ellipse cx="35361.29" cy="13196.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="289" x="35370.29" y="13199.8511">get_time_zone_info() const = 0 : OS::TimeZoneInfo</text><ellipse cx="35361.29" cy="13209.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="35370.29" y="13212.6558">get_iso_date_time(bool local = false) const : String</text><ellipse cx="35361.29" cy="13222.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="35370.29" y="13225.4604">get_unix_time() const : uint64_t</text><ellipse cx="35361.29" cy="13235.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="35370.29" y="13238.2651">get_system_time_secs() const : uint64_t</text><ellipse cx="35361.29" cy="13247.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="35370.29" y="13251.0698">get_system_time_msecs() const : uint64_t</text><ellipse cx="35361.29" cy="13260.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="35370.29" y="13263.8745">delay_usec(uint32_t p_usec) const = 0 : void</text><ellipse cx="35361.29" cy="13273.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="35370.29" y="13276.6792">add_frame_delay(bool p_can_draw) : void</text><ellipse cx="35361.29" cy="13286.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="204" x="35370.29" y="13289.4839">get_ticks_usec() const = 0 : uint64_t</text><ellipse cx="35361.29" cy="13299.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="35370.29" y="13302.2886">get_ticks_msec() const : uint32_t</text><ellipse cx="35361.29" cy="13311.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="35370.29" y="13315.0933">get_splash_tick_msec() const : uint64_t</text><ellipse cx="35361.29" cy="13324.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="156" x="35370.29" y="13327.8979">can_draw() const = 0 : bool</text><ellipse cx="35361.29" cy="13337.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="35370.29" y="13340.7026">is_userfs_persistent() const : bool</text><ellipse cx="35361.29" cy="13350.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="35370.29" y="13353.5073">is_stdout_verbose() const : bool</text><ellipse cx="35361.29" cy="13363.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="35370.29" y="13366.312">is_stdout_debug_enabled() const : bool</text><ellipse cx="35361.29" cy="13375.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="35370.29" y="13379.1167">disable_crash_handler() : void</text><ellipse cx="35361.29" cy="13388.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="35370.29" y="13391.9214">is_disable_crash_handler() const : bool</text><ellipse cx="35361.29" cy="13401.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="35370.29" y="13404.7261">initialize_debugging() : void</text><ellipse cx="35361.29" cy="13414.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="35370.29" y="13417.5308">has_virtual_keyboard() const : bool</text><ellipse cx="35361.29" cy="13427.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1147" x="35370.29" y="13430.3354">show_virtual_keyboard(const String &amp; p_existing_text, const Rect2 &amp; p_screen_rect = Rect2(), bool p_multiline = false, int p_max_input_length = -1, int p_cursor_start = -1, int p_cursor_end = -1) : void</text><ellipse cx="35361.29" cy="13439.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="35370.29" y="13443.1401">hide_virtual_keyboard() : void</text><ellipse cx="35361.29" cy="13452.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="35370.29" y="13455.9448">get_virtual_keyboard_height() const : int</text><ellipse cx="35361.29" cy="13465.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="35370.29" y="13468.7495">set_cursor_shape(OS::CursorShape p_shape) : void</text><ellipse cx="35361.29" cy="13478.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="35370.29" y="13481.5542">get_cursor_shape() const : OS::CursorShape</text><ellipse cx="35361.29" cy="13491.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="642" x="35370.29" y="13494.3589">set_custom_mouse_cursor(const RES &amp; p_cursor, OS::CursorShape p_shape, const Vector2 &amp; p_hotspot) : void</text><ellipse cx="35361.29" cy="13503.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="35370.29" y="13507.1636">get_swap_ok_cancel() : bool</text><ellipse cx="35361.29" cy="13516.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="35370.29" y="13519.9683">dump_memory_to_file(const char * p_file) : void</text><ellipse cx="35361.29" cy="13529.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="35370.29" y="13532.7729">dump_resources_to_file(const char * p_file) : void</text><ellipse cx="35361.29" cy="13542.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="35370.29" y="13545.5776">print_resources_in_use(bool p_short = false) : void</text><ellipse cx="35361.29" cy="13555.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="35370.29" y="13558.3823">print_all_resources(String p_to_file = "") : void</text><ellipse cx="35361.29" cy="13567.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="35370.29" y="13571.187">get_static_memory_usage() const : uint64_t</text><ellipse cx="35361.29" cy="13580.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="35370.29" y="13583.9917">get_static_memory_peak_usage() const : uint64_t</text><ellipse cx="35361.29" cy="13593.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="35370.29" y="13596.7964">get_dynamic_memory_usage() const : uint64_t</text><ellipse cx="35361.29" cy="13606.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="35370.29" y="13609.6011">get_free_static_memory() const : uint64_t</text><ellipse cx="35361.29" cy="13619.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="35370.29" y="13622.4058">get_render_thread_mode() const : OS::RenderThreadMode</text><ellipse cx="35361.29" cy="13632" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="35370.29" y="13635.2104">get_locale() const : String</text><ellipse cx="35361.29" cy="13644.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="35370.29" y="13648.0151">get_safe_dir_name(const String &amp; p_dir_name, bool p_allow_dir_separator = false) const : String</text><ellipse cx="35361.29" cy="13657.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="35370.29" y="13660.8198">get_godot_dir_name() const : String</text><ellipse cx="35361.29" cy="13670.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="35370.29" y="13673.6245">get_data_path() const : String</text><ellipse cx="35361.29" cy="13683.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="35370.29" y="13686.4292">get_config_path() const : String</text><ellipse cx="35361.29" cy="13696.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="35370.29" y="13699.2339">get_cache_path() const : String</text><ellipse cx="35361.29" cy="13708.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="35370.29" y="13712.0386">get_bundle_resource_dir() const : String</text><ellipse cx="35361.29" cy="13721.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="35370.29" y="13724.8433">get_user_data_dir() const : String</text><ellipse cx="35361.29" cy="13734.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="35370.29" y="13737.6479">get_resource_dir() const : String</text><ellipse cx="35361.29" cy="13747.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="35370.29" y="13750.4526">get_system_dir(OS::SystemDir p_dir, bool p_shared_storage = true) const : String</text><ellipse cx="35361.29" cy="13760.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="35370.29" y="13763.2573">move_to_trash(const String &amp; p_path) : Error</text><ellipse cx="35361.29" cy="13772.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="35370.29" y="13776.062">set_no_window_mode(bool p_enable) : void</text><ellipse cx="35361.29" cy="13785.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="35370.29" y="13788.8667">is_no_window_mode_enabled() const : bool</text><ellipse cx="35361.29" cy="13798.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="35370.29" y="13801.6714">has_touchscreen_ui_hint() const : bool</text><ellipse cx="35361.29" cy="13811.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="35370.29" y="13814.4761">set_screen_orientation(OS::ScreenOrientation p_orientation) : void</text><ellipse cx="35361.29" cy="13824.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="35370.29" y="13827.2808">get_screen_orientation() const : OS::ScreenOrientation</text><ellipse cx="35361.29" cy="13836.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="546" x="35370.29" y="13840.0854">get_screen_orientation_from_string(const String &amp; p_orientation) const : OS::ScreenOrientation</text><ellipse cx="35361.29" cy="13849.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="35370.29" y="13852.8901">enable_for_stealing_focus(OS::ProcessID pid) : void</text><ellipse cx="35361.29" cy="13862.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="35370.29" y="13865.6948">move_window_to_foreground() : void</text><ellipse cx="35361.29" cy="13875.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="35370.29" y="13878.4995">debug_break() : void</text><ellipse cx="35361.29" cy="13888.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="35370.29" y="13891.3042">release_rendering_thread() : void</text><ellipse cx="35361.29" cy="13900.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="35370.29" y="13904.1089">make_rendering_thread() : void</text><ellipse cx="35361.29" cy="13913.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="35370.29" y="13916.9136">swap_buffers() : void</text><ellipse cx="35361.29" cy="13926.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="35370.29" y="13929.7183">set_native_icon(const String &amp; p_filename) : void</text><ellipse cx="35361.29" cy="13939.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="35370.29" y="13942.5229">set_icon(const Ref&lt;Image&gt; &amp; p_icon) : void</text><ellipse cx="35361.29" cy="13952.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="35370.29" y="13955.3276">get_exit_code() const : int</text><ellipse cx="35361.29" cy="13964.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="35370.29" y="13968.1323">set_exit_code(int p_code) : void</text><ellipse cx="35361.29" cy="13977.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="35370.29" y="13980.937">is_custom_exit_code() : bool</text><ellipse cx="35361.29" cy="13990.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="35370.29" y="13993.7417">get_processor_count() const : int</text><ellipse cx="35361.29" cy="14003.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="35370.29" y="14006.5464">get_unique_id() const : String</text><ellipse cx="35361.29" cy="14016.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="35370.29" y="14019.3511">native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error</text><ellipse cx="35361.29" cy="14028.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="35370.29" y="14032.1558">native_video_is_playing() const : bool</text><ellipse cx="35361.29" cy="14041.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="35370.29" y="14044.9604">native_video_pause() : void</text><ellipse cx="35361.29" cy="14054.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="35370.29" y="14057.7651">native_video_unpause() : void</text><ellipse cx="35361.29" cy="14067.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="35370.29" y="14070.5698">native_video_stop() : void</text><ellipse cx="35361.29" cy="14080.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="35370.29" y="14083.3745">can_use_threads() const : bool</text><ellipse cx="35361.29" cy="14092.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="661" x="35370.29" y="14096.1792">dialog_show(String p_title, String p_description, Vector&lt;String&gt; p_buttons, Object * p_obj, String p_callback) : Error</text><ellipse cx="35361.29" cy="14105.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="35370.29" y="14108.9839">dialog_input_text(String p_title, String p_description, String p_partial, Object * p_obj, String p_callback) : Error</text><ellipse cx="35361.29" cy="14118.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="35370.29" y="14121.7886">get_latin_keyboard_variant() const : OS::LatinKeyboardVariant</text><ellipse cx="35361.29" cy="14131.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="35370.29" y="14134.5933">keyboard_get_layout_count() const : int</text><ellipse cx="35361.29" cy="14144.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="35370.29" y="14147.3979">keyboard_get_current_layout() const : int</text><ellipse cx="35361.29" cy="14156.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="35370.29" y="14160.2026">keyboard_set_current_layout(int p_index) : void</text><ellipse cx="35361.29" cy="14169.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="35370.29" y="14173.0073">keyboard_get_layout_language(int p_index) const : String</text><ellipse cx="35361.29" cy="14182.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="35370.29" y="14185.812">keyboard_get_layout_name(int p_index) const : String</text><ellipse cx="35361.29" cy="14195.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="35370.29" y="14198.6167">is_joy_known(int p_device) : bool</text><ellipse cx="35361.29" cy="14208.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="35370.29" y="14211.4214">get_joy_guid(int p_device) const : String</text><ellipse cx="35361.29" cy="14221.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="35370.29" y="14224.2261">set_context(int p_context) : void</text><ellipse cx="35361.29" cy="14233.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="35370.29" y="14237.0308">set_use_vsync(bool p_enable) : void</text><ellipse cx="35361.29" cy="14246.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="35370.29" y="14249.8354">is_vsync_enabled() const : bool</text><ellipse cx="35361.29" cy="14259.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="35370.29" y="14262.6401">_set_use_vsync(bool p_enable) : void</text><ellipse cx="35361.29" cy="14272.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="35370.29" y="14275.4448">set_vsync_via_compositor(bool p_enable) : void</text><ellipse cx="35361.29" cy="14285.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="35370.29" y="14288.2495">is_vsync_via_compositor_enabled() const : bool</text><ellipse cx="35361.29" cy="14297.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="35370.29" y="14301.0542">get_power_state() : OS::PowerState</text><ellipse cx="35361.29" cy="14310.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="35370.29" y="14313.8589">get_power_seconds_left() : int</text><ellipse cx="35361.29" cy="14323.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="35370.29" y="14326.6636">get_power_percent_left() : int</text><ellipse cx="35361.29" cy="14336.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="35370.29" y="14339.4683">force_process_input() : void</text><ellipse cx="35361.29" cy="14349.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="35370.29" y="14352.2729">has_feature(const String &amp; p_feature) : bool</text><ellipse cx="35361.29" cy="14361.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="466" x="35370.29" y="14365.0776">set_has_server_feature_callback(OS::HasServerFeatureCallback p_callback) : void</text><ellipse cx="35361.29" cy="14374.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="35370.29" y="14377.8823">is_layered_allowed() const : bool</text><ellipse cx="35361.29" cy="14387.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="35370.29" y="14390.687">is_hidpi_allowed() const : bool</text><ellipse cx="35361.29" cy="14400.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="35370.29" y="14403.4917">set_restart_on_exit(bool p_restart, const List&lt;String&gt; &amp; p_restart_arguments) : void</text><ellipse cx="35361.29" cy="14413.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="35370.29" y="14416.2964">is_restart_on_exit_set() const : bool</text><ellipse cx="35361.29" cy="14425.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="35370.29" y="14429.1011">get_restart_on_exit_arguments() const : List&lt;String&gt;</text><ellipse cx="35361.29" cy="14438.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="35370.29" y="14441.9058">request_permission(const String &amp; p_name) : bool</text><ellipse cx="35361.29" cy="14451.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="35370.29" y="14454.7104">request_permissions() : bool</text><ellipse cx="35361.29" cy="14464.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="35370.29" y="14467.5151">get_granted_permissions() const : Vector&lt;String&gt;</text><ellipse cx="35361.29" cy="14477.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="35370.29" y="14480.3198">process_and_drop_events() : void</text><ellipse cx="35361.29" cy="14489.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="35370.29" y="14493.1245">OS() : void</text><ellipse cx="35361.29" cy="14502.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="35370.29" y="14505.9292">~OS() : void</text><!--MD5=[3066cc904e29be9ea26e95834396af6e]
class C_0001191393512042218074--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39" target="_top" title="IP" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39" xlink:show="new" xlink:title="IP" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="380.9219" id="C_0001191393512042218074" style="stroke: #A80036; stroke-width: 1.5;" width="625" x="23692.79" y="8642.4531"/><ellipse cx="23995.54" cy="8658.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23995.6494,8653.7969 L23994.4931,8658.875 L23996.8213,8658.875 L23995.6494,8653.7969 Z M23994.165,8651.5625 L23997.1494,8651.5625 L24000.5088,8663.9531 L23998.0556,8663.9531 L23997.29,8660.8906 L23994.0088,8660.8906 L23993.2588,8663.9531 L23990.8213,8663.9531 L23994.165,8651.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="11" x="24016.04" y="8662.6074">IP</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23693.79" x2="24316.79" y1="8674.4531" y2="8674.4531"/><ellipse cx="23703.79" cy="8685.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="23712.79" y="8688.6636">RESOLVER_MAX_QUERIES : enum</text><ellipse cx="23703.79" cy="8698.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="23712.79" y="8701.4683">RESOLVER_INVALID_ID : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23693.79" x2="24316.79" y1="8708.0625" y2="8708.0625"/><ellipse cx="23703.79" cy="8719.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="23712.79" y="8722.2729">get_class() const : String</text><ellipse cx="23703.79" cy="8731.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="23712.79" y="8735.0776">_get_class_namev() const : const StringName *</text><ellipse cx="23703.79" cy="8744.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="23712.79" y="8747.8823">get_class_ptr_static() : void *</text><ellipse cx="23703.79" cy="8757.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="23712.79" y="8760.687">get_class_static() : String</text><ellipse cx="23703.79" cy="8770.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="23712.79" y="8773.4917">get_parent_class_static() : String</text><ellipse cx="23703.79" cy="8783.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="23712.79" y="8786.2964">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="23703.79" cy="8795.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="23712.79" y="8799.1011">get_category_static() : String</text><ellipse cx="23703.79" cy="8808.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="23712.79" y="8811.9058">inherits_static() : String</text><ellipse cx="23703.79" cy="8821.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="23712.79" y="8824.7104">is_class(const String &amp; p_class) const : bool</text><ellipse cx="23703.79" cy="8834.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23712.79" y="8837.5151">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="23703.79" cy="8847.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="23712.79" y="8850.3198">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="23703.79" cy="8859.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="23712.79" y="8863.1245">initialize_class() : void</text><ellipse cx="23703.79" cy="8872.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="23712.79" y="8875.9292">resolve_hostname(const String &amp; p_hostname, IP::Type p_type = TYPE_ANY) : IP_Address</text><ellipse cx="23703.79" cy="8885.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="599" x="23712.79" y="8888.7339">resolve_hostname_queue_item(const String &amp; p_hostname, IP::Type p_type = TYPE_ANY) : IP::ResolverID</text><ellipse cx="23703.79" cy="8898.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="23712.79" y="8901.5386">get_resolve_item_status(IP::ResolverID p_id) const : IP::ResolverStatus</text><ellipse cx="23703.79" cy="8911.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="23712.79" y="8914.3433">get_resolve_item_address(IP::ResolverID p_id) const : IP_Address</text><ellipse cx="23703.79" cy="8923.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="23712.79" y="8927.1479">get_local_addresses(List&lt;IP_Address&gt; * r_addresses) const : void</text><ellipse cx="23703.79" cy="8936.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="23712.79" y="8939.9526">get_local_interfaces(Map&lt;String,IP::Interface_Info&gt; * r_interfaces) const = 0 : void</text><ellipse cx="23703.79" cy="8949.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="23712.79" y="8952.7573">erase_resolve_item(IP::ResolverID p_id) : void</text><ellipse cx="23703.79" cy="8962.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="23712.79" y="8965.562">clear_cache(const String &amp; p_hostname = "") : void</text><ellipse cx="23703.79" cy="8975.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="116" x="23712.79" y="8978.3667">get_singleton() : IP *</text><ellipse cx="23703.79" cy="8987.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="76" x="23712.79" y="8991.1714">create() : IP *</text><ellipse cx="23703.79" cy="9000.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="23712.79" y="9003.9761">IP() : void</text><ellipse cx="23703.79" cy="9013.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="23712.79" y="9016.7808">~IP() : void</text></a><!--MD5=[68528b1b7401aeebca63d15a2c5c8504]
class C_0000825523737350882091--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/message_queue.h#L37" target="_top" title="MessageQueue" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/message_queue.h#L37" xlink:show="new" xlink:title="MessageQueue" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="227.2656" id="C_0000825523737350882091" style="stroke: #A80036; stroke-width: 1.5;" width="1434" x="24770.29" y="201.9531"/><ellipse cx="25434.54" cy="217.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25437.5088,223.5938 Q25436.9306,223.8906 25436.29,224.0313 Q25435.6494,224.1875 25434.9463,224.1875 Q25432.4463,224.1875 25431.1181,222.5469 Q25429.8056,220.8906 25429.8056,217.7656 Q25429.8056,214.6406 25431.1181,212.9844 Q25432.4463,211.3281 25434.9463,211.3281 Q25435.6494,211.3281 25436.29,211.4844 Q25436.9463,211.6406 25437.5088,211.9375 L25437.5088,214.6563 Q25436.8838,214.0781 25436.29,213.8125 Q25435.6963,213.5313 25435.0713,213.5313 Q25433.7275,213.5313 25433.04,214.6094 Q25432.3525,215.6719 25432.3525,217.7656 Q25432.3525,219.8594 25433.04,220.9375 Q25433.7275,222 25435.0713,222 Q25435.6963,222 25436.29,221.7344 Q25436.8838,221.4531 25437.5088,220.875 L25437.5088,223.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="25455.04" y="222.1074">MessageQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24771.29" x2="26203.29" y1="233.9531" y2="233.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24771.29" x2="26203.29" y1="241.9531" y2="241.9531"/><ellipse cx="24781.29" cy="252.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="194" x="24790.29" y="256.1636">get_singleton() : MessageQueue *</text><ellipse cx="24781.29" cy="265.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="750" x="24790.29" y="268.9683">push_call(ObjectID p_id, const StringName &amp; p_method, const Variant ** p_args, int p_argcount, bool p_show_error = false) : Error</text><ellipse cx="24781.29" cy="278.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1385" x="24790.29" y="281.7729">push_call(ObjectID p_id, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Error</text><ellipse cx="24781.29" cy="291.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="24790.29" y="294.5776">push_notification(ObjectID p_id, int p_notification) : Error</text><ellipse cx="24781.29" cy="304.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="24790.29" y="307.3823">push_set(ObjectID p_id, const StringName &amp; p_prop, const Variant &amp; p_value) : Error</text><ellipse cx="24781.29" cy="316.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1408" x="24790.29" y="320.187">push_call(Object * p_object, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Error</text><ellipse cx="24781.29" cy="329.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="24790.29" y="332.9917">push_notification(Object * p_object, int p_notification) : Error</text><ellipse cx="24781.29" cy="342.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="24790.29" y="345.7964">push_set(Object * p_object, const StringName &amp; p_prop, const Variant &amp; p_value) : Error</text><ellipse cx="24781.29" cy="355.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="24790.29" y="358.6011">statistics() : void</text><ellipse cx="24781.29" cy="368.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="24790.29" y="371.4058">flush() : void</text><ellipse cx="24781.29" cy="381" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="24790.29" y="384.2104">is_flushing() const : bool</text><ellipse cx="24781.29" cy="393.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="24790.29" y="397.0151">get_max_buffer_usage() const : int</text><ellipse cx="24781.29" cy="406.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="24790.29" y="409.8198">MessageQueue() : void</text><ellipse cx="24781.29" cy="419.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="24790.29" y="422.6245">~MessageQueue() : void</text></a><!--MD5=[2e1804fc10b971ae34ea328508bc0a5b]
class C_0000132048052014479231--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45" target="_top" title="_ObjectDebugLock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45" xlink:show="new" xlink:title="_ObjectDebugLock" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0000132048052014479231" style="stroke: #A80036; stroke-width: 1.5;" width="252" x="25970.29" y="2308.9531"/><ellipse cx="26034.54" cy="2324.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26037.5088,2330.5938 Q26036.9306,2330.8906 26036.29,2331.0313 Q26035.6494,2331.1875 26034.9463,2331.1875 Q26032.4463,2331.1875 26031.1181,2329.5469 Q26029.8056,2327.8906 26029.8056,2324.7656 Q26029.8056,2321.6406 26031.1181,2319.9844 Q26032.4463,2318.3281 26034.9463,2318.3281 Q26035.6494,2318.3281 26036.29,2318.4844 Q26036.9463,2318.6406 26037.5088,2318.9375 L26037.5088,2321.6563 Q26036.8838,2321.0781 26036.29,2320.8125 Q26035.6963,2320.5313 26035.0713,2320.5313 Q26033.7275,2320.5313 26033.04,2321.6094 Q26032.3525,2322.6719 26032.3525,2324.7656 Q26032.3525,2326.8594 26033.04,2327.9375 Q26033.7275,2329 26035.0713,2329 Q26035.6963,2329 26036.29,2328.7344 Q26036.8838,2328.4531 26037.5088,2327.875 L26037.5088,2330.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="26055.04" y="2329.1074">_ObjectDebugLock</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25971.29" x2="26221.29" y1="2340.9531" y2="2340.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" xlink:show="new" xlink:title="obj" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="25976.29" y="2346.9531"/><ellipse cx="25981.29" cy="2351.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" xlink:show="new" xlink:title="obj" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="25990.29" y="2355.1636">obj : Object *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="25971.29" x2="26221.29" y1="2361.7578" y2="2361.7578"/><ellipse cx="25981.29" cy="2372.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="25990.29" y="2375.9683">_ObjectDebugLock(Object * p_obj) : void</text><ellipse cx="25981.29" cy="2385.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="25990.29" y="2388.7729">_ObjectDebugLock() : void</text><!--MD5=[4e04dc62cf4bb361958a89934798b4f1]
class C_0000115801560197752094--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147" target="_top" title="_ObjectSignalDisconnectData" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147" xlink:show="new" xlink:title="_ObjectSignalDisconnectData" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0000115801560197752094" style="stroke: #A80036; stroke-width: 1.5;" width="216" x="35139.29" y="707.9531"/><ellipse cx="35154.29" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35157.2588,729.5938 Q35156.6806,729.8906 35156.04,730.0313 Q35155.3994,730.1875 35154.6963,730.1875 Q35152.1963,730.1875 35150.8681,728.5469 Q35149.5556,726.8906 35149.5556,723.7656 Q35149.5556,720.6406 35150.8681,718.9844 Q35152.1963,717.3281 35154.6963,717.3281 Q35155.3994,717.3281 35156.04,717.4844 Q35156.6963,717.6406 35157.2588,717.9375 L35157.2588,720.6563 Q35156.6338,720.0781 35156.04,719.8125 Q35155.4463,719.5313 35154.8213,719.5313 Q35153.4775,719.5313 35152.79,720.6094 Q35152.1025,721.6719 35152.1025,723.7656 Q35152.1025,725.8594 35152.79,726.9375 Q35153.4775,728 35154.8213,728 Q35155.4463,728 35156.04,727.7344 Q35156.6338,727.4531 35157.2588,726.875 L35157.2588,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="184" x="35168.29" y="728.1074">_ObjectSignalDisconnectData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35140.29" x2="35354.29" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" xlink:show="new" xlink:title="signal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35145.29" y="745.9531"/><ellipse cx="35150.29" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" xlink:show="new" xlink:title="signal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="35159.29" y="754.1636">signal : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" xlink:show="new" xlink:title="target" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35145.29" y="758.7578"/><ellipse cx="35150.29" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" xlink:show="new" xlink:title="target" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="35159.29" y="766.9683">target : Object *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="35140.29" x2="35354.29" y1="773.5625" y2="773.5625"/><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35145.29" y="779.5625"/><ellipse cx="35150.29" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="35159.29" y="787.7729">method : StringName</text></a><!--MD5=[3306ef7474ee8a0f7d63514abbcbe3b8]
class C_0000535376932101028371--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38" target="_top" title="Input" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38" xlink:show="new" xlink:title="Input" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="854.6953" id="C_0000535376932101028371" style="stroke: #A80036; stroke-width: 1.5;" width="876" x="25292.29" y="8405.4531"/><ellipse cx="25709.54" cy="8421.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25709.6494,8416.7969 L25708.4931,8421.875 L25710.8213,8421.875 L25709.6494,8416.7969 Z M25708.165,8414.5625 L25711.1494,8414.5625 L25714.5088,8426.9531 L25712.0556,8426.9531 L25711.29,8423.8906 L25708.0088,8423.8906 L25707.2588,8426.9531 L25704.8213,8426.9531 L25708.165,8414.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="33" x="25730.04" y="8425.6074">Input</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25293.29" x2="26167.29" y1="8437.4531" y2="8437.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25293.29" x2="26167.29" y1="8445.4531" y2="8445.4531"/><ellipse cx="25303.29" cy="8456.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="25312.29" y="8459.6636">get_class() const : String</text><ellipse cx="25303.29" cy="8469.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="25312.29" y="8472.4683">_get_class_namev() const : const StringName *</text><ellipse cx="25303.29" cy="8482.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="25312.29" y="8485.2729">get_class_ptr_static() : void *</text><ellipse cx="25303.29" cy="8494.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="25312.29" y="8498.0776">get_class_static() : String</text><ellipse cx="25303.29" cy="8507.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="25312.29" y="8510.8823">get_parent_class_static() : String</text><ellipse cx="25303.29" cy="8520.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="25312.29" y="8523.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="25303.29" cy="8533.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="25312.29" y="8536.4917">get_category_static() : String</text><ellipse cx="25303.29" cy="8546.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="25312.29" y="8549.2964">inherits_static() : String</text><ellipse cx="25303.29" cy="8558.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="25312.29" y="8562.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="25303.29" cy="8571.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="25312.29" y="8574.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="25303.29" cy="8584.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="25312.29" y="8587.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="25303.29" cy="8597.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="25312.29" y="8600.5151">initialize_class() : void</text><ellipse cx="25303.29" cy="8610.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="25312.29" y="8613.3198">set_mouse_mode(Input::MouseMode p_mode) : void</text><ellipse cx="25303.29" cy="8622.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="25312.29" y="8626.1245">get_mouse_mode() const : Input::MouseMode</text><ellipse cx="25303.29" cy="8635.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="25312.29" y="8638.9292">get_singleton() : Input *</text><ellipse cx="25303.29" cy="8648.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="272" x="25312.29" y="8651.7339">is_key_pressed(int p_scancode) const = 0 : bool</text><ellipse cx="25303.29" cy="8661.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="25312.29" y="8664.5386">is_mouse_button_pressed(int p_button) const = 0 : bool</text><ellipse cx="25303.29" cy="8674.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="25312.29" y="8677.3433">is_joy_button_pressed(int p_device, int p_button) const = 0 : bool</text><ellipse cx="25303.29" cy="8686.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="25312.29" y="8690.1479">is_action_pressed(const StringName &amp; p_action) const = 0 : bool</text><ellipse cx="25303.29" cy="8699.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="25312.29" y="8702.9526">is_action_just_pressed(const StringName &amp; p_action) const = 0 : bool</text><ellipse cx="25303.29" cy="8712.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="25312.29" y="8715.7573">is_action_just_released(const StringName &amp; p_action) const = 0 : bool</text><ellipse cx="25303.29" cy="8725.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="378" x="25312.29" y="8728.562">get_action_strength(const StringName &amp; p_action) const = 0 : float</text><ellipse cx="25303.29" cy="8738.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="25312.29" y="8741.3667">get_joy_axis(int p_device, int p_axis) const = 0 : float</text><ellipse cx="25303.29" cy="8750.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="204" x="25312.29" y="8754.1714">get_joy_name(int p_idx) = 0 : String</text><ellipse cx="25303.29" cy="8763.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="25312.29" y="8766.9761">get_connected_joypads() = 0 : Array</text><ellipse cx="25303.29" cy="8776.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="25312.29" y="8779.7808">joy_connection_changed(int p_idx, bool p_connected, String p_name, String p_guid) = 0 : void</text><ellipse cx="25303.29" cy="8789.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="448" x="25312.29" y="8792.5854">add_joy_mapping(String p_mapping, bool p_update_existing = false) = 0 : void</text><ellipse cx="25303.29" cy="8802.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="264" x="25312.29" y="8805.3901">remove_joy_mapping(String p_guid) = 0 : void</text><ellipse cx="25303.29" cy="8814.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="210" x="25312.29" y="8818.1948">is_joy_known(int p_device) = 0 : bool</text><ellipse cx="25303.29" cy="8827.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="250" x="25312.29" y="8830.9995">get_joy_guid(int p_device) const = 0 : String</text><ellipse cx="25303.29" cy="8840.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="25312.29" y="8843.8042">get_joy_vibration_strength(int p_device) = 0 : Vector2</text><ellipse cx="25303.29" cy="8853.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="25312.29" y="8856.6089">get_joy_vibration_duration(int p_device) = 0 : float</text><ellipse cx="25303.29" cy="8866.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="25312.29" y="8869.4136">get_joy_vibration_timestamp(int p_device) = 0 : uint64_t</text><ellipse cx="25303.29" cy="8879.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="659" x="25312.29" y="8882.2183">start_joy_vibration(int p_device, float p_weak_magnitude, float p_strong_magnitude, float p_duration = 0) = 0 : void</text><ellipse cx="25303.29" cy="8891.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="25312.29" y="8895.0229">stop_joy_vibration(int p_device) = 0 : void</text><ellipse cx="25303.29" cy="8904.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="25312.29" y="8907.8276">vibrate_handheld(int p_duration_ms = 500) = 0 : void</text><ellipse cx="25303.29" cy="8917.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="25312.29" y="8920.6323">get_mouse_position() const = 0 : Point2</text><ellipse cx="25303.29" cy="8930.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241" x="25312.29" y="8933.437">get_last_mouse_speed() const = 0 : Point2</text><ellipse cx="25303.29" cy="8943.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="25312.29" y="8946.2417">get_mouse_button_mask() const = 0 : int</text><ellipse cx="25303.29" cy="8955.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="25312.29" y="8959.0464">warp_mouse_position(const Vector2 &amp; p_to) = 0 : void</text><ellipse cx="25303.29" cy="8968.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="598" x="25312.29" y="8971.8511">warp_mouse_motion(const Ref&lt;InputEventMouseMotion&gt; &amp; p_motion, const Rect2 &amp; p_rect) = 0 : Point2i</text><ellipse cx="25303.29" cy="8981.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="25312.29" y="8984.6558">get_gravity() const = 0 : Vector3</text><ellipse cx="25303.29" cy="8994.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="25312.29" y="8997.4604">get_accelerometer() const = 0 : Vector3</text><ellipse cx="25303.29" cy="9007.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="25312.29" y="9010.2651">get_magnetometer() const = 0 : Vector3</text><ellipse cx="25303.29" cy="9019.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="25312.29" y="9023.0698">get_gyroscope() const = 0 : Vector3</text><ellipse cx="25303.29" cy="9032.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="25312.29" y="9035.8745">action_press(const StringName &amp; p_action, float p_strength = 1.f) = 0 : void</text><ellipse cx="25303.29" cy="9045.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="314" x="25312.29" y="9048.6792">action_release(const StringName &amp; p_action) = 0 : void</text><ellipse cx="25303.29" cy="9058.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="25312.29" y="9061.4839">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="25303.29" cy="9071.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="25312.29" y="9074.2886">is_emulating_touch_from_mouse() const = 0 : bool</text><ellipse cx="25303.29" cy="9083.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="25312.29" y="9087.0933">is_emulating_mouse_from_touch() const = 0 : bool</text><ellipse cx="25303.29" cy="9096.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="332" x="25312.29" y="9099.8979">get_default_cursor_shape() const = 0 : Input::CursorShape</text><ellipse cx="25303.29" cy="9109.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="372" x="25312.29" y="9112.7026">set_default_cursor_shape(Input::CursorShape p_shape) = 0 : void</text><ellipse cx="25303.29" cy="9122.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="25312.29" y="9125.5073">get_current_cursor_shape() const = 0 : Input::CursorShape</text><ellipse cx="25303.29" cy="9135.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="850" x="25312.29" y="9138.312">set_custom_mouse_cursor(const RES &amp; p_cursor, Input::CursorShape p_shape = CURSOR_ARROW, const Vector2 &amp; p_hotspot = Vector2()) = 0 : void</text><ellipse cx="25303.29" cy="9147.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="265" x="25312.29" y="9151.1167">get_joy_button_string(int p_button) = 0 : String</text><ellipse cx="25303.29" cy="9160.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="25312.29" y="9163.9214">get_joy_axis_string(int p_axis) = 0 : String</text><ellipse cx="25303.29" cy="9173.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="335" x="25312.29" y="9176.7261">get_joy_button_index_from_string(String p_button) = 0 : int</text><ellipse cx="25303.29" cy="9186.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="25312.29" y="9189.5308">get_joy_axis_index_from_string(String p_axis) = 0 : int</text><ellipse cx="25303.29" cy="9199.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="365" x="25312.29" y="9202.3354">parse_input_event(const Ref&lt;InputEvent&gt; &amp; p_event) = 0 : void</text><ellipse cx="25303.29" cy="9211.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="398" x="25312.29" y="9215.1401">accumulate_input_event(const Ref&lt;InputEvent&gt; &amp; p_event) = 0 : void</text><ellipse cx="25303.29" cy="9224.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="25312.29" y="9227.9448">flush_accumulated_events() = 0 : void</text><ellipse cx="25303.29" cy="9237.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="25312.29" y="9240.7495">set_use_accumulated_input(bool p_enable) = 0 : void</text><ellipse cx="25303.29" cy="9250.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="25312.29" y="9253.5542">Input() : void</text></a><!--MD5=[6de3aa3d86b19b8e0f1ee230f1ebf3bf]
class C_0000314051240057057851--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37" target="_top" title="InputMap" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37" xlink:show="new" xlink:title="InputMap" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="444.9453" id="C_0000314051240057057851" style="stroke: #A80036; stroke-width: 1.5;" width="921" x="21414.79" y="8610.4531"/><ellipse cx="21842.04" cy="8626.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M21845.0088,8632.0938 Q21844.4306,8632.3906 21843.79,8632.5313 Q21843.1494,8632.6875 21842.4463,8632.6875 Q21839.9463,8632.6875 21838.6181,8631.0469 Q21837.3056,8629.3906 21837.3056,8626.2656 Q21837.3056,8623.1406 21838.6181,8621.4844 Q21839.9463,8619.8281 21842.4463,8619.8281 Q21843.1494,8619.8281 21843.79,8619.9844 Q21844.4463,8620.1406 21845.0088,8620.4375 L21845.0088,8623.1563 Q21844.3838,8622.5781 21843.79,8622.3125 Q21843.1963,8622.0313 21842.5713,8622.0313 Q21841.2275,8622.0313 21840.54,8623.1094 Q21839.8525,8624.1719 21839.8525,8626.2656 Q21839.8525,8628.3594 21840.54,8629.4375 Q21841.2275,8630.5 21842.5713,8630.5 Q21843.1963,8630.5 21843.79,8630.2344 Q21844.3838,8629.9531 21845.0088,8629.375 L21845.0088,8632.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="21862.54" y="8630.6074">InputMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21415.79" x2="22334.79" y1="8642.4531" y2="8642.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" target="_top" title="A special value used to signify that a given Action can be triggered by any device" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" xlink:show="new" xlink:title="A special value used to signify that a given Action can be triggered by any device" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="21420.79" y="8648.4531"/><ellipse cx="21425.79" cy="8653.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" target="_top" title="A special value used to signify that a given Action can be triggered by any device" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" xlink:show="new" xlink:title="A special value used to signify that a given Action can be triggered by any device" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="99" x="21434.79" y="8656.6636">ALL_DEVICES : int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="21415.79" x2="22334.79" y1="8663.2578" y2="8663.2578"/><ellipse cx="21425.79" cy="8674.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="21434.79" y="8677.4683">get_class() const : String</text><ellipse cx="21425.79" cy="8687.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="21434.79" y="8690.2729">_get_class_namev() const : const StringName *</text><ellipse cx="21425.79" cy="8699.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="21434.79" y="8703.0776">get_class_ptr_static() : void *</text><ellipse cx="21425.79" cy="8712.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="21434.79" y="8715.8823">get_class_static() : String</text><ellipse cx="21425.79" cy="8725.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="21434.79" y="8728.687">get_parent_class_static() : String</text><ellipse cx="21425.79" cy="8738.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="21434.79" y="8741.4917">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="21425.79" cy="8751.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="21434.79" y="8754.2964">get_category_static() : String</text><ellipse cx="21425.79" cy="8763.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="21434.79" y="8767.1011">inherits_static() : String</text><ellipse cx="21425.79" cy="8776.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="21434.79" y="8779.9058">is_class(const String &amp; p_class) const : bool</text><ellipse cx="21425.79" cy="8789.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="21434.79" y="8792.7104">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="21425.79" cy="8802.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="21434.79" y="8805.5151">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="21425.79" cy="8815.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="21434.79" y="8818.3198">initialize_class() : void</text><ellipse cx="21425.79" cy="8827.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="157" x="21434.79" y="8831.1245">get_singleton() : InputMap *</text><ellipse cx="21425.79" cy="8840.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="21434.79" y="8843.9292">has_action(const StringName &amp; p_action) const : bool</text><ellipse cx="21425.79" cy="8853.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="21434.79" y="8856.7339">get_actions() const : List&lt;StringName&gt;</text><ellipse cx="21425.79" cy="8866.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="21434.79" y="8869.5386">add_action(const StringName &amp; p_action, float p_deadzone = 0.5) : void</text><ellipse cx="21425.79" cy="8879.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="21434.79" y="8882.3433">erase_action(const StringName &amp; p_action) : void</text><ellipse cx="21425.79" cy="8891.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="21434.79" y="8895.1479">action_get_deadzone(const StringName &amp; p_action) : float</text><ellipse cx="21425.79" cy="8904.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="21434.79" y="8907.9526">action_set_deadzone(const StringName &amp; p_action, float p_deadzone) : void</text><ellipse cx="21425.79" cy="8917.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="21434.79" y="8920.7573">action_add_event(const StringName &amp; p_action, const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="21425.79" cy="8930.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="21434.79" y="8933.562">action_has_event(const StringName &amp; p_action, const Ref&lt;InputEvent&gt; &amp; p_event) : bool</text><ellipse cx="21425.79" cy="8943.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="21434.79" y="8946.3667">action_erase_event(const StringName &amp; p_action, const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="21425.79" cy="8955.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="21434.79" y="8959.1714">action_erase_events(const StringName &amp; p_action) : void</text><ellipse cx="21425.79" cy="8968.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="21434.79" y="8971.9761">get_action_list(const StringName &amp; p_action) : const List&lt;Ref&lt;InputEvent&gt;&gt; *</text><ellipse cx="21425.79" cy="8981.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="21434.79" y="8984.7808">event_is_action(const Ref&lt;InputEvent&gt; &amp; p_event, const StringName &amp; p_action) const : bool</text><ellipse cx="21425.79" cy="8994.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="895" x="21434.79" y="8997.5854">event_get_action_status(const Ref&lt;InputEvent&gt; &amp; p_event, const StringName &amp; p_action, bool * p_pressed = __null, float * p_strength = __null) const : bool</text><ellipse cx="21425.79" cy="9007.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="21434.79" y="9010.3901">get_action_map() const : const Map&lt;StringName,InputMap::Action&gt; &amp;</text><ellipse cx="21425.79" cy="9019.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="21434.79" y="9023.1948">load_from_globals() : void</text><ellipse cx="21425.79" cy="9032.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="21434.79" y="9035.9995">load_default() : void</text><ellipse cx="21425.79" cy="9045.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="21434.79" y="9048.8042">InputMap() : void</text><!--MD5=[7f9ee7589f5b66fe26bf327ebbd73d28]
class C_0001701907280759632930--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49" target="_top" title="CameraServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49" xlink:show="new" xlink:title="CameraServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="380.9219" id="C_0001701907280759632930" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="8561.79" y="8642.4531"/><ellipse cx="8714.04" cy="8658.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8717.0088,8664.0938 Q8716.4306,8664.3906 8715.79,8664.5313 Q8715.1494,8664.6875 8714.4463,8664.6875 Q8711.9463,8664.6875 8710.6181,8663.0469 Q8709.3056,8661.3906 8709.3056,8658.2656 Q8709.3056,8655.1406 8710.6181,8653.4844 Q8711.9463,8651.8281 8714.4463,8651.8281 Q8715.1494,8651.8281 8715.79,8651.9844 Q8716.4463,8652.1406 8717.0088,8652.4375 L8717.0088,8655.1563 Q8716.3838,8654.5781 8715.79,8654.3125 Q8715.1963,8654.0313 8714.5713,8654.0313 Q8713.2275,8654.0313 8712.54,8655.1094 Q8711.8525,8656.1719 8711.8525,8658.2656 Q8711.8525,8660.3594 8712.54,8661.4375 Q8713.2275,8662.5 8714.5713,8662.5 Q8715.1963,8662.5 8715.79,8662.2344 Q8716.3838,8661.9531 8717.0088,8661.375 L8717.0088,8664.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="8734.54" y="8662.6074">CameraServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8562.79" x2="8961.79" y1="8674.4531" y2="8674.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8562.79" x2="8961.79" y1="8682.4531" y2="8682.4531"/><ellipse cx="8572.79" cy="8693.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="8581.79" y="8696.6636">get_class() const : String</text><ellipse cx="8572.79" cy="8706.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="8581.79" y="8709.4683">_get_class_namev() const : const StringName *</text><ellipse cx="8572.79" cy="8719.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="8581.79" y="8722.2729">get_class_ptr_static() : void *</text><ellipse cx="8572.79" cy="8731.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="8581.79" y="8735.0776">get_class_static() : String</text><ellipse cx="8572.79" cy="8744.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="8581.79" y="8747.8823">get_parent_class_static() : String</text><ellipse cx="8572.79" cy="8757.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="8581.79" y="8760.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="8572.79" cy="8770.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="8581.79" y="8773.4917">get_category_static() : String</text><ellipse cx="8572.79" cy="8783.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="8581.79" y="8786.2964">inherits_static() : String</text><ellipse cx="8572.79" cy="8795.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="8581.79" y="8799.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="8572.79" cy="8808.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="8581.79" y="8811.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="8572.79" cy="8821.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="8581.79" y="8824.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="8572.79" cy="8834.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="8581.79" y="8837.5151">initialize_class() : void</text><ellipse cx="8572.79" cy="8847.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="189" x="8581.79" y="8850.3198">get_singleton() : CameraServer *</text><ellipse cx="8572.79" cy="8859.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="8581.79" y="8863.1245">create() : CameraServer *</text><ellipse cx="8572.79" cy="8872.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="8581.79" y="8875.9292">get_free_id() : int</text><ellipse cx="8572.79" cy="8885.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="8581.79" y="8888.7339">get_feed_index(int p_id) : int</text><ellipse cx="8572.79" cy="8898.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="8581.79" y="8901.5386">get_feed_by_id(int p_id) : Ref&lt;CameraFeed&gt;</text><ellipse cx="8572.79" cy="8911.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="8581.79" y="8914.3433">add_feed(const Ref&lt;CameraFeed&gt; &amp; p_feed) : void</text><ellipse cx="8572.79" cy="8923.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="8581.79" y="8927.1479">remove_feed(const Ref&lt;CameraFeed&gt; &amp; p_feed) : void</text><ellipse cx="8572.79" cy="8936.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="8581.79" y="8939.9526">get_feed(int p_index) : Ref&lt;CameraFeed&gt;</text><ellipse cx="8572.79" cy="8949.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="8581.79" y="8952.7573">get_feed_count() : int</text><ellipse cx="8572.79" cy="8962.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="8581.79" y="8965.562">get_feeds() : Array</text><ellipse cx="8572.79" cy="8975.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="8581.79" y="8978.3667">feed_texture(int p_id, CameraServer::FeedImage p_texture) : RID</text><ellipse cx="8572.79" cy="8987.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="8581.79" y="8991.1714">CameraServer() : void</text><ellipse cx="8572.79" cy="9000.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="8581.79" y="9003.9761">~CameraServer() : void</text><ellipse cx="8572.79" cy="9013.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="119" x="8581.79" y="9016.7808">make_default() : void</text></a><!--MD5=[5316dbe070bc4024b413849b0399fc2e]
class C_0001589464385186808769--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42" target="_top" title="VisualServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42" xlink:show="new" xlink:title="VisualServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="5489.9922" id="C_0001589464385186808769" style="stroke: #A80036; stroke-width: 1.5;" width="2566" x="9608.29" y="6087.9531"/><ellipse cx="10849.04" cy="6103.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M10849.1494,6099.2969 L10847.9931,6104.375 L10850.3213,6104.375 L10849.1494,6099.2969 Z M10847.665,6097.0625 L10850.6494,6097.0625 L10854.0088,6109.4531 L10851.5556,6109.4531 L10850.79,6106.3906 L10847.5088,6106.3906 L10846.7588,6109.4531 L10844.3213,6109.4531 L10847.665,6097.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="76" x="10869.54" y="6108.1074">VisualServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9609.29" x2="12173.29" y1="6119.9531" y2="6119.9531"/><ellipse cx="9619.29" cy="6130.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="9628.29" y="6134.1636">NO_INDEX_ARRAY : enum</text><ellipse cx="9619.29" cy="6143.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="9628.29" y="6146.9683">ARRAY_WEIGHTS_SIZE : enum</text><ellipse cx="9619.29" cy="6156.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="9628.29" y="6159.7729">CANVAS_ITEM_Z_MIN : enum</text><ellipse cx="9619.29" cy="6169.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="9628.29" y="6172.5776">CANVAS_ITEM_Z_MAX : enum</text><ellipse cx="9619.29" cy="6182.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="9628.29" y="6185.3823">MAX_GLOW_LEVELS : enum</text><ellipse cx="9619.29" cy="6194.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="9628.29" y="6198.187">MAX_CURSORS : enum</text><ellipse cx="9619.29" cy="6207.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="9628.29" y="6210.9917">MATERIAL_RENDER_PRIORITY_MIN : enum</text><ellipse cx="9619.29" cy="6220.5859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="9628.29" y="6223.7964">MATERIAL_RENDER_PRIORITY_MAX : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9609.29" x2="12173.29" y1="6230.3906" y2="6230.3906"/><ellipse cx="9619.29" cy="6241.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="9628.29" y="6244.6011">get_class() const : String</text><ellipse cx="9619.29" cy="6254.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="9628.29" y="6257.4058">_get_class_namev() const : const StringName *</text><ellipse cx="9619.29" cy="6267" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="9628.29" y="6270.2104">get_class_ptr_static() : void *</text><ellipse cx="9619.29" cy="6279.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="9628.29" y="6283.0151">get_class_static() : String</text><ellipse cx="9619.29" cy="6292.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="9628.29" y="6295.8198">get_parent_class_static() : String</text><ellipse cx="9619.29" cy="6305.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="9628.29" y="6308.6245">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="9619.29" cy="6318.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="9628.29" y="6321.4292">get_category_static() : String</text><ellipse cx="9619.29" cy="6331.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="9628.29" y="6334.2339">inherits_static() : String</text><ellipse cx="9619.29" cy="6343.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="9628.29" y="6347.0386">is_class(const String &amp; p_class) const : bool</text><ellipse cx="9619.29" cy="6356.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="9628.29" y="6359.8433">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="9619.29" cy="6369.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="9628.29" y="6372.6479">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="9619.29" cy="6382.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="9628.29" y="6385.4526">initialize_class() : void</text><ellipse cx="9619.29" cy="6395.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="9628.29" y="6398.2573">get_singleton() : VisualServer *</text><ellipse cx="9619.29" cy="6407.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="138" x="9628.29" y="6411.062">create() : VisualServer *</text><ellipse cx="9619.29" cy="6420.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="9628.29" y="6423.8667">texture_create() = 0 : RID</text><ellipse cx="9619.29" cy="6433.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="628" x="9628.29" y="6436.6714">texture_create_from_image(const Ref&lt;Image&gt; &amp; p_image, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) : RID</text><ellipse cx="9619.29" cy="6446.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1082" x="9628.29" y="6449.4761">texture_allocate(RID p_texture, int p_width, int p_height, int p_depth_3d, Image::Format p_format, VisualServer::TextureType p_type, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) = 0 : void</text><ellipse cx="9619.29" cy="6459.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="511" x="9628.29" y="6462.2808">texture_set_data(RID p_texture, const Ref&lt;Image&gt; &amp; p_image, int p_layer = 0) = 0 : void</text><ellipse cx="9619.29" cy="6471.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="974" x="9628.29" y="6475.0854">texture_set_data_partial(RID p_texture, const Ref&lt;Image&gt; &amp; p_image, int src_x, int src_y, int src_w, int src_h, int dst_x, int dst_y, int p_dst_mip, int p_layer = 0) = 0 : void</text><ellipse cx="9619.29" cy="6484.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="415" x="9628.29" y="6487.8901">texture_get_data(RID p_texture, int p_layer = 0) const = 0 : Ref&lt;Image&gt;</text><ellipse cx="9619.29" cy="6497.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="9628.29" y="6500.6948">texture_set_flags(RID p_texture, uint32_t p_flags) = 0 : void</text><ellipse cx="9619.29" cy="6510.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="9628.29" y="6513.4995">texture_get_flags(RID p_texture) const = 0 : uint32_t</text><ellipse cx="9619.29" cy="6523.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="9628.29" y="6526.3042">texture_get_format(RID p_texture) const = 0 : Image::Format</text><ellipse cx="9619.29" cy="6535.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="9628.29" y="6539.1089">texture_get_type(RID p_texture) const = 0 : VisualServer::TextureType</text><ellipse cx="9619.29" cy="6548.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="9628.29" y="6551.9136">texture_get_texid(RID p_texture) const = 0 : uint32_t</text><ellipse cx="9619.29" cy="6561.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="301" x="9628.29" y="6564.7183">texture_get_width(RID p_texture) const = 0 : uint32_t</text><ellipse cx="9619.29" cy="6574.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="9628.29" y="6577.5229">texture_get_height(RID p_texture) const = 0 : uint32_t</text><ellipse cx="9619.29" cy="6587.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="9628.29" y="6590.3276">texture_get_depth(RID p_texture) const = 0 : uint32_t</text><ellipse cx="9619.29" cy="6599.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="525" x="9628.29" y="6603.1323">texture_set_size_override(RID p_texture, int p_width, int p_height, int p_depth_3d) = 0 : void</text><ellipse cx="9619.29" cy="6612.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="9628.29" y="6615.937">texture_bind(RID p_texture, uint32_t p_texture_no) = 0 : void</text><ellipse cx="9619.29" cy="6625.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="9628.29" y="6628.7417">texture_set_path(RID p_texture, const String &amp; p_path) = 0 : void</text><ellipse cx="9619.29" cy="6638.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="284" x="9628.29" y="6641.5464">texture_get_path(RID p_texture) const = 0 : String</text><ellipse cx="9619.29" cy="6651.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="9628.29" y="6654.3511">texture_set_shrink_all_x2_on_set_data(bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="6663.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="707" x="9628.29" y="6667.1558">texture_set_detect_3d_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void</text><ellipse cx="9619.29" cy="6676.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="718" x="9628.29" y="6679.9604">texture_set_detect_srgb_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void</text><ellipse cx="9619.29" cy="6689.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="733" x="9628.29" y="6692.7651">texture_set_detect_normal_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void</text><ellipse cx="9619.29" cy="6702.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="9628.29" y="6705.5698">texture_debug_usage(List&lt;VisualServer::TextureInfo&gt; * r_info) = 0 : void</text><ellipse cx="9619.29" cy="6715.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="9628.29" y="6718.3745">_texture_debug_usage_bind() : Array</text><ellipse cx="9619.29" cy="6727.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="275" x="9628.29" y="6731.1792">textures_keep_original(bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="6740.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="311" x="9628.29" y="6743.9839">texture_set_proxy(RID p_proxy, RID p_base) = 0 : void</text><ellipse cx="9619.29" cy="6753.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="9628.29" y="6756.7886">texture_set_force_redraw_if_visible(RID p_texture, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="6766.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="124" x="9628.29" y="6769.5933">sky_create() = 0 : RID</text><ellipse cx="9619.29" cy="6779.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="430" x="9628.29" y="6782.3979">sky_set_texture(RID p_sky, RID p_cube_map, int p_radiance_size) = 0 : void</text><ellipse cx="9619.29" cy="6791.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="9628.29" y="6795.2026">shader_create() = 0 : RID</text><ellipse cx="9619.29" cy="6804.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="9628.29" y="6808.0073">shader_set_code(RID p_shader, const String &amp; p_code) = 0 : void</text><ellipse cx="9619.29" cy="6817.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="9628.29" y="6820.812">shader_get_code(RID p_shader) const = 0 : String</text><ellipse cx="9619.29" cy="6830.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="506" x="9628.29" y="6833.6167">shader_get_param_list(RID p_shader, List&lt;PropertyInfo&gt; * p_param_list) const = 0 : void</text><ellipse cx="9619.29" cy="6843.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="9628.29" y="6846.4214">_shader_get_param_list_bind(RID p_shader) const : Array</text><ellipse cx="9619.29" cy="6856.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="595" x="9628.29" y="6859.2261">shader_set_default_texture_param(RID p_shader, const StringName &amp; p_name, RID p_texture) = 0 : void</text><ellipse cx="9619.29" cy="6868.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="540" x="9628.29" y="6872.0308">shader_get_default_texture_param(RID p_shader, const StringName &amp; p_name) const = 0 : RID</text><ellipse cx="9619.29" cy="6881.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="9628.29" y="6884.8354">shader_add_custom_define(RID p_shader, const String &amp; p_define) = 0 : void</text><ellipse cx="9619.29" cy="6894.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="498" x="9628.29" y="6897.6401">shader_get_custom_defines(RID p_shader, Vector&lt;String&gt; * p_defines) const = 0 : void</text><ellipse cx="9619.29" cy="6907.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="460" x="9628.29" y="6910.4448">shader_remove_custom_define(RID p_shader, const String &amp; p_define) = 0 : void</text><ellipse cx="9619.29" cy="6920.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="9628.29" y="6923.2495">material_create() = 0 : RID</text><ellipse cx="9619.29" cy="6932.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="9628.29" y="6936.0542">material_set_shader(RID p_shader_material, RID p_shader) = 0 : void</text><ellipse cx="9619.29" cy="6945.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="9628.29" y="6948.8589">material_get_shader(RID p_shader_material) const = 0 : RID</text><ellipse cx="9619.29" cy="6958.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="583" x="9628.29" y="6961.6636">material_set_param(RID p_material, const StringName &amp; p_param, const Variant &amp; p_value) = 0 : void</text><ellipse cx="9619.29" cy="6971.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="491" x="9628.29" y="6974.4683">material_get_param(RID p_material, const StringName &amp; p_param) const = 0 : Variant</text><ellipse cx="9619.29" cy="6984.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="536" x="9628.29" y="6987.2729">material_get_param_default(RID p_material, const StringName &amp; p_param) const = 0 : Variant</text><ellipse cx="9619.29" cy="6996.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="9628.29" y="7000.0776">material_set_render_priority(RID p_material, int priority) = 0 : void</text><ellipse cx="9619.29" cy="7009.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="9628.29" y="7012.8823">material_set_line_width(RID p_material, float p_width) = 0 : void</text><ellipse cx="9619.29" cy="7022.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="406" x="9628.29" y="7025.687">material_set_next_pass(RID p_material, RID p_next_material) = 0 : void</text><ellipse cx="9619.29" cy="7035.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="136" x="9628.29" y="7038.4917">mesh_create() = 0 : RID</text><ellipse cx="9619.29" cy="7048.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="9628.29" y="7051.2964">mesh_surface_get_format_offset(uint32_t p_format, int p_vertex_len, int p_index_len, int p_array_index) const : uint32_t</text><ellipse cx="9619.29" cy="7060.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="9628.29" y="7064.1011">mesh_surface_get_format_stride(uint32_t p_format, int p_vertex_len, int p_index_len) const : uint32_t</text><ellipse cx="9619.29" cy="7073.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="748" x="9628.29" y="7076.9058">mesh_surface_make_offsets_from_format(uint32_t p_format, int p_vertex_len, int p_index_len, uint32_t * r_offsets) const : uint32_t</text><ellipse cx="9619.29" cy="7086.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1250" x="9628.29" y="7089.7104">mesh_add_surface_from_arrays(RID p_mesh, VisualServer::PrimitiveType p_primitive, const Array &amp; p_arrays, const Array &amp; p_blend_shapes = Array(), uint32_t p_compress_format = ARRAY_COMPRESS_DEFAULT) : void</text><ellipse cx="9619.29" cy="7099.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2272" x="9628.29" y="7102.5151">mesh_add_surface(RID p_mesh, uint32_t p_format, VisualServer::PrimitiveType p_primitive, const PoolVector&lt;uint8_t&gt; &amp; p_array, int p_vertex_count, const PoolVector&lt;uint8_t&gt; &amp; p_index_array, int p_index_count, const AABB &amp; p_aabb, const Vector&lt;PoolVector&lt;uint8_t&gt;&gt; &amp; p_blend_shapes = Vector&lt;PoolVector&lt;uint8_t&gt; &gt;(), const Vector&lt;AABB&gt; &amp; p_bone_aabbs = Vector&lt;AABB&gt;()) = 0 : void</text><ellipse cx="9619.29" cy="7112.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="9628.29" y="7115.3198">mesh_set_blend_shape_count(RID p_mesh, int p_amount) = 0 : void</text><ellipse cx="9619.29" cy="7124.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="328" x="9628.29" y="7128.1245">mesh_get_blend_shape_count(RID p_mesh) const = 0 : int</text><ellipse cx="9619.29" cy="7137.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="538" x="9628.29" y="7140.9292">mesh_set_blend_shape_mode(RID p_mesh, VisualServer::BlendShapeMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="7150.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="492" x="9628.29" y="7153.7339">mesh_get_blend_shape_mode(RID p_mesh) const = 0 : VisualServer::BlendShapeMode</text><ellipse cx="9619.29" cy="7163.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="667" x="9628.29" y="7166.5386">mesh_surface_update_region(RID p_mesh, int p_surface, int p_offset, const PoolVector&lt;uint8_t&gt; &amp; p_data) = 0 : void</text><ellipse cx="9619.29" cy="7176.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="462" x="9628.29" y="7179.3433">mesh_surface_set_material(RID p_mesh, int p_surface, RID p_material) = 0 : void</text><ellipse cx="9619.29" cy="7188.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="9628.29" y="7192.1479">mesh_surface_get_material(RID p_mesh, int p_surface) const = 0 : RID</text><ellipse cx="9619.29" cy="7201.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="9628.29" y="7204.9526">mesh_surface_get_array_len(RID p_mesh, int p_surface) const = 0 : int</text><ellipse cx="9619.29" cy="7214.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="9628.29" y="7217.7573">mesh_surface_get_array_index_len(RID p_mesh, int p_surface) const = 0 : int</text><ellipse cx="9619.29" cy="7227.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="483" x="9628.29" y="7230.562">mesh_surface_get_array(RID p_mesh, int p_surface) const = 0 : PoolVector&lt;uint8_t&gt;</text><ellipse cx="9619.29" cy="7240.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="520" x="9628.29" y="7243.3667">mesh_surface_get_index_array(RID p_mesh, int p_surface) const = 0 : PoolVector&lt;uint8_t&gt;</text><ellipse cx="9619.29" cy="7252.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="9628.29" y="7256.1714">mesh_surface_get_arrays(RID p_mesh, int p_surface) const : Array</text><ellipse cx="9619.29" cy="7265.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="9628.29" y="7268.9761">mesh_surface_get_blend_shape_arrays(RID p_mesh, int p_surface) const : Array</text><ellipse cx="9619.29" cy="7278.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="9628.29" y="7281.7808">mesh_surface_get_format(RID p_mesh, int p_surface) const = 0 : uint32_t</text><ellipse cx="9619.29" cy="7291.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="574" x="9628.29" y="7294.5854">mesh_surface_get_primitive_type(RID p_mesh, int p_surface) const = 0 : VisualServer::PrimitiveType</text><ellipse cx="9619.29" cy="7304.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="9628.29" y="7307.3901">mesh_surface_get_aabb(RID p_mesh, int p_surface) const = 0 : AABB</text><ellipse cx="9619.29" cy="7316.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="584" x="9628.29" y="7320.1948">mesh_surface_get_blend_shapes(RID p_mesh, int p_surface) const = 0 : Vector&lt;PoolVector&lt;uint8_t&gt;&gt;</text><ellipse cx="9619.29" cy="7329.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="9628.29" y="7332.9995">mesh_surface_get_skeleton_aabb(RID p_mesh, int p_surface) const = 0 : Vector&lt;AABB&gt;</text><ellipse cx="9619.29" cy="7342.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="9628.29" y="7345.8042">_mesh_surface_get_skeleton_aabb_bind(RID p_mesh, int p_surface) const : Array</text><ellipse cx="9619.29" cy="7355.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="9628.29" y="7358.6089">mesh_remove_surface(RID p_mesh, int p_index) = 0 : void</text><ellipse cx="9619.29" cy="7368.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="9628.29" y="7371.4136">mesh_get_surface_count(RID p_mesh) const = 0 : int</text><ellipse cx="9619.29" cy="7381.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="402" x="9628.29" y="7384.2183">mesh_set_custom_aabb(RID p_mesh, const AABB &amp; p_aabb) = 0 : void</text><ellipse cx="9619.29" cy="7393.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="9628.29" y="7397.0229">mesh_get_custom_aabb(RID p_mesh) const = 0 : AABB</text><ellipse cx="9619.29" cy="7406.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="9628.29" y="7409.8276">mesh_clear(RID p_mesh) = 0 : void</text><ellipse cx="9619.29" cy="7419.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="9628.29" y="7422.6323">multimesh_create() = 0 : RID</text><ellipse cx="9619.29" cy="7432.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1579" x="9628.29" y="7435.437">multimesh_allocate(RID p_multimesh, int p_instances, VisualServer::MultimeshTransformFormat p_transform_format, VisualServer::MultimeshColorFormat p_color_format, VisualServer::MultimeshCustomDataFormat p_data_format = MULTIMESH_CUSTOM_DATA_NONE) = 0 : void</text><ellipse cx="9619.29" cy="7445.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="9628.29" y="7448.2417">multimesh_get_instance_count(RID p_multimesh) const = 0 : int</text><ellipse cx="9619.29" cy="7457.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="9628.29" y="7461.0464">multimesh_set_mesh(RID p_multimesh, RID p_mesh) = 0 : void</text><ellipse cx="9619.29" cy="7470.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="617" x="9628.29" y="7473.8511">multimesh_instance_set_transform(RID p_multimesh, int p_index, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="7483.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="652" x="9628.29" y="7486.6558">multimesh_instance_set_transform_2d(RID p_multimesh, int p_index, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="7496.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="532" x="9628.29" y="7499.4604">multimesh_instance_set_color(RID p_multimesh, int p_index, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="7509.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="576" x="9628.29" y="7512.2651">multimesh_instance_set_custom_data(RID p_multimesh, int p_index, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="7521.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="312" x="9628.29" y="7525.0698">multimesh_get_mesh(RID p_multimesh) const = 0 : RID</text><ellipse cx="9619.29" cy="7534.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="9628.29" y="7537.8745">multimesh_get_aabb(RID p_multimesh) const = 0 : AABB</text><ellipse cx="9619.29" cy="7547.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="500" x="9628.29" y="7550.6792">multimesh_instance_get_transform(RID p_multimesh, int p_index) const = 0 : Transform</text><ellipse cx="9619.29" cy="7560.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="535" x="9628.29" y="7563.4839">multimesh_instance_get_transform_2d(RID p_multimesh, int p_index) const = 0 : Transform2D</text><ellipse cx="9619.29" cy="7573.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="443" x="9628.29" y="7576.2886">multimesh_instance_get_color(RID p_multimesh, int p_index) const = 0 : Color</text><ellipse cx="9619.29" cy="7585.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="9628.29" y="7589.0933">multimesh_instance_get_custom_data(RID p_multimesh, int p_index) const = 0 : Color</text><ellipse cx="9619.29" cy="7598.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="537" x="9628.29" y="7601.8979">multimesh_set_as_bulk_array(RID p_multimesh, const PoolVector&lt;float&gt; &amp; p_array) = 0 : void</text><ellipse cx="9619.29" cy="7611.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="421" x="9628.29" y="7614.7026">multimesh_set_visible_instances(RID p_multimesh, int p_visible) = 0 : void</text><ellipse cx="9619.29" cy="7624.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="9628.29" y="7627.5073">multimesh_get_visible_instances(RID p_multimesh) const = 0 : int</text><ellipse cx="9619.29" cy="7637.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="165" x="9628.29" y="7640.312">immediate_create() = 0 : RID</text><ellipse cx="9619.29" cy="7649.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="629" x="9628.29" y="7653.1167">immediate_begin(RID p_immediate, VisualServer::PrimitiveType p_rimitive, RID p_texture = = RID()) = 0 : void</text><ellipse cx="9619.29" cy="7662.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="420" x="9628.29" y="7665.9214">immediate_vertex(RID p_immediate, const Vector3 &amp; p_vertex) = 0 : void</text><ellipse cx="9619.29" cy="7675.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="411" x="9628.29" y="7678.7261">immediate_vertex_2d(RID p_immediate, const Vector2 &amp; p_vertex) : void</text><ellipse cx="9619.29" cy="7688.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="426" x="9628.29" y="7691.5308">immediate_normal(RID p_immediate, const Vector3 &amp; p_normal) = 0 : void</text><ellipse cx="9619.29" cy="7701.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="419" x="9628.29" y="7704.3354">immediate_tangent(RID p_immediate, const Plane &amp; p_tangent) = 0 : void</text><ellipse cx="9619.29" cy="7713.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="9628.29" y="7717.1401">immediate_color(RID p_immediate, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="7726.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="9628.29" y="7729.9448">immediate_uv(RID p_immediate, const Vector2 &amp; tex_uv) = 0 : void</text><ellipse cx="9619.29" cy="7739.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="9628.29" y="7742.7495">immediate_uv2(RID p_immediate, const Vector2 &amp; tex_uv) = 0 : void</text><ellipse cx="9619.29" cy="7752.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="251" x="9628.29" y="7755.5542">immediate_end(RID p_immediate) = 0 : void</text><ellipse cx="9619.29" cy="7765.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="258" x="9628.29" y="7768.3589">immediate_clear(RID p_immediate) = 0 : void</text><ellipse cx="9619.29" cy="7777.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="391" x="9628.29" y="7781.1636">immediate_set_material(RID p_immediate, RID p_material) = 0 : void</text><ellipse cx="9619.29" cy="7790.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="330" x="9628.29" y="7793.9683">immediate_get_material(RID p_immediate) const = 0 : RID</text><ellipse cx="9619.29" cy="7803.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="9628.29" y="7806.7729">skeleton_create() = 0 : RID</text><ellipse cx="9619.29" cy="7816.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="481" x="9628.29" y="7819.5776">skeleton_allocate(RID p_skeleton, int p_bones, bool p_2d_skeleton = false) = 0 : void</text><ellipse cx="9619.29" cy="7829.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="9628.29" y="7832.3823">skeleton_get_bone_count(RID p_skeleton) const = 0 : int</text><ellipse cx="9619.29" cy="7841.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="9628.29" y="7845.187">skeleton_bone_set_transform(RID p_skeleton, int p_bone, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="7854.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="9628.29" y="7857.9917">skeleton_bone_get_transform(RID p_skeleton, int p_bone) const = 0 : Transform</text><ellipse cx="9619.29" cy="7867.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="606" x="9628.29" y="7870.7964">skeleton_bone_set_transform_2d(RID p_skeleton, int p_bone, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="7880.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="489" x="9628.29" y="7883.6011">skeleton_bone_get_transform_2d(RID p_skeleton, int p_bone) const = 0 : Transform2D</text><ellipse cx="9619.29" cy="7893.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="9628.29" y="7896.4058">skeleton_set_base_transform_2d(RID p_skeleton, const Transform2D &amp; p_base_transform) = 0 : void</text><ellipse cx="9619.29" cy="7906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="9628.29" y="7909.2104">directional_light_create() = 0 : RID</text><ellipse cx="9619.29" cy="7918.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="9628.29" y="7922.0151">omni_light_create() = 0 : RID</text><ellipse cx="9619.29" cy="7931.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="159" x="9628.29" y="7934.8198">spot_light_create() = 0 : RID</text><ellipse cx="9619.29" cy="7944.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="9628.29" y="7947.6245">light_set_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="7957.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="505" x="9628.29" y="7960.4292">light_set_param(RID p_light, VisualServer::LightParam p_param, float p_value) = 0 : void</text><ellipse cx="9619.29" cy="7970.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="318" x="9628.29" y="7973.2339">light_set_shadow(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="7982.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="9628.29" y="7986.0386">light_set_shadow_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="7995.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="9628.29" y="7998.8433">light_set_projector(RID p_light, RID p_texture) = 0 : void</text><ellipse cx="9619.29" cy="8008.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="9628.29" y="8011.6479">light_set_negative(RID p_light, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8021.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="9628.29" y="8024.4526">light_set_cull_mask(RID p_light, uint32_t p_mask) = 0 : void</text><ellipse cx="9619.29" cy="8034.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="9628.29" y="8037.2573">light_set_reverse_cull_face_mode(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="8046.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="304" x="9628.29" y="8050.062">light_set_use_gi(RID p_light, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8059.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="9628.29" y="8062.8667">light_set_bake_mode(RID p_light, VisualServer::LightBakeMode p_bake_mode) = 0 : void</text><ellipse cx="9619.29" cy="8072.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="564" x="9628.29" y="8075.6714">light_omni_set_shadow_mode(RID p_light, VisualServer::LightOmniShadowMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="8085.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="564" x="9628.29" y="8088.4761">light_omni_set_shadow_detail(RID p_light, VisualServer::LightOmniShadowDetail p_detail) = 0 : void</text><ellipse cx="9619.29" cy="8098.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="625" x="9628.29" y="8101.2808">light_directional_set_shadow_mode(RID p_light, VisualServer::LightDirectionalShadowMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="8110.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="399" x="9628.29" y="8114.0854">light_directional_set_blend_splits(RID p_light, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8123.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="810" x="9628.29" y="8126.8901">light_directional_set_shadow_depth_range_mode(RID p_light, VisualServer::LightDirectionalShadowDepthRangeMode p_range_mode) = 0 : void</text><ellipse cx="9619.29" cy="8136.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="197" x="9628.29" y="8139.6948">reflection_probe_create() = 0 : RID</text><ellipse cx="9619.29" cy="8149.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="631" x="9628.29" y="8152.4995">reflection_probe_set_update_mode(RID p_probe, VisualServer::ReflectionProbeUpdateMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="8162.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="9628.29" y="8165.3042">reflection_probe_set_intensity(RID p_probe, float p_intensity) = 0 : void</text><ellipse cx="9619.29" cy="8174.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="481" x="9628.29" y="8178.1089">reflection_probe_set_interior_ambient(RID p_probe, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="8187.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="9628.29" y="8190.9136">reflection_probe_set_interior_ambient_energy(RID p_probe, float p_energy) = 0 : void</text><ellipse cx="9619.29" cy="8200.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="552" x="9628.29" y="8203.7183">reflection_probe_set_interior_ambient_probe_contribution(RID p_probe, float p_contrib) = 0 : void</text><ellipse cx="9619.29" cy="8213.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="433" x="9628.29" y="8216.5229">reflection_probe_set_max_distance(RID p_probe, float p_distance) = 0 : void</text><ellipse cx="9619.29" cy="8226.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="458" x="9628.29" y="8229.3276">reflection_probe_set_extents(RID p_probe, const Vector3 &amp; p_extents) = 0 : void</text><ellipse cx="9619.29" cy="8238.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="476" x="9628.29" y="8242.1323">reflection_probe_set_origin_offset(RID p_probe, const Vector3 &amp; p_offset) = 0 : void</text><ellipse cx="9619.29" cy="8251.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="9628.29" y="8254.937">reflection_probe_set_as_interior(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8264.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="472" x="9628.29" y="8267.7417">reflection_probe_set_enable_box_projection(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8277.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="9628.29" y="8280.5464">reflection_probe_set_enable_shadows(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8290.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="9628.29" y="8293.3511">reflection_probe_set_cull_mask(RID p_probe, uint32_t p_layers) = 0 : void</text><ellipse cx="9619.29" cy="8302.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="409" x="9628.29" y="8306.1558">reflection_probe_set_resolution(RID p_probe, int p_resolution) = 0 : void</text><ellipse cx="9619.29" cy="8315.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="9628.29" y="8318.9604">gi_probe_create() = 0 : RID</text><ellipse cx="9619.29" cy="8328.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="9628.29" y="8331.7651">gi_probe_set_bounds(RID p_probe, const AABB &amp; p_bounds) = 0 : void</text><ellipse cx="9619.29" cy="8341.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="9628.29" y="8344.5698">gi_probe_get_bounds(RID p_probe) const = 0 : AABB</text><ellipse cx="9619.29" cy="8354.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="9628.29" y="8357.3745">gi_probe_set_cell_size(RID p_probe, float p_range) = 0 : void</text><ellipse cx="9619.29" cy="8366.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="9628.29" y="8370.1792">gi_probe_get_cell_size(RID p_probe) const = 0 : float</text><ellipse cx="9619.29" cy="8379.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="456" x="9628.29" y="8382.9839">gi_probe_set_to_cell_xform(RID p_probe, const Transform &amp; p_xform) = 0 : void</text><ellipse cx="9619.29" cy="8392.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="361" x="9628.29" y="8395.7886">gi_probe_get_to_cell_xform(RID p_probe) const = 0 : Transform</text><ellipse cx="9619.29" cy="8405.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="484" x="9628.29" y="8408.5933">gi_probe_set_dynamic_data(RID p_probe, const PoolVector&lt;int&gt; &amp; p_data) = 0 : void</text><ellipse cx="9619.29" cy="8418.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="398" x="9628.29" y="8421.3979">gi_probe_get_dynamic_data(RID p_probe) const = 0 : PoolVector&lt;int&gt;</text><ellipse cx="9619.29" cy="8430.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="9628.29" y="8434.2026">gi_probe_set_dynamic_range(RID p_probe, int p_range) = 0 : void</text><ellipse cx="9619.29" cy="8443.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="327" x="9628.29" y="8447.0073">gi_probe_get_dynamic_range(RID p_probe) const = 0 : int</text><ellipse cx="9619.29" cy="8456.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="338" x="9628.29" y="8459.812">gi_probe_set_energy(RID p_probe, float p_range) = 0 : void</text><ellipse cx="9619.29" cy="8469.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="291" x="9628.29" y="8472.6167">gi_probe_get_energy(RID p_probe) const = 0 : float</text><ellipse cx="9619.29" cy="8482.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="321" x="9628.29" y="8485.4214">gi_probe_set_bias(RID p_probe, float p_range) = 0 : void</text><ellipse cx="9619.29" cy="8495.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="274" x="9628.29" y="8498.2261">gi_probe_get_bias(RID p_probe) const = 0 : float</text><ellipse cx="9619.29" cy="8507.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="9628.29" y="8511.0308">gi_probe_set_normal_bias(RID p_probe, float p_range) = 0 : void</text><ellipse cx="9619.29" cy="8520.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="9628.29" y="8523.8354">gi_probe_get_normal_bias(RID p_probe) const = 0 : float</text><ellipse cx="9619.29" cy="8533.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="9628.29" y="8536.6401">gi_probe_set_propagation(RID p_probe, float p_range) = 0 : void</text><ellipse cx="9619.29" cy="8546.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="9628.29" y="8549.4448">gi_probe_get_propagation(RID p_probe) const = 0 : float</text><ellipse cx="9619.29" cy="8559.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="9628.29" y="8562.2495">gi_probe_set_interior(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8571.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="9628.29" y="8575.0542">gi_probe_is_interior(RID p_probe) const = 0 : bool</text><ellipse cx="9619.29" cy="8584.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="9628.29" y="8587.8589">gi_probe_set_compress(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8597.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="310" x="9628.29" y="8600.6636">gi_probe_is_compressed(RID p_probe) const = 0 : bool</text><ellipse cx="9619.29" cy="8610.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="203" x="9628.29" y="8613.4683">lightmap_capture_create() = 0 : RID</text><ellipse cx="9619.29" cy="8623.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="460" x="9628.29" y="8626.2729">lightmap_capture_set_bounds(RID p_capture, const AABB &amp; p_bounds) = 0 : void</text><ellipse cx="9619.29" cy="8635.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="9628.29" y="8639.0776">lightmap_capture_get_bounds(RID p_capture) const = 0 : AABB</text><ellipse cx="9619.29" cy="8648.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="535" x="9628.29" y="8651.8823">lightmap_capture_set_octree(RID p_capture, const PoolVector&lt;uint8_t&gt; &amp; p_octree) = 0 : void</text><ellipse cx="9619.29" cy="8661.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="562" x="9628.29" y="8664.687">lightmap_capture_set_octree_cell_transform(RID p_capture, const Transform &amp; p_xform) = 0 : void</text><ellipse cx="9619.29" cy="8674.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="467" x="9628.29" y="8677.4917">lightmap_capture_get_octree_cell_transform(RID p_capture) const = 0 : Transform</text><ellipse cx="9619.29" cy="8687.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="9628.29" y="8690.2964">lightmap_capture_set_octree_cell_subdiv(RID p_capture, int p_subdiv) = 0 : void</text><ellipse cx="9619.29" cy="8699.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="9628.29" y="8703.1011">lightmap_capture_get_octree_cell_subdiv(RID p_capture) const = 0 : int</text><ellipse cx="9619.29" cy="8712.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="9628.29" y="8715.9058">lightmap_capture_get_octree(RID p_capture) const = 0 : PoolVector&lt;uint8_t&gt;</text><ellipse cx="9619.29" cy="8725.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="9628.29" y="8728.7104">lightmap_capture_set_energy(RID p_capture, float p_energy) = 0 : void</text><ellipse cx="9619.29" cy="8738.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="9628.29" y="8741.5151">lightmap_capture_get_energy(RID p_capture) const = 0 : float</text><ellipse cx="9619.29" cy="8751.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="9628.29" y="8754.3198">lightmap_capture_set_interior(RID p_capture, bool p_interior) = 0 : void</text><ellipse cx="9619.29" cy="8763.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="9628.29" y="8767.1245">lightmap_capture_is_interior(RID p_capture) const = 0 : bool</text><ellipse cx="9619.29" cy="8776.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="153" x="9628.29" y="8779.9292">particles_create() = 0 : RID</text><ellipse cx="9619.29" cy="8789.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="9628.29" y="8792.7339">particles_set_emitting(RID p_particles, bool p_emitting) = 0 : void</text><ellipse cx="9619.29" cy="8802.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="9628.29" y="8805.5386">particles_get_emitting(RID p_particles) = 0 : bool</text><ellipse cx="9619.29" cy="8815.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="9628.29" y="8818.3433">particles_set_amount(RID p_particles, int p_amount) = 0 : void</text><ellipse cx="9619.29" cy="8827.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="9628.29" y="8831.1479">particles_set_lifetime(RID p_particles, float p_lifetime) = 0 : void</text><ellipse cx="9619.29" cy="8840.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="380" x="9628.29" y="8843.9526">particles_set_one_shot(RID p_particles, bool p_one_shot) = 0 : void</text><ellipse cx="9619.29" cy="8853.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="9628.29" y="8856.7573">particles_set_pre_process_time(RID p_particles, float p_time) = 0 : void</text><ellipse cx="9619.29" cy="8866.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="9628.29" y="8869.562">particles_set_explosiveness_ratio(RID p_particles, float p_ratio) = 0 : void</text><ellipse cx="9619.29" cy="8879.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="9628.29" y="8882.3667">particles_set_randomness_ratio(RID p_particles, float p_ratio) = 0 : void</text><ellipse cx="9619.29" cy="8891.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="9628.29" y="8895.1714">particles_set_custom_aabb(RID p_particles, const AABB &amp; p_aabb) = 0 : void</text><ellipse cx="9619.29" cy="8904.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="377" x="9628.29" y="8907.9761">particles_set_speed_scale(RID p_particles, float p_scale) = 0 : void</text><ellipse cx="9619.29" cy="8917.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="9628.29" y="8920.7808">particles_set_use_local_coordinates(RID p_particles, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8930.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="9628.29" y="8933.5854">particles_set_process_material(RID p_particles, RID p_material) = 0 : void</text><ellipse cx="9619.29" cy="8943.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="9628.29" y="8946.3901">particles_set_fixed_fps(RID p_particles, int p_fps) = 0 : void</text><ellipse cx="9619.29" cy="8955.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="9628.29" y="8959.1948">particles_set_fractional_delta(RID p_particles, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="8968.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="265" x="9628.29" y="8971.9995">particles_is_inactive(RID p_particles) = 0 : bool</text><ellipse cx="9619.29" cy="8981.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="9628.29" y="8984.8042">particles_request_process(RID p_particles) = 0 : void</text><ellipse cx="9619.29" cy="8994.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="9628.29" y="8997.6089">particles_restart(RID p_particles) = 0 : void</text><ellipse cx="9619.29" cy="9007.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="540" x="9628.29" y="9010.4136">particles_set_draw_order(RID p_particles, VisualServer::ParticlesDrawOrder p_order) = 0 : void</text><ellipse cx="9619.29" cy="9020.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="372" x="9628.29" y="9023.2183">particles_set_draw_passes(RID p_particles, int p_count) = 0 : void</text><ellipse cx="9619.29" cy="9032.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="466" x="9628.29" y="9036.0229">particles_set_draw_pass_mesh(RID p_particles, int p_pass, RID p_mesh) = 0 : void</text><ellipse cx="9619.29" cy="9045.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="9628.29" y="9048.8276">particles_get_current_aabb(RID p_particles) = 0 : AABB</text><ellipse cx="9619.29" cy="9058.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="528" x="9628.29" y="9061.6323">particles_set_emission_transform(RID p_particles, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="9071.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="148" x="9628.29" y="9074.437">camera_create() = 0 : RID</text><ellipse cx="9619.29" cy="9084.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="578" x="9628.29" y="9087.2417">camera_set_perspective(RID p_camera, float p_fovy_degrees, float p_z_near, float p_z_far) = 0 : void</text><ellipse cx="9619.29" cy="9096.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="518" x="9628.29" y="9100.0464">camera_set_orthogonal(RID p_camera, float p_size, float p_z_near, float p_z_far) = 0 : void</text><ellipse cx="9619.29" cy="9109.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="602" x="9628.29" y="9112.8511">camera_set_frustum(RID p_camera, float p_size, Vector2 p_offset, float p_z_near, float p_z_far) = 0 : void</text><ellipse cx="9619.29" cy="9122.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="462" x="9628.29" y="9125.6558">camera_set_transform(RID p_camera, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="9135.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="9628.29" y="9138.4604">camera_set_cull_mask(RID p_camera, uint32_t p_layers) = 0 : void</text><ellipse cx="9619.29" cy="9148.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="9628.29" y="9151.2651">camera_set_environment(RID p_camera, RID p_env) = 0 : void</text><ellipse cx="9619.29" cy="9160.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="9628.29" y="9164.0698">camera_set_use_vertical_aspect(RID p_camera, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="9173.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="9628.29" y="9176.8745">viewport_create() = 0 : RID</text><ellipse cx="9619.29" cy="9186.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="380" x="9628.29" y="9189.6792">viewport_set_use_arvr(RID p_viewport, bool p_use_arvr) = 0 : void</text><ellipse cx="9619.29" cy="9199.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="9628.29" y="9202.4839">viewport_set_size(RID p_viewport, int p_width, int p_height) = 0 : void</text><ellipse cx="9619.29" cy="9212.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="9628.29" y="9215.2886">viewport_set_active(RID p_viewport, bool p_active) = 0 : void</text><ellipse cx="9619.29" cy="9224.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="9628.29" y="9228.0933">viewport_set_parent_viewport(RID p_viewport, RID p_parent_viewport) = 0 : void</text><ellipse cx="9619.29" cy="9237.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="588" x="9628.29" y="9240.8979">viewport_attach_to_screen(RID p_viewport, const Rect2 &amp; p_rect = Rect2(), int p_screen = 0) = 0 : void</text><ellipse cx="9619.29" cy="9250.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="455" x="9628.29" y="9253.7026">viewport_set_render_direct_to_screen(RID p_viewport, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="9263.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="246" x="9628.29" y="9266.5073">viewport_detach(RID p_viewport) = 0 : void</text><ellipse cx="9619.29" cy="9276.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="9628.29" y="9279.312">viewport_set_update_mode(RID p_viewport, VisualServer::ViewportUpdateMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="9288.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="9628.29" y="9292.1167">viewport_set_vflip(RID p_viewport, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="9301.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="578" x="9628.29" y="9304.9214">viewport_set_clear_mode(RID p_viewport, VisualServer::ViewportClearMode p_clear_mode) = 0 : void</text><ellipse cx="9619.29" cy="9314.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="9628.29" y="9317.7261">viewport_get_texture(RID p_viewport) const = 0 : RID</text><ellipse cx="9619.29" cy="9327.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="382" x="9628.29" y="9330.5308">viewport_set_hide_scenario(RID p_viewport, bool p_hide) = 0 : void</text><ellipse cx="9619.29" cy="9340.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="9628.29" y="9343.3354">viewport_set_hide_canvas(RID p_viewport, bool p_hide) = 0 : void</text><ellipse cx="9619.29" cy="9352.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="9628.29" y="9356.1401">viewport_set_disable_environment(RID p_viewport, bool p_disable) = 0 : void</text><ellipse cx="9619.29" cy="9365.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="380" x="9628.29" y="9368.9448">viewport_set_disable_3d(RID p_viewport, bool p_disable) = 0 : void</text><ellipse cx="9619.29" cy="9378.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="9628.29" y="9381.7495">viewport_set_keep_3d_linear(RID p_viewport, bool p_disable) = 0 : void</text><ellipse cx="9619.29" cy="9391.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="9628.29" y="9394.5542">viewport_attach_camera(RID p_viewport, RID p_camera) = 0 : void</text><ellipse cx="9619.29" cy="9404.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="9628.29" y="9407.3589">viewport_set_scenario(RID p_viewport, RID p_scenario) = 0 : void</text><ellipse cx="9619.29" cy="9416.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="373" x="9628.29" y="9420.1636">viewport_attach_canvas(RID p_viewport, RID p_canvas) = 0 : void</text><ellipse cx="9619.29" cy="9429.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="382" x="9628.29" y="9432.9683">viewport_remove_canvas(RID p_viewport, RID p_canvas) = 0 : void</text><ellipse cx="9619.29" cy="9442.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="595" x="9628.29" y="9445.7729">viewport_set_canvas_transform(RID p_viewport, RID p_canvas, const Transform2D &amp; p_offset) = 0 : void</text><ellipse cx="9619.29" cy="9455.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="463" x="9628.29" y="9458.5776">viewport_set_transparent_background(RID p_viewport, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="9468.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="575" x="9628.29" y="9471.3823">viewport_set_global_canvas_transform(RID p_viewport, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="9480.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="563" x="9628.29" y="9484.187">viewport_set_canvas_stacking(RID p_viewport, RID p_canvas, int p_layer, int p_sublayer) = 0 : void</text><ellipse cx="9619.29" cy="9493.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="9628.29" y="9496.9917">viewport_set_shadow_atlas_size(RID p_viewport, int p_size) = 0 : void</text><ellipse cx="9619.29" cy="9506.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="599" x="9628.29" y="9509.7964">viewport_set_shadow_atlas_quadrant_subdivision(RID p_viewport, int p_quadrant, int p_subdiv) = 0 : void</text><ellipse cx="9619.29" cy="9519.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="9628.29" y="9522.6011">viewport_set_msaa(RID p_viewport, VisualServer::ViewportMSAA p_msaa) = 0 : void</text><ellipse cx="9619.29" cy="9532.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="9628.29" y="9535.4058">viewport_set_use_fxaa(RID p_viewport, bool p_fxaa) = 0 : void</text><ellipse cx="9619.29" cy="9545" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="424" x="9628.29" y="9548.2104">viewport_set_use_debanding(RID p_viewport, bool p_debanding) = 0 : void</text><ellipse cx="9619.29" cy="9557.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="9628.29" y="9561.0151">viewport_set_hdr(RID p_viewport, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="9570.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="489" x="9628.29" y="9573.8198">viewport_set_usage(RID p_viewport, VisualServer::ViewportUsage p_usage) = 0 : void</text><ellipse cx="9619.29" cy="9583.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="525" x="9628.29" y="9586.6245">viewport_get_render_info(RID p_viewport, VisualServer::ViewportRenderInfo p_info) = 0 : int</text><ellipse cx="9619.29" cy="9596.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="548" x="9628.29" y="9599.4292">viewport_set_debug_draw(RID p_viewport, VisualServer::ViewportDebugDraw p_draw) = 0 : void</text><ellipse cx="9619.29" cy="9609.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="177" x="9628.29" y="9612.2339">environment_create() = 0 : RID</text><ellipse cx="9619.29" cy="9621.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="500" x="9628.29" y="9625.0386">environment_set_background(RID p_env, VisualServer::EnvironmentBG p_bg) = 0 : void</text><ellipse cx="9619.29" cy="9634.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="308" x="9628.29" y="9637.8433">environment_set_sky(RID p_env, RID p_sky) = 0 : void</text><ellipse cx="9619.29" cy="9647.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="9628.29" y="9650.6479">environment_set_sky_custom_fov(RID p_env, float p_scale) = 0 : void</text><ellipse cx="9619.29" cy="9660.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="9628.29" y="9663.4526">environment_set_sky_orientation(RID p_env, const Basis &amp; p_orientation) = 0 : void</text><ellipse cx="9619.29" cy="9673.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="9628.29" y="9676.2573">environment_set_bg_color(RID p_env, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="9685.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="376" x="9628.29" y="9689.062">environment_set_bg_energy(RID p_env, float p_energy) = 0 : void</text><ellipse cx="9619.29" cy="9698.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="9628.29" y="9701.8667">environment_set_canvas_max_layer(RID p_env, int p_max_layer) = 0 : void</text><ellipse cx="9619.29" cy="9711.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="734" x="9628.29" y="9714.6714">environment_set_ambient_light(RID p_env, const Color &amp; p_color, float p_energy = 1.0, float p_sky_contribution = 0.0) = 0 : void</text><ellipse cx="9619.29" cy="9724.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="445" x="9628.29" y="9727.4761">environment_set_camera_feed_id(RID p_env, int p_camera_feed_id) = 0 : void</text><ellipse cx="9619.29" cy="9737.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1007" x="9628.29" y="9740.2808">environment_set_dof_blur_near(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void</text><ellipse cx="9619.29" cy="9749.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="997" x="9628.29" y="9753.0854">environment_set_dof_blur_far(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void</text><ellipse cx="9619.29" cy="9762.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1715" x="9628.29" y="9765.8901">environment_set_glow(RID p_env, bool p_enable, int p_level_flags, float p_intensity, float p_strength, float p_bloom_threshold, VisualServer::EnvironmentGlowBlendMode p_blend_mode, float p_hdr_bleed_threshold, float p_hdr_bleed_scale, float p_hdr_luminance_cap, bool p_bicubic_upscale) = 0 : void</text><ellipse cx="9619.29" cy="9775.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1464" x="9628.29" y="9778.6948">environment_set_tonemap(RID p_env, VisualServer::EnvironmentToneMapper p_tone_mapper, float p_exposure, float p_white, bool p_auto_exposure, float p_min_luminance, float p_max_luminance, float p_auto_exp_speed, float p_auto_exp_grey) = 0 : void</text><ellipse cx="9619.29" cy="9788.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="762" x="9628.29" y="9791.4995">environment_set_adjustment(RID p_env, bool p_enable, float p_brightness, float p_contrast, float p_saturation, RID p_ramp) = 0 : void</text><ellipse cx="9619.29" cy="9801.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="869" x="9628.29" y="9804.3042">environment_set_ssr(RID p_env, bool p_enable, int p_max_steps, float p_fade_in, float p_fade_out, float p_depth_tolerance, bool p_roughness) = 0 : void</text><ellipse cx="9619.29" cy="9813.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1885" x="9628.29" y="9817.1089">environment_set_ssao(RID p_env, bool p_enable, float p_radius, float p_intensity, float p_radius2, float p_intensity2, float p_bias, float p_light_affect, float p_ao_channel_affect, const Color &amp; p_color, VisualServer::EnvironmentSSAOQuality p_quality, VisualServer::EnvironmentSSAOBlur p_blur, float p_bilateral_sharpness) = 0 : void</text><ellipse cx="9619.29" cy="9826.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="736" x="9628.29" y="9829.9136">environment_set_fog(RID p_env, bool p_enable, const Color &amp; p_color, const Color &amp; p_sun_color, float p_sun_amount) = 0 : void</text><ellipse cx="9619.29" cy="9839.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="948" x="9628.29" y="9842.7183">environment_set_fog_depth(RID p_env, bool p_enable, float p_depth_begin, float p_depth_end, float p_depth_curve, bool p_transmit, float p_transmit_curve) = 0 : void</text><ellipse cx="9619.29" cy="9852.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="723" x="9628.29" y="9855.5229">environment_set_fog_height(RID p_env, bool p_enable, float p_min_height, float p_max_height, float p_height_curve) = 0 : void</text><ellipse cx="9619.29" cy="9865.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="153" x="9628.29" y="9868.3276">scenario_create() = 0 : RID</text><ellipse cx="9619.29" cy="9877.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="557" x="9628.29" y="9881.1323">scenario_set_debug(RID p_scenario, VisualServer::ScenarioDebugMode p_debug_mode) = 0 : void</text><ellipse cx="9619.29" cy="9890.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="9628.29" y="9893.937">scenario_set_environment(RID p_scenario, RID p_environment) = 0 : void</text><ellipse cx="9619.29" cy="9903.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="9628.29" y="9906.7417">scenario_set_reflection_atlas_size(RID p_scenario, int p_size, int p_subdiv) = 0 : void</text><ellipse cx="9619.29" cy="9916.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="466" x="9628.29" y="9919.5464">scenario_set_fallback_environment(RID p_scenario, RID p_environment) = 0 : void</text><ellipse cx="9619.29" cy="9929.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="9628.29" y="9932.3511">instance_create2(RID p_base, RID p_scenario) : RID</text><ellipse cx="9619.29" cy="9941.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="9628.29" y="9945.1558">instance_create() = 0 : RID</text><ellipse cx="9619.29" cy="9954.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="9628.29" y="9957.9604">instance_set_base(RID p_instance, RID p_base) = 0 : void</text><ellipse cx="9619.29" cy="9967.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="9628.29" y="9970.7651">instance_set_scenario(RID p_instance, RID p_scenario) = 0 : void</text><ellipse cx="9619.29" cy="9980.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="9628.29" y="9983.5698">instance_set_layer_mask(RID p_instance, uint32_t p_mask) = 0 : void</text><ellipse cx="9619.29" cy="9993.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="470" x="9628.29" y="9996.3745">instance_set_transform(RID p_instance, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="10005.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="430" x="9628.29" y="10009.1792">instance_attach_object_instance_id(RID p_instance, ObjectID p_id) = 0 : void</text><ellipse cx="9619.29" cy="10018.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="9628.29" y="10021.9839">instance_set_blend_shape_weight(RID p_instance, int p_shape, float p_weight) = 0 : void</text><ellipse cx="9619.29" cy="10031.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="494" x="9628.29" y="10034.7886">instance_set_surface_material(RID p_instance, int p_surface, RID p_material) = 0 : void</text><ellipse cx="9619.29" cy="10044.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="9628.29" y="10047.5933">instance_set_visible(RID p_instance, bool p_visible) = 0 : void</text><ellipse cx="9619.29" cy="10057.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="861" x="9628.29" y="10060.3979">instance_set_use_lightmap(RID p_instance, RID p_lightmap_instance, RID p_lightmap, int p_lightmap_slice, const Rect2 &amp; p_lightmap_uv_rect) = 0 : void</text><ellipse cx="9619.29" cy="10069.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="9628.29" y="10073.2026">instance_set_custom_aabb(RID p_instance, AABB aabb) = 0 : void</text><ellipse cx="9619.29" cy="10082.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="383" x="9628.29" y="10086.0073">instance_attach_skeleton(RID p_instance, RID p_skeleton) = 0 : void</text><ellipse cx="9619.29" cy="10095.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="9628.29" y="10098.812">instance_set_exterior(RID p_instance, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="10108.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="452" x="9628.29" y="10111.6167">instance_set_extra_visibility_margin(RID p_instance, real_t p_margin) = 0 : void</text><ellipse cx="9619.29" cy="10121.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="9628.29" y="10124.4214">instances_cull_aabb(const AABB &amp; p_aabb, RID p_scenario = = RID()) const = 0 : Vector&lt;ObjectID&gt;</text><ellipse cx="9619.29" cy="10134.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="694" x="9628.29" y="10137.2261">instances_cull_ray(const Vector3 &amp; p_from, const Vector3 &amp; p_to, RID p_scenario = = RID()) const = 0 : Vector&lt;ObjectID&gt;</text><ellipse cx="9619.29" cy="10146.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="645" x="9628.29" y="10150.0308">instances_cull_convex(const Vector&lt;Plane&gt; &amp; p_convex, RID p_scenario = = RID()) const = 0 : Vector&lt;ObjectID&gt;</text><ellipse cx="9619.29" cy="10159.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="9628.29" y="10162.8354">_instances_cull_aabb_bind(const AABB &amp; p_aabb, RID p_scenario = = RID()) const : Array</text><ellipse cx="9619.29" cy="10172.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="9628.29" y="10175.6401">_instances_cull_ray_bind(const Vector3 &amp; p_from, const Vector3 &amp; p_to, RID p_scenario = = RID()) const : Array</text><ellipse cx="9619.29" cy="10185.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="9628.29" y="10188.4448">_instances_cull_convex_bind(const Array &amp; p_convex, RID p_scenario = = RID()) const : Array</text><ellipse cx="9619.29" cy="10198.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="9628.29" y="10201.2495">instance_geometry_set_flag(RID p_instance, VisualServer::InstanceFlags p_flags, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="10210.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="773" x="9628.29" y="10214.0542">instance_geometry_set_cast_shadows_setting(RID p_instance, VisualServer::ShadowCastingSetting p_shadow_casting_setting) = 0 : void</text><ellipse cx="9619.29" cy="10223.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="9628.29" y="10226.8589">instance_geometry_set_material_override(RID p_instance, RID p_material) = 0 : void</text><ellipse cx="9619.29" cy="10236.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="739" x="9628.29" y="10239.6636">instance_geometry_set_draw_range(RID p_instance, float p_min, float p_max, float p_min_margin, float p_max_margin) = 0 : void</text><ellipse cx="9619.29" cy="10249.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="527" x="9628.29" y="10252.4683">instance_geometry_set_as_instance_lod(RID p_instance, RID p_as_lod_of_instance) = 0 : void</text><ellipse cx="9619.29" cy="10262.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="145" x="9628.29" y="10265.2729">canvas_create() = 0 : RID</text><ellipse cx="9619.29" cy="10274.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="526" x="9628.29" y="10278.0776">canvas_set_item_mirroring(RID p_canvas, RID p_item, const Point2 &amp; p_mirroring) = 0 : void</text><ellipse cx="9619.29" cy="10287.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="9628.29" y="10290.8823">canvas_set_modulate(RID p_canvas, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="10300.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="9628.29" y="10303.687">canvas_set_parent(RID p_canvas, RID p_parent, float p_scale) = 0 : void</text><ellipse cx="9619.29" cy="10313.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="293" x="9628.29" y="10316.4917">canvas_set_disable_scale(bool p_disable) = 0 : void</text><ellipse cx="9619.29" cy="10326.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="9628.29" y="10329.2964">canvas_item_create() = 0 : RID</text><ellipse cx="9619.29" cy="10338.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="9628.29" y="10342.1011">canvas_item_set_parent(RID p_item, RID p_parent) = 0 : void</text><ellipse cx="9619.29" cy="10351.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="9628.29" y="10354.9058">canvas_item_set_visible(RID p_item, bool p_visible) = 0 : void</text><ellipse cx="9619.29" cy="10364.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="9628.29" y="10367.7104">canvas_item_set_light_mask(RID p_item, int p_mask) = 0 : void</text><ellipse cx="9619.29" cy="10377.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="9628.29" y="10380.5151">canvas_item_set_update_when_visible(RID p_item, bool p_update) = 0 : void</text><ellipse cx="9619.29" cy="10390.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="9628.29" y="10393.3198">canvas_item_set_transform(RID p_item, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="10402.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="9628.29" y="10406.1245">canvas_item_set_clip(RID p_item, bool p_clip) = 0 : void</text><ellipse cx="9619.29" cy="10415.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="9628.29" y="10418.9292">canvas_item_set_distance_field_mode(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="10428.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="599" x="9628.29" y="10431.7339">canvas_item_set_custom_rect(RID p_item, bool p_custom_rect, const Rect2 &amp; p_rect = Rect2()) = 0 : void</text><ellipse cx="9619.29" cy="10441.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="9628.29" y="10444.5386">canvas_item_set_modulate(RID p_item, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="10454.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="9628.29" y="10457.3433">canvas_item_set_self_modulate(RID p_item, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="10466.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="9628.29" y="10470.1479">canvas_item_set_draw_behind_parent(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="10479.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="904" x="9628.29" y="10482.9526">canvas_item_add_line(RID p_item, const Point2 &amp; p_from, const Point2 &amp; p_to, const Color &amp; p_color, float p_width = 1.0, bool p_antialiased = false) = 0 : void</text><ellipse cx="9619.29" cy="10492.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="933" x="9628.29" y="10495.7573">canvas_item_add_polyline(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void</text><ellipse cx="9619.29" cy="10505.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="937" x="9628.29" y="10508.562">canvas_item_add_multiline(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void</text><ellipse cx="9619.29" cy="10518.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="511" x="9628.29" y="10521.3667">canvas_item_add_rect(RID p_item, const Rect2 &amp; p_rect, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="10530.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="605" x="9628.29" y="10534.1714">canvas_item_add_circle(RID p_item, const Point2 &amp; p_pos, float p_radius, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="10543.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1191" x="9628.29" y="10546.9761">canvas_item_add_texture_rect(RID p_item, const Rect2 &amp; p_rect, RID p_texture, bool p_tile = false, const Color &amp; p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="9619.29" cy="10556.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1404" x="9628.29" y="10559.7808">canvas_item_add_texture_rect_region(RID p_item, const Rect2 &amp; p_rect, RID p_texture, const Rect2 &amp; p_src_rect, const Color &amp; p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID(), bool p_clip_uv = false) = 0 : void</text><ellipse cx="9619.29" cy="10569.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2427" x="9628.29" y="10572.5854">canvas_item_add_nine_patch(RID p_item, const Rect2 &amp; p_rect, const Rect2 &amp; p_source, RID p_texture, const Vector2 &amp; p_topleft, const Vector2 &amp; p_bottomright, VisualServer::NinePatchAxisMode p_x_axis_mode = NINE_PATCH_STRETCH, VisualServer::NinePatchAxisMode p_y_axis_mode = NINE_PATCH_STRETCH, bool p_draw_center = true, const Color &amp; p_modulate = Color(1, 1, 1), RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="9619.29" cy="10582.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1224" x="9628.29" y="10585.3901">canvas_item_add_primitive(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs, RID p_texture, float p_width = 1.0, RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="9619.29" cy="10594.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1430" x="9628.29" y="10598.1948">canvas_item_add_polygon(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs = Vector&lt;Point2&gt;(), RID p_texture = = RID(), RID p_normal_map = = RID(), bool p_antialiased = false) = 0 : void</text><ellipse cx="9619.29" cy="10607.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2540" x="9628.29" y="10610.9995">canvas_item_add_triangle_array(RID p_item, const Vector&lt;int&gt; &amp; p_indices, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs = Vector&lt;Point2&gt;(), const Vector&lt;int&gt; &amp; p_bones = Vector&lt;int&gt;(), const Vector&lt;float&gt; &amp; p_weights = Vector&lt;float&gt;(), RID p_texture = = RID(), int p_count = -1, RID p_normal_map = = RID(), bool p_antialiased = false, bool p_antialiasing_use_indices = false) = 0 : void</text><ellipse cx="9619.29" cy="10620.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1248" x="9628.29" y="10623.8042">canvas_item_add_mesh(RID p_item, const RID &amp; p_mesh, const Transform2D &amp; p_transform = Transform2D(), const Color &amp; p_modulate = Color(1, 1, 1), RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="9619.29" cy="10633.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="681" x="9628.29" y="10636.6089">canvas_item_add_multimesh(RID p_item, RID p_mesh, RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="9619.29" cy="10646.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="573" x="9628.29" y="10649.4136">canvas_item_add_particles(RID p_item, RID p_particles, RID p_texture, RID p_normal_map) = 0 : void</text><ellipse cx="9619.29" cy="10659.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="514" x="9628.29" y="10662.2183">canvas_item_add_set_transform(RID p_item, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="10671.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="9628.29" y="10675.0229">canvas_item_add_clip_ignore(RID p_item, bool p_ignore) = 0 : void</text><ellipse cx="9619.29" cy="10684.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="422" x="9628.29" y="10687.8276">canvas_item_set_sort_children_by_y(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="10697.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="9628.29" y="10700.6323">canvas_item_set_z_index(RID p_item, int p_z) = 0 : void</text><ellipse cx="9619.29" cy="10710.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="450" x="9628.29" y="10713.437">canvas_item_set_z_as_relative_to_parent(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="10723.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="552" x="9628.29" y="10726.2417">canvas_item_set_copy_to_backbuffer(RID p_item, bool p_enable, const Rect2 &amp; p_rect) = 0 : void</text><ellipse cx="9619.29" cy="10735.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="9628.29" y="10739.0464">canvas_item_attach_skeleton(RID p_item, RID p_skeleton) = 0 : void</text><ellipse cx="9619.29" cy="10748.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="9628.29" y="10751.8511">canvas_item_clear(RID p_item) = 0 : void</text><ellipse cx="9619.29" cy="10761.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="9628.29" y="10764.6558">canvas_item_set_draw_index(RID p_item, int p_index) = 0 : void</text><ellipse cx="9619.29" cy="10774.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="9628.29" y="10777.4604">canvas_item_set_material(RID p_item, RID p_material) = 0 : void</text><ellipse cx="9619.29" cy="10787.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="9628.29" y="10790.2651">canvas_item_set_use_parent_material(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="10799.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="9628.29" y="10803.0698">canvas_light_create() = 0 : RID</text><ellipse cx="9619.29" cy="10812.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="386" x="9628.29" y="10815.8745">canvas_light_attach_to_canvas(RID p_light, RID p_canvas) = 0 : void</text><ellipse cx="9619.29" cy="10825.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="9628.29" y="10828.6792">canvas_light_set_enabled(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="10838.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="335" x="9628.29" y="10841.4839">canvas_light_set_scale(RID p_light, float p_scale) = 0 : void</text><ellipse cx="9619.29" cy="10851.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="485" x="9628.29" y="10854.2886">canvas_light_set_transform(RID p_light, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9619.29" cy="10863.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="353" x="9628.29" y="10867.0933">canvas_light_set_texture(RID p_light, RID p_texture) = 0 : void</text><ellipse cx="9619.29" cy="10876.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="9628.29" y="10879.8979">canvas_light_set_texture_offset(RID p_light, const Vector2 &amp; p_offset) = 0 : void</text><ellipse cx="9619.29" cy="10889.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="9628.29" y="10892.7026">canvas_light_set_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="10902.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="9628.29" y="10905.5073">canvas_light_set_height(RID p_light, float p_height) = 0 : void</text><ellipse cx="9619.29" cy="10915.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="9628.29" y="10918.312">canvas_light_set_energy(RID p_light, float p_energy) = 0 : void</text><ellipse cx="9619.29" cy="10927.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="420" x="9628.29" y="10931.1167">canvas_light_set_z_range(RID p_light, int p_min_z, int p_max_z) = 0 : void</text><ellipse cx="9619.29" cy="10940.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="489" x="9628.29" y="10943.9214">canvas_light_set_layer_range(RID p_light, int p_min_layer, int p_max_layer) = 0 : void</text><ellipse cx="9619.29" cy="10953.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="382" x="9628.29" y="10956.7261">canvas_light_set_item_cull_mask(RID p_light, int p_mask) = 0 : void</text><ellipse cx="9619.29" cy="10966.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="9628.29" y="10969.5308">canvas_light_set_item_shadow_cull_mask(RID p_light, int p_mask) = 0 : void</text><ellipse cx="9619.29" cy="10979.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="495" x="9628.29" y="10982.3354">canvas_light_set_mode(RID p_light, VisualServer::CanvasLightMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="10991.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="415" x="9628.29" y="10995.1401">canvas_light_set_shadow_enabled(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="11004.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="399" x="9628.29" y="11007.9448">canvas_light_set_shadow_buffer_size(RID p_light, int p_size) = 0 : void</text><ellipse cx="9619.29" cy="11017.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="9628.29" y="11020.7495">canvas_light_set_shadow_gradient_length(RID p_light, float p_length) = 0 : void</text><ellipse cx="9619.29" cy="11030.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="574" x="9628.29" y="11033.5542">canvas_light_set_shadow_filter(RID p_light, VisualServer::CanvasLightShadowFilter p_filter) = 0 : void</text><ellipse cx="9619.29" cy="11043.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="9628.29" y="11046.3589">canvas_light_set_shadow_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="11055.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="9628.29" y="11059.1636">canvas_light_set_shadow_smooth(RID p_light, float p_smooth) = 0 : void</text><ellipse cx="9619.29" cy="11068.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="229" x="9628.29" y="11071.9683">canvas_light_occluder_create() = 0 : RID</text><ellipse cx="9619.29" cy="11081.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="464" x="9628.29" y="11084.7729">canvas_light_occluder_attach_to_canvas(RID p_occluder, RID p_canvas) = 0 : void</text><ellipse cx="9619.29" cy="11094.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="444" x="9628.29" y="11097.5776">canvas_light_occluder_set_enabled(RID p_occluder, bool p_enabled) = 0 : void</text><ellipse cx="9619.29" cy="11107.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="439" x="9628.29" y="11110.3823">canvas_light_occluder_set_polygon(RID p_occluder, RID p_polygon) = 0 : void</text><ellipse cx="9619.29" cy="11119.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="541" x="9628.29" y="11123.187">canvas_light_occluder_set_transform(RID p_occluder, const Transform2D &amp; p_xform) = 0 : void</text><ellipse cx="9619.29" cy="11132.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="9628.29" y="11135.9917">canvas_light_occluder_set_light_mask(RID p_occluder, int p_mask) = 0 : void</text><ellipse cx="9619.29" cy="11145.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="250" x="9628.29" y="11148.7964">canvas_occluder_polygon_create() = 0 : RID</text><ellipse cx="9619.29" cy="11158.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="725" x="9628.29" y="11161.6011">canvas_occluder_polygon_set_shape(RID p_occluder_polygon, const PoolVector&lt;Vector2&gt; &amp; p_shape, bool p_closed) = 0 : void</text><ellipse cx="9619.29" cy="11171.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="691" x="9628.29" y="11174.4058">canvas_occluder_polygon_set_shape_as_lines(RID p_occluder_polygon, const PoolVector&lt;Vector2&gt; &amp; p_shape) = 0 : void</text><ellipse cx="9619.29" cy="11184" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="759" x="9628.29" y="11187.2104">canvas_occluder_polygon_set_cull_mode(RID p_occluder_polygon, VisualServer::CanvasOccluderPolygonCullMode p_mode) = 0 : void</text><ellipse cx="9619.29" cy="11196.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="453" x="9628.29" y="11200.0151">black_bars_set_margins(int p_left, int p_top, int p_right, int p_bottom) = 0 : void</text><ellipse cx="9619.29" cy="11209.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="9628.29" y="11212.8198">black_bars_set_images(RID p_left, RID p_top, RID p_right, RID p_bottom) = 0 : void</text><ellipse cx="9619.29" cy="11222.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="9628.29" y="11225.6245">free(RID p_rid) = 0 : void</text><ellipse cx="9619.29" cy="11235.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="685" x="9628.29" y="11238.4292">request_frame_drawn_callback(Object * p_where, const StringName &amp; p_method, const Variant &amp; p_userdata) = 0 : void</text><ellipse cx="9619.29" cy="11248.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="9628.29" y="11251.2339">draw(bool p_swap_buffers = true, double frame_step = 0.0) = 0 : void</text><ellipse cx="9619.29" cy="11260.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="9628.29" y="11264.0386">sync() = 0 : void</text><ellipse cx="9619.29" cy="11273.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="9628.29" y="11276.8433">has_changed() const = 0 : bool</text><ellipse cx="9619.29" cy="11286.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="9628.29" y="11289.6479">init() = 0 : void</text><ellipse cx="9619.29" cy="11299.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="9628.29" y="11302.4526">finish() = 0 : void</text><ellipse cx="9619.29" cy="11312.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="9628.29" y="11315.2573">get_render_info(VisualServer::RenderInfo p_info) = 0 : uint64_t</text><ellipse cx="9619.29" cy="11324.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="254" x="9628.29" y="11328.062">get_video_adapter_name() const = 0 : String</text><ellipse cx="9619.29" cy="11337.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="9628.29" y="11340.8667">get_video_adapter_vendor() const = 0 : String</text><ellipse cx="9619.29" cy="11350.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="141" x="9628.29" y="11353.6714">get_test_cube() = 0 : RID</text><ellipse cx="9619.29" cy="11363.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="9628.29" y="11366.4761">get_test_texture() : RID</text><ellipse cx="9619.29" cy="11376.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="9628.29" y="11379.2808">get_white_texture() : RID</text><ellipse cx="9619.29" cy="11388.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="9628.29" y="11392.0854">make_sphere_mesh(int p_lats, int p_lons, float p_radius) : RID</text><ellipse cx="9619.29" cy="11401.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="9628.29" y="11404.8901">mesh_add_surface_from_mesh_data(RID p_mesh, const Geometry::MeshData &amp; p_mesh_data) : void</text><ellipse cx="9619.29" cy="11414.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="516" x="9628.29" y="11417.6948">mesh_add_surface_from_planes(RID p_mesh, const PoolVector&lt;Plane&gt; &amp; p_planes) : void</text><ellipse cx="9619.29" cy="11427.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="677" x="9628.29" y="11430.4995">set_boot_image(const Ref&lt;Image&gt; &amp; p_image, const Color &amp; p_color, bool p_scale, bool p_use_filter = true) = 0 : void</text><ellipse cx="9619.29" cy="11440.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="9628.29" y="11443.3042">set_default_clear_color(const Color &amp; p_color) = 0 : void</text><ellipse cx="9619.29" cy="11452.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="267" x="9628.29" y="11456.1089">set_shader_time_scale(float p_scale) = 0 : void</text><ellipse cx="9619.29" cy="11465.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="9628.29" y="11468.9136">has_feature(VisualServer::Features p_feature) const = 0 : bool</text><ellipse cx="9619.29" cy="11478.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="9628.29" y="11481.7183">has_os_feature(const String &amp; p_feature) const = 0 : bool</text><ellipse cx="9619.29" cy="11491.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="9628.29" y="11494.5229">set_debug_generate_wireframes(bool p_generate) = 0 : void</text><ellipse cx="9619.29" cy="11504.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="254" x="9628.29" y="11507.3276">call_set_use_vsync(bool p_enable) = 0 : void</text><ellipse cx="9619.29" cy="11516.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="9628.29" y="11520.1323">is_low_end() const = 0 : bool</text><ellipse cx="9619.29" cy="11529.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="9628.29" y="11532.937">is_render_loop_enabled() const : bool</text><ellipse cx="9619.29" cy="11542.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="9628.29" y="11545.7417">set_render_loop_enabled(bool p_enabled) : void</text><ellipse cx="9619.29" cy="11555.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="9628.29" y="11558.5464">VisualServer() : void</text><ellipse cx="9619.29" cy="11568.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="9628.29" y="11571.3511">~VisualServer() : void</text></a><!--MD5=[8bd677d40488ae3737ee9bebc9a74ec6]
class C_0001559146041463814963--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39" target="_top" title="PhysicsDirectBodyState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39" xlink:show="new" xlink:title="PhysicsDirectBodyState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="675.4297" id="C_0001559146041463814963" style="stroke: #A80036; stroke-width: 1.5;" width="472" x="5876.29" y="8495.4531"/><ellipse cx="6035.04" cy="8511.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6035.1494,8506.7969 L6033.9931,8511.875 L6036.3213,8511.875 L6035.1494,8506.7969 Z M6033.665,8504.5625 L6036.6494,8504.5625 L6040.0088,8516.9531 L6037.5556,8516.9531 L6036.79,8513.8906 L6033.5088,8513.8906 L6032.7588,8516.9531 L6030.3213,8516.9531 L6033.665,8504.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="6055.54" y="8515.6074">PhysicsDirectBodyState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5877.29" x2="6347.29" y1="8527.4531" y2="8527.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5877.29" x2="6347.29" y1="8535.4531" y2="8535.4531"/><ellipse cx="5887.29" cy="8546.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5896.29" y="8549.6636">get_class() const : String</text><ellipse cx="5887.29" cy="8559.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="5896.29" y="8562.4683">_get_class_namev() const : const StringName *</text><ellipse cx="5887.29" cy="8572.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="5896.29" y="8575.2729">get_class_ptr_static() : void *</text><ellipse cx="5887.29" cy="8584.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="5896.29" y="8588.0776">get_class_static() : String</text><ellipse cx="5887.29" cy="8597.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="5896.29" y="8600.8823">get_parent_class_static() : String</text><ellipse cx="5887.29" cy="8610.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="5896.29" y="8613.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="5887.29" cy="8623.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="5896.29" y="8626.4917">get_category_static() : String</text><ellipse cx="5887.29" cy="8636.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="5896.29" y="8639.2964">inherits_static() : String</text><ellipse cx="5887.29" cy="8648.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="5896.29" y="8652.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="5887.29" cy="8661.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5896.29" y="8664.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="5887.29" cy="8674.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="5896.29" y="8677.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="5887.29" cy="8687.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="5896.29" y="8690.5151">initialize_class() : void</text><ellipse cx="5887.29" cy="8700.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="5896.29" y="8703.3198">get_total_gravity() const = 0 : Vector3</text><ellipse cx="5887.29" cy="8712.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="5896.29" y="8716.1245">get_total_angular_damp() const = 0 : float</text><ellipse cx="5887.29" cy="8725.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="5896.29" y="8728.9292">get_total_linear_damp() const = 0 : float</text><ellipse cx="5887.29" cy="8738.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="235" x="5896.29" y="8741.7339">get_center_of_mass() const = 0 : Vector3</text><ellipse cx="5887.29" cy="8751.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="5896.29" y="8754.5386">get_principal_inertia_axes() const = 0 : Basis</text><ellipse cx="5887.29" cy="8764.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="5896.29" y="8767.3433">get_inverse_mass() const = 0 : float</text><ellipse cx="5887.29" cy="8776.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="5896.29" y="8780.1479">get_inverse_inertia() const = 0 : Vector3</text><ellipse cx="5887.29" cy="8789.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="258" x="5896.29" y="8792.9526">get_inverse_inertia_tensor() const = 0 : Basis</text><ellipse cx="5887.29" cy="8802.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="5896.29" y="8805.7573">set_linear_velocity(const Vector3 &amp; p_velocity) = 0 : void</text><ellipse cx="5887.29" cy="8815.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="5896.29" y="8818.562">get_linear_velocity() const = 0 : Vector3</text><ellipse cx="5887.29" cy="8828.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="5896.29" y="8831.3667">set_angular_velocity(const Vector3 &amp; p_velocity) = 0 : void</text><ellipse cx="5887.29" cy="8840.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="5896.29" y="8844.1714">get_angular_velocity() const = 0 : Vector3</text><ellipse cx="5887.29" cy="8853.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="5896.29" y="8856.9761">set_transform(const Transform &amp; p_transform) = 0 : void</text><ellipse cx="5887.29" cy="8866.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="5896.29" y="8869.7808">get_transform() const = 0 : Transform</text><ellipse cx="5887.29" cy="8879.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="5896.29" y="8882.5854">add_central_force(const Vector3 &amp; p_force) = 0 : void</text><ellipse cx="5887.29" cy="8892.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="5896.29" y="8895.3901">add_force(const Vector3 &amp; p_force, const Vector3 &amp; p_pos) = 0 : void</text><ellipse cx="5887.29" cy="8904.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="5896.29" y="8908.1948">add_torque(const Vector3 &amp; p_torque) = 0 : void</text><ellipse cx="5887.29" cy="8917.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="5896.29" y="8920.9995">apply_central_impulse(const Vector3 &amp; p_j) = 0 : void</text><ellipse cx="5887.29" cy="8930.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="5896.29" y="8933.8042">apply_impulse(const Vector3 &amp; p_pos, const Vector3 &amp; p_j) = 0 : void</text><ellipse cx="5887.29" cy="8943.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="5896.29" y="8946.6089">apply_torque_impulse(const Vector3 &amp; p_j) = 0 : void</text><ellipse cx="5887.29" cy="8956.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="5896.29" y="8959.4136">set_sleep_state(bool p_enable) = 0 : void</text><ellipse cx="5887.29" cy="8969.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="5896.29" y="8972.2183">is_sleeping() const = 0 : bool</text><ellipse cx="5887.29" cy="8981.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="5896.29" y="8985.0229">get_contact_count() const = 0 : int</text><ellipse cx="5887.29" cy="8994.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="5896.29" y="8997.8276">get_contact_local_position(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="5887.29" cy="9007.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="5896.29" y="9010.6323">get_contact_local_normal(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="5887.29" cy="9020.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="5896.29" y="9023.437">get_contact_impulse(int p_contact_idx) const = 0 : float</text><ellipse cx="5887.29" cy="9033.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="324" x="5896.29" y="9036.2417">get_contact_local_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="5887.29" cy="9045.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="304" x="5896.29" y="9049.0464">get_contact_collider(int p_contact_idx) const = 0 : RID</text><ellipse cx="5887.29" cy="9058.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="5896.29" y="9061.8511">get_contact_collider_position(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="5887.29" cy="9071.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="5896.29" y="9074.6558">get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID</text><ellipse cx="5887.29" cy="9084.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5896.29" y="9087.4604">get_contact_collider_object(int p_contact_idx) const : Object *</text><ellipse cx="5887.29" cy="9097.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="5896.29" y="9100.2651">get_contact_collider_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="5887.29" cy="9109.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="446" x="5896.29" y="9113.0698">get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="5887.29" cy="9122.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="5896.29" y="9125.8745">get_step() const = 0 : real_t</text><ellipse cx="5887.29" cy="9135.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="5896.29" y="9138.6792">integrate_forces() : void</text><ellipse cx="5887.29" cy="9148.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="283" x="5896.29" y="9151.4839">get_space_state() = 0 : PhysicsDirectSpaceState *</text><ellipse cx="5887.29" cy="9161.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="5896.29" y="9164.2886">PhysicsDirectBodyState() : void</text></a><!--MD5=[123a6318eb7c3f47a6d4372e2b561658]
class C_0000503002593685351124--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143" target="_top" title="PhysicsDirectSpaceState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143" xlink:show="new" xlink:title="PhysicsDirectSpaceState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="304.0938" id="C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.5;" width="2171" x="26552.79" y="2199.9531"/><ellipse cx="27557.04" cy="2215.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27557.1494,2211.2969 L27555.9931,2216.375 L27558.3213,2216.375 L27557.1494,2211.2969 Z M27555.665,2209.0625 L27558.6494,2209.0625 L27562.0088,2221.4531 L27559.5556,2221.4531 L27558.79,2218.3906 L27555.5088,2218.3906 L27554.7588,2221.4531 L27552.3213,2221.4531 L27555.665,2209.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="27577.54" y="2220.1074">PhysicsDirectSpaceState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26553.79" x2="28722.79" y1="2231.9531" y2="2231.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26553.79" x2="28722.79" y1="2239.9531" y2="2239.9531"/><ellipse cx="26563.79" cy="2250.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26572.79" y="2254.1636">get_class() const : String</text><ellipse cx="26563.79" cy="2263.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26572.79" y="2266.9683">_get_class_namev() const : const StringName *</text><ellipse cx="26563.79" cy="2276.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26572.79" y="2279.7729">get_class_ptr_static() : void *</text><ellipse cx="26563.79" cy="2289.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26572.79" y="2292.5776">get_class_static() : String</text><ellipse cx="26563.79" cy="2302.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26572.79" y="2305.3823">get_parent_class_static() : String</text><ellipse cx="26563.79" cy="2314.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26572.79" y="2318.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26563.79" cy="2327.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26572.79" y="2330.9917">get_category_static() : String</text><ellipse cx="26563.79" cy="2340.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26572.79" y="2343.7964">inherits_static() : String</text><ellipse cx="26563.79" cy="2353.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26572.79" y="2356.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26563.79" cy="2366.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26572.79" y="2369.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26563.79" cy="2379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26572.79" y="2382.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26563.79" cy="2391.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26572.79" y="2395.0151">initialize_class() : void</text><ellipse cx="26563.79" cy="2404.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1540" x="26572.79" y="2407.8198">intersect_point(const Vector3 &amp; p_point, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int</text><ellipse cx="26563.79" cy="2417.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1689" x="26572.79" y="2420.6245">intersect_ray(const Vector3 &amp; p_from, const Vector3 &amp; p_to, PhysicsDirectSpaceState::RayResult &amp; r_result, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_ray = false) = 0 : bool</text><ellipse cx="26563.79" cy="2430.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1782" x="26572.79" y="2433.4292">intersect_shape(const RID &amp; p_shape, const Transform &amp; p_xform, float p_margin, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int</text><ellipse cx="26563.79" cy="2443.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2145" x="26572.79" y="2446.2339">cast_motion(const RID &amp; p_shape, const Transform &amp; p_xform, const Vector3 &amp; p_motion, float p_margin, float &amp; p_closest_safe, float &amp; p_closest_unsafe, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, PhysicsDirectSpaceState::ShapeRestInfo * r_info = __null) = 0 : bool</text><ellipse cx="26563.79" cy="2455.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1719" x="26572.79" y="2459.0386">collide_shape(RID p_shape, const Transform &amp; p_shape_xform, float p_margin, Vector3 * r_results, int p_result_max, int &amp; r_result_count, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="26563.79" cy="2468.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1637" x="26572.79" y="2471.8433">rest_info(RID p_shape, const Transform &amp; p_shape_xform, float p_margin, PhysicsDirectSpaceState::ShapeRestInfo * r_info, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="26563.79" cy="2481.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="525" x="26572.79" y="2484.6479">get_closest_point_to_object_volume(RID p_object, const Vector3 p_point) const = 0 : Vector3</text><ellipse cx="26563.79" cy="2494.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26572.79" y="2497.4526">PhysicsDirectSpaceState() : void</text></a><!--MD5=[c66ec037f9beb318ec4ceea904716941]
class C_0000493041171271776846--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158" target="_top" title="PhysicsDirectSpaceState##ShapeResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158" xlink:show="new" xlink:title="PhysicsDirectSpaceState##ShapeResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="99.2188" id="C_0000493041171271776846" style="stroke: #A80036; stroke-width: 1.5;" width="275" x="29000.79" y="701.4531"/><ellipse cx="29015.79" cy="717.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29018.7588,723.0938 Q29018.1806,723.3906 29017.54,723.5313 Q29016.8994,723.6875 29016.1963,723.6875 Q29013.6963,723.6875 29012.3681,722.0469 Q29011.0556,720.3906 29011.0556,717.2656 Q29011.0556,714.1406 29012.3681,712.4844 Q29013.6963,710.8281 29016.1963,710.8281 Q29016.8994,710.8281 29017.54,710.9844 Q29018.1963,711.1406 29018.7588,711.4375 L29018.7588,714.1563 Q29018.1338,713.5781 29017.54,713.3125 Q29016.9463,713.0313 29016.3213,713.0313 Q29014.9775,713.0313 29014.29,714.1094 Q29013.6025,715.1719 29013.6025,717.2656 Q29013.6025,719.3594 29014.29,720.4375 Q29014.9775,721.5 29016.3213,721.5 Q29016.9463,721.5 29017.54,721.2344 Q29018.1338,720.9531 29018.7588,720.375 L29018.7588,723.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="243" x="29029.79" y="721.6074">PhysicsDirectSpaceState::ShapeResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29001.79" x2="29274.79" y1="733.4531" y2="733.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29006.79" y="739.4531"/><ellipse cx="29011.79" cy="744.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="29020.79" y="747.6636">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29006.79" y="752.2578"/><ellipse cx="29011.79" cy="757.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="29020.79" y="760.4683">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29006.79" y="765.0625"/><ellipse cx="29011.79" cy="770.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="29020.79" y="773.2729">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29006.79" y="777.8672"/><ellipse cx="29011.79" cy="782.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="29020.79" y="786.0776">shape : int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="29001.79" x2="29274.79" y1="792.6719" y2="792.6719"/><!--MD5=[22d525dd8ab5843672eb9a446d1ac0b7]
class C_0000461609734144368587--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168" target="_top" title="PhysicsDirectSpaceState##RayResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168" xlink:show="new" xlink:title="PhysicsDirectSpaceState##RayResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="124.8281" id="C_0000461609734144368587" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="26859.79" y="688.4531"/><ellipse cx="26874.79" cy="704.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26877.7588,710.0938 Q26877.1806,710.3906 26876.54,710.5313 Q26875.8994,710.6875 26875.1963,710.6875 Q26872.6963,710.6875 26871.3681,709.0469 Q26870.0556,707.3906 26870.0556,704.2656 Q26870.0556,701.1406 26871.3681,699.4844 Q26872.6963,697.8281 26875.1963,697.8281 Q26875.8994,697.8281 26876.54,697.9844 Q26877.1963,698.1406 26877.7588,698.4375 L26877.7588,701.1563 Q26877.1338,700.5781 26876.54,700.3125 Q26875.9463,700.0313 26875.3213,700.0313 Q26873.9775,700.0313 26873.29,701.1094 Q26872.6025,702.1719 26872.6025,704.2656 Q26872.6025,706.3594 26873.29,707.4375 Q26873.9775,708.5 26875.3213,708.5 Q26875.9463,708.5 26876.54,708.2344 Q26877.1338,707.9531 26877.7588,707.375 L26877.7588,710.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="26888.79" y="708.6074">PhysicsDirectSpaceState::RayResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26860.79" x2="27115.79" y1="720.4531" y2="720.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" xlink:show="new" xlink:title="position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26865.79" y="726.4531"/><ellipse cx="26870.79" cy="731.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" xlink:show="new" xlink:title="position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26879.79" y="734.6636">position : Vector3</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" xlink:show="new" xlink:title="normal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26865.79" y="739.2578"/><ellipse cx="26870.79" cy="744.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" xlink:show="new" xlink:title="normal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26879.79" y="747.4683">normal : Vector3</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26865.79" y="752.0625"/><ellipse cx="26870.79" cy="757.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="26879.79" y="760.2729">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26865.79" y="764.8672"/><ellipse cx="26870.79" cy="769.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26879.79" y="773.0776">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26865.79" y="777.6719"/><ellipse cx="26870.79" cy="782.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26879.79" y="785.8823">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26865.79" y="790.4766"/><ellipse cx="26870.79" cy="795.4766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="26879.79" y="798.687">shape : int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="26860.79" x2="27115.79" y1="805.2813" y2="805.2813"/><!--MD5=[a29f7384437247e0f26d2b1ff51d7842]
class C_0001034902024938599899--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224" target="_top" title="PhysicsServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224" xlink:show="new" xlink:title="PhysicsServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="2557.7188" id="C_0001034902024938599899" style="stroke: #A80036; stroke-width: 1.5;" width="1275" x="6383.79" y="7553.9531"/><ellipse cx="6975.04" cy="7569.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6975.1494,7565.2969 L6973.9931,7570.375 L6976.3213,7570.375 L6975.1494,7565.2969 Z M6973.665,7563.0625 L6976.6494,7563.0625 L6980.0088,7575.4531 L6977.5556,7575.4531 L6976.79,7572.3906 L6973.5088,7572.3906 L6972.7588,7575.4531 L6970.3213,7575.4531 L6973.665,7563.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="6995.54" y="7574.1074">PhysicsServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6384.79" x2="7657.79" y1="7585.9531" y2="7585.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6384.79" x2="7657.79" y1="7593.9531" y2="7593.9531"/><ellipse cx="6394.79" cy="7604.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6403.79" y="7608.1636">get_class() const : String</text><ellipse cx="6394.79" cy="7617.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="6403.79" y="7620.9683">_get_class_namev() const : const StringName *</text><ellipse cx="6394.79" cy="7630.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="6403.79" y="7633.7729">get_class_ptr_static() : void *</text><ellipse cx="6394.79" cy="7643.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="6403.79" y="7646.5776">get_class_static() : String</text><ellipse cx="6394.79" cy="7656.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="6403.79" y="7659.3823">get_parent_class_static() : String</text><ellipse cx="6394.79" cy="7668.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="6403.79" y="7672.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="6394.79" cy="7681.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="6403.79" y="7684.9917">get_category_static() : String</text><ellipse cx="6394.79" cy="7694.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="6403.79" y="7697.7964">inherits_static() : String</text><ellipse cx="6394.79" cy="7707.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="6403.79" y="7710.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="6394.79" cy="7720.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6403.79" y="7723.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="6394.79" cy="7733" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="6403.79" y="7736.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="6394.79" cy="7745.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="6403.79" y="7749.0151">initialize_class() : void</text><ellipse cx="6394.79" cy="7758.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="6403.79" y="7761.8198">get_singleton() : PhysicsServer *</text><ellipse cx="6394.79" cy="7771.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="6403.79" y="7774.6245">shape_create(PhysicsServer::ShapeType p_shape) = 0 : RID</text><ellipse cx="6394.79" cy="7784.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="6403.79" y="7787.4292">shape_set_data(RID p_shape, const Variant &amp; p_data) = 0 : void</text><ellipse cx="6394.79" cy="7797.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="6403.79" y="7800.2339">shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void</text><ellipse cx="6394.79" cy="7809.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="6403.79" y="7813.0386">shape_get_type(RID p_shape) const = 0 : PhysicsServer::ShapeType</text><ellipse cx="6394.79" cy="7822.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="6403.79" y="7825.8433">shape_get_data(RID p_shape) const = 0 : Variant</text><ellipse cx="6394.79" cy="7835.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="338" x="6403.79" y="7838.6479">shape_set_margin(RID p_shape, real_t p_margin) = 0 : void</text><ellipse cx="6394.79" cy="7848.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="284" x="6403.79" y="7851.4526">shape_get_margin(RID p_shape) const = 0 : real_t</text><ellipse cx="6394.79" cy="7861.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="355" x="6403.79" y="7864.2573">shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t</text><ellipse cx="6394.79" cy="7873.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="6403.79" y="7877.062">space_create() = 0 : RID</text><ellipse cx="6394.79" cy="7886.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="6403.79" y="7889.8667">space_set_active(RID p_space, bool p_active) = 0 : void</text><ellipse cx="6394.79" cy="7899.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="6403.79" y="7902.6714">space_is_active(RID p_space) const = 0 : bool</text><ellipse cx="6394.79" cy="7912.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="568" x="6403.79" y="7915.4761">space_set_param(RID p_space, PhysicsServer::SpaceParameter p_param, real_t p_value) = 0 : void</text><ellipse cx="6394.79" cy="7925.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="523" x="6403.79" y="7928.2808">space_get_param(RID p_space, PhysicsServer::SpaceParameter p_param) const = 0 : real_t</text><ellipse cx="6394.79" cy="7937.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="6403.79" y="7941.0854">space_get_direct_state(RID p_space) = 0 : PhysicsDirectSpaceState *</text><ellipse cx="6394.79" cy="7950.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="6403.79" y="7953.8901">space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void</text><ellipse cx="6394.79" cy="7963.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="6403.79" y="7966.6948">space_get_contacts(RID p_space) const = 0 : Vector&lt;Vector3&gt;</text><ellipse cx="6394.79" cy="7976.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="6403.79" y="7979.4995">space_get_contact_count(RID p_space) const = 0 : int</text><ellipse cx="6394.79" cy="7989.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="6403.79" y="7992.3042">area_create() = 0 : RID</text><ellipse cx="6394.79" cy="8001.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="6403.79" y="8005.1089">area_set_space(RID p_area, RID p_space) = 0 : void</text><ellipse cx="6394.79" cy="8014.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="6403.79" y="8017.9136">area_get_space(RID p_area) const = 0 : RID</text><ellipse cx="6394.79" cy="8027.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="596" x="6403.79" y="8030.7183">area_set_space_override_mode(RID p_area, PhysicsServer::AreaSpaceOverrideMode p_mode) = 0 : void</text><ellipse cx="6394.79" cy="8040.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="550" x="6403.79" y="8043.5229">area_get_space_override_mode(RID p_area) const = 0 : PhysicsServer::AreaSpaceOverrideMode</text><ellipse cx="6394.79" cy="8053.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="712" x="6403.79" y="8056.3276">area_add_shape(RID p_area, RID p_shape, const Transform &amp; p_transform = Transform(), bool p_disabled = false) = 0 : void</text><ellipse cx="6394.79" cy="8065.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="393" x="6403.79" y="8069.1323">area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="6394.79" cy="8078.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="564" x="6403.79" y="8081.937">area_set_shape_transform(RID p_area, int p_shape_idx, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="6394.79" cy="8091.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="281" x="6403.79" y="8094.7417">area_get_shape_count(RID p_area) const = 0 : int</text><ellipse cx="6394.79" cy="8104.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="6403.79" y="8107.5464">area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID</text><ellipse cx="6394.79" cy="8117.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="447" x="6403.79" y="8120.3511">area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform</text><ellipse cx="6394.79" cy="8129.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="6403.79" y="8133.1558">area_remove_shape(RID p_area, int p_shape_idx) = 0 : void</text><ellipse cx="6394.79" cy="8142.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="6403.79" y="8145.9604">area_clear_shapes(RID p_area) = 0 : void</text><ellipse cx="6394.79" cy="8155.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="464" x="6403.79" y="8158.7651">area_set_shape_disabled(RID p_area, int p_shape_idx, bool p_disabled) = 0 : void</text><ellipse cx="6394.79" cy="8168.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="6403.79" y="8171.5698">area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void</text><ellipse cx="6394.79" cy="8181.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="6403.79" y="8184.3745">area_get_object_instance_id(RID p_area) const = 0 : ObjectID</text><ellipse cx="6394.79" cy="8193.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="603" x="6403.79" y="8197.1792">area_set_param(RID p_area, PhysicsServer::AreaParameter p_param, const Variant &amp; p_value) = 0 : void</text><ellipse cx="6394.79" cy="8206.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="428" x="6403.79" y="8209.9839">area_set_transform(RID p_area, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="6394.79" cy="8219.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="518" x="6403.79" y="8222.7886">area_get_param(RID p_parea, PhysicsServer::AreaParameter p_param) const = 0 : Variant</text><ellipse cx="6394.79" cy="8232.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="311" x="6403.79" y="8235.5933">area_get_transform(RID p_area) const = 0 : Transform</text><ellipse cx="6394.79" cy="8245.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="6403.79" y="8248.3979">area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void</text><ellipse cx="6394.79" cy="8257.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="6403.79" y="8261.2026">area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void</text><ellipse cx="6394.79" cy="8270.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="6403.79" y="8274.0073">area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void</text><ellipse cx="6394.79" cy="8283.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="6403.79" y="8286.812">area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="6394.79" cy="8296.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="6403.79" y="8299.6167">area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="6394.79" cy="8309.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="6403.79" y="8312.4214">area_set_ray_pickable(RID p_area, bool p_enable) = 0 : void</text><ellipse cx="6394.79" cy="8322.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="6403.79" y="8325.2261">area_is_ray_pickable(RID p_area) const = 0 : bool</text><ellipse cx="6394.79" cy="8334.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="617" x="6403.79" y="8338.0308">body_create(PhysicsServer::BodyMode p_mode = BODY_MODE_RIGID, bool p_init_sleeping = false) = 0 : RID</text><ellipse cx="6394.79" cy="8347.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="6403.79" y="8350.8354">body_set_space(RID p_body, RID p_space) = 0 : void</text><ellipse cx="6394.79" cy="8360.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="6403.79" y="8363.6401">body_get_space(RID p_body) const = 0 : RID</text><ellipse cx="6394.79" cy="8373.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="425" x="6403.79" y="8376.4448">body_set_mode(RID p_body, PhysicsServer::BodyMode p_mode) = 0 : void</text><ellipse cx="6394.79" cy="8386.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="6403.79" y="8389.2495">body_get_mode(RID p_body) const = 0 : PhysicsServer::BodyMode</text><ellipse cx="6394.79" cy="8398.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="716" x="6403.79" y="8402.0542">body_add_shape(RID p_body, RID p_shape, const Transform &amp; p_transform = Transform(), bool p_disabled = false) = 0 : void</text><ellipse cx="6394.79" cy="8411.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="6403.79" y="8414.8589">body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="6394.79" cy="8424.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="568" x="6403.79" y="8427.6636">body_set_shape_transform(RID p_body, int p_shape_idx, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="6394.79" cy="8437.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="285" x="6403.79" y="8440.4683">body_get_shape_count(RID p_body) const = 0 : int</text><ellipse cx="6394.79" cy="8450.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="349" x="6403.79" y="8453.2729">body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID</text><ellipse cx="6394.79" cy="8462.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="451" x="6403.79" y="8466.0776">body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform</text><ellipse cx="6394.79" cy="8475.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="6403.79" y="8478.8823">body_remove_shape(RID p_body, int p_shape_idx) = 0 : void</text><ellipse cx="6394.79" cy="8488.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="240" x="6403.79" y="8491.687">body_clear_shapes(RID p_body) = 0 : void</text><ellipse cx="6394.79" cy="8501.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="6403.79" y="8504.4917">body_set_shape_disabled(RID p_body, int p_shape_idx, bool p_disabled) = 0 : void</text><ellipse cx="6394.79" cy="8514.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="6403.79" y="8517.2964">body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void</text><ellipse cx="6394.79" cy="8526.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="6403.79" y="8530.1011">body_get_object_instance_id(RID p_body) const = 0 : uint32_t</text><ellipse cx="6394.79" cy="8539.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="490" x="6403.79" y="8542.9058">body_set_enable_continuous_collision_detection(RID p_body, bool p_enable) = 0 : void</text><ellipse cx="6394.79" cy="8552.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="6403.79" y="8555.7104">body_is_continuous_collision_detection_enabled(RID p_body) const = 0 : bool</text><ellipse cx="6394.79" cy="8565.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="368" x="6403.79" y="8568.5151">body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void</text><ellipse cx="6394.79" cy="8578.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="6403.79" y="8581.3198">body_get_collision_layer(RID p_body) const = 0 : uint32_t</text><ellipse cx="6394.79" cy="8590.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="6403.79" y="8594.1245">body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void</text><ellipse cx="6394.79" cy="8603.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="6403.79" y="8606.9292">body_get_collision_mask(RID p_body) const = 0 : uint32_t</text><ellipse cx="6394.79" cy="8616.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="6403.79" y="8619.7339">body_set_user_flags(RID p_body, uint32_t p_flags) = 0 : void</text><ellipse cx="6394.79" cy="8629.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="6403.79" y="8632.5386">body_get_user_flags(RID p_body) const = 0 : uint32_t</text><ellipse cx="6394.79" cy="8642.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="6403.79" y="8645.3433">body_set_param(RID p_body, PhysicsServer::BodyParameter p_param, float p_value) = 0 : void</text><ellipse cx="6394.79" cy="8654.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="6403.79" y="8658.1479">body_get_param(RID p_body, PhysicsServer::BodyParameter p_param) const = 0 : float</text><ellipse cx="6394.79" cy="8667.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="416" x="6403.79" y="8670.9526">body_set_kinematic_safe_margin(RID p_body, real_t p_margin) = 0 : void</text><ellipse cx="6394.79" cy="8680.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="6403.79" y="8683.7573">body_get_kinematic_safe_margin(RID p_body) const = 0 : real_t</text><ellipse cx="6394.79" cy="8693.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="569" x="6403.79" y="8696.562">body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant &amp; p_variant) = 0 : void</text><ellipse cx="6394.79" cy="8706.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="6403.79" y="8709.3667">body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant</text><ellipse cx="6394.79" cy="8718.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="6403.79" y="8722.1714">body_set_applied_force(RID p_body, const Vector3 &amp; p_force) = 0 : void</text><ellipse cx="6394.79" cy="8731.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="6403.79" y="8734.9761">body_get_applied_force(RID p_body) const = 0 : Vector3</text><ellipse cx="6394.79" cy="8744.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="426" x="6403.79" y="8747.7808">body_set_applied_torque(RID p_body, const Vector3 &amp; p_torque) = 0 : void</text><ellipse cx="6394.79" cy="8757.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="328" x="6403.79" y="8760.5854">body_get_applied_torque(RID p_body) const = 0 : Vector3</text><ellipse cx="6394.79" cy="8770.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="6403.79" y="8773.3901">body_add_central_force(RID p_body, const Vector3 &amp; p_force) = 0 : void</text><ellipse cx="6394.79" cy="8782.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="6403.79" y="8786.1948">body_add_force(RID p_body, const Vector3 &amp; p_force, const Vector3 &amp; p_pos) = 0 : void</text><ellipse cx="6394.79" cy="8795.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="383" x="6403.79" y="8798.9995">body_add_torque(RID p_body, const Vector3 &amp; p_torque) = 0 : void</text><ellipse cx="6394.79" cy="8808.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="452" x="6403.79" y="8811.8042">body_apply_central_impulse(RID p_body, const Vector3 &amp; p_impulse) = 0 : void</text><ellipse cx="6394.79" cy="8821.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="543" x="6403.79" y="8824.6089">body_apply_impulse(RID p_body, const Vector3 &amp; p_pos, const Vector3 &amp; p_impulse) = 0 : void</text><ellipse cx="6394.79" cy="8834.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="450" x="6403.79" y="8837.4136">body_apply_torque_impulse(RID p_body, const Vector3 &amp; p_impulse) = 0 : void</text><ellipse cx="6394.79" cy="8847.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="451" x="6403.79" y="8850.2183">body_set_axis_velocity(RID p_body, const Vector3 &amp; p_axis_velocity) = 0 : void</text><ellipse cx="6394.79" cy="8859.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="500" x="6403.79" y="8863.0229">body_set_axis_lock(RID p_body, PhysicsServer::BodyAxis p_axis, bool p_lock) = 0 : void</text><ellipse cx="6394.79" cy="8872.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="469" x="6403.79" y="8875.8276">body_is_axis_locked(RID p_body, PhysicsServer::BodyAxis p_axis) const = 0 : bool</text><ellipse cx="6394.79" cy="8885.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="6403.79" y="8888.6323">body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="6394.79" cy="8898.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="6403.79" y="8901.437">body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="6394.79" cy="8911.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="6403.79" y="8914.2417">body_get_collision_exceptions(RID p_body, List&lt;RID&gt; * p_exceptions) = 0 : void</text><ellipse cx="6394.79" cy="8923.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="6403.79" y="8927.0464">body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void</text><ellipse cx="6394.79" cy="8936.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="6403.79" y="8939.8511">body_get_max_contacts_reported(RID p_body) const = 0 : int</text><ellipse cx="6394.79" cy="8949.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="491" x="6403.79" y="8952.6558">body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void</text><ellipse cx="6394.79" cy="8962.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="424" x="6403.79" y="8965.4604">body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float</text><ellipse cx="6394.79" cy="8975.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="6403.79" y="8978.2651">body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void</text><ellipse cx="6394.79" cy="8987.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="6403.79" y="8991.0698">body_is_omitting_force_integration(RID p_body) const = 0 : bool</text><ellipse cx="6394.79" cy="9000.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="846" x="6403.79" y="9003.8745">body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName &amp; p_method, const Variant &amp; p_udata = Variant()) = 0 : void</text><ellipse cx="6394.79" cy="9013.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="6403.79" y="9016.6792">body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void</text><ellipse cx="6394.79" cy="9026.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="6403.79" y="9029.4839">body_is_ray_pickable(RID p_body) const = 0 : bool</text><ellipse cx="6394.79" cy="9039.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="375" x="6403.79" y="9042.2886">body_get_direct_state(RID p_body) = 0 : PhysicsDirectBodyState *</text><ellipse cx="6394.79" cy="9051.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1175" x="6403.79" y="9055.0933">body_test_motion(RID p_body, const Transform &amp; p_from, const Vector3 &amp; p_motion, bool p_infinite_inertia, PhysicsServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool</text><ellipse cx="6394.79" cy="9064.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1249" x="6403.79" y="9067.8979">body_test_ray_separation(RID p_body, const Transform &amp; p_transform, bool p_infinite_inertia, Vector3 &amp; r_recover_motion, PhysicsServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int</text><ellipse cx="6394.79" cy="9077.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="6403.79" y="9080.7026">soft_body_create(bool p_init_sleeping = false) = 0 : RID</text><ellipse cx="6394.79" cy="9090.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="673" x="6403.79" y="9093.5073">soft_body_update_visual_server(RID p_body, class SoftBodyVisualServerHandler * p_visual_server_handler) = 0 : void</text><ellipse cx="6394.79" cy="9103.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="6403.79" y="9106.312">soft_body_set_space(RID p_body, RID p_space) = 0 : void</text><ellipse cx="6394.79" cy="9115.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="279" x="6403.79" y="9119.1167">soft_body_get_space(RID p_body) const = 0 : RID</text><ellipse cx="6394.79" cy="9128.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="6403.79" y="9131.9214">soft_body_set_mesh(RID p_body, const REF &amp; p_mesh) = 0 : void</text><ellipse cx="6394.79" cy="9141.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="6403.79" y="9144.7261">soft_body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void</text><ellipse cx="6394.79" cy="9154.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="352" x="6403.79" y="9157.5308">soft_body_get_collision_layer(RID p_body) const = 0 : uint32_t</text><ellipse cx="6394.79" cy="9167.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="6403.79" y="9170.3354">soft_body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void</text><ellipse cx="6394.79" cy="9179.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="353" x="6403.79" y="9183.1401">soft_body_get_collision_mask(RID p_body) const = 0 : uint32_t</text><ellipse cx="6394.79" cy="9192.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="411" x="6403.79" y="9195.9448">soft_body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="6394.79" cy="9205.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="6403.79" y="9208.7495">soft_body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="6394.79" cy="9218.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="481" x="6403.79" y="9221.5542">soft_body_get_collision_exceptions(RID p_body, List&lt;RID&gt; * p_exceptions) = 0 : void</text><ellipse cx="6394.79" cy="9231.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="596" x="6403.79" y="9234.3589">soft_body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant &amp; p_variant) = 0 : void</text><ellipse cx="6394.79" cy="9243.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="495" x="6403.79" y="9247.1636">soft_body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant</text><ellipse cx="6394.79" cy="9256.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="6403.79" y="9259.9683">soft_body_set_transform(RID p_body, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="6394.79" cy="9269.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="458" x="6403.79" y="9272.7729">soft_body_get_vertex_position(RID p_body, int vertex_index) const = 0 : Vector3</text><ellipse cx="6394.79" cy="9282.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="6403.79" y="9285.5776">soft_body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void</text><ellipse cx="6394.79" cy="9295.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="6403.79" y="9298.3823">soft_body_is_ray_pickable(RID p_body) const = 0 : bool</text><ellipse cx="6394.79" cy="9307.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="485" x="6403.79" y="9311.187">soft_body_set_simulation_precision(RID p_body, int p_simulation_precision) = 0 : void</text><ellipse cx="6394.79" cy="9320.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="6403.79" y="9323.9917">soft_body_get_simulation_precision(RID p_body) = 0 : int</text><ellipse cx="6394.79" cy="9333.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="6403.79" y="9336.7964">soft_body_set_total_mass(RID p_body, real_t p_total_mass) = 0 : void</text><ellipse cx="6394.79" cy="9346.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="6403.79" y="9349.6011">soft_body_get_total_mass(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9359.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="6403.79" y="9362.4058">soft_body_set_linear_stiffness(RID p_body, real_t p_stiffness) = 0 : void</text><ellipse cx="6394.79" cy="9372" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="310" x="6403.79" y="9375.2104">soft_body_get_linear_stiffness(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9384.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="443" x="6403.79" y="9388.0151">soft_body_set_areaAngular_stiffness(RID p_body, real_t p_stiffness) = 0 : void</text><ellipse cx="6394.79" cy="9397.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="6403.79" y="9400.8198">soft_body_get_areaAngular_stiffness(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9410.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="415" x="6403.79" y="9413.6245">soft_body_set_volume_stiffness(RID p_body, real_t p_stiffness) = 0 : void</text><ellipse cx="6394.79" cy="9423.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="6403.79" y="9426.4292">soft_body_get_volume_stiffness(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9436.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="6403.79" y="9439.2339">soft_body_set_pressure_coefficient(RID p_body, real_t p_pressure_coefficient) = 0 : void</text><ellipse cx="6394.79" cy="9448.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="6403.79" y="9452.0386">soft_body_get_pressure_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9461.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="6403.79" y="9464.8433">soft_body_set_pose_matching_coefficient(RID p_body, real_t p_pose_matching_coefficient) = 0 : void</text><ellipse cx="6394.79" cy="9474.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="6403.79" y="9477.6479">soft_body_get_pose_matching_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9487.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="499" x="6403.79" y="9490.4526">soft_body_set_damping_coefficient(RID p_body, real_t p_damping_coefficient) = 0 : void</text><ellipse cx="6394.79" cy="9500.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="338" x="6403.79" y="9503.2573">soft_body_get_damping_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9512.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="453" x="6403.79" y="9516.062">soft_body_set_drag_coefficient(RID p_body, real_t p_drag_coefficient) = 0 : void</text><ellipse cx="6394.79" cy="9525.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="6403.79" y="9528.8667">soft_body_get_drag_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="6394.79" cy="9538.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="563" x="6403.79" y="9541.6714">soft_body_move_point(RID p_body, int p_point_index, const Vector3 &amp; p_global_position) = 0 : void</text><ellipse cx="6394.79" cy="9551.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="6403.79" y="9554.4761">soft_body_get_point_global_position(RID p_body, int p_point_index) = 0 : Vector3</text><ellipse cx="6394.79" cy="9564.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="441" x="6403.79" y="9567.2808">soft_body_get_point_offset(RID p_body, int p_point_index) const = 0 : Vector3</text><ellipse cx="6394.79" cy="9576.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="6403.79" y="9580.0854">soft_body_remove_all_pinned_points(RID p_body) = 0 : void</text><ellipse cx="6394.79" cy="9589.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="414" x="6403.79" y="9592.8901">soft_body_pin_point(RID p_body, int p_point_index, bool p_pin) = 0 : void</text><ellipse cx="6394.79" cy="9602.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="6403.79" y="9605.6948">soft_body_is_point_pinned(RID p_body, int p_point_index) = 0 : bool</text><ellipse cx="6394.79" cy="9615.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="6403.79" y="9618.4995">joint_get_type(RID p_joint) const = 0 : PhysicsServer::JointType</text><ellipse cx="6394.79" cy="9628.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="6403.79" y="9631.3042">joint_set_solver_priority(RID p_joint, int p_priority) = 0 : void</text><ellipse cx="6394.79" cy="9640.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="288" x="6403.79" y="9644.1089">joint_get_solver_priority(RID p_joint) const = 0 : int</text><ellipse cx="6394.79" cy="9653.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="6403.79" y="9656.9136">joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void</text><ellipse cx="6394.79" cy="9666.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="6403.79" y="9669.7183">joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool</text><ellipse cx="6394.79" cy="9679.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="628" x="6403.79" y="9682.5229">joint_create_pin(RID p_body_A, const Vector3 &amp; p_local_A, RID p_body_B, const Vector3 &amp; p_local_B) = 0 : RID</text><ellipse cx="6394.79" cy="9692.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="550" x="6403.79" y="9695.3276">pin_joint_set_param(RID p_joint, PhysicsServer::PinJointParam p_param, float p_value) = 0 : void</text><ellipse cx="6394.79" cy="9704.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="505" x="6403.79" y="9708.1323">pin_joint_get_param(RID p_joint, PhysicsServer::PinJointParam p_param) const = 0 : float</text><ellipse cx="6394.79" cy="9717.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="6403.79" y="9720.937">pin_joint_set_local_a(RID p_joint, const Vector3 &amp; p_A) = 0 : void</text><ellipse cx="6394.79" cy="9730.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="6403.79" y="9733.7417">pin_joint_get_local_a(RID p_joint) const = 0 : Vector3</text><ellipse cx="6394.79" cy="9743.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="6403.79" y="9746.5464">pin_joint_set_local_b(RID p_joint, const Vector3 &amp; p_B) = 0 : void</text><ellipse cx="6394.79" cy="9756.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="6403.79" y="9759.3511">pin_joint_get_local_b(RID p_joint) const = 0 : Vector3</text><ellipse cx="6394.79" cy="9768.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="682" x="6403.79" y="9772.1558">joint_create_hinge(RID p_body_A, const Transform &amp; p_hinge_A, RID p_body_B, const Transform &amp; p_hinge_B) = 0 : RID</text><ellipse cx="6394.79" cy="9781.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="995" x="6403.79" y="9784.9604">joint_create_hinge_simple(RID p_body_A, const Vector3 &amp; p_pivot_A, const Vector3 &amp; p_axis_A, RID p_body_B, const Vector3 &amp; p_pivot_B, const Vector3 &amp; p_axis_B) = 0 : RID</text><ellipse cx="6394.79" cy="9794.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="6403.79" y="9797.7651">hinge_joint_set_param(RID p_joint, PhysicsServer::HingeJointParam p_param, float p_value) = 0 : void</text><ellipse cx="6394.79" cy="9807.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="6403.79" y="9810.5698">hinge_joint_get_param(RID p_joint, PhysicsServer::HingeJointParam p_param) const = 0 : float</text><ellipse cx="6394.79" cy="9820.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="532" x="6403.79" y="9823.3745">hinge_joint_set_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag, bool p_value) = 0 : void</text><ellipse cx="6394.79" cy="9832.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="6403.79" y="9836.1792">hinge_joint_get_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag) const = 0 : bool</text><ellipse cx="6394.79" cy="9845.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="752" x="6403.79" y="9848.9839">joint_create_slider(RID p_body_A, const Transform &amp; p_local_frame_A, RID p_body_B, const Transform &amp; p_local_frame_B) = 0 : RID</text><ellipse cx="6394.79" cy="9858.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="6403.79" y="9861.7886">slider_joint_set_param(RID p_joint, PhysicsServer::SliderJointParam p_param, float p_value) = 0 : void</text><ellipse cx="6394.79" cy="9871.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="6403.79" y="9874.5933">slider_joint_get_param(RID p_joint, PhysicsServer::SliderJointParam p_param) const = 0 : float</text><ellipse cx="6394.79" cy="9884.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="780" x="6403.79" y="9887.3979">joint_create_cone_twist(RID p_body_A, const Transform &amp; p_local_frame_A, RID p_body_B, const Transform &amp; p_local_frame_B) = 0 : RID</text><ellipse cx="6394.79" cy="9896.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="633" x="6403.79" y="9900.2026">cone_twist_joint_set_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param, float p_value) = 0 : void</text><ellipse cx="6394.79" cy="9909.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="588" x="6403.79" y="9913.0073">cone_twist_joint_get_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param) const = 0 : float</text><ellipse cx="6394.79" cy="9922.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="794" x="6403.79" y="9925.812">joint_create_generic_6dof(RID p_body_A, const Transform &amp; p_local_frame_A, RID p_body_B, const Transform &amp; p_local_frame_B) = 0 : RID</text><ellipse cx="6394.79" cy="9935.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="740" x="6403.79" y="9938.6167">generic_6dof_joint_set_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param, float p_value) = 0 : void</text><ellipse cx="6394.79" cy="9948.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="661" x="6403.79" y="9951.4214">generic_6dof_joint_get_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param) = 0 : float</text><ellipse cx="6394.79" cy="9961.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="700" x="6403.79" y="9964.2261">generic_6dof_joint_set_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag, bool p_enable) = 0 : void</text><ellipse cx="6394.79" cy="9973.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="614" x="6403.79" y="9977.0308">generic_6dof_joint_get_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag) = 0 : bool</text><ellipse cx="6394.79" cy="9986.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="6403.79" y="9989.8354">free(RID p_rid) = 0 : void</text><ellipse cx="6394.79" cy="9999.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="6403.79" y="10002.6401">set_active(bool p_active) = 0 : void</text><ellipse cx="6394.79" cy="10012.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="6403.79" y="10015.4448">init() = 0 : void</text><ellipse cx="6394.79" cy="10025.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="6403.79" y="10028.2495">step(float p_step) = 0 : void</text><ellipse cx="6394.79" cy="10037.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="143" x="6403.79" y="10041.0542">flush_queries() = 0 : void</text><ellipse cx="6394.79" cy="10050.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="6403.79" y="10053.8589">finish() = 0 : void</text><ellipse cx="6394.79" cy="10063.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="6403.79" y="10066.6636">is_flushing_queries() const = 0 : bool</text><ellipse cx="6394.79" cy="10076.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="6403.79" y="10079.4683">get_process_info(PhysicsServer::ProcessInfo p_info) = 0 : int</text><ellipse cx="6394.79" cy="10089.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="6403.79" y="10092.2729">PhysicsServer() : void</text><ellipse cx="6394.79" cy="10101.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6403.79" y="10105.0776">~PhysicsServer() : void</text></a><!--MD5=[15ab565944242ceeac87f602c1eae9a8]
class C_0002302096389852429221--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40" target="_top" title="Physics2DDirectBodyState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40" xlink:show="new" xlink:title="Physics2DDirectBodyState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="637.0156" id="C_0002302096389852429221" style="stroke: #A80036; stroke-width: 1.5;" width="475" x="9097.79" y="8514.4531"/><ellipse cx="9249.54" cy="8530.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9249.6494,8525.7969 L9248.4931,8530.875 L9250.8213,8530.875 L9249.6494,8525.7969 Z M9248.165,8523.5625 L9251.1494,8523.5625 L9254.5088,8535.9531 L9252.0556,8535.9531 L9251.29,8532.8906 L9248.0088,8532.8906 L9247.2588,8535.9531 L9244.8213,8535.9531 L9248.165,8523.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="9270.04" y="8534.6074">Physics2DDirectBodyState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9098.79" x2="9571.79" y1="8546.4531" y2="8546.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9098.79" x2="9571.79" y1="8554.4531" y2="8554.4531"/><ellipse cx="9108.79" cy="8565.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="9117.79" y="8568.6636">get_class() const : String</text><ellipse cx="9108.79" cy="8578.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="9117.79" y="8581.4683">_get_class_namev() const : const StringName *</text><ellipse cx="9108.79" cy="8591.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="9117.79" y="8594.2729">get_class_ptr_static() : void *</text><ellipse cx="9108.79" cy="8603.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="9117.79" y="8607.0776">get_class_static() : String</text><ellipse cx="9108.79" cy="8616.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="9117.79" y="8619.8823">get_parent_class_static() : String</text><ellipse cx="9108.79" cy="8629.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="9117.79" y="8632.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="9108.79" cy="8642.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="9117.79" y="8645.4917">get_category_static() : String</text><ellipse cx="9108.79" cy="8655.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="9117.79" y="8658.2964">inherits_static() : String</text><ellipse cx="9108.79" cy="8667.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="9117.79" y="8671.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="9108.79" cy="8680.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="9117.79" y="8683.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="9108.79" cy="8693.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="9117.79" y="8696.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="9108.79" cy="8706.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="9117.79" y="8709.5151">initialize_class() : void</text><ellipse cx="9108.79" cy="8719.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="9117.79" y="8722.3198">get_total_gravity() const = 0 : Vector2</text><ellipse cx="9108.79" cy="8731.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="9117.79" y="8735.1245">get_total_linear_damp() const = 0 : float</text><ellipse cx="9108.79" cy="8744.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="9117.79" y="8747.9292">get_total_angular_damp() const = 0 : float</text><ellipse cx="9108.79" cy="8757.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="9117.79" y="8760.7339">get_inverse_mass() const = 0 : float</text><ellipse cx="9108.79" cy="8770.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="218" x="9117.79" y="8773.5386">get_inverse_inertia() const = 0 : real_t</text><ellipse cx="9108.79" cy="8783.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="9117.79" y="8786.3433">set_linear_velocity(const Vector2 &amp; p_velocity) = 0 : void</text><ellipse cx="9108.79" cy="8795.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="9117.79" y="8799.1479">get_linear_velocity() const = 0 : Vector2</text><ellipse cx="9108.79" cy="8808.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="9117.79" y="8811.9526">set_angular_velocity(real_t p_velocity) = 0 : void</text><ellipse cx="9108.79" cy="8821.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="9117.79" y="8824.7573">get_angular_velocity() const = 0 : real_t</text><ellipse cx="9108.79" cy="8834.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="9117.79" y="8837.562">set_transform(const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="9108.79" cy="8847.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="9117.79" y="8850.3667">get_transform() const = 0 : Transform2D</text><ellipse cx="9108.79" cy="8859.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="9117.79" y="8863.1714">add_central_force(const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="9108.79" cy="8872.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="409" x="9117.79" y="8875.9761">add_force(const Vector2 &amp; p_offset, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="9108.79" cy="8885.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="218" x="9117.79" y="8888.7808">add_torque(real_t p_torque) = 0 : void</text><ellipse cx="9108.79" cy="8898.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="9117.79" y="8901.5854">apply_central_impulse(const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="9108.79" cy="8911.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="9117.79" y="8914.3901">apply_torque_impulse(real_t p_torque) = 0 : void</text><ellipse cx="9108.79" cy="8923.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="9117.79" y="8927.1948">apply_impulse(const Vector2 &amp; p_offset, const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="9108.79" cy="8936.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="9117.79" y="8939.9995">set_sleep_state(bool p_enable) = 0 : void</text><ellipse cx="9108.79" cy="8949.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="9117.79" y="8952.8042">is_sleeping() const = 0 : bool</text><ellipse cx="9108.79" cy="8962.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="9117.79" y="8965.6089">get_contact_count() const = 0 : int</text><ellipse cx="9108.79" cy="8975.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="9117.79" y="8978.4136">get_contact_local_position(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="9108.79" cy="8988.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="9117.79" y="8991.2183">get_contact_local_normal(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="9108.79" cy="9000.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="324" x="9117.79" y="9004.0229">get_contact_local_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="9108.79" cy="9013.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="304" x="9117.79" y="9016.8276">get_contact_collider(int p_contact_idx) const = 0 : RID</text><ellipse cx="9108.79" cy="9026.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="9117.79" y="9029.6323">get_contact_collider_position(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="9108.79" cy="9039.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="9117.79" y="9042.437">get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID</text><ellipse cx="9108.79" cy="9052.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="9117.79" y="9055.2417">get_contact_collider_object(int p_contact_idx) const : Object *</text><ellipse cx="9108.79" cy="9064.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="9117.79" y="9068.0464">get_contact_collider_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="9108.79" cy="9077.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="426" x="9117.79" y="9080.8511">get_contact_collider_shape_metadata(int p_contact_idx) const = 0 : Variant</text><ellipse cx="9108.79" cy="9090.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="446" x="9117.79" y="9093.6558">get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="9108.79" cy="9103.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="9117.79" y="9106.4604">get_step() const = 0 : real_t</text><ellipse cx="9108.79" cy="9116.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="9117.79" y="9119.2651">integrate_forces() : void</text><ellipse cx="9108.79" cy="9128.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="9117.79" y="9132.0698">get_space_state() = 0 : Physics2DDirectSpaceState *</text><ellipse cx="9108.79" cy="9141.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="9117.79" y="9144.8745">Physics2DDirectBodyState() : void</text></a><!--MD5=[ca40d70d705a3e45bf51321044ec5376]
class C_0000236996062289735257--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145" target="_top" title="Physics2DDirectSpaceState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145" xlink:show="new" xlink:title="Physics2DDirectSpaceState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="304.0938" id="C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.5;" width="1992" x="28901.29" y="2199.9531"/><ellipse cx="29807.54" cy="2215.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29807.6494,2211.2969 L29806.4931,2216.375 L29808.8213,2216.375 L29807.6494,2211.2969 Z M29806.165,2209.0625 L29809.1494,2209.0625 L29812.5088,2221.4531 L29810.0556,2221.4531 L29809.29,2218.3906 L29806.0088,2218.3906 L29805.2588,2221.4531 L29802.8213,2221.4531 L29806.165,2209.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="29828.04" y="2220.1074">Physics2DDirectSpaceState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28902.29" x2="30892.29" y1="2231.9531" y2="2231.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28902.29" x2="30892.29" y1="2239.9531" y2="2239.9531"/><ellipse cx="28912.29" cy="2250.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="28921.29" y="2254.1636">get_class() const : String</text><ellipse cx="28912.29" cy="2263.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="28921.29" y="2266.9683">_get_class_namev() const : const StringName *</text><ellipse cx="28912.29" cy="2276.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="28921.29" y="2279.7729">get_class_ptr_static() : void *</text><ellipse cx="28912.29" cy="2289.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="28921.29" y="2292.5776">get_class_static() : String</text><ellipse cx="28912.29" cy="2302.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="28921.29" y="2305.3823">get_parent_class_static() : String</text><ellipse cx="28912.29" cy="2314.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="28921.29" y="2318.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="28912.29" cy="2327.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="28921.29" y="2330.9917">get_category_static() : String</text><ellipse cx="28912.29" cy="2340.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="28921.29" y="2343.7964">inherits_static() : String</text><ellipse cx="28912.29" cy="2353.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="28921.29" y="2356.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="28912.29" cy="2366.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="28921.29" y="2369.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="28912.29" cy="2379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="28921.29" y="2382.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="28912.29" cy="2391.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="28921.29" y="2395.0151">initialize_class() : void</text><ellipse cx="28912.29" cy="2404.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1563" x="28921.29" y="2407.8198">intersect_ray(const Vector2 &amp; p_from, const Vector2 &amp; p_to, Physics2DDirectSpaceState::RayResult &amp; r_result, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="28912.29" cy="2417.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1703" x="28921.29" y="2420.6245">intersect_point(const Vector2 &amp; p_point, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int</text><ellipse cx="28912.29" cy="2430.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1950" x="28921.29" y="2433.4292">intersect_point_on_canvas(const Vector2 &amp; p_point, ObjectID p_canvas_instance_id, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int</text><ellipse cx="28912.29" cy="2443.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1966" x="28921.29" y="2446.2339">intersect_shape(const RID &amp; p_shape, const Transform2D &amp; p_xform, const Vector2 &amp; p_motion, float p_margin, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int</text><ellipse cx="28912.29" cy="2455.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1829" x="28921.29" y="2459.0386">cast_motion(const RID &amp; p_shape, const Transform2D &amp; p_xform, const Vector2 &amp; p_motion, float p_margin, float &amp; p_closest_safe, float &amp; p_closest_unsafe, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="28912.29" cy="2468.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1888" x="28921.29" y="2471.8433">collide_shape(RID p_shape, const Transform2D &amp; p_shape_xform, const Vector2 &amp; p_motion, float p_margin, Vector2 * r_results, int p_result_max, int &amp; r_result_count, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="28912.29" cy="2481.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1821" x="28921.29" y="2484.6479">rest_info(RID p_shape, const Transform2D &amp; p_shape_xform, const Vector2 &amp; p_motion, float p_margin, Physics2DDirectSpaceState::ShapeRestInfo * r_info, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="28912.29" cy="2494.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="28921.29" y="2497.4526">Physics2DDirectSpaceState() : void</text></a><!--MD5=[9eb4616909927b8afaeaff475656c5e3]
class C_0001801355352189289676--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162" target="_top" title="Physics2DDirectSpaceState##RayResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162" xlink:show="new" xlink:title="Physics2DDirectSpaceState##RayResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="137.6328" id="C_0001801355352189289676" style="stroke: #A80036; stroke-width: 1.5;" width="274" x="33275.29" y="681.9531"/><ellipse cx="33290.29" cy="697.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33293.2588,703.5938 Q33292.6806,703.8906 33292.04,704.0313 Q33291.3994,704.1875 33290.6963,704.1875 Q33288.1963,704.1875 33286.8681,702.5469 Q33285.5556,700.8906 33285.5556,697.7656 Q33285.5556,694.6406 33286.8681,692.9844 Q33288.1963,691.3281 33290.6963,691.3281 Q33291.3994,691.3281 33292.04,691.4844 Q33292.6963,691.6406 33293.2588,691.9375 L33293.2588,694.6563 Q33292.6338,694.0781 33292.04,693.8125 Q33291.4463,693.5313 33290.8213,693.5313 Q33289.4775,693.5313 33288.79,694.6094 Q33288.1025,695.6719 33288.1025,697.7656 Q33288.1025,699.8594 33288.79,700.9375 Q33289.4775,702 33290.8213,702 Q33291.4463,702 33292.04,701.7344 Q33292.6338,701.4531 33293.2588,700.875 L33293.2588,703.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="33304.29" y="702.1074">Physics2DDirectSpaceState::RayResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33276.29" x2="33548.29" y1="713.9531" y2="713.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" xlink:show="new" xlink:title="position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="719.9531"/><ellipse cx="33286.29" cy="724.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" xlink:show="new" xlink:title="position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="33295.29" y="728.1636">position : Vector2</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" xlink:show="new" xlink:title="normal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="732.7578"/><ellipse cx="33286.29" cy="737.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" xlink:show="new" xlink:title="normal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="33295.29" y="740.9683">normal : Vector2</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="745.5625"/><ellipse cx="33286.29" cy="750.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="33295.29" y="753.7729">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="758.3672"/><ellipse cx="33286.29" cy="763.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="33295.29" y="766.5776">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="771.1719"/><ellipse cx="33286.29" cy="776.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="33295.29" y="779.3823">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="783.9766"/><ellipse cx="33286.29" cy="788.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="33295.29" y="792.187">shape : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" xlink:show="new" xlink:title="metadata" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33281.29" y="796.7813"/><ellipse cx="33286.29" cy="801.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" xlink:show="new" xlink:title="metadata" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="33295.29" y="804.9917">metadata : Variant</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33276.29" x2="33548.29" y1="811.5859" y2="811.5859"/><!--MD5=[833071aa6dd5b089efecfc256c21fee2]
class C_0001771770302499309898--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175" target="_top" title="Physics2DDirectSpaceState##ShapeResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175" xlink:show="new" xlink:title="Physics2DDirectSpaceState##ShapeResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="112.0234" id="C_0001771770302499309898" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="33584.29" y="694.9531"/><ellipse cx="33599.29" cy="710.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33602.2588,716.5938 Q33601.6806,716.8906 33601.04,717.0313 Q33600.3994,717.1875 33599.6963,717.1875 Q33597.1963,717.1875 33595.8681,715.5469 Q33594.5556,713.8906 33594.5556,710.7656 Q33594.5556,707.6406 33595.8681,705.9844 Q33597.1963,704.3281 33599.6963,704.3281 Q33600.3994,704.3281 33601.04,704.4844 Q33601.6963,704.6406 33602.2588,704.9375 L33602.2588,707.6563 Q33601.6338,707.0781 33601.04,706.8125 Q33600.4463,706.5313 33599.8213,706.5313 Q33598.4775,706.5313 33597.79,707.6094 Q33597.1025,708.6719 33597.1025,710.7656 Q33597.1025,712.8594 33597.79,713.9375 Q33598.4775,715 33599.8213,715 Q33600.4463,715 33601.04,714.7344 Q33601.6338,714.4531 33602.2588,713.875 L33602.2588,716.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="33613.29" y="715.1074">Physics2DDirectSpaceState::ShapeResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33585.29" x2="33875.29" y1="726.9531" y2="726.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33590.29" y="732.9531"/><ellipse cx="33595.29" cy="737.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="33604.29" y="741.1636">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33590.29" y="745.7578"/><ellipse cx="33595.29" cy="750.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="33604.29" y="753.9683">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33590.29" y="758.5625"/><ellipse cx="33595.29" cy="763.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="33604.29" y="766.7729">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33590.29" y="771.3672"/><ellipse cx="33595.29" cy="776.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="33604.29" y="779.5776">shape : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" xlink:show="new" xlink:title="metadata" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33590.29" y="784.1719"/><ellipse cx="33595.29" cy="789.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" xlink:show="new" xlink:title="metadata" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="33604.29" y="792.3823">metadata : Variant</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33585.29" x2="33875.29" y1="798.9766" y2="798.9766"/><!--MD5=[75170794dfa38b97f308a928ae46e341]
class C_0001561529841391244418--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232" target="_top" title="Physics2DServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232" xlink:show="new" xlink:title="Physics2DServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="1904.6797" id="C_0001561529841391244418" style="stroke: #A80036; stroke-width: 1.5;" width="1408" x="12309.29" y="7880.4531"/><ellipse cx="12958.54" cy="7896.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12958.6494,7891.7969 L12957.4931,7896.875 L12959.8213,7896.875 L12958.6494,7891.7969 Z M12957.165,7889.5625 L12960.1494,7889.5625 L12963.5088,7901.9531 L12961.0556,7901.9531 L12960.29,7898.8906 L12957.0088,7898.8906 L12956.2588,7901.9531 L12953.8213,7901.9531 L12957.165,7889.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="12979.04" y="7900.6074">Physics2DServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12310.29" x2="13716.29" y1="7912.4531" y2="7912.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="12310.29" x2="13716.29" y1="7920.4531" y2="7920.4531"/><ellipse cx="12320.29" cy="7931.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="12329.29" y="7934.6636">get_class() const : String</text><ellipse cx="12320.29" cy="7944.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="12329.29" y="7947.4683">_get_class_namev() const : const StringName *</text><ellipse cx="12320.29" cy="7957.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="12329.29" y="7960.2729">get_class_ptr_static() : void *</text><ellipse cx="12320.29" cy="7969.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="12329.29" y="7973.0776">get_class_static() : String</text><ellipse cx="12320.29" cy="7982.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="12329.29" y="7985.8823">get_parent_class_static() : String</text><ellipse cx="12320.29" cy="7995.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="12329.29" y="7998.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="12320.29" cy="8008.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="12329.29" y="8011.4917">get_category_static() : String</text><ellipse cx="12320.29" cy="8021.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="12329.29" y="8024.2964">inherits_static() : String</text><ellipse cx="12320.29" cy="8033.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="12329.29" y="8037.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="12320.29" cy="8046.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="12329.29" y="8049.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="12320.29" cy="8059.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="12329.29" y="8062.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="12320.29" cy="8072.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="12329.29" y="8075.5151">initialize_class() : void</text><ellipse cx="12320.29" cy="8085.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="12329.29" y="8088.3198">get_singleton() : Physics2DServer *</text><ellipse cx="12320.29" cy="8097.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="165" x="12329.29" y="8101.1245">line_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8110.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="12329.29" y="8113.9292">ray_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8123.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="12329.29" y="8126.7339">segment_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8136.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="12329.29" y="8139.5386">circle_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8149.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="198" x="12329.29" y="8152.3433">rectangle_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8161.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="188" x="12329.29" y="8165.1479">capsule_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8174.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="12329.29" y="8177.9526">convex_polygon_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8187.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="243" x="12329.29" y="8190.7573">concave_polygon_shape_create() = 0 : RID</text><ellipse cx="12320.29" cy="8200.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="12329.29" y="8203.562">shape_set_data(RID p_shape, const Variant &amp; p_data) = 0 : void</text><ellipse cx="12320.29" cy="8213.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="12329.29" y="8216.3667">shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void</text><ellipse cx="12320.29" cy="8225.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="12329.29" y="8229.1714">shape_get_type(RID p_shape) const = 0 : Physics2DServer::ShapeType</text><ellipse cx="12320.29" cy="8238.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="12329.29" y="8241.9761">shape_get_data(RID p_shape) const = 0 : Variant</text><ellipse cx="12320.29" cy="8251.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="355" x="12329.29" y="8254.7808">shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t</text><ellipse cx="12320.29" cy="8264.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1382" x="12329.29" y="8267.5854">shape_collide(RID p_shape_A, const Transform2D &amp; p_xform_A, const Vector2 &amp; p_motion_A, RID p_shape_B, const Transform2D &amp; p_xform_B, const Vector2 &amp; p_motion_B, Vector2 * r_results, int p_result_max, int &amp; r_result_count) = 0 : bool</text><ellipse cx="12320.29" cy="8277.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="12329.29" y="8280.3901">space_create() = 0 : RID</text><ellipse cx="12320.29" cy="8289.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="12329.29" y="8293.1948">space_set_active(RID p_space, bool p_active) = 0 : void</text><ellipse cx="12320.29" cy="8302.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="12329.29" y="8305.9995">space_is_active(RID p_space) const = 0 : bool</text><ellipse cx="12320.29" cy="8315.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="583" x="12329.29" y="8318.8042">space_set_param(RID p_space, Physics2DServer::SpaceParameter p_param, real_t p_value) = 0 : void</text><ellipse cx="12320.29" cy="8328.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="538" x="12329.29" y="8331.6089">space_get_param(RID p_space, Physics2DServer::SpaceParameter p_param) const = 0 : real_t</text><ellipse cx="12320.29" cy="8341.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="12329.29" y="8344.4136">space_get_direct_state(RID p_space) = 0 : Physics2DDirectSpaceState *</text><ellipse cx="12320.29" cy="8354.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="12329.29" y="8357.2183">space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void</text><ellipse cx="12320.29" cy="8366.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="12329.29" y="8370.0229">space_get_contacts(RID p_space) const = 0 : Vector&lt;Vector2&gt;</text><ellipse cx="12320.29" cy="8379.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="12329.29" y="8382.8276">space_get_contact_count(RID p_space) const = 0 : int</text><ellipse cx="12320.29" cy="8392.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="12329.29" y="8395.6323">area_create() = 0 : RID</text><ellipse cx="12320.29" cy="8405.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="12329.29" y="8408.437">area_set_space(RID p_area, RID p_space) = 0 : void</text><ellipse cx="12320.29" cy="8418.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="12329.29" y="8421.2417">area_get_space(RID p_area) const = 0 : RID</text><ellipse cx="12320.29" cy="8430.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="12329.29" y="8434.0464">area_set_space_override_mode(RID p_area, Physics2DServer::AreaSpaceOverrideMode p_mode) = 0 : void</text><ellipse cx="12320.29" cy="8443.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="12329.29" y="8446.8511">area_get_space_override_mode(RID p_area) const = 0 : Physics2DServer::AreaSpaceOverrideMode</text><ellipse cx="12320.29" cy="8456.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="742" x="12329.29" y="8459.6558">area_add_shape(RID p_area, RID p_shape, const Transform2D &amp; p_transform = Transform2D(), bool p_disabled = false) = 0 : void</text><ellipse cx="12320.29" cy="8469.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="393" x="12329.29" y="8472.4604">area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="12320.29" cy="8482.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="12329.29" y="8485.2651">area_set_shape_transform(RID p_area, int p_shape_idx, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="12320.29" cy="8494.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="281" x="12329.29" y="8498.0698">area_get_shape_count(RID p_area) const = 0 : int</text><ellipse cx="12320.29" cy="8507.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="12329.29" y="8510.8745">area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID</text><ellipse cx="12320.29" cy="8520.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="462" x="12329.29" y="8523.6792">area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform2D</text><ellipse cx="12320.29" cy="8533.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="12329.29" y="8536.4839">area_remove_shape(RID p_area, int p_shape_idx) = 0 : void</text><ellipse cx="12320.29" cy="8546.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="12329.29" y="8549.2886">area_clear_shapes(RID p_area) = 0 : void</text><ellipse cx="12320.29" cy="8558.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="441" x="12329.29" y="8562.0933">area_set_shape_disabled(RID p_area, int p_shape, bool p_disabled) = 0 : void</text><ellipse cx="12320.29" cy="8571.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="12329.29" y="8574.8979">area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void</text><ellipse cx="12320.29" cy="8584.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="12329.29" y="8587.7026">area_get_object_instance_id(RID p_area) const = 0 : ObjectID</text><ellipse cx="12320.29" cy="8597.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="12329.29" y="8600.5073">area_attach_canvas_instance_id(RID p_area, ObjectID p_id) = 0 : void</text><ellipse cx="12320.29" cy="8610.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="352" x="12329.29" y="8613.312">area_get_canvas_instance_id(RID p_area) const = 0 : ObjectID</text><ellipse cx="12320.29" cy="8622.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="618" x="12329.29" y="8626.1167">area_set_param(RID p_area, Physics2DServer::AreaParameter p_param, const Variant &amp; p_value) = 0 : void</text><ellipse cx="12320.29" cy="8635.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="443" x="12329.29" y="8638.9214">area_set_transform(RID p_area, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="12320.29" cy="8648.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="12329.29" y="8651.7261">area_get_param(RID p_parea, Physics2DServer::AreaParameter p_param) const = 0 : Variant</text><ellipse cx="12320.29" cy="8661.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="12329.29" y="8664.5308">area_get_transform(RID p_area) const = 0 : Transform2D</text><ellipse cx="12320.29" cy="8674.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="12329.29" y="8677.3354">area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void</text><ellipse cx="12320.29" cy="8686.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="12329.29" y="8690.1401">area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void</text><ellipse cx="12320.29" cy="8699.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="12329.29" y="8702.9448">area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void</text><ellipse cx="12320.29" cy="8712.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="12329.29" y="8715.7495">area_set_pickable(RID p_area, bool p_pickable) = 0 : void</text><ellipse cx="12320.29" cy="8725.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="12329.29" y="8728.5542">area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="12320.29" cy="8738.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="12329.29" y="8741.3589">area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="12320.29" cy="8750.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="12329.29" y="8754.1636">body_create() = 0 : RID</text><ellipse cx="12320.29" cy="8763.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="12329.29" y="8766.9683">body_set_space(RID p_body, RID p_space) = 0 : void</text><ellipse cx="12320.29" cy="8776.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="12329.29" y="8779.7729">body_get_space(RID p_body) const = 0 : RID</text><ellipse cx="12320.29" cy="8789.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="12329.29" y="8792.5776">body_set_mode(RID p_body, Physics2DServer::BodyMode p_mode) = 0 : void</text><ellipse cx="12320.29" cy="8802.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="12329.29" y="8805.3823">body_get_mode(RID p_body) const = 0 : Physics2DServer::BodyMode</text><ellipse cx="12320.29" cy="8814.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="746" x="12329.29" y="8818.187">body_add_shape(RID p_body, RID p_shape, const Transform2D &amp; p_transform = Transform2D(), bool p_disabled = false) = 0 : void</text><ellipse cx="12320.29" cy="8827.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="12329.29" y="8830.9917">body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="12320.29" cy="8840.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="583" x="12329.29" y="8843.7964">body_set_shape_transform(RID p_body, int p_shape_idx, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="12320.29" cy="8853.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="12329.29" y="8856.6011">body_set_shape_metadata(RID p_body, int p_shape_idx, const Variant &amp; p_metadata) = 0 : void</text><ellipse cx="12320.29" cy="8866.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="285" x="12329.29" y="8869.4058">body_get_shape_count(RID p_body) const = 0 : int</text><ellipse cx="12320.29" cy="8879" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="349" x="12329.29" y="8882.2104">body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID</text><ellipse cx="12320.29" cy="8891.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="466" x="12329.29" y="8895.0151">body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform2D</text><ellipse cx="12320.29" cy="8904.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="12329.29" y="8907.8198">body_get_shape_metadata(RID p_body, int p_shape_idx) const = 0 : Variant</text><ellipse cx="12320.29" cy="8917.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="445" x="12329.29" y="8920.6245">body_set_shape_disabled(RID p_body, int p_shape, bool p_disabled) = 0 : void</text><ellipse cx="12320.29" cy="8930.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="630" x="12329.29" y="8933.4292">body_set_shape_as_one_way_collision(RID p_body, int p_shape, bool p_enabled, float p_margin = 0) = 0 : void</text><ellipse cx="12320.29" cy="8943.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="12329.29" y="8946.2339">body_remove_shape(RID p_body, int p_shape_idx) = 0 : void</text><ellipse cx="12320.29" cy="8955.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="240" x="12329.29" y="8959.0386">body_clear_shapes(RID p_body) = 0 : void</text><ellipse cx="12320.29" cy="8968.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="12329.29" y="8971.8433">body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void</text><ellipse cx="12320.29" cy="8981.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="12329.29" y="8984.6479">body_get_object_instance_id(RID p_body) const = 0 : uint32_t</text><ellipse cx="12320.29" cy="8994.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="12329.29" y="8997.4526">body_attach_canvas_instance_id(RID p_body, uint32_t p_id) = 0 : void</text><ellipse cx="12320.29" cy="9007.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="12329.29" y="9010.2573">body_get_canvas_instance_id(RID p_body) const = 0 : uint32_t</text><ellipse cx="12320.29" cy="9019.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="12329.29" y="9023.062">body_set_continuous_collision_detection_mode(RID p_body, Physics2DServer::CCDMode p_mode) = 0 : void</text><ellipse cx="12320.29" cy="9032.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="12329.29" y="9035.8667">body_get_continuous_collision_detection_mode(RID p_body) const = 0 : Physics2DServer::CCDMode</text><ellipse cx="12320.29" cy="9045.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="368" x="12329.29" y="9048.6714">body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void</text><ellipse cx="12320.29" cy="9058.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="12329.29" y="9061.4761">body_get_collision_layer(RID p_body) const = 0 : uint32_t</text><ellipse cx="12320.29" cy="9071.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="12329.29" y="9074.2808">body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void</text><ellipse cx="12320.29" cy="9083.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="12329.29" y="9087.0854">body_get_collision_mask(RID p_body) const = 0 : uint32_t</text><ellipse cx="12320.29" cy="9096.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="561" x="12329.29" y="9099.8901">body_set_param(RID p_body, Physics2DServer::BodyParameter p_param, float p_value) = 0 : void</text><ellipse cx="12320.29" cy="9109.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="516" x="12329.29" y="9112.6948">body_get_param(RID p_body, Physics2DServer::BodyParameter p_param) const = 0 : float</text><ellipse cx="12320.29" cy="9122.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="584" x="12329.29" y="9125.4995">body_set_state(RID p_body, Physics2DServer::BodyState p_state, const Variant &amp; p_variant) = 0 : void</text><ellipse cx="12320.29" cy="9135.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="483" x="12329.29" y="9138.3042">body_get_state(RID p_body, Physics2DServer::BodyState p_state) const = 0 : Variant</text><ellipse cx="12320.29" cy="9147.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="12329.29" y="9151.1089">body_set_applied_force(RID p_body, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="12320.29" cy="9160.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="12329.29" y="9163.9136">body_get_applied_force(RID p_body) const = 0 : Vector2</text><ellipse cx="12320.29" cy="9173.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="12329.29" y="9176.7183">body_set_applied_torque(RID p_body, float p_torque) = 0 : void</text><ellipse cx="12320.29" cy="9186.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="12329.29" y="9189.5229">body_get_applied_torque(RID p_body) const = 0 : float</text><ellipse cx="12320.29" cy="9199.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="12329.29" y="9202.3276">body_add_central_force(RID p_body, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="12320.29" cy="9211.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="515" x="12329.29" y="9215.1323">body_add_force(RID p_body, const Vector2 &amp; p_offset, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="12320.29" cy="9224.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="12329.29" y="9227.937">body_add_torque(RID p_body, float p_torque) = 0 : void</text><ellipse cx="12320.29" cy="9237.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="452" x="12329.29" y="9240.7417">body_apply_central_impulse(RID p_body, const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="12320.29" cy="9250.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="377" x="12329.29" y="9253.5464">body_apply_torque_impulse(RID p_body, float p_torque) = 0 : void</text><ellipse cx="12320.29" cy="9263.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="12329.29" y="9266.3511">body_apply_impulse(RID p_body, const Vector2 &amp; p_offset, const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="12320.29" cy="9275.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="451" x="12329.29" y="9279.1558">body_set_axis_velocity(RID p_body, const Vector2 &amp; p_axis_velocity) = 0 : void</text><ellipse cx="12320.29" cy="9288.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="12329.29" y="9291.9604">body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="12320.29" cy="9301.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="12329.29" y="9304.7651">body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="12320.29" cy="9314.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="12329.29" y="9317.5698">body_get_collision_exceptions(RID p_body, List&lt;RID&gt; * p_exceptions) = 0 : void</text><ellipse cx="12320.29" cy="9327.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="12329.29" y="9330.3745">body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void</text><ellipse cx="12320.29" cy="9339.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="12329.29" y="9343.1792">body_get_max_contacts_reported(RID p_body) const = 0 : int</text><ellipse cx="12320.29" cy="9352.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="491" x="12329.29" y="9355.9839">body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void</text><ellipse cx="12320.29" cy="9365.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="424" x="12329.29" y="9368.7886">body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float</text><ellipse cx="12320.29" cy="9378.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="12329.29" y="9381.5933">body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void</text><ellipse cx="12320.29" cy="9391.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="12329.29" y="9394.3979">body_is_omitting_force_integration(RID p_body) const = 0 : bool</text><ellipse cx="12320.29" cy="9403.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="846" x="12329.29" y="9407.2026">body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName &amp; p_method, const Variant &amp; p_udata = Variant()) = 0 : void</text><ellipse cx="12320.29" cy="9416.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1138" x="12329.29" y="9420.0073">body_collide_shape(RID p_body, int p_body_shape, RID p_shape, const Transform2D &amp; p_shape_xform, const Vector2 &amp; p_motion, Vector2 * r_results, int p_result_max, int &amp; r_result_count) = 0 : bool</text><ellipse cx="12320.29" cy="9429.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="330" x="12329.29" y="9432.812">body_set_pickable(RID p_body, bool p_pickable) = 0 : void</text><ellipse cx="12320.29" cy="9442.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="12329.29" y="9445.6167">body_get_direct_state(RID p_body) = 0 : Physics2DDirectBodyState *</text><ellipse cx="12320.29" cy="9455.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1344" x="12329.29" y="9458.4214">body_test_motion(RID p_body, const Transform2D &amp; p_from, const Vector2 &amp; p_motion, bool p_infinite_inertia, float p_margin = 0.001, Physics2DServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool</text><ellipse cx="12320.29" cy="9468.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1279" x="12329.29" y="9471.2261">body_test_ray_separation(RID p_body, const Transform2D &amp; p_transform, bool p_infinite_inertia, Vector2 &amp; r_recover_motion, Physics2DServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int</text><ellipse cx="12320.29" cy="9480.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="532" x="12329.29" y="9484.0308">joint_set_param(RID p_joint, Physics2DServer::JointParam p_param, real_t p_value) = 0 : void</text><ellipse cx="12320.29" cy="9493.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="12329.29" y="9496.8354">joint_get_param(RID p_joint, Physics2DServer::JointParam p_param) const = 0 : real_t</text><ellipse cx="12320.29" cy="9506.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="12329.29" y="9509.6401">joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void</text><ellipse cx="12320.29" cy="9519.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="12329.29" y="9522.4448">joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool</text><ellipse cx="12320.29" cy="9532.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="526" x="12329.29" y="9535.2495">pin_joint_create(const Vector2 &amp; p_anchor, RID p_body_a, RID p_body_b = = RID()) = 0 : RID</text><ellipse cx="12320.29" cy="9544.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="857" x="12329.29" y="9548.0542">groove_joint_create(const Vector2 &amp; p_a_groove1, const Vector2 &amp; p_a_groove2, const Vector2 &amp; p_b_anchor, RID p_body_a, RID p_body_b) = 0 : RID</text><ellipse cx="12320.29" cy="9557.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="777" x="12329.29" y="9560.8589">damped_spring_joint_create(const Vector2 &amp; p_anchor_a, const Vector2 &amp; p_anchor_b, RID p_body_a, RID p_body_b = = RID()) = 0 : RID</text><ellipse cx="12320.29" cy="9570.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="572" x="12329.29" y="9573.6636">pin_joint_set_param(RID p_joint, Physics2DServer::PinJointParam p_param, real_t p_value) = 0 : void</text><ellipse cx="12320.29" cy="9583.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="527" x="12329.29" y="9586.4683">pin_joint_get_param(RID p_joint, Physics2DServer::PinJointParam p_param) const = 0 : real_t</text><ellipse cx="12320.29" cy="9596.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="678" x="12329.29" y="9599.2729">damped_string_joint_set_param(RID p_joint, Physics2DServer::DampedStringParam p_param, real_t p_value) = 0 : void</text><ellipse cx="12320.29" cy="9608.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="633" x="12329.29" y="9612.0776">damped_string_joint_get_param(RID p_joint, Physics2DServer::DampedStringParam p_param) const = 0 : real_t</text><ellipse cx="12320.29" cy="9621.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="372" x="12329.29" y="9624.8823">joint_get_type(RID p_joint) const = 0 : Physics2DServer::JointType</text><ellipse cx="12320.29" cy="9634.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="12329.29" y="9637.687">free(RID p_rid) = 0 : void</text><ellipse cx="12320.29" cy="9647.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="12329.29" y="9650.4917">set_active(bool p_active) = 0 : void</text><ellipse cx="12320.29" cy="9660.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="12329.29" y="9663.2964">init() = 0 : void</text><ellipse cx="12320.29" cy="9672.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="12329.29" y="9676.1011">step(float p_step) = 0 : void</text><ellipse cx="12320.29" cy="9685.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="12329.29" y="9688.9058">sync() = 0 : void</text><ellipse cx="12320.29" cy="9698.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="143" x="12329.29" y="9701.7104">flush_queries() = 0 : void</text><ellipse cx="12320.29" cy="9711.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="12329.29" y="9714.5151">end_sync() = 0 : void</text><ellipse cx="12320.29" cy="9724.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="12329.29" y="9727.3198">finish() = 0 : void</text><ellipse cx="12320.29" cy="9736.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="12329.29" y="9740.1245">is_flushing_queries() const = 0 : bool</text><ellipse cx="12320.29" cy="9749.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="359" x="12329.29" y="9752.9292">get_process_info(Physics2DServer::ProcessInfo p_info) = 0 : int</text><ellipse cx="12320.29" cy="9762.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="12329.29" y="9765.7339">Physics2DServer() : void</text><ellipse cx="12320.29" cy="9775.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="12329.29" y="9778.5386">~Physics2DServer() : void</text></a><!--MD5=[a1e2045fa446997825c1a6b4f13c2aa9]
class C_0001872058027933416994--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/scene_tree.h#L69" target="_top" title="SceneTree" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/scene_tree.h#L69" xlink:show="new" xlink:title="SceneTree" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="1251.6406" id="C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.5;" width="1661" x="27450.79" y="8206.9531"/><ellipse cx="28243.54" cy="8222.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28246.5088,8228.5938 Q28245.9306,8228.8906 28245.29,8229.0313 Q28244.6494,8229.1875 28243.9463,8229.1875 Q28241.4463,8229.1875 28240.1181,8227.5469 Q28238.8056,8225.8906 28238.8056,8222.7656 Q28238.8056,8219.6406 28240.1181,8217.9844 Q28241.4463,8216.3281 28243.9463,8216.3281 Q28244.6494,8216.3281 28245.29,8216.4844 Q28245.9463,8216.6406 28246.5088,8216.9375 L28246.5088,8219.6563 Q28245.8838,8219.0781 28245.29,8218.8125 Q28244.6963,8218.5313 28244.0713,8218.5313 Q28242.7275,8218.5313 28242.04,8219.6094 Q28241.3525,8220.6719 28241.3525,8222.7656 Q28241.3525,8224.8594 28242.04,8225.9375 Q28242.7275,8227 28244.0713,8227 Q28244.6963,8227 28245.29,8226.7344 Q28245.8838,8226.4531 28246.5088,8225.875 L28246.5088,8228.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="28264.04" y="8227.1074">SceneTree</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27451.79" x2="29110.79" y1="8238.9531" y2="8238.9531"/><ellipse cx="27461.79" cy="8249.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="27470.79" y="8253.1636">NOTIFICATION_TRANSFORM_CHANGED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27451.79" x2="29110.79" y1="8259.7578" y2="8259.7578"/><ellipse cx="27461.79" cy="8270.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="27470.79" y="8273.9683">get_class() const : String</text><ellipse cx="27461.79" cy="8283.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="27470.79" y="8286.7729">_get_class_namev() const : const StringName *</text><ellipse cx="27461.79" cy="8296.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="27470.79" y="8299.5776">get_class_ptr_static() : void *</text><ellipse cx="27461.79" cy="8309.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="27470.79" y="8312.3823">get_class_static() : String</text><ellipse cx="27461.79" cy="8321.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="27470.79" y="8325.187">get_parent_class_static() : String</text><ellipse cx="27461.79" cy="8334.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="27470.79" y="8337.9917">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="27461.79" cy="8347.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="27470.79" y="8350.7964">get_category_static() : String</text><ellipse cx="27461.79" cy="8360.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="27470.79" y="8363.6011">inherits_static() : String</text><ellipse cx="27461.79" cy="8373.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27470.79" y="8376.4058">is_class(const String &amp; p_class) const : bool</text><ellipse cx="27461.79" cy="8386" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="27470.79" y="8389.2104">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="27461.79" cy="8398.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="27470.79" y="8402.0151">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="27461.79" cy="8411.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="27470.79" y="8414.8198">initialize_class() : void</text><ellipse cx="27461.79" cy="8424.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="27470.79" y="8427.6245">get_root() const : Viewport *</text><ellipse cx="27461.79" cy="8437.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1635" x="27470.79" y="8440.4292">call_group_flags(uint32_t p_call_flags, const StringName &amp; p_group, const StringName &amp; p_function, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27461.79" cy="8450.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="27470.79" y="8453.2339">notify_group_flags(uint32_t p_call_flags, const StringName &amp; p_group, int p_notification) : void</text><ellipse cx="27461.79" cy="8462.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="707" x="27470.79" y="8466.0386">set_group_flags(uint32_t p_call_flags, const StringName &amp; p_group, const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="27461.79" cy="8475.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1478" x="27470.79" y="8478.8433">call_group(const StringName &amp; p_group, const StringName &amp; p_function, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27461.79" cy="8488.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="27470.79" y="8491.6479">notify_group(const StringName &amp; p_group, int p_notification) : void</text><ellipse cx="27461.79" cy="8501.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="550" x="27470.79" y="8504.4526">set_group(const StringName &amp; p_group, const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="27461.79" cy="8514.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27470.79" y="8517.2573">flush_transform_notifications() : void</text><ellipse cx="27461.79" cy="8526.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="27470.79" y="8530.062">input_text(const String &amp; p_text) : void</text><ellipse cx="27461.79" cy="8539.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="27470.79" y="8542.8667">input_event(const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="27461.79" cy="8552.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="27470.79" y="8555.6714">init() : void</text><ellipse cx="27461.79" cy="8565.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27470.79" y="8568.4761">iteration(float p_time) : bool</text><ellipse cx="27461.79" cy="8578.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="27470.79" y="8581.2808">idle(float p_time) : bool</text><ellipse cx="27461.79" cy="8590.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="27470.79" y="8594.0854">finish() : void</text><ellipse cx="27461.79" cy="8603.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="27470.79" y="8606.8901">set_auto_accept_quit(bool p_enable) : void</text><ellipse cx="27461.79" cy="8616.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="27470.79" y="8619.6948">set_quit_on_go_back(bool p_enable) : void</text><ellipse cx="27461.79" cy="8629.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27470.79" y="8632.4995">quit(int p_exit_code = -1) : void</text><ellipse cx="27461.79" cy="8642.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="27470.79" y="8645.3042">set_input_as_handled() : void</text><ellipse cx="27461.79" cy="8654.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="27470.79" y="8658.1089">is_input_handled() : bool</text><ellipse cx="27461.79" cy="8667.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="27470.79" y="8670.9136">get_physics_process_time() const : float</text><ellipse cx="27461.79" cy="8680.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="27470.79" y="8683.7183">get_idle_process_time() const : float</text><ellipse cx="27461.79" cy="8693.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="27470.79" y="8696.5229">is_node_being_edited(const Node * p_node) const : bool</text><ellipse cx="27461.79" cy="8706.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="27470.79" y="8709.3276">set_pause(bool p_enabled) : void</text><ellipse cx="27461.79" cy="8718.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="27470.79" y="8722.1323">is_paused() const : bool</text><ellipse cx="27461.79" cy="8731.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27470.79" y="8734.937">set_camera(const RID &amp; p_camera) : void</text><ellipse cx="27461.79" cy="8744.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="27470.79" y="8747.7417">get_camera() const : RID</text><ellipse cx="27461.79" cy="8757.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="27470.79" y="8760.5464">set_debug_collisions_hint(bool p_enabled) : void</text><ellipse cx="27461.79" cy="8770.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="27470.79" y="8773.3511">is_debugging_collisions_hint() const : bool</text><ellipse cx="27461.79" cy="8782.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="27470.79" y="8786.1558">set_debug_navigation_hint(bool p_enabled) : void</text><ellipse cx="27461.79" cy="8795.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="27470.79" y="8798.9604">is_debugging_navigation_hint() const : bool</text><ellipse cx="27461.79" cy="8808.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="27470.79" y="8811.7651">set_debug_collisions_color(const Color &amp; p_color) : void</text><ellipse cx="27461.79" cy="8821.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27470.79" y="8824.5698">get_debug_collisions_color() const : Color</text><ellipse cx="27461.79" cy="8834.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="27470.79" y="8837.3745">set_debug_collision_contact_color(const Color &amp; p_color) : void</text><ellipse cx="27461.79" cy="8846.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="27470.79" y="8850.1792">get_debug_collision_contact_color() const : Color</text><ellipse cx="27461.79" cy="8859.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="27470.79" y="8862.9839">set_debug_navigation_color(const Color &amp; p_color) : void</text><ellipse cx="27461.79" cy="8872.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="27470.79" y="8875.7886">get_debug_navigation_color() const : Color</text><ellipse cx="27461.79" cy="8885.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="27470.79" y="8888.5933">set_debug_navigation_disabled_color(const Color &amp; p_color) : void</text><ellipse cx="27461.79" cy="8898.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27470.79" y="8901.3979">get_debug_navigation_disabled_color() const : Color</text><ellipse cx="27461.79" cy="8910.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="27470.79" y="8914.2026">get_debug_navigation_material() : Ref&lt;Material&gt;</text><ellipse cx="27461.79" cy="8923.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="27470.79" y="8927.0073">get_debug_navigation_disabled_material() : Ref&lt;Material&gt;</text><ellipse cx="27461.79" cy="8936.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27470.79" y="8939.812">get_debug_collision_material() : Ref&lt;Material&gt;</text><ellipse cx="27461.79" cy="8949.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="27470.79" y="8952.6167">get_debug_contact_mesh() : Ref&lt;ArrayMesh&gt;</text><ellipse cx="27461.79" cy="8962.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="27470.79" y="8965.4214">get_collision_debug_contact_count() : int</text><ellipse cx="27461.79" cy="8975.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="27470.79" y="8978.2261">get_frame() const : int64_t</text><ellipse cx="27461.79" cy="8987.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="27470.79" y="8991.0308">get_event_count() const : int64_t</text><ellipse cx="27461.79" cy="9000.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27470.79" y="9003.8354">get_node_count() const : int</text><ellipse cx="27461.79" cy="9013.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="27470.79" y="9016.6401">queue_delete(Object * p_object) : void</text><ellipse cx="27461.79" cy="9026.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="27470.79" y="9029.4448">get_nodes_in_group(const StringName &amp; p_group, List&lt;Node *&gt; * p_list) : void</text><ellipse cx="27461.79" cy="9039.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="27470.79" y="9042.2495">has_group(const StringName &amp; p_identifier) const : bool</text><ellipse cx="27461.79" cy="9051.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="815" x="27470.79" y="9055.0542">set_screen_stretch(SceneTree::StretchMode p_mode, SceneTree::StretchAspect p_aspect, const Size2 &amp; p_minsize, real_t p_shrink = 1) : void</text><ellipse cx="27461.79" cy="9064.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="27470.79" y="9067.8589">set_use_font_oversampling(bool p_oversampling) : void</text><ellipse cx="27461.79" cy="9077.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27470.79" y="9080.6636">is_using_font_oversampling() const : bool</text><ellipse cx="27461.79" cy="9090.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27470.79" y="9093.4683">set_edited_scene_root(Node * p_node) : void</text><ellipse cx="27461.79" cy="9103.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="27470.79" y="9106.2729">get_edited_scene_root() const : Node *</text><ellipse cx="27461.79" cy="9115.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="27470.79" y="9119.0776">set_current_scene(Node * p_scene) : void</text><ellipse cx="27461.79" cy="9128.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="27470.79" y="9131.8823">get_current_scene() const : Node *</text><ellipse cx="27461.79" cy="9141.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27470.79" y="9144.687">change_scene(const String &amp; p_path) : Error</text><ellipse cx="27461.79" cy="9154.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="27470.79" y="9157.4917">change_scene_to(const Ref&lt;PackedScene&gt; &amp; p_scene) : Error</text><ellipse cx="27461.79" cy="9167.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="27470.79" y="9170.2964">reload_current_scene() : Error</text><ellipse cx="27461.79" cy="9179.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="27470.79" y="9183.1011">create_timer(float p_delay_sec, bool p_process_pause = true) : Ref&lt;SceneTreeTimer&gt;</text><ellipse cx="27461.79" cy="9192.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="27470.79" y="9195.9058">add_current_scene(Node * p_current) : void</text><ellipse cx="27461.79" cy="9205.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="27470.79" y="9208.7104">get_singleton() : SceneTree *</text><ellipse cx="27461.79" cy="9218.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="27470.79" y="9221.5151">drop_files(const Vector&lt;String&gt; &amp; p_files, int p_from_screen = 0) : void</text><ellipse cx="27461.79" cy="9231.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="27470.79" y="9234.3198">global_menu_action(const Variant &amp; p_id, const Variant &amp; p_meta) : void</text><ellipse cx="27461.79" cy="9243.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="27470.79" y="9247.1245">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="27461.79" cy="9256.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="27470.79" y="9259.9292">get_multiplayer() const : Ref&lt;MultiplayerAPI&gt;</text><ellipse cx="27461.79" cy="9269.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="27470.79" y="9272.7339">set_multiplayer_poll_enabled(bool p_enabled) : void</text><ellipse cx="27461.79" cy="9282.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="27470.79" y="9285.5386">is_multiplayer_poll_enabled() const : bool</text><ellipse cx="27461.79" cy="9295.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="27470.79" y="9298.3433">set_multiplayer(Ref&lt;MultiplayerAPI&gt; p_multiplayer) : void</text><ellipse cx="27461.79" cy="9307.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="470" x="27470.79" y="9311.1479">set_network_peer(const Ref&lt;NetworkedMultiplayerPeer&gt; &amp; p_network_peer) : void</text><ellipse cx="27461.79" cy="9320.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="27470.79" y="9323.9526">get_network_peer() const : Ref&lt;NetworkedMultiplayerPeer&gt;</text><ellipse cx="27461.79" cy="9333.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="27470.79" y="9336.7573">is_network_server() const : bool</text><ellipse cx="27461.79" cy="9346.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="27470.79" y="9349.562">has_network_peer() const : bool</text><ellipse cx="27461.79" cy="9359.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="27470.79" y="9362.3667">get_network_unique_id() const : int</text><ellipse cx="27461.79" cy="9371.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="27470.79" y="9375.1714">get_network_connected_peers() const : Vector&lt;int&gt;</text><ellipse cx="27461.79" cy="9384.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="27470.79" y="9387.9761">get_rpc_sender_id() const : int</text><ellipse cx="27461.79" cy="9397.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="27470.79" y="9400.7808">set_refuse_new_network_connections(bool p_refuse) : void</text><ellipse cx="27461.79" cy="9410.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27470.79" y="9413.5854">is_refusing_new_network_connections() const : bool</text><ellipse cx="27461.79" cy="9423.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="339" x="27470.79" y="9426.3901">add_idle_callback(SceneTree::IdleCallback p_callback) : void</text><ellipse cx="27461.79" cy="9435.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="27470.79" y="9439.1948">SceneTree() : void</text><ellipse cx="27461.79" cy="9448.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="27470.79" y="9451.9995">~SceneTree() : void</text></a><!--MD5=[6f2b8bf6de67278d3387148d256017be]
class C_0000096380574950611570--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37" target="_top" title="UndoRedo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37" xlink:show="new" xlink:title="UndoRedo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="508.9688" id="C_0000096380574950611570" style="stroke: #A80036; stroke-width: 1.5;" width="1446" x="13852.29" y="8578.4531"/><ellipse cx="14538.54" cy="8594.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14541.5088,8600.0938 Q14540.9306,8600.3906 14540.29,8600.5313 Q14539.6494,8600.6875 14538.9463,8600.6875 Q14536.4463,8600.6875 14535.1181,8599.0469 Q14533.8056,8597.3906 14533.8056,8594.2656 Q14533.8056,8591.1406 14535.1181,8589.4844 Q14536.4463,8587.8281 14538.9463,8587.8281 Q14539.6494,8587.8281 14540.29,8587.9844 Q14540.9463,8588.1406 14541.5088,8588.4375 L14541.5088,8591.1563 Q14540.8838,8590.5781 14540.29,8590.3125 Q14539.6963,8590.0313 14539.0713,8590.0313 Q14537.7275,8590.0313 14537.04,8591.1094 Q14536.3525,8592.1719 14536.3525,8594.2656 Q14536.3525,8596.3594 14537.04,8597.4375 Q14537.7275,8598.5 14539.0713,8598.5 Q14539.6963,8598.5 14540.29,8598.2344 Q14540.8838,8597.9531 14541.5088,8597.375 L14541.5088,8600.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="14559.04" y="8598.6074">UndoRedo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13853.29" x2="15297.29" y1="8610.4531" y2="8610.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="13853.29" x2="15297.29" y1="8618.4531" y2="8618.4531"/><ellipse cx="13863.29" cy="8629.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="13872.29" y="8632.6636">get_class() const : String</text><ellipse cx="13863.29" cy="8642.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="13872.29" y="8645.4683">_get_class_namev() const : const StringName *</text><ellipse cx="13863.29" cy="8655.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="13872.29" y="8658.2729">get_class_ptr_static() : void *</text><ellipse cx="13863.29" cy="8667.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="13872.29" y="8671.0776">get_class_static() : String</text><ellipse cx="13863.29" cy="8680.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="13872.29" y="8683.8823">get_parent_class_static() : String</text><ellipse cx="13863.29" cy="8693.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="13872.29" y="8696.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="13863.29" cy="8706.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="13872.29" y="8709.4917">get_category_static() : String</text><ellipse cx="13863.29" cy="8719.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="13872.29" y="8722.2964">inherits_static() : String</text><ellipse cx="13863.29" cy="8731.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="13872.29" y="8735.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="13863.29" cy="8744.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="13872.29" y="8747.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="13863.29" cy="8757.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="13872.29" y="8760.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="13863.29" cy="8770.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="13872.29" y="8773.5151">initialize_class() : void</text><ellipse cx="13863.29" cy="8783.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="13872.29" y="8786.3198">get_save_class() const : String</text><ellipse cx="13863.29" cy="8795.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="13872.29" y="8799.1245">_add_do_method(const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="13863.29" cy="8808.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="13872.29" y="8811.9292">_add_undo_method(const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="13863.29" cy="8821.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="13872.29" y="8824.7339">create_action(const String &amp; p_name = "", UndoRedo::MergeMode p_mode = MERGE_DISABLE) : void</text><ellipse cx="13863.29" cy="8834.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1406" x="13872.29" y="8837.5386">add_do_method(Object * p_object, const String &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="13863.29" cy="8847.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1420" x="13872.29" y="8850.3433">add_undo_method(Object * p_object, const String &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="13863.29" cy="8859.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="13872.29" y="8863.1479">add_do_property(Object * p_object, const String &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="13863.29" cy="8872.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="549" x="13872.29" y="8875.9526">add_undo_property(Object * p_object, const String &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="13863.29" cy="8885.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="13872.29" y="8888.7573">add_do_reference(Object * p_object) : void</text><ellipse cx="13863.29" cy="8898.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="13872.29" y="8901.562">add_undo_reference(Object * p_object) : void</text><ellipse cx="13863.29" cy="8911.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="13872.29" y="8914.3667">is_committing_action() const : bool</text><ellipse cx="13863.29" cy="8923.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="13872.29" y="8927.1714">commit_action() : void</text><ellipse cx="13863.29" cy="8936.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="13872.29" y="8939.9761">redo() : bool</text><ellipse cx="13863.29" cy="8949.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="13872.29" y="8952.7808">undo() : bool</text><ellipse cx="13863.29" cy="8962.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="13872.29" y="8965.5854">get_current_action_name() const : String</text><ellipse cx="13863.29" cy="8975.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="13872.29" y="8978.3901">clear_history(bool p_increase_version = true) : void</text><ellipse cx="13863.29" cy="8987.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="13872.29" y="8991.1948">has_undo() : bool</text><ellipse cx="13863.29" cy="9000.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="13872.29" y="9003.9995">has_redo() : bool</text><ellipse cx="13863.29" cy="9013.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="13872.29" y="9016.8042">get_version() const : uint64_t</text><ellipse cx="13863.29" cy="9026.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="519" x="13872.29" y="9029.6089">set_commit_notify_callback(UndoRedo::CommitNotifyCallback p_callback, void * p_ud) : void</text><ellipse cx="13863.29" cy="9039.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="566" x="13872.29" y="9042.4136">set_method_notify_callback(UndoRedo::MethodNotifyCallback p_method_callback, void * p_ud) : void</text><ellipse cx="13863.29" cy="9052.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="13872.29" y="9055.2183">set_property_notify_callback(UndoRedo::PropertyNotifyCallback p_property_callback, void * p_ud) : void</text><ellipse cx="13863.29" cy="9064.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="13872.29" y="9068.0229">UndoRedo() : void</text><ellipse cx="13863.29" cy="9077.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="13872.29" y="9080.8276">~UndoRedo() : void</text></a><!--MD5=[9c19f6e708a84c4c6bc6fbb4e29513cd]
class C_0001699661383862634192--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/func_ref.h#L36" target="_top" title="FuncRef" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/func_ref.h#L36" xlink:show="new" xlink:title="FuncRef" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="291.2891" id="C_0001699661383862634192" style="stroke: #A80036; stroke-width: 1.5;" width="522" x="16099.29" y="8687.4531"/><ellipse cx="16331.04" cy="8703.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M16334.0088,8709.0938 Q16333.4306,8709.3906 16332.79,8709.5313 Q16332.1494,8709.6875 16331.4463,8709.6875 Q16328.9463,8709.6875 16327.6181,8708.0469 Q16326.3056,8706.3906 16326.3056,8703.2656 Q16326.3056,8700.1406 16327.6181,8698.4844 Q16328.9463,8696.8281 16331.4463,8696.8281 Q16332.1494,8696.8281 16332.79,8696.9844 Q16333.4463,8697.1406 16334.0088,8697.4375 L16334.0088,8700.1563 Q16333.3838,8699.5781 16332.79,8699.3125 Q16332.1963,8699.0313 16331.5713,8699.0313 Q16330.2275,8699.0313 16329.54,8700.1094 Q16328.8525,8701.1719 16328.8525,8703.2656 Q16328.8525,8705.3594 16329.54,8706.4375 Q16330.2275,8707.5 16331.5713,8707.5 Q16332.1963,8707.5 16332.79,8707.2344 Q16333.3838,8706.9531 16334.0088,8706.375 L16334.0088,8709.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="16351.54" y="8707.6074">FuncRef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16100.29" x2="16620.29" y1="8719.4531" y2="8719.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="16100.29" x2="16620.29" y1="8727.4531" y2="8727.4531"/><ellipse cx="16110.29" cy="8738.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="16119.29" y="8741.6636">get_class() const : String</text><ellipse cx="16110.29" cy="8751.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="16119.29" y="8754.4683">_get_class_namev() const : const StringName *</text><ellipse cx="16110.29" cy="8764.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="16119.29" y="8767.2729">get_class_ptr_static() : void *</text><ellipse cx="16110.29" cy="8776.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="16119.29" y="8780.0776">get_class_static() : String</text><ellipse cx="16110.29" cy="8789.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="16119.29" y="8792.8823">get_parent_class_static() : String</text><ellipse cx="16110.29" cy="8802.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="16119.29" y="8805.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="16110.29" cy="8815.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="16119.29" y="8818.4917">get_category_static() : String</text><ellipse cx="16110.29" cy="8828.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="16119.29" y="8831.2964">inherits_static() : String</text><ellipse cx="16110.29" cy="8840.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="16119.29" y="8844.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="16110.29" cy="8853.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="16119.29" y="8856.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="16110.29" cy="8866.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="16119.29" y="8869.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="16110.29" cy="8879.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="16119.29" y="8882.5151">initialize_class() : void</text><ellipse cx="16110.29" cy="8892.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="16119.29" y="8895.3198">call_func(const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="16110.29" cy="8904.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="16119.29" y="8908.1245">call_funcv(const Array &amp; p_args) : Variant</text><ellipse cx="16110.29" cy="8917.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="16119.29" y="8920.9292">set_instance(Object * p_obj) : void</text><ellipse cx="16110.29" cy="8930.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="16119.29" y="8933.7339">set_function(const StringName &amp; p_func) : void</text><ellipse cx="16110.29" cy="8943.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="16119.29" y="8946.5386">get_function() : StringName</text><ellipse cx="16110.29" cy="8956.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="16119.29" y="8959.3433">is_valid() const : bool</text><ellipse cx="16110.29" cy="8968.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="16119.29" y="8972.1479">FuncRef() : void</text></a><!--MD5=[9ad247f9a1f402d5bcd303a8e9ade6db]
class C_0000762417759113755306--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298" target="_top" title="_ArrayVariantSortCustom" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298" xlink:show="new" xlink:title="_ArrayVariantSortCustom" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="86.4141" id="C_0000762417759113755306" style="stroke: #A80036; stroke-width: 1.5;" width="390" x="32161.29" y="707.9531"/><ellipse cx="32274.04" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32277.0088,729.5938 Q32276.4306,729.8906 32275.79,730.0313 Q32275.1494,730.1875 32274.4463,730.1875 Q32271.9463,730.1875 32270.6181,728.5469 Q32269.3056,726.8906 32269.3056,723.7656 Q32269.3056,720.6406 32270.6181,718.9844 Q32271.9463,717.3281 32274.4463,717.3281 Q32275.1494,717.3281 32275.79,717.4844 Q32276.4463,717.6406 32277.0088,717.9375 L32277.0088,720.6563 Q32276.3838,720.0781 32275.79,719.8125 Q32275.1963,719.5313 32274.5713,719.5313 Q32273.2275,719.5313 32272.54,720.6094 Q32271.8525,721.6719 32271.8525,723.7656 Q32271.8525,725.8594 32272.54,726.9375 Q32273.2275,728 32274.5713,728 Q32275.1963,728 32275.79,727.7344 Q32276.3838,727.4531 32277.0088,726.875 L32277.0088,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="32294.54" y="728.1074">_ArrayVariantSortCustom</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32162.29" x2="32550.29" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" xlink:show="new" xlink:title="obj" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32167.29" y="745.9531"/><ellipse cx="32172.29" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" xlink:show="new" xlink:title="obj" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="32181.29" y="754.1636">obj : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" target="_top" title="func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" xlink:show="new" xlink:title="func" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32167.29" y="758.7578"/><ellipse cx="32172.29" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" target="_top" title="func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" xlink:show="new" xlink:title="func" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="32181.29" y="766.9683">func : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32162.29" x2="32550.29" y1="773.5625" y2="773.5625"/><ellipse cx="32172.29" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="32181.29" y="787.7729">operator()(const Variant &amp; p_l, const Variant &amp; p_r) const : bool</text><!--MD5=[e6941b9b1ee3163b45cd73ecd30a9f2c]
class C_0001370497546359815893--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148" target="_top" title="AudioServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148" xlink:show="new" xlink:title="AudioServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="1085.1797" id="C_0001370497546359815893" style="stroke: #A80036; stroke-width: 1.5;" width="560" x="15404.29" y="8290.4531"/><ellipse cx="15642.54" cy="8306.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M15645.5088,8312.0938 Q15644.9306,8312.3906 15644.29,8312.5313 Q15643.6494,8312.6875 15642.9463,8312.6875 Q15640.4463,8312.6875 15639.1181,8311.0469 Q15637.8056,8309.3906 15637.8056,8306.2656 Q15637.8056,8303.1406 15639.1181,8301.4844 Q15640.4463,8299.8281 15642.9463,8299.8281 Q15643.6494,8299.8281 15644.29,8299.9844 Q15644.9463,8300.1406 15645.5088,8300.4375 L15645.5088,8303.1563 Q15644.8838,8302.5781 15644.29,8302.3125 Q15643.6963,8302.0313 15643.0713,8302.0313 Q15641.7275,8302.0313 15641.04,8303.1094 Q15640.3525,8304.1719 15640.3525,8306.2656 Q15640.3525,8308.3594 15641.04,8309.4375 Q15641.7275,8310.5 15643.0713,8310.5 Q15643.6963,8310.5 15644.29,8310.2344 Q15644.8838,8309.9531 15645.5088,8309.375 L15645.5088,8312.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="15663.04" y="8310.6074">AudioServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15405.29" x2="15963.29" y1="8322.4531" y2="8322.4531"/><ellipse cx="15415.29" cy="8333.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="15424.29" y="8336.6636">AUDIO_DATA_INVALID_ID : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15405.29" x2="15963.29" y1="8343.2578" y2="8343.2578"/><ellipse cx="15415.29" cy="8354.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="15424.29" y="8357.4683">get_class() const : String</text><ellipse cx="15415.29" cy="8367.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="15424.29" y="8370.2729">_get_class_namev() const : const StringName *</text><ellipse cx="15415.29" cy="8379.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="15424.29" y="8383.0776">get_class_ptr_static() : void *</text><ellipse cx="15415.29" cy="8392.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="15424.29" y="8395.8823">get_class_static() : String</text><ellipse cx="15415.29" cy="8405.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="15424.29" y="8408.687">get_parent_class_static() : String</text><ellipse cx="15415.29" cy="8418.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="15424.29" y="8421.4917">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="15415.29" cy="8431.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="15424.29" y="8434.2964">get_category_static() : String</text><ellipse cx="15415.29" cy="8443.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="15424.29" y="8447.1011">inherits_static() : String</text><ellipse cx="15415.29" cy="8456.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="15424.29" y="8459.9058">is_class(const String &amp; p_class) const : bool</text><ellipse cx="15415.29" cy="8469.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="15424.29" y="8472.7104">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="15415.29" cy="8482.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="15424.29" y="8485.5151">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="15415.29" cy="8495.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="15424.29" y="8498.3198">initialize_class() : void</text><ellipse cx="15415.29" cy="8507.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="15424.29" y="8511.1245">get_channel_count() const : int</text><ellipse cx="15415.29" cy="8520.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="15424.29" y="8523.9292">thread_has_channel_mix_buffer(int p_bus, int p_buffer) const : bool</text><ellipse cx="15415.29" cy="8533.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="15424.29" y="8536.7339">thread_get_channel_mix_buffer(int p_bus, int p_buffer) : AudioFrame *</text><ellipse cx="15415.29" cy="8546.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="15424.29" y="8549.5386">thread_get_mix_buffer_size() const : int</text><ellipse cx="15415.29" cy="8559.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="15424.29" y="8562.3433">thread_find_bus_index(const StringName &amp; p_name) : int</text><ellipse cx="15415.29" cy="8571.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="15424.29" y="8575.1479">set_bus_count(int p_count) : void</text><ellipse cx="15415.29" cy="8584.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="15424.29" y="8587.9526">get_bus_count() const : int</text><ellipse cx="15415.29" cy="8597.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="15424.29" y="8600.7573">remove_bus(int p_index) : void</text><ellipse cx="15415.29" cy="8610.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="15424.29" y="8613.562">add_bus(int p_at_pos = -1) : void</text><ellipse cx="15415.29" cy="8623.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="15424.29" y="8626.3667">move_bus(int p_bus, int p_to_pos) : void</text><ellipse cx="15415.29" cy="8635.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="15424.29" y="8639.1714">set_bus_name(int p_bus, const String &amp; p_name) : void</text><ellipse cx="15415.29" cy="8648.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="15424.29" y="8651.9761">get_bus_name(int p_bus) const : String</text><ellipse cx="15415.29" cy="8661.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="15424.29" y="8664.7808">get_bus_index(const StringName &amp; p_bus_name) const : int</text><ellipse cx="15415.29" cy="8674.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="15424.29" y="8677.5854">get_bus_channels(int p_bus) const : int</text><ellipse cx="15415.29" cy="8687.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="15424.29" y="8690.3901">set_bus_volume_db(int p_bus, float p_volume_db) : void</text><ellipse cx="15415.29" cy="8699.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="15424.29" y="8703.1948">get_bus_volume_db(int p_bus) const : float</text><ellipse cx="15415.29" cy="8712.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="15424.29" y="8715.9995">set_bus_send(int p_bus, const StringName &amp; p_send) : void</text><ellipse cx="15415.29" cy="8725.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="15424.29" y="8728.8042">get_bus_send(int p_bus) const : StringName</text><ellipse cx="15415.29" cy="8738.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="15424.29" y="8741.6089">set_bus_solo(int p_bus, bool p_enable) : void</text><ellipse cx="15415.29" cy="8751.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="15424.29" y="8754.4136">is_bus_solo(int p_bus) const : bool</text><ellipse cx="15415.29" cy="8764.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="15424.29" y="8767.2183">set_bus_mute(int p_bus, bool p_enable) : void</text><ellipse cx="15415.29" cy="8776.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="15424.29" y="8780.0229">is_bus_mute(int p_bus) const : bool</text><ellipse cx="15415.29" cy="8789.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="15424.29" y="8792.8276">set_bus_bypass_effects(int p_bus, bool p_enable) : void</text><ellipse cx="15415.29" cy="8802.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="15424.29" y="8805.6323">is_bus_bypassing_effects(int p_bus) const : bool</text><ellipse cx="15415.29" cy="8815.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="15424.29" y="8818.437">add_bus_effect(int p_bus, const Ref&lt;AudioEffect&gt; &amp; p_effect, int p_at_pos = -1) : void</text><ellipse cx="15415.29" cy="8828.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="15424.29" y="8831.2417">remove_bus_effect(int p_bus, int p_effect) : void</text><ellipse cx="15415.29" cy="8840.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="15424.29" y="8844.0464">get_bus_effect_count(int p_bus) : int</text><ellipse cx="15415.29" cy="8853.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="15424.29" y="8856.8511">get_bus_effect(int p_bus, int p_effect) : Ref&lt;AudioEffect&gt;</text><ellipse cx="15415.29" cy="8866.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="534" x="15424.29" y="8869.6558">get_bus_effect_instance(int p_bus, int p_effect, int p_channel = 0) : Ref&lt;AudioEffectInstance&gt;</text><ellipse cx="15415.29" cy="8879.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="15424.29" y="8882.4604">swap_bus_effects(int p_bus, int p_effect, int p_by_effect) : void</text><ellipse cx="15415.29" cy="8892.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="15424.29" y="8895.2651">set_bus_effect_enabled(int p_bus, int p_effect, bool p_enabled) : void</text><ellipse cx="15415.29" cy="8904.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="15424.29" y="8908.0698">is_bus_effect_enabled(int p_bus, int p_effect) const : bool</text><ellipse cx="15415.29" cy="8917.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="15424.29" y="8920.8745">get_bus_peak_volume_left_db(int p_bus, int p_channel) const : float</text><ellipse cx="15415.29" cy="8930.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="15424.29" y="8933.6792">get_bus_peak_volume_right_db(int p_bus, int p_channel) const : float</text><ellipse cx="15415.29" cy="8943.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="15424.29" y="8946.4839">is_bus_channel_active(int p_bus, int p_channel) const : bool</text><ellipse cx="15415.29" cy="8956.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="15424.29" y="8959.2886">set_global_rate_scale(float p_scale) : void</text><ellipse cx="15415.29" cy="8968.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="15424.29" y="8972.0933">get_global_rate_scale() const : float</text><ellipse cx="15415.29" cy="8981.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="15424.29" y="8984.8979">init() : void</text><ellipse cx="15415.29" cy="8994.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="15424.29" y="8997.7026">finish() : void</text><ellipse cx="15415.29" cy="9007.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="15424.29" y="9010.5073">update() : void</text><ellipse cx="15415.29" cy="9020.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="15424.29" y="9023.312">load_default_bus_layout() : void</text><ellipse cx="15415.29" cy="9032.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="15424.29" y="9036.1167">lock() : void</text><ellipse cx="15415.29" cy="9045.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="15424.29" y="9048.9214">unlock() : void</text><ellipse cx="15415.29" cy="9058.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="15424.29" y="9061.7261">get_speaker_mode() const : AudioServer::SpeakerMode</text><ellipse cx="15415.29" cy="9071.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="15424.29" y="9074.5308">get_mix_rate() const : float</text><ellipse cx="15415.29" cy="9084.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="15424.29" y="9087.3354">read_output_peak_db() const : float</text><ellipse cx="15415.29" cy="9096.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="15424.29" y="9100.1401">get_singleton() : AudioServer *</text><ellipse cx="15415.29" cy="9109.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="15424.29" y="9112.9448">get_output_latency() const : double</text><ellipse cx="15415.29" cy="9122.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="15424.29" y="9125.7495">get_time_to_next_mix() const : double</text><ellipse cx="15415.29" cy="9135.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="15424.29" y="9138.5542">get_time_since_last_mix() const : double</text><ellipse cx="15415.29" cy="9148.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="15424.29" y="9151.3589">audio_data_alloc(uint32_t p_data_len, const uint8_t * p_from_data = __null) : void *</text><ellipse cx="15415.29" cy="9160.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="15424.29" y="9164.1636">audio_data_free(void * p_data) : void</text><ellipse cx="15415.29" cy="9173.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="15424.29" y="9176.9683">audio_data_get_total_memory_usage() const : size_t</text><ellipse cx="15415.29" cy="9186.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="15424.29" y="9189.7729">audio_data_get_max_memory_usage() const : size_t</text><ellipse cx="15415.29" cy="9199.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="15424.29" y="9202.5776">add_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="15415.29" cy="9212.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="15424.29" y="9215.3823">remove_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="15415.29" cy="9224.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="15424.29" y="9228.187">add_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="15415.29" cy="9237.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="15424.29" y="9240.9917">remove_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="15415.29" cy="9250.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="15424.29" y="9253.7964">set_bus_layout(const Ref&lt;AudioBusLayout&gt; &amp; p_bus_layout) : void</text><ellipse cx="15415.29" cy="9263.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="15424.29" y="9266.6011">generate_bus_layout() const : Ref&lt;AudioBusLayout&gt;</text><ellipse cx="15415.29" cy="9276.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="15424.29" y="9279.4058">get_device_list() : Array</text><ellipse cx="15415.29" cy="9289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="15424.29" y="9292.2104">get_device() : String</text><ellipse cx="15415.29" cy="9301.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="15424.29" y="9305.0151">set_device(String device) : void</text><ellipse cx="15415.29" cy="9314.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="15424.29" y="9317.8198">capture_get_device_list() : Array</text><ellipse cx="15415.29" cy="9327.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="15424.29" y="9330.6245">capture_get_device() : String</text><ellipse cx="15415.29" cy="9340.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="15424.29" y="9343.4292">capture_set_device(const String &amp; p_name) : void</text><ellipse cx="15415.29" cy="9353.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="15424.29" y="9356.2339">AudioServer() : void</text><ellipse cx="15415.29" cy="9365.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="15424.29" y="9369.0386">~AudioServer() : void</text></a><!--MD5=[6b4bbf9b757992b19b982406f8807936]
class C_0000425668537377496256--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/math/expression.h#L36" target="_top" title="Expression" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/math/expression.h#L36" xlink:show="new" xlink:title="Expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="329.7031" id="C_0000425668537377496256" style="stroke: #A80036; stroke-width: 1.5;" width="843" x="30043.79" y="8667.9531"/><ellipse cx="30427.04" cy="8683.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30430.0088,8689.5938 Q30429.4306,8689.8906 30428.79,8690.0313 Q30428.1494,8690.1875 30427.4463,8690.1875 Q30424.9463,8690.1875 30423.6181,8688.5469 Q30422.3056,8686.8906 30422.3056,8683.7656 Q30422.3056,8680.6406 30423.6181,8678.9844 Q30424.9463,8677.3281 30427.4463,8677.3281 Q30428.1494,8677.3281 30428.79,8677.4844 Q30429.4463,8677.6406 30430.0088,8677.9375 L30430.0088,8680.6563 Q30429.3838,8680.0781 30428.79,8679.8125 Q30428.1963,8679.5313 30427.5713,8679.5313 Q30426.2275,8679.5313 30425.54,8680.6094 Q30424.8525,8681.6719 30424.8525,8683.7656 Q30424.8525,8685.8594 30425.54,8686.9375 Q30426.2275,8688 30427.5713,8688 Q30428.1963,8688 30428.79,8687.7344 Q30429.3838,8687.4531 30430.0088,8686.875 L30430.0088,8689.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="30447.54" y="8688.1074">Expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30044.79" x2="30885.79" y1="8699.9531" y2="8699.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30044.79" x2="30885.79" y1="8707.9531" y2="8707.9531"/><ellipse cx="30054.79" cy="8718.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="30063.79" y="8722.1636">get_class() const : String</text><ellipse cx="30054.79" cy="8731.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="30063.79" y="8734.9683">_get_class_namev() const : const StringName *</text><ellipse cx="30054.79" cy="8744.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="30063.79" y="8747.7729">get_class_ptr_static() : void *</text><ellipse cx="30054.79" cy="8757.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="30063.79" y="8760.5776">get_class_static() : String</text><ellipse cx="30054.79" cy="8770.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="30063.79" y="8773.3823">get_parent_class_static() : String</text><ellipse cx="30054.79" cy="8782.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="30063.79" y="8786.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="30054.79" cy="8795.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="30063.79" y="8798.9917">get_category_static() : String</text><ellipse cx="30054.79" cy="8808.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="30063.79" y="8811.7964">inherits_static() : String</text><ellipse cx="30054.79" cy="8821.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="30063.79" y="8824.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="30054.79" cy="8834.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="30063.79" y="8837.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="30054.79" cy="8847" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="30063.79" y="8850.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="30054.79" cy="8859.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="30063.79" y="8863.0151">initialize_class() : void</text><ellipse cx="30054.79" cy="8872.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="353" x="30063.79" y="8875.8198">get_func_argument_count(Expression::BuiltinFunc p_func) : int</text><ellipse cx="30054.79" cy="8885.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="30063.79" y="8888.6245">get_func_name(Expression::BuiltinFunc p_func) : String</text><ellipse cx="30054.79" cy="8898.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="817" x="30063.79" y="8901.4292">exec_func(Expression::BuiltinFunc p_func, const Variant ** p_inputs, Variant * r_return, Variant::CallError &amp; r_error, String &amp; r_error_str) : void</text><ellipse cx="30054.79" cy="8911.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="357" x="30063.79" y="8914.2339">find_function(const String &amp; p_string) : Expression::BuiltinFunc</text><ellipse cx="30054.79" cy="8923.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="593" x="30063.79" y="8927.0386">parse(const String &amp; p_expression, const Vector&lt;String&gt; &amp; p_input_names = Vector&lt;String&gt;()) : Error</text><ellipse cx="30054.79" cy="8936.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="30063.79" y="8939.8433">execute(Array p_inputs, Object * p_base = __null, bool p_show_error = true) : Variant</text><ellipse cx="30054.79" cy="8949.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="30063.79" y="8952.6479">has_execute_failed() const : bool</text><ellipse cx="30054.79" cy="8962.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="30063.79" y="8965.4526">get_error_text() const : String</text><ellipse cx="30054.79" cy="8975.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="30063.79" y="8978.2573">Expression() : void</text><ellipse cx="30054.79" cy="8987.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="30063.79" y="8991.062">~Expression() : void</text></a><!--MD5=[c256f191a1f4c63b2807fd5478edf736]
class C_0001197720528033242618--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45" target="_top" title="_ResourceLoader" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45" xlink:show="new" xlink:title="_ResourceLoader" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="329.7031" id="C_0001197720528033242618" style="stroke: #A80036; stroke-width: 1.5;" width="633" x="7793.79" y="8667.9531"/><ellipse cx="8052.04" cy="8683.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8055.0088,8689.5938 Q8054.4306,8689.8906 8053.79,8690.0313 Q8053.1494,8690.1875 8052.4463,8690.1875 Q8049.9463,8690.1875 8048.6181,8688.5469 Q8047.3056,8686.8906 8047.3056,8683.7656 Q8047.3056,8680.6406 8048.6181,8678.9844 Q8049.9463,8677.3281 8052.4463,8677.3281 Q8053.1494,8677.3281 8053.79,8677.4844 Q8054.4463,8677.6406 8055.0088,8677.9375 L8055.0088,8680.6563 Q8054.3838,8680.0781 8053.79,8679.8125 Q8053.1963,8679.5313 8052.5713,8679.5313 Q8051.2275,8679.5313 8050.54,8680.6094 Q8049.8525,8681.6719 8049.8525,8683.7656 Q8049.8525,8685.8594 8050.54,8686.9375 Q8051.2275,8688 8052.5713,8688 Q8053.1963,8688 8053.79,8687.7344 Q8054.3838,8687.4531 8055.0088,8686.875 L8055.0088,8689.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="8072.54" y="8688.1074">_ResourceLoader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7794.79" x2="8425.79" y1="8699.9531" y2="8699.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7794.79" x2="8425.79" y1="8707.9531" y2="8707.9531"/><ellipse cx="7804.79" cy="8718.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7813.79" y="8722.1636">get_class() const : String</text><ellipse cx="7804.79" cy="8731.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="7813.79" y="8734.9683">_get_class_namev() const : const StringName *</text><ellipse cx="7804.79" cy="8744.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="7813.79" y="8747.7729">get_class_ptr_static() : void *</text><ellipse cx="7804.79" cy="8757.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="7813.79" y="8760.5776">get_class_static() : String</text><ellipse cx="7804.79" cy="8770.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="7813.79" y="8773.3823">get_parent_class_static() : String</text><ellipse cx="7804.79" cy="8782.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="7813.79" y="8786.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="7804.79" cy="8795.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="7813.79" y="8798.9917">get_category_static() : String</text><ellipse cx="7804.79" cy="8808.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="7813.79" y="8811.7964">inherits_static() : String</text><ellipse cx="7804.79" cy="8821.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7813.79" y="8824.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="7804.79" cy="8834.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7813.79" y="8837.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="7804.79" cy="8847" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="7813.79" y="8850.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="7804.79" cy="8859.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="7813.79" y="8863.0151">initialize_class() : void</text><ellipse cx="7804.79" cy="8872.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="7813.79" y="8875.8198">get_singleton() : _ResourceLoader *</text><ellipse cx="7804.79" cy="8885.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="607" x="7813.79" y="8888.6245">load_interactive(const String &amp; p_path, const String &amp; p_type_hint = "") : Ref&lt;ResourceInteractiveLoader&gt;</text><ellipse cx="7804.79" cy="8898.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="7813.79" y="8901.4292">load(const String &amp; p_path, const String &amp; p_type_hint = "", bool p_no_cache = false) : RES</text><ellipse cx="7804.79" cy="8911.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="7813.79" y="8914.2339">get_recognized_extensions_for_type(const String &amp; p_type) : PoolVector&lt;String&gt;</text><ellipse cx="7804.79" cy="8923.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="7813.79" y="8927.0386">set_abort_on_missing_resources(bool p_abort) : void</text><ellipse cx="7804.79" cy="8936.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="7813.79" y="8939.8433">get_dependencies(const String &amp; p_path) : PoolStringArray</text><ellipse cx="7804.79" cy="8949.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="7813.79" y="8952.6479">has(const String &amp; p_path) : bool</text><ellipse cx="7804.79" cy="8962.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="7813.79" y="8965.4526">has_cached(const String &amp; p_path) : bool</text><ellipse cx="7804.79" cy="8975.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="7813.79" y="8978.2573">exists(const String &amp; p_path, const String &amp; p_type_hint = "") : bool</text><ellipse cx="7804.79" cy="8987.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="7813.79" y="8991.062">_ResourceLoader() : void</text></a><!--MD5=[8320b79068f24653412391a69e41cea5]
class C_0001130773750498288283--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68" target="_top" title="_ResourceSaver" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68" xlink:show="new" xlink:title="_ResourceSaver" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="252.875" id="C_0001130773750498288283" style="stroke: #A80036; stroke-width: 1.5;" width="590" x="16656.29" y="8706.4531"/><ellipse cx="16897.04" cy="8722.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M16900.0088,8728.0938 Q16899.4306,8728.3906 16898.79,8728.5313 Q16898.1494,8728.6875 16897.4463,8728.6875 Q16894.9463,8728.6875 16893.6181,8727.0469 Q16892.3056,8725.3906 16892.3056,8722.2656 Q16892.3056,8719.1406 16893.6181,8717.4844 Q16894.9463,8715.8281 16897.4463,8715.8281 Q16898.1494,8715.8281 16898.79,8715.9844 Q16899.4463,8716.1406 16900.0088,8716.4375 L16900.0088,8719.1563 Q16899.3838,8718.5781 16898.79,8718.3125 Q16898.1963,8718.0313 16897.5713,8718.0313 Q16896.2275,8718.0313 16895.54,8719.1094 Q16894.8525,8720.1719 16894.8525,8722.2656 Q16894.8525,8724.3594 16895.54,8725.4375 Q16896.2275,8726.5 16897.5713,8726.5 Q16898.1963,8726.5 16898.79,8726.2344 Q16899.3838,8725.9531 16900.0088,8725.375 L16900.0088,8728.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="16917.54" y="8726.6074">_ResourceSaver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16657.29" x2="17245.29" y1="8738.4531" y2="8738.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="16657.29" x2="17245.29" y1="8746.4531" y2="8746.4531"/><ellipse cx="16667.29" cy="8757.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="16676.29" y="8760.6636">get_class() const : String</text><ellipse cx="16667.29" cy="8770.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="16676.29" y="8773.4683">_get_class_namev() const : const StringName *</text><ellipse cx="16667.29" cy="8783.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="16676.29" y="8786.2729">get_class_ptr_static() : void *</text><ellipse cx="16667.29" cy="8795.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="16676.29" y="8799.0776">get_class_static() : String</text><ellipse cx="16667.29" cy="8808.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="16676.29" y="8811.8823">get_parent_class_static() : String</text><ellipse cx="16667.29" cy="8821.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="16676.29" y="8824.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="16667.29" cy="8834.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="16676.29" y="8837.4917">get_category_static() : String</text><ellipse cx="16667.29" cy="8847.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="16676.29" y="8850.2964">inherits_static() : String</text><ellipse cx="16667.29" cy="8859.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="16676.29" y="8863.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="16667.29" cy="8872.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="16676.29" y="8875.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="16667.29" cy="8885.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="16676.29" y="8888.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="16667.29" cy="8898.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="16676.29" y="8901.5151">initialize_class() : void</text><ellipse cx="16667.29" cy="8911.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="198" x="16676.29" y="8914.3198">get_singleton() : _ResourceSaver *</text><ellipse cx="16667.29" cy="8923.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="564" x="16676.29" y="8927.1245">save(const String &amp; p_path, const RES &amp; p_resource, _ResourceSaver::SaverFlags p_flags) : Error</text><ellipse cx="16667.29" cy="8936.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="16676.29" y="8939.9292">get_recognized_extensions(const RES &amp; p_resource) : PoolVector&lt;String&gt;</text><ellipse cx="16667.29" cy="8949.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="16676.29" y="8952.7339">_ResourceSaver() : void</text></a><!--MD5=[4791f32a7532edb6976f97ebd5eb02c0]
class C_0000790752023609648644--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99" target="_top" title="_OS" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99" xlink:show="new" xlink:title="_OS" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="2263.2109" id="C_0000790752023609648644" style="stroke: #A80036; stroke-width: 1.5;" width="908" x="18403.29" y="7701.4531"/><ellipse cx="18841.54" cy="7717.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18844.5088,7723.0938 Q18843.9306,7723.3906 18843.29,7723.5313 Q18842.6494,7723.6875 18841.9463,7723.6875 Q18839.4463,7723.6875 18838.1181,7722.0469 Q18836.8056,7720.3906 18836.8056,7717.2656 Q18836.8056,7714.1406 18838.1181,7712.4844 Q18839.4463,7710.8281 18841.9463,7710.8281 Q18842.6494,7710.8281 18843.29,7710.9844 Q18843.9463,7711.1406 18844.5088,7711.4375 L18844.5088,7714.1563 Q18843.8838,7713.5781 18843.29,7713.3125 Q18842.6963,7713.0313 18842.0713,7713.0313 Q18840.7275,7713.0313 18840.04,7714.1094 Q18839.3525,7715.1719 18839.3525,7717.2656 Q18839.3525,7719.3594 18840.04,7720.4375 Q18840.7275,7721.5 18842.0713,7721.5 Q18842.6963,7721.5 18843.29,7721.2344 Q18843.8838,7720.9531 18844.5088,7720.375 L18844.5088,7723.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="18862.04" y="7721.6074">_OS</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18404.29" x2="19310.29" y1="7733.4531" y2="7733.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="18404.29" x2="19310.29" y1="7741.4531" y2="7741.4531"/><ellipse cx="18414.29" cy="7752.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="18423.29" y="7755.6636">get_class() const : String</text><ellipse cx="18414.29" cy="7765.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="18423.29" y="7768.4683">_get_class_namev() const : const StringName *</text><ellipse cx="18414.29" cy="7778.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="18423.29" y="7781.2729">get_class_ptr_static() : void *</text><ellipse cx="18414.29" cy="7790.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="18423.29" y="7794.0776">get_class_static() : String</text><ellipse cx="18414.29" cy="7803.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="18423.29" y="7806.8823">get_parent_class_static() : String</text><ellipse cx="18414.29" cy="7816.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="18423.29" y="7819.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="18414.29" cy="7829.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="18423.29" y="7832.4917">get_category_static() : String</text><ellipse cx="18414.29" cy="7842.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="18423.29" y="7845.2964">inherits_static() : String</text><ellipse cx="18414.29" cy="7854.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="18423.29" y="7858.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="18414.29" cy="7867.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="18423.29" y="7870.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="18414.29" cy="7880.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="18423.29" y="7883.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="18414.29" cy="7893.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="18423.29" y="7896.5151">initialize_class() : void</text><ellipse cx="18414.29" cy="7906.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="731" x="18423.29" y="7909.3198">global_menu_add_item(const String &amp; p_menu, const String &amp; p_label, const Variant &amp; p_signal, const Variant &amp; p_meta) : void</text><ellipse cx="18414.29" cy="7918.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="18423.29" y="7922.1245">global_menu_add_separator(const String &amp; p_menu) : void</text><ellipse cx="18414.29" cy="7931.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="18423.29" y="7934.9292">global_menu_remove_item(const String &amp; p_menu, int p_idx) : void</text><ellipse cx="18414.29" cy="7944.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="18423.29" y="7947.7339">global_menu_clear(const String &amp; p_menu) : void</text><ellipse cx="18414.29" cy="7957.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="18423.29" y="7960.5386">get_mouse_position() const : Point2</text><ellipse cx="18414.29" cy="7970.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="18423.29" y="7973.3433">set_window_title(const String &amp; p_title) : void</text><ellipse cx="18414.29" cy="7982.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="431" x="18423.29" y="7986.1479">set_window_mouse_passthrough(const PoolVector2Array &amp; p_region) : void</text><ellipse cx="18414.29" cy="7995.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="18423.29" y="7998.9526">get_mouse_button_state() const : int</text><ellipse cx="18414.29" cy="8008.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="18423.29" y="8011.7573">set_clipboard(const String &amp; p_text) : void</text><ellipse cx="18414.29" cy="8021.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="18423.29" y="8024.562">get_clipboard() const : String</text><ellipse cx="18414.29" cy="8034.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="18423.29" y="8037.3667">set_video_mode(const Size2 &amp; p_size, bool p_fullscreen, bool p_resizeable, int p_screen = 0) : void</text><ellipse cx="18414.29" cy="8046.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="18423.29" y="8050.1714">get_video_mode(int p_screen = 0) const : Size2</text><ellipse cx="18414.29" cy="8059.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="18423.29" y="8062.9761">is_video_mode_fullscreen(int p_screen = 0) const : bool</text><ellipse cx="18414.29" cy="8072.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="18423.29" y="8075.7808">is_video_mode_resizable(int p_screen = 0) const : bool</text><ellipse cx="18414.29" cy="8085.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="18423.29" y="8088.5854">get_fullscreen_mode_list(int p_screen = 0) const : Array</text><ellipse cx="18414.29" cy="8098.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="18423.29" y="8101.3901">get_video_driver_count() const : int</text><ellipse cx="18414.29" cy="8110.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="18423.29" y="8114.1948">get_video_driver_name(_OS::VideoDriver p_driver) const : String</text><ellipse cx="18414.29" cy="8123.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="18423.29" y="8126.9995">get_current_video_driver() const : _OS::VideoDriver</text><ellipse cx="18414.29" cy="8136.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="18423.29" y="8139.8042">get_audio_driver_count() const : int</text><ellipse cx="18414.29" cy="8149.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="18423.29" y="8152.6089">get_audio_driver_name(int p_driver) const : String</text><ellipse cx="18414.29" cy="8162.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="18423.29" y="8165.4136">get_connected_midi_inputs() : PoolStringArray</text><ellipse cx="18414.29" cy="8175.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="18423.29" y="8178.2183">open_midi_inputs() : void</text><ellipse cx="18414.29" cy="8187.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="18423.29" y="8191.0229">close_midi_inputs() : void</text><ellipse cx="18414.29" cy="8200.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="18423.29" y="8203.8276">get_screen_count() const : int</text><ellipse cx="18414.29" cy="8213.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="18423.29" y="8216.6323">get_current_screen() const : int</text><ellipse cx="18414.29" cy="8226.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="18423.29" y="8229.437">set_current_screen(int p_screen) : void</text><ellipse cx="18414.29" cy="8239.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="18423.29" y="8242.2417">get_screen_position(int p_screen = -1) const : Point2</text><ellipse cx="18414.29" cy="8251.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="18423.29" y="8255.0464">get_screen_size(int p_screen = -1) const : Size2</text><ellipse cx="18414.29" cy="8264.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="18423.29" y="8267.8511">get_screen_dpi(int p_screen = -1) const : int</text><ellipse cx="18414.29" cy="8277.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="18423.29" y="8280.6558">get_screen_scale(int p_screen = -1) const : float</text><ellipse cx="18414.29" cy="8290.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="18423.29" y="8293.4604">get_screen_max_scale() const : float</text><ellipse cx="18414.29" cy="8303.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="18423.29" y="8306.2651">get_window_position() const : Point2</text><ellipse cx="18414.29" cy="8315.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="18423.29" y="8319.0698">set_window_position(const Point2 &amp; p_position) : void</text><ellipse cx="18414.29" cy="8328.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="18423.29" y="8331.8745">get_max_window_size() const : Size2</text><ellipse cx="18414.29" cy="8341.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="18423.29" y="8344.6792">get_min_window_size() const : Size2</text><ellipse cx="18414.29" cy="8354.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="18423.29" y="8357.4839">get_window_size() const : Size2</text><ellipse cx="18414.29" cy="8367.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="18423.29" y="8370.2886">get_real_window_size() const : Size2</text><ellipse cx="18414.29" cy="8379.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="18423.29" y="8383.0933">get_window_safe_area() const : Rect2</text><ellipse cx="18414.29" cy="8392.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="18423.29" y="8395.8979">set_max_window_size(const Size2 &amp; p_size) : void</text><ellipse cx="18414.29" cy="8405.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="18423.29" y="8408.7026">set_min_window_size(const Size2 &amp; p_size) : void</text><ellipse cx="18414.29" cy="8418.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="18423.29" y="8421.5073">set_window_size(const Size2 &amp; p_size) : void</text><ellipse cx="18414.29" cy="8431.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="18423.29" y="8434.312">set_window_fullscreen(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8443.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="18423.29" y="8447.1167">is_window_fullscreen() const : bool</text><ellipse cx="18414.29" cy="8456.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="18423.29" y="8459.9214">set_window_resizable(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8469.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="18423.29" y="8472.7261">is_window_resizable() const : bool</text><ellipse cx="18414.29" cy="8482.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="18423.29" y="8485.5308">set_window_minimized(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8495.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="18423.29" y="8498.3354">is_window_minimized() const : bool</text><ellipse cx="18414.29" cy="8507.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="18423.29" y="8511.1401">set_window_maximized(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8520.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="18423.29" y="8523.9448">is_window_maximized() const : bool</text><ellipse cx="18414.29" cy="8533.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="18423.29" y="8536.7495">set_window_always_on_top(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8546.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="18423.29" y="8549.5542">is_window_always_on_top() const : bool</text><ellipse cx="18414.29" cy="8559.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="18423.29" y="8562.3589">is_window_focused() const : bool</text><ellipse cx="18414.29" cy="8571.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="18423.29" y="8575.1636">request_attention() : void</text><ellipse cx="18414.29" cy="8584.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="18423.29" y="8587.9683">center_window() : void</text><ellipse cx="18414.29" cy="8597.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="18423.29" y="8600.7729">move_window_to_foreground() : void</text><ellipse cx="18414.29" cy="8610.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="18423.29" y="8613.5776">get_native_handle(_OS::HandleType p_handle_type) : int64_t</text><ellipse cx="18414.29" cy="8623.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="18423.29" y="8626.3823">set_borderless_window(bool p_borderless) : void</text><ellipse cx="18414.29" cy="8635.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="18423.29" y="8639.187">get_borderless_window() const : bool</text><ellipse cx="18414.29" cy="8648.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="18423.29" y="8651.9917">get_window_per_pixel_transparency_enabled() const : bool</text><ellipse cx="18414.29" cy="8661.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="18423.29" y="8664.7964">set_window_per_pixel_transparency_enabled(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8674.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="18423.29" y="8677.6011">set_ime_active(const bool p_active) : void</text><ellipse cx="18414.29" cy="8687.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="18423.29" y="8690.4058">set_ime_position(const Point2 &amp; p_pos) : void</text><ellipse cx="18414.29" cy="8700" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="18423.29" y="8703.2104">get_ime_selection() const : Point2</text><ellipse cx="18414.29" cy="8712.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="18423.29" y="8716.0151">get_ime_text() const : String</text><ellipse cx="18414.29" cy="8725.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="18423.29" y="8728.8198">native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error</text><ellipse cx="18414.29" cy="8738.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="18423.29" y="8741.6245">native_video_is_playing() : bool</text><ellipse cx="18414.29" cy="8751.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="18423.29" y="8754.4292">native_video_pause() : void</text><ellipse cx="18414.29" cy="8764.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="18423.29" y="8767.2339">native_video_unpause() : void</text><ellipse cx="18414.29" cy="8776.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="18423.29" y="8780.0386">native_video_stop() : void</text><ellipse cx="18414.29" cy="8789.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="18423.29" y="8792.8433">set_low_processor_usage_mode(bool p_enabled) : void</text><ellipse cx="18414.29" cy="8802.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="18423.29" y="8805.6479">is_in_low_processor_usage_mode() const : bool</text><ellipse cx="18414.29" cy="8815.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="18423.29" y="8818.4526">set_low_processor_usage_mode_sleep_usec(int p_usec) : void</text><ellipse cx="18414.29" cy="8828.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="18423.29" y="8831.2573">get_low_processor_usage_mode_sleep_usec() const : int</text><ellipse cx="18414.29" cy="8840.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="18423.29" y="8844.062">get_executable_path() const : String</text><ellipse cx="18414.29" cy="8853.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="882" x="18423.29" y="8856.8667">execute(const String &amp; p_path, const Vector&lt;String&gt; &amp; p_arguments, bool p_blocking = true, Array p_output = = Array(), bool p_read_stderr = false) : int</text><ellipse cx="18414.29" cy="8866.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="18423.29" y="8869.6714">kill(int p_pid) : Error</text><ellipse cx="18414.29" cy="8879.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="18423.29" y="8882.4761">shell_open(String p_uri) : Error</text><ellipse cx="18414.29" cy="8892.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="18423.29" y="8895.2808">get_process_id() const : int</text><ellipse cx="18414.29" cy="8904.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="18423.29" y="8908.0854">has_environment(const String &amp; p_var) const : bool</text><ellipse cx="18414.29" cy="8917.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="18423.29" y="8920.8901">get_environment(const String &amp; p_var) const : String</text><ellipse cx="18414.29" cy="8930.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="18423.29" y="8933.6948">set_environment(const String &amp; p_var, const String &amp; p_value) const : bool</text><ellipse cx="18414.29" cy="8943.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="18423.29" y="8946.4995">get_name() const : String</text><ellipse cx="18414.29" cy="8956.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="18423.29" y="8959.3042">get_cmdline_args() : Vector&lt;String&gt;</text><ellipse cx="18414.29" cy="8968.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="18423.29" y="8972.1089">get_locale() const : String</text><ellipse cx="18414.29" cy="8981.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="18423.29" y="8984.9136">get_latin_keyboard_variant() const : String</text><ellipse cx="18414.29" cy="8994.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="18423.29" y="8997.7183">keyboard_get_layout_count() const : int</text><ellipse cx="18414.29" cy="9007.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="18423.29" y="9010.5229">keyboard_get_current_layout() const : int</text><ellipse cx="18414.29" cy="9020.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="18423.29" y="9023.3276">keyboard_set_current_layout(int p_index) : void</text><ellipse cx="18414.29" cy="9032.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="18423.29" y="9036.1323">keyboard_get_layout_language(int p_index) const : String</text><ellipse cx="18414.29" cy="9045.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="18423.29" y="9048.937">keyboard_get_layout_name(int p_index) const : String</text><ellipse cx="18414.29" cy="9058.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="18423.29" y="9061.7417">get_model_name() const : String</text><ellipse cx="18414.29" cy="9071.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="18423.29" y="9074.5464">dump_memory_to_file(const String &amp; p_file) : void</text><ellipse cx="18414.29" cy="9084.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="18423.29" y="9087.3511">dump_resources_to_file(const String &amp; p_file) : void</text><ellipse cx="18414.29" cy="9096.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="18423.29" y="9100.1558">has_virtual_keyboard() const : bool</text><ellipse cx="18414.29" cy="9109.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="18423.29" y="9112.9604">show_virtual_keyboard(const String &amp; p_existing_text = "", bool p_multiline = false) : void</text><ellipse cx="18414.29" cy="9122.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="18423.29" y="9125.7651">hide_virtual_keyboard() : void</text><ellipse cx="18414.29" cy="9135.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="18423.29" y="9138.5698">get_virtual_keyboard_height() : int</text><ellipse cx="18414.29" cy="9148.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="18423.29" y="9151.3745">print_resources_in_use(bool p_short = false) : void</text><ellipse cx="18414.29" cy="9160.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="18423.29" y="9164.1792">print_all_resources(const String &amp; p_to_file) : void</text><ellipse cx="18414.29" cy="9173.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="18423.29" y="9176.9839">print_all_textures_by_size() : void</text><ellipse cx="18414.29" cy="9186.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="18423.29" y="9189.7886">print_resources_by_type(const Vector&lt;String&gt; &amp; p_types) : void</text><ellipse cx="18414.29" cy="9199.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="18423.29" y="9202.5933">has_touchscreen_ui_hint() const : bool</text><ellipse cx="18414.29" cy="9212.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="18423.29" y="9215.3979">is_debug_build() const : bool</text><ellipse cx="18414.29" cy="9224.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="18423.29" y="9228.2026">get_unique_id() const : String</text><ellipse cx="18414.29" cy="9237.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="18423.29" y="9241.0073">get_scancode_string(uint32_t p_code) const : String</text><ellipse cx="18414.29" cy="9250.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="18423.29" y="9253.812">is_scancode_unicode(uint32_t p_unicode) const : bool</text><ellipse cx="18414.29" cy="9263.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="18423.29" y="9266.6167">find_scancode_from_string(const String &amp; p_code) const : int</text><ellipse cx="18414.29" cy="9276.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="18423.29" y="9279.4214">set_use_file_access_save_and_swap(bool p_enable) : void</text><ellipse cx="18414.29" cy="9289.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="18423.29" y="9292.2261">set_native_icon(const String &amp; p_filename) : void</text><ellipse cx="18414.29" cy="9301.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="18423.29" y="9305.0308">set_icon(const Ref&lt;Image&gt; &amp; p_icon) : void</text><ellipse cx="18414.29" cy="9314.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="18423.29" y="9317.8354">get_exit_code() const : int</text><ellipse cx="18414.29" cy="9327.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="18423.29" y="9330.6401">set_exit_code(int p_code) : void</text><ellipse cx="18414.29" cy="9340.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="18423.29" y="9343.4448">get_date(bool utc) const : Dictionary</text><ellipse cx="18414.29" cy="9353.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="18423.29" y="9356.2495">get_time(bool utc) const : Dictionary</text><ellipse cx="18414.29" cy="9365.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="18423.29" y="9369.0542">get_datetime(bool utc) const : Dictionary</text><ellipse cx="18414.29" cy="9378.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="396" x="18423.29" y="9381.8589">get_datetime_from_unix_time(int64_t unix_time_val) const : Dictionary</text><ellipse cx="18414.29" cy="9391.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="18423.29" y="9394.6636">get_unix_time_from_datetime(Dictionary datetime) const : int64_t</text><ellipse cx="18414.29" cy="9404.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="18423.29" y="9407.4683">get_time_zone_info() const : Dictionary</text><ellipse cx="18414.29" cy="9417.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="18423.29" y="9420.2729">get_unix_time() const : uint64_t</text><ellipse cx="18414.29" cy="9429.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="18423.29" y="9433.0776">get_system_time_secs() const : uint64_t</text><ellipse cx="18414.29" cy="9442.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="18423.29" y="9445.8823">get_system_time_msecs() const : uint64_t</text><ellipse cx="18414.29" cy="9455.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="18423.29" y="9458.687">get_static_memory_usage() const : uint64_t</text><ellipse cx="18414.29" cy="9468.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="18423.29" y="9471.4917">get_static_memory_peak_usage() const : uint64_t</text><ellipse cx="18414.29" cy="9481.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="18423.29" y="9484.2964">get_dynamic_memory_usage() const : uint64_t</text><ellipse cx="18414.29" cy="9493.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="18423.29" y="9497.1011">delay_usec(int p_usec) const : void</text><ellipse cx="18414.29" cy="9506.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="18423.29" y="9509.9058">delay_msec(int p_msec) const : void</text><ellipse cx="18414.29" cy="9519.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="18423.29" y="9522.7104">get_ticks_msec() const : uint32_t</text><ellipse cx="18414.29" cy="9532.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="18423.29" y="9535.5151">get_ticks_usec() const : uint64_t</text><ellipse cx="18414.29" cy="9545.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="18423.29" y="9548.3198">get_splash_tick_msec() const : uint32_t</text><ellipse cx="18414.29" cy="9557.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="18423.29" y="9561.1245">can_use_threads() const : bool</text><ellipse cx="18414.29" cy="9570.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="18423.29" y="9573.9292">can_draw() const : bool</text><ellipse cx="18414.29" cy="9583.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="18423.29" y="9586.7339">is_userfs_persistent() const : bool</text><ellipse cx="18414.29" cy="9596.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="18423.29" y="9599.5386">is_stdout_verbose() const : bool</text><ellipse cx="18414.29" cy="9609.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="18423.29" y="9612.3433">get_processor_count() const : int</text><ellipse cx="18414.29" cy="9621.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="477" x="18423.29" y="9625.1479">get_system_dir(_OS::SystemDir p_dir, bool p_shared_storage = true) const : String</text><ellipse cx="18414.29" cy="9634.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="18423.29" y="9637.9526">get_user_data_dir() const : String</text><ellipse cx="18414.29" cy="9647.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="18423.29" y="9650.7573">alert(const String &amp; p_alert, const String &amp; p_title = "ALERT!") : void</text><ellipse cx="18414.29" cy="9660.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="18423.29" y="9663.562">set_screen_orientation(_OS::ScreenOrientation p_orientation) : void</text><ellipse cx="18414.29" cy="9673.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="18423.29" y="9676.3667">get_screen_orientation() const : _OS::ScreenOrientation</text><ellipse cx="18414.29" cy="9685.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="18423.29" y="9689.1714">set_keep_screen_on(bool p_enabled) : void</text><ellipse cx="18414.29" cy="9698.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="18423.29" y="9701.9761">is_keep_screen_on() const : bool</text><ellipse cx="18414.29" cy="9711.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="18423.29" y="9714.7808">is_ok_left_and_cancel_right() const : bool</text><ellipse cx="18414.29" cy="9724.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="18423.29" y="9727.5854">set_thread_name(const String &amp; p_name) : Error</text><ellipse cx="18414.29" cy="9737.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="18423.29" y="9740.3901">get_thread_caller_id() const : Thread::ID</text><ellipse cx="18414.29" cy="9749.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="18423.29" y="9753.1948">set_use_vsync(bool p_enable) : void</text><ellipse cx="18414.29" cy="9762.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="18423.29" y="9765.9995">is_vsync_enabled() const : bool</text><ellipse cx="18414.29" cy="9775.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="18423.29" y="9778.8042">set_vsync_via_compositor(bool p_enable) : void</text><ellipse cx="18414.29" cy="9788.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="18423.29" y="9791.6089">is_vsync_via_compositor_enabled() const : bool</text><ellipse cx="18414.29" cy="9801.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="18423.29" y="9804.4136">get_power_state() : _OS::PowerState</text><ellipse cx="18414.29" cy="9814.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="18423.29" y="9817.2183">get_power_seconds_left() : int</text><ellipse cx="18414.29" cy="9826.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="18423.29" y="9830.0229">get_power_percent_left() : int</text><ellipse cx="18414.29" cy="9839.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="18423.29" y="9842.8276">has_feature(const String &amp; p_feature) const : bool</text><ellipse cx="18414.29" cy="9852.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="18423.29" y="9855.6323">request_permission(const String &amp; p_name) : bool</text><ellipse cx="18414.29" cy="9865.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="18423.29" y="9868.437">request_permissions() : bool</text><ellipse cx="18414.29" cy="9878.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="18423.29" y="9881.2417">get_granted_permissions() const : Vector&lt;String&gt;</text><ellipse cx="18414.29" cy="9890.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="18423.29" y="9894.0464">get_tablet_driver_count() const : int</text><ellipse cx="18414.29" cy="9903.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="18423.29" y="9906.8511">get_tablet_driver_name(int p_driver) const : String</text><ellipse cx="18414.29" cy="9916.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="18423.29" y="9919.6558">get_current_tablet_driver() const : String</text><ellipse cx="18414.29" cy="9929.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="18423.29" y="9932.4604">set_current_tablet_driver(const String &amp; p_driver) : void</text><ellipse cx="18414.29" cy="9942.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="18423.29" y="9945.2651">get_singleton() : _OS *</text><ellipse cx="18414.29" cy="9954.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="18423.29" y="9958.0698">_OS() : void</text></a><!--MD5=[9cd91452c1d17095030b673b85aa269f]
class C_0000897221634691489964--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401" target="_top" title="_Geometry" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401" xlink:show="new" xlink:title="_Geometry" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="675.4297" id="C_0000897221634691489964" style="stroke: #A80036; stroke-width: 1.5;" width="1086" x="19446.29" y="8495.4531"/><ellipse cx="19952.04" cy="8511.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19955.0088,8517.0938 Q19954.4306,8517.3906 19953.79,8517.5313 Q19953.1494,8517.6875 19952.4463,8517.6875 Q19949.9463,8517.6875 19948.6181,8516.0469 Q19947.3056,8514.3906 19947.3056,8511.2656 Q19947.3056,8508.1406 19948.6181,8506.4844 Q19949.9463,8504.8281 19952.4463,8504.8281 Q19953.1494,8504.8281 19953.79,8504.9844 Q19954.4463,8505.1406 19955.0088,8505.4375 L19955.0088,8508.1563 Q19954.3838,8507.5781 19953.79,8507.3125 Q19953.1963,8507.0313 19952.5713,8507.0313 Q19951.2275,8507.0313 19950.54,8508.1094 Q19949.8525,8509.1719 19949.8525,8511.2656 Q19949.8525,8513.3594 19950.54,8514.4375 Q19951.2275,8515.5 19952.5713,8515.5 Q19953.1963,8515.5 19953.79,8515.2344 Q19954.3838,8514.9531 19955.0088,8514.375 L19955.0088,8517.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="19972.54" y="8515.6074">_Geometry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19447.29" x2="20531.29" y1="8527.4531" y2="8527.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="19447.29" x2="20531.29" y1="8535.4531" y2="8535.4531"/><ellipse cx="19457.29" cy="8546.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="19466.29" y="8549.6636">get_class() const : String</text><ellipse cx="19457.29" cy="8559.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="19466.29" y="8562.4683">_get_class_namev() const : const StringName *</text><ellipse cx="19457.29" cy="8572.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="19466.29" y="8575.2729">get_class_ptr_static() : void *</text><ellipse cx="19457.29" cy="8584.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="19466.29" y="8588.0776">get_class_static() : String</text><ellipse cx="19457.29" cy="8597.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="19466.29" y="8600.8823">get_parent_class_static() : String</text><ellipse cx="19457.29" cy="8610.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="19466.29" y="8613.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="19457.29" cy="8623.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="19466.29" y="8626.4917">get_category_static() : String</text><ellipse cx="19457.29" cy="8636.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="19466.29" y="8639.2964">inherits_static() : String</text><ellipse cx="19457.29" cy="8648.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="19466.29" y="8652.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="19457.29" cy="8661.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="19466.29" y="8664.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="19457.29" cy="8674.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="19466.29" y="8677.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="19457.29" cy="8687.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="19466.29" y="8690.5151">initialize_class() : void</text><ellipse cx="19457.29" cy="8700.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="19466.29" y="8703.3198">get_singleton() : _Geometry *</text><ellipse cx="19457.29" cy="8712.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="19466.29" y="8716.1245">build_box_planes(const Vector3 &amp; p_extents) : PoolVector&lt;Plane&gt;</text><ellipse cx="19457.29" cy="8725.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="713" x="19466.29" y="8728.9292">build_cylinder_planes(float p_radius, float p_height, int p_sides, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector&lt;Plane&gt;</text><ellipse cx="19457.29" cy="8738.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="773" x="19466.29" y="8741.7339">build_capsule_planes(float p_radius, float p_height, int p_sides, int p_lats, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector&lt;Plane&gt;</text><ellipse cx="19457.29" cy="8751.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="837" x="19466.29" y="8754.5386">segment_intersects_segment_2d(const Vector2 &amp; p_from_a, const Vector2 &amp; p_to_a, const Vector2 &amp; p_from_b, const Vector2 &amp; p_to_b) : Variant</text><ellipse cx="19457.29" cy="8764.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="19466.29" y="8767.3433">line_intersects_line_2d(const Vector2 &amp; p_from_a, const Vector2 &amp; p_dir_a, const Vector2 &amp; p_from_b, const Vector2 &amp; p_dir_b) : Variant</text><ellipse cx="19457.29" cy="8776.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="848" x="19466.29" y="8780.1479">get_closest_points_between_segments_2d(const Vector2 &amp; p1, const Vector2 &amp; q1, const Vector2 &amp; p2, const Vector2 &amp; q2) : PoolVector&lt;Vector2&gt;</text><ellipse cx="19457.29" cy="8789.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="828" x="19466.29" y="8792.9526">get_closest_points_between_segments(const Vector3 &amp; p1, const Vector3 &amp; p2, const Vector3 &amp; q1, const Vector3 &amp; q2) : PoolVector&lt;Vector3&gt;</text><ellipse cx="19457.29" cy="8802.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="640" x="19466.29" y="8805.7573">get_closest_point_to_segment_2d(const Vector2 &amp; p_point, const Vector2 &amp; p_a, const Vector2 &amp; p_b) : Vector2</text><ellipse cx="19457.29" cy="8815.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="19466.29" y="8818.562">get_closest_point_to_segment(const Vector3 &amp; p_point, const Vector3 &amp; p_a, const Vector3 &amp; p_b) : Vector3</text><ellipse cx="19457.29" cy="8828.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="701" x="19466.29" y="8831.3667">get_closest_point_to_segment_uncapped_2d(const Vector2 &amp; p_point, const Vector2 &amp; p_a, const Vector2 &amp; p_b) : Vector2</text><ellipse cx="19457.29" cy="8840.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="681" x="19466.29" y="8844.1714">get_closest_point_to_segment_uncapped(const Vector3 &amp; p_point, const Vector3 &amp; p_a, const Vector3 &amp; p_b) : Vector3</text><ellipse cx="19457.29" cy="8853.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="848" x="19466.29" y="8856.9761">ray_intersects_triangle(const Vector3 &amp; p_from, const Vector3 &amp; p_dir, const Vector3 &amp; p_v0, const Vector3 &amp; p_v1, const Vector3 &amp; p_v2) : Variant</text><ellipse cx="19457.29" cy="8866.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="876" x="19466.29" y="8869.7808">segment_intersects_triangle(const Vector3 &amp; p_from, const Vector3 &amp; p_to, const Vector3 &amp; p_v0, const Vector3 &amp; p_v1, const Vector3 &amp; p_v2) : Variant</text><ellipse cx="19457.29" cy="8879.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="647" x="19466.29" y="8882.5854">point_is_inside_triangle(const Vector2 &amp; s, const Vector2 &amp; a, const Vector2 &amp; b, const Vector2 &amp; c) const : bool</text><ellipse cx="19457.29" cy="8892.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="887" x="19466.29" y="8895.3901">segment_intersects_sphere(const Vector3 &amp; p_from, const Vector3 &amp; p_to, const Vector3 &amp; p_sphere_pos, real_t p_sphere_radius) : PoolVector&lt;Vector3&gt;</text><ellipse cx="19457.29" cy="8904.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="739" x="19466.29" y="8908.1948">segment_intersects_cylinder(const Vector3 &amp; p_from, const Vector3 &amp; p_to, float p_height, float p_radius) : PoolVector&lt;Vector3&gt;</text><ellipse cx="19457.29" cy="8917.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="760" x="19466.29" y="8920.9995">segment_intersects_convex(const Vector3 &amp; p_from, const Vector3 &amp; p_to, const Vector&lt;Plane&gt; &amp; p_planes) : PoolVector&lt;Vector3&gt;</text><ellipse cx="19457.29" cy="8930.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="19466.29" y="8933.8042">is_point_in_circle(const Vector2 &amp; p_point, const Vector2 &amp; p_circle_pos, real_t p_circle_radius) : bool</text><ellipse cx="19457.29" cy="8943.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="768" x="19466.29" y="8946.6089">segment_intersects_circle(const Vector2 &amp; p_from, const Vector2 &amp; p_to, const Vector2 &amp; p_circle_pos, real_t p_circle_radius) : real_t</text><ellipse cx="19457.29" cy="8956.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="19466.29" y="8959.4136">get_uv84_normal_bit(const Vector3 &amp; p_vector) : int</text><ellipse cx="19457.29" cy="8969.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="19466.29" y="8972.2183">is_polygon_clockwise(const Vector&lt;Vector2&gt; &amp; p_polygon) : bool</text><ellipse cx="19457.29" cy="8981.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="19466.29" y="8985.0229">is_point_in_polygon(const Point2 &amp; p_point, const Vector&lt;Vector2&gt; &amp; p_polygon) : bool</text><ellipse cx="19457.29" cy="8994.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="19466.29" y="8997.8276">triangulate_polygon(const Vector&lt;Vector2&gt; &amp; p_polygon) : Vector&lt;int&gt;</text><ellipse cx="19457.29" cy="9007.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="19466.29" y="9010.6323">triangulate_delaunay_2d(const Vector&lt;Vector2&gt; &amp; p_points) : Vector&lt;int&gt;</text><ellipse cx="19457.29" cy="9020.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="19466.29" y="9023.437">convex_hull_2d(const Vector&lt;Point2&gt; &amp; p_points) : Vector&lt;Point2&gt;</text><ellipse cx="19457.29" cy="9033.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="19466.29" y="9036.2417">clip_polygon(const Vector&lt;Vector3&gt; &amp; p_points, const Plane &amp; p_plane) : Vector&lt;Vector3&gt;</text><ellipse cx="19457.29" cy="9045.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="19466.29" y="9049.0464">merge_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="19457.29" cy="9058.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="19466.29" y="9061.8511">clip_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="19457.29" cy="9071.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="19466.29" y="9074.6558">intersect_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="19457.29" cy="9084.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="618" x="19466.29" y="9087.4604">exclude_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="19457.29" cy="9097.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="19466.29" y="9100.2651">clip_polyline_with_polygon_2d(const Vector&lt;Vector2&gt; &amp; p_polyline, const Vector&lt;Vector2&gt; &amp; p_polygon) : Array</text><ellipse cx="19457.29" cy="9109.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="19466.29" y="9113.0698">intersect_polyline_with_polygon_2d(const Vector&lt;Vector2&gt; &amp; p_polyline, const Vector&lt;Vector2&gt; &amp; p_polygon) : Array</text><ellipse cx="19457.29" cy="9122.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="752" x="19466.29" y="9125.8745">offset_polygon_2d(const Vector&lt;Vector2&gt; &amp; p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE) : Array</text><ellipse cx="19457.29" cy="9135.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1060" x="19466.29" y="9138.6792">offset_polyline_2d(const Vector&lt;Vector2&gt; &amp; p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE, _Geometry::PolyEndType p_end_type = END_SQUARE) : Array</text><ellipse cx="19457.29" cy="9148.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="19466.29" y="9151.4839">make_atlas(const Vector&lt;Size2&gt; &amp; p_rects) : Dictionary</text><ellipse cx="19457.29" cy="9161.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="19466.29" y="9164.2886">_Geometry() : void</text></a><!--MD5=[4dcc2a5e5ca6c256ca3086aa64be2a49]
class C_0000135188690773659020--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629" target="_top" title="_Marshalls" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629" xlink:show="new" xlink:title="_Marshalls" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="316.8984" id="C_0000135188690773659020" style="stroke: #A80036; stroke-width: 1.5;" width="476" x="20667.29" y="8674.4531"/><ellipse cx="20868.54" cy="8690.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M20871.5088,8696.0938 Q20870.9306,8696.3906 20870.29,8696.5313 Q20869.6494,8696.6875 20868.9463,8696.6875 Q20866.4463,8696.6875 20865.1181,8695.0469 Q20863.8056,8693.3906 20863.8056,8690.2656 Q20863.8056,8687.1406 20865.1181,8685.4844 Q20866.4463,8683.8281 20868.9463,8683.8281 Q20869.6494,8683.8281 20870.29,8683.9844 Q20870.9463,8684.1406 20871.5088,8684.4375 L20871.5088,8687.1563 Q20870.8838,8686.5781 20870.29,8686.3125 Q20869.6963,8686.0313 20869.0713,8686.0313 Q20867.7275,8686.0313 20867.04,8687.1094 Q20866.3525,8688.1719 20866.3525,8690.2656 Q20866.3525,8692.3594 20867.04,8693.4375 Q20867.7275,8694.5 20869.0713,8694.5 Q20869.6963,8694.5 20870.29,8694.2344 Q20870.8838,8693.9531 20871.5088,8693.375 L20871.5088,8696.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="20889.04" y="8694.6074">_Marshalls</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20668.29" x2="21142.29" y1="8706.4531" y2="8706.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="20668.29" x2="21142.29" y1="8714.4531" y2="8714.4531"/><ellipse cx="20678.29" cy="8725.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="20687.29" y="8728.6636">get_class() const : String</text><ellipse cx="20678.29" cy="8738.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="20687.29" y="8741.4683">_get_class_namev() const : const StringName *</text><ellipse cx="20678.29" cy="8751.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="20687.29" y="8754.2729">get_class_ptr_static() : void *</text><ellipse cx="20678.29" cy="8763.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="20687.29" y="8767.0776">get_class_static() : String</text><ellipse cx="20678.29" cy="8776.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="20687.29" y="8779.8823">get_parent_class_static() : String</text><ellipse cx="20678.29" cy="8789.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="20687.29" y="8792.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="20678.29" cy="8802.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="20687.29" y="8805.4917">get_category_static() : String</text><ellipse cx="20678.29" cy="8815.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="20687.29" y="8818.2964">inherits_static() : String</text><ellipse cx="20678.29" cy="8827.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="20687.29" y="8831.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="20678.29" cy="8840.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="20687.29" y="8843.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="20678.29" cy="8853.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="20687.29" y="8856.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="20678.29" cy="8866.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="20687.29" y="8869.5151">initialize_class() : void</text><ellipse cx="20678.29" cy="8879.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="20687.29" y="8882.3198">get_singleton() : _Marshalls *</text><ellipse cx="20678.29" cy="8891.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="20687.29" y="8895.1245">variant_to_base64(const Variant &amp; p_var, bool p_full_objects = false) : String</text><ellipse cx="20678.29" cy="8904.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="20687.29" y="8907.9292">base64_to_variant(const String &amp; p_str, bool p_allow_objects = false) : Variant</text><ellipse cx="20678.29" cy="8917.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="20687.29" y="8920.7339">raw_to_base64(const PoolVector&lt;uint8_t&gt; &amp; p_arr) : String</text><ellipse cx="20678.29" cy="8930.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="20687.29" y="8933.5386">base64_to_raw(const String &amp; p_str) : PoolVector&lt;uint8_t&gt;</text><ellipse cx="20678.29" cy="8943.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="20687.29" y="8946.3433">utf8_to_base64(const String &amp; p_str) : String</text><ellipse cx="20678.29" cy="8955.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="20687.29" y="8959.1479">base64_to_utf8(const String &amp; p_str) : String</text><ellipse cx="20678.29" cy="8968.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="20687.29" y="8971.9526">_Marshalls() : void</text><ellipse cx="20678.29" cy="8981.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="20687.29" y="8984.7573">_Marshalls() : void</text></a><!--MD5=[bec2467cb88707ae9252054f6d93a9ae]
class C_0001150621116588802549--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679" target="_top" title="_Thread" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679" xlink:show="new" xlink:title="_Thread" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="278.4844" id="C_0001150621116588802549" style="stroke: #A80036; stroke-width: 1.5;" width="905" x="26439.79" y="8693.9531"/><ellipse cx="26863.04" cy="8709.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26866.0088,8715.5938 Q26865.4306,8715.8906 26864.79,8716.0313 Q26864.1494,8716.1875 26863.4463,8716.1875 Q26860.9463,8716.1875 26859.6181,8714.5469 Q26858.3056,8712.8906 26858.3056,8709.7656 Q26858.3056,8706.6406 26859.6181,8704.9844 Q26860.9463,8703.3281 26863.4463,8703.3281 Q26864.1494,8703.3281 26864.79,8703.4844 Q26865.4463,8703.6406 26866.0088,8703.9375 L26866.0088,8706.6563 Q26865.3838,8706.0781 26864.79,8705.8125 Q26864.1963,8705.5313 26863.5713,8705.5313 Q26862.2275,8705.5313 26861.54,8706.6094 Q26860.8525,8707.6719 26860.8525,8709.7656 Q26860.8525,8711.8594 26861.54,8712.9375 Q26862.2275,8714 26863.5713,8714 Q26864.1963,8714 26864.79,8713.7344 Q26865.3838,8713.4531 26866.0088,8712.875 L26866.0088,8715.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="26883.54" y="8714.1074">_Thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26440.79" x2="27343.79" y1="8725.9531" y2="8725.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26440.79" x2="27343.79" y1="8733.9531" y2="8733.9531"/><ellipse cx="26450.79" cy="8744.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26459.79" y="8748.1636">get_class() const : String</text><ellipse cx="26450.79" cy="8757.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26459.79" y="8760.9683">_get_class_namev() const : const StringName *</text><ellipse cx="26450.79" cy="8770.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26459.79" y="8773.7729">get_class_ptr_static() : void *</text><ellipse cx="26450.79" cy="8783.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26459.79" y="8786.5776">get_class_static() : String</text><ellipse cx="26450.79" cy="8796.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26459.79" y="8799.3823">get_parent_class_static() : String</text><ellipse cx="26450.79" cy="8808.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26459.79" y="8812.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26450.79" cy="8821.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26459.79" y="8824.9917">get_category_static() : String</text><ellipse cx="26450.79" cy="8834.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26459.79" y="8837.7964">inherits_static() : String</text><ellipse cx="26450.79" cy="8847.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26459.79" y="8850.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26450.79" cy="8860.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26459.79" y="8863.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26450.79" cy="8873" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26459.79" y="8876.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26450.79" cy="8885.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26459.79" y="8889.0151">initialize_class() : void</text><ellipse cx="26450.79" cy="8898.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="879" x="26459.79" y="8901.8198">start(Object * p_instance, const StringName &amp; p_method, const Variant &amp; p_userdata = Variant(), _Thread::Priority p_priority = PRIORITY_NORMAL) : Error</text><ellipse cx="26450.79" cy="8911.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26459.79" y="8914.6245">get_id() const : String</text><ellipse cx="26450.79" cy="8924.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26459.79" y="8927.4292">is_active() const : bool</text><ellipse cx="26450.79" cy="8937.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26459.79" y="8940.2339">wait_to_finish() : Variant</text><ellipse cx="26450.79" cy="8949.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26459.79" y="8953.0386">_Thread() : void</text><ellipse cx="26450.79" cy="8962.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26459.79" y="8965.8433">_Thread() : void</text></a><!--MD5=[aee0a6e401a1fbb7c861b56a21d0daf4]
class C_0001186331261774827872--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713" target="_top" title="_ClassDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713" xlink:show="new" xlink:title="_ClassDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="483.3594" id="C_0001186331261774827872" style="stroke: #A80036; stroke-width: 1.5;" width="651" x="22470.79" y="8591.4531"/><ellipse cx="22764.04" cy="8607.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22767.0088,8613.0938 Q22766.4306,8613.3906 22765.79,8613.5313 Q22765.1494,8613.6875 22764.4463,8613.6875 Q22761.9463,8613.6875 22760.6181,8612.0469 Q22759.3056,8610.3906 22759.3056,8607.2656 Q22759.3056,8604.1406 22760.6181,8602.4844 Q22761.9463,8600.8281 22764.4463,8600.8281 Q22765.1494,8600.8281 22765.79,8600.9844 Q22766.4463,8601.1406 22767.0088,8601.4375 L22767.0088,8604.1563 Q22766.3838,8603.5781 22765.79,8603.3125 Q22765.1963,8603.0313 22764.5713,8603.0313 Q22763.2275,8603.0313 22762.54,8604.1094 Q22761.8525,8605.1719 22761.8525,8607.2656 Q22761.8525,8609.3594 22762.54,8610.4375 Q22763.2275,8611.5 22764.5713,8611.5 Q22765.1963,8611.5 22765.79,8611.2344 Q22766.3838,8610.9531 22767.0088,8610.375 L22767.0088,8613.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="22784.54" y="8611.6074">_ClassDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22471.79" x2="23120.79" y1="8623.4531" y2="8623.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22471.79" x2="23120.79" y1="8631.4531" y2="8631.4531"/><ellipse cx="22481.79" cy="8642.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="22490.79" y="8645.6636">get_class() const : String</text><ellipse cx="22481.79" cy="8655.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="22490.79" y="8658.4683">_get_class_namev() const : const StringName *</text><ellipse cx="22481.79" cy="8668.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="22490.79" y="8671.2729">get_class_ptr_static() : void *</text><ellipse cx="22481.79" cy="8680.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="22490.79" y="8684.0776">get_class_static() : String</text><ellipse cx="22481.79" cy="8693.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="22490.79" y="8696.8823">get_parent_class_static() : String</text><ellipse cx="22481.79" cy="8706.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="22490.79" y="8709.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="22481.79" cy="8719.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="22490.79" y="8722.4917">get_category_static() : String</text><ellipse cx="22481.79" cy="8732.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="22490.79" y="8735.2964">inherits_static() : String</text><ellipse cx="22481.79" cy="8744.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="22490.79" y="8748.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="22481.79" cy="8757.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="22490.79" y="8760.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="22481.79" cy="8770.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="22490.79" y="8773.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="22481.79" cy="8783.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="22490.79" y="8786.5151">initialize_class() : void</text><ellipse cx="22481.79" cy="8796.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="22490.79" y="8799.3198">get_class_list() const : PoolStringArray</text><ellipse cx="22481.79" cy="8808.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="22490.79" y="8812.1245">get_inheriters_from_class(const StringName &amp; p_class) const : PoolStringArray</text><ellipse cx="22481.79" cy="8821.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="22490.79" y="8824.9292">get_parent_class(const StringName &amp; p_class) const : StringName</text><ellipse cx="22481.79" cy="8834.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="22490.79" y="8837.7339">class_exists(const StringName &amp; p_class) const : bool</text><ellipse cx="22481.79" cy="8847.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="22490.79" y="8850.5386">is_parent_class(const StringName &amp; p_class, const StringName &amp; p_inherits) const : bool</text><ellipse cx="22481.79" cy="8860.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="22490.79" y="8863.3433">can_instance(const StringName &amp; p_class) const : bool</text><ellipse cx="22481.79" cy="8872.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="22490.79" y="8876.1479">instance(const StringName &amp; p_class) const : Variant</text><ellipse cx="22481.79" cy="8885.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="22490.79" y="8888.9526">has_signal(StringName p_class, StringName p_signal) const : bool</text><ellipse cx="22481.79" cy="8898.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="22490.79" y="8901.7573">get_signal(StringName p_class, StringName p_signal) const : Dictionary</text><ellipse cx="22481.79" cy="8911.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="22490.79" y="8914.562">get_signal_list(StringName p_class, bool p_no_inheritance = false) const : Array</text><ellipse cx="22481.79" cy="8924.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="22490.79" y="8927.3667">get_property_list(StringName p_class, bool p_no_inheritance = false) const : Array</text><ellipse cx="22481.79" cy="8936.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="22490.79" y="8940.1714">get_property(Object * p_object, const StringName &amp; p_property) const : Variant</text><ellipse cx="22481.79" cy="8949.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="22490.79" y="8952.9761">set_property(Object * p_object, const StringName &amp; p_property, const Variant &amp; p_value) const : Error</text><ellipse cx="22481.79" cy="8962.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="575" x="22490.79" y="8965.7808">has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) const : bool</text><ellipse cx="22481.79" cy="8975.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="466" x="22490.79" y="8978.5854">get_method_list(StringName p_class, bool p_no_inheritance = false) const : Array</text><ellipse cx="22481.79" cy="8988.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="22490.79" y="8991.3901">get_integer_constant_list(const StringName &amp; p_class, bool p_no_inheritance = false) const : PoolStringArray</text><ellipse cx="22481.79" cy="9000.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="22490.79" y="9004.1948">has_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name) const : bool</text><ellipse cx="22481.79" cy="9013.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="22490.79" y="9016.9995">get_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name) const : int</text><ellipse cx="22481.79" cy="9026.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="22490.79" y="9029.8042">get_category(const StringName &amp; p_node) const : StringName</text><ellipse cx="22481.79" cy="9039.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="22490.79" y="9042.6089">is_class_enabled(StringName p_class) const : bool</text><ellipse cx="22481.79" cy="9052.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="22490.79" y="9055.4136">_ClassDB() : void</text><ellipse cx="22481.79" cy="9065.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="22490.79" y="9068.2183">_ClassDB() : void</text></a><!--MD5=[05b7e85f3dbac3be88f6744cbcc1427a]
class C_0001895218672297528471--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752" target="_top" title="_Engine" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752" xlink:show="new" xlink:title="_Engine" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="547.3828" id="C_0001895218672297528471" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="23156.79" y="8559.4531"/><ellipse cx="23328.54" cy="8575.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23331.5088,8581.0938 Q23330.9306,8581.3906 23330.29,8581.5313 Q23329.6494,8581.6875 23328.9463,8581.6875 Q23326.4463,8581.6875 23325.1181,8580.0469 Q23323.8056,8578.3906 23323.8056,8575.2656 Q23323.8056,8572.1406 23325.1181,8570.4844 Q23326.4463,8568.8281 23328.9463,8568.8281 Q23329.6494,8568.8281 23330.29,8568.9844 Q23330.9463,8569.1406 23331.5088,8569.4375 L23331.5088,8572.1563 Q23330.8838,8571.5781 23330.29,8571.3125 Q23329.6963,8571.0313 23329.0713,8571.0313 Q23327.7275,8571.0313 23327.04,8572.1094 Q23326.3525,8573.1719 23326.3525,8575.2656 Q23326.3525,8577.3594 23327.04,8578.4375 Q23327.7275,8579.5 23329.0713,8579.5 Q23329.6963,8579.5 23330.29,8579.2344 Q23330.8838,8578.9531 23331.5088,8578.375 L23331.5088,8581.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="23349.04" y="8579.6074">_Engine</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23157.79" x2="23556.79" y1="8591.4531" y2="8591.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23157.79" x2="23556.79" y1="8599.4531" y2="8599.4531"/><ellipse cx="23167.79" cy="8610.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="23176.79" y="8613.6636">get_class() const : String</text><ellipse cx="23167.79" cy="8623.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="23176.79" y="8626.4683">_get_class_namev() const : const StringName *</text><ellipse cx="23167.79" cy="8636.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="23176.79" y="8639.2729">get_class_ptr_static() : void *</text><ellipse cx="23167.79" cy="8648.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="23176.79" y="8652.0776">get_class_static() : String</text><ellipse cx="23167.79" cy="8661.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="23176.79" y="8664.8823">get_parent_class_static() : String</text><ellipse cx="23167.79" cy="8674.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="23176.79" y="8677.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="23167.79" cy="8687.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="23176.79" y="8690.4917">get_category_static() : String</text><ellipse cx="23167.79" cy="8700.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="23176.79" y="8703.2964">inherits_static() : String</text><ellipse cx="23167.79" cy="8712.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="23176.79" y="8716.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="23167.79" cy="8725.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23176.79" y="8728.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="23167.79" cy="8738.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="23176.79" y="8741.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="23167.79" cy="8751.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="23176.79" y="8754.5151">initialize_class() : void</text><ellipse cx="23167.79" cy="8764.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="23176.79" y="8767.3198">get_singleton() : _Engine *</text><ellipse cx="23167.79" cy="8776.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="23176.79" y="8780.1245">set_iterations_per_second(int p_ips) : void</text><ellipse cx="23167.79" cy="8789.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="23176.79" y="8792.9292">get_iterations_per_second() const : int</text><ellipse cx="23167.79" cy="8802.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="23176.79" y="8805.7339">set_physics_jitter_fix(float p_threshold) : void</text><ellipse cx="23167.79" cy="8815.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="23176.79" y="8818.5386">get_physics_jitter_fix() const : float</text><ellipse cx="23167.79" cy="8828.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="23176.79" y="8831.3433">get_physics_interpolation_fraction() const : float</text><ellipse cx="23167.79" cy="8840.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="23176.79" y="8844.1479">set_target_fps(int p_fps) : void</text><ellipse cx="23167.79" cy="8853.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="23176.79" y="8856.9526">get_target_fps() const : int</text><ellipse cx="23167.79" cy="8866.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="23176.79" y="8869.7573">get_frames_per_second() const : float</text><ellipse cx="23167.79" cy="8879.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="23176.79" y="8882.562">get_physics_frames() const : uint64_t</text><ellipse cx="23167.79" cy="8892.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="23176.79" y="8895.3667">get_idle_frames() const : uint64_t</text><ellipse cx="23167.79" cy="8904.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="23176.79" y="8908.1714">get_frames_drawn() : int</text><ellipse cx="23167.79" cy="8917.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="23176.79" y="8920.9761">set_time_scale(float p_scale) : void</text><ellipse cx="23167.79" cy="8930.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="23176.79" y="8933.7808">get_time_scale() : float</text><ellipse cx="23167.79" cy="8943.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="23176.79" y="8946.5854">get_main_loop() const : MainLoop *</text><ellipse cx="23167.79" cy="8956.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="23176.79" y="8959.3901">get_version_info() const : Dictionary</text><ellipse cx="23167.79" cy="8968.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="23176.79" y="8972.1948">get_author_info() const : Dictionary</text><ellipse cx="23167.79" cy="8981.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="23176.79" y="8984.9995">get_copyright_info() const : Array</text><ellipse cx="23167.79" cy="8994.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="23176.79" y="8997.8042">get_donor_info() const : Dictionary</text><ellipse cx="23167.79" cy="9007.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="23176.79" y="9010.6089">get_license_info() const : Dictionary</text><ellipse cx="23167.79" cy="9020.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="23176.79" y="9023.4136">get_license_text() const : String</text><ellipse cx="23167.79" cy="9033.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="23176.79" y="9036.2183">is_in_physics_frame() const : bool</text><ellipse cx="23167.79" cy="9045.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="23176.79" y="9049.0229">has_singleton(const String &amp; p_name) const : bool</text><ellipse cx="23167.79" cy="9058.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="23176.79" y="9061.8276">get_singleton_object(const String &amp; p_name) const : Object *</text><ellipse cx="23167.79" cy="9071.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="23176.79" y="9074.6323">set_editor_hint(bool p_enabled) : void</text><ellipse cx="23167.79" cy="9084.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="23176.79" y="9087.437">is_editor_hint() const : bool</text><ellipse cx="23167.79" cy="9097.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="23176.79" y="9100.2417">_Engine() : void</text></a><!--MD5=[c754248bd0e8ccbf585ab49c3c72bce4]
class C_0000979065355535690103--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833" target="_top" title="_JSON" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833" xlink:show="new" xlink:title="_JSON" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1ka2an7e8vu1m)" height="252.875" id="C_0000979065355535690103" style="stroke: #A80036; stroke-width: 1.5;" width="561" x="24595.79" y="8706.4531"/><ellipse cx="24854.54" cy="8722.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24857.5088,8728.0938 Q24856.9306,8728.3906 24856.29,8728.5313 Q24855.6494,8728.6875 24854.9463,8728.6875 Q24852.4463,8728.6875 24851.1181,8727.0469 Q24849.8056,8725.3906 24849.8056,8722.2656 Q24849.8056,8719.1406 24851.1181,8717.4844 Q24852.4463,8715.8281 24854.9463,8715.8281 Q24855.6494,8715.8281 24856.29,8715.9844 Q24856.9463,8716.1406 24857.5088,8716.4375 L24857.5088,8719.1563 Q24856.8838,8718.5781 24856.29,8718.3125 Q24855.6963,8718.0313 24855.0713,8718.0313 Q24853.7275,8718.0313 24853.04,8719.1094 Q24852.3525,8720.1719 24852.3525,8722.2656 Q24852.3525,8724.3594 24853.04,8725.4375 Q24853.7275,8726.5 24855.0713,8726.5 Q24855.6963,8726.5 24856.29,8726.2344 Q24856.8838,8725.9531 24857.5088,8725.375 L24857.5088,8728.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="24875.04" y="8726.6074">_JSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24596.79" x2="25155.79" y1="8738.4531" y2="8738.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="24596.79" x2="25155.79" y1="8746.4531" y2="8746.4531"/><ellipse cx="24606.79" cy="8757.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="24615.79" y="8760.6636">get_class() const : String</text><ellipse cx="24606.79" cy="8770.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="24615.79" y="8773.4683">_get_class_namev() const : const StringName *</text><ellipse cx="24606.79" cy="8783.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="24615.79" y="8786.2729">get_class_ptr_static() : void *</text><ellipse cx="24606.79" cy="8795.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="24615.79" y="8799.0776">get_class_static() : String</text><ellipse cx="24606.79" cy="8808.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="24615.79" y="8811.8823">get_parent_class_static() : String</text><ellipse cx="24606.79" cy="8821.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="24615.79" y="8824.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="24606.79" cy="8834.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="24615.79" y="8837.4917">get_category_static() : String</text><ellipse cx="24606.79" cy="8847.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="24615.79" y="8850.2964">inherits_static() : String</text><ellipse cx="24606.79" cy="8859.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="24615.79" y="8863.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="24606.79" cy="8872.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="24615.79" y="8875.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="24606.79" cy="8885.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="24615.79" y="8888.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="24606.79" cy="8898.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="24615.79" y="8901.5151">initialize_class() : void</text><ellipse cx="24606.79" cy="8911.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="140" x="24615.79" y="8914.3198">get_singleton() : _JSON *</text><ellipse cx="24606.79" cy="8923.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="24615.79" y="8927.1245">print(const Variant &amp; p_value, const String &amp; p_indent = "", bool p_sort_keys = false) : String</text><ellipse cx="24606.79" cy="8936.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="24615.79" y="8939.9292">parse(const String &amp; p_json) : Ref&lt;JSONParseResult&gt;</text><ellipse cx="24606.79" cy="8949.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="24615.79" y="8952.7339">_JSON() : void</text></a><!--MD5=[67369f02025bab145a8745314f1215ba]
reverse link C_0000699772808699382057 to C_0001357046052919104842--><path d="M23099.59,3371.7231 C23126.25,3646.5131 23217.59,4587.9331 23233.06,4747.4131 " fill="none" id="C_0000699772808699382057&lt;-C_0001357046052919104842" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23098.3,3358.3831,23094.8925,3364.7384,23099.4483,3370.3281,23102.8558,3363.9728,23098.3,3358.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23130.29" y="3650.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="23140.29" y="3657.02">count</text><!--MD5=[4c9c7e9fa624d339c5be6a15aac515e8]
link C_0000945411446247634027 to C_0000945411446247634027--><path d="M33986.34,15571.7531 C34008.04,15608.6531 34021.29,15662.8831 34021.29,15734.4531 C34021.29,15803.2231 34009.05,15855.9931 33988.84,15892.7531 " fill="none" id="C_0000945411446247634027-&gt;C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="33986.34,15897.1531,33994.2679,15891.3094,33988.813,15892.8075,33987.3149,15887.3526,33986.34,15897.1531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="34032.29" cy="15735.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="198" x="34039.29" y="15739.02">invalid_node_name_characters</text><!--MD5=[d934a0270b0ad177cfb5d143cb8bbb45]
reverse link C_0002153970433534458832 to C_0000945411446247634027--><path d="M33687.24,13290.2331 C33694.47,13534.7931 33708.68,14091.5631 33704.29,14559.9531 C33704.2,14569.8831 33704.1,14579.8631 33704,14589.8931 " fill="none" id="C_0002153970433534458832&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33686.85,13277.0531,33683.0297,13283.1691,33687.2059,13289.0478,33691.0262,13282.9319,33686.85,13277.0531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33710.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="33717.29" y="14556.02">name</text><!--MD5=[d934a0270b0ad177cfb5d143cb8bbb45]
reverse link C_0002153970433534458832 to C_0000945411446247634027--><path d="M33670.65,13290.1731 C33647.52,13534.6331 33601.92,14091.2231 33615.29,14559.9531 C33615.58,14569.8931 33615.87,14579.8931 33616.18,14589.9231 " fill="none" id="C_0002153970433534458832&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33671.91,13276.9931,33667.3609,13282.5883,33670.776,13288.9394,33675.3251,13283.3443,33671.91,13276.9931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33621.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="33628.29" y="14556.02">hint_string</text><!--MD5=[f7e72b70e63c22ae83a0fc14835e215b]
reverse link C_0002153970433534458832 to C_0001858199404643284193--><path d="M33664.21,13290.0131 C33609.01,13599.8131 33416.68,14388.0131 32869.29,14559.9531 C29647.97,15571.7931 18311.04,15716.8131 16773.41,15731.9331 " fill="none" id="C_0002153970433534458832&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33666.5,13276.9631,33661.5188,13282.1773,33664.4161,13288.7808,33669.3973,13283.5666,33666.5,13276.9631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32915.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="32922.29" y="14556.02">class_name</text><!--MD5=[45bfbd9f726a9d8a05612aa5a39a8ccf]
reverse link C_0000774532299576474923 to C_0000945411446247634027--><path d="M32884.39,9062.0031 C32761.74,9558.2331 32479.07,10774.9431 32382.29,11813.9531 C32326.67,12411.1431 32144.06,13962.5131 32382.29,14512.9531 C32584.11,14979.2431 33061.48,15349.3031 33378.14,15554.8631 " fill="none" id="C_0000774532299576474923&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32887.53,9049.3331,32882.2033,9054.1938,32884.6413,9060.9802,32889.968,9056.1196,32887.53,9049.3331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32388.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="32395.29" y="13168.02">name</text><!--MD5=[bf3540a227a68f80fea4c2e0c9c4a7bc]
reverse link C_0000774532299576474923 to C_0002153970433534458832--><path d="M33022.37,9061.5331 C33182.79,9530.5131 33539.2,10641.6831 33668.29,11607.9531 C33739.86,12143.6531 33708.64,12792.4431 33691.65,13049.6131 " fill="none" id="C_0000774532299576474923&lt;-C_0002153970433534458832" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33018.15,9049.2131,33016.3107,9056.1857,33022.0395,9060.5653,33023.8788,9053.5927,33018.15,9049.2131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33692.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="64" x="33699.29" y="11700.52">return_val</text><!--MD5=[47352fc66835e2ae7bf4456c577d7fb1]
reverse link C_0000774532299576474923 to C_0000788782266645010446--><path d="M32889.64,9061.8531 C32779.46,9533.8031 32512.68,10651.4631 32246.29,11577.9531 C32215.84,11683.8531 32191.17,11705.7531 32170.29,11813.9531 C32068.27,12342.8031 32073.63,13007.2131 32075.83,13139.0931 " fill="none" id="C_0000774532299576474923&lt;-C_0000788782266645010446" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32892.61,9049.1031,32887.3511,9054.0371,32889.8828,9060.7891,32895.1417,9055.8552,32892.61,9049.1031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32241.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="70" x="32248.29" y="11700.52">arguments</text><!--MD5=[deafcd45f62677e5d83ede38d0c3889d]
reverse link C_0000774532299576474923 to C_0000367042517371617856--><path d="M32966.56,9062.3631 C33009.78,9603.7931 33031.48,10965.5931 32246.29,11577.9531 C32175.71,11633.0031 19428.22,11553.3531 19357.29,11607.9531 C19293.14,11657.3431 19374.46,11734.5731 19310.29,11783.9531 C19223.64,11850.6331 3653.49,11747.9931 3566.29,11813.9531 C3114.94,12155.4031 3166.69,12988.9231 3180,13139.0831 " fill="none" id="C_0000774532299576474923&lt;-C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32965.51,9049.3331,32962.0042,9055.6347,32966.4727,9061.2944,32969.9785,9054.9929,32965.51,9049.3331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="19363.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="19370.29" y="11700.52">default_arguments</text><!--MD5=[2ffeeed3545e7b157c0ce9e8e5104c4e]
reverse link C_0001531814603945772616 to C_0001578539238208480863--><path d="M25189.23,2074.1031 C25216.06,2100.9431 25242.19,2127.9631 25267.29,2154.9531 C25320.89,2212.5931 25373.47,2289.6131 25398.37,2327.6631 " fill="none" id="C_0001531814603945772616&lt;-C_0001578539238208480863" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25179.71,2064.6131,25181.1352,2071.682,25188.2085,2073.0852,25186.7833,2066.0163,25179.71,2064.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25232.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="25242.29" y="2121.02">signal_map</text><!--MD5=[72f037eff370e80d2cbcf7aa189b1853]
reverse link C_0001531814603945772616 to C_0000751300156436098886--><path d="M25011.37,2089.1731 C25027.17,2111.1431 25042.53,2133.1131 25057.29,2154.9531 C25097.29,2214.1231 25134.31,2290.1331 25151.77,2327.7431 " fill="none" id="C_0001531814603945772616&lt;-C_0000751300156436098886" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25003.58,2078.3831,25003.8484,2085.5892,25010.6035,2088.113,25010.335,2080.9069,25003.58,2078.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25033.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="25043.29" y="2121.02">connections</text><!--MD5=[24eeaa45737871c41c3c567256e955dc]
reverse link C_0001531814603945772616 to C_0000699772808699382057--><path d="M23822.82,1684.1531 C23586.86,1784.0931 23346.59,1933.8531 23205.29,2154.9531 C23157.82,2229.2431 23167.02,2859.4431 23156.29,2946.9531 C23143.94,3047.7231 23120.81,3163.4331 23106,3232.6531 " fill="none" id="C_0001531814603945772616&lt;-C_0000699772808699382057" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23835.12,1678.9831,23828.0383,1677.623,23824.0591,1683.6369,23831.1408,1684.9969,23835.12,1678.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23208.29" y="2349.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="23218.29" y="2356.52">_lock_index</text><!--MD5=[28ef588d9e338ac6e5c120423ba24700]
reverse link C_0001531814603945772616 to C_0000051860595756965531--><path d="M25190.61,1830.9331 C25326.55,1921.2831 25458.31,2029.5131 25559.29,2154.9531 C25601.78,2207.7231 25619.58,2288.3431 25626.06,2327.7031 " fill="none" id="C_0001531814603945772616&lt;-C_0000051860595756965531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25179.55,1823.6331,25182.3478,1830.2793,25189.5589,1830.253,25186.7611,1823.6068,25179.55,1823.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25529.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="115" x="25539.29" y="2121.02">change_receptors</text><!--MD5=[ed9dc36b2f21e467e266d4389da6816d]
link C_0001531814603945772616 to C_0000933379568804427881--><path d="M25179.3,1791.9731 C25346.21,1880.8731 25518.6,1987.3831 25663.29,2107.9531 C25721.56,2156.5031 25767.31,2231.0831 25795.32,2284.8031 " fill="none" id="C_0001531814603945772616-&gt;C_0000933379568804427881" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25797.64,2289.2931,25797.0546,2279.4617,25795.3413,2284.8528,25789.9502,2283.1395,25797.64,2289.2931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25683.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="19" x="25693.29" y="2121.02">_rc</text><!--MD5=[465ae2a41eb5396ad803817584c492e2]
link C_0000933379568804427881 to C_0001531814603945772616--><path d="M25812.42,2289.4331 C25797.64,2235.9031 25769.56,2159.0931 25721.29,2107.9531 C25573.3,1951.1631 25376.23,1828.5731 25183.98,1735.7431 " fill="none" id="C_0000933379568804427881-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.44,1733.5531,25185.8073,1741.0669,25183.9431,1735.7261,25189.284,1733.8619,25179.44,1733.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25737.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="25747.29" y="2121.02">_ptr</text><!--MD5=[a69d5e275dd95acce759534bd27bf2c9]
reverse link C_0001531814603945772616 to C_0001682405743486361214--><path d="M25192.72,1536.6331 C27315.03,1657.6431 33646.47,2028.4431 33821.29,2154.9531 C33900.38,2212.1831 34164.93,2834.7431 34448.29,3643.9531 C34822.21,4711.7531 35000.47,4967.9231 35160.29,6087.9531 C35181.84,6238.9231 35263.82,11465.9731 35160.29,11577.9531 C35131.39,11609.2131 34820.49,11602.2731 34778.29,11607.9531 C34366.58,11663.4131 34273.3,11739.1831 33860.29,11783.9531 C33797.8,11790.7231 32774.36,11770.1431 32729.29,11813.9531 C32532.27,12005.4731 32633.98,12976.6131 32652.57,13139.3131 " fill="none" id="C_0001531814603945772616&lt;-C_0001682405743486361214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25179.54,1535.8831,25185.3062,1540.2133,25191.5211,1536.5561,25185.7549,1532.2259,25179.54,1535.8831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34456.29" y="3650.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="139" x="34466.29" y="3657.02">editor_section_folding</text><!--MD5=[e890cc5c6d0e6bb285e3e89ed5d4bd98]
link C_0001531814603945772616 to C_0001735438654351294549--><path d="M25179.4,1505.2931 C26619.64,1530.0131 29955.17,1637.8431 30972.29,2107.9531 C31195.67,2211.1931 31389.55,2420.5331 31510.88,2574.6831 " fill="none" id="C_0001531814603945772616-&gt;C_0001735438654351294549" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="31514.09,2578.7631,31511.6764,2569.2146,31511.0015,2574.831,31505.3851,2574.1561,31514.09,2578.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31007.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="96" x="31017.29" y="2121.02">script_instance</text><!--MD5=[c5e4261359ae37cd97c8a7ca8ed3d9da]
reverse link C_0001531814603945772616 to C_0002025812040042972946--><path d="M24771.86,2090.2831 C24801.85,2157.4231 24828.94,2218.0631 24849.42,2263.9231 " fill="none" id="C_0001531814603945772616&lt;-C_0002025812040042972946" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24766.43,2078.1231,24765.2235,2085.2326,24771.322,2089.0807,24772.5285,2081.9712,24766.43,2078.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24788.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="24798.29" y="2121.02">script</text><!--MD5=[c05e40dce802254568c704f572fe66ef]
reverse link C_0001531814603945772616 to C_0001299121424291583786--><path d="M24300.28,2090.5231 C24292.52,2112.7131 24285.02,2134.1931 24277.87,2154.6531 " fill="none" id="C_0001531814603945772616&lt;-C_0001299121424291583786" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24304.61,2078.1231,24298.8554,2082.4688,24300.6534,2089.4521,24306.408,2085.1065,24304.61,2078.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24292.29" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="24302.29" y="2121.02">metadata</text><!--MD5=[67cf5364a880881dbfa9463a33b38abe]
reverse link C_0001531814603945772616 to C_0001858199404643284193--><path d="M25192.6,1511.5331 C26259.31,1547.4331 28246.07,1678.2731 28741.29,2154.9531 C28751.32,2164.6031 29504.96,6074.1031 29506.29,6087.9531 C29564.8,6695.1431 29523.73,10968.2031 29506.29,11577.9531 C29468.94,12884.0031 30063.47,13426.0931 29338.29,14512.9531 C28605.32,15611.5031 18244.5,15722.2731 16773.52,15732.4831 " fill="none" id="C_0001531814603945772616&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25179.31,1511.0831,25185.1702,1515.2853,25191.303,1511.4921,25185.4428,1507.29,25179.31,1511.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29463.29" y="4769.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29473.29" y="4776.02">_class_name</text><!--MD5=[9f9c127cde67f8af23da46dde2ce4ce8]
link C_0001531814603945772616 to C_0001858199404643284193--><path d="M25179.47,1518.8331 C26026.63,1562.2631 27517.63,1696.0231 28722.29,2107.9531 C28762.41,2121.6731 28780.43,2120.6131 28805.29,2154.9531 C28910.04,2299.6131 28820.08,2382.3031 28884.29,2548.9531 C29096.77,3100.3831 29395.06,3125.0531 29565.29,3690.9531 C29738.48,4266.6931 29932.73,14053.2131 29545.29,14512.9531 C28681.33,15538.1431 18272.86,15711.6531 16778.52,15731.3231 " fill="none" id="C_0001531814603945772616-&gt;C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16773.35,15731.3931,16782.4062,15735.2642,16778.3495,15731.3217,16782.2919,15727.265,16773.35,15731.3931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29701.29" y="4769.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="64" x="29711.29" y="4776.02">_class_ptr</text><!--MD5=[d327e113621300c939a9250d421ffcd5]
reverse link C_0001531814603945772616 to C_0001357046052919104842--><path d="M23824.13,1805.2531 C23692.61,1888.6031 23565.69,1989.3331 23468.29,2107.9531 C23114.21,2539.1731 23219.78,4510.0231 23233.86,4747.0931 " fill="none" id="C_0001531814603945772616&lt;-C_0001357046052919104842" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23835.23,1798.2631,23828.0215,1798.0696,23825.0704,1804.6492,23832.2789,1804.8427,23835.23,1798.2631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23298.29" y="2760.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="150" x="23308.29" y="2767.52">instance_binding_count</text><!--MD5=[9f6312e8f49fb01007aa82352e3e18a3]
reverse link C_0001531814603945772616 to C_0000104564426296396960--><path d="M23829.87,1509.8631 C22067.47,1549.8131 17475.29,1714.9231 17475.29,2350.9531 C17475.29,2350.9531 17475.29,2350.9531 17475.29,3653.4531 C17475.29,3873.5831 17285.08,11416.1131 17434.29,11577.9531 C17490.06,11638.4431 17740.55,11554.7331 17803.29,11607.9531 C17864.78,11660.1131 17823.79,11706.8231 17847.29,11783.9531 C17935.94,12074.8231 18050.34,12394.5131 18147.14,12652.7431 " fill="none" id="C_0001531814603945772616&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="23835.03,1509.7531,23825.9409,1505.9598,23830.0313,1509.8674,23826.1238,1513.9577,23835.03,1509.7531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17481.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17488.29" y="3657.02">«friend»</text><!--MD5=[a1d7a68971fac74740bd2ff8f508d74d]
reverse link C_0001531814603945772616 to C_0001778859257025660860--><path d="M23830.36,1704.3031 C23580.35,1801.3031 23304.94,1934.4831 23086.29,2107.9531 C23051.81,2135.3131 23020.69,2170.8731 22994.43,2206.3231 " fill="none" id="C_0001531814603945772616&lt;-C_0001778859257025660860" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="23835.15,1702.4431,23825.3132,1701.9567,23830.4862,1704.2457,23828.1973,1709.4188,23835.15,1702.4431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="23092.29" cy="2117.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="23099.29" y="2121.02">«friend»</text><!--MD5=[a1d7a68971fac74740bd2ff8f508d74d]
reverse link C_0001531814603945772616 to C_0001778859257025660860--><path d="M23816.32,1691.7731 C23559.45,1787.5931 23277.85,1923.2431 23060.29,2107.9531 C23028.27,2135.1331 23000.76,2170.7431 22978.25,2206.2931 " fill="none" id="C_0001531814603945772616&lt;-C_0001778859257025660860-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23813.98,1685.1731,23835.17,1684.7931,23818.84,1698.3031,23813.98,1685.1731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bfb0bd8a69f4f74c042f91302129fecd]
reverse link C_0001531814603945772616 to C_0000132048052014479231--><path d="M25184.66,1722.3131 C25441.76,1828.0331 25726.68,1971.7831 25952.29,2154.9531 C26005.56,2198.2031 26049.23,2265.5231 26074.01,2308.9231 " fill="none" id="C_0001531814603945772616&lt;-C_0000132048052014479231" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25179.74,1720.2931,25186.5468,1727.4112,25184.3655,1722.1918,25189.5848,1720.0105,25179.74,1720.2931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25907.29" cy="2117.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="25914.29" y="2121.02">«friend»</text><!--MD5=[b349530a27aaee85f524a15949be3331]
link C_0000132048052014479231 to C_0001531814603945772616--><path d="M26085.31,2308.9031 C26069.39,2255.5431 26035.05,2163.7631 25975.29,2107.9531 C25754.98,1902.1731 25455.42,1760.9431 25184.34,1666.6431 " fill="none" id="C_0000132048052014479231-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.55,1664.9831,25186.7569,1671.6958,25184.2775,1666.6113,25189.362,1664.1319,25179.55,1664.9831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25996.29" cy="2117.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="19" x="26003.29" y="2121.02">obj</text><!--MD5=[ffb696d15bc654aa90b9653d940ba57b]
link C_0000219886141561409828 to C_0001531814603945772616--><path d="M24339.03,800.4831 C24345.27,826.2531 24353.66,860.9231 24363.37,901.0731 " fill="none" id="C_0000219886141561409828-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24365.0489" cy="908.0174" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="24363.1678" x2="24366.93" y1="900.2417" y2="915.7931"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="24372.8246" x2="24357.2732" y1="906.1363" y2="909.8985"/><!--MD5=[a29fa1eddeab9e55f3e1f73ad0d0fc92]
link C_0001267214583673362755 to C_0001531814603945772616--><path d="M12771,752.4331 C14238.93,756.4231 24108.44,786.3631 24233.29,868.9531 C24249.87,879.9231 24265.46,892.1331 24280.1,905.3831 " fill="none" id="C_0001267214583673362755-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24285.2832" cy="910.2421" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="24279.4465" x2="24291.12" y1="904.7711" y2="915.7131"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="24290.7542" x2="24279.8122" y1="904.4053" y2="916.0789"/><!--MD5=[a29fa1eddeab9e55f3e1f73ad0d0fc92]
link C_0001267214583673362755 to C_0001531814603945772616--><path d="M12770.84,763.2831 C14033.4,842.1031 21521.65,1309.5731 23830.13,1453.6831 " fill="none" id="C_0001267214583673362755-&gt;C_0001531814603945772616-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="23835.2,1453.9931,23826.4695,1449.4348,23830.2099,1453.6786,23825.9662,1457.419,23835.2,1453.9931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="14594.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="43" x="14601.29" y="882.02">source</text><!--MD5=[a29fa1eddeab9e55f3e1f73ad0d0fc92]
link C_0001267214583673362755 to C_0001531814603945772616--><path d="M12770.85,761.8231 C13130.26,781.4531 13957.82,827.1131 14653.29,868.9531 C18103.57,1076.5131 22231.95,1346.0831 23829.71,1451.2231 " fill="none" id="C_0001267214583673362755-&gt;C_0001531814603945772616-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="23834.97,1451.5631,23826.2525,1446.9799,23829.9808,1451.2343,23825.7264,1454.9626,23834.97,1451.5631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="14924.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="39" x="14931.29" y="882.02">target</text><!--MD5=[cefd988d71eccb1a821b8696bd59678c]
reverse link C_0001267214583673362755 to C_0001858199404643284193--><path d="M12394.86,837.9631 C12393.33,838.3031 12391.81,838.6331 12390.29,838.9531 C12348.93,847.6531 248.65,840.6131 217.29,868.9531 C9.46,1056.8231 152.29,1215.7931 152.29,1495.9531 C152.29,1495.9531 152.29,1495.9531 152.29,13164.4531 C152.29,13785.3431 -216.23,14115.4731 217.29,14559.9531 C815.03,15172.8031 14710.96,15668.6131 16427.01,15727.5731 " fill="none" id="C_0001267214583673362755&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="12407.54,834.8531,12400.762,832.3916,12395.8829,837.7015,12402.6609,840.163,12407.54,834.8531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="158.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="165.29" y="3657.02">signal</text><!--MD5=[cefd988d71eccb1a821b8696bd59678c]
reverse link C_0001267214583673362755 to C_0001858199404643284193--><path d="M12394.86,837.9531 C12393.33,838.2931 12391.81,838.6331 12390.29,838.9531 C12087.64,903.3131 1549.95,835.0531 1251.29,915.9531 C752.4,1051.0831 243.29,979.0831 243.29,1495.9531 C243.29,1495.9531 243.29,1495.9531 243.29,13164.4531 C243.29,13464.3131 116.57,14269.2631 291.29,14512.9531 C788.02,15205.7431 14709.14,15672.9231 16427,15727.9931 " fill="none" id="C_0001267214583673362755&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="12407.53,834.8131,12400.7461,832.3679,12395.8798,837.6894,12402.6637,840.1347,12407.53,834.8131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="249.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="50" x="256.29" y="3657.02">method</text><!--MD5=[e0bcb0691af37a52a5d6539567493f1b]
reverse link C_0001267214583673362755 to C_0000367042517371617856--><path d="M12394.9,837.8131 C12393.36,838.2031 12391.83,838.5831 12390.29,838.9531 C11787.93,983.5231 1259.29,876.4831 1259.29,1495.9531 C1259.29,1495.9531 1259.29,1495.9531 1259.29,3653.4531 C1259.29,4658.8731 1008.65,5222.0531 1792.29,5851.9531 C1853.66,5901.2831 3154.21,5825.6931 3209.29,5881.9531 C3264.02,5937.8431 3224.09,5981.1431 3209.29,6057.9531 C3206.58,6072.0531 3200.02,6073.8531 3197.29,6087.9531 C3053.12,6832.3531 3173.13,12723.1431 3181.81,13139.2831 " fill="none" id="C_0001267214583673362755&lt;-C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="12407.72,834.3431,12400.8825,832.0522,12396.138,837.4827,12402.9755,839.7736,12407.72,834.3431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1265.29" cy="3296.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="1272.29" y="3300.02">binds</text><!--MD5=[823a143a71700de2dee8f67b9b5676a1]
link C_0000250357724807605097 to C_0001531814603945772616--><path d="M32805.89,794.0531 C32734.55,811.5931 32648.21,829.9431 32569.29,838.9531 C32147.8,887.0731 29174.26,836.2031 28751.29,868.9531 C28576.04,882.5231 26350.78,1217.1331 25194.72,1391.8431 " fill="none" id="C_0000250357724807605097-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25187.38" cy="1392.9567" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25195.2901" x2="25179.47" y1="1391.7603" y2="1394.1531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25188.5764" x2="25186.1836" y1="1400.8667" y2="1385.0467"/><!--MD5=[63356db21c17edf7af154c059834b621]
reverse link C_0000250357724807605097 to C_0000774532299576474923--><path d="M33096.48,797.8231 C33146.86,813.0731 33204.68,828.7631 33258.29,838.9531 C33329.11,852.4131 33531.81,816.5331 33581.29,868.9531 C33772.71,1071.7131 33603.29,1217.1131 33603.29,1495.9531 C33603.29,1495.9531 33603.29,1495.9531 33603.29,4772.4531 C33603.29,6259.9231 33165.62,8014.5831 33002.56,8616.6831 " fill="none" id="C_0000250357724807605097&lt;-C_0000774532299576474923" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33083.84,793.9531,33088.41,799.5312,33095.3167,797.4581,33090.7467,791.88,33083.84,793.9531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33609.29" cy="2763.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="33616.29" y="2767.52">user</text><!--MD5=[fed6bc410413bdf90b9aebd1d2474545]
link C_0002064336919270342687 to C_0001531814603945772616--><path d="M24587.4,800.4931 C24575.95,820.8631 24564.1,845.2831 24557.29,868.9531 C24553.36,882.6231 24549.7,896.5231 24546.29,910.6031 " fill="none" id="C_0002064336919270342687-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24545.05,915.7931,24551.0268,907.9651,24546.2087,910.9292,24543.2446,906.1111,24545.05,915.7931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24560.29" y="875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="24570.29" y="882.02">instances</text><!--MD5=[fed6bc410413bdf90b9aebd1d2474545]
link C_0002064336919270342687 to C_0001531814603945772616--><path d="M24630.43,800.5631 C24635.36,825.9631 24639.26,857.5931 24636.29,885.9531 C24635.44,894.0931 24634.53,902.2731 24633.56,910.5031 " fill="none" id="C_0002064336919270342687-&gt;C_0001531814603945772616-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24632.95,915.6331,24637.9756,907.163,24633.535,910.6675,24630.0305,906.2269,24632.95,915.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24639.29" y="875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="105" x="24649.29" y="882.02">instance_checks</text><!--MD5=[8b696ada1a164533cee31d9d01e1d4f0]
reverse link C_0002064336919270342687 to C_0001531814603945772616--><path d="M24533.11,803.8931 C24511.53,821.6231 24491.13,843.5131 24479.29,868.9531 C24472.22,884.1431 24466.11,899.7631 24460.85,915.7231 " fill="none" id="C_0002064336919270342687&lt;-C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="24537.15,800.6331,24527.6324,803.1658,24533.2568,803.7705,24532.6522,809.3949,24537.15,800.6331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24485.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24492.29" y="882.02">«friend»</text><!--MD5=[293fa7784106f5f5337199f4462ce0c4]
link C_0001040552259499621557 to C_0002064336919270342687--><path d="M24618.29,346.2531 C24618.29,416.0131 24618.29,591.2231 24618.29,686.2531 " fill="none" id="C_0001040552259499621557-&gt;C_0002064336919270342687" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24618.29" cy="693.3531" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="24618.29" x2="24618.29" y1="685.3531" y2="701.3531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="24626.29" x2="24610.29" y1="693.3531" y2="693.3531"/><!--MD5=[6176b754db1099095469d86baa598663]
reverse link C_0001725595510223069271 to C_0001858199404643284193--><path d="M3854.06,3490.9031 C3817.98,3552.1231 3783.75,3621.8531 3764.29,3690.9531 C3731.74,3806.5531 3791.2,5767.0131 3706.29,5851.9531 C3619.62,5938.6631 2688.8,5794.0931 2603.29,5881.9531 C2548.74,5938.0131 2552.84,5998.1731 2603.29,6057.9531 C2654.47,6118.5931 2727.47,6027.8631 2779.29,6087.9531 C2878.92,6203.4531 2890.58,11425.5631 2897.29,11577.9531 C2897.88,11591.3031 2898.66,11594.6031 2899.29,11607.9531 C2914.59,11930.4931 2783.53,14257.6931 2981.29,14512.9531 C3847.59,15631.1431 14905.98,15725.1431 16427.24,15732.7931 " fill="none" id="C_0001725595510223069271&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3860.81,3479.5731,3854.3006,3482.6761,3854.6613,3489.8781,3861.1707,3486.7752,3860.81,3479.5731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2900.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="2910.29" y="8837.52">name</text><!--MD5=[1109c8b45d174a8043b3007e6901a4cf]
reverse link C_0001725595510223069271 to C_0000367042517371617856--><path d="M3941.69,3492.8131 C3927.77,3555.7031 3914.27,3625.8931 3906.29,3690.9531 C3891.67,3810.1731 3921.19,5765.9931 3837.29,5851.9531 C3754.27,5937.0031 3385.69,5796.2931 3303.29,5881.9531 C3193.01,5996.6031 3206.79,11448.8931 3204.29,11607.9531 C3194.48,12232.0331 3184.44,12997.0731 3182.59,13139.1731 " fill="none" id="C_0001725595510223069271&lt;-C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3944.57,3479.9231,3939.3601,3484.9088,3941.9585,3491.6355,3947.1684,3486.6498,3944.57,3479.9231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3306.29" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="3316.29" y="5974.52">default_arguments</text><!--MD5=[c0b23ac663a0b4bd2241530c03c4684d]
reverse link C_0001725595510223069271 to C_0001169846630986447699--><path d="M4317.89,3359.7331 C4481.35,3408.9631 4666.65,3495.0331 4773.29,3643.9531 C5034.83,4009.1631 4910.41,4621.1431 4880.96,4747.2931 " fill="none" id="C_0001725595510223069271&lt;-C_0001169846630986447699" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4305.17,3355.9631,4309.7886,3361.501,4316.6769,3359.3677,4312.0583,3353.8298,4305.17,3355.9631" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4779.29,3648.0195,4783.29,3652.0195,4779.29,3656.0195,4775.29,3652.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4786.29" y="3657.02">arg_names</text><!--MD5=[94cc3f54f033bdab9f6f8be3fdefa009]
reverse link C_0000626842387047507019 to C_0000774532299576474923--><path d="M30706.42,4871.8831 C31079.46,5056.4631 31846.81,5488.5331 32246.29,6087.9531 C32792.77,6907.9431 32910.17,8126.6831 32935.39,8616.5831 " fill="none" id="C_0000626842387047507019&lt;-C_0000774532299576474923" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30694.68,4866.0931,30698.2884,4872.3365,30705.4394,4871.4069,30701.8309,4865.1635,30694.68,4866.0931" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="32218.29,5965.5195,32222.29,5969.5195,32218.29,5973.5195,32214.29,5969.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="70" x="32225.29" y="5974.52">arguments</text><!--MD5=[57aea8c2eac04ad3bb696ae56b1027e2]
reverse link C_0001725595510223069271 to C_0000626842387047507019--><path d="M4325.27,3302.7131 C6182.01,3337.3831 15422.14,3508.0631 22973.29,3613.9531 C23162.23,3616.6031 29609.28,3600.7131 29775.29,3690.9531 C30175.32,3908.4131 30390.96,4456.6731 30463.75,4676.8231 " fill="none" id="C_0001725595510223069271&lt;-C_0000626842387047507019" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4324.96,3309.7131,4305.09,3302.3331,4325.22,3295.7131,4324.96,3309.7131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[36a1d1bdbde270b6b2c85f87797101d1]
reverse link C_0002161264899189627575 to C_0001858199404643284193--><path d="M2951.92,6070.7731 C2953.61,6076.5131 2955.09,6082.2731 2956.29,6087.9531 C3218.12,7326.4631 3004.02,10518.3231 3029.29,11783.9531 C3035.35,12087.2231 2895.67,14291.8031 3103.29,14512.9531 C4062.23,15534.3631 14920.84,15711.6531 16427.28,15731.3831 " fill="none" id="C_0002161264899189627575&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2947.9,6058.2331,2945.923,6065.1679,2951.564,6069.6601,2953.541,6062.7253,2947.9,6058.2331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3035.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="3042.29" y="11700.52">type_name</text><!--MD5=[d4dc04b24a9f5e64d045669d490fb2af]
reverse link C_0001725595510223069271 to C_0002161264899189627575--><path d="M3901.32,3498.5831 C3884.02,3545.4531 3868.22,3595.7431 3858.29,3643.9531 C3833.53,3764.1931 3854.38,5764.4231 3768.29,5851.9531 C3727.56,5893.3731 3303.7,5873.0431 3246.29,5881.9531 C3233.65,5883.9131 3220.79,5886.1431 3207.84,5888.5731 " fill="none" id="C_0001725595510223069271&lt;-C_0002161264899189627575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3894.81,3496.0131,3908.41,3479.7631,3907.91,3500.9531,3894.81,3496.0131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b12528307832d955820af94cfa0a24ce]
reverse link C_0000514530488699023626 to C_0001858199404643284193--><path d="M3497.18,11797.2331 C3450.71,12285.2531 3282.16,14395.0031 3823.29,14559.9531 C6339.27,15326.8731 15086.3,15677.4731 16427.23,15727.2131 " fill="none" id="C_0000514530488699023626&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3498.46,11783.9531,3493.9048,11789.5433,3497.313,11795.8982,3501.8682,11790.308,3498.46,11783.9531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3733.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="3740.29" y="13168.02">type_name</text><!--MD5=[97e429f1cd7019ad053f02f6682df600]
reverse link C_0001725595510223069271 to C_0000514530488699023626--><path d="M3983.9,3499.7431 C3981.72,3561.1831 3979.36,3628.8231 3977.29,3690.9531 C3973.3,3811.0031 3993.64,5765.4631 3910.29,5851.9531 C3842.13,5922.6831 3536.35,5810.1831 3469.29,5881.9531 C3367.13,5991.3031 3486.96,10890.6431 3505.07,11607.7331 " fill="none" id="C_0001725595510223069271&lt;-C_0000514530488699023626" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3976.91,3499.3431,3984.62,3479.6031,3990.91,3499.8431,3976.91,3499.3431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[53f987b2a1d9878a5e1924c9e1999673]
reverse link C_0001500902353747816170 to C_0001858199404643284193--><path d="M3773,6071.3231 C3779.85,7023.5531 3835.53,14431.7931 3911.29,14512.9531 C4808.37,15473.9631 14971.55,15702.4731 16427.14,15730.3431 " fill="none" id="C_0001500902353747816170&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3772.91,6058.1031,3768.9496,6064.1294,3772.9891,6070.1029,3776.9495,6064.0766,3772.91,6058.1031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3838.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="3845.29" y="11700.52">type_name</text><!--MD5=[c76f15a600908a5d9f5ada2cec176d92]
reverse link C_0001725595510223069271 to C_0001500902353747816170--><path d="M4002.13,3499.7431 C4030.89,4069.2431 4099.15,5651.8131 3981.29,5851.9531 C3974.96,5862.7031 3967.25,5872.5431 3958.55,5881.5331 " fill="none" id="C_0001725595510223069271&lt;-C_0001500902353747816170" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3995.13,3499.8431,4001.11,3479.5131,4009.11,3499.1331,3995.13,3499.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a283e665aa50e2c6f50fcf7bcd63554]
reverse link C_0001463339540638256927 to C_0001858199404643284193--><path d="M4208.3,11796.5531 C4055.07,12263.6531 3481.71,14228.5131 4558.29,14559.9531 C6922.65,15287.8431 15130.77,15669.7431 16427.25,15726.1131 " fill="none" id="C_0001463339540638256927&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4212.38,11784.1531,4206.7018,11788.5981,4208.6209,11795.5491,4214.2991,11791.1042,4212.38,11784.1531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4419.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4426.29" y="13168.02">type_name</text><!--MD5=[e2f4438b33038cd1a3fe79142aa1fcf6]
reverse link C_0001725595510223069271 to C_0001463339540638256927--><path d="M4021.84,3499.7531 C4029.75,3561.0531 4037.2,3628.6131 4041.29,3690.9531 C4095.76,4520.7931 4224.04,10793.6631 4240.54,11607.9331 " fill="none" id="C_0001725595510223069271&lt;-C_0001463339540638256927" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4014.86,3500.4031,4019.2,3479.6631,4028.74,3498.5731,4014.86,3500.4031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2154fea7909c76a8070f23473df8354d]
reverse link C_0001770130608234301442 to C_0001858199404643284193--><path d="M4424.47,6071.4531 C4445.27,7026.8231 4608.52,14472.2531 4646.29,14512.9531 C5487.25,15419.1431 15020.29,15693.6031 16427.25,15729.2731 " fill="none" id="C_0001770130608234301442&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4424.19,6058.1931,4420.3228,6064.2796,4424.4537,6070.1902,4428.3209,6064.1038,4424.19,6058.1931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4563.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4570.29" y="11700.52">type_name</text><!--MD5=[a393e23103db017e69067d89a910bc2e]
reverse link C_0001725595510223069271 to C_0001770130608234301442--><path d="M4077.19,3498.5231 C4094.62,3545.5831 4111.27,3595.9831 4123.29,3643.9531 C4337.59,4499.3731 4403.33,5572.4331 4418.47,5881.8231 " fill="none" id="C_0001725595510223069271&lt;-C_0001770130608234301442" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4070.57,3500.8031,4070.08,3479.6231,4083.67,3495.8831,4070.57,3500.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3cf6f50b6a5efe8eecff906ae7ba49b2]
reverse link C_0001227602006568872099 to C_0001858199404643284193--><path d="M4943.34,11796.4031 C4790.32,12262.8431 4217.75,14225.1431 5293.29,14559.9531 C7506.25,15248.8431 15176.42,15661.4631 16427.22,15724.8731 " fill="none" id="C_0001227602006568872099&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4947.42,11784.0231,4941.7418,11788.4681,4943.6609,11795.4191,4949.3391,11790.9742,4947.42,11784.0231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5154.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="5161.29" y="13168.02">type_name</text><!--MD5=[f2688015b58ca8510cf11b1f391c7a17]
reverse link C_0001725595510223069271 to C_0001227602006568872099--><path d="M4181.24,3495.1031 C4228.87,3554.2431 4275.43,3621.8231 4307.29,3690.9531 C4722.3,4591.2431 4610.63,4897.2631 4725.29,5881.9531 C4995.54,8202.8731 4983.16,11075.4931 4978.25,11607.9531 " fill="none" id="C_0001725595510223069271&lt;-C_0001227602006568872099" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4175.69,3499.3731,4168.46,3479.4531,4186.53,3490.5131,4175.69,3499.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[24ed2b397bfd75777763001ef999242c]
reverse link C_0000721345300172868993 to C_0001858199404643284193--><path d="M5076.07,6071.3931 C5096.87,6625.6831 5199.62,9367.2431 5280.29,11607.9531 C5286.1,11769.3331 5272.36,14394.6531 5382.29,14512.9531 C6170.47,15361.1031 15069.45,15683.6031 16427.06,15728.0031 " fill="none" id="C_0000721345300172868993&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5075.58,6058.3231,5071.8071,6064.4684,5076.0285,6070.3147,5079.8015,6064.1694,5075.58,6058.3231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5288.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="5295.29" y="11700.52">type_name</text><!--MD5=[b529a9bda62b26da95e7f2b619cb436a]
reverse link C_0001725595510223069271 to C_0000721345300172868993--><path d="M4324.64,3335.2331 C4547.7,3380.5031 4825.48,3478.5731 4967.29,3690.9531 C5447.13,4409.5431 5185.12,5558.5831 5097.42,5881.8331 " fill="none" id="C_0001725595510223069271&lt;-C_0000721345300172868993" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4323.2,3342.0931,4304.94,3331.3431,4325.91,3328.3531,4323.2,3342.0931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2f600bfdfed375e1d84ad5960d178506]
reverse link C_0000779559418824132960 to C_0001858199404643284193--><path d="M5678.27,11796.6231 C5525.3,12263.0031 4954.25,14221.4031 6028.29,14559.9531 C8090.07,15209.8531 15223.1,15652.5431 16427.07,15723.4531 " fill="none" id="C_0000779559418824132960&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5682.35,11784.2431,5676.6718,11788.6881,5678.5909,11795.6391,5684.2691,11791.1942,5682.35,11784.2431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5889.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="5896.29" y="13168.02">type_name</text><!--MD5=[c16129dae5dd7a3ee99d746565d6891c]
reverse link C_0001725595510223069271 to C_0000779559418824132960--><path d="M4324.94,3318.0331 C4587.35,3353.9331 4940.02,3447.7531 5134.29,3690.9531 C5745.71,4456.3831 5315.91,4904.1031 5375.29,5881.9531 C5394.48,6197.8331 5267.06,11314.4331 5442.29,11577.9531 C5449.58,11588.9031 5458.13,11598.8431 5467.62,11607.8531 " fill="none" id="C_0001725595510223069271&lt;-C_0000779559418824132960" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4323.92,3324.9631,4305.01,3315.3931,4325.76,3311.0831,4323.92,3324.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[40a23b537608769ced7193cb410553b3]
reverse link C_0001326581917102107425 to C_0001858199404643284193--><path d="M5512.94,6067.7531 C5507.54,6074.0831 5502.62,6080.8131 5498.29,6087.9531 C5419.27,6218.3831 5393.63,11467.0431 5498.29,11577.9531 C5577.28,11661.6531 5934.84,11525.6631 6015.29,11607.9531 C6071.74,11665.6831 6063.54,14453.6031 6118.29,14512.9531 C6850.39,15306.4631 15121.24,15673.4631 16427.13,15726.6231 " fill="none" id="C_0001326581917102107425&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5521.82,6058.1231,5514.8145,6059.8328,5513.6982,6066.9569,5520.7037,6065.2473,5521.82,6058.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6041.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6048.29" y="11700.52">type_name</text><!--MD5=[0b841243efd14e05f8183f2b5b313466]
reverse link C_0001725595510223069271 to C_0001326581917102107425--><path d="M4324.82,3333.7431 C4700.94,3383.0031 5279.05,3482.8731 5423.29,3643.9531 C6019.56,4309.8031 5812.81,5544.4031 5742.01,5881.8031 " fill="none" id="C_0001725595510223069271&lt;-C_0001326581917102107425" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4323.76,3340.6631,4304.83,3331.1531,4325.57,3326.7831,4323.76,3340.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6553a4ed0721951ec26a6849f549381]
reverse link C_0000845455246171879191 to C_0001858199404643284193--><path d="M6413.33,11796.4331 C6260.63,12261.9431 5690.65,14217.0131 6763.29,14559.9531 C8674.39,15170.9631 15272.72,15642.9731 16427.24,15721.8331 " fill="none" id="C_0000845455246171879191&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6417.4,11784.0731,6411.7264,11788.524,6413.6528,11795.4731,6419.3264,11791.0222,6417.4,11784.0731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6624.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6631.29" y="13168.02">type_name</text><!--MD5=[1abd71a672dca6d0c6bdaeacdbe720ba]
reverse link C_0001725595510223069271 to C_0000845455246171879191--><path d="M4325.17,3330.2331 C4764.64,3381.8231 5502.82,3495.4231 5684.29,3690.9531 C6354.7,4413.2831 5949.29,4899.3831 6025.29,5881.9531 C6031.33,5959.9431 6078.69,6000.7931 6025.29,6057.9531 C5958.23,6129.7231 5651.35,6016.1831 5584.29,6087.9531 C5480.18,6199.3831 5479.4,11467.2531 5584.29,11577.9531 C5626.92,11622.9431 6080.16,11597.7531 6141.29,11607.9531 C6142.65,11608.1831 6144.02,11608.4131 6145.39,11608.6431 " fill="none" id="C_0001725595510223069271&lt;-C_0000845455246171879191" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4324.18,3337.1631,4305.12,3327.8931,4325.8,3323.2531,4324.18,3337.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fbd9cc6d64d97bfa96618a21d20dbb24]
reverse link C_0000081704011730798793 to C_0001858199404643284193--><path d="M6057.53,6058.3231 C5976.26,6064.7031 5669.58,6055.4531 5639.29,6087.9531 C5587.31,6143.7331 5586.11,11523.3131 5639.29,11577.9531 C5725.43,11666.4431 6662.6,11521.0031 6750.29,11607.9531 C6807.63,11664.8031 6798.8,14453.3731 6853.29,14512.9531 C7529.31,15252.0831 15173.64,15662.5031 16426.94,15725.0331 " fill="none" id="C_0000081704011730798793&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6070.47,6056.8531,6064.0557,6053.5581,6058.5471,6058.2116,6064.9614,6061.5066,6070.47,6056.8531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6777.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6784.29" y="11700.52">type_name</text><!--MD5=[dad312aeb585e3289ae3ff32a11bd594]
reverse link C_0001725595510223069271 to C_0000081704011730798793--><path d="M4324.99,3305.3331 C4851.01,3326.7231 5837.59,3399.2431 6073.29,3643.9531 C6694.24,4288.6231 6468.93,5541.6731 6393.13,5881.9131 " fill="none" id="C_0001725595510223069271&lt;-C_0000081704011730798793" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4324.63,3312.3231,4304.92,3304.5331,4325.19,3298.3331,4324.63,3312.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ee1664e15557051b6018f82bc0fefac8]
reverse link C_0002027329212022555569 to C_0001858199404643284193--><path d="M7148.27,11796.5931 C6995.71,12261.7931 6427.58,14212.0231 7498.29,14559.9531 C9258.87,15132.0631 15322.8,15632.4531 16427.03,15719.9331 " fill="none" id="C_0002027329212022555569&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7152.34,11784.2431,7146.6679,11788.696,7148.5967,11795.6443,7154.2688,11791.1915,7152.34,11784.2431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7359.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="7366.29" y="13168.02">type_name</text><!--MD5=[18dd516b58568163dd367d722af09765]
reverse link C_0001725595510223069271 to C_0002027329212022555569--><path d="M4324.81,3305.0831 C4905.93,3327.5031 6068.22,3407.5331 6340.29,3690.9531 C6432.27,3786.7631 6767.71,5962.5731 6675.29,6057.9531 C6601.88,6133.7231 5799.7,6012.1831 5726.29,6087.9531 C5620.18,6197.4731 5619.87,11468.7231 5726.29,11577.9531 C5770.89,11623.7331 6813.11,11598.3031 6876.29,11607.9531 C6877.66,11608.1631 6879.03,11608.3731 6880.4,11608.5931 " fill="none" id="C_0001725595510223069271&lt;-C_0002027329212022555569" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4324.54,3312.0731,4304.82,3304.3231,4325.07,3298.0831,4324.54,3312.0731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4697dac272b7aed678d38b116d927321]
reverse link C_0000512545424965820103 to C_0001858199404643284193--><path d="M6707.65,6057.2931 C6586.74,6064.3931 5843.44,6053.6831 5810.29,6087.9531 C5704.27,6197.5731 5703.43,11469.1531 5810.29,11577.9531 C5875.51,11644.3531 7402.2,11566.0231 7485.29,11607.9531 C8937.7,12340.8531 8322.03,13668.0931 9712.29,14512.9531 C10900.96,15235.3031 15477.14,15642.1331 16427.03,15719.7531 " fill="none" id="C_0000512545424965820103&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6720.64,6056.1331,6714.308,6052.6827,6708.6876,6057.2005,6715.0196,6060.651,6720.64,6056.1331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7777.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="7784.29" y="11700.52">type_name</text><!--MD5=[fe2ed7ed42cd4786efef197dc1a0f49c]
reverse link C_0001725595510223069271 to C_0000512545424965820103--><path d="M4325.09,3316.2831 C5016.72,3360.5731 6556.02,3476.9131 6723.29,3643.9531 C7357.01,4276.7931 7122.16,5539.6731 7043.74,5881.7731 " fill="none" id="C_0001725595510223069271&lt;-C_0000512545424965820103" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4324.39,3323.2531,4304.88,3314.9931,4325.28,3309.2831,4324.39,3323.2531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fea6c7b8cfa5712234b6612d17a41427]
reverse link C_0002087322448002339587 to C_0001858199404643284193--><path d="M9716.79,11797.2231 C9767.24,12193.9231 10003.2,13672.8731 10795.29,14512.9531 C11597.94,15364.2231 15548.87,15665.8531 16427.11,15722.9231 " fill="none" id="C_0002087322448002339587&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9715.14,11784.1331,9711.916,11790.5834,9716.63,11796.0403,9719.8541,11789.59,9715.14,11784.1331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="10801.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="10808.29" y="13168.02">type_name</text><!--MD5=[c20b6e93f71478fe84fa0a15dcb5c548]
reverse link C_0001725595510223069271 to C_0002087322448002339587--><path d="M4325.18,3317.0731 C5069,3366.2531 6811.43,3500.7031 6994.29,3690.9531 C7730.39,4456.7931 8068.69,5299.2031 7325.29,6057.9531 C7268.24,6116.1831 5915.34,6029.7231 5858.29,6087.9531 C5804.93,6142.4231 5804.84,11523.5831 5858.29,11577.9531 C5892.57,11612.8231 7569.42,11606.5131 7618.29,11607.9531 C8253.77,11626.6131 8997.62,11660.5131 9403.4,11680.0331 " fill="none" id="C_0001725595510223069271&lt;-C_0002087322448002339587" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4324.59,3324.0531,4305.09,3315.7531,4325.51,3310.0831,4324.59,3324.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0a32efc566a127e7ee0bcdd173b65cd7]
reverse link C_0000031906668996487033 to C_0001858199404643284193--><path d="M559.24,6071.6831 C509.38,6636.4931 271.74,9467.3831 302.29,11783.9531 C304.29,11935.6031 269.94,14402.9031 374.29,14512.9531 C957.7,15128.2031 14720.85,15663.0131 16427.24,15727.0431 " fill="none" id="C_0000031906668996487033&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="560.41,6058.3731,555.8983,6063.9985,559.3557,6070.3267,563.8674,6064.7014,560.41,6058.3731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="308.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="315.29" y="11700.52">type_name</text><!--MD5=[39ff125dd0afe8ba230792e2ce80b20d]
reverse link C_0001725595510223069271 to C_0000031906668996487033--><path d="M3657.4,3298.4331 C3032.42,3308.8031 1718.07,3364.2731 1375.29,3643.9531 C645.12,4239.7331 574.1,5534.7631 568.43,5881.8831 " fill="none" id="C_0001725595510223069271&lt;-C_0000031906668996487033" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.4,3291.4231,3677.51,3298.1031,3657.63,3305.4231,3657.4,3291.4231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c5acbe2511d99e2def2a5535ac9b2243]
reverse link C_0001134043413451695381 to C_0001858199404643284193--><path d="M673.27,11796.6731 C519.53,12265.4131 -57.16,14240.2631 1023.29,14559.9531 C4118.77,15475.8531 14927.65,15703.1131 16427.17,15730.4631 " fill="none" id="C_0001134043413451695381&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="677.37,11784.2331,671.6964,11788.684,673.6228,11795.6331,679.2964,11791.1822,677.37,11784.2331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="883.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="890.29" y="13168.02">type_name</text><!--MD5=[da830b13a1d08eb57097d99553db1d40]
reverse link C_0001725595510223069271 to C_0001134043413451695381--><path d="M3657.6,3321.5931 C2992.19,3375.3831 1552.69,3511.4831 1423.29,3690.9531 C849.01,4487.4731 1526.6,5047.6331 963.29,5851.9531 C948.86,5872.5631 927.88,5860.1731 915.29,5881.9531 C765.61,6140.9831 714.8,10902.5531 708.09,11607.9231 " fill="none" id="C_0001725595510223069271&lt;-C_0001134043413451695381" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.05,3314.6131,3677.54,3319.9831,3658.17,3328.5731,3657.05,3314.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5783799f0680878364566d813ba01cd3]
reverse link C_0001212767095252394753 to C_0001858199404643284193--><path d="M1213.46,6071.4131 C1168.87,7007.5631 837.4,14178.1031 1128.29,14512.9531 C1657.83,15122.5131 14763.94,15660.7431 16427.26,15726.6831 " fill="none" id="C_0001212767095252394753&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1214.09,6058.0831,1209.8046,6063.8827,1213.5098,6070.0691,1217.7952,6064.2695,1214.09,6058.0831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1027.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1034.29" y="11700.52">type_name</text><!--MD5=[6fd06a8464d09c9534d7b0aadebcf77d]
reverse link C_0001725595510223069271 to C_0001212767095252394753--><path d="M3657.59,3319.8031 C3015.56,3368.0731 1658.99,3487.5131 1517.29,3643.9531 C1352.46,3825.9331 1555.76,5642.7031 1427.29,5851.9531 C1420.66,5862.7631 1412.64,5872.6531 1403.65,5881.7031 " fill="none" id="C_0001725595510223069271&lt;-C_0001212767095252394753" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.31,3312.8031,3677.78,3318.2931,3658.36,3326.7631,3657.31,3312.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3321ca8fd8657dfe2d73b6ad7261807c]
reverse link C_0001038624653636336005 to C_0001858199404643284193--><path d="M1369.03,11796.1031 C1366.43,11801.9831 1364.15,11807.9531 1362.29,11813.9531 C1185.12,12386.9631 955.47,14072.2431 1362.29,14512.9531 C2439.08,15679.4431 14814.01,15731.6031 16427.27,15733.4431 " fill="none" id="C_0001038624653636336005&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1374.8,11784.1631,1368.587,11787.8236,1369.5764,11794.9665,1375.7893,11791.306,1374.8,11784.1631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1368.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1375.29" y="13168.02">type_name</text><!--MD5=[2ba05fb841dbe1bb36a71b1440c88383]
reverse link C_0001725595510223069271 to C_0001038624653636336005--><path d="M3657.39,3320.9931 C3029.44,3370.5131 1723.28,3490.8631 1588.29,3643.9531 C1553.58,3683.3131 1455.43,10739.6231 1443.49,11607.7231 " fill="none" id="C_0001725595510223069271&lt;-C_0001038624653636336005" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.12,3313.9931,3677.6,3319.4031,3658.21,3327.9531,3657.12,3313.9931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[daf066193adf31dfc56223eb392e96f6]
reverse link C_0000375613860790632263 to C_0001858199404643284193--><path d="M1748.59,13264.6031 C1706.67,13523.5431 1636.1,14218.7431 2010.29,14559.9531 C3131.35,15582.1931 14857.49,15718.4331 16426.99,15732.1131 " fill="none" id="C_0000375613860790632263&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1750.75,13251.4931,1745.8275,13256.7628,1748.7986,13263.3334,1753.7211,13258.0637,1750.75,13251.4931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2016.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2023.29" y="14556.02">type_name</text><!--MD5=[76cdcfe53eae5f1be3a433c2ee385d6b]
reverse link C_0001725595510223069271 to C_0000375613860790632263--><path d="M3657.5,3321.7931 C3110.25,3367.5631 2049.67,3475.2431 1716.29,3643.9531 C1689.93,3657.2931 1680.8,3663.7431 1669.29,3690.9531 C1474.38,4151.6631 1677.47,7593.6631 1745.29,11607.9531 C1754.74,12166.9131 1763.3,12838.9831 1766.23,13075.2231 " fill="none" id="C_0001725595510223069271&lt;-C_0000375613860790632263" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.04,3314.8031,3677.55,3320.1231,3658.2,3328.7631,3657.04,3314.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1f64c9cc378153a2e5d2bfdb3115b47f]
reverse link C_0001053911039767528095 to C_0001858199404643284193--><path d="M1935.23,6071.1731 C1904.62,6832.1831 1713.99,11673.1331 1813.29,11783.9531 C1854.02,11829.4031 2044.67,11769.3131 2086.29,11813.9531 C2290.98,12033.4531 1995,14287.6631 2193.29,14512.9531 C3183.4,15637.8331 14862.13,15726.1131 16427.27,15732.9031 " fill="none" id="C_0001053911039767528095&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1935.76,6058.1431,1931.5193,6063.9755,1935.272,6070.1332,1939.5127,6064.3008,1935.76,6058.1431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1819.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1826.29" y="11700.52">type_name</text><!--MD5=[4b4db5a06613e61fad32d12372358e70]
reverse link C_0001725595510223069271 to C_0001053911039767528095--><path d="M3657.59,3323.9531 C3059.2,3376.6531 1854.17,3499.5831 1730.29,3643.9531 C1650.41,3737.0431 1668.26,5746.1331 1730.29,5851.9531 C1736.6,5862.7131 1744.3,5872.5631 1752.98,5881.5631 " fill="none" id="C_0001725595510223069271&lt;-C_0001053911039767528095" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.21,3316.9531,3677.75,3322.1831,3658.43,3330.9031,3657.21,3316.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[63995b2b972f0bd028109810f5781d0e]
reverse link C_0000462780498821063561 to C_0001858199404643284193--><path d="M2214.12,11797.1831 C2197.32,12244.0131 2149.22,14052.5231 2448.29,14512.9531 C2472.02,14549.4831 2492.58,14547.4231 2534.29,14559.9531 C5316.75,15395.4231 15011.63,15689.9531 16427.27,15728.8731 " fill="none" id="C_0000462780498821063561&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2214.62,11784.0531,2210.3985,11789.8994,2214.1715,11796.0447,2218.3929,11790.1984,2214.62,11784.0531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2454.29" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2461.29" y="13168.02">type_name</text><!--MD5=[2a416d6ba2cea9a95a7ed7b92f7c9540]
reverse link C_0001725595510223069271 to C_0000462780498821063561--><path d="M3657.41,3305.9931 C3102.03,3329.6731 2026.18,3411.3731 1792.29,3690.9531 C1715.26,3783.0331 1710.27,5764.2831 1792.29,5851.9531 C1860.76,5925.1431 2173.82,5808.7631 2242.29,5881.9531 C2650.21,6317.9731 2283.43,10915.5531 2225.67,11607.8731 " fill="none" id="C_0001725595510223069271&lt;-C_0000462780498821063561" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.48,3298.9831,3677.76,3305.1431,3658.07,3312.9731,3657.48,3298.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dd43d07d1b11b23e8fd0cbbb89b1b53e]
reverse link C_0000803203155573352820 to C_0001858199404643284193--><path d="M2135.37,4872.1931 C2186.95,5090.8231 2307.44,5629.3431 2357.29,6087.9531 C2621.1,8514.8831 2436.95,9138.5531 2531.29,11577.9531 C2534.45,11659.5031 2616.98,14447.1731 2665.29,14512.9531 C3522.71,15680.2931 14883.38,15731.8731 16427.07,15733.4831 " fill="none" id="C_0000803203155573352820&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2132.37,4859.5131,2129.8561,4866.2718,2135.128,4871.1919,2137.6419,4864.4332,2132.37,4859.5131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2544.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2551.29" y="11700.52">type_name</text><!--MD5=[08dc6c2f911341194ca327d3cafcfc19]
reverse link C_0001725595510223069271 to C_0000803203155573352820--><path d="M3657.8,3341.5331 C3253.43,3402.6731 2604.26,3523.7731 2430.29,3690.9531 C2145.66,3964.4831 2111.6,4478.4631 2109.89,4683.1331 " fill="none" id="C_0001725595510223069271&lt;-C_0000803203155573352820" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3656.95,3334.5831,3677.77,3338.5331,3659.03,3348.4231,3656.95,3334.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[691503ad50075dbc9d15f24fb88ab03a]
reverse link C_0001728875246190146863 to C_0001858199404643284193--><path d="M2721.67,4872.2431 C2669.82,5065.3231 2559.7,5504.2931 2521.29,5881.9531 C2513.38,5959.7731 2504.35,5981.5831 2521.29,6057.9531 C2524.48,6072.3131 2531.92,6073.6331 2535.29,6087.9531 C2562.16,6201.8831 2701.22,14416.3231 2767.29,14512.9531 C3578.81,15699.7031 14887.6,15734.5331 16427.19,15733.7531 " fill="none" id="C_0001728875246190146863&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2725.08,4859.6131,2719.656,4864.3649,2721.9561,4871.1994,2727.3801,4866.4476,2725.08,4859.6131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2677.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2684.29" y="11700.52">type_name</text><!--MD5=[ad4724cdb00bb7c073f35084dbe05f7c]
reverse link C_0001725595510223069271 to C_0001728875246190146863--><path d="M3658.14,3363.7531 C3461.08,3419.8831 3220.96,3519.3631 3068.29,3690.9531 C2807.03,3984.6031 2759.39,4483.1531 2750.97,4683.3931 " fill="none" id="C_0001725595510223069271&lt;-C_0001728875246190146863" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3656.53,3356.9331,3677.68,3358.2931,3660.3,3370.4231,3656.53,3356.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca4ff7cb11ecc22aebae9cef7d802bc5]
reverse link C_0000319868049196089894 to C_0001858199404643284193--><path d="M3392.17,4872.5931 C3396.69,5090.9831 3373.07,5609.8231 3068.29,5851.9531 C2980.1,5922.0231 2639.55,5799.9831 2562.29,5881.9531 C2508.64,5938.8731 2513.98,5996.4331 2562.29,6057.9531 C2597.05,6102.2031 2650.06,6044.0831 2685.29,6087.9531 C2883.5,6334.7331 2800.95,11467.5431 2809.29,11783.9531 C2817.43,12092.4431 2683.11,14335.8831 2895.29,14559.9531 C3873.57,15593.0031 14907.09,15719.6431 16427.07,15732.2131 " fill="none" id="C_0000319868049196089894&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3391.86,4859.5931,3388.0062,4865.688,3392.15,4871.5896,3396.0038,4865.4947,3391.86,4859.5931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2815.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2822.29" y="11700.52">type_name</text><!--MD5=[a10f761581de782c0803a55370c182db]
reverse link C_0001725595510223069271 to C_0000319868049196089894--><path d="M3812.46,3495.7531 C3777,3542.1331 3742.64,3592.9431 3716.29,3643.9531 C3529.63,4005.3131 3434.03,4488.0931 3400.97,4683.1931 " fill="none" id="C_0001725595510223069271&lt;-C_0000319868049196089894" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3806.99,3491.3831,3824.78,3479.8731,3818.06,3499.9631,3806.99,3491.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M18342.71,13674.1931 C18320.71,13952.9831 18258.57,14294.5731 18099.29,14559.9531 C17774.44,15101.2231 17099.9,15488.0531 16778.3,15649.5931 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16773.6,15651.9531,16783.4381,15651.4933,16778.0693,15649.7113,16779.8513,15644.3425,16773.6,15651.9531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18105.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="47" x="18112.29" y="14556.02">classes</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M18374.47,13674.0731 C18368.28,13952.8331 18322.89,14294.4231 18168.29,14559.9531 C17838.13,15127.0431 17114.64,15506.0331 16778.5,15658.2431 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16773.58,15660.4631,16783.4286,15660.3944,16778.1348,15658.4006,16780.1286,15653.1067,16773.58,15660.4631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18174.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="170" x="18181.29" y="14556.02">resource_base_extensions</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M18064.18,13674.3531 C17910.85,13942.9931 17713.02,14274.9631 17518.29,14559.9531 C17258.8,14939.7431 16916.86,15358.1331 16732.22,15578.2531 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16728.98,15582.1231,16737.8304,15577.8022,16732.195,15578.2938,16731.7034,15572.6583,16728.98,15582.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17524.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="103" x="17531.29" y="14556.02">compat_classes</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M18127.91,13674.2031 C18002.25,13946.6131 17831.87,14282.1231 17643.29,14559.9531 C17373.55,14957.3531 16980.98,15363.6731 16762.48,15578.3431 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16758.63,15582.1131,16767.8576,15578.6706,16762.2011,15578.6135,16762.2582,15572.9569,16758.63,15582.1131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17649.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="17656.29" y="14556.02">default_values</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M18183.53,13674.0731 C18083.48,13949.1931 17939.28,14287.3031 17757.29,14559.9531 C17474.22,14984.0631 17024.51,15386.4231 16777.39,15591.7631 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16773.41,15595.0731,16782.8916,15592.4087,16777.2593,15591.8821,16777.7859,15586.2498,16773.41,15595.0731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17763.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="17770.29" y="14556.02">default_values_cached</text><!--MD5=[ba964ffb66bb1329413fe3c100b0ab0b]
link C_0000104564426296396960 to C_0000210234563198599367--><path d="M18721.08,13674.3131 C18980.02,13980.5731 19353.43,14342.8531 19779.29,14512.9531 C19965.87,14587.4731 34061.66,14506.2431 34244.29,14589.9531 C34366.87,14646.1331 34480.26,14725.6031 34583.25,14816.8031 " fill="none" id="C_0000104564426296396960-&gt;C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="34587.21,14820.3231,34583.1429,14811.3532,34583.4737,14817.0004,34577.8266,14817.3313,34587.21,14820.3231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32961.29" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="32968.29" y="14556.02">default_values</text><!--MD5=[f728ac2c311f9c9f533bae5aa126394c]
reverse link C_0001778859257025660860 to C_0001858199404643284193--><path d="M22693.33,2353.2231 C21809.05,2355.6631 18466.1,2378.1831 18042.29,2578.9531 C17211.16,2972.6731 15465.55,5833.7931 15386.29,6087.9531 C15295.49,6379.1231 15364.79,11273.7131 15386.29,11577.9531 C15479.19,12892.2231 15339.39,13279.7831 15803.29,14512.9531 C15962.46,14936.0531 16287.53,15362.9231 16469.5,15582.3131 " fill="none" id="C_0001778859257025660860&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="22706.49,2353.1931,22700.4768,2349.2129,22694.4901,2353.2327,22700.5032,2357.2129,22706.49,2353.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15491.29" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="15501.29" y="5974.52">_class_name</text><!--MD5=[d895a2b3bcb124753bfb70e9baa17b4b]
reverse link C_0001778859257025660860 to C_0000699772808699382057--><path d="M22913.78,2510.8231 C22920.84,2658.2231 22933.65,2867.0931 22952.29,2946.9531 C22976.61,3051.1431 23027.48,3164.9231 23060.74,3232.9431 " fill="none" id="C_0001778859257025660860&lt;-C_0000699772808699382057" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="22913.16,2497.6531,22909.448,2503.8354,22913.727,2509.6397,22917.439,2503.4574,22913.16,2497.6531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22955.29" y="2760.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="53" x="22965.29" y="2767.52">refcount</text><!--MD5=[d895a2b3bcb124753bfb70e9baa17b4b]
reverse link C_0001778859257025660860 to C_0000699772808699382057--><path d="M22997.07,2509.4531 C23007.32,2532.2131 23016.5,2555.7931 23023.29,2578.9531 C23024.44,2582.8731 23069.97,3060.1231 23086.43,3232.9031 " fill="none" id="C_0001778859257025660860&lt;-C_0000699772808699382057-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="22991.62,2497.6231,22990.4905,2504.7452,22996.6303,2508.5271,22997.7598,2501.405,22991.62,2497.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23062.29" y="2760.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="23072.29" y="2767.52">refcount_init</text><!--MD5=[0a2b60ba7d2c96e1d65f8bc42ff8af0b]
reverse link C_0001778859257025660860 to C_0000104564426296396960--><path d="M22702.27,2473.0231 C21834.66,2985.8531 18485.19,5015.1831 17950.29,6087.9531 C17814.2,6360.9031 17913.13,11275.2231 17950.29,11577.9531 C17995.12,11943.0631 18095.97,12345.1031 18184.55,12652.8431 " fill="none" id="C_0001778859257025660860&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="22706.7,2470.4031,22696.9183,2471.5511,22702.3988,2472.9525,22700.9973,2478.433,22706.7,2470.4031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20748.29" cy="4772.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="20755.29" y="4776.02">«friend»</text><!--MD5=[4def885f8334d479e8b07d6a9cf14ba6]
reverse link C_0001213123647052694419 to C_0001858199404643284193--><path d="M17690.48,8972.3131 C17805.61,9423.1431 18098.08,10861.8431 17363.29,11577.9531 C17302.95,11636.7631 17054.6,11560.0331 16985.29,11607.9531 C16902.06,11665.5031 16912.3,11715.6431 16888.29,11813.9531 C16745.92,12397.0531 16839.55,13915.3631 16783.29,14512.9531 C16746.82,14900.3931 16669.99,15352.4131 16628.42,15582.3631 " fill="none" id="C_0001213123647052694419&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="17687.21,8959.5831,17684.8336,8966.3914,17690.2041,8971.2036,17692.5806,8964.3953,17687.21,8959.5831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16891.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="16901.29" y="13168.02">_class_name</text><!--MD5=[11aa9a0bb56ee0f681895cd87e708f0c]
reverse link C_0001213123647052694419 to C_0000104564426296396960--><path d="M17650.92,8964.6531 C17648.98,9380.9731 17661.54,10711.6431 17880.29,11783.9531 C17940.31,12078.1431 18044.85,12396.3531 18139.63,12652.8431 " fill="none" id="C_0001213123647052694419&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="17650.95,8959.4931,17646.8986,8968.4701,17650.9214,8964.493,17654.8985,8968.5158,17650.95,8959.4931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17886.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17893.29" y="11700.52">«friend»</text><!--MD5=[9c1588adceb28ea989716b6537d0f66c]
reverse link C_0001778859257025660860 to C_0001213123647052694419--><path d="M22686.4,2355.8331 C21791.45,2368.5331 18475.32,2425.7831 18316.29,2578.9531 C18150.01,2739.1031 18365.12,3429.4931 18226.29,3613.9531 C18203.96,3643.6331 18179.21,3623.3731 18148.29,3643.9531 C18124.22,3659.9731 18115.38,3664.6831 18103.29,3690.9531 C17260.03,5523.8731 17551.33,8110.1031 17633.67,8706.1131 " fill="none" id="C_0001778859257025660860&lt;-C_0001213123647052694419" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="22686.35,2348.8331,22706.45,2355.5531,22686.55,2362.8331,22686.35,2348.8331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b642425c83424b61917059e5da81b445]
reverse link C_0000218299049716973303 to C_0001858199404643284193--><path d="M27358.49,5865.4631 C27360,5940.7531 27361.3,6015.4731 27362.29,6087.9531 C27395.67,8527.7231 27491.03,9141.3531 27362.29,11577.9531 C27327.69,12232.9131 27504.31,14038.6731 27051.29,14512.9531 C26307.9,15291.2431 18076.09,15670.9231 16773.46,15726.3131 " fill="none" id="C_0000218299049716973303&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="27358.22,5852.3831,27354.3394,5858.4611,27358.4573,5864.3808,27362.3379,5858.3028,27358.22,5852.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27363.29" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="27373.29" y="11700.52">_class_name</text><!--MD5=[bd154d8958cda7fc523b5af6c622945b]
reverse link C_0000218299049716973303 to C_0001872058027933416994--><path d="M27575.92,5857.2631 C27577.72,5865.5231 27579.51,5873.7531 27581.29,5881.9531 C27598.24,5959.9731 27600,5980.0031 27617.29,6057.9531 C27781.55,6798.2231 27986.87,7645.3931 28125.37,8206.7231 " fill="none" id="C_0000218299049716973303&lt;-C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="27574.8,5852.1231,27572.7938,5861.7655,27575.8574,5857.01,27580.6129,5860.0736,27574.8,5852.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27623.29" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27630.29" y="5974.52">«friend»</text><!--MD5=[3fd4490e8add7f4a5625d4623d397047]
link C_0001872058027933416994 to C_0000218299049716973303--><path d="M28177.09,8206.6631 C28071.94,7606.2131 27895.61,6675.7831 27687.29,5881.9531 C27685.14,5873.7431 27682.96,5865.4931 27680.75,5857.2331 " fill="none" id="C_0001872058027933416994-&gt;C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="27679.37,5852.0731,27677.8473,5861.8036,27680.6699,5856.9012,27685.5722,5859.7238,27679.37,5852.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27730.29" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="118" x="27740.29" y="5974.52">edited_scene_root</text><!--MD5=[3fd4490e8add7f4a5625d4623d397047]
link C_0001872058027933416994 to C_0000218299049716973303--><path d="M28250.51,8206.6931 C28207.49,7601.0031 28105.7,6662.1831 27867.29,5881.9531 C27864.8,5873.7831 27862.25,5865.6031 27859.65,5857.4131 " fill="none" id="C_0001872058027933416994-&gt;C_0000218299049716973303-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="27858.02,5852.3031,27856.9565,5862.0944,27859.5454,5857.0647,27864.5751,5859.6537,27858.02,5852.3031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27914.29" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="91" x="27924.29" y="5974.52">current_scene</text><!--MD5=[025b4de6bd2e68b8ca567d9f667db6aa]
reverse link C_0001872058027933416994 to C_0000218299049716973303--><path d="M28079.75,8201.7931 C27907.33,7643.3231 27663.02,6803.2031 27507.29,6057.9531 C27496.95,6008.4531 27484.67,5936.8031 27471.45,5852.3031 " fill="none" id="C_0001872058027933416994&lt;-C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28081.27,8206.7031,28082.4402,8196.924,28079.7966,8201.9252,28074.7954,8199.2815,28081.27,8206.7031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27513.29" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27520.29" y="5974.52">«friend»</text><!--MD5=[b604a94a8074bade127c96b8a1da6977]
reverse link C_0000218299049716973303 to C_0000104564426296396960--><path d="M26598.51,5383.3831 C26338.39,5567.6331 26032.71,5748.3231 25723.29,5851.9531 C25259.89,6007.1531 21669.75,5735.4231 21331.29,6087.9531 C21225.67,6197.9731 21367.69,11469.6631 21260.29,11577.9531 C21205.08,11633.6231 19915.74,11566.3231 19849.29,11607.9531 C19774.84,11654.5931 19833.15,11736.3731 19759.29,11783.9531 C19639.05,11861.4331 19238.32,11739.3031 19116.29,11813.9531 C18811.91,12000.1631 18616.21,12354.1131 18498.16,12652.6631 " fill="none" id="C_0000218299049716973303&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26602.72,5380.3931,26593.0688,5382.3565,26598.6475,5383.2939,26597.7101,5388.8726,26602.72,5380.3931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="21337.29" cy="8833.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="21344.29" y="8837.52">«friend»</text><!--MD5=[70070708faa8146b449b4995936967c8]
reverse link C_0001531814603945772616 to C_0000218299049716973303--><path d="M24570.26,2098.0331 C24597.05,2310.8431 24628.86,2508.1231 24658.29,2548.9531 C24906.82,2893.6531 25167.94,2729.3331 25513.29,2976.9531 C25903.58,3256.7931 26288.61,3621.4731 26602.78,3948.8631 " fill="none" id="C_0001531814603945772616&lt;-C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24563.3,2098.7731,24567.77,2078.0631,24577.19,2097.0431,24563.3,2098.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c50f7161c688797db185b0408c3ff27c]
reverse link C_0001951177692366602790 to C_0001858199404643284193--><path d="M24766.74,3591.2531 C24749.43,3599.6531 24731.91,3607.2931 24714.29,3613.9531 C24511.62,3690.5831 23903.49,3546.1631 23742.29,3690.9531 C23015.22,4344.0431 24085.78,5225.9031 23335.29,5851.9531 C23280.55,5897.6231 18268.18,5854.7131 18202.29,5881.9531 C18081.76,5931.7831 18044.98,5968.2131 17993.29,6087.9531 C17872.38,6368.0431 18084.56,11360.7931 17870.29,11577.9531 C17804.93,11644.1931 17098.41,11541.4731 17033.29,11607.9531 C16976.82,11665.6031 17002.3,14433.3031 16989.29,14512.9531 C16924.47,14909.9531 16757.06,15355.2331 16664.38,15582.3931 " fill="none" id="C_0001951177692366602790&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24778.69,3585.3131,24771.5368,3584.4011,24767.9437,3590.6533,24775.0969,3591.5653,24778.69,3585.3131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17996.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="18006.29" y="8837.52">_class_name</text><!--MD5=[3320896de7ce0d6466aa5eab6e649e4e]
reverse link C_0001951177692366602790 to C_0000945411446247634027--><path d="M25508.88,3350.9331 C26060.53,3430.0331 27129.27,3576.4231 28042.29,3660.9531 C28097.82,3666.0931 28498.18,3658.1631 28543.29,3690.9531 C29389.38,4305.8831 29203.6,4855.0531 29402.29,5881.9531 C29462.41,6192.6431 29427.36,11262.4031 29451.29,11577.9531 C29550.96,12892.0331 29077.71,13462.3331 29873.29,14512.9531 C30309.53,15089.0331 32554.01,15535.1131 33378.25,15681.8031 " fill="none" id="C_0001951177692366602790&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25495.95,3349.0831,25501.3225,3353.8931,25507.8289,3350.7839,25502.4563,3345.9739,25495.95,3349.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29454.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="29464.29" y="8837.52">name</text><!--MD5=[3320896de7ce0d6466aa5eab6e649e4e]
reverse link C_0001951177692366602790 to C_0000945411446247634027--><path d="M25509.22,3337.8631 C26075.4,3400.4431 27187.6,3521.6131 28133.29,3613.9531 C28229,3623.2931 28923.26,3627.2531 28995.29,3690.9531 C29199.35,3871.4231 29474.75,5817.8731 29510.29,6087.9531 C29632.59,7017.2931 29373.55,13769.3931 29944.29,14512.9531 C30375.75,15075.0531 32565.49,15528.1031 33378.17,15679.3331 " fill="none" id="C_0001951177692366602790&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25495.95,3336.3931,25501.4738,3341.0286,25507.8772,3337.7125,25502.3534,3333.0771,25495.95,3336.3931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29584.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="29594.29" y="8837.52">path_cache</text><!--MD5=[3320896de7ce0d6466aa5eab6e649e4e]
reverse link C_0001951177692366602790 to C_0000945411446247634027--><path d="M25509.32,3343.5931 C26075.04,3413.5331 27186,3544.0131 28133.29,3613.9531 C28451.37,3637.4331 28531.69,3629.1931 28850.29,3643.9531 C29055.89,3653.4731 29629.44,3545.7331 29775.29,3690.9531 C29948.08,3862.9731 29888.76,5638.2531 29896.29,5881.9531 C29903.71,6121.6031 29849.96,14320.0031 29992.29,14512.9531 C30407.56,15075.8931 32570.78,15527.5831 33378.07,15678.9531 " fill="none" id="C_0001951177692366602790&lt;-C_0000945411446247634027-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25496.05,3341.9531,25501.5172,3346.6553,25507.9604,3343.4172,25502.4932,3338.715,25496.05,3341.9531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29902.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="29912.29" y="8837.52">import_path</text><!--MD5=[73ef91ca258cdf41725932dce529de2e]
link C_0001951177692366602790 to C_0000218299049716973303--><path d="M25427.39,3614.0331 C25452.43,3631.7631 25478.48,3647.7131 25505.29,3660.9531 C25592.99,3704.2531 25631.92,3656.0731 25723.29,3690.9531 C26030.19,3808.1231 26336.81,3993.5731 26598.48,4177.9331 " fill="none" id="C_0001951177692366602790-&gt;C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26602.72,4180.9131,26597.6763,4172.4537,26598.636,4178.0286,26593.0611,4178.9882,26602.72,4180.9131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25508.29" y="3650.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="25518.29" y="3657.02">local_scene</text><!--MD5=[15931407f9b4d3dfacc95626ff56eba4]
reverse link C_0001951177692366602790 to C_0000104564426296396960--><path d="M25173.25,3619.4031 C25214.92,4174.7331 25207.26,5303.6431 24545.29,5851.9531 C24108.62,6213.6531 20012.98,6038.4931 19446.29,6057.9531 C19416.83,6058.9631 18405.9,6066.8731 18385.29,6087.9531 C18327.94,6146.6131 18338.48,11039.3731 18343.52,12652.7631 " fill="none" id="C_0001951177692366602790&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25172.85,3614.1131,25169.5561,3623.3948,25173.2357,3619.0982,25177.5323,3622.7778,25172.85,3614.1131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24501.29" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24508.29" y="5974.52">«friend»</text><!--MD5=[007e28acd4d135ba2c4f8234f2e24eda]
reverse link C_0001778859257025660860 to C_0001951177692366602790--><path d="M23091.56,2511.2831 C23126.37,2542.5431 23153.98,2568.8431 23160.29,2578.9531 C23250.37,2723.0831 23129.79,2843.0431 23264.29,2946.9531 C23329.73,2997.5031 24674.76,2948.2231 24752.29,2976.9531 C24761.13,2980.2231 24769.91,2983.7931 24778.62,2987.6331 " fill="none" id="C_0001778859257025660860&lt;-C_0001951177692366602790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23086.5,2516.1631,23076.24,2497.6231,23095.82,2505.7131,23086.5,2516.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[61db9f2a674de4dd20c1e8d6466365f6]
reverse link C_0001485048025194488343 to C_0001858199404643284193--><path d="M35591.39,9081.3931 C35716.95,9612.6031 35924.41,10871.1831 35292.29,11577.9531 C35246.68,11628.9531 35202.64,11577.6431 35141.29,11607.9531 C35035.14,11660.4031 35051.77,11741.3531 34941.29,11783.9531 C34887.35,11804.7531 32901.46,11773.3731 32860.29,11813.9531 C32642.91,12028.2331 32992.37,14339.4631 32781.29,14559.9531 C32196.79,15170.5331 18477.74,15667.9731 16773.5,15727.4831 " fill="none" id="C_0001485048025194488343&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35588.35,9068.5931,35585.8433,9075.3545,35591.1205,9080.2689,35593.6272,9073.5075,35588.35,9068.5931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32863.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="32873.29" y="13168.02">_class_name</text><!--MD5=[55b2a8d5d68dbf7117485c4d04f1ed20]
reverse link C_0001485048025194488343 to C_0000945411446247634027--><path d="M35500.71,9081.8831 C35451.04,9592.5131 35338.69,10798.7731 35282.29,11813.9531 C35273.97,11963.7331 35298.49,14397.8431 35202.29,14512.9531 C35160.93,14562.4531 35122.13,14524.6031 35060.29,14542.9531 C35040.19,14548.9131 35036.76,14555.4231 35016.29,14559.9531 C34919.31,14581.4331 34657.99,14543.3031 34570.29,14589.9531 C34329.1,14718.2431 34132.64,14943.7131 33986.41,15160.7331 " fill="none" id="C_0001485048025194488343&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35501.98,9068.8431,35497.4187,9074.4283,35500.8199,9080.7869,35505.3812,9075.2017,35501.98,9068.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35285.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="35295.29" y="13168.02">locale</text><!--MD5=[55b2a8d5d68dbf7117485c4d04f1ed20]
reverse link C_0001485048025194488343 to C_0000945411446247634027--><path d="M35545.18,9081.8231 C35575.92,9573.8031 35602.49,10701.7331 35292.29,11577.9531 C35281.72,11607.8131 35142.21,11783.8631 35132.29,11813.9531 C35038.32,12099.0031 35215.23,14283.8831 35021.29,14512.9531 C34955.6,14590.5531 34658.48,14539.3531 34570.29,14589.9531 C34331.03,14727.2531 34133.7,14956.9931 33986.34,15174.6831 " fill="none" id="C_0001485048025194488343&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35544.34,9068.5331,35540.7306,9074.7759,35545.105,9080.5087,35548.7143,9074.2659,35544.34,9068.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35135.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="35145.29" y="13168.02">fallback</text><!--MD5=[f95868a4bcc46beaa6866e3b4ea59e8f]
link C_0001485048025194488343 to C_0001485048025194488343--><path d="M35558.85,8597.3931 C35643.42,8128.7231 35766.29,8207.2431 35766.29,8832.9531 C35766.29,9456.3731 35644.32,9536.6031 35559.78,9073.6431 " fill="none" id="C_0001485048025194488343-&gt;C_0001485048025194488343" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="35558.85,9068.5131,35556.5098,9078.0799,35559.7369,9073.4338,35564.3829,9076.6609,35558.85,9068.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35774.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="35784.29" y="8837.52">singleton</text><!--MD5=[7c58e4f37afb0d5a6a6c8a0d7e05a07b]
reverse link C_0001485048025194488343 to C_0000104564426296396960--><path d="M35582.85,9073.8431 C35697.05,9616.2831 35882.97,10939.5731 35160.29,11577.9531 C35087.01,11642.6931 31715.1,11544.9831 31640.29,11607.9531 C31579.47,11659.1531 31669.27,11732.9331 31608.29,11783.9531 C31545.29,11836.6631 19855.62,11783.5931 19779.29,11813.9531 C19352.99,11983.5331 18979.44,12346.1031 18720.55,12652.6131 " fill="none" id="C_0001485048025194488343&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="35581.76,9068.6831,35579.6942,9078.3129,35582.7872,9073.5765,35587.5236,9076.6694,35581.76,9068.6831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="31646.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="31653.29" y="11700.52">«friend»</text><!--MD5=[575bdde0c40cde995e5d193ed3ac9a95]
reverse link C_0001531814603945772616 to C_0001485048025194488343--><path d="M25199.61,1553.1931 C26707.91,1671.2031 30404.26,1947.7431 33506.29,2077.9531 C33548.9,2079.7431 35010.19,2078.7731 35041.29,2107.9531 C35162.38,2221.5731 35449.28,7420.5731 35512.73,8597.0131 " fill="none" id="C_0001531814603945772616&lt;-C_0001485048025194488343" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25198.88,1560.1631,25179.49,1551.6231,25199.98,1546.2031,25198.88,1560.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[105b5b587ddf98014e1a550a5acdc50e]
reverse link C_0000066148521405667716 to C_0001858199404643284193--><path d="M34455.05,9145.9131 C34500.57,9729.7431 34501.97,10982.1331 33771.29,11577.9531 C33727.66,11613.5331 32811.26,11588.8531 32758.29,11607.9531 C32618.29,11658.4431 32561.55,11681.1931 32494.29,11813.9531 C32426.5,11947.7731 32520.74,14407.2531 32414.29,14512.9531 C32361.89,14564.9931 31157.74,14528.5931 31085.29,14542.9531 C31064.73,14547.0331 31061.73,14555.2731 31041.29,14559.9531 C28131.79,15225.5331 18206.89,15665.5531 16773.4,15726.2431 " fill="none" id="C_0000066148521405667716&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34454,9132.6731,34450.4873,9138.9708,34454.9496,9144.6355,34458.4623,9138.3378,34454,9132.6731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32497.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="32507.29" y="13168.02">_class_name</text><!--MD5=[d39e92b29be60c83b30c1a4b2e8c7bab]
reverse link C_0000066148521405667716 to C_0000945411446247634027--><path d="M34476.53,9145.7131 C34570.93,9686.5231 34757.38,10834.6531 34823.29,11813.9531 C34843.43,12113.1631 35001.83,14272.0031 34823.29,14512.9531 C34753.32,14607.3931 34667.1,14523.3031 34570.29,14589.9531 C34337.13,14750.4931 34137.25,14991.0931 33986.5,15210.2531 " fill="none" id="C_0000066148521405667716&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34474.25,9132.6531,34471.3456,9139.2535,34476.3211,9144.473,34479.2255,9137.8727,34474.25,9132.6531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="34913.29,13159.0195,34917.29,13163.0195,34913.29,13167.0195,34909.29,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="34920.29" y="13168.02">resource_path</text><!--MD5=[a6badd9f9dcaf3086eae6031b522d0ad]
reverse link C_0000066148521405667716 to C_0002063845175027013341--><path d="M34420.75,9145.8131 C34439.87,9723.1531 34569.66,10956.1431 35302.29,11577.9531 C35845.63,12039.1031 36393.35,11301.2131 36888.29,11813.9531 C37314.75,12255.7531 37206.75,13945.9931 37196.29,14559.9531 C37188.39,15023.6431 37162.94,15589.9531 37157.38,15710.3031 " fill="none" id="C_0000066148521405667716&lt;-C_0002063845175027013341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34420.33,9132.7231,34416.5231,9138.8475,34420.7122,9144.717,34424.5191,9138.5927,34420.33,9132.7231" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="37221.29,13159.0195,37225.29,13163.0195,37221.29,13167.0195,37217.29,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="87" x="37228.29" y="13168.02">input_presets</text><!--MD5=[2dc6087e93f271bd3bd7602f5b86331c]
reverse link C_0000066148521405667716 to C_0001682405743486361214--><path d="M34444.42,9145.9431 C34469.96,9714.0531 34436.21,10919.3331 33771.29,11577.9531 C33433.94,11912.1131 33035.72,11451.2131 32729.29,11813.9531 C32552.08,12023.7331 32637.22,12978.6931 32652.97,13139.4531 " fill="none" id="C_0000066148521405667716&lt;-C_0001682405743486361214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34443.81,9132.6431,34440.0912,9138.8214,34444.3639,9144.6303,34448.0827,9138.4521,34443.81,9132.6431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="33736.29,11691.5195,33740.29,11695.5195,33736.29,11699.5195,33732.29,11695.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="33743.29" y="11700.52">custom_features</text><!--MD5=[b1cdeb5c1d2293693591756cb414570e]
link C_0000066148521405667716 to C_0000066148521405667716--><path d="M34545.87,8533.3131 C34773.9,8137.5831 35077.29,8237.4631 35077.29,8832.9531 C35077.29,9426.2631 34776.12,9527.5831 34548.38,9136.9131 " fill="none" id="C_0000066148521405667716-&gt;C_0000066148521405667716" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="34545.87,9132.5931,34546.9316,9142.3846,34548.3814,9136.9167,34553.8493,9138.3664,34545.87,9132.5931" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="35088.29,8828.5195,35092.29,8832.5195,35088.29,8836.5195,35084.29,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="35095.29" y="8837.52">singleton</text><!--MD5=[3549a9a1546b9f3f927ae4be5a497360]
reverse link C_0000066148521405667716 to C_0000104564426296396960--><path d="M34439.19,9137.7531 C34456.78,9721.6031 34400.39,10994.1131 33638.29,11577.9531 C33591.98,11613.4331 31596.57,11605.2231 31538.29,11607.9531 C30550.94,11654.1431 30308.89,11743.2631 29321.29,11783.9531 C29255.08,11786.6831 19840.86,11789.4431 19779.29,11813.9531 C19353.04,11983.6631 18979.49,12346.2331 18720.59,12652.7031 " fill="none" id="C_0000066148521405667716&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="34439.04,9132.6331,34435.3247,9141.7543,34439.1971,9137.6307,34443.3207,9141.503,34439.04,9132.6331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="31544.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="31551.29" y="11700.52">«friend»</text><!--MD5=[5f66742971e8c9e8cae80ea28ed781f8]
reverse link C_0001531814603945772616 to C_0000066148521405667716--><path d="M25199.69,1524.0431 C27383.78,1610.8731 33984.29,1909.7831 33984.29,2350.9531 C33984.29,2350.9531 33984.29,2350.9531 33984.29,4772.4531 C33984.29,6187.0031 34249.24,7863.0531 34366.06,8533.2931 " fill="none" id="C_0001531814603945772616&lt;-C_0000066148521405667716" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25199.07,1531.0231,25179.36,1523.2431,25199.63,1517.0331,25199.07,1531.0231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aa0c273b9f60adfd568ff5c86238f80b]
reverse link C_0001608678623693693822 to C_0001858199404643284193--><path d="M24031.1,5058.2131 C24001.51,5313.1131 23914.35,5672.8731 23662.29,5851.9531 C23540.6,5938.4131 18411.95,5798.3331 18288.29,5881.9531 C18206.39,5937.3431 18224.25,5991.1131 18204.29,6087.9531 C18173.51,6237.3431 18204.53,11468.5131 18098.29,11577.9531 C18050.87,11626.8031 17536.82,11562.3231 17486.29,11607.9531 C17470.9,11621.8531 17042.5,14539.8831 17037.29,14559.9531 C16939.41,14937.4331 16764.15,15362.0631 16668,15582.4431 " fill="none" id="C_0001608678623693693822&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24032.59,5045.0131,24027.9425,5050.5268,24031.2446,5056.9375,24035.8921,5051.4238,24032.59,5045.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17489.29" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="17499.29" y="11700.52">_class_name</text><!--MD5=[276c31c105800b95195630ce44e7eac9]
reverse link C_0001608678623693693822 to C_0001649884439586022807--><path d="M24061.65,5050.2931 C24092.65,5302.8531 24180.66,5663.9031 24428.29,5851.9531 C24692.36,6052.4731 27073.97,6045.0831 27405.29,6057.9531 C27453.86,6059.8431 30866.19,6057.7831 30904.29,6087.9531 C31723.23,6736.4531 31643.92,8205.4131 31594.17,8680.5931 " fill="none" id="C_0001608678623693693822&lt;-C_0001649884439586022807" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="24061.02,5045.0931,24058.1272,5054.5076,24061.6191,5050.0571,24066.0696,5053.549,24061.02,5045.0931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27411.29" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27418.29" y="5974.52">«friend»</text><!--MD5=[440f40faf3fe69bc1287a9f9d9945bfb]
reverse link C_0001608678623693693822 to C_0000104564426296396960--><path d="M24031.81,5050.3431 C24002.96,5305.4831 23916.51,5670.5631 23662.29,5851.9531 C23627.03,5877.1131 20586.56,5879.8031 20543.29,5881.9531 C20034.09,5907.3131 18602.24,5711.6031 18258.29,6087.9531 C18155.41,6200.5231 18254.11,11425.5131 18258.29,11577.9531 C18268.15,11937.3431 18290.57,12342.0731 18310.18,12652.5331 " fill="none" id="C_0001608678623693693822&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="24032.4,5045.0831,24027.4225,5053.5816,24031.8431,5050.052,24035.3728,5054.4726,24032.4,5045.0831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18264.29" cy="8833.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18271.29" y="8837.52">«friend»</text><!--MD5=[16d7dd01d25636e525d063c3bea0b5f8]
reverse link C_0001951177692366602790 to C_0001608678623693693822--><path d="M24760.53,3609.9431 C24757.79,3611.3031 24755.04,3612.6431 24752.29,3613.9531 C24618.73,3677.7231 24537.12,3590.6431 24428.29,3690.9531 C24201.29,3900.1931 24108.76,4252.6631 24071.08,4497.6831 " fill="none" id="C_0001951177692366602790&lt;-C_0001608678623693693822" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24757.59,3603.5831,24778.58,3600.6531,24764,3616.0331,24757.59,3603.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2cf028d42d6a2db252d6d720b88d2c11]
link C_0001649884439586022807 to C_0001531814603945772616--><path d="M31534.63,8680.7331 C31395.38,8149.1631 30946.29,6315.1631 30946.29,4772.4531 C30946.29,2350.9531 30946.29,2350.9531 30946.29,2350.9531 C30946.29,2262.4631 30976.15,2215.1531 30911.29,2154.9531 C30497.43,1770.8231 26746.17,1583.7431 25184.6,1521.9831 " fill="none" id="C_0001649884439586022807-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.46,1521.7831,25188.2924,1526.1407,25184.456,1521.9835,25188.6131,1518.1471,25179.46,1521.7831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30949.29" y="3293.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="30959.29" y="3300.02">owner</text><!--MD5=[8415f50d93551f9719370020f3d5388d]
reverse link C_0001649884439586022807 to C_0000788782266645010446--><path d="M31602.78,8998.0731 C31677.04,9447.2831 31883.4,10735.3731 31992.29,11813.9531 C32046.37,12349.5631 32071,13008.6131 32075.52,13139.3131 " fill="none" id="C_0001649884439586022807&lt;-C_0000788782266645010446" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="31600.62,8985.0231,31597.6501,8991.5943,31602.5735,8996.863,31605.5434,8990.2919,31600.62,8985.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31990.29" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="32000.29" y="11700.52">properties</text><!--MD5=[a4f0e8eee4c7fe37314c0c917d922cff]
link C_0001649884439586022807 to C_0002110837736536862228--><path d="M31605.17,8985.0031 C31686.77,9422.1231 31895.57,10724.5631 31714.29,11783.9531 C31656,12124.6131 31522.17,12492.9831 31409.68,12763.1431 " fill="none" id="C_0001649884439586022807-&gt;C_0002110837736536862228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="31407.7,12767.9131,31414.8613,12761.1518,31409.6281,12763.2999,31407.48,12758.0667,31407.7,12767.9131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31740.29" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="59" x="31750.29" y="11700.52">language</text><!--MD5=[9db7a3eb346815fb65d8e4265bbdc5b6]
reverse link C_0001735438654351294549 to C_0001649884439586022807--><path d="M31641.98,2967.2831 C31631.24,3911.4131 31586.38,7856.5531 31577.01,8680.6531 " fill="none" id="C_0001735438654351294549&lt;-C_0001649884439586022807" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="31634.98,2967.1331,31642.21,2947.2131,31648.98,2967.2831,31634.98,2967.1331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2191a2c55081528738a9601d975d7e81]
reverse link C_0000970940027123558604 to C_0001858199404643284193--><path d="M28534.4,5002.0531 C28761.14,5246.9631 29093.41,5658.1031 29229.29,6087.9531 C29321.22,6378.7731 29303.27,11282.0631 29229.29,11577.9531 C29225.63,11592.6131 29217.06,11593.3231 29213.29,11607.9531 C29132.79,11920.5631 29390.93,14275.4531 29172.29,14512.9531 C28290.33,15471.0131 18221.58,15701.9431 16773.38,15730.2731 " fill="none" id="C_0000970940027123558604&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28525.37,4992.3331,28526.5195,4999.452,28533.5329,5001.129,28532.3834,4994.0101,28525.37,4992.3331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29216.29" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29226.29" y="11700.52">_class_name</text><!--MD5=[d541019a02b5abc817eac1d3ff5a0498]
reverse link C_0000970940027123558604 to C_0000104564426296396960--><path d="M28323.34,5037.5631 C28324.59,5283.6631 28284.3,5642.6331 28067.29,5851.9531 C28013.96,5903.3931 27957.34,5831.2631 27903.29,5881.9531 C27844.48,5937.1131 27922.35,6007.7031 27859.29,6057.9531 C27793.98,6110.0031 26415.13,6028.6831 26356.29,6087.9531 C26248.84,6196.1831 26384.75,11461.4831 26286.29,11577.9531 C25956.17,11968.4931 25663.48,11736.7231 25154.29,11783.9531 C25070.79,11791.7031 19188.73,11771.6931 19116.29,11813.9531 C18806.5,11994.7131 18610.5,12351.6331 18493.67,12652.8731 " fill="none" id="C_0000970940027123558604&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28323.3,5032.4931,28319.3773,5041.5271,28323.3429,5037.4929,28327.377,5041.4585,28323.3,5032.4931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26362.29" cy="8833.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="26369.29" y="8837.52">«friend»</text><!--MD5=[af31877db6ec92759d70e67f8199ce9a]
reverse link C_0001531814603945772616 to C_0000970940027123558604--><path d="M24632.79,2097.9231 C24636.69,2117.1531 24640.53,2136.2031 24644.29,2154.9531 C24679.39,2329.8031 24587.35,2430.0731 24720.29,2548.9531 C24783.27,2605.2731 25016.82,2560.6231 25099.29,2578.9531 C26474.38,2884.6231 27144.11,2626.9731 28067.29,3690.9531 C28263.97,3917.6231 28309.17,4270.1631 28314.57,4510.2231 " fill="none" id="C_0001531814603945772616&lt;-C_0000970940027123558604" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24625.91,2099.2331,24628.79,2078.2331,24639.63,2096.4431,24625.91,2099.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f972d27a027a57bd8d2a6ea69d3db7f2]
reverse link C_0001823345232236209470 to C_0001858199404643284193--><path d="M31554.88,803.1131 C31848.74,1068.5531 33184.47,2328.9131 33629.29,3690.9531 C33690.36,3877.9331 33772.1,11440.8231 33638.29,11577.9531 C33590.87,11626.5531 32469.54,11565.8131 32416.29,11607.9531 C32342.07,11666.6931 32375.56,11720.2331 32362.29,11813.9531 C32341.27,11962.4631 32401.44,14406.9831 32295.29,14512.9531 C32269.89,14538.3131 31039.14,14541.0531 31003.29,14542.9531 C25144.23,14852.8431 17971.33,15589.9431 16773.61,15715.2031 " fill="none" id="C_0001823345232236209470&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="31544.87,794.0931,31546.6448,801.0824,31553.779,802.1323,31552.0043,795.1431,31544.87,794.0931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33624.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="33631.29" y="3657.02">name</text><!--MD5=[d03f40f4e0550f14d97c47cc13da68a0]
link C_0001823345232236209470 to C_0001531814603945772616--><path d="M31239.45,762.9531 C30827.99,780.3331 29997.48,814.6431 29293.29,838.9531 C28842.7,854.5131 28728.03,825.2231 28279.29,868.9531 C27188.83,975.2231 25936.63,1205.0731 25184.47,1354.9931 " fill="none" id="C_0001823345232236209470-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.5,1355.9831,25189.106,1358.1566,25184.4045,1355.0108,25187.5503,1350.3093,25179.5,1355.9831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="28285.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="18" x="28292.29" y="882.02">ptr</text><!--MD5=[54c87c44ad6b03a38874e33edc86c7a9]
reverse link C_0000361490529588572420 to C_0000945411446247634027--><path d="M35339.74,14500.8431 C35334.3,14504.9331 35328.81,14508.9731 35323.29,14512.9531 C35228.42,14581.4131 35180.44,14545.9331 35064.29,14559.9531 C34955.1,14573.1331 34667.56,14538.6231 34570.29,14589.9531 C34328.96,14717.3131 34132.62,14942.2931 33986.51,15159.2031 " fill="none" id="C_0000361490529588572420&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35350.18,14492.9031,35342.983,14493.3538,35340.6309,14500.1705,35347.8279,14499.7198,35350.18,14492.9031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35268.29" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="35278.29" y="14556.02">_execpath</text><!--MD5=[54c87c44ad6b03a38874e33edc86c7a9]
reverse link C_0000361490529588572420 to C_0000945411446247634027--><path d="M35409.42,14521.0031 C35391.2,14534.6431 35372.5,14547.6431 35353.29,14559.9531 C35280,14606.9431 34647.74,14550.1831 34570.29,14589.9531 C34328.25,14714.2431 34132.13,14937.8831 33986.36,15154.6331 " fill="none" id="C_0000361490529588572420&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35419.78,14513.1231,35412.5823,14513.5627,35410.2197,14520.3758,35417.4174,14519.9362,35419.78,14513.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35356.29" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="35366.29" y="14556.02">_local_clipboard</text><!--MD5=[b64bbfe1dfefa7e0cb7589d09d95a866]
reverse link C_0000361490529588572420 to C_0002063845175027013341--><path d="M36778.32,13930.0631 C36915.4,14117.6331 37040.05,14326.9631 37117.29,14542.9531 C37276.24,14987.3931 37182.75,15585.7031 37160.62,15710.1831 " fill="none" id="C_0000361490529588572420&lt;-C_0002063845175027013341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="36770.54,13919.4531,36770.8609,13926.6571,36777.6341,13929.1317,36777.3132,13921.9277,36770.54,13919.4531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37120.29" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="37130.29" y="14556.02">_cmdline</text><!--MD5=[b64bbfe1dfefa7e0cb7589d09d95a866]
reverse link C_0000361490529588572420 to C_0002063845175027013341--><path d="M36640.92,14525.4231 C36873.15,15069.7731 37097.55,15595.7531 37146.47,15710.4431 " fill="none" id="C_0000361490529588572420&lt;-C_0002063845175027013341-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="36635.78,14513.3731,36634.4547,14520.4614,36640.4879,14524.411,36641.8133,14517.3228,36635.78,14513.3731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36652.29" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="36662.29" y="14556.02">restart_commandline</text><!--MD5=[6a56705f3e0a2b0efcdc552be9ef22dd]
link C_0000361490529588572420 to C_0000361490529588572420--><path d="M36770.34,13023.7731 C36792.63,13061.4931 36805.29,13108.0531 36805.29,13163.4531 C36805.29,13216.6931 36793.6,13261.7631 36772.91,13298.6731 " fill="none" id="C_0000361490529588572420-&gt;C_0000361490529588572420" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="36770.34,13303.1331,36778.305,13297.3401,36772.8407,13298.8034,36771.3774,13293.3391,36770.34,13303.1331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36813.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="36823.29" y="13168.02">singleton</text><!--MD5=[defcce9c8f425e144c84d1e88f84777b]
reverse link C_0001191393512042218074 to C_0001858199404643284193--><path d="M24026.01,9036.8731 C24114.82,9951.6231 24426.59,13683.0431 23694.29,14512.9531 C22742.78,15591.2931 17768.19,15717.1931 16773.5,15731.6231 " fill="none" id="C_0001191393512042218074&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24024.72,9023.6131,24021.3188,9029.9717,24025.8801,9035.5569,24029.2813,9029.1983,24024.72,9023.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24171.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="24181.29" y="13168.02">_class_name</text><!--MD5=[b77e23c3a90867c3de8e35bacb429255]
link C_0001191393512042218074 to C_0001191393512042218074--><path d="M24042.61,8642.1231 C24164.57,8124.4131 24352.79,8188.0231 24352.79,8832.9531 C24352.79,9475.8331 24165.77,9541.0831 24043.78,9028.7031 " fill="none" id="C_0001191393512042218074-&gt;C_0001191393512042218074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24042.61,9023.7831,24040.7714,9033.4588,24043.752,9028.651,24048.5599,9031.6316,24042.61,9023.7831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24363.79,8828.5195,24367.79,8832.5195,24363.79,8836.5195,24359.79,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="24370.79" y="8837.52">singleton</text><!--MD5=[f80c7ee04ef556cee553628e7a65d3d1]
reverse link C_0001191393512042218074 to C_0000104564426296396960--><path d="M24055.24,9028.7431 C24172.42,9536.4731 24403.04,10907.4531 23675.29,11577.9531 C23610.53,11637.6231 22959.31,11563.5031 22883.29,11607.9531 C22804.07,11654.2831 22855.15,11738.7331 22775.29,11783.9531 C22702.87,11824.9631 19856.51,11782.9031 19779.29,11813.9531 C19354.02,11984.9731 18980.74,12346.9431 18721.71,12652.8431 " fill="none" id="C_0001191393512042218074&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="24054.04,9023.5431,24052.1745,9033.2137,24055.1685,9028.4141,24059.968,9031.4081,24054.04,9023.5431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="22889.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="22896.29" y="11700.52">«friend»</text><!--MD5=[ab8fd2992e044c54f6cd905a344680fd]
reverse link C_0001531814603945772616 to C_0001191393512042218074--><path d="M23823.48,2010.9031 C23753.4,2112.1431 23707.29,2226.1731 23707.29,2350.9531 C23707.29,2350.9531 23707.29,2350.9531 23707.29,4772.4531 C23707.29,6267.2831 23910.76,8063.4431 23981.44,8642.3531 " fill="none" id="C_0001531814603945772616&lt;-C_0001191393512042218074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23817.88,2006.6931,23835.16,1994.4331,23829.29,2014.7931,23817.88,2006.6931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba2cffb63cb3f035d21a701c85d098f8]
link C_0000825523737350882091 to C_0000825523737350882091--><path d="M26204.63,283.8931 C26226.75,292.4331 26239.29,302.9531 26239.29,315.4531 C26239.29,326.9731 26228.63,336.8131 26209.64,344.9731 " fill="none" id="C_0000825523737350882091-&gt;C_0000825523737350882091" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26204.63,347.0131,26214.474,347.3218,26209.2605,345.1266,26211.4556,339.9131,26204.63,347.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26247.29" y="313.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="26257.29" y="320.02">singleton</text><!--MD5=[0041b05e6148a13b62ca40da023988b6]
reverse link C_0000115801560197752094 to C_0001858199404643284193--><path d="M35246.01,807.1431 C35240.43,995.2031 35211.7,1626.8431 35071.29,2124.9531 C34870.52,2837.2331 34631.14,2944.5531 34389.29,3643.9531 C34023.5,4701.8231 33925.61,4977.9631 33781.29,6087.9531 C33761.63,6239.1931 33807.58,11469.5531 33700.29,11577.9531 C33653.5,11625.2331 32558.72,11571.1731 32503.29,11607.9531 C32419.59,11663.5031 32432.45,11715.9731 32410.29,11813.9531 C32393.75,11887.0931 32407.26,14459.8731 32354.29,14512.9531 C32328.58,14538.7231 31080.62,14540.6731 31044.29,14542.9531 C30970.72,14547.5831 30952.7,14553.1531 30879.29,14559.9531 C25089.1,15096.1031 17966.25,15631.6631 16773.46,15720.5831 " fill="none" id="C_0000115801560197752094&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35246.38,794.1231,35242.2103,800.0064,35246.0373,806.1182,35250.207,800.2349,35246.38,794.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="34395.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="34402.29" y="3657.02">signal</text><!--MD5=[0041b05e6148a13b62ca40da023988b6]
reverse link C_0000115801560197752094 to C_0001858199404643284193--><path d="M35367.58,795.7231 C35430.3,823.0331 35505.02,863.1231 35559.29,915.9531 C35771.02,1122.0731 35884.29,1200.4631 35884.29,1495.9531 C35884.29,1495.9531 35884.29,1495.9531 35884.29,5970.9531 C35884.29,8463.0031 37376.68,9608.8431 35849.29,11577.9531 C35629.01,11861.9431 35418.6,11708.0731 35067.29,11783.9531 C35028.3,11792.3731 34916.41,11783.8031 34890.29,11813.9531 C34792.09,11927.3231 34927.87,14405.4331 34823.29,14512.9531 C34766.59,14571.2631 33442.48,14585.0431 33361.29,14589.9531 C26504.62,15004.3831 18078.01,15624.1031 16773.36,15720.6231 " fill="none" id="C_0000115801560197752094&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35355.61,790.6031,35359.5535,796.6404,35366.6431,795.3222,35362.6996,789.2849,35355.61,790.6031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35890.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="50" x="35897.29" y="3657.02">method</text><!--MD5=[54ac8f63d86bc4e03834512bd61d98ef]
link C_0000115801560197752094 to C_0001531814603945772616--><path d="M35139.13,759.9331 C34854.18,780.9231 34059.22,839.2731 33397.29,885.9531 C30332.06,1102.1231 26671.54,1350.0731 25184.79,1450.3431 " fill="none" id="C_0000115801560197752094-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.62,1450.6931,25188.8636,1454.0926,25184.6092,1450.3643,25188.3375,1446.1099,25179.62,1450.6931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33603.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="39" x="33610.29" y="882.02">target</text><!--MD5=[fbb6989faf4ed278e5063ce8d06d64a7]
reverse link C_0000535376932101028371 to C_0001858199404643284193--><path d="M25828.83,9273.3231 C26039.08,10337.8831 26404.04,13073.2731 24984.29,14512.9531 C24382.12,15123.5831 17918.9,15634.5731 16773.35,15720.6831 " fill="none" id="C_0000535376932101028371&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25826.29,9260.4931,25823.5329,9267.1563,25828.6231,9272.2641,25831.3802,9265.6009,25826.29,9260.4931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26016.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="26026.29" y="13168.02">_class_name</text><!--MD5=[491d9ca8506983be5dd6ad346fa76ecd]
link C_0000535376932101028371 to C_0000535376932101028371--><path d="M25886.24,8405.0931 C26037.5,8171.5231 26203.29,8314.1431 26203.29,8832.9531 C26203.29,9348.4631 26039.6,9492.5531 25889.12,9265.2231 " fill="none" id="C_0000535376932101028371-&gt;C_0000535376932101028371" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25886.24,9260.8131,25887.8424,9270.5307,25888.987,9264.9909,25894.5269,9266.1355,25886.24,9260.8131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26211.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="26221.29" y="8837.52">singleton</text><!--MD5=[aeb94eee531eb6d8f9e0dab2a65178b2]
reverse link C_0000535376932101028371 to C_0000104564426296396960--><path d="M25802.42,9265.9831 C25877.19,9877.5631 25907.2,10986.9231 25274.29,11577.9531 C25230.79,11618.5831 23200.74,11780.8231 23141.29,11783.9531 C23048.03,11788.8631 19865.96,11779.1531 19779.29,11813.9531 C19353.93,11984.7331 18980.66,12346.7231 18721.65,12652.6831 " fill="none" id="C_0000535376932101028371&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25801.76,9260.6031,25798.8972,9270.0267,25802.3749,9265.5652,25806.8364,9269.0429,25801.76,9260.6031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25086.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="25093.29" y="11700.52">«friend»</text><!--MD5=[ccb0f2e105ae37379c60a8eaf42ab781]
reverse link C_0001531814603945772616 to C_0000535376932101028371--><path d="M24528.25,2098.2031 C24543.46,2521.8331 24565.18,3102.7131 24587.29,3613.9531 C24599.04,3885.5731 24514.44,5865.3131 24706.29,6057.9531 C24750.89,6102.7331 25227.18,6045.8331 25274.29,6087.9531 C25923.15,6667.9831 25884.43,7791.2431 25804.65,8405.4331 " fill="none" id="C_0001531814603945772616&lt;-C_0000535376932101028371" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24521.25,2098.3831,24527.53,2078.1431,24535.24,2097.8831,24521.25,2098.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5ecf1269ba038493d7a188869314b523]
reverse link C_0000314051240057057851 to C_0001858199404643284193--><path d="M21840.68,9068.7131 C21775.81,9609.6731 21703.57,10945.8531 22453.29,11577.9531 C22520.79,11634.8631 23186.06,11544.3631 23247.29,11607.9531 C23301.55,11664.3031 23291.44,11719.3731 23247.29,11783.9531 C23226.57,11814.2731 23200.83,11793.5431 23170.29,11813.9531 C21789.41,12737.0131 21999.51,13641.8231 20585.29,14512.9531 C19261.72,15328.2431 17353.03,15634.7131 16773.54,15712.1731 " fill="none" id="C_0000314051240057057851&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="21842.26,9055.6831,21837.5638,9061.1554,21840.8089,9067.5951,21845.5051,9062.1228,21842.26,9055.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23173.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="23183.29" y="13168.02">_class_name</text><!--MD5=[c8cd5ec3f4799bfb98fee18601ebcdfe]
link C_0000314051240057057851 to C_0000314051240057057851--><path d="M21939.66,8610.0831 C22113.63,8127.3631 22370.79,8201.6531 22370.79,8832.9531 C22370.79,9462.1031 22115.38,9538.0331 21941.44,9060.7531 " fill="none" id="C_0000314051240057057851-&gt;C_0000314051240057057851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="21939.66,9055.8231,21938.9597,9065.6471,21941.3607,9060.525,21946.4827,9062.926,21939.66,9055.8231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22378.79" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="22388.79" y="8837.52">singleton</text><!--MD5=[1a5c4e57827c1ce3cfed75acbd29db82]
reverse link C_0000314051240057057851 to C_0000104564426296396960--><path d="M21913.39,9060.9431 C21987.47,9587.4631 22087.44,10898.6831 21387.29,11577.9531 C20868.86,12080.9231 20429.64,11499.6331 19779.29,11813.9531 C19375.45,12009.1331 19008.76,12358.6431 18747.29,12652.9231 " fill="none" id="C_0000314051240057057851&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="21912.68,9055.9331,21909.9815,9065.4051,21913.3811,9060.8837,21917.9025,9064.2833,21912.68,9055.9331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="21332.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="21339.29" y="11700.52">«friend»</text><!--MD5=[d5123be137e691922de774dbcf9f522d]
reverse link C_0001531814603945772616 to C_0000314051240057057851--><path d="M23815.69,1658.4331 C23458.75,1762.6131 23028.3,1922.9531 22689.29,2154.9531 C20875.33,3396.3431 20209.83,3823.7431 19438.29,5881.9531 C19410.84,5955.2031 19383.4,6002.2231 19438.29,6057.9531 C19514.98,6135.8231 21322.28,6016.8631 21405.29,6087.9531 C22150.74,6726.3631 22009.31,8078.4731 21918.94,8610.3731 " fill="none" id="C_0001531814603945772616&lt;-C_0000314051240057057851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23813.89,1651.6731,23835.05,1652.8231,23817.79,1665.1131,23813.89,1651.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afd78d936730b2a5d2a27c3ca7ae5858]
reverse link C_0001701907280759632930 to C_0001858199404643284193--><path d="M8708.63,9036.4931 C8585.64,9552.1531 8347.38,10920.2031 9080.29,11577.9531 C9164.42,11653.4431 13069.26,11528.1331 13149.29,11607.9531 C13206.43,11664.9431 13131.46,14447.2331 13178.29,14512.9531 C13578.17,15074.1631 15788.33,15566.4931 16427.26,15698.6831 " fill="none" id="C_0001701907280759632930&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8711.69,9023.7231,8706.3971,9028.6206,8708.882,9035.39,8714.175,9030.4925,8711.69,9023.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13181.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="13191.29" y="13168.02">_class_name</text><!--MD5=[5f60c9416fe2cf317930fcaaeb87688d]
link C_0001701907280759632930 to C_0001701907280759632930--><path d="M8787.59,8642.1231 C8870.24,8124.4131 8997.79,8188.0231 8997.79,8832.9531 C8997.79,9475.6731 8871.11,9541.0531 8788.44,9029.0731 " fill="none" id="C_0001701907280759632930-&gt;C_0001701907280759632930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8787.59,9023.7831,8785.0793,9033.3066,8788.3889,9028.7189,8792.9766,9032.0284,8787.59,9023.7831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="9008.79,8828.5195,9012.79,8832.5195,9008.79,8836.5195,9004.79,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="9015.79" y="8837.52">singleton</text><!--MD5=[88b42ccf7d3beb4b42ddd913181f42f8]
reverse link C_0001701907280759632930 to C_0000104564426296396960--><path d="M8710.43,9028.9431 C8588,9538.6731 8343.74,10917.0031 9080.29,11577.9531 C9122.85,11616.1431 13143.42,11588.7731 13197.29,11607.9531 C13314.93,11649.8431 13298.68,11741.9931 13416.29,11783.9531 C13601.58,11850.0631 16775.32,11739.2131 16957.29,11813.9531 C17373.93,11985.0731 17734.85,12346.7931 17984.14,12652.5431 " fill="none" id="C_0001701907280759632930&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8711.69,9023.7331,8705.6914,9031.5445,8710.5177,9028.5938,8713.4684,9033.4201,8711.69,9023.7331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="13422.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="13429.29" y="11700.52">«friend»</text><!--MD5=[27a7e43ab26a99a3f421aa78b5d844cd]
reverse link C_0001531814603945772616 to C_0001701907280759632930--><path d="M23815.21,1514.3831 C21377.05,1576.7731 13332.29,1822.6631 13332.29,2350.9531 C13332.29,2350.9531 13332.29,2350.9531 13332.29,4772.4531 C13332.29,5058.9331 13444.64,5862.3931 13235.29,6057.9531 C13150.95,6136.7431 9166.2,6010.8731 9080.29,6087.9531 C8341.19,6751.1431 8589.68,8136.6831 8711.69,8642.1731 " fill="none" id="C_0001531814603945772616&lt;-C_0001701907280759632930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23815.06,1507.3831,23835.23,1513.8731,23815.42,1521.3831,23815.06,1507.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[91b59d0d2b46b114de331f37d45c6fea]
reverse link C_0001589464385186808769 to C_0001858199404643284193--><path d="M12185.16,11505.7531 C12219.65,11531.0131 12255.02,11555.1131 12291.29,11577.9531 C12347.68,11613.4631 13443.39,11560.6231 13490.29,11607.9531 C13603.9,11722.6131 13444.65,14380.0831 13536.29,14512.9531 C14228.13,15516.0631 15887.12,15694.8431 16427.18,15726.6131 " fill="none" id="C_0001589464385186808769&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="12174.48,11497.8731,12176.9337,11504.6539,12184.1367,11504.9969,12181.6829,11498.2161,12174.48,11497.8731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13539.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="13549.29" y="13168.02">_class_name</text><!--MD5=[04ea438e6be471aabf4ca3b13070cdc4]
link C_0001589464385186808769 to C_0001589464385186808769--><path d="M12174.38,8608.4831 C12196.92,8673.2331 12209.29,8748.0531 12209.29,8832.9531 C12209.29,8915.6931 12197.54,8988.8631 12176.08,9052.4731 " fill="none" id="C_0001589464385186808769-&gt;C_0001589464385186808769" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="12174.38,9057.4231,12181.0927,9050.2162,12176.0082,9052.6957,12173.5288,9047.6111,12174.38,9057.4231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12217.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="12227.29" y="8837.52">singleton</text><!--MD5=[427f4b2a588f733610b23579090a59fb]
reverse link C_0001589464385186808769 to C_0000104564426296396960--><path d="M12179.08,11502.7231 C12215.49,11529.1431 12252.89,11554.2531 12291.29,11577.9531 C12398.53,11644.1131 16711.33,11558.6631 16827.29,11607.9531 C16961.68,11665.0831 17488.86,12221.8131 17884.5,12652.8831 " fill="none" id="C_0001589464385186808769&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="12174.65,11499.4931,12179.5724,11508.0237,12178.6924,11502.4357,12184.2804,11501.5558,12174.65,11499.4931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17044.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17051.29" y="11700.52">«friend»</text><!--MD5=[4ddd664f6ccf290832a36f79f3862090]
reverse link C_0001531814603945772616 to C_0001589464385186808769--><path d="M23814.97,1520.9131 C21941.8,1586.5631 16803.37,1790.9631 15139.29,2107.9531 C14928.58,2148.0931 14722.29,2136.4431 14722.29,2350.9531 C14722.29,2350.9531 14722.29,2350.9531 14722.29,4772.4531 C14722.29,5379.4131 14754.99,5704.8731 14261.29,6057.9531 C14172.26,6121.6231 12384.2,6030.0731 12291.29,6087.9531 C12251.29,6112.8731 12212.38,6139.3331 12174.54,6167.1831 " fill="none" id="C_0001531814603945772616&lt;-C_0001589464385186808769" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.92,1513.9131,23835.15,1520.2031,23815.41,1527.9031,23814.92,1513.9131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2cf4dc3403b3f63884c534491eb99b5f]
reverse link C_0001559146041463814963 to C_0001858199404643284193--><path d="M6016.28,9183.4831 C5877.45,9775.2731 5704.27,10969.3931 6366.29,11577.9531 C6403.7,11612.3331 9973.86,11601.7931 10024.29,11607.9531 C10414.86,11655.6531 10629.88,11514.6531 10885.29,11813.9531 C11275.78,12271.5431 10698.99,14058.6431 11093.29,14512.9531 C11820.33,15350.6331 15572.8,15661.4931 16427.08,15721.9631 " fill="none" id="C_0001559146041463814963&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6019.35,9170.4831,6014.0793,9175.4045,6016.5949,9182.1626,6021.8656,9177.2412,6019.35,9170.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11096.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="11106.29" y="13168.02">_class_name</text><!--MD5=[8b9b48228f1f4eaa16d2eda56805776c]
reverse link C_0001559146041463814963 to C_0000104564426296396960--><path d="M6018.02,9175.7731 C5878.73,9764.9731 5700.83,10967.2431 6366.29,11577.9531 C6389.75,11599.4731 10918.52,11606.0231 10950.29,11607.9531 C11632.64,11649.3631 11795.95,11742.4931 12478.29,11783.9531 C12602.48,11791.5031 16842.16,11766.7831 16957.29,11813.9531 C17374.28,11984.7831 17735.33,12346.7731 17984.59,12652.7231 " fill="none" id="C_0001559146041463814963&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6019.24,9170.5931,6013.285,9178.4377,6018.0948,9175.4602,6021.0723,9180.27,6019.24,9170.5931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="12484.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="12491.29" y="11700.52">«friend»</text><!--MD5=[4af771cf0c6fabd07b7b07fb51de9469]
reverse link C_0001531814603945772616 to C_0001559146041463814963--><path d="M23815.08,1497.1031 C20692.8,1497.7231 8072.29,1549.7631 8072.29,2350.9531 C8072.29,2350.9531 8072.29,2350.9531 8072.29,4772.4531 C8072.29,5412.2731 7964.29,5714.7831 7424.29,6057.9531 C7374.67,6089.4931 6409.18,6047.7231 6366.29,6087.9531 C5706.14,6707.1831 5882.99,7909.7831 6020.27,8495.3331 " fill="none" id="C_0001531814603945772616&lt;-C_0001559146041463814963" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23815.28,1490.1031,23835.28,1497.1031,23815.28,1504.1031,23815.28,1490.1031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[487a8427ca85592aeea29c0764de0754]
reverse link C_0000503002593685351124 to C_0001858199404643284193--><path d="M27771.13,2514.7431 C27964.52,2757.1131 28324.3,3234.8631 28543.29,3690.9531 C29026.05,4696.4031 29116.5,4985.6131 29286.29,6087.9531 C29357.55,6550.5631 29484.25,14111.6831 29243.29,14512.9531 C28568.49,15636.6931 18241.09,15725.8631 16773.31,15732.8631 " fill="none" id="C_0000503002593685351124&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="27762.9,2504.4431,27763.5309,2511.6266,27770.4044,2513.8071,27769.7735,2506.6237,27762.9,2504.4431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29284.29" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29294.29" y="5974.52">_class_name</text><!--MD5=[489f5a7a7e59ee03221596499549568c]
reverse link C_0000503002593685351124 to C_0000104564426296396960--><path d="M26727.67,2504.8131 C25824.87,2659.7231 24565.68,2889.4031 24493.29,2976.9531 C24417.17,3069.0231 24519.17,11492.8831 24435.29,11577.9531 C24379.19,11634.8531 23059.76,11558.1231 22997.29,11607.9531 C22934.26,11658.2331 23016.65,11734.0831 22953.29,11783.9531 C22869.54,11849.8731 19208.28,11760.1031 19116.29,11813.9531 C18806.9,11995.0731 18610.93,12351.7231 18494.01,12652.7531 " fill="none" id="C_0000503002593685351124&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26732.63,2503.9631,26723.0845,2501.5375,26727.7015,2504.806,26724.4331,2509.423,26732.63,2503.9631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24474.29" cy="4772.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24481.29" y="4776.02">«friend»</text><!--MD5=[c24c628f808045c87231a65882d87e6c]
reverse link C_0001531814603945772616 to C_0000503002593685351124--><path d="M25199.1,1686.4231 C25766.05,1840.8831 26557.89,2056.6131 27083.77,2199.8831 " fill="none" id="C_0001531814603945772616&lt;-C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25196.91,1693.0831,25179.45,1681.0731,25200.59,1679.5731,25196.91,1693.0831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c0fc8be268a4058cfc901a3bfe23dfe6]
link C_0000493041171271776846 to C_0000503002593685351124--><path d="M29134.17,800.6231 C29115.16,993.6731 29018.65,1712.7031 28613.29,2077.9531 C28562.88,2123.3831 28505.5,2161.3131 28444.4,2192.9831 " fill="none" id="C_0000493041171271776846-&gt;C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="28438.0209" cy="2196.2267" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="28445.1517" x2="28430.89" y1="2192.6004" y2="2199.8531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="28441.6473" x2="28434.3945" y1="2203.3576" y2="2189.0959"/><!--MD5=[f9e2d358c0077ba50b9cdc90935a7cd8]
link C_0000493041171271776846 to C_0001531814603945772616--><path d="M29000.44,758.6231 C28749.85,771.8431 28203.33,805.6931 27746.29,868.9531 C26854.93,992.3231 25837.72,1200.4131 25184.84,1342.7831 " fill="none" id="C_0000493041171271776846-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.58,1343.9231,25189.2279,1345.9024,25184.4639,1342.8521,25187.5143,1338.0881,25179.58,1343.9231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27752.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="27759.29" y="882.02">collider</text><!--MD5=[408dbe512b8935ec69e129fbaa9ad1d8]
link C_0000461609734144368587 to C_0000503002593685351124--><path d="M27116.99,755.0031 C27537.4,765.5831 28846.86,803.6631 28908.29,868.9531 C29345.59,1333.7031 28452.15,1916.7131 27949.26,2192.4631 " fill="none" id="C_0000461609734144368587-&gt;C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27942.9979" cy="2195.8827" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="27950.0158" x2="27935.98" y1="2192.0423" y2="2199.7231"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="27946.8383" x2="27939.1575" y1="2202.9006" y2="2188.8648"/><!--MD5=[a4acf2a0a8f086b9008d5a97b35ead67]
link C_0000461609734144368587 to C_0001531814603945772616--><path d="M26859.7,790.5131 C26553.74,882.2631 25764.74,1118.8731 25184.49,1292.8731 " fill="none" id="C_0000461609734144368587-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.38,1294.4031,25189.1481,1295.6617,25184.1711,1292.9729,25186.8598,1287.9959,25179.38,1294.4031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26578.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="26585.29" y="882.02">collider</text><!--MD5=[acb73802bd90075711fdfa2eb81ba4e2]
reverse link C_0001034902024938599899 to C_0001858199404643284193--><path d="M7050.33,10125.2531 C7134.35,10661.4531 7333.25,11237.0231 7776.29,11577.9531 C7846.17,11631.7231 10877.87,11557.6631 10950.29,11607.9531 C12067.04,12383.5331 10919.17,13581.1231 11909.29,14512.9531 C12594.49,15157.8131 15662.13,15607.3731 16427.07,15710.7731 " fill="none" id="C_0001034902024938599899&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7048.3,10112.1931,7045.2638,10118.7339,7050.1336,10124.0522,7053.1698,10117.5115,7048.3,10112.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11912.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="11922.29" y="13168.02">_class_name</text><!--MD5=[b5cd0ac589986cb9ed90f22c5fd42456]
link C_0001034902024938599899 to C_0001034902024938599899--><path d="M7658.84,8532.2731 C7681.07,8612.1931 7693.79,8712.4231 7693.79,8832.9531 C7693.79,8950.8931 7681.61,9049.3931 7660.26,9128.4531 " fill="none" id="C_0001034902024938599899-&gt;C_0001034902024938599899" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7658.84,9133.6331,7665.0633,9125.9996,7660.1532,9128.8086,7657.3441,9123.8985,7658.84,9133.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7701.79" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="7711.79" y="8837.52">singleton</text><!--MD5=[5e0ea8049b7e63b70aa4577072912f6a]
reverse link C_0001034902024938599899 to C_0000104564426296396960--><path d="M7048.46,10117.1031 C7131.58,10655.9331 7330.28,11235.8631 7776.29,11577.9531 C7828.93,11618.3231 12489.01,11588.0831 12552.29,11607.9531 C12684.02,11649.3231 12676.58,11742.5231 12808.29,11783.9531 C12918.23,11818.5331 16850.65,11770.2331 16957.29,11813.9531 C17374.23,11984.9031 17735.28,12346.8831 17984.56,12652.7931 " fill="none" id="C_0001034902024938599899&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7047.67,10111.9531,7045.083,10121.4561,7048.4292,10116.8951,7052.9902,10120.2414,7047.67,10111.9531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="12814.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="12821.29" y="11700.52">«friend»</text><!--MD5=[2a21d702013630b9a2bb4ab014f806e3]
reverse link C_0001531814603945772616 to C_0001034902024938599899--><path d="M23814.95,1506.6931 C21119.26,1545.2231 11473.29,1726.6931 11473.29,2350.9531 C11473.29,2350.9531 11473.29,2350.9531 11473.29,4772.4531 C11473.29,6377.5731 9661.73,5694.5031 8098.29,6057.9531 C8028.29,6074.2231 7831.37,6041.7931 7776.29,6087.9531 C7348.87,6446.2131 7151.59,7022.0031 7064.59,7553.8531 " fill="none" id="C_0001531814603945772616&lt;-C_0001034902024938599899" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23815.01,1499.6931,23835.11,1506.4131,23815.21,1513.6931,23815.01,1499.6931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[890a5f3a9ab4b2f75c35c9d8b993635e]
reverse link C_0002302096389852429221 to C_0001858199404643284193--><path d="M9243.95,9164.3731 C9104.72,9749.2131 8920.96,10962.8231 9590.29,11577.9531 C9664.07,11645.7531 13114.96,11550.8431 13197.29,11607.9531 C13463.17,11792.3831 13212.59,14250.8131 13402.29,14512.9531 C14146.33,15541.1131 15874.58,15703.2231 16427.12,15728.7131 " fill="none" id="C_0002302096389852429221&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9247.02,9151.5331,9241.7323,9156.4362,9244.2245,9163.203,9249.5122,9158.2999,9247.02,9151.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13405.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="13415.29" y="13168.02">_class_name</text><!--MD5=[1c64f5bce8010bf6b825f4da2fbeefb2]
reverse link C_0002302096389852429221 to C_0000104564426296396960--><path d="M9245.76,9156.6831 C9106.27,9738.5631 8917.8,10960.3131 9590.29,11577.9531 C9630.19,11614.5931 13436.16,11606.1331 13490.29,11607.9531 C13586.71,11611.1831 16869.01,11775.0431 16957.29,11813.9531 C17366.37,11994.2631 17725.18,12351.4531 17975.46,12652.9331 " fill="none" id="C_0002302096389852429221&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="9246.98,9151.5731,9240.9814,9159.3845,9245.8077,9156.4338,9248.7584,9161.2601,9246.98,9151.5731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="16643.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="16650.29" y="11700.52">«friend»</text><!--MD5=[664b2e106c93f0f6277b4a445906c078]
reverse link C_0001531814603945772616 to C_0002302096389852429221--><path d="M23814.61,1519.1431 C21508.44,1594.1931 14235.29,1869.1031 14235.29,2350.9531 C14235.29,2350.9531 14235.29,2350.9531 14235.29,4772.4531 C14235.29,5464.0831 13968.53,5732.4331 13358.29,6057.9531 C13265.94,6107.2131 9667.37,6017.1431 9590.29,6087.9531 C8915.91,6707.5031 9107.42,7934.5731 9247,8514.3531 " fill="none" id="C_0001531814603945772616&lt;-C_0002302096389852429221" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.59,1512.1431,23834.81,1518.4831,23815.04,1526.1331,23814.59,1512.1431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7ce68193d44632dd4e25c66ffbbce4c]
reverse link C_0000236996062289735257 to C_0001858199404643284193--><path d="M29896.51,2517.0931 C29889.53,3964.7831 29836.86,14501.9531 29783.29,14559.9531 C28855.83,15564.1831 18261.32,15715.4331 16773.48,15731.7531 " fill="none" id="C_0000236996062289735257&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="29896.57,2504.0531,29892.5437,2510.0355,29896.5173,2516.053,29900.5436,2510.0706,29896.57,2504.0531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29880.29" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29890.29" y="5974.52">_class_name</text><!--MD5=[6f8680ec89f27b3fc0455684d508cc80]
reverse link C_0000236996062289735257 to C_0000104564426296396960--><path d="M29216.61,2505.2731 C28492.49,2692.5431 27340.43,3065.0431 26519.29,3690.9531 C25563.16,4419.7531 25742.75,5002.2031 24892.29,5851.9531 C24768.8,5975.3431 24657.69,5932.4731 24578.29,6087.9531 C24439.55,6359.6231 24694.69,11361.9531 24479.29,11577.9531 C24422.75,11634.6531 23100.89,11558.0231 23038.29,11607.9531 C22975.26,11658.2331 23057.65,11734.0831 22994.29,11783.9531 C22909.64,11850.5731 19209.26,11759.5331 19116.29,11813.9531 C18806.9,11995.0531 18610.92,12351.7031 18494.01,12652.7431 " fill="none" id="C_0000236996062289735257&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="29221.65,2503.9631,29211.9337,2502.3528,29216.8104,2505.2194,29213.9438,2510.0961,29221.65,2503.9631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26525.29" cy="4772.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="26532.29" y="4776.02">«friend»</text><!--MD5=[3f2e423855117caec285a310b19c1bbc]
reverse link C_0001531814603945772616 to C_0000236996062289735257--><path d="M25199.34,1574.6931 C26061.97,1674.9631 27579.76,1866.5431 28867.29,2107.9531 C29007.81,2134.3031 29158.06,2167.0831 29299.15,2199.9531 " fill="none" id="C_0001531814603945772616&lt;-C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25198.46,1581.6431,25179.4,1572.3831,25200.07,1567.7331,25198.46,1581.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9a7eb49f1533d167fe82948ecfcf8f82]
link C_0001801355352189289676 to C_0000236996062289735257--><path d="M33416.85,819.9731 C33415.34,842.5631 33410.16,866.8131 33397.29,885.9531 C32755.03,1841.5031 32207.5,1740.3831 31122.29,2124.9531 C31047.33,2151.5131 30968.63,2175.1131 30888.81,2196.0431 " fill="none" id="C_0001801355352189289676-&gt;C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="30881.6334" cy="2197.913" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="30889.3767" x2="30873.89" y1="2195.903" y2="2199.9231"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="30883.6434" x2="30879.6233" y1="2205.6564" y2="2190.1697"/><!--MD5=[94135747fba5deb4c607347f1e06518f]
link C_0001801355352189289676 to C_0001531814603945772616--><path d="M33275.08,807.2531 C33239.52,819.5931 33200.91,831.2831 33164.29,838.9531 C31641.8,1158.0031 26946.61,1389.6731 25184.64,1467.4631 " fill="none" id="C_0001801355352189289676-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.49,1467.6831,25188.6633,1471.268,25184.4848,1467.4548,25188.2979,1463.2763,25179.49,1467.6831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32920.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="32927.29" y="882.02">collider</text><!--MD5=[b75e3b69c12a4dd7e94bd0823e916a99]
reverse link C_0001801355352189289676 to C_0000210234563198599367--><path d="M33545.49,826.7631 C33568.08,840.3331 33591.08,854.7131 33612.29,868.9531 C34392.94,1393.1431 34823.58,1339.7831 35292.29,2154.9531 C35705.09,2872.8731 35563.2,5047.8531 35761.29,5851.9531 C35788.07,5960.6431 35823.34,5979.0631 35849.29,6087.9531 C36133.88,7282.0631 35779.91,10556.8731 36461.29,11577.9531 C36581.65,11758.3131 36778.13,11627.1931 36888.29,11813.9531 C36964.48,11943.1031 36955.76,14379.0431 36888.29,14512.9531 C36680,14926.4031 36258.13,15234.7231 35893.38,15438.0531 " fill="none" id="C_0001801355352189289676&lt;-C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33534.08,819.9531,33537.1829,826.4625,33544.385,826.1018,33541.2821,819.5925,33534.08,819.9531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35593.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="35600.29" y="3657.02">metadata</text><!--MD5=[327ec61c802d4b8bc89d445f02ff7678]
link C_0001771770302499309898 to C_0000236996062289735257--><path d="M33703.07,807.2031 C33689.46,832.3831 33671.74,861.8731 33652.29,885.9531 C33158.39,1497.6331 33061.47,1753.6231 32345.29,2077.9531 C32092.08,2192.6231 31464.74,2261.2331 30908.56,2300.9931 " fill="none" id="C_0001771770302499309898-&gt;C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="30901.3501" cy="2301.5091" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="30909.3302" x2="30893.37" y1="2300.9451" y2="2302.0731"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="30901.9141" x2="30900.7861" y1="2309.4892" y2="2293.529"/><!--MD5=[dddc2f9d809445d4a2bacef7d4a58738]
link C_0001771770302499309898 to C_0001531814603945772616--><path d="M33643.01,806.9631 C33619.27,819.5431 33593,831.4231 33567.29,838.9531 C33441.93,875.7031 33111.56,876.0431 32981.29,885.9531 C30081.34,1106.6231 26621.45,1349.2431 25184.57,1449.0831 " fill="none" id="C_0001771770302499309898-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.57,1449.4331,25188.8232,1452.8062,25184.5582,1449.0901,25188.2744,1444.8251,25179.57,1449.4331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33336.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="33343.29" y="882.02">collider</text><!--MD5=[de36d73f8d20b29c8ffe70c0f57ee265]
reverse link C_0001771770302499309898 to C_0000210234563198599367--><path d="M33889.51,757.9631 C34246.11,772.3731 35086.83,811.9831 35202.29,868.9531 C35538.69,1034.9231 35767.29,1120.8331 35767.29,1495.9531 C35767.29,1495.9531 35767.29,1495.9531 35767.29,3296.4531 C35767.29,3458.4631 35741.59,3500.5431 35764.29,3660.9531 C35921.62,4772.6331 36261.24,4983.8931 36465.29,6087.9531 C36929.45,8599.3831 36841.64,9262.2631 36949.29,11813.9531 C36961.93,12113.5731 37084.76,14245.4031 36949.29,14512.9531 C36889.66,14630.7431 36350.41,15005.9531 35893.37,15309.5831 " fill="none" id="C_0001771770302499309898&lt;-C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33876.51,757.4431,33882.3472,761.6772,33888.5006,757.9175,33882.6634,753.6834,33876.51,757.4431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35770.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="35777.29" y="3657.02">metadata</text><!--MD5=[eed6ab08d8c501b6208d9f4ac11f9b83]
reverse link C_0001561529841391244418 to C_0001858199404643284193--><path d="M13207.1,9798.4431 C13519.03,11318.5231 14126.33,14138.1531 14412.29,14512.9531 C14948.05,15215.1531 16010.53,15571.2831 16427.03,15688.5531 " fill="none" id="C_0001561529841391244418&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="13204.47,9785.6331,13201.7589,9792.3152,13206.8843,9797.3878,13209.5953,9790.7057,13204.47,9785.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14415.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="14425.29" y="13168.02">_class_name</text><!--MD5=[23ceac23f6c6826b07cc87ed3906ae98]
link C_0001561529841391244418 to C_0001561529841391244418--><path d="M13717.32,8543.8831 C13739.62,8621.8331 13752.29,8718.1831 13752.29,8832.9531 C13752.29,8945.2531 13740.16,9039.9331 13718.74,9116.9731 " fill="none" id="C_0001561529841391244418-&gt;C_0001561529841391244418" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="13717.32,9122.0231,13723.6119,9114.446,13718.6766,9117.2107,13715.912,9112.2754,13717.32,9122.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13760.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="13770.29" y="8837.52">singleton</text><!--MD5=[a7f38b71b0c412aea9feb929bf57c436]
reverse link C_0001561529841391244418 to C_0000104564426296396960--><path d="M13026.99,9790.6031 C13091.72,10406.9931 13288.11,11167.3931 13834.29,11577.9531 C13907.61,11633.0631 17066.14,11548.8631 17136.29,11607.9531 C17197.1,11659.1731 17134.19,11712.1331 17168.29,11783.9531 C17320.73,12105.0031 17567.74,12411.0731 17796.21,12652.8931 " fill="none" id="C_0001561529841391244418&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="13026.47,9785.6331,13023.4173,9794.9969,13026.9845,9790.6066,13031.3749,9794.1738,13026.47,9785.6331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17174.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17181.29" y="11700.52">«friend»</text><!--MD5=[a58d0cd78cca24a1b417e2c7091ad184]
reverse link C_0001531814603945772616 to C_0001561529841391244418--><path d="M23814.86,1545.7631 C22341.77,1647.6431 18788.26,1894.2831 15809.29,2107.9531 C15435.25,2134.7831 15001.29,1975.9531 15001.29,2350.9531 C15001.29,2350.9531 15001.29,2350.9531 15001.29,4772.4531 C15001.29,5354.7431 15191.91,5680.7631 14748.29,6057.9531 C14670.88,6123.7731 13914.79,6025.9431 13834.29,6087.9531 C13292.79,6505.1331 13096.11,7265.5231 13030.06,7880.2231 " fill="none" id="C_0001531814603945772616&lt;-C_0001561529841391244418" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.62,1538.7631,23835.05,1544.3631,23815.58,1552.7331,23814.62,1538.7631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28071.68,9471.7631 C27885.58,10069.5531 27624.85,10991.8431 27503.29,11813.9531 C27480.96,11964.9831 27502.4,14448.2831 27398.29,14559.9531 C26639.52,15373.8131 18100.77,15684.4831 16773.29,15728.0031 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28075.65,9459.0231,28070.0484,9463.5643,28072.0857,9470.4816,28077.6874,9465.9404,28075.65,9459.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27506.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="27516.29" y="13168.02">_class_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28116.16,9471.9231 C27969.11,10071.7531 27763.27,10997.0931 27670.29,11813.9531 C27653.33,11962.9831 27697.18,14395.1931 27604.29,14512.9531 C26901.09,15404.4831 18120.72,15690.0431 16773.31,15728.7231 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28119.3,9459.1431,28113.9849,9464.0165,28116.4392,9470.7971,28121.7543,9465.9237,28119.3,9459.1431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27673.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="132" x="27683.29" y="13168.02">tree_changed_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28176.49,9472.3131 C28082.46,10074.3031 27949.79,11002.7531 27886.29,11813.9531 C27874.59,11963.4831 27915.99,14397.4531 27820.29,14512.9531 C27081.25,15404.9031 18134.25,15690.4231 16773.35,15728.8031 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28178.56,9459.0431,28173.6786,9464.3509,28176.7006,9470.8982,28181.582,9465.5904,28178.56,9459.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27889.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="27899.29" y="13168.02">node_added_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28233.86,9472.5931 C28190.75,10075.7531 28128.65,11005.8531 28093.29,11813.9531 C28090.01,11888.8731 28074.95,14455.0431 28027.29,14512.9531 C27277.25,15424.4331 18148.58,15693.7231 16773.31,15729.2131 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28234.81,9459.2931,28230.3918,9464.9922,28233.9532,9471.2625,28238.3714,9465.5634,28234.81,9459.2931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28096.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="140" x="28106.29" y="13168.02">node_removed_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28288.38,9472.1431 C28303.26,10935.8331 28330.23,14416.6931 28251.29,14512.9531 C27487.7,15444.1431 18164.44,15696.9931 16773.42,15729.6131 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28288.25,9459.0231,28284.3095,9465.0624,28288.3687,9471.0225,28292.3091,9464.9833,28288.25,9459.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28307.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="141" x="28317.29" y="13168.02">node_renamed_name</text><!--MD5=[aa41735a795cbca578fc6182c40fdd69]
reverse link C_0001872058027933416994 to C_0001768230974934037264--><path d="M28360.33,9472.2031 C28484.13,10471.9531 28717.45,12356.1331 28793.01,12966.3631 " fill="none" id="C_0001872058027933416994&lt;-C_0001768230974934037264" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28358.7,9459.0231,28355.4689,9465.4699,28360.1771,9470.9319,28363.4081,9464.4851,28358.7,9459.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28646.29" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="28656.29" y="11700.52">live_edit_root</text><!--MD5=[87dac64b8e7976967bba39fd65a14430]
reverse link C_0001872058027933416994 to C_0000945411446247634027--><path d="M28348.46,9472.2031 C28452.65,10114.6831 28716.53,11079.7931 29381.29,11577.9531 C29760.78,11862.3331 31031.76,11758.5931 31505.29,11783.9531 C31545.57,11786.1131 34380.92,11785.2831 34409.29,11813.9531 C34514.77,11920.5231 34449.09,14368.3831 34409.29,14512.9531 C34326.12,14815.0931 34146.42,15117.9831 33986.49,15346.4331 " fill="none" id="C_0001872058027933416994&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28346.33,9458.9831,28343.3376,9465.544,28348.2429,9470.8297,28351.2353,9464.2688,28346.33,9458.9831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="34469.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="97" x="34479.29" y="13168.02">live_edit_scene</text><!--MD5=[d4b05c55b80957af852af4024a8a787a]
link C_0001872058027933416994 to C_0001872058027933416994--><path d="M29111.82,8562.7331 C29134.2,8637.1931 29146.79,8727.2731 29146.79,8832.9531 C29146.79,8936.3631 29134.74,9024.8331 29113.25,9098.3531 " fill="none" id="C_0001872058027933416994-&gt;C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="29111.82,9103.1731,29118.2006,9095.6706,29113.2331,9098.377,29110.5268,9093.4095,29111.82,9103.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29154.79" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="29164.79" y="8837.52">singleton</text><!--MD5=[5882dd6fcc6b177240657afccabb0c63]
reverse link C_0001872058027933416994 to C_0000104564426296396960--><path d="M28260.12,9464.2731 C28201.74,10105.5931 28004.51,11074.6731 27362.29,11577.9531 C27298.06,11628.2931 27075.75,11589.3531 26996.29,11607.9531 C26790.01,11656.2431 26761.29,11743.6731 26553.29,11783.9531 C26460.92,11801.8431 19866.68,11779.0931 19779.29,11813.9531 C19353.15,11983.9431 18979.6,12346.4931 18720.66,12652.8931 " fill="none" id="C_0001872058027933416994&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28260.59,9459.1031,28255.8072,9467.7127,28260.1464,9464.0834,28263.7757,9468.4225,28260.59,9459.1031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27002.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27009.29" y="11700.52">«friend»</text><!--MD5=[5b0fb04546520b0dec254b45853dbfed]
reverse link C_0000970940027123558604 to C_0001872058027933416994--><path d="M28303.64,5052.8431 C28299.81,5700.1031 28290.28,7311.4031 28284.99,8206.8931 " fill="none" id="C_0000970940027123558604&lt;-C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28296.64,5052.5231,28303.76,5032.5731,28310.64,5052.6131,28296.64,5052.5231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5b171c69af600bc12977795a2bb103e4]
reverse link C_0000096380574950611570 to C_0001858199404643284193--><path d="M14542.05,9100.5931 C14449.08,9948.3131 14253.23,12636.0331 15228.29,14512.9531 C15506.8,15049.0531 16124.77,15460.2431 16427.03,15637.6931 " fill="none" id="C_0000096380574950611570&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="14543.48,9087.6331,14538.8452,9093.1575,14542.1621,9099.5605,14546.7968,9094.0361,14543.48,9087.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15231.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="15241.29" y="13168.02">_class_name</text><!--MD5=[7d4e19f5f1e549348290eead97de4c50]
reverse link C_0000096380574950611570 to C_0000104564426296396960--><path d="M14560.93,9092.8631 C14545.75,9654.0431 14599.36,10979.9731 15386.29,11577.9531 C15468.4,11640.3431 17163.66,11541.2431 17242.29,11607.9531 C17302.92,11659.3831 17241.86,11711.3631 17274.29,11783.9531 C17415.46,12099.9131 17643.78,12408.2731 17853.41,12652.9431 " fill="none" id="C_0000096380574950611570&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="14561.08,9087.5331,14556.85,9096.4273,14560.9515,9092.5315,14564.8473,9096.633,14561.08,9087.5331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17280.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17287.29" y="11700.52">«friend»</text><!--MD5=[d80b17199b730d4efec0c676d67f0184]
reverse link C_0001531814603945772616 to C_0000096380574950611570--><path d="M23815.18,1525.0231 C21654.29,1614.0831 15176.29,1917.2231 15176.29,2350.9531 C15176.29,2350.9531 15176.29,2350.9531 15176.29,4772.4531 C15176.29,6226.5331 14794.3,7942.3031 14639.4,8578.2931 " fill="none" id="C_0001531814603945772616&lt;-C_0000096380574950611570" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23815.02,1518.0231,23835.29,1524.2031,23815.6,1532.0131,23815.02,1518.0231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43e270b203a1efc3a7378a000f4b2686]
reverse link C_0001699661383862634192 to C_0001858199404643284193--><path d="M16351.7,8991.6731 C16317.25,9660.9531 16199.88,12331.6431 16391.29,14512.9531 C16425.4,14901.6431 16516.2,15352.6731 16566.16,15582.2731 " fill="none" id="C_0001699661383862634192&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="16352.38,8978.6231,16348.0755,8984.4086,16351.7604,8990.6071,16356.0648,8984.8217,16352.38,8978.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16394.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="16404.29" y="13168.02">_class_name</text><!--MD5=[43e270b203a1efc3a7378a000f4b2686]
reverse link C_0001699661383862634192 to C_0001858199404643284193--><path d="M16368.36,8991.7131 C16390.85,9435.7931 16454.99,10734.4331 16492.29,11813.9531 C16533.73,13013.1631 16524.26,13313.5431 16559.29,14512.9531 C16570.54,14898.1231 16586.48,15351.5631 16594.79,15582.2031 " fill="none" id="C_0001699661383862634192&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="16367.69,8978.5031,16363.9984,8984.6976,16368.2965,8990.4878,16371.9881,8984.2933,16367.69,8978.5031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16562.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="16572.29" y="13168.02">function</text><!--MD5=[7ec9132e29862f4fe6197450a34dda02]
reverse link C_0001699661383862634192 to C_0000104564426296396960--><path d="M16317.47,8983.5731 C16194.32,9449.2831 15893.7,10883.3831 16638.29,11577.9531 C16715.76,11650.2131 17511.03,11538.8031 17591.29,11607.9531 C17651.52,11659.8531 17597.44,11708.7731 17623.29,11783.9531 C17726.56,12084.3031 17887.25,12399.5131 18030.83,12652.5831 " fill="none" id="C_0001699661383862634192&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="16318.82,8978.4731,16312.6445,8986.1454,16317.537,8983.3057,16320.3767,8988.1982,16318.82,8978.4731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17629.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17636.29" y="11700.52">«friend»</text><!--MD5=[e0e13f14938ed7974959856216727404]
reverse link C_0001778859257025660860 to C_0001699661383862634192--><path d="M22686.56,2357.4731 C21786.24,2376.7031 18430.4,2456.3531 18242.29,2578.9531 C18188.42,2614.0631 17770.11,3568.8431 17724.29,3613.9531 C17668.06,3669.3231 17613.84,3629.5231 17564.29,3690.9531 C16944.21,4459.6931 17636.77,5060.2531 17046.29,5851.9531 C16921.05,6019.8731 16751.98,5912.0031 16638.29,6087.9531 C16089.48,6937.2931 16256.96,8252.7231 16332.42,8687.2231 " fill="none" id="C_0001778859257025660860&lt;-C_0001699661383862634192" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="22686.58,2350.4731,22706.73,2357.0431,22686.88,2364.4731,22686.58,2350.4731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e0b6cbd5b03f80ab3eba4fe2dcbf948]
link C_0000762417759113755306 to C_0001531814603945772616--><path d="M32161.07,787.9531 C32047.96,807.0631 31902.59,828.6831 31772.29,838.9531 C31062.46,894.8831 29277.97,811.1431 28568.29,868.9531 C27369.36,966.6131 25988,1207.6431 25184.67,1360.8031 " fill="none" id="C_0000762417759113755306-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25179.66,1361.7531,25189.2462,1364.0126,25184.5731,1360.8248,25187.7608,1356.1517,25179.66,1361.7531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="28574.29" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="19" x="28581.29" y="882.02">obj</text><!--MD5=[8bda8e308cc1dbbbc74088973fe49d83]
reverse link C_0000762417759113755306 to C_0001858199404643284193--><path d="M32387.67,805.5831 C32514.97,1017.1831 33017.67,1796.2131 33675.29,2077.9531 C33817.9,2139.0531 34930.76,2042.2231 35071.29,2107.9531 C35287.79,2209.2131 35266.29,1879.7531 35266.29,2761.9531 C35266.29,2761.9531 35266.29,2761.9531 35266.29,5970.9531 C35266.29,6126.7131 35315.83,11462.4931 35211.29,11577.9531 C35170.18,11623.3631 34998.03,11600.0431 34937.29,11607.9531 C34418.02,11675.5731 34293.82,11736.8631 33772.29,11783.9531 C33717.21,11788.9231 32816.12,11774.5731 32777.29,11813.9531 C32670.17,11922.6031 32838.08,14449.0531 32733.29,14559.9531 C32154.51,15172.4531 18474.45,15668.1531 16773.36,15727.4931 " fill="none" id="C_0000762417759113755306&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32380.85,794.2031,32380.4961,801.4055,32387.0084,804.5023,32387.3623,797.2999,32380.85,794.2031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35272.29" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="27" x="35279.29" y="3657.02">func</text><!--MD5=[ee47356e384c9a8586af688e36c84f71]
reverse link C_0001370497546359815893 to C_0001858199404643284193--><path d="M15688.03,9388.8731 C15704.77,10412.8931 15787.6,12663.9531 16180.29,14512.9531 C16264.5,14909.4331 16439.38,15354.9231 16534.77,15582.2531 " fill="none" id="C_0001370497546359815893&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="15687.82,9375.7631,15683.9194,9381.8282,15688.0178,9387.7615,15691.9183,9381.6964,15687.82,9375.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16183.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="16193.29" y="13168.02">_class_name</text><!--MD5=[3adf581e5c7850b91ef14b43d83cd267]
link C_0001370497546359815893 to C_0001370497546359815893--><path d="M15964.34,8428.3931 C15985.96,8517.8331 15999.29,8652.6831 15999.29,8832.9531 C15999.29,9009.8831 15986.45,9143.0531 15965.53,9232.4831 " fill="none" id="C_0001370497546359815893-&gt;C_0001370497546359815893" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="15964.34,9237.5131,15970.3117,9229.6812,15965.4955,9232.6485,15962.5282,9227.8323,15964.34,9237.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16007.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="16017.29" y="8837.52">singleton</text><!--MD5=[f0c11157ea1c302f0338a5d98b865e3f]
reverse link C_0001370497546359815893 to C_0000104564426296396960--><path d="M15580,9380.7531 C15494.6,10013.6031 15472.12,11037.8231 16081.29,11577.9531 C16133.98,11624.6631 17294.28,11562.7931 17348.29,11607.9531 C17409.55,11659.1631 17352.81,11710.5831 17384.29,11783.9531 C17517.22,12093.7831 17725.96,12404.7931 17914.99,12652.7831 " fill="none" id="C_0001370497546359815893&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="15580.69,9375.6431,15575.5182,9384.0248,15580.0189,9380.5979,15583.4458,9385.0986,15580.69,9375.6431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17390.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17397.29" y="11700.52">«friend»</text><!--MD5=[fcb1dceefea1281ea342b1a8ab9dedf3]
reverse link C_0001531814603945772616 to C_0001370497546359815893--><path d="M23815.04,1532.9331 C21819.38,1638.3331 16196.29,1969.1731 16196.29,2350.9531 C16196.29,2350.9531 16196.29,2350.9531 16196.29,4772.4531 C16196.29,5445.8531 15915.47,7348.4031 15769.77,8290.1331 " fill="none" id="C_0001531814603945772616&lt;-C_0001370497546359815893" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.75,1525.9431,23835.09,1531.8731,23815.48,1539.9231,23814.75,1525.9431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[280af337143101b9c3d73b7838d445f5]
reverse link C_0000425668537377496256 to C_0001858199404643284193--><path d="M30438.61,9011.4231 C30369.99,9472.6431 30184.88,10747.3731 30072.29,11813.9531 C30040.16,12118.3331 30069.73,14342.5431 29854.29,14559.9531 C28886.82,15536.2631 18262.56,15711.5231 16773.31,15731.3431 " fill="none" id="C_0000425668537377496256&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30440.56,8998.3531,30435.72,9003.6986,30438.7928,9010.2223,30443.6328,9004.8768,30440.56,8998.3531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30075.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="30085.29" y="13168.02">_class_name</text><!--MD5=[f92d939a6323d7037ad6a417dc348d89]
reverse link C_0000425668537377496256 to C_0000945411446247634027--><path d="M30455.74,9011.3731 C30406.03,9950.9631 30186.52,14310.7531 30382.29,14512.9531 C30418.17,14550.0131 31260.3,14530.2531 31310.29,14542.9531 C32105.77,14745.0031 32942.63,15242.2431 33378.17,15526.0731 " fill="none" id="C_0000425668537377496256&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30456.44,8998.1231,30452.1292,9003.9039,30455.8072,9010.1064,30460.118,9004.3257,30456.44,8998.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30385.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="69" x="30395.29" y="13168.02">expression</text><!--MD5=[f92d939a6323d7037ad6a417dc348d89]
reverse link C_0000425668537377496256 to C_0000945411446247634027--><path d="M30446.02,9011.0931 C30396.96,9472.1531 30268.16,10747.7431 30225.29,11813.9531 C30219.27,11963.7731 30120.8,14405.4131 30225.29,14512.9531 C30265.73,14554.5631 31212.98,14528.9631 31269.29,14542.9531 C31325.47,14556.9131 32742.2,15263.4331 33378.19,15581.3131 " fill="none" id="C_0000425668537377496256&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30447.42,8998.0231,30442.8033,9003.5627,30446.1411,9009.9548,30450.7578,9004.4152,30447.42,8998.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30228.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="30238.29" y="13168.02">error_str</text><!--MD5=[cec3ce52536a4a93abd3a3466f0863d1]
reverse link C_0000425668537377496256 to C_0000104564426296396960--><path d="M30501.37,9003.2731 C30594.6,9492.8331 30785.56,10917.0831 30016.29,11577.9531 C29958.28,11627.7931 27334.59,11580.2931 27263.29,11607.9531 C27153.83,11650.4131 27175.9,11741.8631 27066.29,11783.9531 C26877.33,11856.5131 19967.32,11738.9831 19779.29,11813.9531 C19353.13,11983.8731 18979.57,12346.4231 18720.65,12652.8431 " fill="none" id="C_0000425668537377496256&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="30500.41,8998.2731,30498.1775,9007.8656,30501.3521,9003.1836,30506.0342,9006.3582,30500.41,8998.2731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27269.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27276.29" y="11700.52">«friend»</text><!--MD5=[7d452e244b0aee8c038afb4d6799e947]
reverse link C_0001778859257025660860 to C_0000425668537377496256--><path d="M23083.07,2508.7931 C23107.46,2524.5431 23133.15,2538.5331 23159.29,2548.9531 C23287.07,2599.8531 23330.99,2560.5931 23467.29,2578.9531 C24908.75,2773.1431 28922.54,2629.8331 29917.29,3690.9531 C29961.12,3737.7031 30363.08,7794.5931 30449.13,8667.6331 " fill="none" id="C_0001778859257025660860&lt;-C_0000425668537377496256" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23079.13,2514.5831,23066.41,2497.6431,23086.92,2502.9531,23079.13,2514.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f51a88240f615cca582e7a0121c3766]
reverse link C_0001197720528033242618 to C_0001858199404643284193--><path d="M8071.55,9011.1931 C7974.63,9507.8731 7781.01,10919.8331 8544.29,11577.9531 C8613.17,11637.3431 11742.64,11557.4731 11818.29,11607.9531 C12402.08,11997.4931 12543.64,14034.7231 13057.29,14512.9531 C14075.96,15461.3731 15866.41,15676.9931 16427.28,15722.2431 " fill="none" id="C_0001197720528033242618&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8074.11,8998.1931,8069.0242,9003.3053,8071.7871,9009.9661,8076.8729,9004.8539,8074.11,8998.1931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13060.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="13070.29" y="13168.02">_class_name</text><!--MD5=[ee3ac7328ce85f190ffde4073aa3ab2d]
link C_0001197720528033242618 to C_0001197720528033242618--><path d="M8142.08,8667.8231 C8265.17,8122.5031 8461.79,8177.5431 8461.79,8832.9531 C8461.79,9486.2831 8266.41,9543.0531 8143.26,9003.2631 " fill="none" id="C_0001197720528033242618-&gt;C_0001197720528033242618" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8142.08,8998.0831,8140.1814,9007.7472,8143.1918,9002.9579,8147.9811,9005.9684,8142.08,8998.0831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8472.79,8828.5195,8476.79,8832.5195,8472.79,8836.5195,8468.79,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="8479.79" y="8837.52">singleton</text><!--MD5=[d5273b688c2cbc8d25291921feeb727a]
reverse link C_0001197720528033242618 to C_0000104564426296396960--><path d="M8073.05,9003.2831 C7976.49,9492.8531 7776.13,10917.1231 8544.29,11577.9531 C8589.97,11617.2431 12825.08,11589.0631 12882.29,11607.9531 C13008.24,11649.5331 12997.36,11742.3231 13123.29,11783.9531 C13325.53,11850.8131 16760.23,11733.0931 16957.29,11813.9531 C17374.18,11985.0231 17735.24,12346.9931 17984.53,12652.8831 " fill="none" id="C_0001197720528033242618&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8074.04,8998.2731,8068.3662,9006.3234,8073.0677,9003.1777,8076.2134,9007.8792,8074.04,8998.2731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="13129.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="13136.29" y="11700.52">«friend»</text><!--MD5=[30e625aae1c06fb81ca2c0a65c06b825]
reverse link C_0001531814603945772616 to C_0001197720528033242618--><path d="M23814.96,1532.7631 C22124.22,1618.8931 17650.21,1853.4531 13920.29,2107.9531 C13587.12,2130.6831 13209.29,2017.0031 13209.29,2350.9531 C13209.29,2350.9531 13209.29,2350.9531 13209.29,4772.4531 C13209.29,5723.2531 12399.59,5752.2031 11499.29,6057.9531 C11421.57,6084.3531 8606.44,6034.3231 8544.29,6087.9531 C7774.57,6752.2931 7978.25,8183.2731 8074.14,8667.7431 " fill="none" id="C_0001531814603945772616&lt;-C_0001197720528033242618" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.7,1525.7731,23835.03,1531.7431,23815.41,1539.7531,23814.7,1525.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2f8780ed64ed38ffe1cf4ca2575b2709]
reverse link C_0001130773750498288283 to C_0001858199404643284193--><path d="M16934.56,8972.7031 C16886.5,9377.7731 16747.73,10594.1731 16689.29,11607.9531 C16614.97,12897.2131 16656.66,13221.8731 16628.29,14512.9531 C16619.83,14898.0731 16609.27,15351.5431 16603.86,15582.1931 " fill="none" id="C_0001130773750498288283&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="16936.13,8959.5031,16931.4458,8964.9856,16934.7049,8971.4182,16939.3892,8965.9357,16936.13,8959.5031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16681.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="16691.29" y="13168.02">_class_name</text><!--MD5=[f88684864f83bcfca48b3287b5bf4bf4]
link C_0001130773750498288283 to C_0001130773750498288283--><path d="M16973.31,8706.2631 C17088.13,8120.2931 17281.29,8162.5231 17281.29,8832.9531 C17281.29,9501.4231 17089.26,9545.3631 16974.32,8964.7731 " fill="none" id="C_0001130773750498288283-&gt;C_0001130773750498288283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16973.31,8959.6431,16971.1096,8969.243,16974.2686,8964.5504,16978.9612,8967.7093,16973.31,8959.6431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="17292.29,8828.5195,17296.29,8832.5195,17292.29,8836.5195,17288.29,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="17299.29" y="8837.52">singleton</text><!--MD5=[3e73bcbd9daf28c3d368d37c56cc0e9c]
reverse link C_0001130773750498288283 to C_0000104564426296396960--><path d="M16922.81,8964.9931 C16834.9,9408.6531 16617.15,10866.0631 17373.29,11577.9531 C17425.94,11627.5231 17643.44,11559.6931 17697.29,11607.9531 C17756.75,11661.2331 17708.95,11707.9131 17733.29,11783.9531 C17827.94,12079.6331 17966.19,12397.1131 18087.35,12652.7731 " fill="none" id="C_0001130773750498288283&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="16923.84,8959.8231,16918.1436,8967.8575,16922.8539,8964.7249,16925.9865,8969.4352,16923.84,8959.8231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17739.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17746.29" y="11700.52">«friend»</text><!--MD5=[c2fcb52a4859165f7fca92f209480c5e]
reverse link C_0001531814603945772616 to C_0001130773750498288283--><path d="M23814.71,1519.0631 C22138.88,1575.5631 17964.81,1750.8531 17449.29,2107.9531 C17350.92,2176.1031 17333.29,2231.2831 17333.29,2350.9531 C17333.29,2350.9531 17333.29,2350.9531 17333.29,4772.4531 C17333.29,6329.8031 17051.18,8208.5031 16971.83,8706.0931 " fill="none" id="C_0001531814603945772616&lt;-C_0001130773750498288283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.7,1512.0531,23834.92,1518.3831,23815.17,1526.0431,23814.7,1512.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c3000aebde2149cc2be64412041baff]
reverse link C_0000790752023609648644 to C_0001858199404643284193--><path d="M18798.41,9977.7631 C18834.44,10541.4031 18984.9,11183.1631 19428.29,11577.9531 C19484.11,11627.6531 19712.85,11552.7931 19763.29,11607.9531 C19798.39,11646.3331 19628.82,13882.8831 19124.29,14512.9531 C18494.71,15299.1931 17233.72,15611.8231 16773.5,15702.7831 " fill="none" id="C_0000790752023609648644&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="18797.59,9964.4631,18793.9665,9970.6977,18798.3279,9976.4404,18801.9514,9970.2058,18797.59,9964.4631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="19765.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="19775.29" y="13168.02">_class_name</text><!--MD5=[ef5671d32f6987d56ec842457947c9ac]
link C_0000790752023609648644 to C_0000790752023609648644--><path d="M19311.34,8490.5231 C19333.35,8576.2631 19346.29,8690.4131 19346.29,8832.9531 C19346.29,8972.7131 19333.86,9085.1731 19312.62,9170.3331 " fill="none" id="C_0000790752023609648644-&gt;C_0000790752023609648644" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="19311.34,9175.3831,19317.4034,9167.622,19312.5527,9170.5324,19309.6423,9165.6817,19311.34,9175.3831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="19357.29,8828.5195,19361.29,8832.5195,19357.29,8836.5195,19353.29,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="19364.29" y="8837.52">singleton</text><!--MD5=[5d43d9f033ddff753a837836cd050d9b]
reverse link C_0000790752023609648644 to C_0000104564426296396960--><path d="M18722.96,9969.6031 C18620.12,10839.0131 18483.15,11996.9931 18405.59,12652.7331 " fill="none" id="C_0000790752023609648644&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="18723.56,9964.5031,18718.5344,9972.9733,18722.975,9969.4688,18726.4795,9973.9093,18723.56,9964.5031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18532.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18539.29" y="11700.52">«friend»</text><!--MD5=[26a39b7fc31ced5e0167cdc73077bc9d]
reverse link C_0001531814603945772616 to C_0000790752023609648644--><path d="M23814.89,1537.2231 C22386.26,1622.5631 19156.03,1839.0931 18085.29,2107.9531 C17938.07,2144.9231 17845.29,2199.1531 17845.29,2350.9531 C17845.29,2350.9531 17845.29,2350.9531 17845.29,3653.4531 C17845.29,4631.5131 17763.68,4890.3431 17942.29,5851.9531 C17959.93,5946.8831 17935.63,5997.9631 18011.29,6057.9531 C18067.43,6102.4631 18279.26,6039.7831 18332.29,6087.9531 C18773.08,6488.3931 18911.82,7135.9231 18936.85,7701.4131 " fill="none" id="C_0001531814603945772616&lt;-C_0000790752023609648644" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.62,1530.2231,23835,1536.0231,23815.46,1544.1931,23814.62,1530.2231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6755319c82a581eac8987a926ca1aa6]
reverse link C_0000897221634691489964 to C_0001858199404643284193--><path d="M20031.07,9183.7531 C20155.12,10284.5531 20476.12,13655.3831 19867.29,14512.9531 C19116.77,15570.1031 17336.14,15712.6731 16773.69,15731.0231 " fill="none" id="C_0000897221634691489964&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="20029.58,9170.5131,20026.2772,9176.9234,20030.924,9182.4376,20034.2268,9176.0274,20029.58,9170.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20230.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="20240.29" y="13168.02">_class_name</text><!--MD5=[588807cb7a44356f49494dcdc443a06c]
link C_0000897221634691489964 to C_0000897221634691489964--><path d="M20120.11,8495.2731 C20317.93,8144.8131 20567.29,8257.3731 20567.29,8832.9531 C20567.29,9406.0031 20320.12,9520.0931 20122.72,9175.2231 " fill="none" id="C_0000897221634691489964-&gt;C_0000897221634691489964" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20120.11,9170.6331,20121.0849,9180.4336,20122.583,9174.9787,20128.0379,9176.4768,20120.11,9170.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20575.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="20585.29" y="8837.52">singleton</text><!--MD5=[b2579420d2152b5e55fe92957e16071b]
reverse link C_0000897221634691489964 to C_0000104564426296396960--><path d="M20031.13,9175.6931 C20081.59,9758.9731 20089.48,10944.8731 19428.29,11577.9531 C19367.18,11636.4731 19309.97,11559.9431 19240.29,11607.9531 C18879.2,11856.7531 18644.56,12302.1731 18506.51,12652.6331 " fill="none" id="C_0000897221634691489964&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="20030.68,9170.5631,20027.4655,9179.8726,20031.1082,9175.5448,20035.4361,9179.1875,20030.68,9170.5631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="19246.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="19253.29" y="11700.52">«friend»</text><!--MD5=[eb044c62a1c7a56ece172b94356c22f4]
reverse link C_0001531814603945772616 to C_0000897221634691489964--><path d="M23815.11,1516.0631 C22225.99,1564.9031 18423.76,1725.8431 18050.29,2154.9531 C17879.1,2351.6531 17968.3,5700.7731 18010.29,5851.9531 C18038.89,5954.9131 18041.88,6004.2931 18134.29,6057.9531 C18196.48,6094.0631 19373.12,6041.8431 19428.29,6087.9531 C20136.49,6679.8131 20102.9,7902.5331 20038.2,8495.2131 " fill="none" id="C_0001531814603945772616&lt;-C_0000897221634691489964" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.95,1509.0631,23835.15,1515.4531,23815.38,1523.0631,23814.95,1509.0631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ff6a4cd457cb05befae3532e64a2ade2]
reverse link C_0000135188690773659020 to C_0001858199404643284193--><path d="M20947.56,9004.5031 C21053.14,9474.5031 21277.09,10804.6831 20649.29,11577.9531 C20620.85,11612.9831 20580.43,11572.6731 20552.29,11607.9531 C20148.63,12114.1031 20731.86,14003.5631 20332.29,14512.9531 C19869.5,15102.9531 17445.95,15580.2631 16773.49,15702.8331 " fill="none" id="C_0000135188690773659020&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="20944.62,8991.5331,20942.0433,8998.2682,20947.2692,9003.237,20949.8459,8996.502,20944.62,8991.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="20483.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="20493.29" y="13168.02">_class_name</text><!--MD5=[b9e190a0b6f3b1ed5b4efd3465fe9397]
link C_0000135188690773659020 to C_0000135188690773659020--><path d="M20928.84,8674.3931 C21024.36,8122.0731 21178.29,8174.9231 21178.29,8832.9531 C21178.29,9488.8931 21025.33,9543.4931 20929.75,8996.7531 " fill="none" id="C_0000135188690773659020-&gt;C_0000135188690773659020" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="20928.84,8991.5131,20926.4412,9001.0654,20929.6967,8996.4392,20934.3229,8999.6947,20928.84,8991.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21186.29" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="21196.29" y="8837.52">singleton</text><!--MD5=[690fea73cee7ce9a9e7a660e160b4514]
reverse link C_0000135188690773659020 to C_0000104564426296396960--><path d="M20953.05,8996.3431 C21082.62,9474.5831 21383.86,10887.4231 20649.29,11577.9531 C20610.41,11614.5031 19737.47,11585.0031 19689.29,11607.9531 C19564.71,11667.3031 19099.8,12222.7131 18751.44,12652.9031 " fill="none" id="C_0000135188690773659020&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="20951.73,8991.4631,20950.2341,9001.1977,20953.0432,8996.2876,20957.9533,8999.0966,20951.73,8991.4631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="19695.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="19702.29" y="11700.52">«friend»</text><!--MD5=[17445eda0668e3f315ac88fffdbd1807]
reverse link C_0001531814603945772616 to C_0000135188690773659020--><path d="M23814.92,1518.0231 C22149.84,1575.4731 18058.29,1775.2331 18058.29,2350.9531 C18058.29,2350.9531 18058.29,2350.9531 18058.29,3653.4531 C18058.29,3897.7831 17942.77,5667.7531 18103.29,5851.9531 C18294.88,6071.8031 19108.88,6031.5031 19399.29,6057.9531 C19433.88,6061.1031 20623.9,6064.2531 20649.29,6087.9531 C21388.89,6778.1831 21081.41,8200.0931 20951.95,8674.2031 " fill="none" id="C_0001531814603945772616&lt;-C_0000135188690773659020" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.78,1511.0231,23835.01,1517.3331,23815.26,1525.0131,23814.78,1511.0231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b16246fece6ea345d4e7230a252ecdad]
reverse link C_0001150621116588802549 to C_0001858199404643284193--><path d="M26897.56,8985.3531 C26926.05,9839.5231 27049.61,14035.0331 26745.29,14512.9531 C26184.2,15394.1231 18066.95,15687.0231 16773.47,15728.2031 " fill="none" id="C_0001150621116588802549&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26897.11,8972.1031,26893.3166,8978.2358,26897.5186,8984.0962,26901.312,8977.9635,26897.11,8972.1031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26949.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="26959.29" y="13168.02">_class_name</text><!--MD5=[b16246fece6ea345d4e7230a252ecdad]
reverse link C_0001150621116588802549 to C_0001858199404643284193--><path d="M26876.98,8985.1531 C26787.01,9866.9231 26324.14,14313.2931 26118.29,14512.9531 C25416.85,15193.3031 18006.23,15651.7631 16773.61,15723.5731 " fill="none" id="C_0001150621116588802549&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26878.31,8972.1131,26873.7182,8977.6733,26877.0847,8984.0504,26881.6764,8978.4902,26878.31,8972.1131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26568.29,13159.0195,26572.29,13163.0195,26568.29,13167.0195,26564.29,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="96" x="26575.29" y="13168.02">target_method</text><!--MD5=[44b215f3cf752c659380949525347290]
reverse link C_0001150621116588802549 to C_0000210234563198599367--><path d="M26865.4,8985.1631 C26790.97,9458.4131 26637.06,10918.8031 27433.29,11577.9531 C27480.21,11616.7931 31760.63,11588.3331 31818.29,11607.9531 C31940.82,11649.6331 31927.87,11741.9631 32050.29,11783.9531 C32116.91,11806.8031 34535.02,11764.6431 34585.29,11813.9531 C34692.39,11919.0031 34634.46,14367.0331 34669.29,14512.9531 C34681.48,14564.0031 34695.92,14615.4831 34712.12,14666.9331 " fill="none" id="C_0001150621116588802549&lt;-C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26867.47,8972.1331,26862.5829,8977.4356,26865.5978,8983.9862,26870.4849,8978.6837,26867.47,8972.1331" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="34675.29,13159.0195,34679.29,13163.0195,34675.29,13167.0195,34671.29,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="18" x="34682.29" y="13168.02">ret</text><!--MD5=[44b215f3cf752c659380949525347290]
reverse link C_0001150621116588802549 to C_0000210234563198599367--><path d="M26865.39,8985.1731 C26790.94,9458.4431 26636.99,10918.8831 27433.29,11577.9531 C27481.73,11618.0431 31904.2,11579.5431 31960.29,11607.9531 C32047.28,11652.0131 32004.41,11739.6831 32091.29,11783.9531 C32156,11816.9131 34653.87,11762.6831 34705.29,11813.9531 C34811.49,11919.8331 34640.87,14404.3631 34744.29,14512.9531 C34817.08,14589.3831 35145.35,14466.6731 35218.29,14542.9531 C35254.19,14580.4931 35283.25,14622.1231 35306.47,14666.6931 " fill="none" id="C_0001150621116588802549&lt;-C_0000210234563198599367-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26867.46,8972.1431,26862.5671,8977.4403,26865.5749,8983.9941,26870.4678,8978.697,26867.46,8972.1431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="34750.29,13159.0195,34754.29,13163.0195,34750.29,13167.0195,34746.29,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="34757.29" y="13168.02">userdata</text><!--MD5=[6ec94f72a6ef3ec7ace433902892bd7e]
link C_0001150621116588802549 to C_0001531814603945772616--><path d="M26915.15,8693.7631 C26979.83,8251.8331 27117.59,6856.9931 26430.29,6087.9531 C26176.44,5803.9131 25894.36,6101.2331 25606.29,5851.9531 C24809.8,5162.7131 25110.56,4629.9331 24633.29,3690.9531 C24368.67,3170.3331 24132.71,3113.5231 23983.29,2548.9531 C23938.49,2379.6731 23925.45,2320.2331 23983.29,2154.9531 C23991.79,2130.6631 24001.61,2106.6031 24012.52,2082.8631 " fill="none" id="C_0001150621116588802549-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24014.71,2078.1131,24007.3028,2084.6041,24012.612,2082.6517,24014.5644,2087.9609,24014.71,2078.1131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24598.29,3291.0195,24602.29,3295.0195,24598.29,3299.0195,24594.29,3295.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="100" x="24605.29" y="3300.02">target_instance</text><!--MD5=[927cfeb52f41859ab2973f5dadce2f60]
reverse link C_0001150621116588802549 to C_0000104564426296396960--><path d="M26890.33,8977.4331 C26879.56,9519.2931 26810.07,11428.4431 26364.29,11783.9531 C26292.79,11840.9831 19864.24,11780.0631 19779.29,11813.9531 C19353.16,11983.9631 18979.61,12346.5131 18720.67,12652.9131 " fill="none" id="C_0001150621116588802549&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26890.43,8972.3031,26886.2503,8981.2211,26890.3297,8977.3021,26894.2487,8981.3815,26890.43,8972.3031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26485.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="26492.29" y="11700.52">«friend»</text><!--MD5=[d6a6ec8d3380d1482b36a055e886b7ee]
reverse link C_0001778859257025660860 to C_0001150621116588802549--><path d="M22854.76,2516.8031 C22688.1,3071.7431 22233.45,4898.7831 23134.29,5851.9531 C23376.29,6108.0131 24354.93,6031.9531 24706.29,6057.9531 C24754.06,6061.4831 26393.99,6056.7031 26430.29,6087.9531 C27216.58,6764.7431 27008.79,8237.0031 26921.42,8693.8931 " fill="none" id="C_0001778859257025660860&lt;-C_0001150621116588802549" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="22848.07,2514.7231,22860.56,2497.6031,22861.47,2518.7731,22848.07,2514.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d31de51765da68085e856073ce4122]
reverse link C_0001186331261774827872 to C_0001858199404643284193--><path d="M22741.1,9087.7831 C22640.62,9624.5231 22493.52,10882.3031 23139.29,11577.9531 C23185.25,11627.4631 23245.5,11555.6831 23288.29,11607.9531 C23296.12,11617.5231 23392.37,14368.6331 23271.29,14512.9531 C22403.43,15547.4331 17735.23,15707.9631 16773.6,15730.1631 " fill="none" id="C_0001186331261774827872&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="22743.53,9074.8531,22738.4907,9080.0112,22741.3138,9086.6467,22746.3531,9081.4887,22743.53,9074.8531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23335.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="23345.29" y="13168.02">_class_name</text><!--MD5=[1dc07f46a8f623d4dfac70da7186de42]
reverse link C_0001186331261774827872 to C_0000104564426296396960--><path d="M22850.2,9079.6731 C22951.26,9612.1331 23104.36,10880.4431 22453.29,11577.9531 C22127.9,11926.5531 21874.5,11733.5731 21400.29,11783.9531 C21310.73,11793.4731 19862.72,11779.9931 19779.29,11813.9531 C19355.35,11986.5331 18982.48,12347.6531 18723.3,12652.7831 " fill="none" id="C_0001186331261774827872&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="22849.24,9074.6131,22846.9806,9084.1993,22850.1683,9079.5262,22854.8415,9082.714,22849.24,9074.6131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="22421.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="22428.29" y="11700.52">«friend»</text><!--MD5=[b77ea624b2b728023d518baa273d3067]
reverse link C_0001531814603945772616 to C_0001186331261774827872--><path d="M23818.75,1819.4831 C23638.85,1952.5331 23494.29,2128.6131 23494.29,2350.9531 C23494.29,2350.9531 23494.29,2350.9531 23494.29,4772.4531 C23494.29,4915.3031 23569.57,5953.3331 23472.29,6057.9531 C23421.7,6112.3631 23192.73,6036.3331 23139.29,6087.9531 C22448.72,6755.0931 22627.82,8054.6331 22739.22,8591.2531 " fill="none" id="C_0001531814603945772616&lt;-C_0001186331261774827872" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23814.84,1813.6731,23835.13,1807.5531,23823.08,1824.9831,23814.84,1813.6731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64510270a9d4c68a897134b90e8a959c]
reverse link C_0001895218672297528471 to C_0001858199404643284193--><path d="M23381.67,9119.9631 C23472.07,10212.5631 23766.37,14083.1931 23437.29,14512.9531 C22594.87,15613.1231 17753.88,15721.6031 16773.45,15732.2931 " fill="none" id="C_0001895218672297528471&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23380.58,9106.8431,23377.0881,9113.1524,23381.5689,9118.8023,23385.0608,9112.4931,23380.58,9106.8431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23592.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="23602.29" y="13168.02">_class_name</text><!--MD5=[d0af4a0fe845fc378a64240482e48309]
link C_0001895218672297528471 to C_0001895218672297528471--><path d="M23397.09,8559.4231 C23479.33,8133.5331 23592.79,8224.7131 23592.79,8832.9531 C23592.79,9438.8231 23480.22,9531.6531 23398.06,9111.4531 " fill="none" id="C_0001895218672297528471-&gt;C_0001895218672297528471" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="23397.09,9106.4831,23394.8575,9116.0756,23398.0321,9111.3936,23402.7142,9114.5682,23397.09,9106.4831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23603.79,8828.5195,23607.79,8832.5195,23603.79,8836.5195,23599.79,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="23610.79" y="8837.52">singleton</text><!--MD5=[20437a7e41890d7ee60ce7b7515fc40c]
reverse link C_0001895218672297528471 to C_0000104564426296396960--><path d="M23437.87,9111.5231 C23580.38,9667.5731 23803.16,10920.8631 23139.29,11577.9531 C23104.94,11611.9531 22750.25,11590.1831 22705.29,11607.9531 C22590.13,11653.4631 22605.73,11741.7931 22489.29,11783.9531 C22347.72,11835.2131 19918.96,11757.7031 19779.29,11813.9531 C19354.31,11985.1131 18981.18,12346.8231 18722.13,12652.5631 " fill="none" id="C_0001895218672297528471&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="23436.62,9106.6431,23434.9828,9116.3549,23437.8629,9111.4862,23442.7317,9114.3663,23436.62,9106.6431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="22711.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="22718.29" y="11700.52">«friend»</text><!--MD5=[e168ed7c7ccb452307da64f4f0e17e44]
reverse link C_0001531814603945772616 to C_0001895218672297528471--><path d="M23819.75,1869.6231 C23675.11,1997.5131 23565.29,2158.1131 23565.29,2350.9531 C23565.29,2350.9531 23565.29,2350.9531 23565.29,4772.4531 C23565.29,6199.9531 23435.43,7906.1131 23380.93,8559.2931 " fill="none" id="C_0001531814603945772616&lt;-C_0001895218672297528471" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23815.54,1864.0031,23835.23,1856.1731,23824.73,1874.5731,23815.54,1864.0031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0ede8bff03eb35b50071265c451248f5]
reverse link C_0000979065355535690103 to C_0001858199404643284193--><path d="M24883.21,8972.7031 C24919.55,9762.6131 25058.16,13686.2131 24273.29,14512.9531 C23200.22,15643.2831 17811.88,15727.4631 16773.57,15733.1431 " fill="none" id="C_0000979065355535690103&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24882.61,8959.6231,24878.8912,8965.8014,24883.1639,8971.6103,24886.8827,8965.4321,24882.61,8959.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24882.29" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="24892.29" y="13168.02">_class_name</text><!--MD5=[80721d2d59c4e03b4d092514cb916805]
link C_0000979065355535690103 to C_0000979065355535690103--><path d="M24897.34,8706.2631 C25007.12,8120.2931 25191.79,8162.5231 25191.79,8832.9531 C25191.79,9501.4231 25008.2,9545.3631 24898.31,8964.7731 " fill="none" id="C_0000979065355535690103-&gt;C_0000979065355535690103" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24897.34,8959.6431,24895.0806,8969.2293,24898.2683,8964.5562,24902.9415,8967.744,24897.34,8959.6431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25202.79,8828.5195,25206.79,8832.5195,25202.79,8836.5195,25198.79,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="25209.79" y="8837.52">singleton</text><!--MD5=[c41fcfd5ef56e0f0da68aff980d3f176]
reverse link C_0000979065355535690103 to C_0000104564426296396960--><path d="M24912.58,8964.6931 C25027.45,9410.3831 25332.24,10881.0631 24568.29,11577.9531 C24506.84,11634.0131 23135.21,11554.7131 23071.29,11607.9531 C23009.95,11659.0531 23096.92,11733.1831 23035.29,11783.9531 C22965.48,11841.4631 19863.22,11780.2431 19779.29,11813.9531 C19353.96,11984.8031 18980.68,12346.7831 18721.66,12652.7231 " fill="none" id="C_0000979065355535690103&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="24911.32,8959.8231,24909.7097,8969.5394,24912.5763,8964.6627,24917.453,8967.5294,24911.32,8959.8231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="23077.29" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="23084.29" y="11700.52">«friend»</text><!--MD5=[46b7366d08aa74c8bf64b6674b2b20fb]
reverse link C_0001531814603945772616 to C_0000979065355535690103--><path d="M24479.66,2098.3131 C24467.93,2367.0431 24454.79,2687.8431 24445.29,2976.9531 C24434.87,3294.2031 24432.07,3373.5531 24428.29,3690.9531 C24416.86,4651.3331 24356.7,4894.1831 24428.29,5851.9531 C24511.65,6967.1331 24768.13,8297.5831 24850.52,8706.3631 " fill="none" id="C_0001531814603945772616&lt;-C_0000979065355535690103" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="24472.67,2097.9131,24480.54,2078.2331,24486.66,2098.5231,24472.67,2097.9131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f602332b486c61adc317321c7dd7305]
link C_0000228469999635536560 to C_0001789265459324510060--><!--MD5=[d366f22993ee22643e7574cd9cab9193]
link C_0000228469999635536560 to C_0001201075309499995726--><!--MD5=[ed6576951b890cef8484672a4cd2a070]
link C_0001201075309499995726 to C_0002270819269735237405--><!--MD5=[10cf8542ba44019aaec91e8275c22e29]
@startuml
title Godot Object class hierarchy
class "SafeNumeric<uint32_t>" as C_0001357046052919104842
class C_0001357046052919104842 {
}
class "SafeRefCount" as C_0000699772808699382057
class C_0000699772808699382057 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164{SafeRefCount}]] {
+ref() : bool
+refval() : uint32_t
+unref() : bool
+unrefval() : uint32_t
+get() const : uint32_t
+init(uint32_t p_value = 1) : void
}
class "String" as C_0000945411446247634027
class C_0000945411446247634027 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/error_macros.h#L60{String}]] {
+ptrw() : CharType *
+ptr() const : const CharType *
+remove(int p_index) : void
+clear() : void
+get(int p_index) const : CharType
+set(int p_index, const CharType & p_elem) : void
+size() const : int
+resize(int p_size) : Error
+operator[](int p_index) const : const CharType &
+operator[](int p_index) : CharProxy<CharType>
+operator==(const String & p_str) const : bool
+operator!=(const String & p_str) const : bool
+operator+(const String & p_str) const : String
+operator+=(const String & ) : String &
+operator+=(CharType p_char) : String &
+operator+=(const char * p_str) : String &
+operator+=(const CharType * p_str) : String &
+operator=(const char * p_str) : void
+operator=(const CharType * p_str) : void
+operator==(const char * p_str) const : bool
+operator==(const CharType * p_str) const : bool
+operator==(const StrRange & p_str_range) const : bool
+operator!=(const char * p_str) const : bool
+operator!=(const CharType * p_str) const : bool
+operator<(const CharType * p_str) const : bool
+operator<(const char * p_str) const : bool
+operator<(const String & p_str) const : bool
+operator<=(const String & p_str) const : bool
+casecmp_to(const String & p_str) const : signed char
+nocasecmp_to(const String & p_str) const : signed char
+naturalnocasecmp_to(const String & p_str) const : signed char
+c_str() const : const CharType *
+length() const : int
+substr(int p_from, int p_chars = -1) const : String
+find(const String & p_str, int p_from = 0) const : int
+find(const char * p_str, int p_from = 0) const : int
+find_char(const CharType & p_char, int p_from = 0) const : int
+find_last(const String & p_str) const : int
+findn(const String & p_str, int p_from = 0) const : int
+rfind(const String & p_str, int p_from = -1) const : int
+rfindn(const String & p_str, int p_from = -1) const : int
+findmk(const Vector<String> & p_keys, int p_from = 0, int * r_key = __null) const : int
+match(const String & p_wildcard) const : bool
+matchn(const String & p_wildcard) const : bool
+begins_with(const String & p_string) const : bool
+begins_with(const char * p_string) const : bool
+ends_with(const String & p_string) const : bool
+is_enclosed_in(const String & p_string) const : bool
+is_subsequence_of(const String & p_string) const : bool
+is_subsequence_ofi(const String & p_string) const : bool
+is_quoted() const : bool
+bigrams() const : Vector<String>
+similarity(const String & p_string) const : float
+format(const Variant & values, String placeholder = "{_}") const : String
+replace_first(const String & p_key, const String & p_with) const : String
+replace(const String & p_key, const String & p_with) const : String
+replace(const char * p_key, const char * p_with) const : String
+replacen(const String & p_key, const String & p_with) const : String
+repeat(int p_count) const : String
+insert(int p_at_pos, const String & p_string) const : String
+pad_decimals(int p_digits) const : String
+pad_zeros(int p_digits) const : String
+trim_prefix(const String & p_prefix) const : String
+trim_suffix(const String & p_suffix) const : String
+lpad(int min_length, const String & character = " ") const : String
+rpad(int min_length, const String & character = " ") const : String
+sprintf(const Array & values, bool * error) const : String
+quote(String quotechar = "\"") const : String
+unquote() const : String
{static} +num(double p_num, int p_decimals = -1) : String
{static} +num_scientific(double p_num) : String
{static} +num_real(double p_num) : String
{static} +num_int64(int64_t p_num, int base = 10, bool capitalize_hex = false) : String
{static} +num_uint64(uint64_t p_num, int base = 10, bool capitalize_hex = false) : String
{static} +chr(CharType p_char) : String
{static} +md5(const uint8_t * p_md5) : String
{static} +hex_encode_buffer(const uint8_t * p_buffer, int p_len) : String
+is_numeric() const : bool
+to_double() const : double
+to_float() const : float
+hex_to_int(bool p_with_prefix = true) const : int
+to_int() const : int
+hex_to_int64(bool p_with_prefix = true) const : int64_t
+bin_to_int64(bool p_with_prefix = true) const : int64_t
+to_int64() const : int64_t
{static} +to_int(const char * p_str, int p_len = -1) : int
{static} +to_double(const char * p_str) : double
{static} +to_double(const CharType * p_str, const CharType ** r_end = __null) : double
{static} +to_int(const CharType * p_str, int p_len = -1) : int64_t
+capitalize() const : String
+camelcase_to_underscore(bool lowercase = true) const : String
+get_slice_count(String p_splitter) const : int
+get_slice(String p_splitter, int p_slice) const : String
+get_slicec(CharType p_splitter, int p_slice) const : String
+split(const String & p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector<String>
+rsplit(const String & p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector<String>
+split_spaces() const : Vector<String>
+split_floats(const String & p_splitter, bool p_allow_empty = true) const : Vector<float>
+split_floats_mk(const Vector<String> & p_splitters, bool p_allow_empty = true) const : Vector<float>
+split_ints(const String & p_splitter, bool p_allow_empty = true) const : Vector<int>
+split_ints_mk(const Vector<String> & p_splitters, bool p_allow_empty = true) const : Vector<int>
+join(Vector<String> parts) : String
{static} +char_uppercase(CharType p_char) : CharType
{static} +char_lowercase(CharType p_char) : CharType
+to_upper() const : String
+to_lower() const : String
+count(const String & p_string, int p_from = 0, int p_to = 0) const : int
+countn(const String & p_string, int p_from = 0, int p_to = 0) const : int
+left(int p_pos) const : String
+right(int p_pos) const : String
+dedent() const : String
+strip_edges(bool left = true, bool right = true) const : String
+strip_escapes() const : String
+lstrip(const String & p_chars) const : String
+rstrip(const String & p_chars) const : String
+get_extension() const : String
+get_basename() const : String
+plus_file(const String & p_file) const : String
+ord_at(int p_idx) const : CharType
+erase(int p_pos, int p_chars) : void
+ascii(bool p_allow_extended = false) const : CharString
+utf8() const : CharString
+parse_utf8(const char * p_utf8, int p_len = -1) : bool
{static} +utf8(const char * p_utf8, int p_len = -1) : String
{static} +hash(const CharType * p_cstr, int p_len) : uint32_t
{static} +hash(const CharType * p_cstr) : uint32_t
{static} +hash(const char * p_cstr, int p_len) : uint32_t
{static} +hash(const char * p_cstr) : uint32_t
+hash() const : uint32_t
+hash64() const : uint64_t
+md5_text() const : String
+sha1_text() const : String
+sha256_text() const : String
+md5_buffer() const : Vector<uint8_t>
+sha1_buffer() const : Vector<uint8_t>
+sha256_buffer() const : Vector<uint8_t>
+empty() const : bool
+is_abs_path() const : bool
+is_rel_path() const : bool
+is_resource_file() const : bool
+path_to(const String & p_path) const : String
+path_to_file(const String & p_path) const : String
+get_base_dir() const : String
+get_file() const : String
{static} +humanize_size(uint64_t p_size) : String
+simplify_path() const : String
+xml_escape(bool p_escape_quotes = false) const : String
+xml_unescape() const : String
+http_escape() const : String
+http_unescape() const : String
+c_escape() const : String
+c_escape_multiline() const : String
+c_unescape() const : String
+json_escape() const : String
+word_wrap(int p_chars_per_line) const : String
+parse_url(String & r_scheme, String & r_host, int & r_port, String & r_path) const : Error
+percent_encode() const : String
+percent_decode() const : String
+property_name_encode() const : String
+validate_node_name() const : String
+is_valid_identifier() const : bool
+is_valid_integer() const : bool
+is_valid_float() const : bool
+is_valid_hex_number(bool p_with_prefix) const : bool
+is_valid_html_color() const : bool
+is_valid_ip_address() const : bool
+is_valid_filename() const : bool
+String() : void
+String(const String & p_str) : void
+operator=(const String & p_str) : String
+String(const char * p_str) : void
+String(const CharType * p_str, int p_clip_to_len = -1) : void
+String(const StrRange & p_range) : void
+npos : enum
{static} +invalid_node_name_characters : const String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345{invalid_node_name_characters}]]]
}
class "Array" as C_0000228469999635536560
class C_0000228469999635536560 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/array.h#L41{Array}]] {
+operator[](int p_idx) : Variant &
+operator[](int p_idx) const : const Variant &
+set(int p_idx, const Variant & p_value) : void
+get(int p_idx) const : const Variant &
+size() const : int
+empty() const : bool
+clear() : void
+operator==(const Array & p_array) const : bool
+hash() const : uint32_t
+operator=(const Array & p_array) : void
+push_back(const Variant & p_value) : void
+append(const Variant & p_value) : void
+append_array(const Array & p_array) : void
+resize(int p_new_size) : Error
+insert(int p_pos, const Variant & p_value) : void
+remove(int p_pos) : void
+front() const : Variant
+back() const : Variant
+sort() : Array &
+sort_custom(Object * p_obj, const StringName & p_function) : Array &
+shuffle() : void
+bsearch(const Variant & p_value, bool p_before = true) : int
+bsearch_custom(const Variant & p_value, Object * p_obj, const StringName & p_function, bool p_before = true) : int
+invert() : Array &
+find(const Variant & p_value, int p_from = 0) const : int
+rfind(const Variant & p_value, int p_from = -1) const : int
+find_last(const Variant & p_value) const : int
+count(const Variant & p_value) const : int
+has(const Variant & p_value) const : bool
+erase(const Variant & p_value) : void
+push_front(const Variant & p_value) : void
+pop_back() : Variant
+pop_front() : Variant
+duplicate(bool p_deep = false) const : Array
+slice(int p_begin, int p_end, int p_step = 1, bool p_deep = false) const : Array
+min() const : Variant
+max() const : Variant
+id() const : const void *
+Array(const Array & p_from) : void
+Array() : void
+~Array() : void
}
class "Dictionary" as C_0001299121424291583786
class C_0001299121424291583786 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42{Dictionary}]] {
+get_key_list(List<Variant> * p_keys) const : void
+get_key_at_index(int p_index) const : Variant
+get_value_at_index(int p_index) const : Variant
+operator[](const Variant & p_key) : Variant &
+operator[](const Variant & p_key) const : const Variant &
+getptr(const Variant & p_key) const : const Variant *
+getptr(const Variant & p_key) : Variant *
+get_valid(const Variant & p_key) const : Variant
+get(const Variant & p_key, const Variant & p_default) const : Variant
+size() const : int
+empty() const : bool
+clear() : void
+has(const Variant & p_key) const : bool
+has_all(const Array & p_keys) const : bool
+erase(const Variant & p_key) : bool
+operator==(const Dictionary & p_dictionary) const : bool
+operator!=(const Dictionary & p_dictionary) const : bool
+hash() const : uint32_t
+operator=(const Dictionary & p_dictionary) : void
+next(const Variant * p_key = __null) const : const Variant *
+keys() const : Array
+values() const : Array
+duplicate(bool p_deep = false) const : Dictionary
+id() const : const void *
+Dictionary(const Dictionary & p_from) : void
+Dictionary() : void
+~Dictionary() : void
}
class "StringName" as C_0001858199404643284193
class C_0001858199404643284193 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44{StringName}]] {
+operator const void *() const : const void *
+operator==(const String & p_name) const : bool
+operator==(const char * p_name) const : bool
+operator!=(const String & p_name) const : bool
+operator<(const StringName & p_name) const : bool
+operator==(const StringName & p_name) const : bool
+hash() const : uint32_t
+data_unique_pointer() const : const void *
+operator!=(const StringName & p_name) const : bool
+operator String() const : String
{static} +search(const char * p_name) : StringName
{static} +search(const CharType * p_name) : StringName
{static} +search(const String & p_name) : StringName
+operator=(const StringName & p_name) : void
+StringName(const char * p_name) : void
+StringName(const StringName & p_name) : void
+StringName(const String & p_name) : void
+StringName(const StaticCString & p_static_string) : void
+StringName() : void
+~StringName() : void
}
class "Vector<StringName>" as C_0001169846630986447699
class C_0001169846630986447699 {
}
class "NodePath" as C_0001768230974934037264
class C_0001768230974934037264 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/node_path.h#L37{NodePath}]] {
+get_sname() const : StringName
+is_absolute() const : bool
+get_name_count() const : int
+get_name(int p_idx) const : StringName
+get_subname_count() const : int
+get_subname(int p_idx) const : StringName
+get_names() const : Vector<StringName>
+get_subnames() const : Vector<StringName>
+get_concatenated_subnames() const : StringName
+rel_path_to(const NodePath & p_np) const : NodePath
+get_as_property_path() const : NodePath
+prepend_period() : void
+get_parent() const : NodePath
+hash() const : uint32_t
+operator String() const : String
+is_empty() const : bool
+operator==(const NodePath & p_path) const : bool
+operator!=(const NodePath & p_path) const : bool
+operator=(const NodePath & p_path) : void
+simplify() : void
+simplified() const : NodePath
+NodePath(const Vector<StringName> & p_path, bool p_absolute) : void
+NodePath(const Vector<StringName> & p_path, const Vector<StringName> & p_subpath, bool p_absolute) : void
+NodePath(const NodePath & p_path) : void
+NodePath(const String & p_path) : void
+NodePath() : void
+~NodePath() : void
}
class "RefPtr" as C_0002025812040042972946
class C_0002025812040042972946 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41{RefPtr}]] {
+is_null() const : bool
+operator=(const RefPtr & p_other) : void
+operator==(const RefPtr & p_other) const : bool
+operator!=(const RefPtr & p_other) const : bool
+get_rid() const : RID
+unref() : void
+get_data() const : void *
+RefPtr(const RefPtr & p_other) : void
+RefPtr() : void
+~RefPtr() : void
}
class "Vector<Variant>" as C_0000367042517371617856
class C_0000367042517371617856 {
}
class "List<MethodInfo>" as C_0001789265459324510060
class C_0001789265459324510060 {
}
class "List<PropertyInfo>" as C_0000788782266645010446
class C_0000788782266645010446 {
}
class "Variant" as C_0000210234563198599367
class C_0000210234563198599367 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L93{Variant}]] {
+get_type() const : Variant::Type
{static} +get_type_name(Variant::Type p_type) : String
{static} +can_convert(Variant::Type p_type_from, Variant::Type p_type_to) : bool
{static} +can_convert_strict(Variant::Type p_type_from, Variant::Type p_type_to) : bool
+is_ref() const : bool
+is_num() const : bool
+is_array() const : bool
+is_shared() const : bool
+is_zero() const : bool
+is_one() const : bool
+operator bool() const : bool
+operator int() const : int
+operator unsigned int() const : unsigned int
+operator short() const : short
+operator unsigned short() const : unsigned short
+operator signed char() const : signed char
+operator unsigned char() const : unsigned char
+operator long() const : int64_t
+operator unsigned long() const : uint64_t
+operator wchar_t() const : CharType
+operator float() const : float
+operator double() const : double
+operator String() const : String
+operator StringName() const : StringName
+operator Vector2() const : Vector2
+operator Rect2() const : Rect2
+operator Vector3() const : Vector3
+operator Plane() const : Plane
+operator AABB() const : ::AABB
+operator Quat() const : Quat
+operator Basis() const : Basis
+operator Transform() const : Transform
+operator Transform2D() const : Transform2D
+operator Color() const : Color
+operator NodePath() const : NodePath
+operator RefPtr() const : RefPtr
+operator RID() const : RID
+operator Object *() const : Object *
+operator Node *() const : Node *
+operator Control *() const : Control *
+operator Dictionary() const : Dictionary
+operator Array() const : Array
+operator PoolVector() const : PoolVector<uint8_t>
+operator PoolVector() const : PoolVector<int>
+operator PoolVector() const : PoolVector<real_t>
+operator PoolVector() const : PoolVector<String>
+operator PoolVector() const : PoolVector<Vector3>
+operator PoolVector() const : PoolVector<Color>
+operator PoolVector() const : PoolVector<Plane>
+operator PoolVector() const : PoolVector<Face3>
+operator Vector() const : Vector<Variant>
+operator Vector() const : Vector<uint8_t>
+operator Vector() const : Vector<int>
+operator Vector() const : Vector<real_t>
+operator Vector() const : Vector<String>
+operator Vector() const : Vector<StringName>
+operator Vector() const : Vector<Vector3>
+operator Vector() const : Vector<Color>
+operator Vector() const : Vector<RID>
+operator Vector() const : Vector<Vector2>
+operator PoolVector() const : PoolVector<Vector2>
+operator Vector() const : Vector<Plane>
+operator Margin() const : Margin
+operator Orientation() const : Orientation
+operator IP_Address() const : IP_Address
+Variant(bool p_bool) : void
+Variant(int p_int) : void
+Variant(unsigned int p_int) : void
+Variant(short p_short) : void
+Variant(unsigned short p_short) : void
+Variant(signed char p_char) : void
+Variant(unsigned char p_char) : void
+Variant(int64_t p_int) : void
+Variant(uint64_t p_int) : void
+Variant(float p_float) : void
+Variant(double p_double) : void
+Variant(const String & p_string) : void
+Variant(const StringName & p_string) : void
+Variant(const char *const p_cstring) : void
+Variant(const CharType * p_wstring) : void
+Variant(const Vector2 & p_vector2) : void
+Variant(const Rect2 & p_rect2) : void
+Variant(const Vector3 & p_vector3) : void
+Variant(const Plane & p_plane) : void
+Variant(const ::AABB & p_aabb) : void
+Variant(const Quat & p_quat) : void
+Variant(const Basis & p_matrix) : void
+Variant(const Transform2D & p_transform) : void
+Variant(const Transform & p_transform) : void
+Variant(const Color & p_color) : void
+Variant(const NodePath & p_node_path) : void
+Variant(const RefPtr & p_resource) : void
+Variant(const RID & p_rid) : void
+Variant(const Object * p_object) : void
+Variant(const Dictionary & p_dictionary) : void
+Variant(const Array & p_array) : void
+Variant(const PoolVector<Plane> & p_array) : void
+Variant(const PoolVector<uint8_t> & p_raw_array) : void
+Variant(const PoolVector<int> & p_int_array) : void
+Variant(const PoolVector<real_t> & p_real_array) : void
+Variant(const PoolVector<String> & p_string_array) : void
+Variant(const PoolVector<Vector3> & p_vector3_array) : void
+Variant(const PoolVector<Color> & p_color_array) : void
+Variant(const PoolVector<Face3> & p_face_array) : void
+Variant(const Vector<Variant> & p_array) : void
+Variant(const Vector<uint8_t> & p_array) : void
+Variant(const Vector<int> & p_array) : void
+Variant(const Vector<real_t> & p_array) : void
+Variant(const Vector<String> & p_array) : void
+Variant(const Vector<StringName> & p_array) : void
+Variant(const Vector<Vector3> & p_array) : void
+Variant(const Vector<Color> & p_array) : void
+Variant(const Vector<Plane> & p_array) : void
+Variant(const Vector<RID> & p_array) : void
+Variant(const Vector<Vector2> & p_array) : void
+Variant(const PoolVector<Vector2> & p_vector2_array) : void
+Variant(const IP_Address & p_address) : void
{static} +get_operator_name(Variant::Operator p_op) : String
{static} +evaluate(const Variant::Operator & p_op, const Variant & p_a, const Variant & p_b, Variant & r_ret, bool & r_valid) : void
{static} +evaluate(const Variant::Operator & p_op, const Variant & p_a, const Variant & p_b) : Variant
+zero() : void
+duplicate(bool deep = false) const : Variant
{static} +blend(const Variant & a, const Variant & b, float c, Variant & r_dst) : void
{static} +interpolate(const Variant & a, const Variant & b, float c, Variant & r_dst) : void
+call_ptr(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant * r_ret, Variant::CallError & r_error) : void
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
{static} +get_call_error_text(Object * p_base, const StringName & p_method, const Variant ** p_argptrs, int p_argcount, const Variant::CallError & ce) : String
{static} +construct(const Variant::Type , const Variant ** p_args, int p_argcount, Variant::CallError & r_error, bool p_strict = true) : Variant
+get_method_list(List<MethodInfo> * p_list) const : void
+has_method(const StringName & p_method) const : bool
{static} +get_method_argument_types(Variant::Type p_type, const StringName & p_method) : Vector<Variant::Type>
{static} +get_method_default_arguments(Variant::Type p_type, const StringName & p_method) : Vector<Variant>
{static} +get_method_return_type(Variant::Type p_type, const StringName & p_method, bool * r_has_return = __null) : Variant::Type
{static} +get_method_argument_names(Variant::Type p_type, const StringName & p_method) : Vector<StringName>
{static} +is_method_const(Variant::Type p_type, const StringName & p_method) : bool
+set_named(const StringName & p_index, const Variant & p_value, bool * r_valid = __null) : void
+get_named(const StringName & p_index, bool * r_valid = __null) const : Variant
+set(const Variant & p_index, const Variant & p_value, bool * r_valid = __null) : void
+get(const Variant & p_index, bool * r_valid = __null) const : Variant
+in(const Variant & p_index, bool * r_valid = __null) const : bool
+iter_init(Variant & r_iter, bool & r_valid) const : bool
+iter_next(Variant & r_iter, bool & r_valid) const : bool
+iter_get(const Variant & r_iter, bool & r_valid) const : Variant
+get_property_list(List<PropertyInfo> * p_list) const : void
+operator==(const Variant & p_variant) const : bool
+operator!=(const Variant & p_variant) const : bool
+operator<(const Variant & p_variant) const : bool
+hash() const : uint32_t
+hash_compare(const Variant & p_variant) const : bool
+booleanize() const : bool
+stringify(List<const void *> & stack) const : String
+static_assign(const Variant & p_variant) : void
{static} +get_constructor_list(Variant::Type p_type, List<MethodInfo> * p_list) : void
{static} +get_constants_for_type(Variant::Type p_type, List<StringName> * p_constants) : void
{static} +has_constant(Variant::Type p_type, const StringName & p_value) : bool
{static} +get_constant_value(Variant::Type p_type, const StringName & p_value, bool * r_valid = __null) : Variant
+get_construct_string() const : String
{static} +construct_from_string(const String & p_string, Variant & r_value, Variant::ObjectConstruct p_obj_construct = __null, void * p_construct_ud = __null) : void
+operator=(const Variant & p_variant) : void
+Variant(const Variant & p_variant) : void
+Variant() : void
+~Variant() : void
}
class "PropertyInfo" as C_0002153970433534458832
class C_0002153970433534458832 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L144{PropertyInfo}]] {
+added_usage(int p_fl) const : PropertyInfo
+operator Dictionary() const : Dictionary
{static} +from_dict(const Dictionary & p_dict) : PropertyInfo
+PropertyInfo() : void
+PropertyInfo(Variant::Type p_type, const String p_name, PropertyHint p_hint = PROPERTY_HINT_NONE, const String & p_hint_string = "", uint32_t p_usage = PROPERTY_USAGE_DEFAULT, const StringName & p_class_name = StringName()) : void
+PropertyInfo(const StringName & p_class_name) : void
+operator==(const PropertyInfo & p_info) const : bool
+operator<(const PropertyInfo & p_info) const : bool
+type : Variant::Type [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146{type}]]]
+name : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147{name}]]]
+class_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148{class_name}]]]
+hint : PropertyHint [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149{hint}]]]
+hint_string : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150{hint_string}]]]
+usage : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151{usage}]]]
}
class "MethodInfo" as C_0000774532299576474923
class C_0000774532299576474923 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L206{MethodInfo}]] {
+operator==(const MethodInfo & p_method) const : bool
+operator<(const MethodInfo & p_method) const : bool
+operator Dictionary() const : Dictionary
{static} +from_dict(const Dictionary & p_dict) : MethodInfo
+MethodInfo() : void
+MethodInfo(const String & p_name) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4, const PropertyInfo & p_param5) : void
+MethodInfo(Variant::Type ret) : void
+MethodInfo(Variant::Type ret, const String & p_name) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4, const PropertyInfo & p_param5) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4, const PropertyInfo & p_param5) : void
+name : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208{name}]]]
+return_val : PropertyInfo [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209{return_val}]]]
+flags : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210{flags}]]]
+id : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211{id}]]]
+arguments : List<PropertyInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212{arguments}]]]
+default_arguments : Vector<Variant> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213{default_arguments}]]]
}
class "List<String>" as C_0002063845175027013341
class C_0002063845175027013341 {
}
class "List<Object::Connection>" as C_0000751300156436098886
class C_0000751300156436098886 {
}
class "HashMap<StringName,Object::Signal>" as C_0001578539238208480863
class C_0001578539238208480863 {
}
class "Set<Object *>" as C_0000051860595756965531
class C_0000051860595756965531 {
}
class "Set<String>" as C_0001682405743486361214
class C_0001682405743486361214 {
}
class "Object" as C_0001531814603945772616
class C_0001531814603945772616 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408{Object}]] {
{static} +initialize_class() : void
{static} +register_custom_data_to_otdb() : void
+_change_notify(const char * p_property = "") : void
{static} +get_class_ptr_static() : void *
+_use_rc() : ObjectRC *
+_is_gpl_reversed() const : bool
+get_instance_id() const : ObjectID
+add_change_receptor(Object * p_receptor) : void
+remove_change_receptor(Object * p_receptor) : void
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_category_static() : String
+get_class() const : String
+get_save_class() const : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
+get_class_name() const : const StringName &
+set(const StringName & p_name, const Variant & p_value, bool * r_valid = __null) : void
+get(const StringName & p_name, bool * r_valid = __null) const : Variant
+set_indexed(const Vector<StringName> & p_names, const Variant & p_value, bool * r_valid = __null) : void
+get_indexed(const Vector<StringName> & p_names, bool * r_valid = __null) const : Variant
+get_property_list(List<PropertyInfo> * p_list, bool p_reversed = false) const : void
+has_method(const StringName & p_method) const : bool
+get_method_list(List<MethodInfo> * p_list) const : void
+callv(const StringName & p_method, const Array & p_args) : Variant
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call_multilevel(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call_multilevel_reversed(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
+call_multilevel(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notification(int p_notification, bool p_reversed = false) : void
+to_string() : String
+getvar(const Variant & p_key, bool * r_valid = __null) const : Variant
+setvar(const Variant & p_key, const Variant & p_value, bool * r_valid = __null) : void
+set_script(const RefPtr & p_script) : void
+get_script() const : RefPtr
+has_meta(const String & p_name) const : bool
+set_meta(const String & p_name, const Variant & p_value) : void
+remove_meta(const String & p_name) : void
+get_meta(const String & p_name) const : Variant
+get_meta_list(List<String> * p_list) const : void
+set_edited(bool p_edited) : void
+is_edited() const : bool
+get_edited_version() const : uint32_t
+set_script_instance(ScriptInstance * p_instance) : void
+get_script_instance() const : ScriptInstance *
+set_script_and_instance(const RefPtr & p_script, ScriptInstance * p_instance) : void
+add_user_signal(const MethodInfo & p_signal) : void
+emit_signal(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+emit_signal(const StringName & p_name, const Variant ** p_args, int p_argcount) : Error
+has_signal(const StringName & p_name) const : bool
+get_signal_list(List<MethodInfo> * p_signals) const : void
+get_signal_connection_list(const StringName & p_signal, List<Object::Connection> * p_connections) const : void
+get_all_signal_connections(List<Object::Connection> * p_connections) const : void
+get_persistent_signal_connection_count() const : int
+get_signals_connected_to_this(List<Object::Connection> * p_connections) const : void
+connect(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method, const Vector<Variant> & p_binds = Vector<Variant>(), uint32_t p_flags = 0) : Error
+disconnect(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method) : void
+is_connected(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method) const : bool
+call_deferred(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+set_deferred(const StringName & p_property, const Variant & p_value) : void
+set_block_signals(bool p_block) : void
+is_blocking_signals() const : bool
+get_static_property_type(const StringName & p_property, bool * r_valid = __null) const : Variant::Type
+get_static_property_type_indexed(const Vector<StringName> & p_path, bool * r_valid = __null) const : Variant::Type
+get_translatable_strings(List<String> * p_strings) const : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+tr(const StringName & p_message) const : StringName
+is_queued_for_deletion() const : bool
+set_message_translation(bool p_enable) : void
+can_translate_messages() const : bool
+editor_set_section_unfold(const String & p_section, bool p_unfolded) : void
+editor_is_section_unfolded(const String & p_section) : bool
+editor_get_section_folding() const : const Set<String> &
+editor_clear_section_folding() : void
+get_script_instance_binding(int p_script_language_index) : void *
+has_script_instance_binding(int p_script_language_index) : bool
+set_script_instance_binding(int p_script_language_index, void * p_data) : void
+clear_internal_resource_paths() : void
+Object() : void
+~Object() : void
{static} +cast_to(Object * p_object) : T *
{static} +cast_to(const Object * p_object) : const T *
+_is_queued_for_deletion : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745{_is_queued_for_deletion}]]]
+NOTIFICATION_POSTINITIALIZE : enum
+NOTIFICATION_PREDELETE : enum
}
enum "Object::ConnectFlags" as C_0000219886141561409828
enum C_0000219886141561409828 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410{Object##ConnectFlags}]] {
CONNECT_DEFERRED
CONNECT_PERSIST
CONNECT_ONESHOT
CONNECT_REFERENCE_COUNTED
}
class "Object::Connection" as C_0001267214583673362755
class C_0001267214583673362755 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418{Object##Connection}]] {
+operator<(const Object::Connection & p_conn) const : bool
+operator Variant() const : Variant
+Connection() : void
+Connection(const Variant & p_variant) : void
+source : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420{source}]]]
+signal : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421{signal}]]]
+target : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422{target}]]]
+method : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423{method}]]]
+flags : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424{flags}]]]
+binds : Vector<Variant> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425{binds}]]]
}
class "Object::Signal" as C_0000250357724807605097
class C_0000250357724807605097 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448{Object##Signal}]] {
+Signal() : void
+user : MethodInfo [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472{user}]]]
+slot_map : VMap<Object::Signal::Target,Object::Signal::Slot> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473{slot_map}]]]
}
class "ObjectDB" as C_0002064336919270342687
class C_0002064336919270342687 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773{ObjectDB}]] {
{static} +get_instance(ObjectID p_instance_id) : Object *
{static} +debug_objects(ObjectDB::DebugFunc p_func) : void
{static} +get_object_count() : int
{static} +instance_validate(Object * p_ptr) : bool
}
class "ObjectDB::ObjectPtrHash" as C_0001040552259499621557
class C_0001040552259499621557 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L775{ObjectDB##ObjectPtrHash}]] {
{static} +hash(const Object * p_obj) : uint32_t
}
class "GetTypeInfo<T *,typename EnableIf<TypeInherits<Object,T>>>" as C_0001201075309499995726
class C_0001201075309499995726 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L244{GetTypeInfo}]] {
{static} +get_class_info() : PropertyInfo
{static} +VARIANT_TYPE : const Variant::Type [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245{VARIANT_TYPE}]]]
{static} +METADATA : const GodotTypeInfo::Metadata [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246{METADATA}]]]
}
class "GetTypeInfo<const type-parameter-0-0 *,typename EnableIf<TypeInherits<Object,T>>>" as C_0002270819269735237405
class C_0002270819269735237405 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L253{GetTypeInfo}]] {
{static} +get_class_info() : PropertyInfo
{static} +VARIANT_TYPE : const Variant::Type [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254{VARIANT_TYPE}]]]
{static} +METADATA : const GodotTypeInfo::Metadata [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255{METADATA}]]]
}
abstract "MethodBind" as C_0001725595510223069271
abstract C_0001725595510223069271 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L207{MethodBind}]] {
+get_default_arguments() const : Vector<Variant>
+get_default_argument_count() const : int
+has_default_argument(int p_arg) const : Variant
+get_default_argument(int p_arg) const : Variant
+get_argument_type(int p_argument) const : Variant::Type
+get_argument_info(int p_argument) const : PropertyInfo
+get_return_info() const : PropertyInfo
+set_argument_names(const Vector<StringName> & p_names) : void
+get_argument_names() const : Vector<StringName>
{abstract} +get_argument_meta(int p_arg) const = 0 : GodotTypeInfo::Metadata
+set_hint_flags(uint32_t p_hint) : void
+get_hint_flags() const : uint32_t
{abstract} +get_instance_class() const = 0 : String
+get_argument_count() const : int
{abstract} +call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) = 0 : Variant
{abstract} +ptrcall(Object * p_object, const void ** p_args, void * r_ret) = 0 : void
+get_name() const : StringName
+set_name(const StringName & p_name) : void
+get_method_id() const : int
+is_const() const : bool
+has_return() const : bool
+is_vararg() const : bool
+set_default_arguments(const Vector<Variant> & p_defargs) : void
+MethodBind() : void
+~MethodBind() : void
}
class "MethodBindVarArg<T>" as C_0000626842387047507019
class C_0000626842387047507019 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L301{MethodBindVarArg}]] {
+_gen_argument_type_info(int p_arg) const : PropertyInfo
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int ) const : GodotTypeInfo::Metadata
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+set_method_info(const MethodInfo & p_info, bool p_return_nil_is_variant) : void
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+set_method(MethodBindVarArg::NativeCall p_method) : void
+is_const() const : bool
+get_instance_class() const : String
+is_vararg() const : bool
+MethodBindVarArg<T>() : void
}
class "MethodBind0" as C_0002161264899189627575
class C_0002161264899189627575 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4{MethodBind0}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L8{type_name}]]]
+method : void (__UnexistingClass::*)() [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L9{method}]]]
}
class "MethodBind0R<R>" as C_0000514530488699023626
class C_0000514530488699023626 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L182{MethodBind0R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0R<R>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L186{type_name}]]]
+method : R (__UnexistingClass::*)() [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L187{method}]]]
}
class "MethodBind0C" as C_0001500902353747816170
class C_0001500902353747816170 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L360{MethodBind0C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0C() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L364{type_name}]]]
+method : void (__UnexistingClass::*)() const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L365{method}]]]
}
class "MethodBind0RC<R>" as C_0001463339540638256927
class C_0001463339540638256927 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L538{MethodBind0RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0RC<R>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L542{type_name}]]]
+method : R (__UnexistingClass::*)() const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L543{method}]]]
}
class "MethodBind1<P1>" as C_0001770130608234301442
class C_0001770130608234301442 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L716{MethodBind1}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1<P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L720{type_name}]]]
+method : void (__UnexistingClass::*)(P1) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L721{method}]]]
}
class "MethodBind1R<R,P1>" as C_0001227602006568872099
class C_0001227602006568872099 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L902{MethodBind1R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1R<R, P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L906{type_name}]]]
+method : R (__UnexistingClass::*)(P1) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L907{method}]]]
}
class "MethodBind1C<P1>" as C_0000721345300172868993
class C_0000721345300172868993 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1088{MethodBind1C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1C<P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1092{type_name}]]]
+method : void (__UnexistingClass::*)(P1) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1093{method}]]]
}
class "MethodBind1RC<R,P1>" as C_0000779559418824132960
class C_0000779559418824132960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1274{MethodBind1RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1RC<R, P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1278{type_name}]]]
+method : R (__UnexistingClass::*)(P1) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1279{method}]]]
}
class "MethodBind2<P1,P2>" as C_0001326581917102107425
class C_0001326581917102107425 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1460{MethodBind2}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2<P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1464{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1465{method}]]]
}
class "MethodBind2R<R,P1,P2>" as C_0000845455246171879191
class C_0000845455246171879191 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1654{MethodBind2R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2R<R, P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1658{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1659{method}]]]
}
class "MethodBind2C<P1,P2>" as C_0000081704011730798793
class C_0000081704011730798793 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1848{MethodBind2C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2C<P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1852{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L1853{method}]]]
}
class "MethodBind2RC<R,P1,P2>" as C_0002027329212022555569
class C_0002027329212022555569 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2042{MethodBind2RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2RC<R, P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2046{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2047{method}]]]
}
class "MethodBind3<P1,P2,P3>" as C_0000512545424965820103
class C_0000512545424965820103 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2236{MethodBind3}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3<P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2240{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2241{method}]]]
}
class "MethodBind3R<R,P1,P2,P3>" as C_0002087322448002339587
class C_0002087322448002339587 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2438{MethodBind3R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3R<R, P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2442{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2443{method}]]]
}
class "MethodBind3C<P1,P2,P3>" as C_0000031906668996487033
class C_0000031906668996487033 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2640{MethodBind3C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3C<P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2644{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2645{method}]]]
}
class "MethodBind3RC<R,P1,P2,P3>" as C_0001134043413451695381
class C_0001134043413451695381 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2842{MethodBind3RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3RC<R, P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2846{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L2847{method}]]]
}
class "MethodBind4<P1,P2,P3,P4>" as C_0001212767095252394753
class C_0001212767095252394753 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3044{MethodBind4}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4<P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3048{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3049{method}]]]
}
class "MethodBind4R<R,P1,P2,P3,P4>" as C_0001038624653636336005
class C_0001038624653636336005 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3254{MethodBind4R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4R<R, P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3258{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3259{method}]]]
}
class "MethodBind4C<P1,P2,P3,P4>" as C_0000375613860790632263
class C_0000375613860790632263 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3464{MethodBind4C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4C<P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3468{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3469{method}]]]
}
class "MethodBind4RC<R,P1,P2,P3,P4>" as C_0001053911039767528095
class C_0001053911039767528095 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3674{MethodBind4RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4RC<R, P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3678{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3679{method}]]]
}
class "MethodBind5<P1,P2,P3,P4,P5>" as C_0000462780498821063561
class C_0000462780498821063561 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3884{MethodBind5}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5<P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3888{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L3889{method}]]]
}
class "MethodBind5R<R,P1,P2,P3,P4,P5>" as C_0000803203155573352820
class C_0000803203155573352820 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4102{MethodBind5R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5R<R, P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4106{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4107{method}]]]
}
class "MethodBind5C<P1,P2,P3,P4,P5>" as C_0001728875246190146863
class C_0001728875246190146863 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4320{MethodBind5C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5C<P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4324{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4325{method}]]]
}
class "MethodBind5RC<R,P1,P2,P3,P4,P5>" as C_0000319868049196089894
class C_0000319868049196089894 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4538{MethodBind5RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5RC<R, P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4542{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.gen.inc#L4543{method}]]]
}
class "ClassDB" as C_0000104564426296396960
class C_0000104564426296396960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94{ClassDB}]] {
{static} +bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition & method_name, const Variant ** p_defs, int p_defcount) : MethodBind *
{static} +_add_class2(const StringName & p_class, const StringName & p_inherits) : void
{static} +get_class_list(List<StringName> * p_classes) : void
{static} +get_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_direct_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_parent_class_nocheck(const StringName & p_class) : StringName
{static} +get_parent_class(const StringName & p_class) : StringName
{static} +class_exists(const StringName & p_class) : bool
{static} +is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +can_instance(const StringName & p_class) : bool
{static} +instance(const StringName & p_class) : Object *
{static} +get_api_type(const StringName & p_class) : ClassDB::APIType
{static} +get_api_hash(ClassDB::APIType p_api) : uint64_t
{static} +add_signal(StringName p_class, const MethodInfo & p_signal) : void
{static} +has_signal(StringName p_class, StringName p_signal) : bool
{static} +get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool
{static} +get_signal_list(StringName p_class, List<MethodInfo> * p_signals, bool p_no_inheritance = false) : void
{static} +add_property_group(StringName p_class, const String & p_name, const String & p_prefix = "") : void
{static} +add_property(StringName p_class, const PropertyInfo & p_pinfo, const StringName & p_setter, const StringName & p_getter, int p_index = -1) : void
{static} +set_property_default_value(StringName p_class, const StringName & p_name, const Variant & p_default) : void
{static} +get_property_list(StringName p_class, List<PropertyInfo> * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void
{static} +set_property(Object * p_object, const StringName & p_property, const Variant & p_value, bool * r_valid = __null) : bool
{static} +get_property(Object * p_object, const StringName & p_property, Variant & r_value) : bool
{static} +has_property(const StringName & p_class, const StringName & p_property, bool p_no_inheritance = false) : bool
{static} +get_property_index(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : int
{static} +get_property_type(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : Variant::Type
{static} +get_property_setter(StringName p_class, const StringName & p_property) : StringName
{static} +get_property_getter(StringName p_class, const StringName & p_property) : StringName
{static} +has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool
{static} +set_method_flags(StringName p_class, StringName p_method, int p_flags) : void
{static} +get_method_list(StringName p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void
{static} +get_method(StringName p_class, StringName p_name) : MethodBind *
{static} +add_virtual_method(const StringName & p_class, const MethodInfo & p_method, bool p_virtual = true) : void
{static} +get_virtual_methods(const StringName & p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false) : void
{static} +bind_integer_constant(const StringName & p_class, const StringName & p_enum, const StringName & p_name, int p_constant) : void
{static} +get_integer_constant_list(const StringName & p_class, List<String> * p_constants, bool p_no_inheritance = false) : void
{static} +get_integer_constant(const StringName & p_class, const StringName & p_name, bool * p_success = __null) : int
{static} +get_integer_constant_enum(const StringName & p_class, const StringName & p_name, bool p_no_inheritance = false) : StringName
{static} +get_enum_list(const StringName & p_class, List<StringName> * p_enums, bool p_no_inheritance = false) : void
{static} +get_enum_constants(const StringName & p_class, const StringName & p_enum, List<StringName> * p_constants, bool p_no_inheritance = false) : void
{static} +class_get_default_property_value(const StringName & p_class, const StringName & p_property, bool * r_valid = __null) : Variant
{static} +get_category(const StringName & p_node) : StringName
{static} +set_class_enabled(StringName p_class, bool p_enable) : void
{static} +is_class_enabled(StringName p_class) : bool
{static} +is_class_exposed(StringName p_class) : bool
{static} +add_resource_base_extension(const StringName & p_extension, const StringName & p_class) : void
{static} +get_resource_base_extensions(List<String> * p_extensions) : void
{static} +get_extensions_for_type(const StringName & p_class, List<String> * p_extensions) : void
{static} +add_compatibility_class(const StringName & p_class, const StringName & p_fallback) : void
{static} +set_current_api(ClassDB::APIType p_api) : void
{static} +get_current_api() : ClassDB::APIType
{static} +cleanup_defaults() : void
{static} +cleanup() : void
{static} +creator() : class Object *
{static} +_add_class() : void
{static} +register_class() : void
{static} +register_virtual_class() : void
{static} +_create_ptr_func() : class Object *
{static} +register_custom_instance_class() : void
{static} +bind_method(N p_method_name, M p_method) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7, const Variant & p_def8) : class MethodBind *
{static} +bind_vararg_method(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo & p_info = MethodInfo(), const Vector<Variant> & p_default_args = Vector<Variant>(), bool p_return_nil_is_variant = true) : class MethodBind *
{static} +lock : RWLock [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146{lock}]]]
{static} +classes : HashMap<StringName,ClassDB::ClassInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147{classes}]]]
{static} +resource_base_extensions : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148{resource_base_extensions}]]]
{static} +compat_classes : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149{compat_classes}]]]
{static} +current_api : ClassDB::APIType [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157{current_api}]]]
{static} +default_values : HashMap<StringName,HashMap<StringName,Variant>> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161{default_values}]]]
{static} +default_values_cached : Set<StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162{default_values_cached}]]]
}
class "Reference" as C_0001778859257025660860
class C_0001778859257025660860 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39{Reference}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+is_referenced() const : bool
+init_ref() : bool
+reference() : bool
+unreference() : bool
+reference_get_count() const : int
+Reference() : void
+~Reference() : void
}
class "WeakRef" as C_0001213123647052694419
class C_0001213123647052694419 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L301{WeakRef}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_ref() const : Variant
+set_obj(Object * p_object) : void
+set_ref(const REF & p_ref) : void
+WeakRef() : void
}
class "Node" as C_0000218299049716973303
class C_0000218299049716973303 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55{Node}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_name() const : StringName
+set_name(const String & p_name) : void
+add_child(Node * p_child, bool p_legible_unique_name = false) : void
+add_child_below_node(Node * p_node, Node * p_child, bool p_legible_unique_name = false) : void
+remove_child(Node * p_child) : void
+get_child_count() const : int
+get_child(int p_index) const : Node *
+has_node(const NodePath & p_path) const : bool
+get_node(const NodePath & p_path) const : Node *
+get_node_or_null(const NodePath & p_path) const : Node *
+find_node(const String & p_mask, bool p_recursive = true, bool p_owned = true) const : Node *
+has_node_and_resource(const NodePath & p_path) const : bool
+get_node_and_resource(const NodePath & p_path, RES & r_res, Vector<StringName> & r_leftover_subpath, bool p_last_is_property = true) const : Node *
+get_parent() const : Node *
+find_parent(const String & p_mask) const : Node *
+get_tree() const : SceneTree *
+is_inside_tree() const : bool
+is_a_parent_of(const Node * p_node) const : bool
+is_greater_than(const Node * p_node) const : bool
+get_path() const : NodePath
+get_path_to(const Node * p_node) const : NodePath
+find_common_parent_with(const Node * p_node) const : Node *
+add_to_group(const StringName & p_identifier, bool p_persistent = false) : void
+remove_from_group(const StringName & p_identifier) : void
+is_in_group(const StringName & p_identifier) const : bool
+get_groups(List<Node::GroupInfo> * p_groups) const : void
+get_persistent_group_count() const : int
+move_child(Node * p_child, int p_pos) : void
+raise() : void
+set_owner(Node * p_owner) : void
+get_owner() const : Node *
+get_owned_by(Node * p_by, List<Node *> * p_owned) : void
+remove_and_skip() : void
+get_index() const : int
+print_tree() : void
+print_tree_pretty() : void
+set_filename(const String & p_filename) : void
+get_filename() const : String
+set_editor_description(const String & p_editor_description) : void
+get_editor_description() const : String
+set_editable_instance(Node * p_node, bool p_editable) : void
+is_editable_instance(const Node * p_node) const : bool
+get_deepest_editable_node(Node * start_node) const : Node *
+propagate_notification(int p_notification) : void
+propagate_call(const StringName & p_method, const Array & p_args = Array(), const bool p_parent_first = false) : void
+set_physics_process(bool p_process) : void
+get_physics_process_delta_time() const : float
+is_physics_processing() const : bool
+set_process(bool p_idle_process) : void
+get_process_delta_time() const : float
+is_processing() const : bool
+set_physics_process_internal(bool p_process_internal) : void
+is_physics_processing_internal() const : bool
+set_process_internal(bool p_idle_process_internal) : void
+is_processing_internal() const : bool
+set_process_priority(int p_priority) : void
+get_process_priority() const : int
+set_process_input(bool p_enable) : void
+is_processing_input() const : bool
+set_process_unhandled_input(bool p_enable) : void
+is_processing_unhandled_input() const : bool
+set_process_unhandled_key_input(bool p_enable) : void
+is_processing_unhandled_key_input() const : bool
+get_position_in_parent() const : int
+duplicate(int p_flags = DUPLICATE_GROUPS | DUPLICATE_SIGNALS | DUPLICATE_SCRIPTS) const : Node *
+duplicate_and_reown(const Map<Node *,Node *> & p_reown_map) const : Node *
+duplicate_from_editor(Map<const Node *,Node *> & r_duplimap) const : Node *
+duplicate_from_editor(Map<const Node *,Node *> & r_duplimap, const Map<RES,RES> & p_resource_remap) const : Node *
+remap_node_resources(Node * p_node, const Map<RES,RES> & p_resource_remap) const : void
+remap_nested_resources(RES p_resource, const Map<RES,RES> & p_resource_remap) const : void
+set_scene_instance_state(const Ref<SceneState> & p_state) : void
+get_scene_instance_state() const : Ref<SceneState>
+set_scene_inherited_state(const Ref<SceneState> & p_state) : void
+get_scene_inherited_state() const : Ref<SceneState>
+set_scene_instance_load_placeholder(bool p_enable) : void
+get_scene_instance_load_placeholder() const : bool
{static} +make_binds(const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Vector<Variant>
+replace_by(Node * p_node, bool p_keep_data = false) : void
+set_pause_mode(Node::PauseMode p_mode) : void
+get_pause_mode() const : Node::PauseMode
+can_process() const : bool
+can_process_notification(int p_what) const : bool
+request_ready() : void
{static} +print_stray_nodes() : void
+validate_child_name(Node * p_child) : String
+queue_delete() : void
{static} +set_human_readable_collision_renaming(bool p_enabled) : void
{static} +init_node_hrcr() : void
+force_parent_owned() : void
+set_import_path(const NodePath & p_import_path) : void
+get_import_path() const : NodePath
+is_owned_by_parent() const : bool
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+clear_internal_tree_resource_paths() : void
+get_viewport() const : Viewport *
+get_configuration_warning() const : String
+update_configuration_warning() : void
+set_display_folded(bool p_folded) : void
+is_displayed_folded() const : bool
+set_network_master(int p_peer_id, bool p_recursive = true) : void
+get_network_master() const : int
+is_network_master() const : bool
+rpc_config(const StringName & p_method, MultiplayerAPI::RPCMode p_mode) : void
+rset_config(const StringName & p_property, MultiplayerAPI::RPCMode p_mode) : void
+rpc(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_unreliable(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_id(int p_peer_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_unreliable_id(int p_peer_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rset(const StringName & p_property, const Variant & p_value) : void
+rset_unreliable(const StringName & p_property, const Variant & p_value) : void
+rset_id(int p_peer_id, const StringName & p_property, const Variant & p_value) : void
+rset_unreliable_id(int p_peer_id, const StringName & p_property, const Variant & p_value) : void
+rpcp(int p_peer_id, bool p_unreliable, const StringName & p_method, const Variant ** p_arg, int p_argcount) : void
+rsetp(int p_peer_id, bool p_unreliable, const StringName & p_property, const Variant & p_value) : void
+get_multiplayer() const : Ref<MultiplayerAPI>
+get_custom_multiplayer() const : Ref<MultiplayerAPI>
+set_custom_multiplayer(Ref<MultiplayerAPI> p_multiplayer) : void
+get_node_rpc_mode(const StringName & p_method) : const Map<StringName,MultiplayerAPI::RPCMode>::Element *
+get_node_rset_mode(const StringName & p_property) : const Map<StringName,MultiplayerAPI::RPCMode>::Element *
+Node() : void
+~Node() : void
{static} +orphan_node_count : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78{orphan_node_count}]]]
+NOTIFICATION_ENTER_TREE : enum
+NOTIFICATION_EXIT_TREE : enum
+NOTIFICATION_MOVED_IN_PARENT : enum
+NOTIFICATION_READY : enum
+NOTIFICATION_PAUSED : enum
+NOTIFICATION_UNPAUSED : enum
+NOTIFICATION_PHYSICS_PROCESS : enum
+NOTIFICATION_PROCESS : enum
+NOTIFICATION_PARENTED : enum
+NOTIFICATION_UNPARENTED : enum
+NOTIFICATION_INSTANCED : enum
+NOTIFICATION_DRAG_BEGIN : enum
+NOTIFICATION_DRAG_END : enum
+NOTIFICATION_PATH_CHANGED : enum
+NOTIFICATION_INTERNAL_PROCESS : enum
+NOTIFICATION_INTERNAL_PHYSICS_PROCESS : enum
+NOTIFICATION_POST_ENTER_TREE : enum
+NOTIFICATION_WM_MOUSE_ENTER : enum
+NOTIFICATION_WM_MOUSE_EXIT : enum
+NOTIFICATION_WM_FOCUS_IN : enum
+NOTIFICATION_WM_FOCUS_OUT : enum
+NOTIFICATION_WM_QUIT_REQUEST : enum
+NOTIFICATION_WM_GO_BACK_REQUEST : enum
+NOTIFICATION_WM_UNFOCUS_REQUEST : enum
+NOTIFICATION_OS_MEMORY_WARNING : enum
+NOTIFICATION_TRANSLATION_CHANGED : enum
+NOTIFICATION_WM_ABOUT : enum
+NOTIFICATION_CRASH : enum
+NOTIFICATION_OS_IME_UPDATE : enum
+NOTIFICATION_APP_RESUMED : enum
+NOTIFICATION_APP_PAUSED : enum
}
class "ObjectRC" as C_0000933379568804427881
class C_0000933379568804427881 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54{ObjectRC}]] {
+increment() : void
+decrement() : bool
+invalidate() : bool
+get_ptr() : Object *
+ObjectRC(Object * p_object) : void
+instance_id : const ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52{instance_id}]]]
}
abstract "ScriptInstance" as C_0001735438654351294549
abstract C_0001735438654351294549 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405{ScriptInstance}]] {
{abstract} +set(const StringName & p_name, const Variant & p_value) = 0 : bool
{abstract} +get(const StringName & p_name, Variant & r_ret) const = 0 : bool
{abstract} +get_property_list(List<PropertyInfo> * p_properties) const = 0 : void
{abstract} +get_property_type(const StringName & p_name, bool * r_is_valid = __null) const = 0 : Variant::Type
+get_owner() : Object *
+get_property_state(List<Pair<StringName,Variant>> & state) : void
{abstract} +get_method_list(List<MethodInfo> * p_list) const = 0 : void
{abstract} +has_method(const StringName & p_method) const = 0 : bool
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
{abstract} +call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) = 0 : Variant
+call_multilevel(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+call_multilevel(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call_multilevel_reversed(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
{abstract} +notification(int p_notification) = 0 : void
+to_string(bool * r_valid) : String
+refcount_incremented() : void
+refcount_decremented() : bool
{abstract} +get_script() const = 0 : Ref<Script>
+is_placeholder() const : bool
+property_set_fallback(const StringName & p_name, const Variant & p_value, bool * r_valid) : void
+property_get_fallback(const StringName & p_name, bool * r_valid) : Variant
{abstract} +get_rpc_mode(const StringName & p_method) const = 0 : MultiplayerAPI::RPCMode
{abstract} +get_rset_mode(const StringName & p_variable) const = 0 : MultiplayerAPI::RPCMode
{abstract} +get_language() = 0 : ScriptLanguage *
+~ScriptInstance() : void
}
class "Resource" as C_0001951177692366602790
class C_0001951177692366602790 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L48{Resource}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +register_custom_data_to_otdb() : void
+get_base_extension() const : String
+editor_can_reload_from_file() : bool
+reload_from_file() : void
+register_owner(Object * p_owner) : void
+unregister_owner(Object * p_owner) : void
+set_name(const String & p_name) : void
+get_name() const : String
+set_path(const String & p_path, bool p_take_over = false) : void
+get_path() const : String
+set_subindex(int p_sub_index) : void
+get_subindex() const : int
+duplicate(bool p_subresources = false) const : Ref<Resource>
+duplicate_for_local_scene(Node * p_for_scene, Map<Ref<Resource>,Ref<Resource>> & remap_cache) : Ref<Resource>
+configure_for_local_scene(Node * p_for_scene, Map<Ref<Resource>,Ref<Resource>> & remap_cache) : void
+set_local_to_scene(bool p_enable) : void
+is_local_to_scene() const : bool
+setup_local_to_scene() : void
+get_local_scene() const : Node *
+hash_edited_version() const : uint32_t
+set_last_modified_time(uint64_t p_time) : void
+get_last_modified_time() const : uint64_t
+set_import_last_modified_time(uint64_t p_time) : void
+get_import_last_modified_time() const : uint64_t
+set_import_path(const String & p_path) : void
+get_import_path() const : String
+set_as_translation_remapped(bool p_remapped) : void
+is_translation_remapped() const : bool
+get_rid() const : RID
+set_id_for_path(const String & p_path, int p_id) : void
+get_id_for_path(const String & p_path) const : int
+Resource() : void
+~Resource() : void
{static} +_get_local_scene_func : Node *(*)() [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89{_get_local_scene_func}]]]
}
class "TranslationServer" as C_0001485048025194488343
class C_0001485048025194488343 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67{TranslationServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : TranslationServer *
+set_enabled(bool p_enabled) : void
+is_enabled() const : bool
+set_locale(const String & p_locale) : void
+get_locale() const : String
+get_locale_name(const String & p_locale) const : String
+get_loaded_locales() const : Array
+add_translation(const Ref<Translation> & p_translation) : void
+remove_translation(const Ref<Translation> & p_translation) : void
+translate(const StringName & p_message) const : StringName
{static} +get_all_locales() : Vector<String>
{static} +get_all_locale_names() : Vector<String>
{static} +is_locale_valid(const String & p_locale) : bool
{static} +standardize_locale(const String & p_locale) : String
{static} +get_language_code(const String & p_locale) : String
+set_tool_translation(const Ref<Translation> & p_translation) : void
+tool_translate(const StringName & p_message) const : StringName
+setup() : void
+clear() : void
+load_translations() : void
+TranslationServer() : void
}
class "ProjectSettings" as C_0000066148521405667716
class C_0000066148521405667716 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38{ProjectSettings}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+set_setting(const String & p_setting, const Variant & p_value) : void
+get_setting(const String & p_setting) const : Variant
+has_setting(String p_var) const : bool
+localize_path(const String & p_path) const : String
+globalize_path(const String & p_path) const : String
+set_initial_value(const String & p_name, const Variant & p_value) : void
+set_restart_if_changed(const String & p_name, bool p_restart) : void
+property_can_revert(const String & p_name) : bool
+property_get_revert(const String & p_name) : Variant
+get_resource_path() const : String
{static} +get_singleton() : ProjectSettings *
+clear(const String & p_name) : void
+get_order(const String & p_name) const : int
+set_order(const String & p_name, int p_order) : void
+set_builtin_order(const String & p_name) : void
+setup(const String & p_path, const String & p_main_pack, bool p_upwards = false) : Error
+save_custom(const String & p_path = "", const ProjectSettings::CustomMap & p_custom = CustomMap(), const Vector<String> & p_custom_features = Vector<String>(), bool p_merge_with_current = true) : Error
+save() : Error
+set_custom_property_info(const String & p_prop, const PropertyInfo & p_info) : void
+get_custom_property_info() const : const Map<StringName,PropertyInfo> &
+get_last_saved_time() : uint64_t
+get_optimizer_presets() const : Vector<String>
+get_input_presets() const : List<String>
+set_disable_feature_overrides(bool p_disable) : void
+is_using_datapack() const : bool
+set_registering_order(bool p_enable) : void
+has_custom_feature(const String & p_feature) const : bool
+ProjectSettings() : void
+~ProjectSettings() : void
+NO_BUILTIN_ORDER_BASE : enum
{static} +CONFIG_VERSION : const int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117{CONFIG_VERSION}]]]
}
abstract "Script" as C_0001608678623693693822
abstract C_0001608678623693693822 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L99{Script}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_save_class() const : String
{abstract} +can_instance() const = 0 : bool
{abstract} +get_base_script() const = 0 : Ref<Script>
{abstract} +get_instance_base_type() const = 0 : StringName
{abstract} +instance_create(Object * p_this) = 0 : ScriptInstance *
+placeholder_instance_create(Object * p_this) : PlaceHolderScriptInstance *
{abstract} +instance_has(const Object * p_this) const = 0 : bool
{abstract} +has_source_code() const = 0 : bool
{abstract} +get_source_code() const = 0 : String
{abstract} +set_source_code(const String & p_code) = 0 : void
{abstract} +reload(bool p_keep_state = false) = 0 : Error
{abstract} +has_method(const StringName & p_method) const = 0 : bool
{abstract} +get_method_info(const StringName & p_method) const = 0 : MethodInfo
{abstract} +is_tool() const = 0 : bool
{abstract} +is_valid() const = 0 : bool
{abstract} +get_language() const = 0 : ScriptLanguage *
{abstract} +has_script_signal(const StringName & p_signal) const = 0 : bool
{abstract} +get_script_signal_list(List<MethodInfo> * r_signals) const = 0 : void
{abstract} +get_property_default_value(const StringName & p_property, Variant & r_value) const = 0 : bool
+update_exports() : void
{abstract} +get_script_method_list(List<MethodInfo> * p_list) const = 0 : void
{abstract} +get_script_property_list(List<PropertyInfo> * p_list) const = 0 : void
+get_member_line(const StringName & p_member) const : int
+get_constants(Map<StringName,Variant> * p_constants) : void
+get_members(Set<StringName> * p_constants) : void
+is_placeholder_fallback_enabled() const : bool
+Script() : void
}
abstract "ScriptLanguage" as C_0002110837736536862228
abstract C_0002110837736536862228 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L249{ScriptLanguage}]] {
{abstract} +get_name() const = 0 : String
{abstract} +init() = 0 : void
{abstract} +get_type() const = 0 : String
{abstract} +get_extension() const = 0 : String
{abstract} +execute_file(const String & p_path) = 0 : Error
{abstract} +finish() = 0 : void
{abstract} +get_reserved_words(List<String> * p_words) const = 0 : void
{abstract} +get_comment_delimiters(List<String> * p_delimiters) const = 0 : void
{abstract} +get_string_delimiters(List<String> * p_delimiters) const = 0 : void
{abstract} +get_template(const String & p_class_name, const String & p_base_class_name) const = 0 : Ref<Script>
+make_template(const String & p_class_name, const String & p_base_class_name, Ref<Script> & p_script) : void
+is_using_templates() : bool
{abstract} +validate(const String & p_script, int & r_line_error, int & r_col_error, String & r_test_error, const String & p_path = "", List<String> * r_functions = __null, List<ScriptLanguage::Warning> * r_warnings = __null, Set<int> * r_safe_lines = __null) const = 0 : bool
+validate_path(const String & p_path) const : String
{abstract} +create_script() const = 0 : Script *
{abstract} +has_named_classes() const = 0 : bool
{abstract} +supports_builtin_mode() const = 0 : bool
+can_inherit_from_file() : bool
{abstract} +find_function(const String & p_function, const String & p_code) const = 0 : int
{abstract} +make_function(const String & p_class, const String & p_name, const PoolStringArray & p_args) const = 0 : String
+open_in_external_editor(const Ref<Script> & p_script, int p_line, int p_col) : Error
+overrides_external_editor() : bool
+complete_code(const String & p_code, const String & p_path, Object * p_owner, List<ScriptCodeCompletionOption> * r_options, bool & r_force, String & r_call_hint) : Error
+lookup_code(const String & p_code, const String & p_symbol, const String & p_path, Object * p_owner, ScriptLanguage::LookupResult & r_result) : Error
{abstract} +auto_indent_code(String & p_code, int p_from_line, int p_to_line) const = 0 : void
{abstract} +add_global_constant(const StringName & p_variable, const Variant & p_value) = 0 : void
+add_named_global_constant(const StringName & p_name, const Variant & p_value) : void
+remove_named_global_constant(const StringName & p_name) : void
+thread_enter() : void
+thread_exit() : void
{abstract} +debug_get_error() const = 0 : String
{abstract} +debug_get_stack_level_count() const = 0 : int
{abstract} +debug_get_stack_level_line(int p_level) const = 0 : int
{abstract} +debug_get_stack_level_function(int p_level) const = 0 : String
{abstract} +debug_get_stack_level_source(int p_level) const = 0 : String
{abstract} +debug_get_stack_level_locals(int p_level, List<String> * p_locals, List<Variant> * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void
{abstract} +debug_get_stack_level_members(int p_level, List<String> * p_members, List<Variant> * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void
+debug_get_stack_level_instance(int p_level) : ScriptInstance *
{abstract} +debug_get_globals(List<String> * p_globals, List<Variant> * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void
{abstract} +debug_parse_stack_level_expression(int p_level, const String & p_expression, int p_max_subitems = -1, int p_max_depth = -1) = 0 : String
+debug_get_current_stack_info() : Vector<ScriptLanguage::StackInfo>
{abstract} +reload_all_scripts() = 0 : void
{abstract} +reload_tool_script(const Ref<Script> & p_script, bool p_soft_reload) = 0 : void
{abstract} +get_recognized_extensions(List<String> * p_extensions) const = 0 : void
{abstract} +get_public_functions(List<MethodInfo> * p_functions) const = 0 : void
{abstract} +get_public_constants(List<Pair<String,Variant>> * p_constants) const = 0 : void
{abstract} +profiling_start() = 0 : void
{abstract} +profiling_stop() = 0 : void
{abstract} +profiling_get_accumulated_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int
{abstract} +profiling_get_frame_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int
+alloc_instance_binding_data(Object * p_object) : void *
+free_instance_binding_data(void * p_data) : void
+refcount_incremented_instance_binding(Object * p_object) : void
+refcount_decremented_instance_binding(Object * p_object) : bool
+frame() : void
+handles_global_class_type(const String & p_type) const : bool
+get_global_class_name(const String & p_path, String * r_base_type = __null, String * r_icon_path = __null) const : String
+~ScriptLanguage() : void
}
class "PlaceHolderScriptInstance" as C_0001649884439586022807
class C_0001649884439586022807 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374{PlaceHolderScriptInstance}]] {
+set(const StringName & p_name, const Variant & p_value) : bool
+get(const StringName & p_name, Variant & r_ret) const : bool
+get_property_list(List<PropertyInfo> * p_properties) const : void
+get_property_type(const StringName & p_name, bool * r_is_valid = __null) const : Variant::Type
+get_method_list(List<MethodInfo> * p_list) const : void
+has_method(const StringName & p_method) const : bool
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+notification(int p_notification) : void
+get_script() const : Ref<Script>
+get_language() : ScriptLanguage *
+get_owner() : Object *
+update(const List<PropertyInfo> & p_properties, const Map<StringName,Variant> & p_values) : void
+is_placeholder() const : bool
+property_set_fallback(const StringName & p_name, const Variant & p_value, bool * r_valid = __null) : void
+property_get_fallback(const StringName & p_name, bool * r_valid = __null) : Variant
+get_rpc_mode(const StringName & p_method) const : MultiplayerAPI::RPCMode
+get_rset_mode(const StringName & p_variable) const : MultiplayerAPI::RPCMode
+PlaceHolderScriptInstance(ScriptLanguage * p_language, Ref<Script> p_script, Object * p_owner) : void
+~PlaceHolderScriptInstance() : void
}
class "MainLoop" as C_0000970940027123558604
class C_0000970940027123558604 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38{MainLoop}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+input_event(const Ref<InputEvent> & p_event) : void
+input_text(const String & p_text) : void
+init() : void
+iteration(float p_time) : bool
+idle(float p_time) : bool
+finish() : void
+drop_files(const Vector<String> & p_files, int p_from_screen = 0) : void
+global_menu_action(const Variant & p_id, const Variant & p_meta) : void
+set_init_script(const Ref<Script> & p_init_script) : void
+MainLoop() : void
+~MainLoop() : void
+NOTIFICATION_WM_MOUSE_ENTER : enum
+NOTIFICATION_WM_MOUSE_EXIT : enum
+NOTIFICATION_WM_FOCUS_IN : enum
+NOTIFICATION_WM_FOCUS_OUT : enum
+NOTIFICATION_WM_QUIT_REQUEST : enum
+NOTIFICATION_WM_GO_BACK_REQUEST : enum
+NOTIFICATION_WM_UNFOCUS_REQUEST : enum
+NOTIFICATION_OS_MEMORY_WARNING : enum
+NOTIFICATION_TRANSLATION_CHANGED : enum
+NOTIFICATION_WM_ABOUT : enum
+NOTIFICATION_CRASH : enum
+NOTIFICATION_OS_IME_UPDATE : enum
+NOTIFICATION_APP_RESUMED : enum
+NOTIFICATION_APP_PAUSED : enum
}
class "Engine::Singleton" as C_0001823345232236209470
class C_0001823345232236209470 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42{Engine##Singleton}]] {
+Singleton(const StringName & p_name = StringName(), Object * p_ptr = __null) : void
+name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43{name}]]]
+ptr : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44{ptr}]]]
}
abstract "OS" as C_0000361490529588572420
abstract C_0000361490529588572420 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L45{OS}]] {
{static} +get_singleton() : OS *
+global_menu_add_item(const String & p_menu, const String & p_label, const Variant & p_signal, const Variant & p_meta) : void
+global_menu_add_separator(const String & p_menu) : void
+global_menu_remove_item(const String & p_menu, int p_idx) : void
+global_menu_clear(const String & p_menu) : void
+print_error(const char * p_function, const char * p_file, int p_line, const char * p_code, const char * p_rationale, Logger::ErrorType p_type = Logger::ERR_ERROR) : void
+print(const char * p_format) : void
+printerr(const char * p_format) : void
{abstract} +alert(const String & p_alert, const String & p_title = "ALERT!") = 0 : void
{abstract} +get_stdin_string(bool p_block = true) = 0 : String
+set_mouse_mode(OS::MouseMode p_mode) : void
+get_mouse_mode() const : OS::MouseMode
+warp_mouse_position(const Point2 & p_to) : void
{abstract} +get_mouse_position() const = 0 : Point2
{abstract} +get_mouse_button_state() const = 0 : int
{abstract} +set_window_title(const String & p_title) = 0 : void
+set_window_mouse_passthrough(const PoolVector2Array & p_region) : void
+set_clipboard(const String & p_text) : void
+get_clipboard() const : String
{abstract} +set_video_mode(const OS::VideoMode & p_video_mode, int p_screen = 0) = 0 : void
{abstract} +get_video_mode(int p_screen = 0) const = 0 : OS::VideoMode
{abstract} +get_fullscreen_mode_list(List<OS::VideoMode> * p_list, int p_screen = 0) const = 0 : void
+get_video_driver_count() const : int
+get_video_driver_name(int p_driver) const : const char *
{abstract} +get_current_video_driver() const = 0 : int
+get_audio_driver_count() const : int
+get_audio_driver_name(int p_driver) const : const char *
+get_tablet_driver_count() const : int
+get_tablet_driver_name(int p_driver) const : String
+get_current_tablet_driver() const : String
+set_current_tablet_driver(const String & p_driver) : void
+get_connected_midi_inputs() : PoolStringArray
+open_midi_inputs() : void
+close_midi_inputs() : void
+get_screen_count() const : int
+get_current_screen() const : int
+set_current_screen(int p_screen) : void
+get_screen_position(int p_screen = -1) const : Point2
+get_screen_size(int p_screen = -1) const : Size2
+get_screen_dpi(int p_screen = -1) const : int
+get_screen_scale(int p_screen = -1) const : float
+get_screen_max_scale() const : float
+get_window_position() const : Point2
+set_window_position(const Point2 & p_position) : void
+get_max_window_size() const : Size2
+get_min_window_size() const : Size2
{abstract} +get_window_size() const = 0 : Size2
+get_real_window_size() const : Size2
+set_min_window_size(const Size2 p_size) : void
+set_max_window_size(const Size2 p_size) : void
+set_window_size(const Size2 p_size) : void
+set_window_fullscreen(bool p_enabled) : void
+is_window_fullscreen() const : bool
+set_window_resizable(bool p_enabled) : void
+is_window_resizable() const : bool
+set_window_minimized(bool p_enabled) : void
+is_window_minimized() const : bool
+set_window_maximized(bool p_enabled) : void
+is_window_maximized() const : bool
+set_window_always_on_top(bool p_enabled) : void
+is_window_always_on_top() const : bool
+is_window_focused() const : bool
+set_console_visible(bool p_enabled) : void
+is_console_visible() const : bool
+request_attention() : void
+center_window() : void
+get_native_handle(int p_handle_type) : void *
+get_window_safe_area() const : Rect2
+set_borderless_window(bool p_borderless) : void
+get_borderless_window() : bool
+get_window_per_pixel_transparency_enabled() const : bool
+set_window_per_pixel_transparency_enabled(bool p_enabled) : void
+set_ime_active(const bool p_active) : void
+set_ime_position(const Point2 & p_pos) : void
+get_ime_selection() const : Point2
+get_ime_text() const : String
+open_dynamic_library(const String p_path, void *& p_library_handle, bool p_also_set_library_path = false) : Error
+close_dynamic_library(void * p_library_handle) : Error
+get_dynamic_library_symbol_handle(void * p_library_handle, const String p_name, void *& p_symbol_handle, bool p_optional = false) : Error
+set_keep_screen_on(bool p_enabled) : void
+is_keep_screen_on() const : bool
+set_low_processor_usage_mode(bool p_enabled) : void
+is_in_low_processor_usage_mode() const : bool
+set_low_processor_usage_mode_sleep_usec(int p_usec) : void
+get_low_processor_usage_mode_sleep_usec() const : int
+get_executable_path() const : String
{abstract} +execute(const String & p_path, const List<String> & p_arguments, bool p_blocking = true, OS::ProcessID * r_child_id = __null, String * r_pipe = __null, int * r_exitcode = __null, bool read_stderr = false, Mutex * p_pipe_mutex = __null) = 0 : Error
{abstract} +kill(const OS::ProcessID & p_pid) = 0 : Error
+get_process_id() const : int
+vibrate_handheld(int p_duration_ms = 500) : void
+shell_open(String p_uri) : Error
+set_cwd(const String & p_cwd) : Error
{abstract} +has_environment(const String & p_var) const = 0 : bool
{abstract} +get_environment(const String & p_var) const = 0 : String
{abstract} +set_environment(const String & p_var, const String & p_value) const = 0 : bool
{abstract} +get_name() const = 0 : String
+get_cmdline_args() const : List<String>
+get_model_name() const : String
+ensure_user_data_dir() : void
{abstract} +get_main_loop() const = 0 : MainLoop *
+yield() : void
{abstract} +get_date(bool local = false) const = 0 : OS::Date
{abstract} +get_time(bool local = false) const = 0 : OS::Time
{abstract} +get_time_zone_info() const = 0 : OS::TimeZoneInfo
+get_iso_date_time(bool local = false) const : String
+get_unix_time() const : uint64_t
+get_system_time_secs() const : uint64_t
+get_system_time_msecs() const : uint64_t
{abstract} +delay_usec(uint32_t p_usec) const = 0 : void
+add_frame_delay(bool p_can_draw) : void
{abstract} +get_ticks_usec() const = 0 : uint64_t
+get_ticks_msec() const : uint32_t
+get_splash_tick_msec() const : uint64_t
{abstract} +can_draw() const = 0 : bool
+is_userfs_persistent() const : bool
+is_stdout_verbose() const : bool
+is_stdout_debug_enabled() const : bool
+disable_crash_handler() : void
+is_disable_crash_handler() const : bool
+initialize_debugging() : void
+has_virtual_keyboard() const : bool
+show_virtual_keyboard(const String & p_existing_text, const Rect2 & p_screen_rect = Rect2(), bool p_multiline = false, int p_max_input_length = -1, int p_cursor_start = -1, int p_cursor_end = -1) : void
+hide_virtual_keyboard() : void
+get_virtual_keyboard_height() const : int
+set_cursor_shape(OS::CursorShape p_shape) : void
+get_cursor_shape() const : OS::CursorShape
+set_custom_mouse_cursor(const RES & p_cursor, OS::CursorShape p_shape, const Vector2 & p_hotspot) : void
+get_swap_ok_cancel() : bool
+dump_memory_to_file(const char * p_file) : void
+dump_resources_to_file(const char * p_file) : void
+print_resources_in_use(bool p_short = false) : void
+print_all_resources(String p_to_file = "") : void
+get_static_memory_usage() const : uint64_t
+get_static_memory_peak_usage() const : uint64_t
+get_dynamic_memory_usage() const : uint64_t
+get_free_static_memory() const : uint64_t
+get_render_thread_mode() const : OS::RenderThreadMode
+get_locale() const : String
+get_safe_dir_name(const String & p_dir_name, bool p_allow_dir_separator = false) const : String
+get_godot_dir_name() const : String
+get_data_path() const : String
+get_config_path() const : String
+get_cache_path() const : String
+get_bundle_resource_dir() const : String
+get_user_data_dir() const : String
+get_resource_dir() const : String
+get_system_dir(OS::SystemDir p_dir, bool p_shared_storage = true) const : String
+move_to_trash(const String & p_path) : Error
+set_no_window_mode(bool p_enable) : void
+is_no_window_mode_enabled() const : bool
+has_touchscreen_ui_hint() const : bool
+set_screen_orientation(OS::ScreenOrientation p_orientation) : void
+get_screen_orientation() const : OS::ScreenOrientation
+get_screen_orientation_from_string(const String & p_orientation) const : OS::ScreenOrientation
+enable_for_stealing_focus(OS::ProcessID pid) : void
+move_window_to_foreground() : void
+debug_break() : void
+release_rendering_thread() : void
+make_rendering_thread() : void
+swap_buffers() : void
+set_native_icon(const String & p_filename) : void
+set_icon(const Ref<Image> & p_icon) : void
+get_exit_code() const : int
+set_exit_code(int p_code) : void
+is_custom_exit_code() : bool
+get_processor_count() const : int
+get_unique_id() const : String
+native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error
+native_video_is_playing() const : bool
+native_video_pause() : void
+native_video_unpause() : void
+native_video_stop() : void
+can_use_threads() const : bool
+dialog_show(String p_title, String p_description, Vector<String> p_buttons, Object * p_obj, String p_callback) : Error
+dialog_input_text(String p_title, String p_description, String p_partial, Object * p_obj, String p_callback) : Error
+get_latin_keyboard_variant() const : OS::LatinKeyboardVariant
+keyboard_get_layout_count() const : int
+keyboard_get_current_layout() const : int
+keyboard_set_current_layout(int p_index) : void
+keyboard_get_layout_language(int p_index) const : String
+keyboard_get_layout_name(int p_index) const : String
+is_joy_known(int p_device) : bool
+get_joy_guid(int p_device) const : String
+set_context(int p_context) : void
+set_use_vsync(bool p_enable) : void
+is_vsync_enabled() const : bool
+_set_use_vsync(bool p_enable) : void
+set_vsync_via_compositor(bool p_enable) : void
+is_vsync_via_compositor_enabled() const : bool
+get_power_state() : OS::PowerState
+get_power_seconds_left() : int
+get_power_percent_left() : int
+force_process_input() : void
+has_feature(const String & p_feature) : bool
+set_has_server_feature_callback(OS::HasServerFeatureCallback p_callback) : void
+is_layered_allowed() const : bool
+is_hidpi_allowed() const : bool
+set_restart_on_exit(bool p_restart, const List<String> & p_restart_arguments) : void
+is_restart_on_exit_set() const : bool
+get_restart_on_exit_arguments() const : List<String>
+request_permission(const String & p_name) : bool
+request_permissions() : bool
+get_granted_permissions() const : Vector<String>
+process_and_drop_events() : void
+OS() : void
+~OS() : void
{static} +switch_vsync_function : OS::SwitchVSyncCallbackInThread [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544{switch_vsync_function}]]]
}
abstract "IP" as C_0001191393512042218074
abstract C_0001191393512042218074 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39{IP}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+resolve_hostname(const String & p_hostname, IP::Type p_type = TYPE_ANY) : IP_Address
+resolve_hostname_queue_item(const String & p_hostname, IP::Type p_type = TYPE_ANY) : IP::ResolverID
+get_resolve_item_status(IP::ResolverID p_id) const : IP::ResolverStatus
+get_resolve_item_address(IP::ResolverID p_id) const : IP_Address
+get_local_addresses(List<IP_Address> * r_addresses) const : void
{abstract} +get_local_interfaces(Map<String,IP::Interface_Info> * r_interfaces) const = 0 : void
+erase_resolve_item(IP::ResolverID p_id) : void
+clear_cache(const String & p_hostname = "") : void
{static} +get_singleton() : IP *
{static} +create() : IP *
+IP() : void
+~IP() : void
+RESOLVER_MAX_QUERIES : enum
+RESOLVER_INVALID_ID : enum
}
class "MessageQueue" as C_0000825523737350882091
class C_0000825523737350882091 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/message_queue.h#L37{MessageQueue}]] {
{static} +get_singleton() : MessageQueue *
+push_call(ObjectID p_id, const StringName & p_method, const Variant ** p_args, int p_argcount, bool p_show_error = false) : Error
+push_call(ObjectID p_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+push_notification(ObjectID p_id, int p_notification) : Error
+push_set(ObjectID p_id, const StringName & p_prop, const Variant & p_value) : Error
+push_call(Object * p_object, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+push_notification(Object * p_object, int p_notification) : Error
+push_set(Object * p_object, const StringName & p_prop, const Variant & p_value) : Error
+statistics() : void
+flush() : void
+is_flushing() const : bool
+get_max_buffer_usage() const : int
+MessageQueue() : void
+~MessageQueue() : void
}
class "_ObjectDebugLock" as C_0000132048052014479231
class C_0000132048052014479231 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45{_ObjectDebugLock}]] {
+_ObjectDebugLock(Object * p_obj) : void
+~_ObjectDebugLock() : void
+obj : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47{obj}]]]
}
class "_ObjectSignalDisconnectData" as C_0000115801560197752094
class C_0000115801560197752094 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147{_ObjectSignalDisconnectData}]] {
+signal : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149{signal}]]]
+target : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150{target}]]]
+method : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151{method}]]]
}
abstract "Input" as C_0000535376932101028371
abstract C_0000535376932101028371 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38{Input}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+set_mouse_mode(Input::MouseMode p_mode) : void
+get_mouse_mode() const : Input::MouseMode
{static} +get_singleton() : Input *
{abstract} +is_key_pressed(int p_scancode) const = 0 : bool
{abstract} +is_mouse_button_pressed(int p_button) const = 0 : bool
{abstract} +is_joy_button_pressed(int p_device, int p_button) const = 0 : bool
{abstract} +is_action_pressed(const StringName & p_action) const = 0 : bool
{abstract} +is_action_just_pressed(const StringName & p_action) const = 0 : bool
{abstract} +is_action_just_released(const StringName & p_action) const = 0 : bool
{abstract} +get_action_strength(const StringName & p_action) const = 0 : float
{abstract} +get_joy_axis(int p_device, int p_axis) const = 0 : float
{abstract} +get_joy_name(int p_idx) = 0 : String
{abstract} +get_connected_joypads() = 0 : Array
{abstract} +joy_connection_changed(int p_idx, bool p_connected, String p_name, String p_guid) = 0 : void
{abstract} +add_joy_mapping(String p_mapping, bool p_update_existing = false) = 0 : void
{abstract} +remove_joy_mapping(String p_guid) = 0 : void
{abstract} +is_joy_known(int p_device) = 0 : bool
{abstract} +get_joy_guid(int p_device) const = 0 : String
{abstract} +get_joy_vibration_strength(int p_device) = 0 : Vector2
{abstract} +get_joy_vibration_duration(int p_device) = 0 : float
{abstract} +get_joy_vibration_timestamp(int p_device) = 0 : uint64_t
{abstract} +start_joy_vibration(int p_device, float p_weak_magnitude, float p_strong_magnitude, float p_duration = 0) = 0 : void
{abstract} +stop_joy_vibration(int p_device) = 0 : void
{abstract} +vibrate_handheld(int p_duration_ms = 500) = 0 : void
{abstract} +get_mouse_position() const = 0 : Point2
{abstract} +get_last_mouse_speed() const = 0 : Point2
{abstract} +get_mouse_button_mask() const = 0 : int
{abstract} +warp_mouse_position(const Vector2 & p_to) = 0 : void
{abstract} +warp_mouse_motion(const Ref<InputEventMouseMotion> & p_motion, const Rect2 & p_rect) = 0 : Point2i
{abstract} +get_gravity() const = 0 : Vector3
{abstract} +get_accelerometer() const = 0 : Vector3
{abstract} +get_magnetometer() const = 0 : Vector3
{abstract} +get_gyroscope() const = 0 : Vector3
{abstract} +action_press(const StringName & p_action, float p_strength = 1.f) = 0 : void
{abstract} +action_release(const StringName & p_action) = 0 : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
{abstract} +is_emulating_touch_from_mouse() const = 0 : bool
{abstract} +is_emulating_mouse_from_touch() const = 0 : bool
{abstract} +get_default_cursor_shape() const = 0 : Input::CursorShape
{abstract} +set_default_cursor_shape(Input::CursorShape p_shape) = 0 : void
{abstract} +get_current_cursor_shape() const = 0 : Input::CursorShape
{abstract} +set_custom_mouse_cursor(const RES & p_cursor, Input::CursorShape p_shape = CURSOR_ARROW, const Vector2 & p_hotspot = Vector2()) = 0 : void
{abstract} +get_joy_button_string(int p_button) = 0 : String
{abstract} +get_joy_axis_string(int p_axis) = 0 : String
{abstract} +get_joy_button_index_from_string(String p_button) = 0 : int
{abstract} +get_joy_axis_index_from_string(String p_axis) = 0 : int
{abstract} +parse_input_event(const Ref<InputEvent> & p_event) = 0 : void
{abstract} +accumulate_input_event(const Ref<InputEvent> & p_event) = 0 : void
{abstract} +flush_accumulated_events() = 0 : void
{abstract} +set_use_accumulated_input(bool p_enable) = 0 : void
+Input() : void
}
class "InputMap" as C_0000314051240057057851
class C_0000314051240057057851 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37{InputMap}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : InputMap *
+has_action(const StringName & p_action) const : bool
+get_actions() const : List<StringName>
+add_action(const StringName & p_action, float p_deadzone = 0.5) : void
+erase_action(const StringName & p_action) : void
+action_get_deadzone(const StringName & p_action) : float
+action_set_deadzone(const StringName & p_action, float p_deadzone) : void
+action_add_event(const StringName & p_action, const Ref<InputEvent> & p_event) : void
+action_has_event(const StringName & p_action, const Ref<InputEvent> & p_event) : bool
+action_erase_event(const StringName & p_action, const Ref<InputEvent> & p_event) : void
+action_erase_events(const StringName & p_action) : void
+get_action_list(const StringName & p_action) : const List<Ref<InputEvent>> *
+event_is_action(const Ref<InputEvent> & p_event, const StringName & p_action) const : bool
+event_get_action_status(const Ref<InputEvent> & p_event, const StringName & p_action, bool * p_pressed = __null, float * p_strength = __null) const : bool
+get_action_map() const : const Map<StringName,InputMap::Action> &
+load_from_globals() : void
+load_default() : void
+InputMap() : void
{static} +ALL_DEVICES : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45{A special value used to signify that a given Action can be triggered by any device}]]]
}
class "CameraServer" as C_0001701907280759632930
class C_0001701907280759632930 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49{CameraServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : CameraServer *
{static} +create() : CameraServer *
+get_free_id() : int
+get_feed_index(int p_id) : int
+get_feed_by_id(int p_id) : Ref<CameraFeed>
+add_feed(const Ref<CameraFeed> & p_feed) : void
+remove_feed(const Ref<CameraFeed> & p_feed) : void
+get_feed(int p_index) : Ref<CameraFeed>
+get_feed_count() : int
+get_feeds() : Array
+feed_texture(int p_id, CameraServer::FeedImage p_texture) : RID
+CameraServer() : void
+~CameraServer() : void
{static} +make_default() : void
}
abstract "VisualServer" as C_0001589464385186808769
abstract C_0001589464385186808769 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42{VisualServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : VisualServer *
{static} +create() : VisualServer *
{abstract} +texture_create() = 0 : RID
+texture_create_from_image(const Ref<Image> & p_image, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) : RID
{abstract} +texture_allocate(RID p_texture, int p_width, int p_height, int p_depth_3d, Image::Format p_format, VisualServer::TextureType p_type, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) = 0 : void
{abstract} +texture_set_data(RID p_texture, const Ref<Image> & p_image, int p_layer = 0) = 0 : void
{abstract} +texture_set_data_partial(RID p_texture, const Ref<Image> & p_image, int src_x, int src_y, int src_w, int src_h, int dst_x, int dst_y, int p_dst_mip, int p_layer = 0) = 0 : void
{abstract} +texture_get_data(RID p_texture, int p_layer = 0) const = 0 : Ref<Image>
{abstract} +texture_set_flags(RID p_texture, uint32_t p_flags) = 0 : void
{abstract} +texture_get_flags(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_format(RID p_texture) const = 0 : Image::Format
{abstract} +texture_get_type(RID p_texture) const = 0 : VisualServer::TextureType
{abstract} +texture_get_texid(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_width(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_height(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_depth(RID p_texture) const = 0 : uint32_t
{abstract} +texture_set_size_override(RID p_texture, int p_width, int p_height, int p_depth_3d) = 0 : void
{abstract} +texture_bind(RID p_texture, uint32_t p_texture_no) = 0 : void
{abstract} +texture_set_path(RID p_texture, const String & p_path) = 0 : void
{abstract} +texture_get_path(RID p_texture) const = 0 : String
{abstract} +texture_set_shrink_all_x2_on_set_data(bool p_enable) = 0 : void
{abstract} +texture_set_detect_3d_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_set_detect_srgb_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_set_detect_normal_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_debug_usage(List<VisualServer::TextureInfo> * r_info) = 0 : void
+_texture_debug_usage_bind() : Array
{abstract} +textures_keep_original(bool p_enable) = 0 : void
{abstract} +texture_set_proxy(RID p_proxy, RID p_base) = 0 : void
{abstract} +texture_set_force_redraw_if_visible(RID p_texture, bool p_enable) = 0 : void
{abstract} +sky_create() = 0 : RID
{abstract} +sky_set_texture(RID p_sky, RID p_cube_map, int p_radiance_size) = 0 : void
{abstract} +shader_create() = 0 : RID
{abstract} +shader_set_code(RID p_shader, const String & p_code) = 0 : void
{abstract} +shader_get_code(RID p_shader) const = 0 : String
{abstract} +shader_get_param_list(RID p_shader, List<PropertyInfo> * p_param_list) const = 0 : void
+_shader_get_param_list_bind(RID p_shader) const : Array
{abstract} +shader_set_default_texture_param(RID p_shader, const StringName & p_name, RID p_texture) = 0 : void
{abstract} +shader_get_default_texture_param(RID p_shader, const StringName & p_name) const = 0 : RID
{abstract} +shader_add_custom_define(RID p_shader, const String & p_define) = 0 : void
{abstract} +shader_get_custom_defines(RID p_shader, Vector<String> * p_defines) const = 0 : void
{abstract} +shader_remove_custom_define(RID p_shader, const String & p_define) = 0 : void
{abstract} +material_create() = 0 : RID
{abstract} +material_set_shader(RID p_shader_material, RID p_shader) = 0 : void
{abstract} +material_get_shader(RID p_shader_material) const = 0 : RID
{abstract} +material_set_param(RID p_material, const StringName & p_param, const Variant & p_value) = 0 : void
{abstract} +material_get_param(RID p_material, const StringName & p_param) const = 0 : Variant
{abstract} +material_get_param_default(RID p_material, const StringName & p_param) const = 0 : Variant
{abstract} +material_set_render_priority(RID p_material, int priority) = 0 : void
{abstract} +material_set_line_width(RID p_material, float p_width) = 0 : void
{abstract} +material_set_next_pass(RID p_material, RID p_next_material) = 0 : void
{abstract} +mesh_create() = 0 : RID
+mesh_surface_get_format_offset(uint32_t p_format, int p_vertex_len, int p_index_len, int p_array_index) const : uint32_t
+mesh_surface_get_format_stride(uint32_t p_format, int p_vertex_len, int p_index_len) const : uint32_t
+mesh_surface_make_offsets_from_format(uint32_t p_format, int p_vertex_len, int p_index_len, uint32_t * r_offsets) const : uint32_t
+mesh_add_surface_from_arrays(RID p_mesh, VisualServer::PrimitiveType p_primitive, const Array & p_arrays, const Array & p_blend_shapes = Array(), uint32_t p_compress_format = ARRAY_COMPRESS_DEFAULT) : void
{abstract} +mesh_add_surface(RID p_mesh, uint32_t p_format, VisualServer::PrimitiveType p_primitive, const PoolVector<uint8_t> & p_array, int p_vertex_count, const PoolVector<uint8_t> & p_index_array, int p_index_count, const AABB & p_aabb, const Vector<PoolVector<uint8_t>> & p_blend_shapes = Vector<PoolVector<uint8_t> >(), const Vector<AABB> & p_bone_aabbs = Vector<AABB>()) = 0 : void
{abstract} +mesh_set_blend_shape_count(RID p_mesh, int p_amount) = 0 : void
{abstract} +mesh_get_blend_shape_count(RID p_mesh) const = 0 : int
{abstract} +mesh_set_blend_shape_mode(RID p_mesh, VisualServer::BlendShapeMode p_mode) = 0 : void
{abstract} +mesh_get_blend_shape_mode(RID p_mesh) const = 0 : VisualServer::BlendShapeMode
{abstract} +mesh_surface_update_region(RID p_mesh, int p_surface, int p_offset, const PoolVector<uint8_t> & p_data) = 0 : void
{abstract} +mesh_surface_set_material(RID p_mesh, int p_surface, RID p_material) = 0 : void
{abstract} +mesh_surface_get_material(RID p_mesh, int p_surface) const = 0 : RID
{abstract} +mesh_surface_get_array_len(RID p_mesh, int p_surface) const = 0 : int
{abstract} +mesh_surface_get_array_index_len(RID p_mesh, int p_surface) const = 0 : int
{abstract} +mesh_surface_get_array(RID p_mesh, int p_surface) const = 0 : PoolVector<uint8_t>
{abstract} +mesh_surface_get_index_array(RID p_mesh, int p_surface) const = 0 : PoolVector<uint8_t>
+mesh_surface_get_arrays(RID p_mesh, int p_surface) const : Array
+mesh_surface_get_blend_shape_arrays(RID p_mesh, int p_surface) const : Array
{abstract} +mesh_surface_get_format(RID p_mesh, int p_surface) const = 0 : uint32_t
{abstract} +mesh_surface_get_primitive_type(RID p_mesh, int p_surface) const = 0 : VisualServer::PrimitiveType
{abstract} +mesh_surface_get_aabb(RID p_mesh, int p_surface) const = 0 : AABB
{abstract} +mesh_surface_get_blend_shapes(RID p_mesh, int p_surface) const = 0 : Vector<PoolVector<uint8_t>>
{abstract} +mesh_surface_get_skeleton_aabb(RID p_mesh, int p_surface) const = 0 : Vector<AABB>
+_mesh_surface_get_skeleton_aabb_bind(RID p_mesh, int p_surface) const : Array
{abstract} +mesh_remove_surface(RID p_mesh, int p_index) = 0 : void
{abstract} +mesh_get_surface_count(RID p_mesh) const = 0 : int
{abstract} +mesh_set_custom_aabb(RID p_mesh, const AABB & p_aabb) = 0 : void
{abstract} +mesh_get_custom_aabb(RID p_mesh) const = 0 : AABB
{abstract} +mesh_clear(RID p_mesh) = 0 : void
{abstract} +multimesh_create() = 0 : RID
{abstract} +multimesh_allocate(RID p_multimesh, int p_instances, VisualServer::MultimeshTransformFormat p_transform_format, VisualServer::MultimeshColorFormat p_color_format, VisualServer::MultimeshCustomDataFormat p_data_format = MULTIMESH_CUSTOM_DATA_NONE) = 0 : void
{abstract} +multimesh_get_instance_count(RID p_multimesh) const = 0 : int
{abstract} +multimesh_set_mesh(RID p_multimesh, RID p_mesh) = 0 : void
{abstract} +multimesh_instance_set_transform(RID p_multimesh, int p_index, const Transform & p_transform) = 0 : void
{abstract} +multimesh_instance_set_transform_2d(RID p_multimesh, int p_index, const Transform2D & p_transform) = 0 : void
{abstract} +multimesh_instance_set_color(RID p_multimesh, int p_index, const Color & p_color) = 0 : void
{abstract} +multimesh_instance_set_custom_data(RID p_multimesh, int p_index, const Color & p_color) = 0 : void
{abstract} +multimesh_get_mesh(RID p_multimesh) const = 0 : RID
{abstract} +multimesh_get_aabb(RID p_multimesh) const = 0 : AABB
{abstract} +multimesh_instance_get_transform(RID p_multimesh, int p_index) const = 0 : Transform
{abstract} +multimesh_instance_get_transform_2d(RID p_multimesh, int p_index) const = 0 : Transform2D
{abstract} +multimesh_instance_get_color(RID p_multimesh, int p_index) const = 0 : Color
{abstract} +multimesh_instance_get_custom_data(RID p_multimesh, int p_index) const = 0 : Color
{abstract} +multimesh_set_as_bulk_array(RID p_multimesh, const PoolVector<float> & p_array) = 0 : void
{abstract} +multimesh_set_visible_instances(RID p_multimesh, int p_visible) = 0 : void
{abstract} +multimesh_get_visible_instances(RID p_multimesh) const = 0 : int
{abstract} +immediate_create() = 0 : RID
{abstract} +immediate_begin(RID p_immediate, VisualServer::PrimitiveType p_rimitive, RID p_texture = = RID()) = 0 : void
{abstract} +immediate_vertex(RID p_immediate, const Vector3 & p_vertex) = 0 : void
+immediate_vertex_2d(RID p_immediate, const Vector2 & p_vertex) : void
{abstract} +immediate_normal(RID p_immediate, const Vector3 & p_normal) = 0 : void
{abstract} +immediate_tangent(RID p_immediate, const Plane & p_tangent) = 0 : void
{abstract} +immediate_color(RID p_immediate, const Color & p_color) = 0 : void
{abstract} +immediate_uv(RID p_immediate, const Vector2 & tex_uv) = 0 : void
{abstract} +immediate_uv2(RID p_immediate, const Vector2 & tex_uv) = 0 : void
{abstract} +immediate_end(RID p_immediate) = 0 : void
{abstract} +immediate_clear(RID p_immediate) = 0 : void
{abstract} +immediate_set_material(RID p_immediate, RID p_material) = 0 : void
{abstract} +immediate_get_material(RID p_immediate) const = 0 : RID
{abstract} +skeleton_create() = 0 : RID
{abstract} +skeleton_allocate(RID p_skeleton, int p_bones, bool p_2d_skeleton = false) = 0 : void
{abstract} +skeleton_get_bone_count(RID p_skeleton) const = 0 : int
{abstract} +skeleton_bone_set_transform(RID p_skeleton, int p_bone, const Transform & p_transform) = 0 : void
{abstract} +skeleton_bone_get_transform(RID p_skeleton, int p_bone) const = 0 : Transform
{abstract} +skeleton_bone_set_transform_2d(RID p_skeleton, int p_bone, const Transform2D & p_transform) = 0 : void
{abstract} +skeleton_bone_get_transform_2d(RID p_skeleton, int p_bone) const = 0 : Transform2D
{abstract} +skeleton_set_base_transform_2d(RID p_skeleton, const Transform2D & p_base_transform) = 0 : void
{abstract} +directional_light_create() = 0 : RID
{abstract} +omni_light_create() = 0 : RID
{abstract} +spot_light_create() = 0 : RID
{abstract} +light_set_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +light_set_param(RID p_light, VisualServer::LightParam p_param, float p_value) = 0 : void
{abstract} +light_set_shadow(RID p_light, bool p_enabled) = 0 : void
{abstract} +light_set_shadow_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +light_set_projector(RID p_light, RID p_texture) = 0 : void
{abstract} +light_set_negative(RID p_light, bool p_enable) = 0 : void
{abstract} +light_set_cull_mask(RID p_light, uint32_t p_mask) = 0 : void
{abstract} +light_set_reverse_cull_face_mode(RID p_light, bool p_enabled) = 0 : void
{abstract} +light_set_use_gi(RID p_light, bool p_enable) = 0 : void
{abstract} +light_set_bake_mode(RID p_light, VisualServer::LightBakeMode p_bake_mode) = 0 : void
{abstract} +light_omni_set_shadow_mode(RID p_light, VisualServer::LightOmniShadowMode p_mode) = 0 : void
{abstract} +light_omni_set_shadow_detail(RID p_light, VisualServer::LightOmniShadowDetail p_detail) = 0 : void
{abstract} +light_directional_set_shadow_mode(RID p_light, VisualServer::LightDirectionalShadowMode p_mode) = 0 : void
{abstract} +light_directional_set_blend_splits(RID p_light, bool p_enable) = 0 : void
{abstract} +light_directional_set_shadow_depth_range_mode(RID p_light, VisualServer::LightDirectionalShadowDepthRangeMode p_range_mode) = 0 : void
{abstract} +reflection_probe_create() = 0 : RID
{abstract} +reflection_probe_set_update_mode(RID p_probe, VisualServer::ReflectionProbeUpdateMode p_mode) = 0 : void
{abstract} +reflection_probe_set_intensity(RID p_probe, float p_intensity) = 0 : void
{abstract} +reflection_probe_set_interior_ambient(RID p_probe, const Color & p_color) = 0 : void
{abstract} +reflection_probe_set_interior_ambient_energy(RID p_probe, float p_energy) = 0 : void
{abstract} +reflection_probe_set_interior_ambient_probe_contribution(RID p_probe, float p_contrib) = 0 : void
{abstract} +reflection_probe_set_max_distance(RID p_probe, float p_distance) = 0 : void
{abstract} +reflection_probe_set_extents(RID p_probe, const Vector3 & p_extents) = 0 : void
{abstract} +reflection_probe_set_origin_offset(RID p_probe, const Vector3 & p_offset) = 0 : void
{abstract} +reflection_probe_set_as_interior(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_enable_box_projection(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_enable_shadows(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_cull_mask(RID p_probe, uint32_t p_layers) = 0 : void
{abstract} +reflection_probe_set_resolution(RID p_probe, int p_resolution) = 0 : void
{abstract} +gi_probe_create() = 0 : RID
{abstract} +gi_probe_set_bounds(RID p_probe, const AABB & p_bounds) = 0 : void
{abstract} +gi_probe_get_bounds(RID p_probe) const = 0 : AABB
{abstract} +gi_probe_set_cell_size(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_cell_size(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_to_cell_xform(RID p_probe, const Transform & p_xform) = 0 : void
{abstract} +gi_probe_get_to_cell_xform(RID p_probe) const = 0 : Transform
{abstract} +gi_probe_set_dynamic_data(RID p_probe, const PoolVector<int> & p_data) = 0 : void
{abstract} +gi_probe_get_dynamic_data(RID p_probe) const = 0 : PoolVector<int>
{abstract} +gi_probe_set_dynamic_range(RID p_probe, int p_range) = 0 : void
{abstract} +gi_probe_get_dynamic_range(RID p_probe) const = 0 : int
{abstract} +gi_probe_set_energy(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_energy(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_bias(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_bias(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_normal_bias(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_normal_bias(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_propagation(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_propagation(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_interior(RID p_probe, bool p_enable) = 0 : void
{abstract} +gi_probe_is_interior(RID p_probe) const = 0 : bool
{abstract} +gi_probe_set_compress(RID p_probe, bool p_enable) = 0 : void
{abstract} +gi_probe_is_compressed(RID p_probe) const = 0 : bool
{abstract} +lightmap_capture_create() = 0 : RID
{abstract} +lightmap_capture_set_bounds(RID p_capture, const AABB & p_bounds) = 0 : void
{abstract} +lightmap_capture_get_bounds(RID p_capture) const = 0 : AABB
{abstract} +lightmap_capture_set_octree(RID p_capture, const PoolVector<uint8_t> & p_octree) = 0 : void
{abstract} +lightmap_capture_set_octree_cell_transform(RID p_capture, const Transform & p_xform) = 0 : void
{abstract} +lightmap_capture_get_octree_cell_transform(RID p_capture) const = 0 : Transform
{abstract} +lightmap_capture_set_octree_cell_subdiv(RID p_capture, int p_subdiv) = 0 : void
{abstract} +lightmap_capture_get_octree_cell_subdiv(RID p_capture) const = 0 : int
{abstract} +lightmap_capture_get_octree(RID p_capture) const = 0 : PoolVector<uint8_t>
{abstract} +lightmap_capture_set_energy(RID p_capture, float p_energy) = 0 : void
{abstract} +lightmap_capture_get_energy(RID p_capture) const = 0 : float
{abstract} +lightmap_capture_set_interior(RID p_capture, bool p_interior) = 0 : void
{abstract} +lightmap_capture_is_interior(RID p_capture) const = 0 : bool
{abstract} +particles_create() = 0 : RID
{abstract} +particles_set_emitting(RID p_particles, bool p_emitting) = 0 : void
{abstract} +particles_get_emitting(RID p_particles) = 0 : bool
{abstract} +particles_set_amount(RID p_particles, int p_amount) = 0 : void
{abstract} +particles_set_lifetime(RID p_particles, float p_lifetime) = 0 : void
{abstract} +particles_set_one_shot(RID p_particles, bool p_one_shot) = 0 : void
{abstract} +particles_set_pre_process_time(RID p_particles, float p_time) = 0 : void
{abstract} +particles_set_explosiveness_ratio(RID p_particles, float p_ratio) = 0 : void
{abstract} +particles_set_randomness_ratio(RID p_particles, float p_ratio) = 0 : void
{abstract} +particles_set_custom_aabb(RID p_particles, const AABB & p_aabb) = 0 : void
{abstract} +particles_set_speed_scale(RID p_particles, float p_scale) = 0 : void
{abstract} +particles_set_use_local_coordinates(RID p_particles, bool p_enable) = 0 : void
{abstract} +particles_set_process_material(RID p_particles, RID p_material) = 0 : void
{abstract} +particles_set_fixed_fps(RID p_particles, int p_fps) = 0 : void
{abstract} +particles_set_fractional_delta(RID p_particles, bool p_enable) = 0 : void
{abstract} +particles_is_inactive(RID p_particles) = 0 : bool
{abstract} +particles_request_process(RID p_particles) = 0 : void
{abstract} +particles_restart(RID p_particles) = 0 : void
{abstract} +particles_set_draw_order(RID p_particles, VisualServer::ParticlesDrawOrder p_order) = 0 : void
{abstract} +particles_set_draw_passes(RID p_particles, int p_count) = 0 : void
{abstract} +particles_set_draw_pass_mesh(RID p_particles, int p_pass, RID p_mesh) = 0 : void
{abstract} +particles_get_current_aabb(RID p_particles) = 0 : AABB
{abstract} +particles_set_emission_transform(RID p_particles, const Transform & p_transform) = 0 : void
{abstract} +camera_create() = 0 : RID
{abstract} +camera_set_perspective(RID p_camera, float p_fovy_degrees, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_orthogonal(RID p_camera, float p_size, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_frustum(RID p_camera, float p_size, Vector2 p_offset, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_transform(RID p_camera, const Transform & p_transform) = 0 : void
{abstract} +camera_set_cull_mask(RID p_camera, uint32_t p_layers) = 0 : void
{abstract} +camera_set_environment(RID p_camera, RID p_env) = 0 : void
{abstract} +camera_set_use_vertical_aspect(RID p_camera, bool p_enable) = 0 : void
{abstract} +viewport_create() = 0 : RID
{abstract} +viewport_set_use_arvr(RID p_viewport, bool p_use_arvr) = 0 : void
{abstract} +viewport_set_size(RID p_viewport, int p_width, int p_height) = 0 : void
{abstract} +viewport_set_active(RID p_viewport, bool p_active) = 0 : void
{abstract} +viewport_set_parent_viewport(RID p_viewport, RID p_parent_viewport) = 0 : void
{abstract} +viewport_attach_to_screen(RID p_viewport, const Rect2 & p_rect = Rect2(), int p_screen = 0) = 0 : void
{abstract} +viewport_set_render_direct_to_screen(RID p_viewport, bool p_enable) = 0 : void
{abstract} +viewport_detach(RID p_viewport) = 0 : void
{abstract} +viewport_set_update_mode(RID p_viewport, VisualServer::ViewportUpdateMode p_mode) = 0 : void
{abstract} +viewport_set_vflip(RID p_viewport, bool p_enable) = 0 : void
{abstract} +viewport_set_clear_mode(RID p_viewport, VisualServer::ViewportClearMode p_clear_mode) = 0 : void
{abstract} +viewport_get_texture(RID p_viewport) const = 0 : RID
{abstract} +viewport_set_hide_scenario(RID p_viewport, bool p_hide) = 0 : void
{abstract} +viewport_set_hide_canvas(RID p_viewport, bool p_hide) = 0 : void
{abstract} +viewport_set_disable_environment(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_set_disable_3d(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_set_keep_3d_linear(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_attach_camera(RID p_viewport, RID p_camera) = 0 : void
{abstract} +viewport_set_scenario(RID p_viewport, RID p_scenario) = 0 : void
{abstract} +viewport_attach_canvas(RID p_viewport, RID p_canvas) = 0 : void
{abstract} +viewport_remove_canvas(RID p_viewport, RID p_canvas) = 0 : void
{abstract} +viewport_set_canvas_transform(RID p_viewport, RID p_canvas, const Transform2D & p_offset) = 0 : void
{abstract} +viewport_set_transparent_background(RID p_viewport, bool p_enabled) = 0 : void
{abstract} +viewport_set_global_canvas_transform(RID p_viewport, const Transform2D & p_transform) = 0 : void
{abstract} +viewport_set_canvas_stacking(RID p_viewport, RID p_canvas, int p_layer, int p_sublayer) = 0 : void
{abstract} +viewport_set_shadow_atlas_size(RID p_viewport, int p_size) = 0 : void
{abstract} +viewport_set_shadow_atlas_quadrant_subdivision(RID p_viewport, int p_quadrant, int p_subdiv) = 0 : void
{abstract} +viewport_set_msaa(RID p_viewport, VisualServer::ViewportMSAA p_msaa) = 0 : void
{abstract} +viewport_set_use_fxaa(RID p_viewport, bool p_fxaa) = 0 : void
{abstract} +viewport_set_use_debanding(RID p_viewport, bool p_debanding) = 0 : void
{abstract} +viewport_set_hdr(RID p_viewport, bool p_enabled) = 0 : void
{abstract} +viewport_set_usage(RID p_viewport, VisualServer::ViewportUsage p_usage) = 0 : void
{abstract} +viewport_get_render_info(RID p_viewport, VisualServer::ViewportRenderInfo p_info) = 0 : int
{abstract} +viewport_set_debug_draw(RID p_viewport, VisualServer::ViewportDebugDraw p_draw) = 0 : void
{abstract} +environment_create() = 0 : RID
{abstract} +environment_set_background(RID p_env, VisualServer::EnvironmentBG p_bg) = 0 : void
{abstract} +environment_set_sky(RID p_env, RID p_sky) = 0 : void
{abstract} +environment_set_sky_custom_fov(RID p_env, float p_scale) = 0 : void
{abstract} +environment_set_sky_orientation(RID p_env, const Basis & p_orientation) = 0 : void
{abstract} +environment_set_bg_color(RID p_env, const Color & p_color) = 0 : void
{abstract} +environment_set_bg_energy(RID p_env, float p_energy) = 0 : void
{abstract} +environment_set_canvas_max_layer(RID p_env, int p_max_layer) = 0 : void
{abstract} +environment_set_ambient_light(RID p_env, const Color & p_color, float p_energy = 1.0, float p_sky_contribution = 0.0) = 0 : void
{abstract} +environment_set_camera_feed_id(RID p_env, int p_camera_feed_id) = 0 : void
{abstract} +environment_set_dof_blur_near(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void
{abstract} +environment_set_dof_blur_far(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void
{abstract} +environment_set_glow(RID p_env, bool p_enable, int p_level_flags, float p_intensity, float p_strength, float p_bloom_threshold, VisualServer::EnvironmentGlowBlendMode p_blend_mode, float p_hdr_bleed_threshold, float p_hdr_bleed_scale, float p_hdr_luminance_cap, bool p_bicubic_upscale) = 0 : void
{abstract} +environment_set_tonemap(RID p_env, VisualServer::EnvironmentToneMapper p_tone_mapper, float p_exposure, float p_white, bool p_auto_exposure, float p_min_luminance, float p_max_luminance, float p_auto_exp_speed, float p_auto_exp_grey) = 0 : void
{abstract} +environment_set_adjustment(RID p_env, bool p_enable, float p_brightness, float p_contrast, float p_saturation, RID p_ramp) = 0 : void
{abstract} +environment_set_ssr(RID p_env, bool p_enable, int p_max_steps, float p_fade_in, float p_fade_out, float p_depth_tolerance, bool p_roughness) = 0 : void
{abstract} +environment_set_ssao(RID p_env, bool p_enable, float p_radius, float p_intensity, float p_radius2, float p_intensity2, float p_bias, float p_light_affect, float p_ao_channel_affect, const Color & p_color, VisualServer::EnvironmentSSAOQuality p_quality, VisualServer::EnvironmentSSAOBlur p_blur, float p_bilateral_sharpness) = 0 : void
{abstract} +environment_set_fog(RID p_env, bool p_enable, const Color & p_color, const Color & p_sun_color, float p_sun_amount) = 0 : void
{abstract} +environment_set_fog_depth(RID p_env, bool p_enable, float p_depth_begin, float p_depth_end, float p_depth_curve, bool p_transmit, float p_transmit_curve) = 0 : void
{abstract} +environment_set_fog_height(RID p_env, bool p_enable, float p_min_height, float p_max_height, float p_height_curve) = 0 : void
{abstract} +scenario_create() = 0 : RID
{abstract} +scenario_set_debug(RID p_scenario, VisualServer::ScenarioDebugMode p_debug_mode) = 0 : void
{abstract} +scenario_set_environment(RID p_scenario, RID p_environment) = 0 : void
{abstract} +scenario_set_reflection_atlas_size(RID p_scenario, int p_size, int p_subdiv) = 0 : void
{abstract} +scenario_set_fallback_environment(RID p_scenario, RID p_environment) = 0 : void
+instance_create2(RID p_base, RID p_scenario) : RID
{abstract} +instance_create() = 0 : RID
{abstract} +instance_set_base(RID p_instance, RID p_base) = 0 : void
{abstract} +instance_set_scenario(RID p_instance, RID p_scenario) = 0 : void
{abstract} +instance_set_layer_mask(RID p_instance, uint32_t p_mask) = 0 : void
{abstract} +instance_set_transform(RID p_instance, const Transform & p_transform) = 0 : void
{abstract} +instance_attach_object_instance_id(RID p_instance, ObjectID p_id) = 0 : void
{abstract} +instance_set_blend_shape_weight(RID p_instance, int p_shape, float p_weight) = 0 : void
{abstract} +instance_set_surface_material(RID p_instance, int p_surface, RID p_material) = 0 : void
{abstract} +instance_set_visible(RID p_instance, bool p_visible) = 0 : void
{abstract} +instance_set_use_lightmap(RID p_instance, RID p_lightmap_instance, RID p_lightmap, int p_lightmap_slice, const Rect2 & p_lightmap_uv_rect) = 0 : void
{abstract} +instance_set_custom_aabb(RID p_instance, AABB aabb) = 0 : void
{abstract} +instance_attach_skeleton(RID p_instance, RID p_skeleton) = 0 : void
{abstract} +instance_set_exterior(RID p_instance, bool p_enabled) = 0 : void
{abstract} +instance_set_extra_visibility_margin(RID p_instance, real_t p_margin) = 0 : void
{abstract} +instances_cull_aabb(const AABB & p_aabb, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
{abstract} +instances_cull_ray(const Vector3 & p_from, const Vector3 & p_to, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
{abstract} +instances_cull_convex(const Vector<Plane> & p_convex, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
+_instances_cull_aabb_bind(const AABB & p_aabb, RID p_scenario = = RID()) const : Array
+_instances_cull_ray_bind(const Vector3 & p_from, const Vector3 & p_to, RID p_scenario = = RID()) const : Array
+_instances_cull_convex_bind(const Array & p_convex, RID p_scenario = = RID()) const : Array
{abstract} +instance_geometry_set_flag(RID p_instance, VisualServer::InstanceFlags p_flags, bool p_enabled) = 0 : void
{abstract} +instance_geometry_set_cast_shadows_setting(RID p_instance, VisualServer::ShadowCastingSetting p_shadow_casting_setting) = 0 : void
{abstract} +instance_geometry_set_material_override(RID p_instance, RID p_material) = 0 : void
{abstract} +instance_geometry_set_draw_range(RID p_instance, float p_min, float p_max, float p_min_margin, float p_max_margin) = 0 : void
{abstract} +instance_geometry_set_as_instance_lod(RID p_instance, RID p_as_lod_of_instance) = 0 : void
{abstract} +canvas_create() = 0 : RID
{abstract} +canvas_set_item_mirroring(RID p_canvas, RID p_item, const Point2 & p_mirroring) = 0 : void
{abstract} +canvas_set_modulate(RID p_canvas, const Color & p_color) = 0 : void
{abstract} +canvas_set_parent(RID p_canvas, RID p_parent, float p_scale) = 0 : void
{abstract} +canvas_set_disable_scale(bool p_disable) = 0 : void
{abstract} +canvas_item_create() = 0 : RID
{abstract} +canvas_item_set_parent(RID p_item, RID p_parent) = 0 : void
{abstract} +canvas_item_set_visible(RID p_item, bool p_visible) = 0 : void
{abstract} +canvas_item_set_light_mask(RID p_item, int p_mask) = 0 : void
{abstract} +canvas_item_set_update_when_visible(RID p_item, bool p_update) = 0 : void
{abstract} +canvas_item_set_transform(RID p_item, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_item_set_clip(RID p_item, bool p_clip) = 0 : void
{abstract} +canvas_item_set_distance_field_mode(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_custom_rect(RID p_item, bool p_custom_rect, const Rect2 & p_rect = Rect2()) = 0 : void
{abstract} +canvas_item_set_modulate(RID p_item, const Color & p_color) = 0 : void
{abstract} +canvas_item_set_self_modulate(RID p_item, const Color & p_color) = 0 : void
{abstract} +canvas_item_set_draw_behind_parent(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_add_line(RID p_item, const Point2 & p_from, const Point2 & p_to, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_polyline(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_multiline(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_rect(RID p_item, const Rect2 & p_rect, const Color & p_color) = 0 : void
{abstract} +canvas_item_add_circle(RID p_item, const Point2 & p_pos, float p_radius, const Color & p_color) = 0 : void
{abstract} +canvas_item_add_texture_rect(RID p_item, const Rect2 & p_rect, RID p_texture, bool p_tile = false, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_texture_rect_region(RID p_item, const Rect2 & p_rect, RID p_texture, const Rect2 & p_src_rect, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID(), bool p_clip_uv = false) = 0 : void
{abstract} +canvas_item_add_nine_patch(RID p_item, const Rect2 & p_rect, const Rect2 & p_source, RID p_texture, const Vector2 & p_topleft, const Vector2 & p_bottomright, VisualServer::NinePatchAxisMode p_x_axis_mode = NINE_PATCH_STRETCH, VisualServer::NinePatchAxisMode p_y_axis_mode = NINE_PATCH_STRETCH, bool p_draw_center = true, const Color & p_modulate = Color(1, 1, 1), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_primitive(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs, RID p_texture, float p_width = 1.0, RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_polygon(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), RID p_texture = = RID(), RID p_normal_map = = RID(), bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_triangle_array(RID p_item, const Vector<int> & p_indices, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), const Vector<int> & p_bones = Vector<int>(), const Vector<float> & p_weights = Vector<float>(), RID p_texture = = RID(), int p_count = -1, RID p_normal_map = = RID(), bool p_antialiased = false, bool p_antialiasing_use_indices = false) = 0 : void
{abstract} +canvas_item_add_mesh(RID p_item, const RID & p_mesh, const Transform2D & p_transform = Transform2D(), const Color & p_modulate = Color(1, 1, 1), RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_multimesh(RID p_item, RID p_mesh, RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_particles(RID p_item, RID p_particles, RID p_texture, RID p_normal_map) = 0 : void
{abstract} +canvas_item_add_set_transform(RID p_item, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_item_add_clip_ignore(RID p_item, bool p_ignore) = 0 : void
{abstract} +canvas_item_set_sort_children_by_y(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_z_index(RID p_item, int p_z) = 0 : void
{abstract} +canvas_item_set_z_as_relative_to_parent(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_copy_to_backbuffer(RID p_item, bool p_enable, const Rect2 & p_rect) = 0 : void
{abstract} +canvas_item_attach_skeleton(RID p_item, RID p_skeleton) = 0 : void
{abstract} +canvas_item_clear(RID p_item) = 0 : void
{abstract} +canvas_item_set_draw_index(RID p_item, int p_index) = 0 : void
{abstract} +canvas_item_set_material(RID p_item, RID p_material) = 0 : void
{abstract} +canvas_item_set_use_parent_material(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_light_create() = 0 : RID
{abstract} +canvas_light_attach_to_canvas(RID p_light, RID p_canvas) = 0 : void
{abstract} +canvas_light_set_enabled(RID p_light, bool p_enabled) = 0 : void
{abstract} +canvas_light_set_scale(RID p_light, float p_scale) = 0 : void
{abstract} +canvas_light_set_transform(RID p_light, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_light_set_texture(RID p_light, RID p_texture) = 0 : void
{abstract} +canvas_light_set_texture_offset(RID p_light, const Vector2 & p_offset) = 0 : void
{abstract} +canvas_light_set_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +canvas_light_set_height(RID p_light, float p_height) = 0 : void
{abstract} +canvas_light_set_energy(RID p_light, float p_energy) = 0 : void
{abstract} +canvas_light_set_z_range(RID p_light, int p_min_z, int p_max_z) = 0 : void
{abstract} +canvas_light_set_layer_range(RID p_light, int p_min_layer, int p_max_layer) = 0 : void
{abstract} +canvas_light_set_item_cull_mask(RID p_light, int p_mask) = 0 : void
{abstract} +canvas_light_set_item_shadow_cull_mask(RID p_light, int p_mask) = 0 : void
{abstract} +canvas_light_set_mode(RID p_light, VisualServer::CanvasLightMode p_mode) = 0 : void
{abstract} +canvas_light_set_shadow_enabled(RID p_light, bool p_enabled) = 0 : void
{abstract} +canvas_light_set_shadow_buffer_size(RID p_light, int p_size) = 0 : void
{abstract} +canvas_light_set_shadow_gradient_length(RID p_light, float p_length) = 0 : void
{abstract} +canvas_light_set_shadow_filter(RID p_light, VisualServer::CanvasLightShadowFilter p_filter) = 0 : void
{abstract} +canvas_light_set_shadow_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +canvas_light_set_shadow_smooth(RID p_light, float p_smooth) = 0 : void
{abstract} +canvas_light_occluder_create() = 0 : RID
{abstract} +canvas_light_occluder_attach_to_canvas(RID p_occluder, RID p_canvas) = 0 : void
{abstract} +canvas_light_occluder_set_enabled(RID p_occluder, bool p_enabled) = 0 : void
{abstract} +canvas_light_occluder_set_polygon(RID p_occluder, RID p_polygon) = 0 : void
{abstract} +canvas_light_occluder_set_transform(RID p_occluder, const Transform2D & p_xform) = 0 : void
{abstract} +canvas_light_occluder_set_light_mask(RID p_occluder, int p_mask) = 0 : void
{abstract} +canvas_occluder_polygon_create() = 0 : RID
{abstract} +canvas_occluder_polygon_set_shape(RID p_occluder_polygon, const PoolVector<Vector2> & p_shape, bool p_closed) = 0 : void
{abstract} +canvas_occluder_polygon_set_shape_as_lines(RID p_occluder_polygon, const PoolVector<Vector2> & p_shape) = 0 : void
{abstract} +canvas_occluder_polygon_set_cull_mode(RID p_occluder_polygon, VisualServer::CanvasOccluderPolygonCullMode p_mode) = 0 : void
{abstract} +black_bars_set_margins(int p_left, int p_top, int p_right, int p_bottom) = 0 : void
{abstract} +black_bars_set_images(RID p_left, RID p_top, RID p_right, RID p_bottom) = 0 : void
{abstract} +free(RID p_rid) = 0 : void
{abstract} +request_frame_drawn_callback(Object * p_where, const StringName & p_method, const Variant & p_userdata) = 0 : void
{abstract} +draw(bool p_swap_buffers = true, double frame_step = 0.0) = 0 : void
{abstract} +sync() = 0 : void
{abstract} +has_changed() const = 0 : bool
{abstract} +init() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +get_render_info(VisualServer::RenderInfo p_info) = 0 : uint64_t
{abstract} +get_video_adapter_name() const = 0 : String
{abstract} +get_video_adapter_vendor() const = 0 : String
{abstract} +get_test_cube() = 0 : RID
+get_test_texture() : RID
+get_white_texture() : RID
+make_sphere_mesh(int p_lats, int p_lons, float p_radius) : RID
+mesh_add_surface_from_mesh_data(RID p_mesh, const Geometry::MeshData & p_mesh_data) : void
+mesh_add_surface_from_planes(RID p_mesh, const PoolVector<Plane> & p_planes) : void
{abstract} +set_boot_image(const Ref<Image> & p_image, const Color & p_color, bool p_scale, bool p_use_filter = true) = 0 : void
{abstract} +set_default_clear_color(const Color & p_color) = 0 : void
{abstract} +set_shader_time_scale(float p_scale) = 0 : void
{abstract} +has_feature(VisualServer::Features p_feature) const = 0 : bool
{abstract} +has_os_feature(const String & p_feature) const = 0 : bool
{abstract} +set_debug_generate_wireframes(bool p_generate) = 0 : void
{abstract} +call_set_use_vsync(bool p_enable) = 0 : void
{abstract} +is_low_end() const = 0 : bool
+is_render_loop_enabled() const : bool
+set_render_loop_enabled(bool p_enabled) : void
+VisualServer() : void
+~VisualServer() : void
+NO_INDEX_ARRAY : enum
+ARRAY_WEIGHTS_SIZE : enum
+CANVAS_ITEM_Z_MIN : enum
+CANVAS_ITEM_Z_MAX : enum
+MAX_GLOW_LEVELS : enum
+MAX_CURSORS : enum
+MATERIAL_RENDER_PRIORITY_MIN : enum
+MATERIAL_RENDER_PRIORITY_MAX : enum
}
abstract "PhysicsDirectBodyState" as C_0001559146041463814963
abstract C_0001559146041463814963 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39{PhysicsDirectBodyState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +get_total_gravity() const = 0 : Vector3
{abstract} +get_total_angular_damp() const = 0 : float
{abstract} +get_total_linear_damp() const = 0 : float
{abstract} +get_center_of_mass() const = 0 : Vector3
{abstract} +get_principal_inertia_axes() const = 0 : Basis
{abstract} +get_inverse_mass() const = 0 : float
{abstract} +get_inverse_inertia() const = 0 : Vector3
{abstract} +get_inverse_inertia_tensor() const = 0 : Basis
{abstract} +set_linear_velocity(const Vector3 & p_velocity) = 0 : void
{abstract} +get_linear_velocity() const = 0 : Vector3
{abstract} +set_angular_velocity(const Vector3 & p_velocity) = 0 : void
{abstract} +get_angular_velocity() const = 0 : Vector3
{abstract} +set_transform(const Transform & p_transform) = 0 : void
{abstract} +get_transform() const = 0 : Transform
{abstract} +add_central_force(const Vector3 & p_force) = 0 : void
{abstract} +add_force(const Vector3 & p_force, const Vector3 & p_pos) = 0 : void
{abstract} +add_torque(const Vector3 & p_torque) = 0 : void
{abstract} +apply_central_impulse(const Vector3 & p_j) = 0 : void
{abstract} +apply_impulse(const Vector3 & p_pos, const Vector3 & p_j) = 0 : void
{abstract} +apply_torque_impulse(const Vector3 & p_j) = 0 : void
{abstract} +set_sleep_state(bool p_enable) = 0 : void
{abstract} +is_sleeping() const = 0 : bool
{abstract} +get_contact_count() const = 0 : int
{abstract} +get_contact_local_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_local_normal(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_impulse(int p_contact_idx) const = 0 : float
{abstract} +get_contact_local_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider(int p_contact_idx) const = 0 : RID
{abstract} +get_contact_collider_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID
+get_contact_collider_object(int p_contact_idx) const : Object *
{abstract} +get_contact_collider_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_step() const = 0 : real_t
+integrate_forces() : void
{abstract} +get_space_state() = 0 : PhysicsDirectSpaceState *
+PhysicsDirectBodyState() : void
}
abstract "PhysicsDirectSpaceState" as C_0000503002593685351124
abstract C_0000503002593685351124 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143{PhysicsDirectSpaceState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +intersect_point(const Vector3 & p_point, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +intersect_ray(const Vector3 & p_from, const Vector3 & p_to, PhysicsDirectSpaceState::RayResult & r_result, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_ray = false) = 0 : bool
{abstract} +intersect_shape(const RID & p_shape, const Transform & p_xform, float p_margin, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +cast_motion(const RID & p_shape, const Transform & p_xform, const Vector3 & p_motion, float p_margin, float & p_closest_safe, float & p_closest_unsafe, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, PhysicsDirectSpaceState::ShapeRestInfo * r_info = __null) = 0 : bool
{abstract} +collide_shape(RID p_shape, const Transform & p_shape_xform, float p_margin, Vector3 * r_results, int p_result_max, int & r_result_count, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +rest_info(RID p_shape, const Transform & p_shape_xform, float p_margin, PhysicsDirectSpaceState::ShapeRestInfo * r_info, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +get_closest_point_to_object_volume(RID p_object, const Vector3 p_point) const = 0 : Vector3
+PhysicsDirectSpaceState() : void
}
class "PhysicsDirectSpaceState::ShapeResult" as C_0000493041171271776846
class C_0000493041171271776846 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158{PhysicsDirectSpaceState##ShapeResult}]] {
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163{shape}]]]
}
class "PhysicsDirectSpaceState::RayResult" as C_0000461609734144368587
class C_0000461609734144368587 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168{PhysicsDirectSpaceState##RayResult}]] {
+position : Vector3 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170{position}]]]
+normal : Vector3 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171{normal}]]]
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175{shape}]]]
}
abstract "PhysicsServer" as C_0001034902024938599899
abstract C_0001034902024938599899 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224{PhysicsServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : PhysicsServer *
{abstract} +shape_create(PhysicsServer::ShapeType p_shape) = 0 : RID
{abstract} +shape_set_data(RID p_shape, const Variant & p_data) = 0 : void
{abstract} +shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void
{abstract} +shape_get_type(RID p_shape) const = 0 : PhysicsServer::ShapeType
{abstract} +shape_get_data(RID p_shape) const = 0 : Variant
{abstract} +shape_set_margin(RID p_shape, real_t p_margin) = 0 : void
{abstract} +shape_get_margin(RID p_shape) const = 0 : real_t
{abstract} +shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t
{abstract} +space_create() = 0 : RID
{abstract} +space_set_active(RID p_space, bool p_active) = 0 : void
{abstract} +space_is_active(RID p_space) const = 0 : bool
{abstract} +space_set_param(RID p_space, PhysicsServer::SpaceParameter p_param, real_t p_value) = 0 : void
{abstract} +space_get_param(RID p_space, PhysicsServer::SpaceParameter p_param) const = 0 : real_t
{abstract} +space_get_direct_state(RID p_space) = 0 : PhysicsDirectSpaceState *
{abstract} +space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void
{abstract} +space_get_contacts(RID p_space) const = 0 : Vector<Vector3>
{abstract} +space_get_contact_count(RID p_space) const = 0 : int
{abstract} +area_create() = 0 : RID
{abstract} +area_set_space(RID p_area, RID p_space) = 0 : void
{abstract} +area_get_space(RID p_area) const = 0 : RID
{abstract} +area_set_space_override_mode(RID p_area, PhysicsServer::AreaSpaceOverrideMode p_mode) = 0 : void
{abstract} +area_get_space_override_mode(RID p_area) const = 0 : PhysicsServer::AreaSpaceOverrideMode
{abstract} +area_add_shape(RID p_area, RID p_shape, const Transform & p_transform = Transform(), bool p_disabled = false) = 0 : void
{abstract} +area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +area_set_shape_transform(RID p_area, int p_shape_idx, const Transform & p_transform) = 0 : void
{abstract} +area_get_shape_count(RID p_area) const = 0 : int
{abstract} +area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID
{abstract} +area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform
{abstract} +area_remove_shape(RID p_area, int p_shape_idx) = 0 : void
{abstract} +area_clear_shapes(RID p_area) = 0 : void
{abstract} +area_set_shape_disabled(RID p_area, int p_shape_idx, bool p_disabled) = 0 : void
{abstract} +area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_object_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_set_param(RID p_area, PhysicsServer::AreaParameter p_param, const Variant & p_value) = 0 : void
{abstract} +area_set_transform(RID p_area, const Transform & p_transform) = 0 : void
{abstract} +area_get_param(RID p_parea, PhysicsServer::AreaParameter p_param) const = 0 : Variant
{abstract} +area_get_transform(RID p_area) const = 0 : Transform
{abstract} +area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void
{abstract} +area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void
{abstract} +area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void
{abstract} +area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_ray_pickable(RID p_area, bool p_enable) = 0 : void
{abstract} +area_is_ray_pickable(RID p_area) const = 0 : bool
{abstract} +body_create(PhysicsServer::BodyMode p_mode = BODY_MODE_RIGID, bool p_init_sleeping = false) = 0 : RID
{abstract} +body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +body_get_space(RID p_body) const = 0 : RID
{abstract} +body_set_mode(RID p_body, PhysicsServer::BodyMode p_mode) = 0 : void
{abstract} +body_get_mode(RID p_body) const = 0 : PhysicsServer::BodyMode
{abstract} +body_add_shape(RID p_body, RID p_shape, const Transform & p_transform = Transform(), bool p_disabled = false) = 0 : void
{abstract} +body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +body_set_shape_transform(RID p_body, int p_shape_idx, const Transform & p_transform) = 0 : void
{abstract} +body_get_shape_count(RID p_body) const = 0 : int
{abstract} +body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID
{abstract} +body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform
{abstract} +body_remove_shape(RID p_body, int p_shape_idx) = 0 : void
{abstract} +body_clear_shapes(RID p_body) = 0 : void
{abstract} +body_set_shape_disabled(RID p_body, int p_shape_idx, bool p_disabled) = 0 : void
{abstract} +body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_object_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_set_enable_continuous_collision_detection(RID p_body, bool p_enable) = 0 : void
{abstract} +body_is_continuous_collision_detection_enabled(RID p_body) const = 0 : bool
{abstract} +body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +body_set_user_flags(RID p_body, uint32_t p_flags) = 0 : void
{abstract} +body_get_user_flags(RID p_body) const = 0 : uint32_t
{abstract} +body_set_param(RID p_body, PhysicsServer::BodyParameter p_param, float p_value) = 0 : void
{abstract} +body_get_param(RID p_body, PhysicsServer::BodyParameter p_param) const = 0 : float
{abstract} +body_set_kinematic_safe_margin(RID p_body, real_t p_margin) = 0 : void
{abstract} +body_get_kinematic_safe_margin(RID p_body) const = 0 : real_t
{abstract} +body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant
{abstract} +body_set_applied_force(RID p_body, const Vector3 & p_force) = 0 : void
{abstract} +body_get_applied_force(RID p_body) const = 0 : Vector3
{abstract} +body_set_applied_torque(RID p_body, const Vector3 & p_torque) = 0 : void
{abstract} +body_get_applied_torque(RID p_body) const = 0 : Vector3
{abstract} +body_add_central_force(RID p_body, const Vector3 & p_force) = 0 : void
{abstract} +body_add_force(RID p_body, const Vector3 & p_force, const Vector3 & p_pos) = 0 : void
{abstract} +body_add_torque(RID p_body, const Vector3 & p_torque) = 0 : void
{abstract} +body_apply_central_impulse(RID p_body, const Vector3 & p_impulse) = 0 : void
{abstract} +body_apply_impulse(RID p_body, const Vector3 & p_pos, const Vector3 & p_impulse) = 0 : void
{abstract} +body_apply_torque_impulse(RID p_body, const Vector3 & p_impulse) = 0 : void
{abstract} +body_set_axis_velocity(RID p_body, const Vector3 & p_axis_velocity) = 0 : void
{abstract} +body_set_axis_lock(RID p_body, PhysicsServer::BodyAxis p_axis, bool p_lock) = 0 : void
{abstract} +body_is_axis_locked(RID p_body, PhysicsServer::BodyAxis p_axis) const = 0 : bool
{abstract} +body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void
{abstract} +body_get_max_contacts_reported(RID p_body) const = 0 : int
{abstract} +body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void
{abstract} +body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float
{abstract} +body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void
{abstract} +body_is_omitting_force_integration(RID p_body) const = 0 : bool
{abstract} +body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName & p_method, const Variant & p_udata = Variant()) = 0 : void
{abstract} +body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void
{abstract} +body_is_ray_pickable(RID p_body) const = 0 : bool
{abstract} +body_get_direct_state(RID p_body) = 0 : PhysicsDirectBodyState *
{abstract} +body_test_motion(RID p_body, const Transform & p_from, const Vector3 & p_motion, bool p_infinite_inertia, PhysicsServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool
{abstract} +body_test_ray_separation(RID p_body, const Transform & p_transform, bool p_infinite_inertia, Vector3 & r_recover_motion, PhysicsServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int
{abstract} +soft_body_create(bool p_init_sleeping = false) = 0 : RID
{abstract} +soft_body_update_visual_server(RID p_body, class SoftBodyVisualServerHandler * p_visual_server_handler) = 0 : void
{abstract} +soft_body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +soft_body_get_space(RID p_body) const = 0 : RID
{abstract} +soft_body_set_mesh(RID p_body, const REF & p_mesh) = 0 : void
{abstract} +soft_body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +soft_body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +soft_body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +soft_body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +soft_body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +soft_body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +soft_body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +soft_body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +soft_body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant
{abstract} +soft_body_set_transform(RID p_body, const Transform & p_transform) = 0 : void
{abstract} +soft_body_get_vertex_position(RID p_body, int vertex_index) const = 0 : Vector3
{abstract} +soft_body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void
{abstract} +soft_body_is_ray_pickable(RID p_body) const = 0 : bool
{abstract} +soft_body_set_simulation_precision(RID p_body, int p_simulation_precision) = 0 : void
{abstract} +soft_body_get_simulation_precision(RID p_body) = 0 : int
{abstract} +soft_body_set_total_mass(RID p_body, real_t p_total_mass) = 0 : void
{abstract} +soft_body_get_total_mass(RID p_body) = 0 : real_t
{abstract} +soft_body_set_linear_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_linear_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_areaAngular_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_areaAngular_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_volume_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_volume_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_pressure_coefficient(RID p_body, real_t p_pressure_coefficient) = 0 : void
{abstract} +soft_body_get_pressure_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_pose_matching_coefficient(RID p_body, real_t p_pose_matching_coefficient) = 0 : void
{abstract} +soft_body_get_pose_matching_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_damping_coefficient(RID p_body, real_t p_damping_coefficient) = 0 : void
{abstract} +soft_body_get_damping_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_drag_coefficient(RID p_body, real_t p_drag_coefficient) = 0 : void
{abstract} +soft_body_get_drag_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_move_point(RID p_body, int p_point_index, const Vector3 & p_global_position) = 0 : void
{abstract} +soft_body_get_point_global_position(RID p_body, int p_point_index) = 0 : Vector3
{abstract} +soft_body_get_point_offset(RID p_body, int p_point_index) const = 0 : Vector3
{abstract} +soft_body_remove_all_pinned_points(RID p_body) = 0 : void
{abstract} +soft_body_pin_point(RID p_body, int p_point_index, bool p_pin) = 0 : void
{abstract} +soft_body_is_point_pinned(RID p_body, int p_point_index) = 0 : bool
{abstract} +joint_get_type(RID p_joint) const = 0 : PhysicsServer::JointType
{abstract} +joint_set_solver_priority(RID p_joint, int p_priority) = 0 : void
{abstract} +joint_get_solver_priority(RID p_joint) const = 0 : int
{abstract} +joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void
{abstract} +joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool
{abstract} +joint_create_pin(RID p_body_A, const Vector3 & p_local_A, RID p_body_B, const Vector3 & p_local_B) = 0 : RID
{abstract} +pin_joint_set_param(RID p_joint, PhysicsServer::PinJointParam p_param, float p_value) = 0 : void
{abstract} +pin_joint_get_param(RID p_joint, PhysicsServer::PinJointParam p_param) const = 0 : float
{abstract} +pin_joint_set_local_a(RID p_joint, const Vector3 & p_A) = 0 : void
{abstract} +pin_joint_get_local_a(RID p_joint) const = 0 : Vector3
{abstract} +pin_joint_set_local_b(RID p_joint, const Vector3 & p_B) = 0 : void
{abstract} +pin_joint_get_local_b(RID p_joint) const = 0 : Vector3
{abstract} +joint_create_hinge(RID p_body_A, const Transform & p_hinge_A, RID p_body_B, const Transform & p_hinge_B) = 0 : RID
{abstract} +joint_create_hinge_simple(RID p_body_A, const Vector3 & p_pivot_A, const Vector3 & p_axis_A, RID p_body_B, const Vector3 & p_pivot_B, const Vector3 & p_axis_B) = 0 : RID
{abstract} +hinge_joint_set_param(RID p_joint, PhysicsServer::HingeJointParam p_param, float p_value) = 0 : void
{abstract} +hinge_joint_get_param(RID p_joint, PhysicsServer::HingeJointParam p_param) const = 0 : float
{abstract} +hinge_joint_set_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag, bool p_value) = 0 : void
{abstract} +hinge_joint_get_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag) const = 0 : bool
{abstract} +joint_create_slider(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +slider_joint_set_param(RID p_joint, PhysicsServer::SliderJointParam p_param, float p_value) = 0 : void
{abstract} +slider_joint_get_param(RID p_joint, PhysicsServer::SliderJointParam p_param) const = 0 : float
{abstract} +joint_create_cone_twist(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +cone_twist_joint_set_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param, float p_value) = 0 : void
{abstract} +cone_twist_joint_get_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param) const = 0 : float
{abstract} +joint_create_generic_6dof(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +generic_6dof_joint_set_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param, float p_value) = 0 : void
{abstract} +generic_6dof_joint_get_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param) = 0 : float
{abstract} +generic_6dof_joint_set_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag, bool p_enable) = 0 : void
{abstract} +generic_6dof_joint_get_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag) = 0 : bool
{abstract} +free(RID p_rid) = 0 : void
{abstract} +set_active(bool p_active) = 0 : void
{abstract} +init() = 0 : void
{abstract} +step(float p_step) = 0 : void
{abstract} +flush_queries() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +is_flushing_queries() const = 0 : bool
{abstract} +get_process_info(PhysicsServer::ProcessInfo p_info) = 0 : int
+PhysicsServer() : void
+~PhysicsServer() : void
}
abstract "Physics2DDirectBodyState" as C_0002302096389852429221
abstract C_0002302096389852429221 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40{Physics2DDirectBodyState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +get_total_gravity() const = 0 : Vector2
{abstract} +get_total_linear_damp() const = 0 : float
{abstract} +get_total_angular_damp() const = 0 : float
{abstract} +get_inverse_mass() const = 0 : float
{abstract} +get_inverse_inertia() const = 0 : real_t
{abstract} +set_linear_velocity(const Vector2 & p_velocity) = 0 : void
{abstract} +get_linear_velocity() const = 0 : Vector2
{abstract} +set_angular_velocity(real_t p_velocity) = 0 : void
{abstract} +get_angular_velocity() const = 0 : real_t
{abstract} +set_transform(const Transform2D & p_transform) = 0 : void
{abstract} +get_transform() const = 0 : Transform2D
{abstract} +add_central_force(const Vector2 & p_force) = 0 : void
{abstract} +add_force(const Vector2 & p_offset, const Vector2 & p_force) = 0 : void
{abstract} +add_torque(real_t p_torque) = 0 : void
{abstract} +apply_central_impulse(const Vector2 & p_impulse) = 0 : void
{abstract} +apply_torque_impulse(real_t p_torque) = 0 : void
{abstract} +apply_impulse(const Vector2 & p_offset, const Vector2 & p_impulse) = 0 : void
{abstract} +set_sleep_state(bool p_enable) = 0 : void
{abstract} +is_sleeping() const = 0 : bool
{abstract} +get_contact_count() const = 0 : int
{abstract} +get_contact_local_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_local_normal(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_local_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider(int p_contact_idx) const = 0 : RID
{abstract} +get_contact_collider_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID
+get_contact_collider_object(int p_contact_idx) const : Object *
{abstract} +get_contact_collider_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider_shape_metadata(int p_contact_idx) const = 0 : Variant
{abstract} +get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_step() const = 0 : real_t
+integrate_forces() : void
{abstract} +get_space_state() = 0 : Physics2DDirectSpaceState *
+Physics2DDirectBodyState() : void
}
abstract "Physics2DDirectSpaceState" as C_0000236996062289735257
abstract C_0000236996062289735257 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145{Physics2DDirectSpaceState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +intersect_ray(const Vector2 & p_from, const Vector2 & p_to, Physics2DDirectSpaceState::RayResult & r_result, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +intersect_point(const Vector2 & p_point, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int
{abstract} +intersect_point_on_canvas(const Vector2 & p_point, ObjectID p_canvas_instance_id, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int
{abstract} +intersect_shape(const RID & p_shape, const Transform2D & p_xform, const Vector2 & p_motion, float p_margin, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +cast_motion(const RID & p_shape, const Transform2D & p_xform, const Vector2 & p_motion, float p_margin, float & p_closest_safe, float & p_closest_unsafe, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +collide_shape(RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, float p_margin, Vector2 * r_results, int p_result_max, int & r_result_count, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +rest_info(RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, float p_margin, Physics2DDirectSpaceState::ShapeRestInfo * r_info, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
+Physics2DDirectSpaceState() : void
}
class "Physics2DDirectSpaceState::RayResult" as C_0001801355352189289676
class C_0001801355352189289676 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162{Physics2DDirectSpaceState##RayResult}]] {
+position : Vector2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164{position}]]]
+normal : Vector2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165{normal}]]]
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169{shape}]]]
+metadata : Variant [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170{metadata}]]]
}
class "Physics2DDirectSpaceState::ShapeResult" as C_0001771770302499309898
class C_0001771770302499309898 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175{Physics2DDirectSpaceState##ShapeResult}]] {
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180{shape}]]]
+metadata : Variant [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181{metadata}]]]
}
abstract "Physics2DServer" as C_0001561529841391244418
abstract C_0001561529841391244418 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232{Physics2DServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : Physics2DServer *
{abstract} +line_shape_create() = 0 : RID
{abstract} +ray_shape_create() = 0 : RID
{abstract} +segment_shape_create() = 0 : RID
{abstract} +circle_shape_create() = 0 : RID
{abstract} +rectangle_shape_create() = 0 : RID
{abstract} +capsule_shape_create() = 0 : RID
{abstract} +convex_polygon_shape_create() = 0 : RID
{abstract} +concave_polygon_shape_create() = 0 : RID
{abstract} +shape_set_data(RID p_shape, const Variant & p_data) = 0 : void
{abstract} +shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void
{abstract} +shape_get_type(RID p_shape) const = 0 : Physics2DServer::ShapeType
{abstract} +shape_get_data(RID p_shape) const = 0 : Variant
{abstract} +shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t
{abstract} +shape_collide(RID p_shape_A, const Transform2D & p_xform_A, const Vector2 & p_motion_A, RID p_shape_B, const Transform2D & p_xform_B, const Vector2 & p_motion_B, Vector2 * r_results, int p_result_max, int & r_result_count) = 0 : bool
{abstract} +space_create() = 0 : RID
{abstract} +space_set_active(RID p_space, bool p_active) = 0 : void
{abstract} +space_is_active(RID p_space) const = 0 : bool
{abstract} +space_set_param(RID p_space, Physics2DServer::SpaceParameter p_param, real_t p_value) = 0 : void
{abstract} +space_get_param(RID p_space, Physics2DServer::SpaceParameter p_param) const = 0 : real_t
{abstract} +space_get_direct_state(RID p_space) = 0 : Physics2DDirectSpaceState *
{abstract} +space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void
{abstract} +space_get_contacts(RID p_space) const = 0 : Vector<Vector2>
{abstract} +space_get_contact_count(RID p_space) const = 0 : int
{abstract} +area_create() = 0 : RID
{abstract} +area_set_space(RID p_area, RID p_space) = 0 : void
{abstract} +area_get_space(RID p_area) const = 0 : RID
{abstract} +area_set_space_override_mode(RID p_area, Physics2DServer::AreaSpaceOverrideMode p_mode) = 0 : void
{abstract} +area_get_space_override_mode(RID p_area) const = 0 : Physics2DServer::AreaSpaceOverrideMode
{abstract} +area_add_shape(RID p_area, RID p_shape, const Transform2D & p_transform = Transform2D(), bool p_disabled = false) = 0 : void
{abstract} +area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +area_set_shape_transform(RID p_area, int p_shape_idx, const Transform2D & p_transform) = 0 : void
{abstract} +area_get_shape_count(RID p_area) const = 0 : int
{abstract} +area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID
{abstract} +area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform2D
{abstract} +area_remove_shape(RID p_area, int p_shape_idx) = 0 : void
{abstract} +area_clear_shapes(RID p_area) = 0 : void
{abstract} +area_set_shape_disabled(RID p_area, int p_shape, bool p_disabled) = 0 : void
{abstract} +area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_object_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_attach_canvas_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_canvas_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_set_param(RID p_area, Physics2DServer::AreaParameter p_param, const Variant & p_value) = 0 : void
{abstract} +area_set_transform(RID p_area, const Transform2D & p_transform) = 0 : void
{abstract} +area_get_param(RID p_parea, Physics2DServer::AreaParameter p_param) const = 0 : Variant
{abstract} +area_get_transform(RID p_area) const = 0 : Transform2D
{abstract} +area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void
{abstract} +area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void
{abstract} +area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void
{abstract} +area_set_pickable(RID p_area, bool p_pickable) = 0 : void
{abstract} +area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +body_create() = 0 : RID
{abstract} +body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +body_get_space(RID p_body) const = 0 : RID
{abstract} +body_set_mode(RID p_body, Physics2DServer::BodyMode p_mode) = 0 : void
{abstract} +body_get_mode(RID p_body) const = 0 : Physics2DServer::BodyMode
{abstract} +body_add_shape(RID p_body, RID p_shape, const Transform2D & p_transform = Transform2D(), bool p_disabled = false) = 0 : void
{abstract} +body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +body_set_shape_transform(RID p_body, int p_shape_idx, const Transform2D & p_transform) = 0 : void
{abstract} +body_set_shape_metadata(RID p_body, int p_shape_idx, const Variant & p_metadata) = 0 : void
{abstract} +body_get_shape_count(RID p_body) const = 0 : int
{abstract} +body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID
{abstract} +body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform2D
{abstract} +body_get_shape_metadata(RID p_body, int p_shape_idx) const = 0 : Variant
{abstract} +body_set_shape_disabled(RID p_body, int p_shape, bool p_disabled) = 0 : void
{abstract} +body_set_shape_as_one_way_collision(RID p_body, int p_shape, bool p_enabled, float p_margin = 0) = 0 : void
{abstract} +body_remove_shape(RID p_body, int p_shape_idx) = 0 : void
{abstract} +body_clear_shapes(RID p_body) = 0 : void
{abstract} +body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_object_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_attach_canvas_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_canvas_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_set_continuous_collision_detection_mode(RID p_body, Physics2DServer::CCDMode p_mode) = 0 : void
{abstract} +body_get_continuous_collision_detection_mode(RID p_body) const = 0 : Physics2DServer::CCDMode
{abstract} +body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +body_set_param(RID p_body, Physics2DServer::BodyParameter p_param, float p_value) = 0 : void
{abstract} +body_get_param(RID p_body, Physics2DServer::BodyParameter p_param) const = 0 : float
{abstract} +body_set_state(RID p_body, Physics2DServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +body_get_state(RID p_body, Physics2DServer::BodyState p_state) const = 0 : Variant
{abstract} +body_set_applied_force(RID p_body, const Vector2 & p_force) = 0 : void
{abstract} +body_get_applied_force(RID p_body) const = 0 : Vector2
{abstract} +body_set_applied_torque(RID p_body, float p_torque) = 0 : void
{abstract} +body_get_applied_torque(RID p_body) const = 0 : float
{abstract} +body_add_central_force(RID p_body, const Vector2 & p_force) = 0 : void
{abstract} +body_add_force(RID p_body, const Vector2 & p_offset, const Vector2 & p_force) = 0 : void
{abstract} +body_add_torque(RID p_body, float p_torque) = 0 : void
{abstract} +body_apply_central_impulse(RID p_body, const Vector2 & p_impulse) = 0 : void
{abstract} +body_apply_torque_impulse(RID p_body, float p_torque) = 0 : void
{abstract} +body_apply_impulse(RID p_body, const Vector2 & p_offset, const Vector2 & p_impulse) = 0 : void
{abstract} +body_set_axis_velocity(RID p_body, const Vector2 & p_axis_velocity) = 0 : void
{abstract} +body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void
{abstract} +body_get_max_contacts_reported(RID p_body) const = 0 : int
{abstract} +body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void
{abstract} +body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float
{abstract} +body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void
{abstract} +body_is_omitting_force_integration(RID p_body) const = 0 : bool
{abstract} +body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName & p_method, const Variant & p_udata = Variant()) = 0 : void
{abstract} +body_collide_shape(RID p_body, int p_body_shape, RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, Vector2 * r_results, int p_result_max, int & r_result_count) = 0 : bool
{abstract} +body_set_pickable(RID p_body, bool p_pickable) = 0 : void
{abstract} +body_get_direct_state(RID p_body) = 0 : Physics2DDirectBodyState *
{abstract} +body_test_motion(RID p_body, const Transform2D & p_from, const Vector2 & p_motion, bool p_infinite_inertia, float p_margin = 0.001, Physics2DServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool
{abstract} +body_test_ray_separation(RID p_body, const Transform2D & p_transform, bool p_infinite_inertia, Vector2 & r_recover_motion, Physics2DServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int
{abstract} +joint_set_param(RID p_joint, Physics2DServer::JointParam p_param, real_t p_value) = 0 : void
{abstract} +joint_get_param(RID p_joint, Physics2DServer::JointParam p_param) const = 0 : real_t
{abstract} +joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void
{abstract} +joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool
{abstract} +pin_joint_create(const Vector2 & p_anchor, RID p_body_a, RID p_body_b = = RID()) = 0 : RID
{abstract} +groove_joint_create(const Vector2 & p_a_groove1, const Vector2 & p_a_groove2, const Vector2 & p_b_anchor, RID p_body_a, RID p_body_b) = 0 : RID
{abstract} +damped_spring_joint_create(const Vector2 & p_anchor_a, const Vector2 & p_anchor_b, RID p_body_a, RID p_body_b = = RID()) = 0 : RID
{abstract} +pin_joint_set_param(RID p_joint, Physics2DServer::PinJointParam p_param, real_t p_value) = 0 : void
{abstract} +pin_joint_get_param(RID p_joint, Physics2DServer::PinJointParam p_param) const = 0 : real_t
{abstract} +damped_string_joint_set_param(RID p_joint, Physics2DServer::DampedStringParam p_param, real_t p_value) = 0 : void
{abstract} +damped_string_joint_get_param(RID p_joint, Physics2DServer::DampedStringParam p_param) const = 0 : real_t
{abstract} +joint_get_type(RID p_joint) const = 0 : Physics2DServer::JointType
{abstract} +free(RID p_rid) = 0 : void
{abstract} +set_active(bool p_active) = 0 : void
{abstract} +init() = 0 : void
{abstract} +step(float p_step) = 0 : void
{abstract} +sync() = 0 : void
{abstract} +flush_queries() = 0 : void
{abstract} +end_sync() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +is_flushing_queries() const = 0 : bool
{abstract} +get_process_info(Physics2DServer::ProcessInfo p_info) = 0 : int
+Physics2DServer() : void
+~Physics2DServer() : void
}
class "SceneTree" as C_0001872058027933416994
class C_0001872058027933416994 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/scene_tree.h#L69{SceneTree}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_root() const : Viewport *
+call_group_flags(uint32_t p_call_flags, const StringName & p_group, const StringName & p_function, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notify_group_flags(uint32_t p_call_flags, const StringName & p_group, int p_notification) : void
+set_group_flags(uint32_t p_call_flags, const StringName & p_group, const String & p_name, const Variant & p_value) : void
+call_group(const StringName & p_group, const StringName & p_function, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notify_group(const StringName & p_group, int p_notification) : void
+set_group(const StringName & p_group, const String & p_name, const Variant & p_value) : void
+flush_transform_notifications() : void
+input_text(const String & p_text) : void
+input_event(const Ref<InputEvent> & p_event) : void
+init() : void
+iteration(float p_time) : bool
+idle(float p_time) : bool
+finish() : void
+set_auto_accept_quit(bool p_enable) : void
+set_quit_on_go_back(bool p_enable) : void
+quit(int p_exit_code = -1) : void
+set_input_as_handled() : void
+is_input_handled() : bool
+get_physics_process_time() const : float
+get_idle_process_time() const : float
+is_node_being_edited(const Node * p_node) const : bool
+set_pause(bool p_enabled) : void
+is_paused() const : bool
+set_camera(const RID & p_camera) : void
+get_camera() const : RID
+set_debug_collisions_hint(bool p_enabled) : void
+is_debugging_collisions_hint() const : bool
+set_debug_navigation_hint(bool p_enabled) : void
+is_debugging_navigation_hint() const : bool
+set_debug_collisions_color(const Color & p_color) : void
+get_debug_collisions_color() const : Color
+set_debug_collision_contact_color(const Color & p_color) : void
+get_debug_collision_contact_color() const : Color
+set_debug_navigation_color(const Color & p_color) : void
+get_debug_navigation_color() const : Color
+set_debug_navigation_disabled_color(const Color & p_color) : void
+get_debug_navigation_disabled_color() const : Color
+get_debug_navigation_material() : Ref<Material>
+get_debug_navigation_disabled_material() : Ref<Material>
+get_debug_collision_material() : Ref<Material>
+get_debug_contact_mesh() : Ref<ArrayMesh>
+get_collision_debug_contact_count() : int
+get_frame() const : int64_t
+get_event_count() const : int64_t
+get_node_count() const : int
+queue_delete(Object * p_object) : void
+get_nodes_in_group(const StringName & p_group, List<Node *> * p_list) : void
+has_group(const StringName & p_identifier) const : bool
+set_screen_stretch(SceneTree::StretchMode p_mode, SceneTree::StretchAspect p_aspect, const Size2 & p_minsize, real_t p_shrink = 1) : void
+set_use_font_oversampling(bool p_oversampling) : void
+is_using_font_oversampling() const : bool
+set_edited_scene_root(Node * p_node) : void
+get_edited_scene_root() const : Node *
+set_current_scene(Node * p_scene) : void
+get_current_scene() const : Node *
+change_scene(const String & p_path) : Error
+change_scene_to(const Ref<PackedScene> & p_scene) : Error
+reload_current_scene() : Error
+create_timer(float p_delay_sec, bool p_process_pause = true) : Ref<SceneTreeTimer>
+add_current_scene(Node * p_current) : void
{static} +get_singleton() : SceneTree *
+drop_files(const Vector<String> & p_files, int p_from_screen = 0) : void
+global_menu_action(const Variant & p_id, const Variant & p_meta) : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+get_multiplayer() const : Ref<MultiplayerAPI>
+set_multiplayer_poll_enabled(bool p_enabled) : void
+is_multiplayer_poll_enabled() const : bool
+set_multiplayer(Ref<MultiplayerAPI> p_multiplayer) : void
+set_network_peer(const Ref<NetworkedMultiplayerPeer> & p_network_peer) : void
+get_network_peer() const : Ref<NetworkedMultiplayerPeer>
+is_network_server() const : bool
+has_network_peer() const : bool
+get_network_unique_id() const : int
+get_network_connected_peers() const : Vector<int>
+get_rpc_sender_id() const : int
+set_refuse_new_network_connections(bool p_refuse) : void
+is_refusing_new_network_connections() const : bool
{static} +add_idle_callback(SceneTree::IdleCallback p_callback) : void
+SceneTree() : void
+~SceneTree() : void
+NOTIFICATION_TRANSFORM_CHANGED : enum
}
class "UndoRedo" as C_0000096380574950611570
class C_0000096380574950611570 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37{UndoRedo}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_save_class() const : String
+_add_do_method(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+_add_undo_method(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+create_action(const String & p_name = "", UndoRedo::MergeMode p_mode = MERGE_DISABLE) : void
+add_do_method(Object * p_object, const String & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+add_undo_method(Object * p_object, const String & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+add_do_property(Object * p_object, const String & p_property, const Variant & p_value) : void
+add_undo_property(Object * p_object, const String & p_property, const Variant & p_value) : void
+add_do_reference(Object * p_object) : void
+add_undo_reference(Object * p_object) : void
+is_committing_action() const : bool
+commit_action() : void
+redo() : bool
+undo() : bool
+get_current_action_name() const : String
+clear_history(bool p_increase_version = true) : void
+has_undo() : bool
+has_redo() : bool
+get_version() const : uint64_t
+set_commit_notify_callback(UndoRedo::CommitNotifyCallback p_callback, void * p_ud) : void
+set_method_notify_callback(UndoRedo::MethodNotifyCallback p_method_callback, void * p_ud) : void
+set_property_notify_callback(UndoRedo::PropertyNotifyCallback p_property_callback, void * p_ud) : void
+UndoRedo() : void
+~UndoRedo() : void
}
class "FuncRef" as C_0001699661383862634192
class C_0001699661383862634192 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/func_ref.h#L36{FuncRef}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+call_func(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call_funcv(const Array & p_args) : Variant
+set_instance(Object * p_obj) : void
+set_function(const StringName & p_func) : void
+get_function() : StringName
+is_valid() const : bool
+FuncRef() : void
}
class "_ArrayVariantSortCustom" as C_0000762417759113755306
class C_0000762417759113755306 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298{_ArrayVariantSortCustom}]] {
+operator()(const Variant & p_l, const Variant & p_r) const : bool
+obj : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300{obj}]]]
+func : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301{func}]]]
}
class "AudioServer" as C_0001370497546359815893
class C_0001370497546359815893 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148{AudioServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_channel_count() const : int
+thread_has_channel_mix_buffer(int p_bus, int p_buffer) const : bool
+thread_get_channel_mix_buffer(int p_bus, int p_buffer) : AudioFrame *
+thread_get_mix_buffer_size() const : int
+thread_find_bus_index(const StringName & p_name) : int
+set_bus_count(int p_count) : void
+get_bus_count() const : int
+remove_bus(int p_index) : void
+add_bus(int p_at_pos = -1) : void
+move_bus(int p_bus, int p_to_pos) : void
+set_bus_name(int p_bus, const String & p_name) : void
+get_bus_name(int p_bus) const : String
+get_bus_index(const StringName & p_bus_name) const : int
+get_bus_channels(int p_bus) const : int
+set_bus_volume_db(int p_bus, float p_volume_db) : void
+get_bus_volume_db(int p_bus) const : float
+set_bus_send(int p_bus, const StringName & p_send) : void
+get_bus_send(int p_bus) const : StringName
+set_bus_solo(int p_bus, bool p_enable) : void
+is_bus_solo(int p_bus) const : bool
+set_bus_mute(int p_bus, bool p_enable) : void
+is_bus_mute(int p_bus) const : bool
+set_bus_bypass_effects(int p_bus, bool p_enable) : void
+is_bus_bypassing_effects(int p_bus) const : bool
+add_bus_effect(int p_bus, const Ref<AudioEffect> & p_effect, int p_at_pos = -1) : void
+remove_bus_effect(int p_bus, int p_effect) : void
+get_bus_effect_count(int p_bus) : int
+get_bus_effect(int p_bus, int p_effect) : Ref<AudioEffect>
+get_bus_effect_instance(int p_bus, int p_effect, int p_channel = 0) : Ref<AudioEffectInstance>
+swap_bus_effects(int p_bus, int p_effect, int p_by_effect) : void
+set_bus_effect_enabled(int p_bus, int p_effect, bool p_enabled) : void
+is_bus_effect_enabled(int p_bus, int p_effect) const : bool
+get_bus_peak_volume_left_db(int p_bus, int p_channel) const : float
+get_bus_peak_volume_right_db(int p_bus, int p_channel) const : float
+is_bus_channel_active(int p_bus, int p_channel) const : bool
+set_global_rate_scale(float p_scale) : void
+get_global_rate_scale() const : float
+init() : void
+finish() : void
+update() : void
+load_default_bus_layout() : void
+lock() : void
+unlock() : void
+get_speaker_mode() const : AudioServer::SpeakerMode
+get_mix_rate() const : float
+read_output_peak_db() const : float
{static} +get_singleton() : AudioServer *
+get_output_latency() const : double
+get_time_to_next_mix() const : double
+get_time_since_last_mix() const : double
+audio_data_alloc(uint32_t p_data_len, const uint8_t * p_from_data = __null) : void *
+audio_data_free(void * p_data) : void
+audio_data_get_total_memory_usage() const : size_t
+audio_data_get_max_memory_usage() const : size_t
+add_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+remove_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+add_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+remove_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+set_bus_layout(const Ref<AudioBusLayout> & p_bus_layout) : void
+generate_bus_layout() const : Ref<AudioBusLayout>
+get_device_list() : Array
+get_device() : String
+set_device(String device) : void
+capture_get_device_list() : Array
+capture_get_device() : String
+capture_set_device(const String & p_name) : void
+AudioServer() : void
+~AudioServer() : void
+AUDIO_DATA_INVALID_ID : enum
}
class "Expression" as C_0000425668537377496256
class C_0000425668537377496256 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/math/expression.h#L36{Expression}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_func_argument_count(Expression::BuiltinFunc p_func) : int
{static} +get_func_name(Expression::BuiltinFunc p_func) : String
{static} +exec_func(Expression::BuiltinFunc p_func, const Variant ** p_inputs, Variant * r_return, Variant::CallError & r_error, String & r_error_str) : void
{static} +find_function(const String & p_string) : Expression::BuiltinFunc
+parse(const String & p_expression, const Vector<String> & p_input_names = Vector<String>()) : Error
+execute(Array p_inputs, Object * p_base = __null, bool p_show_error = true) : Variant
+has_execute_failed() const : bool
+get_error_text() const : String
+Expression() : void
+~Expression() : void
}
class "_ResourceLoader" as C_0001197720528033242618
class C_0001197720528033242618 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45{_ResourceLoader}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _ResourceLoader *
+load_interactive(const String & p_path, const String & p_type_hint = "") : Ref<ResourceInteractiveLoader>
+load(const String & p_path, const String & p_type_hint = "", bool p_no_cache = false) : RES
+get_recognized_extensions_for_type(const String & p_type) : PoolVector<String>
+set_abort_on_missing_resources(bool p_abort) : void
+get_dependencies(const String & p_path) : PoolStringArray
+has(const String & p_path) : bool
+has_cached(const String & p_path) : bool
+exists(const String & p_path, const String & p_type_hint = "") : bool
+_ResourceLoader() : void
}
class "_ResourceSaver" as C_0001130773750498288283
class C_0001130773750498288283 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68{_ResourceSaver}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _ResourceSaver *
+save(const String & p_path, const RES & p_resource, _ResourceSaver::SaverFlags p_flags) : Error
+get_recognized_extensions(const RES & p_resource) : PoolVector<String>
+_ResourceSaver() : void
}
class "_OS" as C_0000790752023609648644
class C_0000790752023609648644 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99{_OS}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+global_menu_add_item(const String & p_menu, const String & p_label, const Variant & p_signal, const Variant & p_meta) : void
+global_menu_add_separator(const String & p_menu) : void
+global_menu_remove_item(const String & p_menu, int p_idx) : void
+global_menu_clear(const String & p_menu) : void
+get_mouse_position() const : Point2
+set_window_title(const String & p_title) : void
+set_window_mouse_passthrough(const PoolVector2Array & p_region) : void
+get_mouse_button_state() const : int
+set_clipboard(const String & p_text) : void
+get_clipboard() const : String
+set_video_mode(const Size2 & p_size, bool p_fullscreen, bool p_resizeable, int p_screen = 0) : void
+get_video_mode(int p_screen = 0) const : Size2
+is_video_mode_fullscreen(int p_screen = 0) const : bool
+is_video_mode_resizable(int p_screen = 0) const : bool
+get_fullscreen_mode_list(int p_screen = 0) const : Array
+get_video_driver_count() const : int
+get_video_driver_name(_OS::VideoDriver p_driver) const : String
+get_current_video_driver() const : _OS::VideoDriver
+get_audio_driver_count() const : int
+get_audio_driver_name(int p_driver) const : String
+get_connected_midi_inputs() : PoolStringArray
+open_midi_inputs() : void
+close_midi_inputs() : void
+get_screen_count() const : int
+get_current_screen() const : int
+set_current_screen(int p_screen) : void
+get_screen_position(int p_screen = -1) const : Point2
+get_screen_size(int p_screen = -1) const : Size2
+get_screen_dpi(int p_screen = -1) const : int
+get_screen_scale(int p_screen = -1) const : float
+get_screen_max_scale() const : float
+get_window_position() const : Point2
+set_window_position(const Point2 & p_position) : void
+get_max_window_size() const : Size2
+get_min_window_size() const : Size2
+get_window_size() const : Size2
+get_real_window_size() const : Size2
+get_window_safe_area() const : Rect2
+set_max_window_size(const Size2 & p_size) : void
+set_min_window_size(const Size2 & p_size) : void
+set_window_size(const Size2 & p_size) : void
+set_window_fullscreen(bool p_enabled) : void
+is_window_fullscreen() const : bool
+set_window_resizable(bool p_enabled) : void
+is_window_resizable() const : bool
+set_window_minimized(bool p_enabled) : void
+is_window_minimized() const : bool
+set_window_maximized(bool p_enabled) : void
+is_window_maximized() const : bool
+set_window_always_on_top(bool p_enabled) : void
+is_window_always_on_top() const : bool
+is_window_focused() const : bool
+request_attention() : void
+center_window() : void
+move_window_to_foreground() : void
+get_native_handle(_OS::HandleType p_handle_type) : int64_t
+set_borderless_window(bool p_borderless) : void
+get_borderless_window() const : bool
+get_window_per_pixel_transparency_enabled() const : bool
+set_window_per_pixel_transparency_enabled(bool p_enabled) : void
+set_ime_active(const bool p_active) : void
+set_ime_position(const Point2 & p_pos) : void
+get_ime_selection() const : Point2
+get_ime_text() const : String
+native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error
+native_video_is_playing() : bool
+native_video_pause() : void
+native_video_unpause() : void
+native_video_stop() : void
+set_low_processor_usage_mode(bool p_enabled) : void
+is_in_low_processor_usage_mode() const : bool
+set_low_processor_usage_mode_sleep_usec(int p_usec) : void
+get_low_processor_usage_mode_sleep_usec() const : int
+get_executable_path() const : String
+execute(const String & p_path, const Vector<String> & p_arguments, bool p_blocking = true, Array p_output = = Array(), bool p_read_stderr = false) : int
+kill(int p_pid) : Error
+shell_open(String p_uri) : Error
+get_process_id() const : int
+has_environment(const String & p_var) const : bool
+get_environment(const String & p_var) const : String
+set_environment(const String & p_var, const String & p_value) const : bool
+get_name() const : String
+get_cmdline_args() : Vector<String>
+get_locale() const : String
+get_latin_keyboard_variant() const : String
+keyboard_get_layout_count() const : int
+keyboard_get_current_layout() const : int
+keyboard_set_current_layout(int p_index) : void
+keyboard_get_layout_language(int p_index) const : String
+keyboard_get_layout_name(int p_index) const : String
+get_model_name() const : String
+dump_memory_to_file(const String & p_file) : void
+dump_resources_to_file(const String & p_file) : void
+has_virtual_keyboard() const : bool
+show_virtual_keyboard(const String & p_existing_text = "", bool p_multiline = false) : void
+hide_virtual_keyboard() : void
+get_virtual_keyboard_height() : int
+print_resources_in_use(bool p_short = false) : void
+print_all_resources(const String & p_to_file) : void
+print_all_textures_by_size() : void
+print_resources_by_type(const Vector<String> & p_types) : void
+has_touchscreen_ui_hint() const : bool
+is_debug_build() const : bool
+get_unique_id() const : String
+get_scancode_string(uint32_t p_code) const : String
+is_scancode_unicode(uint32_t p_unicode) const : bool
+find_scancode_from_string(const String & p_code) const : int
+set_use_file_access_save_and_swap(bool p_enable) : void
+set_native_icon(const String & p_filename) : void
+set_icon(const Ref<Image> & p_icon) : void
+get_exit_code() const : int
+set_exit_code(int p_code) : void
+get_date(bool utc) const : Dictionary
+get_time(bool utc) const : Dictionary
+get_datetime(bool utc) const : Dictionary
+get_datetime_from_unix_time(int64_t unix_time_val) const : Dictionary
+get_unix_time_from_datetime(Dictionary datetime) const : int64_t
+get_time_zone_info() const : Dictionary
+get_unix_time() const : uint64_t
+get_system_time_secs() const : uint64_t
+get_system_time_msecs() const : uint64_t
+get_static_memory_usage() const : uint64_t
+get_static_memory_peak_usage() const : uint64_t
+get_dynamic_memory_usage() const : uint64_t
+delay_usec(int p_usec) const : void
+delay_msec(int p_msec) const : void
+get_ticks_msec() const : uint32_t
+get_ticks_usec() const : uint64_t
+get_splash_tick_msec() const : uint32_t
+can_use_threads() const : bool
+can_draw() const : bool
+is_userfs_persistent() const : bool
+is_stdout_verbose() const : bool
+get_processor_count() const : int
+get_system_dir(_OS::SystemDir p_dir, bool p_shared_storage = true) const : String
+get_user_data_dir() const : String
+alert(const String & p_alert, const String & p_title = "ALERT!") : void
+set_screen_orientation(_OS::ScreenOrientation p_orientation) : void
+get_screen_orientation() const : _OS::ScreenOrientation
+set_keep_screen_on(bool p_enabled) : void
+is_keep_screen_on() const : bool
+is_ok_left_and_cancel_right() const : bool
+set_thread_name(const String & p_name) : Error
+get_thread_caller_id() const : Thread::ID
+set_use_vsync(bool p_enable) : void
+is_vsync_enabled() const : bool
+set_vsync_via_compositor(bool p_enable) : void
+is_vsync_via_compositor_enabled() const : bool
+get_power_state() : _OS::PowerState
+get_power_seconds_left() : int
+get_power_percent_left() : int
+has_feature(const String & p_feature) const : bool
+request_permission(const String & p_name) : bool
+request_permissions() : bool
+get_granted_permissions() const : Vector<String>
+get_tablet_driver_count() const : int
+get_tablet_driver_name(int p_driver) const : String
+get_current_tablet_driver() const : String
+set_current_tablet_driver(const String & p_driver) : void
{static} +get_singleton() : _OS *
+_OS() : void
}
class "_Geometry" as C_0000897221634691489964
class C_0000897221634691489964 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401{_Geometry}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Geometry *
+build_box_planes(const Vector3 & p_extents) : PoolVector<Plane>
+build_cylinder_planes(float p_radius, float p_height, int p_sides, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector<Plane>
+build_capsule_planes(float p_radius, float p_height, int p_sides, int p_lats, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector<Plane>
+segment_intersects_segment_2d(const Vector2 & p_from_a, const Vector2 & p_to_a, const Vector2 & p_from_b, const Vector2 & p_to_b) : Variant
+line_intersects_line_2d(const Vector2 & p_from_a, const Vector2 & p_dir_a, const Vector2 & p_from_b, const Vector2 & p_dir_b) : Variant
+get_closest_points_between_segments_2d(const Vector2 & p1, const Vector2 & q1, const Vector2 & p2, const Vector2 & q2) : PoolVector<Vector2>
+get_closest_points_between_segments(const Vector3 & p1, const Vector3 & p2, const Vector3 & q1, const Vector3 & q2) : PoolVector<Vector3>
+get_closest_point_to_segment_2d(const Vector2 & p_point, const Vector2 & p_a, const Vector2 & p_b) : Vector2
+get_closest_point_to_segment(const Vector3 & p_point, const Vector3 & p_a, const Vector3 & p_b) : Vector3
+get_closest_point_to_segment_uncapped_2d(const Vector2 & p_point, const Vector2 & p_a, const Vector2 & p_b) : Vector2
+get_closest_point_to_segment_uncapped(const Vector3 & p_point, const Vector3 & p_a, const Vector3 & p_b) : Vector3
+ray_intersects_triangle(const Vector3 & p_from, const Vector3 & p_dir, const Vector3 & p_v0, const Vector3 & p_v1, const Vector3 & p_v2) : Variant
+segment_intersects_triangle(const Vector3 & p_from, const Vector3 & p_to, const Vector3 & p_v0, const Vector3 & p_v1, const Vector3 & p_v2) : Variant
+point_is_inside_triangle(const Vector2 & s, const Vector2 & a, const Vector2 & b, const Vector2 & c) const : bool
+segment_intersects_sphere(const Vector3 & p_from, const Vector3 & p_to, const Vector3 & p_sphere_pos, real_t p_sphere_radius) : PoolVector<Vector3>
+segment_intersects_cylinder(const Vector3 & p_from, const Vector3 & p_to, float p_height, float p_radius) : PoolVector<Vector3>
+segment_intersects_convex(const Vector3 & p_from, const Vector3 & p_to, const Vector<Plane> & p_planes) : PoolVector<Vector3>
+is_point_in_circle(const Vector2 & p_point, const Vector2 & p_circle_pos, real_t p_circle_radius) : bool
+segment_intersects_circle(const Vector2 & p_from, const Vector2 & p_to, const Vector2 & p_circle_pos, real_t p_circle_radius) : real_t
+get_uv84_normal_bit(const Vector3 & p_vector) : int
+is_polygon_clockwise(const Vector<Vector2> & p_polygon) : bool
+is_point_in_polygon(const Point2 & p_point, const Vector<Vector2> & p_polygon) : bool
+triangulate_polygon(const Vector<Vector2> & p_polygon) : Vector<int>
+triangulate_delaunay_2d(const Vector<Vector2> & p_points) : Vector<int>
+convex_hull_2d(const Vector<Point2> & p_points) : Vector<Point2>
+clip_polygon(const Vector<Vector3> & p_points, const Plane & p_plane) : Vector<Vector3>
+merge_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+clip_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+intersect_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+exclude_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+clip_polyline_with_polygon_2d(const Vector<Vector2> & p_polyline, const Vector<Vector2> & p_polygon) : Array
+intersect_polyline_with_polygon_2d(const Vector<Vector2> & p_polyline, const Vector<Vector2> & p_polygon) : Array
+offset_polygon_2d(const Vector<Vector2> & p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE) : Array
+offset_polyline_2d(const Vector<Vector2> & p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE, _Geometry::PolyEndType p_end_type = END_SQUARE) : Array
+make_atlas(const Vector<Size2> & p_rects) : Dictionary
+_Geometry() : void
}
class "_Marshalls" as C_0000135188690773659020
class C_0000135188690773659020 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629{_Marshalls}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Marshalls *
+variant_to_base64(const Variant & p_var, bool p_full_objects = false) : String
+base64_to_variant(const String & p_str, bool p_allow_objects = false) : Variant
+raw_to_base64(const PoolVector<uint8_t> & p_arr) : String
+base64_to_raw(const String & p_str) : PoolVector<uint8_t>
+utf8_to_base64(const String & p_str) : String
+base64_to_utf8(const String & p_str) : String
+_Marshalls() : void
+~_Marshalls() : void
}
class "_Thread" as C_0001150621116588802549
class C_0001150621116588802549 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679{_Thread}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+start(Object * p_instance, const StringName & p_method, const Variant & p_userdata = Variant(), _Thread::Priority p_priority = PRIORITY_NORMAL) : Error
+get_id() const : String
+is_active() const : bool
+wait_to_finish() : Variant
+_Thread() : void
+~_Thread() : void
}
class "_ClassDB" as C_0001186331261774827872
class C_0001186331261774827872 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713{_ClassDB}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_class_list() const : PoolStringArray
+get_inheriters_from_class(const StringName & p_class) const : PoolStringArray
+get_parent_class(const StringName & p_class) const : StringName
+class_exists(const StringName & p_class) const : bool
+is_parent_class(const StringName & p_class, const StringName & p_inherits) const : bool
+can_instance(const StringName & p_class) const : bool
+instance(const StringName & p_class) const : Variant
+has_signal(StringName p_class, StringName p_signal) const : bool
+get_signal(StringName p_class, StringName p_signal) const : Dictionary
+get_signal_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_property_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_property(Object * p_object, const StringName & p_property) const : Variant
+set_property(Object * p_object, const StringName & p_property, const Variant & p_value) const : Error
+has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) const : bool
+get_method_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_integer_constant_list(const StringName & p_class, bool p_no_inheritance = false) const : PoolStringArray
+has_integer_constant(const StringName & p_class, const StringName & p_name) const : bool
+get_integer_constant(const StringName & p_class, const StringName & p_name) const : int
+get_category(const StringName & p_node) const : StringName
+is_class_enabled(StringName p_class) const : bool
+_ClassDB() : void
+~_ClassDB() : void
}
class "_Engine" as C_0001895218672297528471
class C_0001895218672297528471 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752{_Engine}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Engine *
+set_iterations_per_second(int p_ips) : void
+get_iterations_per_second() const : int
+set_physics_jitter_fix(float p_threshold) : void
+get_physics_jitter_fix() const : float
+get_physics_interpolation_fraction() const : float
+set_target_fps(int p_fps) : void
+get_target_fps() const : int
+get_frames_per_second() const : float
+get_physics_frames() const : uint64_t
+get_idle_frames() const : uint64_t
+get_frames_drawn() : int
+set_time_scale(float p_scale) : void
+get_time_scale() : float
+get_main_loop() const : MainLoop *
+get_version_info() const : Dictionary
+get_author_info() const : Dictionary
+get_copyright_info() const : Array
+get_donor_info() const : Dictionary
+get_license_info() const : Dictionary
+get_license_text() const : String
+is_in_physics_frame() const : bool
+has_singleton(const String & p_name) const : bool
+get_singleton_object(const String & p_name) const : Object *
+set_editor_hint(bool p_enabled) : void
+is_editor_hint() const : bool
+_Engine() : void
}
class "_JSON" as C_0000979065355535690103
class C_0000979065355535690103 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833{_JSON}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _JSON *
+print(const Variant & p_value, const String & p_indent = "", bool p_sort_keys = false) : String
+parse(const String & p_json) : Ref<JSONParseResult>
+_JSON() : void
}
C_0000699772808699382057 o- - C_0001357046052919104842 : -count
C_0000945411446247634027 - -> C_0000945411446247634027 : +invalid_node_name_characters
C_0002153970433534458832 o- - C_0000945411446247634027 : +name
C_0002153970433534458832 o- - C_0001858199404643284193 : +class_name
C_0002153970433534458832 o- - C_0000945411446247634027 : +hint_string
C_0000774532299576474923 o- - C_0000945411446247634027 : +name
C_0000774532299576474923 o- - C_0002153970433534458832 : +return_val
C_0000774532299576474923 o- - C_0000788782266645010446 : +arguments
C_0000774532299576474923 o- - C_0000367042517371617856 : +default_arguments
C_0001531814603945772616 o- - C_0001578539238208480863 : -signal_map
C_0001531814603945772616 o- - C_0000751300156436098886 : -connections
C_0001531814603945772616 o- - C_0000699772808699382057 : -_lock_index
C_0001531814603945772616 o- - C_0000051860595756965531 : -change_receptors
C_0001531814603945772616 - -> C_0000933379568804427881 : -_rc
C_0001531814603945772616 o- - C_0001682405743486361214 : -editor_section_folding
C_0001531814603945772616 - -> C_0001735438654351294549 : -script_instance
C_0001531814603945772616 o- - C_0002025812040042972946 : -script
C_0001531814603945772616 o- - C_0001299121424291583786 : -metadata
C_0001531814603945772616 o- - C_0001858199404643284193 : -_class_name
C_0001531814603945772616 - -> C_0001858199404643284193 : -_class_ptr
C_0001531814603945772616 o- - C_0001357046052919104842 : -instance_binding_count
C_0001531814603945772616 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <.. C_0001778859257025660860 : +<<friend>>
C_0001531814603945772616 <.. C_0000132048052014479231 : +<<friend>>
C_0000219886141561409828 - -+ C_0001531814603945772616
C_0001267214583673362755 - -+ C_0001531814603945772616
C_0001267214583673362755 - -> C_0001531814603945772616 : +source
C_0001267214583673362755 o- - C_0001858199404643284193 : +signal
C_0001267214583673362755 - -> C_0001531814603945772616 : +target
C_0001267214583673362755 o- - C_0001858199404643284193 : +method
C_0001267214583673362755 o- - C_0000367042517371617856 : +binds
C_0000250357724807605097 - -+ C_0001531814603945772616
C_0000250357724807605097 o- - C_0000774532299576474923 : +user
C_0002064336919270342687 - -> C_0001531814603945772616 : -instances
C_0002064336919270342687 - -> C_0001531814603945772616 : -instance_checks
C_0002064336919270342687 <.. C_0001531814603945772616 : +<<friend>>
C_0001040552259499621557 - -+ C_0002064336919270342687
C_0001725595510223069271 o- - C_0001858199404643284193 : -name
C_0001725595510223069271 o- - C_0000367042517371617856 : -default_arguments
C_0001725595510223069271 o- - C_0001169846630986447699 : #arg_names
C_0000626842387047507019 o- - C_0000774532299576474923 : #arguments
C_0001725595510223069271 <|- - C_0000626842387047507019
C_0002161264899189627575 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0002161264899189627575
C_0000514530488699023626 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000514530488699023626
C_0001500902353747816170 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001500902353747816170
C_0001463339540638256927 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001463339540638256927
C_0001770130608234301442 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001770130608234301442
C_0001227602006568872099 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001227602006568872099
C_0000721345300172868993 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000721345300172868993
C_0000779559418824132960 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000779559418824132960
C_0001326581917102107425 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001326581917102107425
C_0000845455246171879191 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000845455246171879191
C_0000081704011730798793 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000081704011730798793
C_0002027329212022555569 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0002027329212022555569
C_0000512545424965820103 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000512545424965820103
C_0002087322448002339587 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0002087322448002339587
C_0000031906668996487033 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000031906668996487033
C_0001134043413451695381 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001134043413451695381
C_0001212767095252394753 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001212767095252394753
C_0001038624653636336005 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001038624653636336005
C_0000375613860790632263 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000375613860790632263
C_0001053911039767528095 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001053911039767528095
C_0000462780498821063561 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000462780498821063561
C_0000803203155573352820 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000803203155573352820
C_0001728875246190146863 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001728875246190146863
C_0000319868049196089894 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000319868049196089894
C_0000104564426296396960 - -> C_0001858199404643284193 : +classes
C_0000104564426296396960 - -> C_0001858199404643284193 : +resource_base_extensions
C_0000104564426296396960 - -> C_0001858199404643284193 : +compat_classes
C_0000104564426296396960 - -> C_0001858199404643284193 : +default_values
C_0000104564426296396960 - -> C_0000210234563198599367 : +default_values
C_0000104564426296396960 - -> C_0001858199404643284193 : +default_values_cached
C_0001778859257025660860 o- - C_0001858199404643284193 : -_class_name
C_0001778859257025660860 o- - C_0000699772808699382057 : -refcount
C_0001778859257025660860 o- - C_0000699772808699382057 : -refcount_init
C_0001778859257025660860 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001778859257025660860
C_0001213123647052694419 o- - C_0001858199404643284193 : -_class_name
C_0001213123647052694419 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001213123647052694419
C_0000218299049716973303 o- - C_0001858199404643284193 : -_class_name
C_0000218299049716973303 <.. C_0001872058027933416994 : +<<friend>>
C_0000218299049716973303 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000218299049716973303
C_0000933379568804427881 - -> C_0001531814603945772616 : -_ptr
C_0001951177692366602790 o- - C_0001858199404643284193 : -_class_name
C_0001951177692366602790 o- - C_0000945411446247634027 : -name
C_0001951177692366602790 o- - C_0000945411446247634027 : -path_cache
C_0001951177692366602790 o- - C_0000945411446247634027 : -import_path
C_0001951177692366602790 - -> C_0000218299049716973303 : -local_scene
C_0001951177692366602790 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001951177692366602790
C_0001485048025194488343 o- - C_0001858199404643284193 : -_class_name
C_0001485048025194488343 o- - C_0000945411446247634027 : -locale
C_0001485048025194488343 o- - C_0000945411446247634027 : -fallback
C_0001485048025194488343 - -> C_0001485048025194488343 : -singleton
C_0001485048025194488343 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001485048025194488343
C_0000066148521405667716 o- - C_0001858199404643284193 : -_class_name
C_0000066148521405667716 o- - C_0000945411446247634027 : #resource_path
C_0000066148521405667716 o- - C_0002063845175027013341 : #input_presets
C_0000066148521405667716 o- - C_0001682405743486361214 : #custom_features
C_0000066148521405667716 - -> C_0000066148521405667716 : #singleton
C_0000066148521405667716 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000066148521405667716
C_0001608678623693693822 o- - C_0001858199404643284193 : -_class_name
C_0001608678623693693822 <.. C_0001649884439586022807 : +<<friend>>
C_0001608678623693693822 <.. C_0000104564426296396960 : +<<friend>>
C_0001951177692366602790 <|- - C_0001608678623693693822
C_0001649884439586022807 - -> C_0001531814603945772616 : -owner
C_0001649884439586022807 o- - C_0000788782266645010446 : -properties
C_0001649884439586022807 - -> C_0002110837736536862228 : -language
C_0001735438654351294549 <|- - C_0001649884439586022807
C_0000970940027123558604 o- - C_0001858199404643284193 : -_class_name
C_0000970940027123558604 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000970940027123558604
C_0001823345232236209470 o- - C_0001858199404643284193 : +name
C_0001823345232236209470 - -> C_0001531814603945772616 : +ptr
C_0000361490529588572420 o- - C_0000945411446247634027 : -_execpath
C_0000361490529588572420 o- - C_0002063845175027013341 : -_cmdline
C_0000361490529588572420 o- - C_0000945411446247634027 : -_local_clipboard
C_0000361490529588572420 o- - C_0002063845175027013341 : -restart_commandline
C_0000361490529588572420 - -> C_0000361490529588572420 : -singleton
C_0001191393512042218074 o- - C_0001858199404643284193 : -_class_name
C_0001191393512042218074 - -> C_0001191393512042218074 : #singleton
C_0001191393512042218074 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001191393512042218074
C_0000825523737350882091 - -> C_0000825523737350882091 : -singleton
C_0000132048052014479231 - -> C_0001531814603945772616 : +obj
C_0000115801560197752094 o- - C_0001858199404643284193 : +signal
C_0000115801560197752094 - -> C_0001531814603945772616 : +target
C_0000115801560197752094 o- - C_0001858199404643284193 : +method
C_0000535376932101028371 o- - C_0001858199404643284193 : -_class_name
C_0000535376932101028371 - -> C_0000535376932101028371 : -singleton
C_0000535376932101028371 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000535376932101028371
C_0000314051240057057851 o- - C_0001858199404643284193 : -_class_name
C_0000314051240057057851 - -> C_0000314051240057057851 : -singleton
C_0000314051240057057851 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000314051240057057851
C_0001701907280759632930 o- - C_0001858199404643284193 : -_class_name
C_0001701907280759632930 - -> C_0001701907280759632930 : #singleton
C_0001701907280759632930 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001701907280759632930
C_0001589464385186808769 o- - C_0001858199404643284193 : -_class_name
C_0001589464385186808769 - -> C_0001589464385186808769 : -singleton
C_0001589464385186808769 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001589464385186808769
C_0001559146041463814963 o- - C_0001858199404643284193 : -_class_name
C_0001559146041463814963 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001559146041463814963
C_0000503002593685351124 o- - C_0001858199404643284193 : -_class_name
C_0000503002593685351124 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000503002593685351124
C_0000493041171271776846 - -+ C_0000503002593685351124
C_0000493041171271776846 - -> C_0001531814603945772616 : +collider
C_0000461609734144368587 - -+ C_0000503002593685351124
C_0000461609734144368587 - -> C_0001531814603945772616 : +collider
C_0001034902024938599899 o- - C_0001858199404643284193 : -_class_name
C_0001034902024938599899 - -> C_0001034902024938599899 : -singleton
C_0001034902024938599899 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001034902024938599899
C_0002302096389852429221 o- - C_0001858199404643284193 : -_class_name
C_0002302096389852429221 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0002302096389852429221
C_0000236996062289735257 o- - C_0001858199404643284193 : -_class_name
C_0000236996062289735257 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000236996062289735257
C_0001801355352189289676 - -+ C_0000236996062289735257
C_0001801355352189289676 - -> C_0001531814603945772616 : +collider
C_0001801355352189289676 o- - C_0000210234563198599367 : +metadata
C_0001771770302499309898 - -+ C_0000236996062289735257
C_0001771770302499309898 - -> C_0001531814603945772616 : +collider
C_0001771770302499309898 o- - C_0000210234563198599367 : +metadata
C_0001561529841391244418 o- - C_0001858199404643284193 : -_class_name
C_0001561529841391244418 - -> C_0001561529841391244418 : -singleton
C_0001561529841391244418 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001561529841391244418
C_0001872058027933416994 o- - C_0001858199404643284193 : -_class_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -tree_changed_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -node_added_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -node_removed_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -node_renamed_name
C_0001872058027933416994 - -> C_0000218299049716973303 : -edited_scene_root
C_0001872058027933416994 - -> C_0000218299049716973303 : -current_scene
C_0001872058027933416994 o- - C_0001768230974934037264 : -live_edit_root
C_0001872058027933416994 o- - C_0000945411446247634027 : -live_edit_scene
C_0001872058027933416994 - -> C_0001872058027933416994 : -singleton
C_0001872058027933416994 <.. C_0000218299049716973303 : +<<friend>>
C_0001872058027933416994 <.. C_0000104564426296396960 : +<<friend>>
C_0000970940027123558604 <|- - C_0001872058027933416994
C_0000096380574950611570 o- - C_0001858199404643284193 : -_class_name
C_0000096380574950611570 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000096380574950611570
C_0001699661383862634192 o- - C_0001858199404643284193 : -_class_name
C_0001699661383862634192 o- - C_0001858199404643284193 : -function
C_0001699661383862634192 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001699661383862634192
C_0000762417759113755306 - -> C_0001531814603945772616 : +obj
C_0000762417759113755306 o- - C_0001858199404643284193 : +func
C_0001370497546359815893 o- - C_0001858199404643284193 : -_class_name
C_0001370497546359815893 - -> C_0001370497546359815893 : -singleton
C_0001370497546359815893 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001370497546359815893
C_0000425668537377496256 o- - C_0001858199404643284193 : -_class_name
C_0000425668537377496256 o- - C_0000945411446247634027 : -expression
C_0000425668537377496256 o- - C_0000945411446247634027 : -error_str
C_0000425668537377496256 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0000425668537377496256
C_0001197720528033242618 o- - C_0001858199404643284193 : -_class_name
C_0001197720528033242618 - -> C_0001197720528033242618 : #singleton
C_0001197720528033242618 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001197720528033242618
C_0001130773750498288283 o- - C_0001858199404643284193 : -_class_name
C_0001130773750498288283 - -> C_0001130773750498288283 : #singleton
C_0001130773750498288283 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001130773750498288283
C_0000790752023609648644 o- - C_0001858199404643284193 : -_class_name
C_0000790752023609648644 - -> C_0000790752023609648644 : #singleton
C_0000790752023609648644 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000790752023609648644
C_0000897221634691489964 o- - C_0001858199404643284193 : -_class_name
C_0000897221634691489964 - -> C_0000897221634691489964 : -singleton
C_0000897221634691489964 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000897221634691489964
C_0000135188690773659020 o- - C_0001858199404643284193 : -_class_name
C_0000135188690773659020 - -> C_0000135188690773659020 : -singleton
C_0000135188690773659020 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000135188690773659020
C_0001150621116588802549 o- - C_0001858199404643284193 : -_class_name
C_0001150621116588802549 o- - C_0000210234563198599367 : #ret
C_0001150621116588802549 o- - C_0000210234563198599367 : #userdata
C_0001150621116588802549 - -> C_0001531814603945772616 : #target_instance
C_0001150621116588802549 o- - C_0001858199404643284193 : #target_method
C_0001150621116588802549 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001150621116588802549
C_0001186331261774827872 o- - C_0001858199404643284193 : -_class_name
C_0001186331261774827872 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001186331261774827872
C_0001895218672297528471 o- - C_0001858199404643284193 : -_class_name
C_0001895218672297528471 - -> C_0001895218672297528471 : #singleton
C_0001895218672297528471 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001895218672297528471
C_0000979065355535690103 o- - C_0001858199404643284193 : -_class_name
C_0000979065355535690103 - -> C_0000979065355535690103 : #singleton
C_0000979065355535690103 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000979065355535690103
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>