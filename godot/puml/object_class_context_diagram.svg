<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="16889px" preserveAspectRatio="none" style="width:37711px;height:16889px;" version="1.1" viewBox="0 0 37711 16889" width="37711px" zoomAndPan="magnify"><defs><filter height="300%" id="f717qjsf0e7yl" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="253" x="18733" y="16.708">Godot Object class hierarchy</text><!--MD5=[9ddbd22804041489fb45650d196dcfe6]
class C_0001357046052919104842--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0001357046052919104842" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="23233.59" y="4747.4531"/><ellipse cx="23248.59" cy="4763.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23251.5588,4769.0938 Q23250.9806,4769.3906 23250.34,4769.5313 Q23249.6994,4769.6875 23248.9963,4769.6875 Q23246.4963,4769.6875 23245.1681,4768.0469 Q23243.8556,4766.3906 23243.8556,4763.2656 Q23243.8556,4760.1406 23245.1681,4758.4844 Q23246.4963,4756.8281 23248.9963,4756.8281 Q23249.6994,4756.8281 23250.34,4756.9844 Q23250.9963,4757.1406 23251.5588,4757.4375 L23251.5588,4760.1563 Q23250.9338,4759.5781 23250.34,4759.3125 Q23249.7463,4759.0313 23249.1213,4759.0313 Q23247.7775,4759.0313 23247.09,4760.1094 Q23246.4025,4761.1719 23246.4025,4763.2656 Q23246.4025,4765.3594 23247.09,4766.4375 Q23247.7775,4767.5 23249.1213,4767.5 Q23249.7463,4767.5 23250.34,4767.2344 Q23250.9338,4766.9531 23251.5588,4766.375 L23251.5588,4769.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="23262.59" y="4767.6074">SafeNumeric</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="53" x="23349.59" y="4744.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="23350.59" y="4756.5918">uint32_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23234.59" x2="23398.59" y1="4779.4531" y2="4779.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23234.59" x2="23398.59" y1="4787.4531" y2="4787.4531"/><!--MD5=[0248b83d95ca29d05ff879ba22e97aa0]
class C_0000699772808699382057--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164" target="_top" title="SafeRefCount" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164" xlink:show="new" xlink:title="SafeRefCount" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="124.8281" id="C_0000699772808699382057" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="23177.59" y="3232.9531"/><ellipse cx="23231.84" cy="3248.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23234.8088,3254.5938 Q23234.2306,3254.8906 23233.59,3255.0313 Q23232.9494,3255.1875 23232.2463,3255.1875 Q23229.7463,3255.1875 23228.4181,3253.5469 Q23227.1056,3251.8906 23227.1056,3248.7656 Q23227.1056,3245.6406 23228.4181,3243.9844 Q23229.7463,3242.3281 23232.2463,3242.3281 Q23232.9494,3242.3281 23233.59,3242.4844 Q23234.2463,3242.6406 23234.8088,3242.9375 L23234.8088,3245.6563 Q23234.1838,3245.0781 23233.59,3244.8125 Q23232.9963,3244.5313 23232.3713,3244.5313 Q23231.0275,3244.5313 23230.34,3245.6094 Q23229.6525,3246.6719 23229.6525,3248.7656 Q23229.6525,3250.8594 23230.34,3251.9375 Q23231.0275,3253 23232.3713,3253 Q23232.9963,3253 23233.59,3252.7344 Q23234.1838,3252.4531 23234.8088,3251.875 L23234.8088,3254.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="85" x="23252.34" y="3253.1074">SafeRefCount</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23178.59" x2="23378.59" y1="3264.9531" y2="3264.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23178.59" x2="23378.59" y1="3272.9531" y2="3272.9531"/><ellipse cx="23188.59" cy="3283.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="23197.59" y="3287.1636">ref() : bool</text><ellipse cx="23188.59" cy="3296.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="23197.59" y="3299.9683">refval() : uint32_t</text><ellipse cx="23188.59" cy="3309.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="23197.59" y="3312.7729">unref() : bool</text><ellipse cx="23188.59" cy="3322.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="23197.59" y="3325.5776">unrefval() : uint32_t</text><ellipse cx="23188.59" cy="3335.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="23197.59" y="3338.3823">get() const : uint32_t</text><ellipse cx="23188.59" cy="3347.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="23197.59" y="3351.187">init(uint32_t p_value = 1) : void</text></a><!--MD5=[21563e0a78186e4573d15ccf86d60a54]
class C_0000228469999635536560--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/array.h#L41" target="_top" title="Array" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/array.h#L41" xlink:show="new" xlink:title="Array" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="572.9922" id="C_0000228469999635536560" style="stroke: #A80036; stroke-width: 1.5;" width="690" x="11961.59" y="28.9531"/><ellipse cx="12286.34" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12289.3088,50.5938 Q12288.7306,50.8906 12288.09,51.0313 Q12287.4494,51.1875 12286.7463,51.1875 Q12284.2463,51.1875 12282.9181,49.5469 Q12281.6056,47.8906 12281.6056,44.7656 Q12281.6056,41.6406 12282.9181,39.9844 Q12284.2463,38.3281 12286.7463,38.3281 Q12287.4494,38.3281 12288.09,38.4844 Q12288.7463,38.6406 12289.3088,38.9375 L12289.3088,41.6563 Q12288.6838,41.0781 12288.09,40.8125 Q12287.4963,40.5313 12286.8713,40.5313 Q12285.5275,40.5313 12284.84,41.6094 Q12284.1525,42.6719 12284.1525,44.7656 Q12284.1525,46.8594 12284.84,47.9375 Q12285.5275,49 12286.8713,49 Q12287.4963,49 12288.09,48.7344 Q12288.6838,48.4531 12289.3088,47.875 L12289.3088,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="12306.84" y="49.1074">Array</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11962.59" x2="12650.59" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11962.59" x2="12650.59" y1="68.9531" y2="68.9531"/><ellipse cx="11972.59" cy="79.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="11981.59" y="83.1636">operator[](int p_idx) : Variant &amp;</text><ellipse cx="11972.59" cy="92.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="11981.59" y="95.9683">operator[](int p_idx) const : const Variant &amp;</text><ellipse cx="11972.59" cy="105.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="11981.59" y="108.7729">set(int p_idx, const Variant &amp; p_value) : void</text><ellipse cx="11972.59" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="11981.59" y="121.5776">get(int p_idx) const : const Variant &amp;</text><ellipse cx="11972.59" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="11981.59" y="134.3823">size() const : int</text><ellipse cx="11972.59" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="11981.59" y="147.187">empty() const : bool</text><ellipse cx="11972.59" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="11981.59" y="159.9917">clear() : void</text><ellipse cx="11972.59" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="11981.59" y="172.7964">operator==(const Array &amp; p_array) const : bool</text><ellipse cx="11972.59" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="11981.59" y="185.6011">hash() const : uint32_t</text><ellipse cx="11972.59" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="11981.59" y="198.4058">operator=(const Array &amp; p_array) : void</text><ellipse cx="11972.59" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="11981.59" y="211.2104">push_back(const Variant &amp; p_value) : void</text><ellipse cx="11972.59" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="11981.59" y="224.0151">append(const Variant &amp; p_value) : void</text><ellipse cx="11972.59" cy="233.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="11981.59" y="236.8198">append_array(const Array &amp; p_array) : void</text><ellipse cx="11972.59" cy="246.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="11981.59" y="249.6245">resize(int p_new_size) : Error</text><ellipse cx="11972.59" cy="259.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="11981.59" y="262.4292">insert(int p_pos, const Variant &amp; p_value) : void</text><ellipse cx="11972.59" cy="272.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="11981.59" y="275.2339">remove(int p_pos) : void</text><ellipse cx="11972.59" cy="284.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="11981.59" y="288.0386">front() const : Variant</text><ellipse cx="11972.59" cy="297.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="11981.59" y="300.8433">back() const : Variant</text><ellipse cx="11972.59" cy="310.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="11981.59" y="313.6479">sort() : Array &amp;</text><ellipse cx="11972.59" cy="323.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="11981.59" y="326.4526">sort_custom(Object * p_obj, const StringName &amp; p_function) : Array &amp;</text><ellipse cx="11972.59" cy="336.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="11981.59" y="339.2573">shuffle() : void</text><ellipse cx="11972.59" cy="348.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="11981.59" y="352.062">bsearch(const Variant &amp; p_value, bool p_before = true) : int</text><ellipse cx="11972.59" cy="361.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="664" x="11981.59" y="364.8667">bsearch_custom(const Variant &amp; p_value, Object * p_obj, const StringName &amp; p_function, bool p_before = true) : int</text><ellipse cx="11972.59" cy="374.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="11981.59" y="377.6714">invert() : Array &amp;</text><ellipse cx="11972.59" cy="387.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="11981.59" y="390.4761">find(const Variant &amp; p_value, int p_from = 0) const : int</text><ellipse cx="11972.59" cy="400.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="11981.59" y="403.2808">rfind(const Variant &amp; p_value, int p_from = -1) const : int</text><ellipse cx="11972.59" cy="412.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="11981.59" y="416.0854">find_last(const Variant &amp; p_value) const : int</text><ellipse cx="11972.59" cy="425.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11981.59" y="428.8901">count(const Variant &amp; p_value) const : int</text><ellipse cx="11972.59" cy="438.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="11981.59" y="441.6948">has(const Variant &amp; p_value) const : bool</text><ellipse cx="11972.59" cy="451.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="11981.59" y="454.4995">erase(const Variant &amp; p_value) : void</text><ellipse cx="11972.59" cy="464.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="11981.59" y="467.3042">push_front(const Variant &amp; p_value) : void</text><ellipse cx="11972.59" cy="476.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="11981.59" y="480.1089">pop_back() : Variant</text><ellipse cx="11972.59" cy="489.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="11981.59" y="492.9136">pop_front() : Variant</text><ellipse cx="11972.59" cy="502.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="11981.59" y="505.7183">duplicate(bool p_deep = false) const : Array</text><ellipse cx="11972.59" cy="515.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="11981.59" y="518.5229">slice(int p_begin, int p_end, int p_step = 1, bool p_deep = false) const : Array</text><ellipse cx="11972.59" cy="528.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="11981.59" y="531.3276">min() const : Variant</text><ellipse cx="11972.59" cy="540.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="11981.59" y="544.1323">max() const : Variant</text><ellipse cx="11972.59" cy="553.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="11981.59" y="556.937">id() const : const void *</text><ellipse cx="11972.59" cy="566.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="11981.59" y="569.7417">Array(const Array &amp; p_from) : void</text><ellipse cx="11972.59" cy="579.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="11981.59" y="582.5464">Array() : void</text><ellipse cx="11972.59" cy="592.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="11981.59" y="595.3511">~Array() : void</text></a><!--MD5=[5a779d11372386480685e002af2832e5]
class C_0000945411446247634027--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L126" target="_top" title="String" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L126" xlink:show="new" xlink:title="String" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="2288.8203" id="C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.5;" width="608" x="34682.59" y="14589.9531"/><ellipse cx="34963.84" cy="14605.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34966.8088,14611.5938 Q34966.2306,14611.8906 34965.59,14612.0313 Q34964.9494,14612.1875 34964.2463,14612.1875 Q34961.7463,14612.1875 34960.4181,14610.5469 Q34959.1056,14608.8906 34959.1056,14605.7656 Q34959.1056,14602.6406 34960.4181,14600.9844 Q34961.7463,14599.3281 34964.2463,14599.3281 Q34964.9494,14599.3281 34965.59,14599.4844 Q34966.2463,14599.6406 34966.8088,14599.9375 L34966.8088,14602.6563 Q34966.1838,14602.0781 34965.59,14601.8125 Q34964.9963,14601.5313 34964.3713,14601.5313 Q34963.0275,14601.5313 34962.34,14602.6094 Q34961.6525,14603.6719 34961.6525,14605.7656 Q34961.6525,14607.8594 34962.34,14608.9375 Q34963.0275,14610 34964.3713,14610 Q34964.9963,14610 34965.59,14609.7344 Q34966.1838,14609.4531 34966.8088,14608.875 L34966.8088,14611.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="34984.34" y="14610.1074">String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="34683.59" x2="35289.59" y1="14621.9531" y2="14621.9531"/><ellipse cx="34693.59" cy="14632.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="34702.59" y="14636.1636">npos : enum</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" target="_top" title="invalid_node_name_characters" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" xlink:show="new" xlink:title="invalid_node_name_characters" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="34688.59" y="14640.7578"/><ellipse cx="34693.59" cy="14645.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" target="_top" title="invalid_node_name_characters" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345" xlink:show="new" xlink:title="invalid_node_name_characters" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="34702.59" y="14648.9683">invalid_node_name_characters : const String</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="34683.59" x2="35289.59" y1="14655.5625" y2="14655.5625"/><ellipse cx="34693.59" cy="14666.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="34702.59" y="14669.7729">ptrw() : CharType *</text><ellipse cx="34693.59" cy="14679.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="34702.59" y="14682.5776">ptr() const : const CharType *</text><ellipse cx="34693.59" cy="14692.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="34702.59" y="14695.3823">remove(int p_index) : void</text><ellipse cx="34693.59" cy="14704.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="34702.59" y="14708.187">clear() : void</text><ellipse cx="34693.59" cy="14717.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="34702.59" y="14720.9917">get(int p_index) const : CharType</text><ellipse cx="34693.59" cy="14730.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="34702.59" y="14733.7964">set(int p_index, const CharType &amp; p_elem) : void</text><ellipse cx="34693.59" cy="14743.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="34702.59" y="14746.6011">size() const : int</text><ellipse cx="34693.59" cy="14756.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="34702.59" y="14759.4058">resize(int p_size) : Error</text><ellipse cx="34693.59" cy="14769" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="34702.59" y="14772.2104">operator[](int p_index) const : const CharType &amp;</text><ellipse cx="34693.59" cy="14781.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="34702.59" y="14785.0151">operator[](int p_index) : CharProxy&lt;CharType&gt;</text><ellipse cx="34693.59" cy="14794.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="34702.59" y="14797.8198">operator==(const String &amp; p_str) const : bool</text><ellipse cx="34693.59" cy="14807.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="34702.59" y="14810.6245">operator!=(const String &amp; p_str) const : bool</text><ellipse cx="34693.59" cy="14820.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="34702.59" y="14823.4292">operator+(const String &amp; p_str) const : String</text><ellipse cx="34693.59" cy="14833.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="34702.59" y="14836.2339">operator+=(const String &amp; ) : String &amp;</text><ellipse cx="34693.59" cy="14845.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="34702.59" y="14849.0386">operator+=(CharType p_char) : String &amp;</text><ellipse cx="34693.59" cy="14858.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="34702.59" y="14861.8433">operator+=(const char * p_str) : String &amp;</text><ellipse cx="34693.59" cy="14871.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="34702.59" y="14874.6479">operator+=(const CharType * p_str) : String &amp;</text><ellipse cx="34693.59" cy="14884.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="34702.59" y="14887.4526">operator=(const char * p_str) : void</text><ellipse cx="34693.59" cy="14897.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="34702.59" y="14900.2573">operator=(const CharType * p_str) : void</text><ellipse cx="34693.59" cy="14909.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="34702.59" y="14913.062">operator==(const char * p_str) const : bool</text><ellipse cx="34693.59" cy="14922.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="34702.59" y="14925.8667">operator==(const CharType * p_str) const : bool</text><ellipse cx="34693.59" cy="14935.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="34702.59" y="14938.6714">operator==(const StrRange &amp; p_str_range) const : bool</text><ellipse cx="34693.59" cy="14948.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="34702.59" y="14951.4761">operator!=(const char * p_str) const : bool</text><ellipse cx="34693.59" cy="14961.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="34702.59" y="14964.2808">operator!=(const CharType * p_str) const : bool</text><ellipse cx="34693.59" cy="14973.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="34702.59" y="14977.0854">operator&lt;(const CharType * p_str) const : bool</text><ellipse cx="34693.59" cy="14986.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="34702.59" y="14989.8901">operator&lt;(const char * p_str) const : bool</text><ellipse cx="34693.59" cy="14999.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="34702.59" y="15002.6948">operator&lt;(const String &amp; p_str) const : bool</text><ellipse cx="34693.59" cy="15012.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="34702.59" y="15015.4995">operator&lt;=(const String &amp; p_str) const : bool</text><ellipse cx="34693.59" cy="15025.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="34702.59" y="15028.3042">casecmp_to(const String &amp; p_str) const : signed char</text><ellipse cx="34693.59" cy="15037.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="34702.59" y="15041.1089">nocasecmp_to(const String &amp; p_str) const : signed char</text><ellipse cx="34693.59" cy="15050.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="34702.59" y="15053.9136">naturalnocasecmp_to(const String &amp; p_str) const : signed char</text><ellipse cx="34693.59" cy="15063.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="34702.59" y="15066.7183">c_str() const : const CharType *</text><ellipse cx="34693.59" cy="15076.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="34702.59" y="15079.5229">length() const : int</text><ellipse cx="34693.59" cy="15089.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="34702.59" y="15092.3276">substr(int p_from, int p_chars = -1) const : String</text><ellipse cx="34693.59" cy="15101.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="34702.59" y="15105.1323">find(const String &amp; p_str, int p_from = 0) const : int</text><ellipse cx="34693.59" cy="15114.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="34702.59" y="15117.937">find(const char * p_str, int p_from = 0) const : int</text><ellipse cx="34693.59" cy="15127.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="34702.59" y="15130.7417">find_char(const CharType &amp; p_char, int p_from = 0) const : int</text><ellipse cx="34693.59" cy="15140.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="34702.59" y="15143.5464">find_last(const String &amp; p_str) const : int</text><ellipse cx="34693.59" cy="15153.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="34702.59" y="15156.3511">findn(const String &amp; p_str, int p_from = 0) const : int</text><ellipse cx="34693.59" cy="15165.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="34702.59" y="15169.1558">rfind(const String &amp; p_str, int p_from = -1) const : int</text><ellipse cx="34693.59" cy="15178.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="34702.59" y="15181.9604">rfindn(const String &amp; p_str, int p_from = -1) const : int</text><ellipse cx="34693.59" cy="15191.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="492" x="34702.59" y="15194.7651">findmk(const Vector&lt;String&gt; &amp; p_keys, int p_from = 0, int * r_key = __null) const : int</text><ellipse cx="34693.59" cy="15204.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="34702.59" y="15207.5698">match(const String &amp; p_wildcard) const : bool</text><ellipse cx="34693.59" cy="15217.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="34702.59" y="15220.3745">matchn(const String &amp; p_wildcard) const : bool</text><ellipse cx="34693.59" cy="15229.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="34702.59" y="15233.1792">begins_with(const String &amp; p_string) const : bool</text><ellipse cx="34693.59" cy="15242.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="34702.59" y="15245.9839">begins_with(const char * p_string) const : bool</text><ellipse cx="34693.59" cy="15255.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="34702.59" y="15258.7886">ends_with(const String &amp; p_string) const : bool</text><ellipse cx="34693.59" cy="15268.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="34702.59" y="15271.5933">is_enclosed_in(const String &amp; p_string) const : bool</text><ellipse cx="34693.59" cy="15281.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="34702.59" y="15284.3979">is_subsequence_of(const String &amp; p_string) const : bool</text><ellipse cx="34693.59" cy="15293.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="34702.59" y="15297.2026">is_subsequence_ofi(const String &amp; p_string) const : bool</text><ellipse cx="34693.59" cy="15306.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="34702.59" y="15310.0073">is_quoted() const : bool</text><ellipse cx="34693.59" cy="15319.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="34702.59" y="15322.812">bigrams() const : Vector&lt;String&gt;</text><ellipse cx="34693.59" cy="15332.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="34702.59" y="15335.6167">similarity(const String &amp; p_string) const : float</text><ellipse cx="34693.59" cy="15345.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="416" x="34702.59" y="15348.4214">format(const Variant &amp; values, String placeholder = "{_}") const : String</text><ellipse cx="34693.59" cy="15358.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="34702.59" y="15361.2261">replace_first(const String &amp; p_key, const String &amp; p_with) const : String</text><ellipse cx="34693.59" cy="15370.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="34702.59" y="15374.0308">replace(const String &amp; p_key, const String &amp; p_with) const : String</text><ellipse cx="34693.59" cy="15383.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="34702.59" y="15386.8354">replace(const char * p_key, const char * p_with) const : String</text><ellipse cx="34693.59" cy="15396.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="34702.59" y="15399.6401">replacen(const String &amp; p_key, const String &amp; p_with) const : String</text><ellipse cx="34693.59" cy="15409.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="34702.59" y="15412.4448">repeat(int p_count) const : String</text><ellipse cx="34693.59" cy="15422.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="34702.59" y="15425.2495">insert(int p_at_pos, const String &amp; p_string) const : String</text><ellipse cx="34693.59" cy="15434.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="34702.59" y="15438.0542">pad_decimals(int p_digits) const : String</text><ellipse cx="34693.59" cy="15447.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="34702.59" y="15450.8589">pad_zeros(int p_digits) const : String</text><ellipse cx="34693.59" cy="15460.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="34702.59" y="15463.6636">trim_prefix(const String &amp; p_prefix) const : String</text><ellipse cx="34693.59" cy="15473.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="34702.59" y="15476.4683">trim_suffix(const String &amp; p_suffix) const : String</text><ellipse cx="34693.59" cy="15486.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="34702.59" y="15489.2729">lpad(int min_length, const String &amp; character = " ") const : String</text><ellipse cx="34693.59" cy="15498.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="34702.59" y="15502.0776">rpad(int min_length, const String &amp; character = " ") const : String</text><ellipse cx="34693.59" cy="15511.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="34702.59" y="15514.8823">sprintf(const Array &amp; values, bool * error) const : String</text><ellipse cx="34693.59" cy="15524.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="34702.59" y="15527.687">quote(String quotechar = "\"") const : String</text><ellipse cx="34693.59" cy="15537.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="34702.59" y="15540.4917">unquote() const : String</text><ellipse cx="34693.59" cy="15550.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="34702.59" y="15553.2964">num(double p_num, int p_decimals = -1) : String</text><ellipse cx="34693.59" cy="15562.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="34702.59" y="15566.1011">num_scientific(double p_num) : String</text><ellipse cx="34693.59" cy="15575.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="34702.59" y="15578.9058">num_real(double p_num) : String</text><ellipse cx="34693.59" cy="15588.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="437" x="34702.59" y="15591.7104">num_int64(int64_t p_num, int base = 10, bool capitalize_hex = false) : String</text><ellipse cx="34693.59" cy="15601.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="451" x="34702.59" y="15604.5151">num_uint64(uint64_t p_num, int base = 10, bool capitalize_hex = false) : String</text><ellipse cx="34693.59" cy="15614.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="34702.59" y="15617.3198">chr(CharType p_char) : String</text><ellipse cx="34693.59" cy="15626.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="34702.59" y="15630.1245">md5(const uint8_t * p_md5) : String</text><ellipse cx="34693.59" cy="15639.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="351" x="34702.59" y="15642.9292">hex_encode_buffer(const uint8_t * p_buffer, int p_len) : String</text><ellipse cx="34693.59" cy="15652.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="34702.59" y="15655.7339">is_numeric() const : bool</text><ellipse cx="34693.59" cy="15665.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="34702.59" y="15668.5386">to_double() const : double</text><ellipse cx="34693.59" cy="15678.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="34702.59" y="15681.3433">to_float() const : float</text><ellipse cx="34693.59" cy="15690.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="34702.59" y="15694.1479">hex_to_int(bool p_with_prefix = true) const : int</text><ellipse cx="34693.59" cy="15703.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="34702.59" y="15706.9526">to_int() const : int</text><ellipse cx="34693.59" cy="15716.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="34702.59" y="15719.7573">hex_to_int64(bool p_with_prefix = true) const : int64_t</text><ellipse cx="34693.59" cy="15729.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="34702.59" y="15732.562">bin_to_int64(bool p_with_prefix = true) const : int64_t</text><ellipse cx="34693.59" cy="15742.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="34702.59" y="15745.3667">to_int64() const : int64_t</text><ellipse cx="34693.59" cy="15754.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="34702.59" y="15758.1714">to_int(const char * p_str, int p_len = -1) : int</text><ellipse cx="34693.59" cy="15767.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="216" x="34702.59" y="15770.9761">to_double(const char * p_str) : double</text><ellipse cx="34693.59" cy="15780.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="443" x="34702.59" y="15783.7808">to_double(const CharType * p_str, const CharType ** r_end = __null) : double</text><ellipse cx="34693.59" cy="15793.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="305" x="34702.59" y="15796.5854">to_int(const CharType * p_str, int p_len = -1) : int64_t</text><ellipse cx="34693.59" cy="15806.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="34702.59" y="15809.3901">capitalize() const : String</text><ellipse cx="34693.59" cy="15818.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="34702.59" y="15822.1948">camelcase_to_underscore(bool lowercase = true) const : String</text><ellipse cx="34693.59" cy="15831.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="34702.59" y="15834.9995">get_slice_count(String p_splitter) const : int</text><ellipse cx="34693.59" cy="15844.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="34702.59" y="15847.8042">get_slice(String p_splitter, int p_slice) const : String</text><ellipse cx="34693.59" cy="15857.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="34702.59" y="15860.6089">get_slicec(CharType p_splitter, int p_slice) const : String</text><ellipse cx="34693.59" cy="15870.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="34702.59" y="15873.4136">split(const String &amp; p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector&lt;String&gt;</text><ellipse cx="34693.59" cy="15883.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="34702.59" y="15886.2183">rsplit(const String &amp; p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector&lt;String&gt;</text><ellipse cx="34693.59" cy="15895.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="34702.59" y="15899.0229">split_spaces() const : Vector&lt;String&gt;</text><ellipse cx="34693.59" cy="15908.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="34702.59" y="15911.8276">split_floats(const String &amp; p_splitter, bool p_allow_empty = true) const : Vector&lt;float&gt;</text><ellipse cx="34693.59" cy="15921.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="34702.59" y="15924.6323">split_floats_mk(const Vector&lt;String&gt; &amp; p_splitters, bool p_allow_empty = true) const : Vector&lt;float&gt;</text><ellipse cx="34693.59" cy="15934.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="34702.59" y="15937.437">split_ints(const String &amp; p_splitter, bool p_allow_empty = true) const : Vector&lt;int&gt;</text><ellipse cx="34693.59" cy="15947.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="34702.59" y="15950.2417">split_ints_mk(const Vector&lt;String&gt; &amp; p_splitters, bool p_allow_empty = true) const : Vector&lt;int&gt;</text><ellipse cx="34693.59" cy="15959.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="34702.59" y="15963.0464">join(Vector&lt;String&gt; parts) : String</text><ellipse cx="34693.59" cy="15972.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="261" x="34702.59" y="15975.8511">char_uppercase(CharType p_char) : CharType</text><ellipse cx="34693.59" cy="15985.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="259" x="34702.59" y="15988.6558">char_lowercase(CharType p_char) : CharType</text><ellipse cx="34693.59" cy="15998.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="34702.59" y="16001.4604">to_upper() const : String</text><ellipse cx="34693.59" cy="16011.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="34702.59" y="16014.2651">to_lower() const : String</text><ellipse cx="34693.59" cy="16023.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397" x="34702.59" y="16027.0698">count(const String &amp; p_string, int p_from = 0, int p_to = 0) const : int</text><ellipse cx="34693.59" cy="16036.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="404" x="34702.59" y="16039.8745">countn(const String &amp; p_string, int p_from = 0, int p_to = 0) const : int</text><ellipse cx="34693.59" cy="16049.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="34702.59" y="16052.6792">left(int p_pos) const : String</text><ellipse cx="34693.59" cy="16062.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="34702.59" y="16065.4839">right(int p_pos) const : String</text><ellipse cx="34693.59" cy="16075.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="34702.59" y="16078.2886">dedent() const : String</text><ellipse cx="34693.59" cy="16087.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="34702.59" y="16091.0933">strip_edges(bool left = true, bool right = true) const : String</text><ellipse cx="34693.59" cy="16100.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="34702.59" y="16103.8979">strip_escapes() const : String</text><ellipse cx="34693.59" cy="16113.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="34702.59" y="16116.7026">lstrip(const String &amp; p_chars) const : String</text><ellipse cx="34693.59" cy="16126.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="34702.59" y="16129.5073">rstrip(const String &amp; p_chars) const : String</text><ellipse cx="34693.59" cy="16139.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="34702.59" y="16142.312">get_extension() const : String</text><ellipse cx="34693.59" cy="16151.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="34702.59" y="16155.1167">get_basename() const : String</text><ellipse cx="34693.59" cy="16164.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="34702.59" y="16167.9214">plus_file(const String &amp; p_file) const : String</text><ellipse cx="34693.59" cy="16177.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="34702.59" y="16180.7261">ord_at(int p_idx) const : CharType</text><ellipse cx="34693.59" cy="16190.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="34702.59" y="16193.5308">erase(int p_pos, int p_chars) : void</text><ellipse cx="34693.59" cy="16203.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="34702.59" y="16206.3354">ascii(bool p_allow_extended = false) const : CharString</text><ellipse cx="34693.59" cy="16215.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="34702.59" y="16219.1401">utf8() const : CharString</text><ellipse cx="34693.59" cy="16228.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="34702.59" y="16231.9448">parse_utf8(const char * p_utf8, int p_len = -1) : bool</text><ellipse cx="34693.59" cy="16241.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="269" x="34702.59" y="16244.7495">utf8(const char * p_utf8, int p_len = -1) : String</text><ellipse cx="34693.59" cy="16254.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="287" x="34702.59" y="16257.5542">hash(const CharType * p_cstr, int p_len) : uint32_t</text><ellipse cx="34693.59" cy="16267.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="231" x="34702.59" y="16270.3589">hash(const CharType * p_cstr) : uint32_t</text><ellipse cx="34693.59" cy="16279.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="34702.59" y="16283.1636">hash(const char * p_cstr, int p_len) : uint32_t</text><ellipse cx="34693.59" cy="16292.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="34702.59" y="16295.9683">hash(const char * p_cstr) : uint32_t</text><ellipse cx="34693.59" cy="16305.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="34702.59" y="16308.7729">hash() const : uint32_t</text><ellipse cx="34693.59" cy="16318.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="34702.59" y="16321.5776">hash64() const : uint64_t</text><ellipse cx="34693.59" cy="16331.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="34702.59" y="16334.3823">md5_text() const : String</text><ellipse cx="34693.59" cy="16343.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="34702.59" y="16347.187">sha1_text() const : String</text><ellipse cx="34693.59" cy="16356.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="34702.59" y="16359.9917">sha256_text() const : String</text><ellipse cx="34693.59" cy="16369.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="34702.59" y="16372.7964">md5_buffer() const : Vector&lt;uint8_t&gt;</text><ellipse cx="34693.59" cy="16382.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="34702.59" y="16385.6011">sha1_buffer() const : Vector&lt;uint8_t&gt;</text><ellipse cx="34693.59" cy="16395.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="34702.59" y="16398.4058">sha256_buffer() const : Vector&lt;uint8_t&gt;</text><ellipse cx="34693.59" cy="16408" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="34702.59" y="16411.2104">empty() const : bool</text><ellipse cx="34693.59" cy="16420.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="34702.59" y="16424.0151">is_abs_path() const : bool</text><ellipse cx="34693.59" cy="16433.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="34702.59" y="16436.8198">is_rel_path() const : bool</text><ellipse cx="34693.59" cy="16446.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="34702.59" y="16449.6245">is_resource_file() const : bool</text><ellipse cx="34693.59" cy="16459.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="34702.59" y="16462.4292">path_to(const String &amp; p_path) const : String</text><ellipse cx="34693.59" cy="16472.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="34702.59" y="16475.2339">path_to_file(const String &amp; p_path) const : String</text><ellipse cx="34693.59" cy="16484.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="34702.59" y="16488.0386">get_base_dir() const : String</text><ellipse cx="34693.59" cy="16497.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="34702.59" y="16500.8433">get_file() const : String</text><ellipse cx="34693.59" cy="16510.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="220" x="34702.59" y="16513.6479">humanize_size(uint64_t p_size) : String</text><ellipse cx="34693.59" cy="16523.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="34702.59" y="16526.4526">simplify_path() const : String</text><ellipse cx="34693.59" cy="16536.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="34702.59" y="16539.2573">xml_escape(bool p_escape_quotes = false) const : String</text><ellipse cx="34693.59" cy="16548.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="34702.59" y="16552.062">xml_unescape() const : String</text><ellipse cx="34693.59" cy="16561.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="34702.59" y="16564.8667">http_escape() const : String</text><ellipse cx="34693.59" cy="16574.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="34702.59" y="16577.6714">http_unescape() const : String</text><ellipse cx="34693.59" cy="16587.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="34702.59" y="16590.4761">c_escape() const : String</text><ellipse cx="34693.59" cy="16600.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="34702.59" y="16603.2808">c_escape_multiline() const : String</text><ellipse cx="34693.59" cy="16612.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="34702.59" y="16616.0854">c_unescape() const : String</text><ellipse cx="34693.59" cy="16625.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="34702.59" y="16628.8901">json_escape() const : String</text><ellipse cx="34693.59" cy="16638.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="34702.59" y="16641.6948">word_wrap(int p_chars_per_line) const : String</text><ellipse cx="34693.59" cy="16651.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="34702.59" y="16654.4995">parse_url(String &amp; r_scheme, String &amp; r_host, int &amp; r_port, String &amp; r_path) const : Error</text><ellipse cx="34693.59" cy="16664.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="34702.59" y="16667.3042">percent_encode() const : String</text><ellipse cx="34693.59" cy="16676.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="34702.59" y="16680.1089">percent_decode() const : String</text><ellipse cx="34693.59" cy="16689.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="34702.59" y="16692.9136">property_name_encode() const : String</text><ellipse cx="34693.59" cy="16702.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="34702.59" y="16705.7183">validate_node_name() const : String</text><ellipse cx="34693.59" cy="16715.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="34702.59" y="16718.5229">is_valid_identifier() const : bool</text><ellipse cx="34693.59" cy="16728.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="34702.59" y="16731.3276">is_valid_integer() const : bool</text><ellipse cx="34693.59" cy="16740.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="34702.59" y="16744.1323">is_valid_float() const : bool</text><ellipse cx="34693.59" cy="16753.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="34702.59" y="16756.937">is_valid_hex_number(bool p_with_prefix) const : bool</text><ellipse cx="34693.59" cy="16766.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="34702.59" y="16769.7417">is_valid_html_color() const : bool</text><ellipse cx="34693.59" cy="16779.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="34702.59" y="16782.5464">is_valid_ip_address() const : bool</text><ellipse cx="34693.59" cy="16792.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="34702.59" y="16795.3511">is_valid_filename() const : bool</text><ellipse cx="34693.59" cy="16804.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="34702.59" y="16808.1558">String() : void</text><ellipse cx="34693.59" cy="16817.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="34702.59" y="16820.9604">String(const String &amp; p_str) : void</text><ellipse cx="34693.59" cy="16830.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="34702.59" y="16833.7651">operator=(const String &amp; p_str) : String</text><ellipse cx="34693.59" cy="16843.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="34702.59" y="16846.5698">String(const char * p_str) : void</text><ellipse cx="34693.59" cy="16856.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="34702.59" y="16859.3745">String(const CharType * p_str, int p_clip_to_len = -1) : void</text><ellipse cx="34693.59" cy="16868.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="34702.59" y="16872.1792">String(const StrRange &amp; p_range) : void</text><!--MD5=[c9ab0454be9bc9dd8cd0824f6bdde71d]
class C_0001299121424291583786--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42" target="_top" title="Dictionary" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42" xlink:show="new" xlink:title="Dictionary" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="393.7266" id="C_0001299121424291583786" style="stroke: #A80036; stroke-width: 1.5;" width="417" x="25329.09" y="2154.9531"/><ellipse cx="25502.34" cy="2170.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25505.3088,2176.5938 Q25504.7306,2176.8906 25504.09,2177.0313 Q25503.4494,2177.1875 25502.7463,2177.1875 Q25500.2463,2177.1875 25498.9181,2175.5469 Q25497.6056,2173.8906 25497.6056,2170.7656 Q25497.6056,2167.6406 25498.9181,2165.9844 Q25500.2463,2164.3281 25502.7463,2164.3281 Q25503.4494,2164.3281 25504.09,2164.4844 Q25504.7463,2164.6406 25505.3088,2164.9375 L25505.3088,2167.6563 Q25504.6838,2167.0781 25504.09,2166.8125 Q25503.4963,2166.5313 25502.8713,2166.5313 Q25501.5275,2166.5313 25500.84,2167.6094 Q25500.1525,2168.6719 25500.1525,2170.7656 Q25500.1525,2172.8594 25500.84,2173.9375 Q25501.5275,2175 25502.8713,2175 Q25503.4963,2175 25504.09,2174.7344 Q25504.6838,2174.4531 25505.3088,2173.875 L25505.3088,2176.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="25522.84" y="2175.1074">Dictionary</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25330.09" x2="25745.09" y1="2186.9531" y2="2186.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25330.09" x2="25745.09" y1="2194.9531" y2="2194.9531"/><ellipse cx="25340.09" cy="2205.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="25349.09" y="2209.1636">get_key_list(List&lt;Variant&gt; * p_keys) const : void</text><ellipse cx="25340.09" cy="2218.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="25349.09" y="2221.9683">get_key_at_index(int p_index) const : Variant</text><ellipse cx="25340.09" cy="2231.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="25349.09" y="2234.7729">get_value_at_index(int p_index) const : Variant</text><ellipse cx="25340.09" cy="2244.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="25349.09" y="2247.5776">operator[](const Variant &amp; p_key) : Variant &amp;</text><ellipse cx="25340.09" cy="2257.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="25349.09" y="2260.3823">operator[](const Variant &amp; p_key) const : const Variant &amp;</text><ellipse cx="25340.09" cy="2269.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="25349.09" y="2273.187">getptr(const Variant &amp; p_key) const : const Variant *</text><ellipse cx="25340.09" cy="2282.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="25349.09" y="2285.9917">getptr(const Variant &amp; p_key) : Variant *</text><ellipse cx="25340.09" cy="2295.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="25349.09" y="2298.7964">get_valid(const Variant &amp; p_key) const : Variant</text><ellipse cx="25340.09" cy="2308.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="25349.09" y="2311.6011">get(const Variant &amp; p_key, const Variant &amp; p_default) const : Variant</text><ellipse cx="25340.09" cy="2321.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="25349.09" y="2324.4058">size() const : int</text><ellipse cx="25340.09" cy="2334" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="25349.09" y="2337.2104">empty() const : bool</text><ellipse cx="25340.09" cy="2346.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="25349.09" y="2350.0151">clear() : void</text><ellipse cx="25340.09" cy="2359.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="25349.09" y="2362.8198">has(const Variant &amp; p_key) const : bool</text><ellipse cx="25340.09" cy="2372.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="25349.09" y="2375.6245">has_all(const Array &amp; p_keys) const : bool</text><ellipse cx="25340.09" cy="2385.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="25349.09" y="2388.4292">erase(const Variant &amp; p_key) : bool</text><ellipse cx="25340.09" cy="2398.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="25349.09" y="2401.2339">operator==(const Dictionary &amp; p_dictionary) const : bool</text><ellipse cx="25340.09" cy="2410.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="25349.09" y="2414.0386">operator!=(const Dictionary &amp; p_dictionary) const : bool</text><ellipse cx="25340.09" cy="2423.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="25349.09" y="2426.8433">hash() const : uint32_t</text><ellipse cx="25340.09" cy="2436.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="25349.09" y="2439.6479">operator=(const Dictionary &amp; p_dictionary) : void</text><ellipse cx="25340.09" cy="2449.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="25349.09" y="2452.4526">next(const Variant * p_key = __null) const : const Variant *</text><ellipse cx="25340.09" cy="2462.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="25349.09" y="2465.2573">keys() const : Array</text><ellipse cx="25340.09" cy="2474.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="25349.09" y="2478.062">values() const : Array</text><ellipse cx="25340.09" cy="2487.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="25349.09" y="2490.8667">duplicate(bool p_deep = false) const : Dictionary</text><ellipse cx="25340.09" cy="2500.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="25349.09" y="2503.6714">id() const : const void *</text><ellipse cx="25340.09" cy="2513.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="25349.09" y="2516.4761">Dictionary(const Dictionary &amp; p_from) : void</text><ellipse cx="25340.09" cy="2526.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="25349.09" y="2529.2808">Dictionary() : void</text><ellipse cx="25340.09" cy="2538.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="25349.09" y="2542.0854">~Dictionary() : void</text></a><!--MD5=[bdf481e0258441d9ea4c4f618bd16c94]
class C_0001858199404643284193--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44" target="_top" title="StringName" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44" xlink:show="new" xlink:title="StringName" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="304.0938" id="C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.5;" width="346" x="17161.59" y="15582.4531"/><ellipse cx="17293.84" cy="15598.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17296.8088,15604.0938 Q17296.2306,15604.3906 17295.59,15604.5313 Q17294.9494,15604.6875 17294.2463,15604.6875 Q17291.7463,15604.6875 17290.4181,15603.0469 Q17289.1056,15601.3906 17289.1056,15598.2656 Q17289.1056,15595.1406 17290.4181,15593.4844 Q17291.7463,15591.8281 17294.2463,15591.8281 Q17294.9494,15591.8281 17295.59,15591.9844 Q17296.2463,15592.1406 17296.8088,15592.4375 L17296.8088,15595.1563 Q17296.1838,15594.5781 17295.59,15594.3125 Q17294.9963,15594.0313 17294.3713,15594.0313 Q17293.0275,15594.0313 17292.34,15595.1094 Q17291.6525,15596.1719 17291.6525,15598.2656 Q17291.6525,15600.3594 17292.34,15601.4375 Q17293.0275,15602.5 17294.3713,15602.5 Q17294.9963,15602.5 17295.59,15602.2344 Q17296.1838,15601.9531 17296.8088,15601.375 L17296.8088,15604.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="17314.34" y="15602.6074">StringName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17162.59" x2="17506.59" y1="15614.4531" y2="15614.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="17162.59" x2="17506.59" y1="15622.4531" y2="15622.4531"/><ellipse cx="17172.59" cy="15633.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="17181.59" y="15636.6636">operator const void *() const : const void *</text><ellipse cx="17172.59" cy="15646.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="17181.59" y="15649.4683">operator==(const String &amp; p_name) const : bool</text><ellipse cx="17172.59" cy="15659.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="17181.59" y="15662.2729">operator==(const char * p_name) const : bool</text><ellipse cx="17172.59" cy="15671.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="17181.59" y="15675.0776">operator!=(const String &amp; p_name) const : bool</text><ellipse cx="17172.59" cy="15684.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="17181.59" y="15687.8823">operator&lt;(const StringName &amp; p_name) const : bool</text><ellipse cx="17172.59" cy="15697.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="17181.59" y="15700.687">operator==(const StringName &amp; p_name) const : bool</text><ellipse cx="17172.59" cy="15710.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="17181.59" y="15713.4917">hash() const : uint32_t</text><ellipse cx="17172.59" cy="15723.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="17181.59" y="15726.2964">data_unique_pointer() const : const void *</text><ellipse cx="17172.59" cy="15735.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="17181.59" y="15739.1011">operator!=(const StringName &amp; p_name) const : bool</text><ellipse cx="17172.59" cy="15748.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="17181.59" y="15751.9058">operator String() const : String</text><ellipse cx="17172.59" cy="15761.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="245" x="17181.59" y="15764.7104">search(const char * p_name) : StringName</text><ellipse cx="17172.59" cy="15774.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="17181.59" y="15777.5151">search(const CharType * p_name) : StringName</text><ellipse cx="17172.59" cy="15787.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="17181.59" y="15790.3198">search(const String &amp; p_name) : StringName</text><ellipse cx="17172.59" cy="15799.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="17181.59" y="15803.1245">operator=(const StringName &amp; p_name) : void</text><ellipse cx="17172.59" cy="15812.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="17181.59" y="15815.9292">StringName(const char * p_name) : void</text><ellipse cx="17172.59" cy="15825.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="17181.59" y="15828.7339">StringName(const StringName &amp; p_name) : void</text><ellipse cx="17172.59" cy="15838.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="17181.59" y="15841.5386">StringName(const String &amp; p_name) : void</text><ellipse cx="17172.59" cy="15851.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="17181.59" y="15854.3433">StringName(const StaticCString &amp; p_static_string) : void</text><ellipse cx="17172.59" cy="15863.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="17181.59" y="15867.1479">StringName() : void</text><ellipse cx="17172.59" cy="15876.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="17181.59" y="15879.9526">~StringName() : void</text></a><!--MD5=[c2088384ac946f1d792706371e974b46]
class C_0001169846630986447699--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0001169846630986447699" style="stroke: #A80036; stroke-width: 1.5;" width="150" x="4861.59" y="4747.4531"/><ellipse cx="4876.59" cy="4763.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4879.5588,4769.0938 Q4878.9806,4769.3906 4878.34,4769.5313 Q4877.6994,4769.6875 4876.9963,4769.6875 Q4874.4963,4769.6875 4873.1681,4768.0469 Q4871.8556,4766.3906 4871.8556,4763.2656 Q4871.8556,4760.1406 4873.1681,4758.4844 Q4874.4963,4756.8281 4876.9963,4756.8281 Q4877.6994,4756.8281 4878.34,4756.9844 Q4878.9963,4757.1406 4879.5588,4757.4375 L4879.5588,4760.1563 Q4878.9338,4759.5781 4878.34,4759.3125 Q4877.7463,4759.0313 4877.1213,4759.0313 Q4875.7775,4759.0313 4875.09,4760.1094 Q4874.4025,4761.1719 4874.4025,4763.2656 Q4874.4025,4765.3594 4875.09,4766.4375 Q4875.7775,4767.5 4877.1213,4767.5 Q4877.7463,4767.5 4878.34,4767.2344 Q4878.9338,4766.9531 4879.5588,4766.375 L4879.5588,4769.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="4890.59" y="4767.6074">Vector</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="75" x="4939.59" y="4744.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="73" x="4940.59" y="4756.5918">StringName</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4862.59" x2="5010.59" y1="4779.4531" y2="4779.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4862.59" x2="5010.59" y1="4787.4531" y2="4787.4531"/><!--MD5=[69f431c87134c5ebe27607fdbce24f25]
class C_0001768230974934037264--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/node_path.h#L37" target="_top" title="NodePath" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/node_path.h#L37" xlink:show="new" xlink:title="NodePath" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="393.7266" id="C_0001768230974934037264" style="stroke: #A80036; stroke-width: 1.5;" width="674" x="28510.59" y="12966.4531"/><ellipse cx="28812.34" cy="12982.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28815.3088,12988.0938 Q28814.7306,12988.3906 28814.09,12988.5313 Q28813.4494,12988.6875 28812.7463,12988.6875 Q28810.2463,12988.6875 28808.9181,12987.0469 Q28807.6056,12985.3906 28807.6056,12982.2656 Q28807.6056,12979.1406 28808.9181,12977.4844 Q28810.2463,12975.8281 28812.7463,12975.8281 Q28813.4494,12975.8281 28814.09,12975.9844 Q28814.7463,12976.1406 28815.3088,12976.4375 L28815.3088,12979.1563 Q28814.6838,12978.5781 28814.09,12978.3125 Q28813.4963,12978.0313 28812.8713,12978.0313 Q28811.5275,12978.0313 28810.84,12979.1094 Q28810.1525,12980.1719 28810.1525,12982.2656 Q28810.1525,12984.3594 28810.84,12985.4375 Q28811.5275,12986.5 28812.8713,12986.5 Q28813.4963,12986.5 28814.09,12986.2344 Q28814.6838,12985.9531 28815.3088,12985.375 L28815.3088,12988.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="28832.84" y="12986.6074">NodePath</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28511.59" x2="29183.59" y1="12998.4531" y2="12998.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28511.59" x2="29183.59" y1="13006.4531" y2="13006.4531"/><ellipse cx="28521.59" cy="13017.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="28530.59" y="13020.6636">get_sname() const : StringName</text><ellipse cx="28521.59" cy="13030.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="28530.59" y="13033.4683">is_absolute() const : bool</text><ellipse cx="28521.59" cy="13043.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="28530.59" y="13046.2729">get_name_count() const : int</text><ellipse cx="28521.59" cy="13055.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="28530.59" y="13059.0776">get_name(int p_idx) const : StringName</text><ellipse cx="28521.59" cy="13068.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="28530.59" y="13071.8823">get_subname_count() const : int</text><ellipse cx="28521.59" cy="13081.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="28530.59" y="13084.687">get_subname(int p_idx) const : StringName</text><ellipse cx="28521.59" cy="13094.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="28530.59" y="13097.4917">get_names() const : Vector&lt;StringName&gt;</text><ellipse cx="28521.59" cy="13107.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="28530.59" y="13110.2964">get_subnames() const : Vector&lt;StringName&gt;</text><ellipse cx="28521.59" cy="13119.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="28530.59" y="13123.1011">get_concatenated_subnames() const : StringName</text><ellipse cx="28521.59" cy="13132.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="28530.59" y="13135.9058">rel_path_to(const NodePath &amp; p_np) const : NodePath</text><ellipse cx="28521.59" cy="13145.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="28530.59" y="13148.7104">get_as_property_path() const : NodePath</text><ellipse cx="28521.59" cy="13158.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="28530.59" y="13161.5151">prepend_period() : void</text><ellipse cx="28521.59" cy="13171.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="28530.59" y="13174.3198">get_parent() const : NodePath</text><ellipse cx="28521.59" cy="13183.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="28530.59" y="13187.1245">hash() const : uint32_t</text><ellipse cx="28521.59" cy="13196.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="28530.59" y="13199.9292">operator String() const : String</text><ellipse cx="28521.59" cy="13209.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="28530.59" y="13212.7339">is_empty() const : bool</text><ellipse cx="28521.59" cy="13222.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="28530.59" y="13225.5386">operator==(const NodePath &amp; p_path) const : bool</text><ellipse cx="28521.59" cy="13235.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="28530.59" y="13238.3433">operator!=(const NodePath &amp; p_path) const : bool</text><ellipse cx="28521.59" cy="13247.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="28530.59" y="13251.1479">operator=(const NodePath &amp; p_path) : void</text><ellipse cx="28521.59" cy="13260.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="28530.59" y="13263.9526">simplify() : void</text><ellipse cx="28521.59" cy="13273.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="28530.59" y="13276.7573">simplified() const : NodePath</text><ellipse cx="28521.59" cy="13286.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="28530.59" y="13289.562">NodePath(const Vector&lt;StringName&gt; &amp; p_path, bool p_absolute) : void</text><ellipse cx="28521.59" cy="13299.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="648" x="28530.59" y="13302.3667">NodePath(const Vector&lt;StringName&gt; &amp; p_path, const Vector&lt;StringName&gt; &amp; p_subpath, bool p_absolute) : void</text><ellipse cx="28521.59" cy="13311.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="28530.59" y="13315.1714">NodePath(const NodePath &amp; p_path) : void</text><ellipse cx="28521.59" cy="13324.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="28530.59" y="13327.9761">NodePath(const String &amp; p_path) : void</text><ellipse cx="28521.59" cy="13337.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="28530.59" y="13340.7808">NodePath() : void</text><ellipse cx="28521.59" cy="13350.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="28530.59" y="13353.5854">~NodePath() : void</text></a><!--MD5=[5ff974ea4457aef713dc6a6e7de5ffac]
class C_0002025812040042972946--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41" target="_top" title="RefPtr" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41" xlink:show="new" xlink:title="RefPtr" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0002025812040042972946" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="28414.59" y="2263.9531"/><ellipse cx="28542.34" cy="2279.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28545.3088,2285.5938 Q28544.7306,2285.8906 28544.09,2286.0313 Q28543.4494,2286.1875 28542.7463,2286.1875 Q28540.2463,2286.1875 28538.9181,2284.5469 Q28537.6056,2282.8906 28537.6056,2279.7656 Q28537.6056,2276.6406 28538.9181,2274.9844 Q28540.2463,2273.3281 28542.7463,2273.3281 Q28543.4494,2273.3281 28544.09,2273.4844 Q28544.7463,2273.6406 28545.3088,2273.9375 L28545.3088,2276.6563 Q28544.6838,2276.0781 28544.09,2275.8125 Q28543.4963,2275.5313 28542.8713,2275.5313 Q28541.5275,2275.5313 28540.84,2276.6094 Q28540.1525,2277.6719 28540.1525,2279.7656 Q28540.1525,2281.8594 28540.84,2282.9375 Q28541.5275,2284 28542.8713,2284 Q28543.4963,2284 28544.09,2283.7344 Q28544.6838,2283.4531 28545.3088,2282.875 L28545.3088,2285.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="28562.84" y="2284.1074">RefPtr</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28415.59" x2="28715.59" y1="2295.9531" y2="2295.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28415.59" x2="28715.59" y1="2303.9531" y2="2303.9531"/><ellipse cx="28425.59" cy="2314.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="28434.59" y="2318.1636">is_null() const : bool</text><ellipse cx="28425.59" cy="2327.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="28434.59" y="2330.9683">operator=(const RefPtr &amp; p_other) : void</text><ellipse cx="28425.59" cy="2340.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="28434.59" y="2343.7729">operator==(const RefPtr &amp; p_other) const : bool</text><ellipse cx="28425.59" cy="2353.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="28434.59" y="2356.5776">operator!=(const RefPtr &amp; p_other) const : bool</text><ellipse cx="28425.59" cy="2366.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="28434.59" y="2369.3823">get_rid() const : RID</text><ellipse cx="28425.59" cy="2378.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="28434.59" y="2382.187">unref() : void</text><ellipse cx="28425.59" cy="2391.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="28434.59" y="2394.9917">get_data() const : void *</text><ellipse cx="28425.59" cy="2404.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="28434.59" y="2407.7964">RefPtr(const RefPtr &amp; p_other) : void</text><ellipse cx="28425.59" cy="2417.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="28434.59" y="2420.6011">RefPtr() : void</text><ellipse cx="28425.59" cy="2430.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="28434.59" y="2433.4058">~RefPtr() : void</text></a><!--MD5=[81c07ba5b31299569f70a78c93d1c952]
class C_0000367042517371617856--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.5;" width="122" x="3081.59" y="13139.4531"/><ellipse cx="3096.59" cy="13155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3099.5588,13161.0938 Q3098.9806,13161.3906 3098.34,13161.5313 Q3097.6994,13161.6875 3096.9963,13161.6875 Q3094.4963,13161.6875 3093.1681,13160.0469 Q3091.8556,13158.3906 3091.8556,13155.2656 Q3091.8556,13152.1406 3093.1681,13150.4844 Q3094.4963,13148.8281 3096.9963,13148.8281 Q3097.6994,13148.8281 3098.34,13148.9844 Q3098.9963,13149.1406 3099.5588,13149.4375 L3099.5588,13152.1563 Q3098.9338,13151.5781 3098.34,13151.3125 Q3097.7463,13151.0313 3097.1213,13151.0313 Q3095.7775,13151.0313 3095.09,13152.1094 Q3094.4025,13153.1719 3094.4025,13155.2656 Q3094.4025,13157.3594 3095.09,13158.4375 Q3095.7775,13159.5 3097.1213,13159.5 Q3097.7463,13159.5 3098.34,13159.2344 Q3098.9338,13158.9531 3099.5588,13158.375 L3099.5588,13161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="3110.59" y="13159.6074">Vector</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="47" x="3159.59" y="13136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="45" x="3160.59" y="13148.5918">Variant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3082.59" x2="3202.59" y1="13171.4531" y2="13171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3082.59" x2="3202.59" y1="13179.4531" y2="13179.4531"/><!--MD5=[24355c39fbd6cf2d4f795e1435793478]
class C_0001789265459324510060--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0001789265459324510060" style="stroke: #A80036; stroke-width: 1.5;" width="128" x="12686.59" y="291.4531"/><ellipse cx="12701.59" cy="307.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12704.5588,313.0938 Q12703.9806,313.3906 12703.34,313.5313 Q12702.6994,313.6875 12701.9963,313.6875 Q12699.4963,313.6875 12698.1681,312.0469 Q12696.8556,310.3906 12696.8556,307.2656 Q12696.8556,304.1406 12698.1681,302.4844 Q12699.4963,300.8281 12701.9963,300.8281 Q12702.6994,300.8281 12703.34,300.9844 Q12703.9963,301.1406 12704.5588,301.4375 L12704.5588,304.1563 Q12703.9338,303.5781 12703.34,303.3125 Q12702.7463,303.0313 12702.1213,303.0313 Q12700.7775,303.0313 12700.09,304.1094 Q12699.4025,305.1719 12699.4025,307.2656 Q12699.4025,309.3594 12700.09,310.4375 Q12700.7775,311.5 12702.1213,311.5 Q12702.7463,311.5 12703.34,311.2344 Q12703.9338,310.9531 12704.5588,310.375 L12704.5588,313.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="12715.59" y="311.6074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="73" x="12744.59" y="288.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="12745.59" y="300.5918">MethodInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12687.59" x2="12813.59" y1="323.4531" y2="323.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="12687.59" x2="12813.59" y1="331.4531" y2="331.4531"/><!--MD5=[a4093d4f9ea5ea0f34ea630196a7906a]
class C_0000788782266645010446--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0000788782266645010446" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="32707.59" y="13139.4531"/><ellipse cx="32722.59" cy="13155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32725.5588,13161.0938 Q32724.9806,13161.3906 32724.34,13161.5313 Q32723.6994,13161.6875 32722.9963,13161.6875 Q32720.4963,13161.6875 32719.1681,13160.0469 Q32717.8556,13158.3906 32717.8556,13155.2656 Q32717.8556,13152.1406 32719.1681,13150.4844 Q32720.4963,13148.8281 32722.9963,13148.8281 Q32723.6994,13148.8281 32724.34,13148.9844 Q32724.9963,13149.1406 32725.5588,13149.4375 L32725.5588,13152.1563 Q32724.9338,13151.5781 32724.34,13151.3125 Q32723.7463,13151.0313 32723.1213,13151.0313 Q32721.7775,13151.0313 32721.09,13152.1094 Q32720.4025,13153.1719 32720.4025,13155.2656 Q32720.4025,13157.3594 32721.09,13158.4375 Q32721.7775,13159.5 32723.1213,13159.5 Q32723.7463,13159.5 32724.34,13159.2344 Q32724.9338,13158.9531 32725.5588,13158.375 L32725.5588,13161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="32736.59" y="13159.6074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="79" x="32765.59" y="13136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="32766.59" y="13148.5918">PropertyInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32708.59" x2="32840.59" y1="13171.4531" y2="13171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="32708.59" x2="32840.59" y1="13179.4531" y2="13179.4531"/><!--MD5=[81164fdf4de04db55f7d70df92bbb983]
class C_0000210234563198599367--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L93" target="_top" title="Variant" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L93" xlink:show="new" xlink:title="Variant" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="2135.1641" id="C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.5;" width="1306" x="27751.59" y="14666.9531"/><ellipse cx="28377.84" cy="14682.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28380.8088,14688.5938 Q28380.2306,14688.8906 28379.59,14689.0313 Q28378.9494,14689.1875 28378.2463,14689.1875 Q28375.7463,14689.1875 28374.4181,14687.5469 Q28373.1056,14685.8906 28373.1056,14682.7656 Q28373.1056,14679.6406 28374.4181,14677.9844 Q28375.7463,14676.3281 28378.2463,14676.3281 Q28378.9494,14676.3281 28379.59,14676.4844 Q28380.2463,14676.6406 28380.8088,14676.9375 L28380.8088,14679.6563 Q28380.1838,14679.0781 28379.59,14678.8125 Q28378.9963,14678.5313 28378.3713,14678.5313 Q28377.0275,14678.5313 28376.34,14679.6094 Q28375.6525,14680.6719 28375.6525,14682.7656 Q28375.6525,14684.8594 28376.34,14685.9375 Q28377.0275,14687 28378.3713,14687 Q28378.9963,14687 28379.59,14686.7344 Q28380.1838,14686.4531 28380.8088,14685.875 L28380.8088,14688.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="45" x="28398.34" y="14687.1074">Variant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27752.59" x2="29056.59" y1="14698.9531" y2="14698.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="27752.59" x2="29056.59" y1="14706.9531" y2="14706.9531"/><ellipse cx="27762.59" cy="14717.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="27771.59" y="14721.1636">get_type() const : Variant::Type</text><ellipse cx="27762.59" cy="14730.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="27771.59" y="14733.9683">get_type_name(Variant::Type p_type) : String</text><ellipse cx="27762.59" cy="14743.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="402" x="27771.59" y="14746.7729">can_convert(Variant::Type p_type_from, Variant::Type p_type_to) : bool</text><ellipse cx="27762.59" cy="14756.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="437" x="27771.59" y="14759.5776">can_convert_strict(Variant::Type p_type_from, Variant::Type p_type_to) : bool</text><ellipse cx="27762.59" cy="14769.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="27771.59" y="14772.3823">is_ref() const : bool</text><ellipse cx="27762.59" cy="14781.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="27771.59" y="14785.187">is_num() const : bool</text><ellipse cx="27762.59" cy="14794.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="27771.59" y="14797.9917">is_array() const : bool</text><ellipse cx="27762.59" cy="14807.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="27771.59" y="14810.7964">is_shared() const : bool</text><ellipse cx="27762.59" cy="14820.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="27771.59" y="14823.6011">is_zero() const : bool</text><ellipse cx="27762.59" cy="14833.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="27771.59" y="14836.4058">is_one() const : bool</text><ellipse cx="27762.59" cy="14846" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="27771.59" y="14849.2104">operator bool() const : bool</text><ellipse cx="27762.59" cy="14858.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="27771.59" y="14862.0151">operator int() const : int</text><ellipse cx="27762.59" cy="14871.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="27771.59" y="14874.8198">operator unsigned int() const : unsigned int</text><ellipse cx="27762.59" cy="14884.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="27771.59" y="14887.6245">operator short() const : short</text><ellipse cx="27762.59" cy="14897.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="27771.59" y="14900.4292">operator unsigned short() const : unsigned short</text><ellipse cx="27762.59" cy="14910.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="27771.59" y="14913.2339">operator signed char() const : signed char</text><ellipse cx="27762.59" cy="14922.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="27771.59" y="14926.0386">operator unsigned char() const : unsigned char</text><ellipse cx="27762.59" cy="14935.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="27771.59" y="14938.8433">operator long() const : int64_t</text><ellipse cx="27762.59" cy="14948.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="27771.59" y="14951.6479">operator unsigned long() const : uint64_t</text><ellipse cx="27762.59" cy="14961.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="27771.59" y="14964.4526">operator wchar_t() const : CharType</text><ellipse cx="27762.59" cy="14974.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27771.59" y="14977.2573">operator float() const : float</text><ellipse cx="27762.59" cy="14986.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="27771.59" y="14990.062">operator double() const : double</text><ellipse cx="27762.59" cy="14999.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27771.59" y="15002.8667">operator String() const : String</text><ellipse cx="27762.59" cy="15012.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="27771.59" y="15015.6714">operator StringName() const : StringName</text><ellipse cx="27762.59" cy="15025.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="27771.59" y="15028.4761">operator Vector2() const : Vector2</text><ellipse cx="27762.59" cy="15038.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="27771.59" y="15041.2808">operator Rect2() const : Rect2</text><ellipse cx="27762.59" cy="15050.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="27771.59" y="15054.0854">operator Vector3() const : Vector3</text><ellipse cx="27762.59" cy="15063.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="27771.59" y="15066.8901">operator Plane() const : Plane</text><ellipse cx="27762.59" cy="15076.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27771.59" y="15079.6948">operator AABB() const : ::AABB</text><ellipse cx="27762.59" cy="15089.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="27771.59" y="15092.4995">operator Quat() const : Quat</text><ellipse cx="27762.59" cy="15102.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="27771.59" y="15105.3042">operator Basis() const : Basis</text><ellipse cx="27762.59" cy="15114.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="27771.59" y="15118.1089">operator Transform() const : Transform</text><ellipse cx="27762.59" cy="15127.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="27771.59" y="15130.9136">operator Transform2D() const : Transform2D</text><ellipse cx="27762.59" cy="15140.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="27771.59" y="15143.7183">operator Color() const : Color</text><ellipse cx="27762.59" cy="15153.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="27771.59" y="15156.5229">operator NodePath() const : NodePath</text><ellipse cx="27762.59" cy="15166.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27771.59" y="15169.3276">operator RefPtr() const : RefPtr</text><ellipse cx="27762.59" cy="15178.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="27771.59" y="15182.1323">operator RID() const : RID</text><ellipse cx="27762.59" cy="15191.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="27771.59" y="15194.937">operator Object *() const : Object *</text><ellipse cx="27762.59" cy="15204.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="27771.59" y="15207.7417">operator Node *() const : Node *</text><ellipse cx="27762.59" cy="15217.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="27771.59" y="15220.5464">operator Control *() const : Control *</text><ellipse cx="27762.59" cy="15230.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="27771.59" y="15233.3511">operator Dictionary() const : Dictionary</text><ellipse cx="27762.59" cy="15242.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="27771.59" y="15246.1558">operator Array() const : Array</text><ellipse cx="27762.59" cy="15255.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="27771.59" y="15258.9604">operator PoolVector() const : PoolVector&lt;uint8_t&gt;</text><ellipse cx="27762.59" cy="15268.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="27771.59" y="15271.7651">operator PoolVector() const : PoolVector&lt;int&gt;</text><ellipse cx="27762.59" cy="15281.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="27771.59" y="15284.5698">operator PoolVector() const : PoolVector&lt;real_t&gt;</text><ellipse cx="27762.59" cy="15294.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="27771.59" y="15297.3745">operator PoolVector() const : PoolVector&lt;String&gt;</text><ellipse cx="27762.59" cy="15306.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="27771.59" y="15310.1792">operator PoolVector() const : PoolVector&lt;Vector3&gt;</text><ellipse cx="27762.59" cy="15319.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="27771.59" y="15322.9839">operator PoolVector() const : PoolVector&lt;Color&gt;</text><ellipse cx="27762.59" cy="15332.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="27771.59" y="15335.7886">operator PoolVector() const : PoolVector&lt;Plane&gt;</text><ellipse cx="27762.59" cy="15345.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="27771.59" y="15348.5933">operator PoolVector() const : PoolVector&lt;Face3&gt;</text><ellipse cx="27762.59" cy="15358.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="27771.59" y="15361.3979">operator Vector() const : Vector&lt;Variant&gt;</text><ellipse cx="27762.59" cy="15370.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="27771.59" y="15374.2026">operator Vector() const : Vector&lt;uint8_t&gt;</text><ellipse cx="27762.59" cy="15383.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="27771.59" y="15387.0073">operator Vector() const : Vector&lt;int&gt;</text><ellipse cx="27762.59" cy="15396.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="27771.59" y="15399.812">operator Vector() const : Vector&lt;real_t&gt;</text><ellipse cx="27762.59" cy="15409.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="27771.59" y="15412.6167">operator Vector() const : Vector&lt;String&gt;</text><ellipse cx="27762.59" cy="15422.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27771.59" y="15425.4214">operator Vector() const : Vector&lt;StringName&gt;</text><ellipse cx="27762.59" cy="15435.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="27771.59" y="15438.2261">operator Vector() const : Vector&lt;Vector3&gt;</text><ellipse cx="27762.59" cy="15447.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="27771.59" y="15451.0308">operator Vector() const : Vector&lt;Color&gt;</text><ellipse cx="27762.59" cy="15460.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="27771.59" y="15463.8354">operator Vector() const : Vector&lt;RID&gt;</text><ellipse cx="27762.59" cy="15473.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="27771.59" y="15476.6401">operator Vector() const : Vector&lt;Vector2&gt;</text><ellipse cx="27762.59" cy="15486.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="27771.59" y="15489.4448">operator PoolVector() const : PoolVector&lt;Vector2&gt;</text><ellipse cx="27762.59" cy="15499.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="27771.59" y="15502.2495">operator Vector() const : Vector&lt;Plane&gt;</text><ellipse cx="27762.59" cy="15511.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="27771.59" y="15515.0542">operator Margin() const : Margin</text><ellipse cx="27762.59" cy="15524.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27771.59" y="15527.8589">operator Orientation() const : Orientation</text><ellipse cx="27762.59" cy="15537.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27771.59" y="15540.6636">operator IP_Address() const : IP_Address</text><ellipse cx="27762.59" cy="15550.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="27771.59" y="15553.4683">Variant(bool p_bool) : void</text><ellipse cx="27762.59" cy="15563.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="27771.59" y="15566.2729">Variant(int p_int) : void</text><ellipse cx="27762.59" cy="15575.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="27771.59" y="15579.0776">Variant(unsigned int p_int) : void</text><ellipse cx="27762.59" cy="15588.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="27771.59" y="15591.8823">Variant(short p_short) : void</text><ellipse cx="27762.59" cy="15601.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="27771.59" y="15604.687">Variant(unsigned short p_short) : void</text><ellipse cx="27762.59" cy="15614.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="27771.59" y="15617.4917">Variant(signed char p_char) : void</text><ellipse cx="27762.59" cy="15627.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="27771.59" y="15630.2964">Variant(unsigned char p_char) : void</text><ellipse cx="27762.59" cy="15639.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="27771.59" y="15643.1011">Variant(int64_t p_int) : void</text><ellipse cx="27762.59" cy="15652.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="27771.59" y="15655.9058">Variant(uint64_t p_int) : void</text><ellipse cx="27762.59" cy="15665.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="27771.59" y="15668.7104">Variant(float p_float) : void</text><ellipse cx="27762.59" cy="15678.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27771.59" y="15681.5151">Variant(double p_double) : void</text><ellipse cx="27762.59" cy="15691.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="27771.59" y="15694.3198">Variant(const String &amp; p_string) : void</text><ellipse cx="27762.59" cy="15703.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="27771.59" y="15707.1245">Variant(const StringName &amp; p_string) : void</text><ellipse cx="27762.59" cy="15716.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="27771.59" y="15719.9292">Variant(const char *const p_cstring) : void</text><ellipse cx="27762.59" cy="15729.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="27771.59" y="15732.7339">Variant(const CharType * p_wstring) : void</text><ellipse cx="27762.59" cy="15742.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27771.59" y="15745.5386">Variant(const Vector2 &amp; p_vector2) : void</text><ellipse cx="27762.59" cy="15755.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27771.59" y="15758.3433">Variant(const Rect2 &amp; p_rect2) : void</text><ellipse cx="27762.59" cy="15767.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27771.59" y="15771.1479">Variant(const Vector3 &amp; p_vector3) : void</text><ellipse cx="27762.59" cy="15780.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="27771.59" y="15783.9526">Variant(const Plane &amp; p_plane) : void</text><ellipse cx="27762.59" cy="15793.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="27771.59" y="15796.7573">Variant(const ::AABB &amp; p_aabb) : void</text><ellipse cx="27762.59" cy="15806.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="27771.59" y="15809.562">Variant(const Quat &amp; p_quat) : void</text><ellipse cx="27762.59" cy="15819.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="27771.59" y="15822.3667">Variant(const Basis &amp; p_matrix) : void</text><ellipse cx="27762.59" cy="15831.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="27771.59" y="15835.1714">Variant(const Transform2D &amp; p_transform) : void</text><ellipse cx="27762.59" cy="15844.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="27771.59" y="15847.9761">Variant(const Transform &amp; p_transform) : void</text><ellipse cx="27762.59" cy="15857.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="27771.59" y="15860.7808">Variant(const Color &amp; p_color) : void</text><ellipse cx="27762.59" cy="15870.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="27771.59" y="15873.5854">Variant(const NodePath &amp; p_node_path) : void</text><ellipse cx="27762.59" cy="15883.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27771.59" y="15886.3901">Variant(const RefPtr &amp; p_resource) : void</text><ellipse cx="27762.59" cy="15895.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="27771.59" y="15899.1948">Variant(const RID &amp; p_rid) : void</text><ellipse cx="27762.59" cy="15908.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="27771.59" y="15911.9995">Variant(const Object * p_object) : void</text><ellipse cx="27762.59" cy="15921.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="27771.59" y="15924.8042">Variant(const Dictionary &amp; p_dictionary) : void</text><ellipse cx="27762.59" cy="15934.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27771.59" y="15937.6089">Variant(const Array &amp; p_array) : void</text><ellipse cx="27762.59" cy="15947.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="27771.59" y="15950.4136">Variant(const PoolVector&lt;Plane&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="15960.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="27771.59" y="15963.2183">Variant(const PoolVector&lt;uint8_t&gt; &amp; p_raw_array) : void</text><ellipse cx="27762.59" cy="15972.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="27771.59" y="15976.0229">Variant(const PoolVector&lt;int&gt; &amp; p_int_array) : void</text><ellipse cx="27762.59" cy="15985.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="27771.59" y="15988.8276">Variant(const PoolVector&lt;real_t&gt; &amp; p_real_array) : void</text><ellipse cx="27762.59" cy="15998.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="27771.59" y="16001.6323">Variant(const PoolVector&lt;String&gt; &amp; p_string_array) : void</text><ellipse cx="27762.59" cy="16011.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="27771.59" y="16014.437">Variant(const PoolVector&lt;Vector3&gt; &amp; p_vector3_array) : void</text><ellipse cx="27762.59" cy="16024.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="27771.59" y="16027.2417">Variant(const PoolVector&lt;Color&gt; &amp; p_color_array) : void</text><ellipse cx="27762.59" cy="16036.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="27771.59" y="16040.0464">Variant(const PoolVector&lt;Face3&gt; &amp; p_face_array) : void</text><ellipse cx="27762.59" cy="16049.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="27771.59" y="16052.8511">Variant(const Vector&lt;Variant&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16062.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="27771.59" y="16065.6558">Variant(const Vector&lt;uint8_t&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16075.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="27771.59" y="16078.4604">Variant(const Vector&lt;int&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16088.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27771.59" y="16091.2651">Variant(const Vector&lt;real_t&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16100.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="27771.59" y="16104.0698">Variant(const Vector&lt;String&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16113.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="27771.59" y="16116.8745">Variant(const Vector&lt;StringName&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16126.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="27771.59" y="16129.6792">Variant(const Vector&lt;Vector3&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16139.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="27771.59" y="16142.4839">Variant(const Vector&lt;Color&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16152.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="27771.59" y="16155.2886">Variant(const Vector&lt;Plane&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16164.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="27771.59" y="16168.0933">Variant(const Vector&lt;RID&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16177.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="27771.59" y="16180.8979">Variant(const Vector&lt;Vector2&gt; &amp; p_array) : void</text><ellipse cx="27762.59" cy="16190.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="27771.59" y="16193.7026">Variant(const PoolVector&lt;Vector2&gt; &amp; p_vector2_array) : void</text><ellipse cx="27762.59" cy="16203.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="27771.59" y="16206.5073">Variant(const IP_Address &amp; p_address) : void</text><ellipse cx="27762.59" cy="16216.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="295" x="27771.59" y="16219.312">get_operator_name(Variant::Operator p_op) : String</text><ellipse cx="27762.59" cy="16228.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="692" x="27771.59" y="16232.1167">evaluate(const Variant::Operator &amp; p_op, const Variant &amp; p_a, const Variant &amp; p_b, Variant &amp; r_ret, bool &amp; r_valid) : void</text><ellipse cx="27762.59" cy="16241.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="529" x="27771.59" y="16244.9214">evaluate(const Variant::Operator &amp; p_op, const Variant &amp; p_a, const Variant &amp; p_b) : Variant</text><ellipse cx="27762.59" cy="16254.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="27771.59" y="16257.7261">zero() : void</text><ellipse cx="27762.59" cy="16267.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="27771.59" y="16270.5308">duplicate(bool deep = false) const : Variant</text><ellipse cx="27762.59" cy="16280.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="420" x="27771.59" y="16283.3354">blend(const Variant &amp; a, const Variant &amp; b, float c, Variant &amp; r_dst) : void</text><ellipse cx="27762.59" cy="16292.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="27771.59" y="16296.1401">interpolate(const Variant &amp; a, const Variant &amp; b, float c, Variant &amp; r_dst) : void</text><ellipse cx="27762.59" cy="16305.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="744" x="27771.59" y="16308.9448">call_ptr(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant * r_ret, Variant::CallError &amp; r_error) : void</text><ellipse cx="27762.59" cy="16318.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="27771.59" y="16321.7495">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="27762.59" cy="16331.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1280" x="27771.59" y="16334.5542">call(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="27762.59" cy="16344.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="853" x="27771.59" y="16347.3589">get_call_error_text(Object * p_base, const StringName &amp; p_method, const Variant ** p_argptrs, int p_argcount, const Variant::CallError &amp; ce) : String</text><ellipse cx="27762.59" cy="16356.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="740" x="27771.59" y="16360.1636">construct(const Variant::Type , const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error, bool p_strict = true) : Variant</text><ellipse cx="27762.59" cy="16369.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="27771.59" y="16372.9683">get_method_list(List&lt;MethodInfo&gt; * p_list) const : void</text><ellipse cx="27762.59" cy="16382.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="27771.59" y="16385.7729">has_method(const StringName &amp; p_method) const : bool</text><ellipse cx="27762.59" cy="16395.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="614" x="27771.59" y="16398.5776">get_method_argument_types(Variant::Type p_type, const StringName &amp; p_method) : Vector&lt;Variant::Type&gt;</text><ellipse cx="27762.59" cy="16408.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="594" x="27771.59" y="16411.3823">get_method_default_arguments(Variant::Type p_type, const StringName &amp; p_method) : Vector&lt;Variant&gt;</text><ellipse cx="27762.59" cy="16420.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="701" x="27771.59" y="16424.187">get_method_return_type(Variant::Type p_type, const StringName &amp; p_method, bool * r_has_return = __null) : Variant::Type</text><ellipse cx="27762.59" cy="16433.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="614" x="27771.59" y="16436.9917">get_method_argument_names(Variant::Type p_type, const StringName &amp; p_method) : Vector&lt;StringName&gt;</text><ellipse cx="27762.59" cy="16446.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="440" x="27771.59" y="16449.7964">is_method_const(Variant::Type p_type, const StringName &amp; p_method) : bool</text><ellipse cx="27762.59" cy="16459.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="545" x="27771.59" y="16462.6011">set_named(const StringName &amp; p_index, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="27762.59" cy="16472.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="27771.59" y="16475.4058">get_named(const StringName &amp; p_index, bool * r_valid = __null) const : Variant</text><ellipse cx="27762.59" cy="16485" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="27771.59" y="16488.2104">set(const Variant &amp; p_index, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="27762.59" cy="16497.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="27771.59" y="16501.0151">get(const Variant &amp; p_index, bool * r_valid = __null) const : Variant</text><ellipse cx="27762.59" cy="16510.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="27771.59" y="16513.8198">in(const Variant &amp; p_index, bool * r_valid = __null) const : bool</text><ellipse cx="27762.59" cy="16523.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27771.59" y="16526.6245">iter_init(Variant &amp; r_iter, bool &amp; r_valid) const : bool</text><ellipse cx="27762.59" cy="16536.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="27771.59" y="16539.4292">iter_next(Variant &amp; r_iter, bool &amp; r_valid) const : bool</text><ellipse cx="27762.59" cy="16549.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="27771.59" y="16552.2339">iter_get(const Variant &amp; r_iter, bool &amp; r_valid) const : Variant</text><ellipse cx="27762.59" cy="16561.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="27771.59" y="16565.0386">get_property_list(List&lt;PropertyInfo&gt; * p_list) const : void</text><ellipse cx="27762.59" cy="16574.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="27771.59" y="16577.8433">operator==(const Variant &amp; p_variant) const : bool</text><ellipse cx="27762.59" cy="16587.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="27771.59" y="16590.6479">operator!=(const Variant &amp; p_variant) const : bool</text><ellipse cx="27762.59" cy="16600.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="27771.59" y="16603.4526">operator&lt;(const Variant &amp; p_variant) const : bool</text><ellipse cx="27762.59" cy="16613.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="27771.59" y="16616.2573">hash() const : uint32_t</text><ellipse cx="27762.59" cy="16625.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="27771.59" y="16629.062">hash_compare(const Variant &amp; p_variant) const : bool</text><ellipse cx="27762.59" cy="16638.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="27771.59" y="16641.8667">booleanize() const : bool</text><ellipse cx="27762.59" cy="16651.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="27771.59" y="16654.6714">stringify(List&lt;const void *&gt; &amp; stack) const : String</text><ellipse cx="27762.59" cy="16664.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="27771.59" y="16667.4761">static_assign(const Variant &amp; p_variant) : void</text><ellipse cx="27762.59" cy="16677.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="423" x="27771.59" y="16680.2808">get_constructor_list(Variant::Type p_type, List&lt;MethodInfo&gt; * p_list) : void</text><ellipse cx="27762.59" cy="16689.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="487" x="27771.59" y="16693.0854">get_constants_for_type(Variant::Type p_type, List&lt;StringName&gt; * p_constants) : void</text><ellipse cx="27762.59" cy="16702.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="407" x="27771.59" y="16705.8901">has_constant(Variant::Type p_type, const StringName &amp; p_value) : bool</text><ellipse cx="27762.59" cy="16715.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="588" x="27771.59" y="16718.6948">get_constant_value(Variant::Type p_type, const StringName &amp; p_value, bool * r_valid = __null) : Variant</text><ellipse cx="27762.59" cy="16728.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="27771.59" y="16731.4995">get_construct_string() const : String</text><ellipse cx="27762.59" cy="16741.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="877" x="27771.59" y="16744.3042">construct_from_string(const String &amp; p_string, Variant &amp; r_value, Variant::ObjectConstruct p_obj_construct = __null, void * p_construct_ud = __null) : void</text><ellipse cx="27762.59" cy="16753.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="27771.59" y="16757.1089">operator=(const Variant &amp; p_variant) : void</text><ellipse cx="27762.59" cy="16766.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="27771.59" y="16769.9136">Variant(const Variant &amp; p_variant) : void</text><ellipse cx="27762.59" cy="16779.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="27771.59" y="16782.7183">Variant() : void</text><ellipse cx="27762.59" cy="16792.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="27771.59" y="16795.5229">~Variant() : void</text></a><!--MD5=[48c1d650122612d88514dc7f32d5a165]
class C_0002153970433534458832--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L144" target="_top" title="PropertyInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L144" xlink:show="new" xlink:title="PropertyInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="227.2656" id="C_0002153970433534458832" style="stroke: #A80036; stroke-width: 1.5;" width="1417" x="33481.09" y="13049.9531"/><ellipse cx="34147.34" cy="13065.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34150.3088,13071.5938 Q34149.7306,13071.8906 34149.09,13072.0313 Q34148.4494,13072.1875 34147.7463,13072.1875 Q34145.2463,13072.1875 34143.9181,13070.5469 Q34142.6056,13068.8906 34142.6056,13065.7656 Q34142.6056,13062.6406 34143.9181,13060.9844 Q34145.2463,13059.3281 34147.7463,13059.3281 Q34148.4494,13059.3281 34149.09,13059.4844 Q34149.7463,13059.6406 34150.3088,13059.9375 L34150.3088,13062.6563 Q34149.6838,13062.0781 34149.09,13061.8125 Q34148.4963,13061.5313 34147.8713,13061.5313 Q34146.5275,13061.5313 34145.84,13062.6094 Q34145.1525,13063.6719 34145.1525,13065.7656 Q34145.1525,13067.8594 34145.84,13068.9375 Q34146.5275,13070 34147.8713,13070 Q34148.4963,13070 34149.09,13069.7344 Q34149.6838,13069.4531 34150.3088,13068.875 L34150.3088,13071.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="34167.84" y="13070.1074">PropertyInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33482.09" x2="34897.09" y1="13081.9531" y2="13081.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" target="_top" title="type" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" xlink:show="new" xlink:title="type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33487.09" y="13087.9531"/><ellipse cx="33492.09" cy="13092.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" target="_top" title="type" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146" xlink:show="new" xlink:title="type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="33501.09" y="13096.1636">type : Variant::Type</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33487.09" y="13100.7578"/><ellipse cx="33492.09" cy="13105.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="33501.09" y="13108.9683">name : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" target="_top" title="class_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" xlink:show="new" xlink:title="class_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33487.09" y="13113.5625"/><ellipse cx="33492.09" cy="13118.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" target="_top" title="class_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148" xlink:show="new" xlink:title="class_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="33501.09" y="13121.7729">class_name : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" target="_top" title="hint" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" xlink:show="new" xlink:title="hint" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33487.09" y="13126.3672"/><ellipse cx="33492.09" cy="13131.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" target="_top" title="hint" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149" xlink:show="new" xlink:title="hint" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="33501.09" y="13134.5776">hint : PropertyHint</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" target="_top" title="hint_string" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" xlink:show="new" xlink:title="hint_string" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33487.09" y="13139.1719"/><ellipse cx="33492.09" cy="13144.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" target="_top" title="hint_string" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150" xlink:show="new" xlink:title="hint_string" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="33501.09" y="13147.3823">hint_string : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" target="_top" title="usage" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" xlink:show="new" xlink:title="usage" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33487.09" y="13151.9766"/><ellipse cx="33492.09" cy="13156.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" target="_top" title="usage" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151" xlink:show="new" xlink:title="usage" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="33501.09" y="13160.187">usage : uint32_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33482.09" x2="34897.09" y1="13166.7813" y2="13166.7813"/><ellipse cx="33492.09" cy="13177.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="33501.09" y="13180.9917">added_usage(int p_fl) const : PropertyInfo</text><ellipse cx="33492.09" cy="13190.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="33501.09" y="13193.7964">operator Dictionary() const : Dictionary</text><ellipse cx="33492.09" cy="13203.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="33501.09" y="13206.6011">from_dict(const Dictionary &amp; p_dict) : PropertyInfo</text><ellipse cx="33492.09" cy="13216.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="33501.09" y="13219.4058">PropertyInfo() : void</text><ellipse cx="33492.09" cy="13229" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1391" x="33501.09" y="13232.2104">PropertyInfo(Variant::Type p_type, const String p_name, PropertyHint p_hint = PROPERTY_HINT_NONE, const String &amp; p_hint_string = "", uint32_t p_usage = PROPERTY_USAGE_DEFAULT, const StringName &amp; p_class_name = StringName()) : void</text><ellipse cx="33492.09" cy="13241.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="33501.09" y="13245.0151">PropertyInfo(const StringName &amp; p_class_name) : void</text><ellipse cx="33492.09" cy="13254.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="33501.09" y="13257.8198">operator==(const PropertyInfo &amp; p_info) const : bool</text><ellipse cx="33492.09" cy="13267.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="33501.09" y="13270.6245">operator&lt;(const PropertyInfo &amp; p_info) const : bool</text><!--MD5=[ca6c9fa1e022a24af365dbb8523429c2]
class C_0000774532299576474923--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L206" target="_top" title="MethodInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L206" xlink:show="new" xlink:title="MethodInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="432.1406" id="C_0000774532299576474923" style="stroke: #A80036; stroke-width: 1.5;" width="1357" x="32397.09" y="8616.9531"/><ellipse cx="33036.34" cy="8632.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33039.3088,8638.5938 Q33038.7306,8638.8906 33038.09,8639.0313 Q33037.4494,8639.1875 33036.7463,8639.1875 Q33034.2463,8639.1875 33032.9181,8637.5469 Q33031.6056,8635.8906 33031.6056,8632.7656 Q33031.6056,8629.6406 33032.9181,8627.9844 Q33034.2463,8626.3281 33036.7463,8626.3281 Q33037.4494,8626.3281 33038.09,8626.4844 Q33038.7463,8626.6406 33039.3088,8626.9375 L33039.3088,8629.6563 Q33038.6838,8629.0781 33038.09,8628.8125 Q33037.4963,8628.5313 33036.8713,8628.5313 Q33035.5275,8628.5313 33034.84,8629.6094 Q33034.1525,8630.6719 33034.1525,8632.7656 Q33034.1525,8634.8594 33034.84,8635.9375 Q33035.5275,8637 33036.8713,8637 Q33037.4963,8637 33038.09,8636.7344 Q33038.6838,8636.4531 33039.3088,8635.875 L33039.3088,8638.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="33056.84" y="8637.1074">MethodInfo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32398.09" x2="33753.09" y1="8648.9531" y2="8648.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32403.09" y="8654.9531"/><ellipse cx="32408.09" cy="8659.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32417.09" y="8663.1636">name : String</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" target="_top" title="return_val" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" xlink:show="new" xlink:title="return_val" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32403.09" y="8667.7578"/><ellipse cx="32408.09" cy="8672.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" target="_top" title="return_val" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209" xlink:show="new" xlink:title="return_val" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="32417.09" y="8675.9683">return_val : PropertyInfo</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" xlink:show="new" xlink:title="flags" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32403.09" y="8680.5625"/><ellipse cx="32408.09" cy="8685.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210" xlink:show="new" xlink:title="flags" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="32417.09" y="8688.7729">flags : uint32_t</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" target="_top" title="id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" xlink:show="new" xlink:title="id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32403.09" y="8693.3672"/><ellipse cx="32408.09" cy="8698.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" target="_top" title="id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211" xlink:show="new" xlink:title="id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="32417.09" y="8701.5776">id : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" target="_top" title="arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" xlink:show="new" xlink:title="arguments" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32403.09" y="8706.1719"/><ellipse cx="32408.09" cy="8711.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" target="_top" title="arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212" xlink:show="new" xlink:title="arguments" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="32417.09" y="8714.3823">arguments : List&lt;PropertyInfo&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" target="_top" title="default_arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" xlink:show="new" xlink:title="default_arguments" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32403.09" y="8718.9766"/><ellipse cx="32408.09" cy="8723.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" target="_top" title="default_arguments" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213" xlink:show="new" xlink:title="default_arguments" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="32417.09" y="8727.187">default_arguments : Vector&lt;Variant&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32398.09" x2="33753.09" y1="8733.7813" y2="8733.7813"/><ellipse cx="32408.09" cy="8744.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="32417.09" y="8747.9917">operator==(const MethodInfo &amp; p_method) const : bool</text><ellipse cx="32408.09" cy="8757.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="32417.09" y="8760.7964">operator&lt;(const MethodInfo &amp; p_method) const : bool</text><ellipse cx="32408.09" cy="8770.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="32417.09" y="8773.6011">operator Dictionary() const : Dictionary</text><ellipse cx="32408.09" cy="8783.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="32417.09" y="8786.4058">from_dict(const Dictionary &amp; p_dict) : MethodInfo</text><ellipse cx="32408.09" cy="8796" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="32417.09" y="8799.2104">MethodInfo() : void</text><ellipse cx="32408.09" cy="8808.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="32417.09" y="8812.0151">MethodInfo(const String &amp; p_name) : void</text><ellipse cx="32408.09" cy="8821.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="32417.09" y="8824.8198">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1) : void</text><ellipse cx="32408.09" cy="8834.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="611" x="32417.09" y="8837.6245">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2) : void</text><ellipse cx="32408.09" cy="8847.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="798" x="32417.09" y="8850.4292">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3) : void</text><ellipse cx="32408.09" cy="8860.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="985" x="32417.09" y="8863.2339">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4) : void</text><ellipse cx="32408.09" cy="8872.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1172" x="32417.09" y="8876.0386">MethodInfo(const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4, const PropertyInfo &amp; p_param5) : void</text><ellipse cx="32408.09" cy="8885.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="32417.09" y="8888.8433">MethodInfo(Variant::Type ret) : void</text><ellipse cx="32408.09" cy="8898.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="32417.09" y="8901.6479">MethodInfo(Variant::Type ret, const String &amp; p_name) : void</text><ellipse cx="32408.09" cy="8911.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="527" x="32417.09" y="8914.4526">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1) : void</text><ellipse cx="32408.09" cy="8924.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="714" x="32417.09" y="8927.2573">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2) : void</text><ellipse cx="32408.09" cy="8936.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="901" x="32417.09" y="8940.062">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3) : void</text><ellipse cx="32408.09" cy="8949.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1088" x="32417.09" y="8952.8667">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4) : void</text><ellipse cx="32408.09" cy="8962.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1275" x="32417.09" y="8965.6714">MethodInfo(Variant::Type ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4, const PropertyInfo &amp; p_param5) : void</text><ellipse cx="32408.09" cy="8975.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="396" x="32417.09" y="8978.4761">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name) : void</text><ellipse cx="32408.09" cy="8988.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="32417.09" y="8991.2808">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1) : void</text><ellipse cx="32408.09" cy="9000.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="770" x="32417.09" y="9004.0854">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2) : void</text><ellipse cx="32408.09" cy="9013.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="957" x="32417.09" y="9016.8901">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3) : void</text><ellipse cx="32408.09" cy="9026.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1144" x="32417.09" y="9029.6948">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4) : void</text><ellipse cx="32408.09" cy="9039.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1331" x="32417.09" y="9042.4995">MethodInfo(const PropertyInfo &amp; p_ret, const String &amp; p_name, const PropertyInfo &amp; p_param1, const PropertyInfo &amp; p_param2, const PropertyInfo &amp; p_param3, const PropertyInfo &amp; p_param4, const PropertyInfo &amp; p_param5) : void</text><!--MD5=[e19ea3ddc80c91fbe5870b7030365a5f]
class C_0002063845175027013341--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0002063845175027013341" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="36862.59" y="15710.4531"/><ellipse cx="36877.59" cy="15726.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36880.5588,15732.0938 Q36879.9806,15732.3906 36879.34,15732.5313 Q36878.6994,15732.6875 36877.9963,15732.6875 Q36875.4963,15732.6875 36874.1681,15731.0469 Q36872.8556,15729.3906 36872.8556,15726.2656 Q36872.8556,15723.1406 36874.1681,15721.4844 Q36875.4963,15719.8281 36877.9963,15719.8281 Q36878.6994,15719.8281 36879.34,15719.9844 Q36879.9963,15720.1406 36880.5588,15720.4375 L36880.5588,15723.1563 Q36879.9338,15722.5781 36879.34,15722.3125 Q36878.7463,15722.0313 36878.1213,15722.0313 Q36876.7775,15722.0313 36876.09,15723.1094 Q36875.4025,15724.1719 36875.4025,15726.2656 Q36875.4025,15728.3594 36876.09,15729.4375 Q36876.7775,15730.5 36878.1213,15730.5 Q36878.7463,15730.5 36879.34,15730.2344 Q36879.9338,15729.9531 36880.5588,15729.375 L36880.5588,15732.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="36891.59" y="15730.6074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="39" x="36920.59" y="15707.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="36921.59" y="15719.5918">String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36863.59" x2="36955.59" y1="15742.4531" y2="15742.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="36863.59" x2="36955.59" y1="15750.4531" y2="15750.4531"/><!--MD5=[fcb6dc9edc5e54eb9e8bfa0c33478799]
class C_0000751300156436098886--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0000751300156436098886" style="stroke: #A80036; stroke-width: 1.5;" width="175" x="28752.09" y="2327.9531"/><ellipse cx="28767.09" cy="2343.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28770.0588,2349.5938 Q28769.4806,2349.8906 28768.84,2350.0313 Q28768.1994,2350.1875 28767.4963,2350.1875 Q28764.9963,2350.1875 28763.6681,2348.5469 Q28762.3556,2346.8906 28762.3556,2343.7656 Q28762.3556,2340.6406 28763.6681,2338.9844 Q28764.9963,2337.3281 28767.4963,2337.3281 Q28768.1994,2337.3281 28768.84,2337.4844 Q28769.4963,2337.6406 28770.0588,2337.9375 L28770.0588,2340.6563 Q28769.4338,2340.0781 28768.84,2339.8125 Q28768.2463,2339.5313 28767.6213,2339.5313 Q28766.2775,2339.5313 28765.59,2340.6094 Q28764.9025,2341.6719 28764.9025,2343.7656 Q28764.9025,2345.8594 28765.59,2346.9375 Q28766.2775,2348 28767.6213,2348 Q28768.2463,2348 28768.84,2347.7344 Q28769.4338,2347.4531 28770.0588,2346.875 L28770.0588,2349.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="28781.09" y="2348.1074">List</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="120" x="28810.09" y="2324.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="118" x="28811.09" y="2337.0918">Object::Connection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28753.09" x2="28926.09" y1="2359.9531" y2="2359.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28753.09" x2="28926.09" y1="2367.9531" y2="2367.9531"/><!--MD5=[7554e1c91c178cfd46cd5992944992da]
class C_0001578539238208480863--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0001578539238208480863" style="stroke: #A80036; stroke-width: 1.5;" width="256" x="28962.59" y="2327.9531"/><ellipse cx="28977.59" cy="2343.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28980.5588,2349.5938 Q28979.9806,2349.8906 28979.34,2350.0313 Q28978.6994,2350.1875 28977.9963,2350.1875 Q28975.4963,2350.1875 28974.1681,2348.5469 Q28972.8556,2346.8906 28972.8556,2343.7656 Q28972.8556,2340.6406 28974.1681,2338.9844 Q28975.4963,2337.3281 28977.9963,2337.3281 Q28978.6994,2337.3281 28979.34,2337.4844 Q28979.9963,2337.6406 28980.5588,2337.9375 L28980.5588,2340.6563 Q28979.9338,2340.0781 28979.34,2339.8125 Q28978.7463,2339.5313 28978.1213,2339.5313 Q28976.7775,2339.5313 28976.09,2340.6094 Q28975.4025,2341.6719 28975.4025,2343.7656 Q28975.4025,2345.8594 28976.09,2346.9375 Q28976.7775,2348 28978.1213,2348 Q28978.7463,2348 28979.34,2347.7344 Q28979.9338,2347.4531 28980.5588,2346.875 L28980.5588,2349.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="28991.59" y="2348.1074">HashMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="164" x="29057.59" y="2324.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="162" x="29058.59" y="2337.0918">StringName,Object::Signal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28963.59" x2="29217.59" y1="2359.9531" y2="2359.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="28963.59" x2="29217.59" y1="2367.9531" y2="2367.9531"/><!--MD5=[75bc4a0739afdfacd2c3e3c13cd7e181]
class C_0000051860595756965531--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0000051860595756965531" style="stroke: #A80036; stroke-width: 1.5;" width="106" x="29253.59" y="2327.9531"/><ellipse cx="29268.59" cy="2343.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29271.5588,2349.5938 Q29270.9806,2349.8906 29270.34,2350.0313 Q29269.6994,2350.1875 29268.9963,2350.1875 Q29266.4963,2350.1875 29265.1681,2348.5469 Q29263.8556,2346.8906 29263.8556,2343.7656 Q29263.8556,2340.6406 29265.1681,2338.9844 Q29266.4963,2337.3281 29268.9963,2337.3281 Q29269.6994,2337.3281 29270.34,2337.4844 Q29270.9963,2337.6406 29271.5588,2337.9375 L29271.5588,2340.6563 Q29270.9338,2340.0781 29270.34,2339.8125 Q29269.7463,2339.5313 29269.1213,2339.5313 Q29267.7775,2339.5313 29267.09,2340.6094 Q29266.4025,2341.6719 29266.4025,2343.7656 Q29266.4025,2345.8594 29267.09,2346.9375 Q29267.7775,2348 29269.1213,2348 Q29269.7463,2348 29270.34,2347.7344 Q29270.9338,2347.4531 29271.5588,2346.875 L29271.5588,2349.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="29282.59" y="2348.1074">Set</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="51" x="29311.59" y="2324.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="49" x="29312.59" y="2337.0918">Object *</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29254.59" x2="29358.59" y1="2359.9531" y2="2359.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="29254.59" x2="29358.59" y1="2367.9531" y2="2367.9531"/><!--MD5=[6bf78f0ec114838316d8adbe773b0c0e]
class C_0001682405743486361214--><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="48" id="C_0001682405743486361214" style="stroke: #A80036; stroke-width: 1.5;" width="94" x="33114.59" y="13139.4531"/><ellipse cx="33129.59" cy="13155.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33132.5588,13161.0938 Q33131.9806,13161.3906 33131.34,13161.5313 Q33130.6994,13161.6875 33129.9963,13161.6875 Q33127.4963,13161.6875 33126.1681,13160.0469 Q33124.8556,13158.3906 33124.8556,13155.2656 Q33124.8556,13152.1406 33126.1681,13150.4844 Q33127.4963,13148.8281 33129.9963,13148.8281 Q33130.6994,13148.8281 33131.34,13148.9844 Q33131.9963,13149.1406 33132.5588,13149.4375 L33132.5588,13152.1563 Q33131.9338,13151.5781 33131.34,13151.3125 Q33130.7463,13151.0313 33130.1213,13151.0313 Q33128.7775,13151.0313 33128.09,13152.1094 Q33127.4025,13153.1719 33127.4025,13155.2656 Q33127.4025,13157.3594 33128.09,13158.4375 Q33128.7775,13159.5 33130.1213,13159.5 Q33130.7463,13159.5 33131.34,13159.2344 Q33131.9338,13158.9531 33132.5588,13158.375 L33132.5588,13161.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="33143.59" y="13159.6074">Set</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="39" x="33172.59" y="13136.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="33173.59" y="13148.5918">String</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33115.59" x2="33207.59" y1="13171.4531" y2="13171.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="33115.59" x2="33207.59" y1="13179.4531" y2="13179.4531"/><!--MD5=[f0802071db4c55ed48c8eca4075aaca6]
class C_0001531814603945772616--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408" target="_top" title="Object" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408" xlink:show="new" xlink:title="Object" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="1162.0078" id="C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.5;" width="1344" x="25163.59" y="915.9531"/><ellipse cx="25811.34" cy="931.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25814.3088,937.5938 Q25813.7306,937.8906 25813.09,938.0313 Q25812.4494,938.1875 25811.7463,938.1875 Q25809.2463,938.1875 25807.9181,936.5469 Q25806.6056,934.8906 25806.6056,931.7656 Q25806.6056,928.6406 25807.9181,926.9844 Q25809.2463,925.3281 25811.7463,925.3281 Q25812.4494,925.3281 25813.09,925.4844 Q25813.7463,925.6406 25814.3088,925.9375 L25814.3088,928.6563 Q25813.6838,928.0781 25813.09,927.8125 Q25812.4963,927.5313 25811.8713,927.5313 Q25810.5275,927.5313 25809.84,928.6094 Q25809.1525,929.6719 25809.1525,931.7656 Q25809.1525,933.8594 25809.84,934.9375 Q25810.5275,936 25811.8713,936 Q25812.4963,936 25813.09,935.7344 Q25813.6838,935.4531 25814.3088,934.875 L25814.3088,937.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="25831.84" y="936.1074">Object</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25164.59" x2="26506.59" y1="947.9531" y2="947.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" target="_top" title="_is_queued_for_deletion" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" xlink:show="new" xlink:title="_is_queued_for_deletion" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="25169.59" y="953.9531"/><ellipse cx="25174.59" cy="958.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" target="_top" title="_is_queued_for_deletion" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745" xlink:show="new" xlink:title="_is_queued_for_deletion" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="25183.59" y="962.1636">_is_queued_for_deletion : bool</text></a><ellipse cx="25174.59" cy="971.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="25183.59" y="974.9683">NOTIFICATION_POSTINITIALIZE : enum</text><ellipse cx="25174.59" cy="984.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="25183.59" y="987.7729">NOTIFICATION_PREDELETE : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25164.59" x2="26506.59" y1="994.3672" y2="994.3672"/><ellipse cx="25174.59" cy="1005.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="25183.59" y="1008.5776">initialize_class() : void</text><ellipse cx="25174.59" cy="1018.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="25183.59" y="1021.3823">register_custom_data_to_otdb() : void</text><ellipse cx="25174.59" cy="1030.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="25183.59" y="1034.187">_change_notify(const char * p_property = "") : void</text><ellipse cx="25174.59" cy="1043.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="25183.59" y="1046.9917">get_class_ptr_static() : void *</text><ellipse cx="25174.59" cy="1056.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="25183.59" y="1059.7964">_use_rc() : ObjectRC *</text><ellipse cx="25174.59" cy="1069.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="25183.59" y="1072.6011">_is_gpl_reversed() const : bool</text><ellipse cx="25174.59" cy="1082.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="25183.59" y="1085.4058">get_instance_id() const : ObjectID</text><ellipse cx="25174.59" cy="1095" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="25183.59" y="1098.2104">add_change_receptor(Object * p_receptor) : void</text><ellipse cx="25174.59" cy="1107.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="25183.59" y="1111.0151">remove_change_receptor(Object * p_receptor) : void</text><ellipse cx="25174.59" cy="1120.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="25183.59" y="1123.8198">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="25174.59" cy="1133.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="25183.59" y="1136.6245">get_class_static() : String</text><ellipse cx="25174.59" cy="1146.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="25183.59" y="1149.4292">get_parent_class_static() : String</text><ellipse cx="25174.59" cy="1159.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="25183.59" y="1162.2339">get_category_static() : String</text><ellipse cx="25174.59" cy="1171.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="25183.59" y="1175.0386">get_class() const : String</text><ellipse cx="25174.59" cy="1184.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="25183.59" y="1187.8433">get_save_class() const : String</text><ellipse cx="25174.59" cy="1197.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="25183.59" y="1200.6479">is_class(const String &amp; p_class) const : bool</text><ellipse cx="25174.59" cy="1210.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="25183.59" y="1213.4526">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="25174.59" cy="1223.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="25183.59" y="1226.2573">get_class_name() const : const StringName &amp;</text><ellipse cx="25174.59" cy="1235.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="25183.59" y="1239.062">set(const StringName &amp; p_name, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="25174.59" cy="1248.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="25183.59" y="1251.8667">get(const StringName &amp; p_name, bool * r_valid = __null) const : Variant</text><ellipse cx="25174.59" cy="1261.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="613" x="25183.59" y="1264.6714">set_indexed(const Vector&lt;StringName&gt; &amp; p_names, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="25174.59" cy="1274.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="521" x="25183.59" y="1277.4761">get_indexed(const Vector&lt;StringName&gt; &amp; p_names, bool * r_valid = __null) const : Variant</text><ellipse cx="25174.59" cy="1287.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="25183.59" y="1290.2808">get_property_list(List&lt;PropertyInfo&gt; * p_list, bool p_reversed = false) const : void</text><ellipse cx="25174.59" cy="1299.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="25183.59" y="1303.0854">has_method(const StringName &amp; p_method) const : bool</text><ellipse cx="25174.59" cy="1312.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="25183.59" y="1315.8901">get_method_list(List&lt;MethodInfo&gt; * p_list) const : void</text><ellipse cx="25174.59" cy="1325.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="25183.59" y="1328.6948">callv(const StringName &amp; p_method, const Array &amp; p_args) : Variant</text><ellipse cx="25174.59" cy="1338.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="25183.59" y="1341.4995">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="25174.59" cy="1351.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="25183.59" y="1354.3042">call_multilevel(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="25174.59" cy="1363.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="25183.59" y="1367.1089">call_multilevel_reversed(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="25174.59" cy="1376.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1269" x="25183.59" y="1379.9136">call(const StringName &amp; p_name, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="25174.59" cy="1389.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1312" x="25183.59" y="1392.7183">call_multilevel(const StringName &amp; p_name, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="25174.59" cy="1402.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="25183.59" y="1405.5229">notification(int p_notification, bool p_reversed = false) : void</text><ellipse cx="25174.59" cy="1415.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="25183.59" y="1418.3276">to_string() : String</text><ellipse cx="25174.59" cy="1427.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="25183.59" y="1431.1323">getvar(const Variant &amp; p_key, bool * r_valid = __null) const : Variant</text><ellipse cx="25174.59" cy="1440.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="25183.59" y="1443.937">setvar(const Variant &amp; p_key, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="25174.59" cy="1453.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="25183.59" y="1456.7417">set_script(const RefPtr &amp; p_script) : void</text><ellipse cx="25174.59" cy="1466.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="25183.59" y="1469.5464">get_script() const : RefPtr</text><ellipse cx="25174.59" cy="1479.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="25183.59" y="1482.3511">has_meta(const String &amp; p_name) const : bool</text><ellipse cx="25174.59" cy="1491.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="25183.59" y="1495.1558">set_meta(const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="25174.59" cy="1504.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="25183.59" y="1507.9604">remove_meta(const String &amp; p_name) : void</text><ellipse cx="25174.59" cy="1517.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="25183.59" y="1520.7651">get_meta(const String &amp; p_name) const : Variant</text><ellipse cx="25174.59" cy="1530.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="25183.59" y="1533.5698">get_meta_list(List&lt;String&gt; * p_list) const : void</text><ellipse cx="25174.59" cy="1543.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="25183.59" y="1546.3745">set_edited(bool p_edited) : void</text><ellipse cx="25174.59" cy="1555.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="25183.59" y="1559.1792">is_edited() const : bool</text><ellipse cx="25174.59" cy="1568.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="25183.59" y="1571.9839">get_edited_version() const : uint32_t</text><ellipse cx="25174.59" cy="1581.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="25183.59" y="1584.7886">set_script_instance(ScriptInstance * p_instance) : void</text><ellipse cx="25174.59" cy="1594.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="25183.59" y="1597.5933">get_script_instance() const : ScriptInstance *</text><ellipse cx="25174.59" cy="1607.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="25183.59" y="1610.3979">set_script_and_instance(const RefPtr &amp; p_script, ScriptInstance * p_instance) : void</text><ellipse cx="25174.59" cy="1619.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="25183.59" y="1623.2026">add_user_signal(const MethodInfo &amp; p_signal) : void</text><ellipse cx="25174.59" cy="1632.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1304" x="25183.59" y="1636.0073">emit_signal(const StringName &amp; p_name, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Error</text><ellipse cx="25174.59" cy="1645.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="25183.59" y="1648.812">emit_signal(const StringName &amp; p_name, const Variant ** p_args, int p_argcount) : Error</text><ellipse cx="25174.59" cy="1658.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="25183.59" y="1661.6167">has_signal(const StringName &amp; p_name) const : bool</text><ellipse cx="25174.59" cy="1671.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="25183.59" y="1674.4214">get_signal_list(List&lt;MethodInfo&gt; * p_signals) const : void</text><ellipse cx="25174.59" cy="1684.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="25183.59" y="1687.2261">get_signal_connection_list(const StringName &amp; p_signal, List&lt;Object::Connection&gt; * p_connections) const : void</text><ellipse cx="25174.59" cy="1696.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="25183.59" y="1700.0308">get_all_signal_connections(List&lt;Object::Connection&gt; * p_connections) const : void</text><ellipse cx="25174.59" cy="1709.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="25183.59" y="1712.8354">get_persistent_signal_connection_count() const : int</text><ellipse cx="25174.59" cy="1722.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="25183.59" y="1725.6401">get_signals_connected_to_this(List&lt;Object::Connection&gt; * p_connections) const : void</text><ellipse cx="25174.59" cy="1735.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1023" x="25183.59" y="1738.4448">connect(const StringName &amp; p_signal, Object * p_to_object, const StringName &amp; p_to_method, const Vector&lt;Variant&gt; &amp; p_binds = Vector&lt;Variant&gt;(), uint32_t p_flags = 0) : Error</text><ellipse cx="25174.59" cy="1748.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="25183.59" y="1751.2495">disconnect(const StringName &amp; p_signal, Object * p_to_object, const StringName &amp; p_to_method) : void</text><ellipse cx="25174.59" cy="1760.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="25183.59" y="1764.0542">is_connected(const StringName &amp; p_signal, Object * p_to_object, const StringName &amp; p_to_method) const : bool</text><ellipse cx="25174.59" cy="1773.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1318" x="25183.59" y="1776.8589">call_deferred(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="25174.59" cy="1786.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="25183.59" y="1789.6636">set_deferred(const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="25174.59" cy="1799.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="25183.59" y="1802.4683">set_block_signals(bool p_block) : void</text><ellipse cx="25174.59" cy="1812.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="25183.59" y="1815.2729">is_blocking_signals() const : bool</text><ellipse cx="25174.59" cy="1824.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="582" x="25183.59" y="1828.0776">get_static_property_type(const StringName &amp; p_property, bool * r_valid = __null) const : Variant::Type</text><ellipse cx="25174.59" cy="1837.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="663" x="25183.59" y="1840.8823">get_static_property_type_indexed(const Vector&lt;StringName&gt; &amp; p_path, bool * r_valid = __null) const : Variant::Type</text><ellipse cx="25174.59" cy="1850.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="25183.59" y="1853.687">get_translatable_strings(List&lt;String&gt; * p_strings) const : void</text><ellipse cx="25174.59" cy="1863.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="25183.59" y="1866.4917">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="25174.59" cy="1876.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="25183.59" y="1879.2964">tr(const StringName &amp; p_message) const : StringName</text><ellipse cx="25174.59" cy="1888.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="25183.59" y="1892.1011">is_queued_for_deletion() const : bool</text><ellipse cx="25174.59" cy="1901.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="25183.59" y="1904.9058">set_message_translation(bool p_enable) : void</text><ellipse cx="25174.59" cy="1914.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="25183.59" y="1917.7104">can_translate_messages() const : bool</text><ellipse cx="25174.59" cy="1927.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="25183.59" y="1930.5151">editor_set_section_unfold(const String &amp; p_section, bool p_unfolded) : void</text><ellipse cx="25174.59" cy="1940.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="25183.59" y="1943.3198">editor_is_section_unfolded(const String &amp; p_section) : bool</text><ellipse cx="25174.59" cy="1952.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="25183.59" y="1956.1245">editor_get_section_folding() const : const Set&lt;String&gt; &amp;</text><ellipse cx="25174.59" cy="1965.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="25183.59" y="1968.9292">editor_clear_section_folding() : void</text><ellipse cx="25174.59" cy="1978.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="25183.59" y="1981.7339">get_script_instance_binding(int p_script_language_index) : void *</text><ellipse cx="25174.59" cy="1991.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="25183.59" y="1994.5386">has_script_instance_binding(int p_script_language_index) : bool</text><ellipse cx="25174.59" cy="2004.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="25183.59" y="2007.3433">set_script_instance_binding(int p_script_language_index, void * p_data) : void</text><ellipse cx="25174.59" cy="2016.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="25183.59" y="2020.1479">clear_internal_resource_paths() : void</text><ellipse cx="25174.59" cy="2029.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="25183.59" y="2032.9526">Object() : void</text><ellipse cx="25174.59" cy="2042.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="25183.59" y="2045.7573">~Object() : void</text><ellipse cx="25174.59" cy="2055.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="25183.59" y="2058.562">cast_to(Object * p_object) : T *</text><ellipse cx="25174.59" cy="2068.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="245" x="25183.59" y="2071.3667">cast_to(const Object * p_object) : const T *</text><!--MD5=[8eacd4da8b6a8f3c33abf484b38f77cb]
class C_0000219886141561409828--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410" target="_top" title="Object##ConnectFlags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410" xlink:show="new" xlink:title="Object##ConnectFlags" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="99.2188" id="C_0000219886141561409828" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="25555.59" y="701.4531"/><ellipse cx="25585.44" cy="717.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25589.5494,723.4531 L25581.8306,723.4531 L25581.8306,711.0625 L25589.5494,711.0625 L25589.5494,713.2188 L25584.2838,713.2188 L25584.2838,715.8906 L25589.0494,715.8906 L25589.0494,718.0469 L25584.2838,718.0469 L25584.2838,721.2969 L25589.5494,721.2969 L25589.5494,723.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="133" x="25602.74" y="721.6074">Object::ConnectFlags</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25556.59" x2="25752.59" y1="733.4531" y2="733.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="25561.59" y="747.6636">CONNECT_DEFERRED</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="25561.59" y="760.4683">CONNECT_PERSIST</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="25561.59" y="773.2729">CONNECT_ONESHOT</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="25561.59" y="786.0776">CONNECT_REFERENCE_COUNTED</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25556.59" x2="25752.59" y1="792.6719" y2="792.6719"/></a><!--MD5=[c100d2fcbd7e4572a54d94b4ec867b89]
class C_0001267214583673362755--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418" target="_top" title="Object##Connection" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418" xlink:show="new" xlink:title="Object##Connection" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001267214583673362755" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="13154.09" y="662.9531"/><ellipse cx="13271.84" cy="678.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M13274.8088,684.5938 Q13274.2306,684.8906 13273.59,685.0313 Q13272.9494,685.1875 13272.2463,685.1875 Q13269.7463,685.1875 13268.4181,683.5469 Q13267.1056,681.8906 13267.1056,678.7656 Q13267.1056,675.6406 13268.4181,673.9844 Q13269.7463,672.3281 13272.2463,672.3281 Q13272.9494,672.3281 13273.59,672.4844 Q13274.2463,672.6406 13274.8088,672.9375 L13274.8088,675.6563 Q13274.1838,675.0781 13273.59,674.8125 Q13272.9963,674.5313 13272.3713,674.5313 Q13271.0275,674.5313 13270.34,675.6094 Q13269.6525,676.6719 13269.6525,678.7656 Q13269.6525,680.8594 13270.34,681.9375 Q13271.0275,683 13272.3713,683 Q13272.9963,683 13273.59,682.7344 Q13274.1838,682.4531 13274.8088,681.875 L13274.8088,684.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="13292.34" y="683.1074">Object::Connection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13155.09" x2="13516.09" y1="694.9531" y2="694.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" target="_top" title="source" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" xlink:show="new" xlink:title="source" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="13160.09" y="700.9531"/><ellipse cx="13165.09" cy="705.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" target="_top" title="source" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420" xlink:show="new" xlink:title="source" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="13174.09" y="709.1636">source : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" xlink:show="new" xlink:title="signal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="13160.09" y="713.7578"/><ellipse cx="13165.09" cy="718.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421" xlink:show="new" xlink:title="signal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="13174.09" y="721.9683">signal : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" xlink:show="new" xlink:title="target" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="13160.09" y="726.5625"/><ellipse cx="13165.09" cy="731.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422" xlink:show="new" xlink:title="target" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="13174.09" y="734.7729">target : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" xlink:show="new" xlink:title="flags" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="13160.09" y="739.3672"/><ellipse cx="13165.09" cy="744.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" target="_top" title="flags" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424" xlink:show="new" xlink:title="flags" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="13174.09" y="747.5776">flags : uint32_t</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" target="_top" title="binds" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" xlink:show="new" xlink:title="binds" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="13160.09" y="752.1719"/><ellipse cx="13165.09" cy="757.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" target="_top" title="binds" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425" xlink:show="new" xlink:title="binds" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="13174.09" y="760.3823">binds : Vector&lt;Variant&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="13155.09" x2="13516.09" y1="766.9766" y2="766.9766"/><ellipse cx="13165.09" cy="777.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="13174.09" y="781.187">operator&lt;(const Object::Connection &amp; p_conn) const : bool</text><ellipse cx="13165.09" cy="790.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="13174.09" y="793.9917">operator Variant() const : Variant</text><ellipse cx="13165.09" cy="803.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="13174.09" y="806.7964">Connection() : void</text><ellipse cx="13165.09" cy="816.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="13174.09" y="819.6011">Connection(const Variant &amp; p_variant) : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="13160.09" y="824.1953"/><ellipse cx="13165.09" cy="829.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="13174.09" y="832.4058">method : StringName</text></a><!--MD5=[d874fe1d316004bca753fee73a8324d9]
class C_0000250357724807605097--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448" target="_top" title="Object##Signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448" xlink:show="new" xlink:title="Object##Signal" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0000250357724807605097" style="stroke: #A80036; stroke-width: 1.5;" width="375" x="32890.09" y="707.9531"/><ellipse cx="33030.34" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33033.3088,729.5938 Q33032.7306,729.8906 33032.09,730.0313 Q33031.4494,730.1875 33030.7463,730.1875 Q33028.2463,730.1875 33026.9181,728.5469 Q33025.6056,726.8906 33025.6056,723.7656 Q33025.6056,720.6406 33026.9181,718.9844 Q33028.2463,717.3281 33030.7463,717.3281 Q33031.4494,717.3281 33032.09,717.4844 Q33032.7463,717.6406 33033.3088,717.9375 L33033.3088,720.6563 Q33032.6838,720.0781 33032.09,719.8125 Q33031.4963,719.5313 33030.8713,719.5313 Q33029.5275,719.5313 33028.84,720.6094 Q33028.1525,721.6719 33028.1525,723.7656 Q33028.1525,725.8594 33028.84,726.9375 Q33029.5275,728 33030.8713,728 Q33031.4963,728 33032.09,727.7344 Q33032.6838,727.4531 33033.3088,726.875 L33033.3088,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="33050.84" y="728.1074">Object::Signal</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32891.09" x2="33264.09" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" target="_top" title="user" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" xlink:show="new" xlink:title="user" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32896.09" y="745.9531"/><ellipse cx="32901.09" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" target="_top" title="user" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472" xlink:show="new" xlink:title="user" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="32910.09" y="754.1636">user : MethodInfo</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" target="_top" title="slot_map" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" xlink:show="new" xlink:title="slot_map" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32896.09" y="758.7578"/><ellipse cx="32901.09" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" target="_top" title="slot_map" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473" xlink:show="new" xlink:title="slot_map" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="32910.09" y="766.9683">slot_map : VMap&lt;Object::Signal::Target,Object::Signal::Slot&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32891.09" x2="33264.09" y1="773.5625" y2="773.5625"/><ellipse cx="32901.09" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="32910.09" y="787.7729">Signal() : void</text><!--MD5=[4eb60b73893006bfd9288c7c65337e99]
class C_0002064336919270342687--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773" target="_top" title="ObjectDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773" xlink:show="new" xlink:title="ObjectDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="99.2188" id="C_0002064336919270342687" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="25788.59" y="701.4531"/><ellipse cx="25912.84" cy="717.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25915.8088,723.0938 Q25915.2306,723.3906 25914.59,723.5313 Q25913.9494,723.6875 25913.2463,723.6875 Q25910.7463,723.6875 25909.4181,722.0469 Q25908.1056,720.3906 25908.1056,717.2656 Q25908.1056,714.1406 25909.4181,712.4844 Q25910.7463,710.8281 25913.2463,710.8281 Q25913.9494,710.8281 25914.59,710.9844 Q25915.2463,711.1406 25915.8088,711.4375 L25915.8088,714.1563 Q25915.1838,713.5781 25914.59,713.3125 Q25913.9963,713.0313 25913.3713,713.0313 Q25912.0275,713.0313 25911.34,714.1094 Q25910.6525,715.1719 25910.6525,717.2656 Q25910.6525,719.3594 25911.34,720.4375 Q25912.0275,721.5 25913.3713,721.5 Q25913.9963,721.5 25914.59,721.2344 Q25915.1838,720.9531 25915.8088,720.375 L25915.8088,723.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="25933.34" y="721.6074">ObjectDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25789.59" x2="26101.59" y1="733.4531" y2="733.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25789.59" x2="26101.59" y1="741.4531" y2="741.4531"/><ellipse cx="25799.59" cy="752.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="266" x="25808.59" y="755.6636">get_instance(ObjectID p_instance_id) : Object *</text><ellipse cx="25799.59" cy="765.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="25808.59" y="768.4683">debug_objects(ObjectDB::DebugFunc p_func) : void</text><ellipse cx="25799.59" cy="778.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="25808.59" y="781.2729">get_object_count() : int</text><ellipse cx="25799.59" cy="790.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="25808.59" y="794.0776">instance_validate(Object * p_ptr) : bool</text></a><!--MD5=[84493b5de8053214b7de638c818a1c90]
class C_0001040552259499621557--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L775" target="_top" title="ObjectDB##ObjectPtrHash" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L775" xlink:show="new" xlink:title="ObjectDB##ObjectPtrHash" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="60.8047" id="C_0001040552259499621557" style="stroke: #A80036; stroke-width: 1.5;" width="234" x="25828.59" y="284.9531"/><ellipse cx="25864.74" cy="300.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25867.7088,306.5938 Q25867.1306,306.8906 25866.49,307.0313 Q25865.8494,307.1875 25865.1463,307.1875 Q25862.6463,307.1875 25861.3181,305.5469 Q25860.0056,303.8906 25860.0056,300.7656 Q25860.0056,297.6406 25861.3181,295.9844 Q25862.6463,294.3281 25865.1463,294.3281 Q25865.8494,294.3281 25866.49,294.4844 Q25867.1463,294.6406 25867.7088,294.9375 L25867.7088,297.6563 Q25867.0838,297.0781 25866.49,296.8125 Q25865.8963,296.5313 25865.2713,296.5313 Q25863.9275,296.5313 25863.24,297.6094 Q25862.5525,298.6719 25862.5525,300.7656 Q25862.5525,302.8594 25863.24,303.9375 Q25863.9275,305 25865.2713,305 Q25865.8963,305 25866.49,304.7344 Q25867.0838,304.4531 25867.7088,303.875 L25867.7088,306.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="155" x="25883.44" y="305.1074">ObjectDB::ObjectPtrHash</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25829.59" x2="26061.59" y1="316.9531" y2="316.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25829.59" x2="26061.59" y1="324.9531" y2="324.9531"/><ellipse cx="25839.59" cy="335.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="25848.59" y="339.1636">hash(const Object * p_obj) : uint32_t</text></a><!--MD5=[acae977502fa5a12b95dcdad70114268]
class C_0001201075309499995726--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L244" target="_top" title="GetTypeInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L244" xlink:show="new" xlink:title="GetTypeInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0001201075309499995726" style="stroke: #A80036; stroke-width: 1.5;" width="416" x="12098.59" y="707.9531"/><ellipse cx="12113.59" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12116.5588,729.5938 Q12115.9806,729.8906 12115.34,730.0313 Q12114.6994,730.1875 12113.9963,730.1875 Q12111.4963,730.1875 12110.1681,728.5469 Q12108.8556,726.8906 12108.8556,723.7656 Q12108.8556,720.6406 12110.1681,718.9844 Q12111.4963,717.3281 12113.9963,717.3281 Q12114.6994,717.3281 12115.34,717.4844 Q12115.9963,717.6406 12116.5588,717.9375 L12116.5588,720.6563 Q12115.9338,720.0781 12115.34,719.8125 Q12114.7463,719.5313 12114.1213,719.5313 Q12112.7775,719.5313 12112.09,720.6094 Q12111.4025,721.6719 12111.4025,723.7656 Q12111.4025,725.8594 12112.09,726.9375 Q12112.7775,728 12114.1213,728 Q12114.7463,728 12115.34,727.7344 Q12115.9338,727.4531 12116.5588,726.875 L12116.5588,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="12127.59" y="728.1074">GetTypeInfo</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="308" x="12209.59" y="704.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="12210.59" y="717.0918">T *,typename EnableIf&lt;TypeInherits&lt;Object,T&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12099.59" x2="12513.59" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12104.59" y="745.9531"/><ellipse cx="12109.59" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="12118.59" y="754.1636">VARIANT_TYPE : const Variant::Type</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12104.59" y="758.7578"/><ellipse cx="12109.59" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="248" x="12118.59" y="766.9683">METADATA : const GodotTypeInfo::Metadata</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="12099.59" x2="12513.59" y1="773.5625" y2="773.5625"/><ellipse cx="12109.59" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="12118.59" y="787.7729">get_class_info() : PropertyInfo</text><!--MD5=[b29480471b2d78616b61e0762c4ff355]
class C_0002270819269735237405--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L253" target="_top" title="GetTypeInfo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L253" xlink:show="new" xlink:title="GetTypeInfo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0002270819269735237405" style="stroke: #A80036; stroke-width: 1.5;" width="569" x="12550.09" y="707.9531"/><ellipse cx="12565.09" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12568.0588,729.5938 Q12567.4806,729.8906 12566.84,730.0313 Q12566.1994,730.1875 12565.4963,730.1875 Q12562.9963,730.1875 12561.6681,728.5469 Q12560.3556,726.8906 12560.3556,723.7656 Q12560.3556,720.6406 12561.6681,718.9844 Q12562.9963,717.3281 12565.4963,717.3281 Q12566.1994,717.3281 12566.84,717.4844 Q12567.4963,717.6406 12568.0588,717.9375 L12568.0588,720.6563 Q12567.4338,720.0781 12566.84,719.8125 Q12566.2463,719.5313 12565.6213,719.5313 Q12564.2775,719.5313 12563.59,720.6094 Q12562.9025,721.6719 12562.9025,723.7656 Q12562.9025,725.8594 12563.59,726.9375 Q12564.2775,728 12565.6213,728 Q12566.2463,728 12566.84,727.7344 Q12567.4338,727.4531 12568.0588,726.875 L12568.0588,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="12579.09" y="728.1074">GetTypeInfo</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="461" x="12661.09" y="704.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="12662.09" y="717.0918">const type-parameter-0-0 *,typename EnableIf&lt;TypeInherits&lt;Object,T&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="12551.09" x2="13118.09" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12556.09" y="745.9531"/><ellipse cx="12561.09" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" target="_top" title="VARIANT_TYPE" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254" xlink:show="new" xlink:title="VARIANT_TYPE" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="12570.09" y="754.1636">VARIANT_TYPE : const Variant::Type</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12556.09" y="758.7578"/><ellipse cx="12561.09" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" target="_top" title="METADATA" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255" xlink:show="new" xlink:title="METADATA" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="248" x="12570.09" y="766.9683">METADATA : const GodotTypeInfo::Metadata</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="12551.09" x2="13118.09" y1="773.5625" y2="773.5625"/><ellipse cx="12561.09" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="12570.09" y="787.7729">get_class_info() : PropertyInfo</text><!--MD5=[429b9eeb82fc254252e04d2fe78f09a2]
class C_0001725595510223069271--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L207" target="_top" title="MethodBind" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L207" xlink:show="new" xlink:title="MethodBind" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="368.1172" id="C_0001725595510223069271" style="stroke: #A80036; stroke-width: 1.5;" width="627" x="3739.09" y="3111.4531"/><ellipse cx="4011.34" cy="3127.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4011.4494,3122.7969 L4010.2931,3127.875 L4012.6213,3127.875 L4011.4494,3122.7969 Z M4009.965,3120.5625 L4012.9494,3120.5625 L4016.3088,3132.9531 L4013.8556,3132.9531 L4013.09,3129.8906 L4009.8088,3129.8906 L4009.0588,3132.9531 L4006.6213,3132.9531 L4009.965,3120.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="74" x="4031.84" y="3131.6074">MethodBind</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3740.09" x2="4365.09" y1="3143.4531" y2="3143.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3740.09" x2="4365.09" y1="3151.4531" y2="3151.4531"/><ellipse cx="3750.09" cy="3162.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="3759.09" y="3165.6636">get_default_arguments() const : Vector&lt;Variant&gt;</text><ellipse cx="3750.09" cy="3175.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="3759.09" y="3178.4683">get_default_argument_count() const : int</text><ellipse cx="3750.09" cy="3188.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="3759.09" y="3191.2729">has_default_argument(int p_arg) const : Variant</text><ellipse cx="3750.09" cy="3200.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="3759.09" y="3204.0776">get_default_argument(int p_arg) const : Variant</text><ellipse cx="3750.09" cy="3213.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="3759.09" y="3216.8823">get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3750.09" cy="3226.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="3759.09" y="3229.687">get_argument_info(int p_argument) const : PropertyInfo</text><ellipse cx="3750.09" cy="3239.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3759.09" y="3242.4917">get_return_info() const : PropertyInfo</text><ellipse cx="3750.09" cy="3252.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3759.09" y="3255.2964">set_argument_names(const Vector&lt;StringName&gt; &amp; p_names) : void</text><ellipse cx="3750.09" cy="3264.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="3759.09" y="3268.1011">get_argument_names() const : Vector&lt;StringName&gt;</text><ellipse cx="3750.09" cy="3277.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="3759.09" y="3280.9058">get_argument_meta(int p_arg) const = 0 : GodotTypeInfo::Metadata</text><ellipse cx="3750.09" cy="3290.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="3759.09" y="3293.7104">set_hint_flags(uint32_t p_hint) : void</text><ellipse cx="3750.09" cy="3303.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="3759.09" y="3306.5151">get_hint_flags() const : uint32_t</text><ellipse cx="3750.09" cy="3316.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="216" x="3759.09" y="3319.3198">get_instance_class() const = 0 : String</text><ellipse cx="3750.09" cy="3328.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="3759.09" y="3332.1245">get_argument_count() const : int</text><ellipse cx="3750.09" cy="3341.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="601" x="3759.09" y="3344.9292">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) = 0 : Variant</text><ellipse cx="3750.09" cy="3354.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="3759.09" y="3357.7339">ptrcall(Object * p_object, const void ** p_args, void * r_ret) = 0 : void</text><ellipse cx="3750.09" cy="3367.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3759.09" y="3370.5386">get_name() const : StringName</text><ellipse cx="3750.09" cy="3380.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="3759.09" y="3383.3433">set_name(const StringName &amp; p_name) : void</text><ellipse cx="3750.09" cy="3392.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3759.09" y="3396.1479">get_method_id() const : int</text><ellipse cx="3750.09" cy="3405.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3759.09" y="3408.9526">is_const() const : bool</text><ellipse cx="3750.09" cy="3418.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3759.09" y="3421.7573">has_return() const : bool</text><ellipse cx="3750.09" cy="3431.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3759.09" y="3434.562">is_vararg() const : bool</text><ellipse cx="3750.09" cy="3444.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="3759.09" y="3447.3667">set_default_arguments(const Vector&lt;Variant&gt; &amp; p_defargs) : void</text><ellipse cx="3750.09" cy="3456.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3759.09" y="3460.1714">MethodBind() : void</text><ellipse cx="3750.09" cy="3469.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="3759.09" y="3472.9761">~MethodBind() : void</text></a><!--MD5=[b0cd7d2b6e06ebb84bc64d0e2ab05237]
class C_0000626842387047507019--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L301" target="_top" title="MethodBindVarArg" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L301" xlink:show="new" xlink:title="MethodBindVarArg" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="188.8516" id="C_0000626842387047507019" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="31761.09" y="4676.9531"/><ellipse cx="31994.84" cy="4692.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31997.8088,4698.5938 Q31997.2306,4698.8906 31996.59,4699.0313 Q31995.9494,4699.1875 31995.2463,4699.1875 Q31992.7463,4699.1875 31991.4181,4697.5469 Q31990.1056,4695.8906 31990.1056,4692.7656 Q31990.1056,4689.6406 31991.4181,4687.9844 Q31992.7463,4686.3281 31995.2463,4686.3281 Q31995.9494,4686.3281 31996.59,4686.4844 Q31997.2463,4686.6406 31997.8088,4686.9375 L31997.8088,4689.6563 Q31997.1838,4689.0781 31996.59,4688.8125 Q31995.9963,4688.5313 31995.3713,4688.5313 Q31994.0275,4688.5313 31993.34,4689.6094 Q31992.6525,4690.6719 31992.6525,4692.7656 Q31992.6525,4694.8594 31993.34,4695.9375 Q31994.0275,4697 31995.3713,4697 Q31995.9963,4697 31996.59,4696.7344 Q31997.1838,4696.4531 31997.8088,4695.875 L31997.8088,4698.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="32015.34" y="4697.1074">MethodBindVarArg</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="32358.09" y="4673.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="32359.09" y="4686.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31762.09" x2="32363.09" y1="4708.9531" y2="4708.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="31762.09" x2="32363.09" y1="4716.9531" y2="4716.9531"/><ellipse cx="31772.09" cy="4727.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="31781.09" y="4731.1636">_gen_argument_type_info(int p_arg) const : PropertyInfo</text><ellipse cx="31772.09" cy="4740.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="31781.09" y="4743.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="31772.09" cy="4753.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="31781.09" y="4756.7729">get_argument_meta(int ) const : GodotTypeInfo::Metadata</text><ellipse cx="31772.09" cy="4766.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="31781.09" y="4769.5776">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="31772.09" cy="4779.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="31781.09" y="4782.3823">set_method_info(const MethodInfo &amp; p_info, bool p_return_nil_is_variant) : void</text><ellipse cx="31772.09" cy="4791.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="31781.09" y="4795.187">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="31772.09" cy="4804.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="31781.09" y="4807.9917">set_method(MethodBindVarArg::NativeCall p_method) : void</text><ellipse cx="31772.09" cy="4817.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="31781.09" y="4820.7964">is_const() const : bool</text><ellipse cx="31772.09" cy="4830.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="31781.09" y="4833.6011">get_instance_class() const : String</text><ellipse cx="31772.09" cy="4843.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="31781.09" y="4846.4058">is_vararg() const : bool</text><ellipse cx="31772.09" cy="4856" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="31781.09" y="4859.2104">MethodBindVarArg&lt;T&gt;() : void</text></a><!--MD5=[4e2433468be1bf4f91db1e1408bce40c]
class C_0002161264899189627575--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4" target="_top" title="MethodBind0" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4" xlink:show="new" xlink:title="MethodBind0" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0002161264899189627575" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="2707.09" y="5881.9531"/><ellipse cx="2963.34" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2966.3088,5903.5938 Q2965.7306,5903.8906 2965.09,5904.0313 Q2964.4494,5904.1875 2963.7463,5904.1875 Q2961.2463,5904.1875 2959.9181,5902.5469 Q2958.6056,5900.8906 2958.6056,5897.7656 Q2958.6056,5894.6406 2959.9181,5892.9844 Q2961.2463,5891.3281 2963.7463,5891.3281 Q2964.4494,5891.3281 2965.09,5891.4844 Q2965.7463,5891.6406 2966.3088,5891.9375 L2966.3088,5894.6563 Q2965.6838,5894.0781 2965.09,5893.8125 Q2964.4963,5893.5313 2963.8713,5893.5313 Q2962.5275,5893.5313 2961.84,5894.6094 Q2961.1525,5895.6719 2961.1525,5897.7656 Q2961.1525,5899.8594 2961.84,5900.9375 Q2962.5275,5902 2963.8713,5902 Q2964.4963,5902 2965.09,5901.7344 Q2965.6838,5901.4531 2966.3088,5900.875 L2966.3088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2983.84" y="5902.1074">MethodBind0</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2708.09" x2="3309.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L8" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L8" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2713.09" y="5919.9531"/><ellipse cx="2718.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L8" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L8" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2727.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2708.09" x2="3309.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="2718.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2727.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="2718.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="2727.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="2718.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2727.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="2718.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2727.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="2718.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2727.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="2718.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="2727.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="2718.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="2727.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="2718.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2727.09" y="6038.6011">MethodBind0() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2713.09" y="6043.1953"/><ellipse cx="2718.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2727.09" y="6051.4058">method : void (__UnexistingClass::*)()</text></a><!--MD5=[402a780a243bcc136218f82ea435190e]
class C_0000514530488699023626--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L182" target="_top" title="MethodBind0R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L182" xlink:show="new" xlink:title="MethodBind0R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000514530488699023626" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3166.09" y="11607.9531"/><ellipse cx="3412.34" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3415.3088,11629.5938 Q3414.7306,11629.8906 3414.09,11630.0313 Q3413.4494,11630.1875 3412.7463,11630.1875 Q3410.2463,11630.1875 3408.9181,11628.5469 Q3407.6056,11626.8906 3407.6056,11623.7656 Q3407.6056,11620.6406 3408.9181,11618.9844 Q3410.2463,11617.3281 3412.7463,11617.3281 Q3413.4494,11617.3281 3414.09,11617.4844 Q3414.7463,11617.6406 3415.3088,11617.9375 L3415.3088,11620.6563 Q3414.6838,11620.0781 3414.09,11619.8125 Q3413.4963,11619.5313 3412.8713,11619.5313 Q3411.5275,11619.5313 3410.84,11620.6094 Q3410.1525,11621.6719 3410.1525,11623.7656 Q3410.1525,11625.8594 3410.84,11626.9375 Q3411.5275,11628 3412.8713,11628 Q3413.4963,11628 3414.09,11627.7344 Q3414.6838,11627.4531 3415.3088,11626.875 L3415.3088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="3432.84" y="11628.1074">MethodBind0R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="3762.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="3763.09" y="11617.0918">R</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3167.09" x2="3768.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L186" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L186" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3172.09" y="11645.9531"/><ellipse cx="3177.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L186" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L186" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3186.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3167.09" x2="3768.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="3177.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3186.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3177.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3186.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3177.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3186.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3177.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3186.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3177.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3186.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="3177.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3186.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3177.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3186.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3177.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3186.09" y="11764.6011">MethodBind0R&lt;R&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3172.09" y="11769.1953"/><ellipse cx="3177.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="3186.09" y="11777.4058">method : R (__UnexistingClass::*)()</text></a><!--MD5=[bbd81add5d463cd7c646b9b15b455900]
class C_0001500902353747816170--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L360" target="_top" title="MethodBind0C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L360" xlink:show="new" xlink:title="MethodBind0C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001500902353747816170" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3532.09" y="5881.9531"/><ellipse cx="3784.34" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3787.3088,5903.5938 Q3786.7306,5903.8906 3786.09,5904.0313 Q3785.4494,5904.1875 3784.7463,5904.1875 Q3782.2463,5904.1875 3780.9181,5902.5469 Q3779.6056,5900.8906 3779.6056,5897.7656 Q3779.6056,5894.6406 3780.9181,5892.9844 Q3782.2463,5891.3281 3784.7463,5891.3281 Q3785.4494,5891.3281 3786.09,5891.4844 Q3786.7463,5891.6406 3787.3088,5891.9375 L3787.3088,5894.6563 Q3786.6838,5894.0781 3786.09,5893.8125 Q3785.4963,5893.5313 3784.8713,5893.5313 Q3783.5275,5893.5313 3782.84,5894.6094 Q3782.1525,5895.6719 3782.1525,5897.7656 Q3782.1525,5899.8594 3782.84,5900.9375 Q3783.5275,5902 3784.8713,5902 Q3785.4963,5902 3786.09,5901.7344 Q3786.6838,5901.4531 3787.3088,5900.875 L3787.3088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="3804.84" y="5902.1074">MethodBind0C</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3533.09" x2="4134.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L364" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L364" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3538.09" y="5919.9531"/><ellipse cx="3543.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L364" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L364" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3552.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3533.09" x2="4134.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="3543.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3552.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3543.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3552.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3543.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3552.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3543.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3552.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3543.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3552.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="3543.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3552.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3543.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3552.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3543.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3552.09" y="6038.6011">MethodBind0C() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3538.09" y="6043.1953"/><ellipse cx="3543.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="3552.09" y="6051.4058">method : void (__UnexistingClass::*)() const</text></a><!--MD5=[2e6b94c4a210e718e460b74e109abf55]
class C_0001463339540638256927--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L538" target="_top" title="MethodBind0RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L538" xlink:show="new" xlink:title="MethodBind0RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001463339540638256927" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3901.09" y="11607.9531"/><ellipse cx="4143.34" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4146.3088,11629.5938 Q4145.7306,11629.8906 4145.09,11630.0313 Q4144.4494,11630.1875 4143.7463,11630.1875 Q4141.2463,11630.1875 4139.9181,11628.5469 Q4138.6056,11626.8906 4138.6056,11623.7656 Q4138.6056,11620.6406 4139.9181,11618.9844 Q4141.2463,11617.3281 4143.7463,11617.3281 Q4144.4494,11617.3281 4145.09,11617.4844 Q4145.7463,11617.6406 4146.3088,11617.9375 L4146.3088,11620.6563 Q4145.6838,11620.0781 4145.09,11619.8125 Q4144.4963,11619.5313 4143.8713,11619.5313 Q4142.5275,11619.5313 4141.84,11620.6094 Q4141.1525,11621.6719 4141.1525,11623.7656 Q4141.1525,11625.8594 4141.84,11626.9375 Q4142.5275,11628 4143.8713,11628 Q4144.4963,11628 4145.09,11627.7344 Q4145.6838,11627.4531 4146.3088,11626.875 L4146.3088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="4163.84" y="11628.1074">MethodBind0RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="4497.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="4498.09" y="11617.0918">R</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3902.09" x2="4503.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3907.09" y="11645.9531"/><ellipse cx="3912.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3921.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3902.09" x2="4503.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="3912.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3921.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3912.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3921.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3912.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3921.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3912.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3921.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3912.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3921.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="3912.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3921.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3912.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3921.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3912.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3921.09" y="11764.6011">MethodBind0RC&lt;R&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3907.09" y="11769.1953"/><ellipse cx="3912.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="3921.09" y="11777.4058">method : R (__UnexistingClass::*)() const</text></a><!--MD5=[0008824f5d6ab5b87bf209ad1b96abdf]
class C_0001770130608234301442--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L716" target="_top" title="MethodBind1" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L716" xlink:show="new" xlink:title="MethodBind1" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001770130608234301442" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="4182.09" y="5881.9531"/><ellipse cx="4428.84" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4431.8088,5903.5938 Q4431.2306,5903.8906 4430.59,5904.0313 Q4429.9494,5904.1875 4429.2463,5904.1875 Q4426.7463,5904.1875 4425.4181,5902.5469 Q4424.1056,5900.8906 4424.1056,5897.7656 Q4424.1056,5894.6406 4425.4181,5892.9844 Q4426.7463,5891.3281 4429.2463,5891.3281 Q4429.9494,5891.3281 4430.59,5891.4844 Q4431.2463,5891.6406 4431.8088,5891.9375 L4431.8088,5894.6563 Q4431.1838,5894.0781 4430.59,5893.8125 Q4429.9963,5893.5313 4429.3713,5893.5313 Q4428.0275,5893.5313 4427.34,5894.6094 Q4426.6525,5895.6719 4426.6525,5897.7656 Q4426.6525,5899.8594 4427.34,5900.9375 Q4428.0275,5902 4429.3713,5902 Q4429.9963,5902 4430.59,5901.7344 Q4431.1838,5901.4531 4431.8088,5900.875 L4431.8088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="4449.34" y="5902.1074">MethodBind1</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="17" x="4771.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="15" x="4772.09" y="5891.0918">P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4183.09" x2="4784.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L720" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L720" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4188.09" y="5919.9531"/><ellipse cx="4193.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L720" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L720" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4202.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4183.09" x2="4784.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="4193.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4202.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="4193.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="4202.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="4193.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4202.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="4193.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4202.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="4193.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4202.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="4193.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="4202.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="4193.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4202.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="4193.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4202.09" y="6038.6011">MethodBind1&lt;P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4188.09" y="6043.1953"/><ellipse cx="4193.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="4202.09" y="6051.4058">method : void (__UnexistingClass::*)(P1)</text></a><!--MD5=[9e6f6d7d75b1f768a4fe6441ee630102]
class C_0001227602006568872099--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L902" target="_top" title="MethodBind1R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L902" xlink:show="new" xlink:title="MethodBind1R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001227602006568872099" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="4636.09" y="11607.9531"/><ellipse cx="4872.84" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4875.8088,11629.5938 Q4875.2306,11629.8906 4874.59,11630.0313 Q4873.9494,11630.1875 4873.2463,11630.1875 Q4870.7463,11630.1875 4869.4181,11628.5469 Q4868.1056,11626.8906 4868.1056,11623.7656 Q4868.1056,11620.6406 4869.4181,11618.9844 Q4870.7463,11617.3281 4873.2463,11617.3281 Q4873.9494,11617.3281 4874.59,11617.4844 Q4875.2463,11617.6406 4875.8088,11617.9375 L4875.8088,11620.6563 Q4875.1838,11620.0781 4874.59,11619.8125 Q4873.9963,11619.5313 4873.3713,11619.5313 Q4872.0275,11619.5313 4871.34,11620.6094 Q4870.6525,11621.6719 4870.6525,11623.7656 Q4870.6525,11625.8594 4871.34,11626.9375 Q4872.0275,11628 4873.3713,11628 Q4873.9963,11628 4874.59,11627.7344 Q4875.1838,11627.4531 4875.8088,11626.875 L4875.8088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="4893.34" y="11628.1074">MethodBind1R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="5213.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="5214.09" y="11617.0918">R,P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4637.09" x2="5238.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L906" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L906" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4642.09" y="11645.9531"/><ellipse cx="4647.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L906" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L906" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4656.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4637.09" x2="5238.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="4647.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4656.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="4647.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="4656.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="4647.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4656.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="4647.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4656.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="4647.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4656.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="4647.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="4656.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="4647.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4656.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="4647.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="4656.09" y="11764.6011">MethodBind1R&lt;R, P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4642.09" y="11769.1953"/><ellipse cx="4647.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4656.09" y="11777.4058">method : R (__UnexistingClass::*)(P1)</text></a><!--MD5=[e81848522d508248c74593b89fdc2a23]
class C_0000721345300172868993--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1088" target="_top" title="MethodBind1C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1088" xlink:show="new" xlink:title="MethodBind1C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000721345300172868993" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="4832.09" y="5881.9531"/><ellipse cx="5074.84" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5077.8088,5903.5938 Q5077.2306,5903.8906 5076.59,5904.0313 Q5075.9494,5904.1875 5075.2463,5904.1875 Q5072.7463,5904.1875 5071.4181,5902.5469 Q5070.1056,5900.8906 5070.1056,5897.7656 Q5070.1056,5894.6406 5071.4181,5892.9844 Q5072.7463,5891.3281 5075.2463,5891.3281 Q5075.9494,5891.3281 5076.59,5891.4844 Q5077.2463,5891.6406 5077.8088,5891.9375 L5077.8088,5894.6563 Q5077.1838,5894.0781 5076.59,5893.8125 Q5075.9963,5893.5313 5075.3713,5893.5313 Q5074.0275,5893.5313 5073.34,5894.6094 Q5072.6525,5895.6719 5072.6525,5897.7656 Q5072.6525,5899.8594 5073.34,5900.9375 Q5074.0275,5902 5075.3713,5902 Q5075.9963,5902 5076.59,5901.7344 Q5077.1838,5901.4531 5077.8088,5900.875 L5077.8088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="5095.34" y="5902.1074">MethodBind1C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="17" x="5421.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="15" x="5422.09" y="5891.0918">P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4833.09" x2="5434.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1092" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1092" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4838.09" y="5919.9531"/><ellipse cx="4843.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1092" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1092" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4852.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="4833.09" x2="5434.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="4843.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4852.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="4843.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="4852.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="4843.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="4852.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="4843.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="4852.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="4843.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="4852.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="4843.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="4852.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="4843.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="4852.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="4843.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4852.09" y="6038.6011">MethodBind1C&lt;P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="4838.09" y="6043.1953"/><ellipse cx="4843.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4852.09" y="6051.4058">method : void (__UnexistingClass::*)(P1) const</text></a><!--MD5=[d3f74a66180c820beb47965a2e4477bd]
class C_0000779559418824132960--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1274" target="_top" title="MethodBind1RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1274" xlink:show="new" xlink:title="MethodBind1RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000779559418824132960" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="5371.09" y="11607.9531"/><ellipse cx="5603.84" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5606.8088,11629.5938 Q5606.2306,11629.8906 5605.59,11630.0313 Q5604.9494,11630.1875 5604.2463,11630.1875 Q5601.7463,11630.1875 5600.4181,11628.5469 Q5599.1056,11626.8906 5599.1056,11623.7656 Q5599.1056,11620.6406 5600.4181,11618.9844 Q5601.7463,11617.3281 5604.2463,11617.3281 Q5604.9494,11617.3281 5605.59,11617.4844 Q5606.2463,11617.6406 5606.8088,11617.9375 L5606.8088,11620.6563 Q5606.1838,11620.0781 5605.59,11619.8125 Q5604.9963,11619.5313 5604.3713,11619.5313 Q5603.0275,11619.5313 5602.34,11620.6094 Q5601.6525,11621.6719 5601.6525,11623.7656 Q5601.6525,11625.8594 5602.34,11626.9375 Q5603.0275,11628 5604.3713,11628 Q5604.9963,11628 5605.59,11627.7344 Q5606.1838,11627.4531 5606.8088,11626.875 L5606.8088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="5624.34" y="11628.1074">MethodBind1RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="29" x="5948.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="27" x="5949.09" y="11617.0918">R,P1</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5372.09" x2="5973.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1278" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1278" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5377.09" y="11645.9531"/><ellipse cx="5382.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1278" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1278" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5391.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5372.09" x2="5973.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="5382.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5391.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="5382.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="5391.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="5382.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="5391.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="5382.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="5391.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="5382.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="5391.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="5382.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="5391.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="5382.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5391.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="5382.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="5391.09" y="11764.6011">MethodBind1RC&lt;R, P1&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5377.09" y="11769.1953"/><ellipse cx="5382.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="5391.09" y="11777.4058">method : R (__UnexistingClass::*)(P1) const</text></a><!--MD5=[0b280f1abb16f5cdc51055da58a97cd8]
class C_0001326581917102107425--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1460" target="_top" title="MethodBind2" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1460" xlink:show="new" xlink:title="MethodBind2" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001326581917102107425" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="5482.09" y="5881.9531"/><ellipse cx="5719.34" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5722.3088,5903.5938 Q5721.7306,5903.8906 5721.09,5904.0313 Q5720.4494,5904.1875 5719.7463,5904.1875 Q5717.2463,5904.1875 5715.9181,5902.5469 Q5714.6056,5900.8906 5714.6056,5897.7656 Q5714.6056,5894.6406 5715.9181,5892.9844 Q5717.2463,5891.3281 5719.7463,5891.3281 Q5720.4494,5891.3281 5721.09,5891.4844 Q5721.7463,5891.6406 5722.3088,5891.9375 L5722.3088,5894.6563 Q5721.6838,5894.0781 5721.09,5893.8125 Q5720.4963,5893.5313 5719.8713,5893.5313 Q5718.5275,5893.5313 5717.84,5894.6094 Q5717.1525,5895.6719 5717.1525,5897.7656 Q5717.1525,5899.8594 5717.84,5900.9375 Q5718.5275,5902 5719.8713,5902 Q5720.4963,5902 5721.09,5901.7344 Q5721.6838,5901.4531 5722.3088,5900.875 L5722.3088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="5739.84" y="5902.1074">MethodBind2</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="6052.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="6053.09" y="5891.0918">P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5483.09" x2="6084.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1464" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1464" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5488.09" y="5919.9531"/><ellipse cx="5493.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1464" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1464" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="5502.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="5483.09" x2="6084.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="5493.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5502.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="5493.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="5502.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="5493.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="5502.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="5493.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="5502.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="5493.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="5502.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="5493.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="5502.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="5493.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5502.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="5493.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5502.09" y="6038.6011">MethodBind2&lt;P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="5488.09" y="6043.1953"/><ellipse cx="5493.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="5502.09" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2)</text></a><!--MD5=[5bb124d142bc7bb4b95bdbec111eb0d0]
class C_0000845455246171879191--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1654" target="_top" title="MethodBind2R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1654" xlink:show="new" xlink:title="MethodBind2R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000845455246171879191" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6106.09" y="11607.9531"/><ellipse cx="6333.34" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6336.3088,11629.5938 Q6335.7306,11629.8906 6335.09,11630.0313 Q6334.4494,11630.1875 6333.7463,11630.1875 Q6331.2463,11630.1875 6329.9181,11628.5469 Q6328.6056,11626.8906 6328.6056,11623.7656 Q6328.6056,11620.6406 6329.9181,11618.9844 Q6331.2463,11617.3281 6333.7463,11617.3281 Q6334.4494,11617.3281 6335.09,11617.4844 Q6335.7463,11617.6406 6336.3088,11617.9375 L6336.3088,11620.6563 Q6335.6838,11620.0781 6335.09,11619.8125 Q6334.4963,11619.5313 6333.8713,11619.5313 Q6332.5275,11619.5313 6331.84,11620.6094 Q6331.1525,11621.6719 6331.1525,11623.7656 Q6331.1525,11625.8594 6331.84,11626.9375 Q6332.5275,11628 6333.8713,11628 Q6334.4963,11628 6335.09,11627.7344 Q6335.6838,11627.4531 6336.3088,11626.875 L6336.3088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="6353.84" y="11628.1074">MethodBind2R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="48" x="6664.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="46" x="6665.09" y="11617.0918">R,P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6107.09" x2="6708.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1658" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1658" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6112.09" y="11645.9531"/><ellipse cx="6117.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1658" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1658" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6126.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6107.09" x2="6708.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="6117.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6126.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6117.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6126.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6117.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6126.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6117.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6126.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6117.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6126.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="6117.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6126.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6117.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6126.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6117.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6126.09" y="11764.6011">MethodBind2R&lt;R, P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6112.09" y="11769.1953"/><ellipse cx="6117.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="6126.09" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2)</text></a><!--MD5=[f3e63cb25455a0f6a876b1db68574a30]
class C_0000081704011730798793--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1848" target="_top" title="MethodBind2C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1848" xlink:show="new" xlink:title="MethodBind2C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000081704011730798793" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6132.09" y="5881.9531"/><ellipse cx="6365.34" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6368.3088,5903.5938 Q6367.7306,5903.8906 6367.09,5904.0313 Q6366.4494,5904.1875 6365.7463,5904.1875 Q6363.2463,5904.1875 6361.9181,5902.5469 Q6360.6056,5900.8906 6360.6056,5897.7656 Q6360.6056,5894.6406 6361.9181,5892.9844 Q6363.2463,5891.3281 6365.7463,5891.3281 Q6366.4494,5891.3281 6367.09,5891.4844 Q6367.7463,5891.6406 6368.3088,5891.9375 L6368.3088,5894.6563 Q6367.6838,5894.0781 6367.09,5893.8125 Q6366.4963,5893.5313 6365.8713,5893.5313 Q6364.5275,5893.5313 6363.84,5894.6094 Q6363.1525,5895.6719 6363.1525,5897.7656 Q6363.1525,5899.8594 6363.84,5900.9375 Q6364.5275,5902 6365.8713,5902 Q6366.4963,5902 6367.09,5901.7344 Q6367.6838,5901.4531 6368.3088,5900.875 L6368.3088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="6385.84" y="5902.1074">MethodBind2C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="36" x="6702.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="6703.09" y="5891.0918">P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6133.09" x2="6734.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1852" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1852" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6138.09" y="5919.9531"/><ellipse cx="6143.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1852" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1852" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6152.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6133.09" x2="6734.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="6143.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6152.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6143.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6152.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6143.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6152.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6143.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6152.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6143.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6152.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="6143.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6152.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6143.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6152.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6143.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="6152.09" y="6038.6011">MethodBind2C&lt;P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6138.09" y="6043.1953"/><ellipse cx="6143.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="6152.09" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2) const</text></a><!--MD5=[ac182821b3cb083d6fc084edf3c4f85b]
class C_0002027329212022555569--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2042" target="_top" title="MethodBind2RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2042" xlink:show="new" xlink:title="MethodBind2RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0002027329212022555569" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6841.09" y="11607.9531"/><ellipse cx="7064.34" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7067.3088,11629.5938 Q7066.7306,11629.8906 7066.09,11630.0313 Q7065.4494,11630.1875 7064.7463,11630.1875 Q7062.2463,11630.1875 7060.9181,11628.5469 Q7059.6056,11626.8906 7059.6056,11623.7656 Q7059.6056,11620.6406 7060.9181,11618.9844 Q7062.2463,11617.3281 7064.7463,11617.3281 Q7065.4494,11617.3281 7066.09,11617.4844 Q7066.7463,11617.6406 7067.3088,11617.9375 L7067.3088,11620.6563 Q7066.6838,11620.0781 7066.09,11619.8125 Q7065.4963,11619.5313 7064.8713,11619.5313 Q7063.5275,11619.5313 7062.84,11620.6094 Q7062.1525,11621.6719 7062.1525,11623.7656 Q7062.1525,11625.8594 7062.84,11626.9375 Q7063.5275,11628 7064.8713,11628 Q7065.4963,11628 7066.09,11627.7344 Q7066.6838,11627.4531 7067.3088,11626.875 L7067.3088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="7084.84" y="11628.1074">MethodBind2RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="48" x="7399.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="46" x="7400.09" y="11617.0918">R,P1,P2</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6842.09" x2="7443.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2046" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2046" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6847.09" y="11645.9531"/><ellipse cx="6852.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2046" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2046" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6861.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6842.09" x2="7443.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="6852.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6861.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6852.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6861.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6852.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6861.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6852.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6861.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6852.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6861.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="6852.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6861.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6852.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6861.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6852.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6861.09" y="11764.6011">MethodBind2RC&lt;R, P1, P2&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6847.09" y="11769.1953"/><ellipse cx="6852.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="6861.09" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2) const</text></a><!--MD5=[17e614214ddada7f353fed9c02a33d4a]
class C_0000512545424965820103--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2236" target="_top" title="MethodBind3" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2236" xlink:show="new" xlink:title="MethodBind3" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000512545424965820103" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="6782.09" y="5881.9531"/><ellipse cx="7009.84" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7012.8088,5903.5938 Q7012.2306,5903.8906 7011.59,5904.0313 Q7010.9494,5904.1875 7010.2463,5904.1875 Q7007.7463,5904.1875 7006.4181,5902.5469 Q7005.1056,5900.8906 7005.1056,5897.7656 Q7005.1056,5894.6406 7006.4181,5892.9844 Q7007.7463,5891.3281 7010.2463,5891.3281 Q7010.9494,5891.3281 7011.59,5891.4844 Q7012.2463,5891.6406 7012.8088,5891.9375 L7012.8088,5894.6563 Q7012.1838,5894.0781 7011.59,5893.8125 Q7010.9963,5893.5313 7010.3713,5893.5313 Q7009.0275,5893.5313 7008.34,5894.6094 Q7007.6525,5895.6719 7007.6525,5897.7656 Q7007.6525,5899.8594 7008.34,5900.9375 Q7009.0275,5902 7010.3713,5902 Q7010.9963,5902 7011.59,5901.7344 Q7012.1838,5901.4531 7012.8088,5900.875 L7012.8088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="7030.34" y="5902.1074">MethodBind3</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="55" x="7333.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="53" x="7334.09" y="5891.0918">P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6783.09" x2="7384.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2240" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2240" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6788.09" y="5919.9531"/><ellipse cx="6793.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2240" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2240" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="6802.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="6783.09" x2="7384.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="6793.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6802.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="6793.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="6802.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="6793.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="6802.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="6793.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="6802.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="6793.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6802.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="6793.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="6802.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="6793.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="6802.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="6793.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6802.09" y="6038.6011">MethodBind3&lt;P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="6788.09" y="6043.1953"/><ellipse cx="6793.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="6802.09" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2,P3)</text></a><!--MD5=[90a698c2e8da22a8d90f4a3ddca391d6]
class C_0002087322448002339587--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2438" target="_top" title="MethodBind3R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2438" xlink:show="new" xlink:title="MethodBind3R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0002087322448002339587" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="9178.09" y="11607.9531"/><ellipse cx="9395.84" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9398.8088,11629.5938 Q9398.2306,11629.8906 9397.59,11630.0313 Q9396.9494,11630.1875 9396.2463,11630.1875 Q9393.7463,11630.1875 9392.4181,11628.5469 Q9391.1056,11626.8906 9391.1056,11623.7656 Q9391.1056,11620.6406 9392.4181,11618.9844 Q9393.7463,11617.3281 9396.2463,11617.3281 Q9396.9494,11617.3281 9397.59,11617.4844 Q9398.2463,11617.6406 9398.8088,11617.9375 L9398.8088,11620.6563 Q9398.1838,11620.0781 9397.59,11619.8125 Q9396.9963,11619.5313 9396.3713,11619.5313 Q9395.0275,11619.5313 9394.34,11620.6094 Q9393.6525,11621.6719 9393.6525,11623.7656 Q9393.6525,11625.8594 9394.34,11626.9375 Q9395.0275,11628 9396.3713,11628 Q9396.9963,11628 9397.59,11627.7344 Q9398.1838,11627.4531 9398.8088,11626.875 L9398.8088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="9416.34" y="11628.1074">MethodBind3R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="67" x="9717.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="65" x="9718.09" y="11617.0918">R,P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9179.09" x2="9780.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2442" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2442" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="9184.09" y="11645.9531"/><ellipse cx="9189.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2442" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2442" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="9198.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="9179.09" x2="9780.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="9189.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="9198.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="9189.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="9198.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="9189.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="9198.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="9189.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="9198.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="9189.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="9198.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="9189.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="9198.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="9189.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="9198.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="9189.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="9198.09" y="11764.6011">MethodBind3R&lt;R, P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="9184.09" y="11769.1953"/><ellipse cx="9189.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="9198.09" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2,P3)</text></a><!--MD5=[b632b12cd2345bad18fde235bd753922]
class C_0000031906668996487033--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2640" target="_top" title="MethodBind3C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2640" xlink:show="new" xlink:title="MethodBind3C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000031906668996487033" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="292.09" y="5881.9531"/><ellipse cx="515.84" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M518.8087,5903.5938 Q518.2306,5903.8906 517.59,5904.0313 Q516.9494,5904.1875 516.2462,5904.1875 Q513.7462,5904.1875 512.4181,5902.5469 Q511.1056,5900.8906 511.1056,5897.7656 Q511.1056,5894.6406 512.4181,5892.9844 Q513.7462,5891.3281 516.2462,5891.3281 Q516.9494,5891.3281 517.59,5891.4844 Q518.2462,5891.6406 518.8087,5891.9375 L518.8087,5894.6563 Q518.1837,5894.0781 517.59,5893.8125 Q516.9962,5893.5313 516.3712,5893.5313 Q515.0275,5893.5313 514.34,5894.6094 Q513.6525,5895.6719 513.6525,5897.7656 Q513.6525,5899.8594 514.34,5900.9375 Q515.0275,5902 516.3712,5902 Q516.9962,5902 517.59,5901.7344 Q518.1837,5901.4531 518.8087,5900.875 L518.8087,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="536.34" y="5902.1074">MethodBind3C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="55" x="843.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="53" x="844.09" y="5891.0918">P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="293.09" x2="894.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2644" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2644" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="298.09" y="5919.9531"/><ellipse cx="303.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2644" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2644" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="312.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="293.09" x2="894.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="303.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="312.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="303.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="312.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="303.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="312.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="303.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="312.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="303.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="312.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="303.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="312.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="303.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="312.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="303.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="312.09" y="6038.6011">MethodBind3C&lt;P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="298.09" y="6043.1953"/><ellipse cx="303.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="312.09" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2,P3) const</text></a><!--MD5=[1a1508661ff0b5b3b5b63d08a9961abe]
class C_0001134043413451695381--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2842" target="_top" title="MethodBind3RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2842" xlink:show="new" xlink:title="MethodBind3RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001134043413451695381" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="406.09" y="11607.9531"/><ellipse cx="619.84" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M622.8087,11629.5938 Q622.2306,11629.8906 621.59,11630.0313 Q620.9494,11630.1875 620.2462,11630.1875 Q617.7462,11630.1875 616.4181,11628.5469 Q615.1056,11626.8906 615.1056,11623.7656 Q615.1056,11620.6406 616.4181,11618.9844 Q617.7462,11617.3281 620.2462,11617.3281 Q620.9494,11617.3281 621.59,11617.4844 Q622.2462,11617.6406 622.8087,11617.9375 L622.8087,11620.6563 Q622.1837,11620.0781 621.59,11619.8125 Q620.9962,11619.5313 620.3712,11619.5313 Q619.0275,11619.5313 618.34,11620.6094 Q617.6525,11621.6719 617.6525,11623.7656 Q617.6525,11625.8594 618.34,11626.9375 Q619.0275,11628 620.3712,11628 Q620.9962,11628 621.59,11627.7344 Q622.1837,11627.4531 622.8087,11626.875 L622.8087,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="640.34" y="11628.1074">MethodBind3RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="67" x="945.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="65" x="946.09" y="11617.0918">R,P1,P2,P3</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="407.09" x2="1008.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2846" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2846" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="412.09" y="11645.9531"/><ellipse cx="417.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2846" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2846" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="426.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="407.09" x2="1008.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="417.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="426.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="417.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="426.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="417.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="426.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="417.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="426.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="417.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="426.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="417.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="426.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="417.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="426.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="417.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="426.09" y="11764.6011">MethodBind3RC&lt;R, P1, P2, P3&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="412.09" y="11769.1953"/><ellipse cx="417.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="426.09" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2,P3) const</text></a><!--MD5=[36695f22eea8c142ddc88250416f5f61]
class C_0001212767095252394753--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3044" target="_top" title="MethodBind4" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3044" xlink:show="new" xlink:title="MethodBind4" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001212767095252394753" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="967.09" y="5881.9531"/><ellipse cx="1185.34" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1188.3088,5903.5938 Q1187.7306,5903.8906 1187.09,5904.0313 Q1186.4494,5904.1875 1185.7463,5904.1875 Q1183.2463,5904.1875 1181.9181,5902.5469 Q1180.6056,5900.8906 1180.6056,5897.7656 Q1180.6056,5894.6406 1181.9181,5892.9844 Q1183.2463,5891.3281 1185.7463,5891.3281 Q1186.4494,5891.3281 1187.09,5891.4844 Q1187.7463,5891.6406 1188.3088,5891.9375 L1188.3088,5894.6563 Q1187.6838,5894.0781 1187.09,5893.8125 Q1186.4963,5893.5313 1185.8713,5893.5313 Q1184.5275,5893.5313 1183.84,5894.6094 Q1183.1525,5895.6719 1183.1525,5897.7656 Q1183.1525,5899.8594 1183.84,5900.9375 Q1184.5275,5902 1185.8713,5902 Q1186.4963,5902 1187.09,5901.7344 Q1187.6838,5901.4531 1188.3088,5900.875 L1188.3088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="1205.84" y="5902.1074">MethodBind4</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="74" x="1499.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="1500.09" y="5891.0918">P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="968.09" x2="1569.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3048" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3048" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="973.09" y="5919.9531"/><ellipse cx="978.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3048" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3048" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="987.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="968.09" x2="1569.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="978.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="987.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="978.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="987.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="978.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="987.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="978.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="987.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="978.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="987.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="978.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="987.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="978.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="987.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="978.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="987.09" y="6038.6011">MethodBind4&lt;P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="973.09" y="6043.1953"/><ellipse cx="978.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="987.09" y="6051.4058">method : void (__UnexistingClass::*)(P1,P2,P3,P4)</text></a><!--MD5=[dd636e86033463e1071042e0449ab4f2]
class C_0001038624653636336005--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3254" target="_top" title="MethodBind4R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3254" xlink:show="new" xlink:title="MethodBind4R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001038624653636336005" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1141.09" y="11607.9531"/><ellipse cx="1349.34" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1352.3088,11629.5938 Q1351.7306,11629.8906 1351.09,11630.0313 Q1350.4494,11630.1875 1349.7463,11630.1875 Q1347.2463,11630.1875 1345.9181,11628.5469 Q1344.6056,11626.8906 1344.6056,11623.7656 Q1344.6056,11620.6406 1345.9181,11618.9844 Q1347.2463,11617.3281 1349.7463,11617.3281 Q1350.4494,11617.3281 1351.09,11617.4844 Q1351.7463,11617.6406 1352.3088,11617.9375 L1352.3088,11620.6563 Q1351.6838,11620.0781 1351.09,11619.8125 Q1350.4963,11619.5313 1349.8713,11619.5313 Q1348.5275,11619.5313 1347.84,11620.6094 Q1347.1525,11621.6719 1347.1525,11623.7656 Q1347.1525,11625.8594 1347.84,11626.9375 Q1348.5275,11628 1349.8713,11628 Q1350.4963,11628 1351.09,11627.7344 Q1351.6838,11627.4531 1352.3088,11626.875 L1352.3088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="1369.84" y="11628.1074">MethodBind4R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="86" x="1661.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="1662.09" y="11617.0918">R,P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1142.09" x2="1743.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3258" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3258" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1147.09" y="11645.9531"/><ellipse cx="1152.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3258" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3258" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1161.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1142.09" x2="1743.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="1152.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1161.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1152.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1161.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1152.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1161.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1152.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1161.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1152.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1161.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="1152.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1161.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1152.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1161.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1152.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1161.09" y="11764.6011">MethodBind4R&lt;R, P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1147.09" y="11769.1953"/><ellipse cx="1152.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="1161.09" y="11777.4058">method : R (__UnexistingClass::*)(P1,P2,P3,P4)</text></a><!--MD5=[7b3902a64b81f472ab380936808f0588]
class C_0000375613860790632263--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3464" target="_top" title="MethodBind4C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3464" xlink:show="new" xlink:title="MethodBind4C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000375613860790632263" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1466.09" y="13075.4531"/><ellipse cx="1680.34" cy="13091.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1683.3088,13097.0938 Q1682.7306,13097.3906 1682.09,13097.5313 Q1681.4494,13097.6875 1680.7463,13097.6875 Q1678.2463,13097.6875 1676.9181,13096.0469 Q1675.6056,13094.3906 1675.6056,13091.2656 Q1675.6056,13088.1406 1676.9181,13086.4844 Q1678.2463,13084.8281 1680.7463,13084.8281 Q1681.4494,13084.8281 1682.09,13084.9844 Q1682.7463,13085.1406 1683.3088,13085.4375 L1683.3088,13088.1563 Q1682.6838,13087.5781 1682.09,13087.3125 Q1681.4963,13087.0313 1680.8713,13087.0313 Q1679.5275,13087.0313 1678.84,13088.1094 Q1678.1525,13089.1719 1678.1525,13091.2656 Q1678.1525,13093.3594 1678.84,13094.4375 Q1679.5275,13095.5 1680.8713,13095.5 Q1681.4963,13095.5 1682.09,13095.2344 Q1682.6838,13094.9531 1683.3088,13094.375 L1683.3088,13097.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="1700.84" y="13095.6074">MethodBind4C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="74" x="1998.09" y="13072.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="1999.09" y="13084.5918">P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1467.09" x2="2068.09" y1="13107.4531" y2="13107.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3468" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3468" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.09" y="13113.4531"/><ellipse cx="1477.09" cy="13118.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3468" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3468" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1486.09" y="13121.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1467.09" x2="2068.09" y1="13128.2578" y2="13128.2578"/><ellipse cx="1477.09" cy="13139.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1486.09" y="13142.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1477.09" cy="13152.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1486.09" y="13155.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1477.09" cy="13164.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1486.09" y="13168.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1477.09" cy="13177.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1486.09" y="13180.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1477.09" cy="13190.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1486.09" y="13193.687">get_instance_class() const : String</text><ellipse cx="1477.09" cy="13203.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1486.09" y="13206.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1477.09" cy="13216.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1486.09" y="13219.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1477.09" cy="13228.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1486.09" y="13232.1011">MethodBind4C&lt;P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1472.09" y="13236.6953"/><ellipse cx="1477.09" cy="13241.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="1486.09" y="13244.9058">method : void (__UnexistingClass::*)(P1,P2,P3,P4) const</text></a><!--MD5=[0dba3cdeea08b2509f757ebd26ae2958]
class C_0001053911039767528095--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3674" target="_top" title="MethodBind4RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3674" xlink:show="new" xlink:title="MethodBind4RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001053911039767528095" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1699.09" y="5881.9531"/><ellipse cx="1903.34" cy="5897.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1906.3088,5903.5938 Q1905.7306,5903.8906 1905.09,5904.0313 Q1904.4494,5904.1875 1903.7463,5904.1875 Q1901.2463,5904.1875 1899.9181,5902.5469 Q1898.6056,5900.8906 1898.6056,5897.7656 Q1898.6056,5894.6406 1899.9181,5892.9844 Q1901.2463,5891.3281 1903.7463,5891.3281 Q1904.4494,5891.3281 1905.09,5891.4844 Q1905.7463,5891.6406 1906.3088,5891.9375 L1906.3088,5894.6563 Q1905.6838,5894.0781 1905.09,5893.8125 Q1904.4963,5893.5313 1903.8713,5893.5313 Q1902.5275,5893.5313 1901.84,5894.6094 Q1901.1525,5895.6719 1901.1525,5897.7656 Q1901.1525,5899.8594 1901.84,5900.9375 Q1902.5275,5902 1903.8713,5902 Q1904.4963,5902 1905.09,5901.7344 Q1905.6838,5901.4531 1906.3088,5900.875 L1906.3088,5903.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="1923.84" y="5902.1074">MethodBind4RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="86" x="2219.09" y="5878.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="2220.09" y="5891.0918">R,P1,P2,P3,P4</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1700.09" x2="2301.09" y1="5913.9531" y2="5913.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3678" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3678" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1705.09" y="5919.9531"/><ellipse cx="1710.09" cy="5924.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3678" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3678" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1719.09" y="5928.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1700.09" x2="2301.09" y1="5934.7578" y2="5934.7578"/><ellipse cx="1710.09" cy="5945.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1719.09" y="5948.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1710.09" cy="5958.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1719.09" y="5961.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1710.09" cy="5971.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1719.09" y="5974.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1710.09" cy="5984.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1719.09" y="5987.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1710.09" cy="5996.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1719.09" y="6000.187">get_instance_class() const : String</text><ellipse cx="1710.09" cy="6009.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1719.09" y="6012.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1710.09" cy="6022.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1719.09" y="6025.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1710.09" cy="6035.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1719.09" y="6038.6011">MethodBind4RC&lt;R, P1, P2, P3, P4&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1705.09" y="6043.1953"/><ellipse cx="1710.09" cy="6048.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="1719.09" y="6051.4058">method : R (__UnexistingClass::*)(P1,P2,P3,P4) const</text></a><!--MD5=[01d74cf402958cca4ba75a4a04d8c1a9]
class C_0000462780498821063561--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3884" target="_top" title="MethodBind5" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3884" xlink:show="new" xlink:title="MethodBind5" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000462780498821063561" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1917.09" y="11607.9531"/><ellipse cx="2125.84" cy="11623.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2128.8088,11629.5938 Q2128.2306,11629.8906 2127.59,11630.0313 Q2126.9494,11630.1875 2126.2463,11630.1875 Q2123.7463,11630.1875 2122.4181,11628.5469 Q2121.1056,11626.8906 2121.1056,11623.7656 Q2121.1056,11620.6406 2122.4181,11618.9844 Q2123.7463,11617.3281 2126.2463,11617.3281 Q2126.9494,11617.3281 2127.59,11617.4844 Q2128.2463,11617.6406 2128.8088,11617.9375 L2128.8088,11620.6563 Q2128.1838,11620.0781 2127.59,11619.8125 Q2126.9963,11619.5313 2126.3713,11619.5313 Q2125.0275,11619.5313 2124.34,11620.6094 Q2123.6525,11621.6719 2123.6525,11623.7656 Q2123.6525,11625.8594 2124.34,11626.9375 Q2125.0275,11628 2126.3713,11628 Q2126.9963,11628 2127.59,11627.7344 Q2128.1838,11627.4531 2128.8088,11626.875 L2128.8088,11629.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2146.34" y="11628.1074">MethodBind5</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="93" x="2430.09" y="11604.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="2431.09" y="11617.0918">P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1918.09" x2="2519.09" y1="11639.9531" y2="11639.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3888" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3888" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1923.09" y="11645.9531"/><ellipse cx="1928.09" cy="11650.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3888" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3888" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1937.09" y="11654.1636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1918.09" x2="2519.09" y1="11660.7578" y2="11660.7578"/><ellipse cx="1928.09" cy="11671.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1937.09" y="11674.9683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1928.09" cy="11684.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1937.09" y="11687.7729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1928.09" cy="11697.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1937.09" y="11700.5776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1928.09" cy="11710.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1937.09" y="11713.3823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1928.09" cy="11722.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1937.09" y="11726.187">get_instance_class() const : String</text><ellipse cx="1928.09" cy="11735.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1937.09" y="11738.9917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1928.09" cy="11748.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1937.09" y="11751.7964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1928.09" cy="11761.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1937.09" y="11764.6011">MethodBind5&lt;P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1923.09" y="11769.1953"/><ellipse cx="1928.09" cy="11774.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1937.09" y="11777.4058">method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5)</text></a><!--MD5=[ee5ae2bb211f195d8a2bb24077f49263]
class C_0000803203155573352820--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4102" target="_top" title="MethodBind5R" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4102" xlink:show="new" xlink:title="MethodBind5R" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000803203155573352820" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="1871.09" y="4683.4531"/><ellipse cx="2069.84" cy="4699.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2072.8088,4705.0938 Q2072.2306,4705.3906 2071.59,4705.5313 Q2070.9494,4705.6875 2070.2463,4705.6875 Q2067.7463,4705.6875 2066.4181,4704.0469 Q2065.1056,4702.3906 2065.1056,4699.2656 Q2065.1056,4696.1406 2066.4181,4694.4844 Q2067.7463,4692.8281 2070.2463,4692.8281 Q2070.9494,4692.8281 2071.59,4692.9844 Q2072.2463,4693.1406 2072.8088,4693.4375 L2072.8088,4696.1563 Q2072.1838,4695.5781 2071.59,4695.3125 Q2070.9963,4695.0313 2070.3713,4695.0313 Q2069.0275,4695.0313 2068.34,4696.1094 Q2067.6525,4697.1719 2067.6525,4699.2656 Q2067.6525,4701.3594 2068.34,4702.4375 Q2069.0275,4703.5 2070.3713,4703.5 Q2070.9963,4703.5 2071.59,4703.2344 Q2072.1838,4702.9531 2072.8088,4702.375 L2072.8088,4705.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="2090.34" y="4703.6074">MethodBind5R</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="105" x="2372.09" y="4680.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="103" x="2373.09" y="4692.5918">R,P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1872.09" x2="2473.09" y1="4715.4531" y2="4715.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4106" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4106" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1877.09" y="4721.4531"/><ellipse cx="1882.09" cy="4726.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4106" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4106" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1891.09" y="4729.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1872.09" x2="2473.09" y1="4736.2578" y2="4736.2578"/><ellipse cx="1882.09" cy="4747.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1891.09" y="4750.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="1882.09" cy="4760.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="1891.09" y="4763.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="1882.09" cy="4772.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1891.09" y="4776.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="1882.09" cy="4785.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="1891.09" y="4788.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="1882.09" cy="4798.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1891.09" y="4801.687">get_instance_class() const : String</text><ellipse cx="1882.09" cy="4811.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="1891.09" y="4814.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="1882.09" cy="4824.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="1891.09" y="4827.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="1882.09" cy="4836.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="1891.09" y="4840.1011">MethodBind5R&lt;R, P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1877.09" y="4844.6953"/><ellipse cx="1882.09" cy="4849.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="1891.09" y="4852.9058">method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5)</text></a><!--MD5=[84527e5cd0d747f927ab34f5e3f0eb9f]
class C_0001728875246190146863--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4320" target="_top" title="MethodBind5C" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4320" xlink:show="new" xlink:title="MethodBind5C" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0001728875246190146863" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="2509.09" y="4683.4531"/><ellipse cx="2713.84" cy="4699.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2716.8088,4705.0938 Q2716.2306,4705.3906 2715.59,4705.5313 Q2714.9494,4705.6875 2714.2463,4705.6875 Q2711.7463,4705.6875 2710.4181,4704.0469 Q2709.1056,4702.3906 2709.1056,4699.2656 Q2709.1056,4696.1406 2710.4181,4694.4844 Q2711.7463,4692.8281 2714.2463,4692.8281 Q2714.9494,4692.8281 2715.59,4692.9844 Q2716.2463,4693.1406 2716.8088,4693.4375 L2716.8088,4696.1563 Q2716.1838,4695.5781 2715.59,4695.3125 Q2714.9963,4695.0313 2714.3713,4695.0313 Q2713.0275,4695.0313 2712.34,4696.1094 Q2711.6525,4697.1719 2711.6525,4699.2656 Q2711.6525,4701.3594 2712.34,4702.4375 Q2713.0275,4703.5 2714.3713,4703.5 Q2714.9963,4703.5 2715.59,4703.2344 Q2716.1838,4702.9531 2716.8088,4702.375 L2716.8088,4705.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="2734.34" y="4703.6074">MethodBind5C</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="93" x="3022.09" y="4680.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="3023.09" y="4692.5918">P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2510.09" x2="3111.09" y1="4715.4531" y2="4715.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4324" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4324" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2515.09" y="4721.4531"/><ellipse cx="2520.09" cy="4726.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4324" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4324" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2529.09" y="4729.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="2510.09" x2="3111.09" y1="4736.2578" y2="4736.2578"/><ellipse cx="2520.09" cy="4747.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2529.09" y="4750.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="2520.09" cy="4760.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="2529.09" y="4763.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="2520.09" cy="4772.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2529.09" y="4776.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="2520.09" cy="4785.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2529.09" y="4788.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="2520.09" cy="4798.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2529.09" y="4801.687">get_instance_class() const : String</text><ellipse cx="2520.09" cy="4811.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="2529.09" y="4814.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="2520.09" cy="4824.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="2529.09" y="4827.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="2520.09" cy="4836.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="2529.09" y="4840.1011">MethodBind5C&lt;P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="2515.09" y="4844.6953"/><ellipse cx="2520.09" cy="4849.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="2529.09" y="4852.9058">method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5) const</text></a><!--MD5=[91417ae7b48fde2554ca395f7d7eaa17]
class C_0000319868049196089894--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4538" target="_top" title="MethodBind5RC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4538" xlink:show="new" xlink:title="MethodBind5RC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="176.0469" id="C_0000319868049196089894" style="stroke: #A80036; stroke-width: 1.5;" width="603" x="3147.09" y="4683.4531"/><ellipse cx="3341.84" cy="4699.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3344.8088,4705.0938 Q3344.2306,4705.3906 3343.59,4705.5313 Q3342.9494,4705.6875 3342.2463,4705.6875 Q3339.7463,4705.6875 3338.4181,4704.0469 Q3337.1056,4702.3906 3337.1056,4699.2656 Q3337.1056,4696.1406 3338.4181,4694.4844 Q3339.7463,4692.8281 3342.2463,4692.8281 Q3342.9494,4692.8281 3343.59,4692.9844 Q3344.2463,4693.1406 3344.8088,4693.4375 L3344.8088,4696.1563 Q3344.1838,4695.5781 3343.59,4695.3125 Q3342.9963,4695.0313 3342.3713,4695.0313 Q3341.0275,4695.0313 3340.34,4696.1094 Q3339.6525,4697.1719 3339.6525,4699.2656 Q3339.6525,4701.3594 3340.34,4702.4375 Q3341.0275,4703.5 3342.3713,4703.5 Q3342.9963,4703.5 3343.59,4703.2344 Q3344.1838,4702.9531 3344.8088,4702.375 L3344.8088,4705.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="3362.34" y="4703.6074">MethodBind5RC</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="105" x="3648.09" y="4680.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="103" x="3649.09" y="4692.5918">R,P1,P2,P3,P4,P5</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3148.09" x2="3749.09" y1="4715.4531" y2="4715.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3153.09" y="4721.4531"/><ellipse cx="3158.09" cy="4726.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4542" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4542" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3167.09" y="4729.6636">type_name : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="3148.09" x2="3749.09" y1="4736.2578" y2="4736.2578"/><ellipse cx="3158.09" cy="4747.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3167.09" y="4750.4683">_gen_argument_type(int p_arg) const : Variant::Type</text><ellipse cx="3158.09" cy="4760.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="3167.09" y="4763.2729">get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata</text><ellipse cx="3158.09" cy="4772.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3167.09" y="4776.0776">_get_argument_type(int p_argument) const : Variant::Type</text><ellipse cx="3158.09" cy="4785.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3167.09" y="4788.8823">_gen_argument_type_info(int p_argument) const : PropertyInfo</text><ellipse cx="3158.09" cy="4798.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3167.09" y="4801.687">get_instance_class() const : String</text><ellipse cx="3158.09" cy="4811.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="3167.09" y="4814.4917">call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="3158.09" cy="4824.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="3167.09" y="4827.2964">ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void</text><ellipse cx="3158.09" cy="4836.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="3167.09" y="4840.1011">MethodBind5RC&lt;R, P1, P2, P3, P4, P5&gt;() : void</text><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="3153.09" y="4844.6953"/><ellipse cx="3158.09" cy="4849.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="3167.09" y="4852.9058">method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5) const</text></a><!--MD5=[cefc1761acd014682fb46e6592f2db8a]
class C_0000104564426296396960--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94" target="_top" title="ClassDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94" xlink:show="new" xlink:title="ClassDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="1021.1563" id="C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.5;" width="1524" x="18600.59" y="12652.9531"/><ellipse cx="19333.34" cy="12668.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19336.3088,12674.5938 Q19335.7306,12674.8906 19335.09,12675.0313 Q19334.4494,12675.1875 19333.7463,12675.1875 Q19331.2463,12675.1875 19329.9181,12673.5469 Q19328.6056,12671.8906 19328.6056,12668.7656 Q19328.6056,12665.6406 19329.9181,12663.9844 Q19331.2463,12662.3281 19333.7463,12662.3281 Q19334.4494,12662.3281 19335.09,12662.4844 Q19335.7463,12662.6406 19336.3088,12662.9375 L19336.3088,12665.6563 Q19335.6838,12665.0781 19335.09,12664.8125 Q19334.4963,12664.5313 19333.8713,12664.5313 Q19332.5275,12664.5313 19331.84,12665.6094 Q19331.1525,12666.6719 19331.1525,12668.7656 Q19331.1525,12670.8594 19331.84,12671.9375 Q19332.5275,12673 19333.8713,12673 Q19334.4963,12673 19335.09,12672.7344 Q19335.6838,12672.4531 19336.3088,12671.875 L19336.3088,12674.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="19353.84" y="12673.1074">ClassDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18601.59" x2="20123.59" y1="12684.9531" y2="12684.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" xlink:show="new" xlink:title="lock" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12690.9531"/><ellipse cx="18611.59" cy="12695.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" target="_top" title="lock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146" xlink:show="new" xlink:title="lock" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="75" x="18620.59" y="12699.1636">lock : RWLock</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" target="_top" title="classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" xlink:show="new" xlink:title="classes" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12703.7578"/><ellipse cx="18611.59" cy="12708.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" target="_top" title="classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147" xlink:show="new" xlink:title="classes" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="306" x="18620.59" y="12711.9683">classes : HashMap&lt;StringName,ClassDB::ClassInfo&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" target="_top" title="resource_base_extensions" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" xlink:show="new" xlink:title="resource_base_extensions" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12716.5625"/><ellipse cx="18611.59" cy="12721.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" target="_top" title="resource_base_extensions" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148" xlink:show="new" xlink:title="resource_base_extensions" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="373" x="18620.59" y="12724.7729">resource_base_extensions : HashMap&lt;StringName,StringName&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" target="_top" title="compat_classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" xlink:show="new" xlink:title="compat_classes" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12729.3672"/><ellipse cx="18611.59" cy="12734.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" target="_top" title="compat_classes" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149" xlink:show="new" xlink:title="compat_classes" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="312" x="18620.59" y="12737.5776">compat_classes : HashMap&lt;StringName,StringName&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" target="_top" title="current_api" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" xlink:show="new" xlink:title="current_api" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12742.1719"/><ellipse cx="18611.59" cy="12747.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" target="_top" title="current_api" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157" xlink:show="new" xlink:title="current_api" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="18620.59" y="12750.3823">current_api : ClassDB::APIType</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" target="_top" title="default_values" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" xlink:show="new" xlink:title="default_values" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12754.9766"/><ellipse cx="18611.59" cy="12759.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" target="_top" title="default_values" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161" xlink:show="new" xlink:title="default_values" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="416" x="18620.59" y="12763.187">default_values : HashMap&lt;StringName,HashMap&lt;StringName,Variant&gt;&gt;</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" target="_top" title="default_values_cached" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" xlink:show="new" xlink:title="default_values_cached" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="18606.59" y="12767.7813"/><ellipse cx="18611.59" cy="12772.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" target="_top" title="default_values_cached" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162" xlink:show="new" xlink:title="default_values_cached" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="244" x="18620.59" y="12775.9917">default_values_cached : Set&lt;StringName&gt;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="18601.59" x2="20123.59" y1="12782.5859" y2="12782.5859"/><ellipse cx="18611.59" cy="12793.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="856" x="18620.59" y="12796.7964">bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition &amp; method_name, const Variant ** p_defs, int p_defcount) : MethodBind *</text><ellipse cx="18611.59" cy="12806.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="460" x="18620.59" y="12809.6011">_add_class2(const StringName &amp; p_class, const StringName &amp; p_inherits) : void</text><ellipse cx="18611.59" cy="12819.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="296" x="18620.59" y="12822.4058">get_class_list(List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="18611.59" cy="12832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="538" x="18620.59" y="12835.2104">get_inheriters_from_class(const StringName &amp; p_class, List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="18611.59" cy="12844.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="576" x="18620.59" y="12848.0151">get_direct_inheriters_from_class(const StringName &amp; p_class, List&lt;StringName&gt; * p_classes) : void</text><ellipse cx="18611.59" cy="12857.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="399" x="18620.59" y="12860.8198">get_parent_class_nocheck(const StringName &amp; p_class) : StringName</text><ellipse cx="18611.59" cy="12870.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="347" x="18620.59" y="12873.6245">get_parent_class(const StringName &amp; p_class) : StringName</text><ellipse cx="18611.59" cy="12883.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="18620.59" y="12886.4292">class_exists(const StringName &amp; p_class) : bool</text><ellipse cx="18611.59" cy="12896.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="480" x="18620.59" y="12899.2339">is_parent_class(const StringName &amp; p_class, const StringName &amp; p_inherits) : bool</text><ellipse cx="18611.59" cy="12908.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="18620.59" y="12912.0386">can_instance(const StringName &amp; p_class) : bool</text><ellipse cx="18611.59" cy="12921.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="277" x="18620.59" y="12924.8433">instance(const StringName &amp; p_class) : Object *</text><ellipse cx="18611.59" cy="12934.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="354" x="18620.59" y="12937.6479">get_api_type(const StringName &amp; p_class) : ClassDB::APIType</text><ellipse cx="18611.59" cy="12947.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="18620.59" y="12950.4526">get_api_hash(ClassDB::APIType p_api) : uint64_t</text><ellipse cx="18611.59" cy="12960.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="388" x="18620.59" y="12963.2573">add_signal(StringName p_class, const MethodInfo &amp; p_signal) : void</text><ellipse cx="18611.59" cy="12972.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="345" x="18620.59" y="12976.062">has_signal(StringName p_class, StringName p_signal) : bool</text><ellipse cx="18611.59" cy="12985.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="471" x="18620.59" y="12988.8667">get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool</text><ellipse cx="18611.59" cy="12998.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="591" x="18620.59" y="13001.6714">get_signal_list(StringName p_class, List&lt;MethodInfo&gt; * p_signals, bool p_no_inheritance = false) : void</text><ellipse cx="18611.59" cy="13011.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="578" x="18620.59" y="13014.4761">add_property_group(StringName p_class, const String &amp; p_name, const String &amp; p_prefix = "") : void</text><ellipse cx="18611.59" cy="13024.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="850" x="18620.59" y="13027.2808">add_property(StringName p_class, const PropertyInfo &amp; p_pinfo, const StringName &amp; p_setter, const StringName &amp; p_getter, int p_index = -1) : void</text><ellipse cx="18611.59" cy="13036.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="636" x="18620.59" y="13040.0854">set_property_default_value(StringName p_class, const StringName &amp; p_name, const Variant &amp; p_default) : void</text><ellipse cx="18611.59" cy="13049.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="792" x="18620.59" y="13052.8901">get_property_list(StringName p_class, List&lt;PropertyInfo&gt; * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void</text><ellipse cx="18611.59" cy="13062.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="678" x="18620.59" y="13065.6948">set_property(Object * p_object, const StringName &amp; p_property, const Variant &amp; p_value, bool * r_valid = __null) : bool</text><ellipse cx="18611.59" cy="13075.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="509" x="18620.59" y="13078.4995">get_property(Object * p_object, const StringName &amp; p_property, Variant &amp; r_value) : bool</text><ellipse cx="18611.59" cy="13088.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="648" x="18620.59" y="13091.3042">has_property(const StringName &amp; p_class, const StringName &amp; p_property, bool p_no_inheritance = false) : bool</text><ellipse cx="18611.59" cy="13100.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="642" x="18620.59" y="13104.1089">get_property_index(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_is_valid = __null) : int</text><ellipse cx="18611.59" cy="13113.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="697" x="18620.59" y="13116.9136">get_property_type(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_is_valid = __null) : Variant::Type</text><ellipse cx="18611.59" cy="13126.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="502" x="18620.59" y="13129.7183">get_property_setter(StringName p_class, const StringName &amp; p_property) : StringName</text><ellipse cx="18611.59" cy="13139.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="502" x="18620.59" y="13142.5229">get_property_getter(StringName p_class, const StringName &amp; p_property) : StringName</text><ellipse cx="18611.59" cy="13152.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="540" x="18620.59" y="13155.3276">has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool</text><ellipse cx="18611.59" cy="13164.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="460" x="18620.59" y="13168.1323">set_method_flags(StringName p_class, StringName p_method, int p_flags) : void</text><ellipse cx="18611.59" cy="13177.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="844" x="18620.59" y="13180.937">get_method_list(StringName p_class, List&lt;MethodInfo&gt; * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void</text><ellipse cx="18611.59" cy="13190.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="401" x="18620.59" y="13193.7417">get_method(StringName p_class, StringName p_name) : MethodBind *</text><ellipse cx="18611.59" cy="13203.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="620" x="18620.59" y="13206.5464">add_virtual_method(const StringName &amp; p_class, const MethodInfo &amp; p_method, bool p_virtual = true) : void</text><ellipse cx="18611.59" cy="13216.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="683" x="18620.59" y="13219.3511">get_virtual_methods(const StringName &amp; p_class, List&lt;MethodInfo&gt; * p_methods, bool p_no_inheritance = false) : void</text><ellipse cx="18611.59" cy="13228.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="765" x="18620.59" y="13232.1558">bind_integer_constant(const StringName &amp; p_class, const StringName &amp; p_enum, const StringName &amp; p_name, int p_constant) : void</text><ellipse cx="18611.59" cy="13241.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="688" x="18620.59" y="13244.9604">get_integer_constant_list(const StringName &amp; p_class, List&lt;String&gt; * p_constants, bool p_no_inheritance = false) : void</text><ellipse cx="18611.59" cy="13254.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="644" x="18620.59" y="13257.7651">get_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name, bool * p_success = __null) : int</text><ellipse cx="18611.59" cy="13267.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="757" x="18620.59" y="13270.5698">get_integer_constant_enum(const StringName &amp; p_class, const StringName &amp; p_name, bool p_no_inheritance = false) : StringName</text><ellipse cx="18611.59" cy="13280.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="641" x="18620.59" y="13283.3745">get_enum_list(const StringName &amp; p_class, List&lt;StringName&gt; * p_enums, bool p_no_inheritance = false) : void</text><ellipse cx="18611.59" cy="13292.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="870" x="18620.59" y="13296.1792">get_enum_constants(const StringName &amp; p_class, const StringName &amp; p_enum, List&lt;StringName&gt; * p_constants, bool p_no_inheritance = false) : void</text><ellipse cx="18611.59" cy="13305.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="733" x="18620.59" y="13308.9839">class_get_default_property_value(const StringName &amp; p_class, const StringName &amp; p_property, bool * r_valid = __null) : Variant</text><ellipse cx="18611.59" cy="13318.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="321" x="18620.59" y="13321.7886">get_category(const StringName &amp; p_node) : StringName</text><ellipse cx="18611.59" cy="13331.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="349" x="18620.59" y="13334.5933">set_class_enabled(StringName p_class, bool p_enable) : void</text><ellipse cx="18611.59" cy="13344.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="255" x="18620.59" y="13347.3979">is_class_enabled(StringName p_class) : bool</text><ellipse cx="18611.59" cy="13356.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="18620.59" y="13360.2026">is_class_exposed(StringName p_class) : bool</text><ellipse cx="18611.59" cy="13369.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="575" x="18620.59" y="13373.0073">add_resource_base_extension(const StringName &amp; p_extension, const StringName &amp; p_class) : void</text><ellipse cx="18611.59" cy="13382.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="381" x="18620.59" y="13385.812">get_resource_base_extensions(List&lt;String&gt; * p_extensions) : void</text><ellipse cx="18611.59" cy="13395.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="513" x="18620.59" y="13398.6167">get_extensions_for_type(const StringName &amp; p_class, List&lt;String&gt; * p_extensions) : void</text><ellipse cx="18611.59" cy="13408.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="524" x="18620.59" y="13411.4214">add_compatibility_class(const StringName &amp; p_class, const StringName &amp; p_fallback) : void</text><ellipse cx="18611.59" cy="13421.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="265" x="18620.59" y="13424.2261">set_current_api(ClassDB::APIType p_api) : void</text><ellipse cx="18611.59" cy="13433.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="18620.59" y="13437.0308">get_current_api() : ClassDB::APIType</text><ellipse cx="18611.59" cy="13446.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="139" x="18620.59" y="13449.8354">cleanup_defaults() : void</text><ellipse cx="18611.59" cy="13459.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="87" x="18620.59" y="13462.6401">cleanup() : void</text><ellipse cx="18611.59" cy="13472.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="18620.59" y="13475.4448">creator() : class Object *</text><ellipse cx="18611.59" cy="13485.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="18620.59" y="13488.2495">_add_class() : void</text><ellipse cx="18611.59" cy="13497.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="18620.59" y="13501.0542">register_class() : void</text><ellipse cx="18611.59" cy="13510.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="165" x="18620.59" y="13513.8589">register_virtual_class() : void</text><ellipse cx="18611.59" cy="13523.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="194" x="18620.59" y="13526.6636">_create_ptr_func() : class Object *</text><ellipse cx="18611.59" cy="13536.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="226" x="18620.59" y="13539.4683">register_custom_instance_class() : void</text><ellipse cx="18611.59" cy="13549.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="386" x="18620.59" y="13552.2729">bind_method(N p_method_name, M p_method) : class MethodBind *</text><ellipse cx="18611.59" cy="13561.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="525" x="18620.59" y="13565.0776">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1) : class MethodBind *</text><ellipse cx="18611.59" cy="13574.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="664" x="18620.59" y="13577.8823">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2) : class MethodBind *</text><ellipse cx="18611.59" cy="13587.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="803" x="18620.59" y="13590.687">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3) : class MethodBind *</text><ellipse cx="18611.59" cy="13600.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="942" x="18620.59" y="13603.4917">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4) : class MethodBind *</text><ellipse cx="18611.59" cy="13613.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1081" x="18620.59" y="13616.2964">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5) : class MethodBind *</text><ellipse cx="18611.59" cy="13625.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1220" x="18620.59" y="13629.1011">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6) : class MethodBind *</text><ellipse cx="18611.59" cy="13638.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1359" x="18620.59" y="13641.9058">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6, const Variant &amp; p_def7) : class MethodBind *</text><ellipse cx="18611.59" cy="13651.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1498" x="18620.59" y="13654.7104">bind_method(N p_method_name, M p_method, const Variant &amp; p_def1, const Variant &amp; p_def2, const Variant &amp; p_def3, const Variant &amp; p_def4, const Variant &amp; p_def5, const Variant &amp; p_def6, const Variant &amp; p_def7, const Variant &amp; p_def8) : class MethodBind *</text><ellipse cx="18611.59" cy="13664.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1343" x="18620.59" y="13667.5151">bind_vararg_method(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo &amp; p_info = MethodInfo(), const Vector&lt;Variant&gt; &amp; p_default_args = Vector&lt;Variant&gt;(), bool p_return_nil_is_variant = true) : class MethodBind *</text><!--MD5=[fde6ed13e18da825139d9e33a0c6db3f]
class C_0001778859257025660860--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39" target="_top" title="Reference" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39" xlink:show="new" xlink:title="Reference" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="291.2891" id="C_0001778859257025660860" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="22878.09" y="2206.4531"/><ellipse cx="23042.34" cy="2222.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23045.3088,2228.0938 Q23044.7306,2228.3906 23044.09,2228.5313 Q23043.4494,2228.6875 23042.7463,2228.6875 Q23040.2463,2228.6875 23038.9181,2227.0469 Q23037.6056,2225.3906 23037.6056,2222.2656 Q23037.6056,2219.1406 23038.9181,2217.4844 Q23040.2463,2215.8281 23042.7463,2215.8281 Q23043.4494,2215.8281 23044.09,2215.9844 Q23044.7463,2216.1406 23045.3088,2216.4375 L23045.3088,2219.1563 Q23044.6838,2218.5781 23044.09,2218.3125 Q23043.4963,2218.0313 23042.8713,2218.0313 Q23041.5275,2218.0313 23040.84,2219.1094 Q23040.1525,2220.1719 23040.1525,2222.2656 Q23040.1525,2224.3594 23040.84,2225.4375 Q23041.5275,2226.5 23042.8713,2226.5 Q23043.4963,2226.5 23044.09,2226.2344 Q23044.6838,2225.9531 23045.3088,2225.375 L23045.3088,2228.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="23062.84" y="2226.6074">Reference</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22879.09" x2="23278.09" y1="2238.4531" y2="2238.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22879.09" x2="23278.09" y1="2246.4531" y2="2246.4531"/><ellipse cx="22889.09" cy="2257.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="22898.09" y="2260.6636">get_class() const : String</text><ellipse cx="22889.09" cy="2270.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="22898.09" y="2273.4683">_get_class_namev() const : const StringName *</text><ellipse cx="22889.09" cy="2283.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="22898.09" y="2286.2729">get_class_ptr_static() : void *</text><ellipse cx="22889.09" cy="2295.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="22898.09" y="2299.0776">get_class_static() : String</text><ellipse cx="22889.09" cy="2308.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="22898.09" y="2311.8823">get_parent_class_static() : String</text><ellipse cx="22889.09" cy="2321.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="22898.09" y="2324.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="22889.09" cy="2334.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="22898.09" y="2337.4917">get_category_static() : String</text><ellipse cx="22889.09" cy="2347.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="22898.09" y="2350.2964">inherits_static() : String</text><ellipse cx="22889.09" cy="2359.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="22898.09" y="2363.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="22889.09" cy="2372.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="22898.09" y="2375.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="22889.09" cy="2385.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="22898.09" y="2388.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="22889.09" cy="2398.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="22898.09" y="2401.5151">initialize_class() : void</text><ellipse cx="22889.09" cy="2411.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="22898.09" y="2414.3198">is_referenced() const : bool</text><ellipse cx="22889.09" cy="2423.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="22898.09" y="2427.1245">init_ref() : bool</text><ellipse cx="22889.09" cy="2436.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="22898.09" y="2439.9292">reference() : bool</text><ellipse cx="22889.09" cy="2449.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="22898.09" y="2452.7339">unreference() : bool</text><ellipse cx="22889.09" cy="2462.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="22898.09" y="2465.5386">reference_get_count() const : int</text><ellipse cx="22889.09" cy="2475.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="22898.09" y="2478.3433">Reference() : void</text><ellipse cx="22889.09" cy="2487.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="22898.09" y="2491.1479">~Reference() : void</text></a><!--MD5=[5360686211fdfa9f40545236d2116688]
class C_0001213123647052694419--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L301" target="_top" title="WeakRef" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L301" xlink:show="new" xlink:title="WeakRef" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="252.875" id="C_0001213123647052694419" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="19579.09" y="8706.4531"/><ellipse cx="19748.34" cy="8722.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19751.3088,8728.0938 Q19750.7306,8728.3906 19750.09,8728.5313 Q19749.4494,8728.6875 19748.7463,8728.6875 Q19746.2463,8728.6875 19744.9181,8727.0469 Q19743.6056,8725.3906 19743.6056,8722.2656 Q19743.6056,8719.1406 19744.9181,8717.4844 Q19746.2463,8715.8281 19748.7463,8715.8281 Q19749.4494,8715.8281 19750.09,8715.9844 Q19750.7463,8716.1406 19751.3088,8716.4375 L19751.3088,8719.1563 Q19750.6838,8718.5781 19750.09,8718.3125 Q19749.4963,8718.0313 19748.8713,8718.0313 Q19747.5275,8718.0313 19746.84,8719.1094 Q19746.1525,8720.1719 19746.1525,8722.2656 Q19746.1525,8724.3594 19746.84,8725.4375 Q19747.5275,8726.5 19748.8713,8726.5 Q19749.4963,8726.5 19750.09,8726.2344 Q19750.6838,8725.9531 19751.3088,8725.375 L19751.3088,8728.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="19768.84" y="8726.6074">WeakRef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="19580.09" x2="19979.09" y1="8738.4531" y2="8738.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="19580.09" x2="19979.09" y1="8746.4531" y2="8746.4531"/><ellipse cx="19590.09" cy="8757.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="19599.09" y="8760.6636">get_class() const : String</text><ellipse cx="19590.09" cy="8770.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="19599.09" y="8773.4683">_get_class_namev() const : const StringName *</text><ellipse cx="19590.09" cy="8783.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="19599.09" y="8786.2729">get_class_ptr_static() : void *</text><ellipse cx="19590.09" cy="8795.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="19599.09" y="8799.0776">get_class_static() : String</text><ellipse cx="19590.09" cy="8808.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="19599.09" y="8811.8823">get_parent_class_static() : String</text><ellipse cx="19590.09" cy="8821.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="19599.09" y="8824.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="19590.09" cy="8834.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="19599.09" y="8837.4917">get_category_static() : String</text><ellipse cx="19590.09" cy="8847.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="19599.09" y="8850.2964">inherits_static() : String</text><ellipse cx="19590.09" cy="8859.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="19599.09" y="8863.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="19590.09" cy="8872.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="19599.09" y="8875.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="19590.09" cy="8885.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="19599.09" y="8888.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="19590.09" cy="8898.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="19599.09" y="8901.5151">initialize_class() : void</text><ellipse cx="19590.09" cy="8911.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="19599.09" y="8914.3198">get_ref() const : Variant</text><ellipse cx="19590.09" cy="8923.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="19599.09" y="8927.1245">set_obj(Object * p_object) : void</text><ellipse cx="19590.09" cy="8936.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="19599.09" y="8939.9292">set_ref(const REF &amp; p_ref) : void</text><ellipse cx="19590.09" cy="8949.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="19599.09" y="8952.7339">WeakRef() : void</text></a><!--MD5=[9c19f6e708a84c4c6bc6fbb4e29513cd]
class C_0001699661383862634192--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/func_ref.h#L36" target="_top" title="FuncRef" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/func_ref.h#L36" xlink:show="new" xlink:title="FuncRef" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="291.2891" id="C_0001699661383862634192" style="stroke: #A80036; stroke-width: 1.5;" width="522" x="17940.59" y="8687.4531"/><ellipse cx="18172.34" cy="8703.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M18175.3088,8709.0938 Q18174.7306,8709.3906 18174.09,8709.5313 Q18173.4494,8709.6875 18172.7463,8709.6875 Q18170.2463,8709.6875 18168.9181,8708.0469 Q18167.6056,8706.3906 18167.6056,8703.2656 Q18167.6056,8700.1406 18168.9181,8698.4844 Q18170.2463,8696.8281 18172.7463,8696.8281 Q18173.4494,8696.8281 18174.09,8696.9844 Q18174.7463,8697.1406 18175.3088,8697.4375 L18175.3088,8700.1563 Q18174.6838,8699.5781 18174.09,8699.3125 Q18173.4963,8699.0313 18172.8713,8699.0313 Q18171.5275,8699.0313 18170.84,8700.1094 Q18170.1525,8701.1719 18170.1525,8703.2656 Q18170.1525,8705.3594 18170.84,8706.4375 Q18171.5275,8707.5 18172.8713,8707.5 Q18173.4963,8707.5 18174.09,8707.2344 Q18174.6838,8706.9531 18175.3088,8706.375 L18175.3088,8709.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="18192.84" y="8707.6074">FuncRef</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="17941.59" x2="18461.59" y1="8719.4531" y2="8719.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="17941.59" x2="18461.59" y1="8727.4531" y2="8727.4531"/><ellipse cx="17951.59" cy="8738.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="17960.59" y="8741.6636">get_class() const : String</text><ellipse cx="17951.59" cy="8751.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="17960.59" y="8754.4683">_get_class_namev() const : const StringName *</text><ellipse cx="17951.59" cy="8764.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="17960.59" y="8767.2729">get_class_ptr_static() : void *</text><ellipse cx="17951.59" cy="8776.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="17960.59" y="8780.0776">get_class_static() : String</text><ellipse cx="17951.59" cy="8789.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="17960.59" y="8792.8823">get_parent_class_static() : String</text><ellipse cx="17951.59" cy="8802.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="17960.59" y="8805.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="17951.59" cy="8815.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="17960.59" y="8818.4917">get_category_static() : String</text><ellipse cx="17951.59" cy="8828.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="17960.59" y="8831.2964">inherits_static() : String</text><ellipse cx="17951.59" cy="8840.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="17960.59" y="8844.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="17951.59" cy="8853.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="17960.59" y="8856.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="17951.59" cy="8866.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="17960.59" y="8869.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="17951.59" cy="8879.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="17960.59" y="8882.5151">initialize_class() : void</text><ellipse cx="17951.59" cy="8892.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="17960.59" y="8895.3198">call_func(const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="17951.59" cy="8904.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="17960.59" y="8908.1245">call_funcv(const Array &amp; p_args) : Variant</text><ellipse cx="17951.59" cy="8917.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="17960.59" y="8920.9292">set_instance(Object * p_obj) : void</text><ellipse cx="17951.59" cy="8930.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="17960.59" y="8933.7339">set_function(const StringName &amp; p_func) : void</text><ellipse cx="17951.59" cy="8943.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="17960.59" y="8946.5386">get_function() : StringName</text><ellipse cx="17951.59" cy="8956.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="17960.59" y="8959.3433">is_valid() const : bool</text><ellipse cx="17951.59" cy="8968.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="17960.59" y="8972.1479">FuncRef() : void</text></a><!--MD5=[dd2998d45ec54ba5be719aa7e503205b]
class C_0000218299049716973303--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55" target="_top" title="Node" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55" xlink:show="new" xlink:title="Node" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="2160.7734" id="C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.5;" width="1447" x="27118.09" y="3690.9531"/><ellipse cx="27820.84" cy="3706.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27823.8088,3712.5938 Q27823.2306,3712.8906 27822.59,3713.0313 Q27821.9494,3713.1875 27821.2463,3713.1875 Q27818.7463,3713.1875 27817.4181,3711.5469 Q27816.1056,3709.8906 27816.1056,3706.7656 Q27816.1056,3703.6406 27817.4181,3701.9844 Q27818.7463,3700.3281 27821.2463,3700.3281 Q27821.9494,3700.3281 27822.59,3700.4844 Q27823.2463,3700.6406 27823.8088,3700.9375 L27823.8088,3703.6563 Q27823.1838,3703.0781 27822.59,3702.8125 Q27821.9963,3702.5313 27821.3713,3702.5313 Q27820.0275,3702.5313 27819.34,3703.6094 Q27818.6525,3704.6719 27818.6525,3706.7656 Q27818.6525,3708.8594 27819.34,3709.9375 Q27820.0275,3711 27821.3713,3711 Q27821.9963,3711 27822.59,3710.7344 Q27823.1838,3710.4531 27823.8088,3709.875 L27823.8088,3712.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="27841.34" y="3711.1074">Node</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27119.09" x2="28564.09" y1="3722.9531" y2="3722.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" target="_top" title="orphan_node_count" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" xlink:show="new" xlink:title="orphan_node_count" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="27124.09" y="3728.9531"/><ellipse cx="27129.09" cy="3733.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" target="_top" title="orphan_node_count" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78" xlink:show="new" xlink:title="orphan_node_count" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="137" x="27138.09" y="3737.1636">orphan_node_count : int</text></a><ellipse cx="27129.09" cy="3746.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="27138.09" y="3749.9683">NOTIFICATION_ENTER_TREE : enum</text><ellipse cx="27129.09" cy="3759.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="27138.09" y="3762.7729">NOTIFICATION_EXIT_TREE : enum</text><ellipse cx="27129.09" cy="3772.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27138.09" y="3775.5776">NOTIFICATION_MOVED_IN_PARENT : enum</text><ellipse cx="27129.09" cy="3785.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="27138.09" y="3788.3823">NOTIFICATION_READY : enum</text><ellipse cx="27129.09" cy="3797.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="27138.09" y="3801.187">NOTIFICATION_PAUSED : enum</text><ellipse cx="27129.09" cy="3810.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="27138.09" y="3813.9917">NOTIFICATION_UNPAUSED : enum</text><ellipse cx="27129.09" cy="3823.5859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27138.09" y="3826.7964">NOTIFICATION_PHYSICS_PROCESS : enum</text><ellipse cx="27129.09" cy="3836.3906" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="27138.09" y="3839.6011">NOTIFICATION_PROCESS : enum</text><ellipse cx="27129.09" cy="3849.1953" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="27138.09" y="3852.4058">NOTIFICATION_PARENTED : enum</text><ellipse cx="27129.09" cy="3862" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="27138.09" y="3865.2104">NOTIFICATION_UNPARENTED : enum</text><ellipse cx="27129.09" cy="3874.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="27138.09" y="3878.0151">NOTIFICATION_INSTANCED : enum</text><ellipse cx="27129.09" cy="3887.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="27138.09" y="3890.8198">NOTIFICATION_DRAG_BEGIN : enum</text><ellipse cx="27129.09" cy="3900.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="27138.09" y="3903.6245">NOTIFICATION_DRAG_END : enum</text><ellipse cx="27129.09" cy="3913.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="27138.09" y="3916.4292">NOTIFICATION_PATH_CHANGED : enum</text><ellipse cx="27129.09" cy="3926.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="27138.09" y="3929.2339">NOTIFICATION_INTERNAL_PROCESS : enum</text><ellipse cx="27129.09" cy="3938.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27138.09" y="3942.0386">NOTIFICATION_INTERNAL_PHYSICS_PROCESS : enum</text><ellipse cx="27129.09" cy="3951.6328" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="27138.09" y="3954.8433">NOTIFICATION_POST_ENTER_TREE : enum</text><ellipse cx="27129.09" cy="3964.4375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="27138.09" y="3967.6479">NOTIFICATION_WM_MOUSE_ENTER : enum</text><ellipse cx="27129.09" cy="3977.2422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="27138.09" y="3980.4526">NOTIFICATION_WM_MOUSE_EXIT : enum</text><ellipse cx="27129.09" cy="3990.0469" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="27138.09" y="3993.2573">NOTIFICATION_WM_FOCUS_IN : enum</text><ellipse cx="27129.09" cy="4002.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="27138.09" y="4006.062">NOTIFICATION_WM_FOCUS_OUT : enum</text><ellipse cx="27129.09" cy="4015.6563" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="27138.09" y="4018.8667">NOTIFICATION_WM_QUIT_REQUEST : enum</text><ellipse cx="27129.09" cy="4028.4609" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27138.09" y="4031.6714">NOTIFICATION_WM_GO_BACK_REQUEST : enum</text><ellipse cx="27129.09" cy="4041.2656" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="27138.09" y="4044.4761">NOTIFICATION_WM_UNFOCUS_REQUEST : enum</text><ellipse cx="27129.09" cy="4054.0703" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="27138.09" y="4057.2808">NOTIFICATION_OS_MEMORY_WARNING : enum</text><ellipse cx="27129.09" cy="4066.875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="27138.09" y="4070.0854">NOTIFICATION_TRANSLATION_CHANGED : enum</text><ellipse cx="27129.09" cy="4079.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="27138.09" y="4082.8901">NOTIFICATION_WM_ABOUT : enum</text><ellipse cx="27129.09" cy="4092.4844" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="27138.09" y="4095.6948">NOTIFICATION_CRASH : enum</text><ellipse cx="27129.09" cy="4105.2891" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="27138.09" y="4108.4995">NOTIFICATION_OS_IME_UPDATE : enum</text><ellipse cx="27129.09" cy="4118.0938" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27138.09" y="4121.3042">NOTIFICATION_APP_RESUMED : enum</text><ellipse cx="27129.09" cy="4130.8984" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="27138.09" y="4134.1089">NOTIFICATION_APP_PAUSED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27119.09" x2="28564.09" y1="4140.7031" y2="4140.7031"/><ellipse cx="27129.09" cy="4151.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="27138.09" y="4154.9136">get_class() const : String</text><ellipse cx="27129.09" cy="4164.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="27138.09" y="4167.7183">_get_class_namev() const : const StringName *</text><ellipse cx="27129.09" cy="4177.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="27138.09" y="4180.5229">get_class_ptr_static() : void *</text><ellipse cx="27129.09" cy="4190.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="27138.09" y="4193.3276">get_class_static() : String</text><ellipse cx="27129.09" cy="4202.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="27138.09" y="4206.1323">get_parent_class_static() : String</text><ellipse cx="27129.09" cy="4215.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="27138.09" y="4218.937">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="27129.09" cy="4228.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="27138.09" y="4231.7417">get_category_static() : String</text><ellipse cx="27129.09" cy="4241.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="27138.09" y="4244.5464">inherits_static() : String</text><ellipse cx="27129.09" cy="4254.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27138.09" y="4257.3511">is_class(const String &amp; p_class) const : bool</text><ellipse cx="27129.09" cy="4266.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="27138.09" y="4270.1558">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="27129.09" cy="4279.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="27138.09" y="4282.9604">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="27129.09" cy="4292.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="27138.09" y="4295.7651">initialize_class() : void</text><ellipse cx="27129.09" cy="4305.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="27138.09" y="4308.5698">get_name() const : StringName</text><ellipse cx="27129.09" cy="4318.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="27138.09" y="4321.3745">set_name(const String &amp; p_name) : void</text><ellipse cx="27129.09" cy="4330.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="27138.09" y="4334.1792">add_child(Node * p_child, bool p_legible_unique_name = false) : void</text><ellipse cx="27129.09" cy="4343.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="27138.09" y="4346.9839">add_child_below_node(Node * p_node, Node * p_child, bool p_legible_unique_name = false) : void</text><ellipse cx="27129.09" cy="4356.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="27138.09" y="4359.7886">remove_child(Node * p_child) : void</text><ellipse cx="27129.09" cy="4369.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="27138.09" y="4372.5933">get_child_count() const : int</text><ellipse cx="27129.09" cy="4382.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="27138.09" y="4385.3979">get_child(int p_index) const : Node *</text><ellipse cx="27129.09" cy="4394.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="27138.09" y="4398.2026">has_node(const NodePath &amp; p_path) const : bool</text><ellipse cx="27129.09" cy="4407.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="27138.09" y="4411.0073">get_node(const NodePath &amp; p_path) const : Node *</text><ellipse cx="27129.09" cy="4420.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="27138.09" y="4423.812">get_node_or_null(const NodePath &amp; p_path) const : Node *</text><ellipse cx="27129.09" cy="4433.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="548" x="27138.09" y="4436.6167">find_node(const String &amp; p_mask, bool p_recursive = true, bool p_owned = true) const : Node *</text><ellipse cx="27129.09" cy="4446.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="27138.09" y="4449.4214">has_node_and_resource(const NodePath &amp; p_path) const : bool</text><ellipse cx="27129.09" cy="4459.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="886" x="27138.09" y="4462.2261">get_node_and_resource(const NodePath &amp; p_path, RES &amp; r_res, Vector&lt;StringName&gt; &amp; r_leftover_subpath, bool p_last_is_property = true) const : Node *</text><ellipse cx="27129.09" cy="4471.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="27138.09" y="4475.0308">get_parent() const : Node *</text><ellipse cx="27129.09" cy="4484.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="27138.09" y="4487.8354">find_parent(const String &amp; p_mask) const : Node *</text><ellipse cx="27129.09" cy="4497.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="27138.09" y="4500.6401">get_tree() const : SceneTree *</text><ellipse cx="27129.09" cy="4510.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27138.09" y="4513.4448">is_inside_tree() const : bool</text><ellipse cx="27129.09" cy="4523.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="27138.09" y="4526.2495">is_a_parent_of(const Node * p_node) const : bool</text><ellipse cx="27129.09" cy="4535.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="27138.09" y="4539.0542">is_greater_than(const Node * p_node) const : bool</text><ellipse cx="27129.09" cy="4548.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27138.09" y="4551.8589">get_path() const : NodePath</text><ellipse cx="27129.09" cy="4561.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="27138.09" y="4564.6636">get_path_to(const Node * p_node) const : NodePath</text><ellipse cx="27129.09" cy="4574.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="27138.09" y="4577.4683">find_common_parent_with(const Node * p_node) const : Node *</text><ellipse cx="27129.09" cy="4587.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="27138.09" y="4590.2729">add_to_group(const StringName &amp; p_identifier, bool p_persistent = false) : void</text><ellipse cx="27129.09" cy="4599.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="27138.09" y="4603.0776">remove_from_group(const StringName &amp; p_identifier) : void</text><ellipse cx="27129.09" cy="4612.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="27138.09" y="4615.8823">is_in_group(const StringName &amp; p_identifier) const : bool</text><ellipse cx="27129.09" cy="4625.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="27138.09" y="4628.687">get_groups(List&lt;Node::GroupInfo&gt; * p_groups) const : void</text><ellipse cx="27129.09" cy="4638.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="27138.09" y="4641.4917">get_persistent_group_count() const : int</text><ellipse cx="27129.09" cy="4651.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="27138.09" y="4654.2964">move_child(Node * p_child, int p_pos) : void</text><ellipse cx="27129.09" cy="4663.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="27138.09" y="4667.1011">raise() : void</text><ellipse cx="27129.09" cy="4676.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="27138.09" y="4679.9058">set_owner(Node * p_owner) : void</text><ellipse cx="27129.09" cy="4689.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="27138.09" y="4692.7104">get_owner() const : Node *</text><ellipse cx="27129.09" cy="4702.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="27138.09" y="4705.5151">get_owned_by(Node * p_by, List&lt;Node *&gt; * p_owned) : void</text><ellipse cx="27129.09" cy="4715.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="27138.09" y="4718.3198">remove_and_skip() : void</text><ellipse cx="27129.09" cy="4727.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="27138.09" y="4731.1245">get_index() const : int</text><ellipse cx="27129.09" cy="4740.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="27138.09" y="4743.9292">print_tree() : void</text><ellipse cx="27129.09" cy="4753.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="27138.09" y="4756.7339">print_tree_pretty() : void</text><ellipse cx="27129.09" cy="4766.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27138.09" y="4769.5386">set_filename(const String &amp; p_filename) : void</text><ellipse cx="27129.09" cy="4779.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="27138.09" y="4782.3433">get_filename() const : String</text><ellipse cx="27129.09" cy="4791.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="27138.09" y="4795.1479">set_editor_description(const String &amp; p_editor_description) : void</text><ellipse cx="27129.09" cy="4804.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="27138.09" y="4807.9526">get_editor_description() const : String</text><ellipse cx="27129.09" cy="4817.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="27138.09" y="4820.7573">set_editable_instance(Node * p_node, bool p_editable) : void</text><ellipse cx="27129.09" cy="4830.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="27138.09" y="4833.562">is_editable_instance(const Node * p_node) const : bool</text><ellipse cx="27129.09" cy="4843.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="27138.09" y="4846.3667">get_deepest_editable_node(Node * start_node) const : Node *</text><ellipse cx="27129.09" cy="4855.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="27138.09" y="4859.1714">propagate_notification(int p_notification) : void</text><ellipse cx="27129.09" cy="4868.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="27138.09" y="4871.9761">propagate_call(const StringName &amp; p_method, const Array &amp; p_args = Array(), const bool p_parent_first = false) : void</text><ellipse cx="27129.09" cy="4881.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="27138.09" y="4884.7808">set_physics_process(bool p_process) : void</text><ellipse cx="27129.09" cy="4894.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="27138.09" y="4897.5854">get_physics_process_delta_time() const : float</text><ellipse cx="27129.09" cy="4907.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="27138.09" y="4910.3901">is_physics_processing() const : bool</text><ellipse cx="27129.09" cy="4919.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="27138.09" y="4923.1948">set_process(bool p_idle_process) : void</text><ellipse cx="27129.09" cy="4932.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="27138.09" y="4935.9995">get_process_delta_time() const : float</text><ellipse cx="27129.09" cy="4945.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27138.09" y="4948.8042">is_processing() const : bool</text><ellipse cx="27129.09" cy="4958.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="27138.09" y="4961.6089">set_physics_process_internal(bool p_process_internal) : void</text><ellipse cx="27129.09" cy="4971.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="27138.09" y="4974.4136">is_physics_processing_internal() const : bool</text><ellipse cx="27129.09" cy="4984.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="27138.09" y="4987.2183">set_process_internal(bool p_idle_process_internal) : void</text><ellipse cx="27129.09" cy="4996.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="27138.09" y="5000.0229">is_processing_internal() const : bool</text><ellipse cx="27129.09" cy="5009.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="27138.09" y="5012.8276">set_process_priority(int p_priority) : void</text><ellipse cx="27129.09" cy="5022.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="27138.09" y="5025.6323">get_process_priority() const : int</text><ellipse cx="27129.09" cy="5035.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="27138.09" y="5038.437">set_process_input(bool p_enable) : void</text><ellipse cx="27129.09" cy="5048.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="27138.09" y="5051.2417">is_processing_input() const : bool</text><ellipse cx="27129.09" cy="5060.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="27138.09" y="5064.0464">set_process_unhandled_input(bool p_enable) : void</text><ellipse cx="27129.09" cy="5073.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="27138.09" y="5076.8511">is_processing_unhandled_input() const : bool</text><ellipse cx="27129.09" cy="5086.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="27138.09" y="5089.6558">set_process_unhandled_key_input(bool p_enable) : void</text><ellipse cx="27129.09" cy="5099.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="27138.09" y="5102.4604">is_processing_unhandled_key_input() const : bool</text><ellipse cx="27129.09" cy="5112.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="27138.09" y="5115.2651">get_position_in_parent() const : int</text><ellipse cx="27129.09" cy="5124.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="591" x="27138.09" y="5128.0698">duplicate(int p_flags = DUPLICATE_GROUPS | DUPLICATE_SIGNALS | DUPLICATE_SCRIPTS) const : Node *</text><ellipse cx="27129.09" cy="5137.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="27138.09" y="5140.8745">duplicate_and_reown(const Map&lt;Node *,Node *&gt; &amp; p_reown_map) const : Node *</text><ellipse cx="27129.09" cy="5150.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="27138.09" y="5153.6792">duplicate_from_editor(Map&lt;const Node *,Node *&gt; &amp; r_duplimap) const : Node *</text><ellipse cx="27129.09" cy="5163.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="713" x="27138.09" y="5166.4839">duplicate_from_editor(Map&lt;const Node *,Node *&gt; &amp; r_duplimap, const Map&lt;RES,RES&gt; &amp; p_resource_remap) const : Node *</text><ellipse cx="27129.09" cy="5176.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="27138.09" y="5179.2886">remap_node_resources(Node * p_node, const Map&lt;RES,RES&gt; &amp; p_resource_remap) const : void</text><ellipse cx="27129.09" cy="5188.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="571" x="27138.09" y="5192.0933">remap_nested_resources(RES p_resource, const Map&lt;RES,RES&gt; &amp; p_resource_remap) const : void</text><ellipse cx="27129.09" cy="5201.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="27138.09" y="5204.8979">set_scene_instance_state(const Ref&lt;SceneState&gt; &amp; p_state) : void</text><ellipse cx="27129.09" cy="5214.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="27138.09" y="5217.7026">get_scene_instance_state() const : Ref&lt;SceneState&gt;</text><ellipse cx="27129.09" cy="5227.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="27138.09" y="5230.5073">set_scene_inherited_state(const Ref&lt;SceneState&gt; &amp; p_state) : void</text><ellipse cx="27129.09" cy="5240.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="27138.09" y="5243.312">get_scene_inherited_state() const : Ref&lt;SceneState&gt;</text><ellipse cx="27129.09" cy="5252.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="27138.09" y="5256.1167">set_scene_instance_load_placeholder(bool p_enable) : void</text><ellipse cx="27129.09" cy="5265.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="27138.09" y="5268.9214">get_scene_instance_load_placeholder() const : bool</text><ellipse cx="27129.09" cy="5278.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="1199" x="27138.09" y="5281.7261">make_binds(const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Vector&lt;Variant&gt;</text><ellipse cx="27129.09" cy="5291.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="27138.09" y="5294.5308">replace_by(Node * p_node, bool p_keep_data = false) : void</text><ellipse cx="27129.09" cy="5304.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="27138.09" y="5307.3354">set_pause_mode(Node::PauseMode p_mode) : void</text><ellipse cx="27129.09" cy="5316.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="27138.09" y="5320.1401">get_pause_mode() const : Node::PauseMode</text><ellipse cx="27129.09" cy="5329.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="27138.09" y="5332.9448">can_process() const : bool</text><ellipse cx="27129.09" cy="5342.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="27138.09" y="5345.7495">can_process_notification(int p_what) const : bool</text><ellipse cx="27129.09" cy="5355.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="27138.09" y="5358.5542">request_ready() : void</text><ellipse cx="27129.09" cy="5368.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="27138.09" y="5371.3589">print_stray_nodes() : void</text><ellipse cx="27129.09" cy="5380.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="27138.09" y="5384.1636">validate_child_name(Node * p_child) : String</text><ellipse cx="27129.09" cy="5393.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="27138.09" y="5396.9683">queue_delete() : void</text><ellipse cx="27129.09" cy="5406.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="360" x="27138.09" y="5409.7729">set_human_readable_collision_renaming(bool p_enabled) : void</text><ellipse cx="27129.09" cy="5419.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="27138.09" y="5422.5776">init_node_hrcr() : void</text><ellipse cx="27129.09" cy="5432.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27138.09" y="5435.3823">force_parent_owned() : void</text><ellipse cx="27129.09" cy="5444.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="27138.09" y="5448.187">set_import_path(const NodePath &amp; p_import_path) : void</text><ellipse cx="27129.09" cy="5457.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="27138.09" y="5460.9917">get_import_path() const : NodePath</text><ellipse cx="27129.09" cy="5470.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="27138.09" y="5473.7964">is_owned_by_parent() const : bool</text><ellipse cx="27129.09" cy="5483.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="27138.09" y="5486.6011">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="27129.09" cy="5496.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="27138.09" y="5499.4058">clear_internal_tree_resource_paths() : void</text><ellipse cx="27129.09" cy="5509" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="27138.09" y="5512.2104">get_viewport() const : Viewport *</text><ellipse cx="27129.09" cy="5521.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="27138.09" y="5525.0151">get_configuration_warning() const : String</text><ellipse cx="27129.09" cy="5534.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="27138.09" y="5537.8198">update_configuration_warning() : void</text><ellipse cx="27129.09" cy="5547.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="27138.09" y="5550.6245">set_display_folded(bool p_folded) : void</text><ellipse cx="27129.09" cy="5560.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="27138.09" y="5563.4292">is_displayed_folded() const : bool</text><ellipse cx="27129.09" cy="5573.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="27138.09" y="5576.2339">set_network_master(int p_peer_id, bool p_recursive = true) : void</text><ellipse cx="27129.09" cy="5585.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="27138.09" y="5589.0386">get_network_master() const : int</text><ellipse cx="27129.09" cy="5598.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="27138.09" y="5601.8433">is_network_master() const : bool</text><ellipse cx="27129.09" cy="5611.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="27138.09" y="5614.6479">rpc_config(const StringName &amp; p_method, MultiplayerAPI::RPCMode p_mode) : void</text><ellipse cx="27129.09" cy="5624.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="27138.09" y="5627.4526">rset_config(const StringName &amp; p_property, MultiplayerAPI::RPCMode p_mode) : void</text><ellipse cx="27129.09" cy="5637.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1262" x="27138.09" y="5640.2573">rpc(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27129.09" cy="5649.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1324" x="27138.09" y="5653.062">rpc_unreliable(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27129.09" cy="5662.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1359" x="27138.09" y="5665.8667">rpc_id(int p_peer_id, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27129.09" cy="5675.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1421" x="27138.09" y="5678.6714">rpc_unreliable_id(int p_peer_id, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27129.09" cy="5688.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="27138.09" y="5691.4761">rset(const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="27129.09" cy="5701.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="27138.09" y="5704.2808">rset_unreliable(const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="27129.09" cy="5713.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="27138.09" y="5717.0854">rset_id(int p_peer_id, const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="27129.09" cy="5726.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="550" x="27138.09" y="5729.8901">rset_unreliable_id(int p_peer_id, const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="27129.09" cy="5739.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="654" x="27138.09" y="5742.6948">rpcp(int p_peer_id, bool p_unreliable, const StringName &amp; p_method, const Variant ** p_arg, int p_argcount) : void</text><ellipse cx="27129.09" cy="5752.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="584" x="27138.09" y="5755.4995">rsetp(int p_peer_id, bool p_unreliable, const StringName &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="27129.09" cy="5765.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="27138.09" y="5768.3042">get_multiplayer() const : Ref&lt;MultiplayerAPI&gt;</text><ellipse cx="27129.09" cy="5777.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="27138.09" y="5781.1089">get_custom_multiplayer() const : Ref&lt;MultiplayerAPI&gt;</text><ellipse cx="27129.09" cy="5790.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="27138.09" y="5793.9136">set_custom_multiplayer(Ref&lt;MultiplayerAPI&gt; p_multiplayer) : void</text><ellipse cx="27129.09" cy="5803.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="659" x="27138.09" y="5806.7183">get_node_rpc_mode(const StringName &amp; p_method) : const Map&lt;StringName,MultiplayerAPI::RPCMode&gt;::Element *</text><ellipse cx="27129.09" cy="5816.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="27138.09" y="5819.5229">get_node_rset_mode(const StringName &amp; p_property) : const Map&lt;StringName,MultiplayerAPI::RPCMode&gt;::Element *</text><ellipse cx="27129.09" cy="5829.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="27138.09" y="5832.3276">Node() : void</text><ellipse cx="27129.09" cy="5841.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="27138.09" y="5845.1323">~Node() : void</text><!--MD5=[88b426eff1894866fc41c8357e83d201]
class C_0000933379568804427881--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54" target="_top" title="ObjectRC" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54" xlink:show="new" xlink:title="ObjectRC" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="124.8281" id="C_0000933379568804427881" style="stroke: #A80036; stroke-width: 1.5;" width="217" x="29395.09" y="2289.4531"/><ellipse cx="29471.34" cy="2305.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29474.3088,2311.0938 Q29473.7306,2311.3906 29473.09,2311.5313 Q29472.4494,2311.6875 29471.7463,2311.6875 Q29469.2463,2311.6875 29467.9181,2310.0469 Q29466.6056,2308.3906 29466.6056,2305.2656 Q29466.6056,2302.1406 29467.9181,2300.4844 Q29469.2463,2298.8281 29471.7463,2298.8281 Q29472.4494,2298.8281 29473.09,2298.9844 Q29473.7463,2299.1406 29474.3088,2299.4375 L29474.3088,2302.1563 Q29473.6838,2301.5781 29473.09,2301.3125 Q29472.4963,2301.0313 29471.8713,2301.0313 Q29470.5275,2301.0313 29469.84,2302.1094 Q29469.1525,2303.1719 29469.1525,2305.2656 Q29469.1525,2307.3594 29469.84,2308.4375 Q29470.5275,2309.5 29471.8713,2309.5 Q29472.4963,2309.5 29473.09,2309.2344 Q29473.6838,2308.9531 29474.3088,2308.375 L29474.3088,2311.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="29491.84" y="2309.6074">ObjectRC</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29396.09" x2="29611.09" y1="2321.4531" y2="2321.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" target="_top" title="instance_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" xlink:show="new" xlink:title="instance_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29401.09" y="2327.4531"/><ellipse cx="29406.09" cy="2332.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" target="_top" title="instance_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52" xlink:show="new" xlink:title="instance_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="29415.09" y="2335.6636">instance_id : const ObjectID</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="29396.09" x2="29611.09" y1="2342.2578" y2="2342.2578"/><ellipse cx="29406.09" cy="2353.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="29415.09" y="2356.4683">increment() : void</text><ellipse cx="29406.09" cy="2366.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="29415.09" y="2369.2729">decrement() : bool</text><ellipse cx="29406.09" cy="2378.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="29415.09" y="2382.0776">invalidate() : bool</text><ellipse cx="29406.09" cy="2391.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="29415.09" y="2394.8823">get_ptr() : Object *</text><ellipse cx="29406.09" cy="2404.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="29415.09" y="2407.687">ObjectRC(Object * p_object) : void</text><!--MD5=[20a137ad8bfb5b27a1303d95d4ed4f68]
class C_0001735438654351294549--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405" target="_top" title="ScriptInstance" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405" xlink:show="new" xlink:title="ScriptInstance" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="368.1172" id="C_0001735438654351294549" style="stroke: #A80036; stroke-width: 1.5;" width="1349" x="31039.09" y="2578.9531"/><ellipse cx="31664.34" cy="2594.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31664.4494,2590.2969 L31663.2931,2595.375 L31665.6213,2595.375 L31664.4494,2590.2969 Z M31662.965,2588.0625 L31665.9494,2588.0625 L31669.3088,2600.4531 L31666.8556,2600.4531 L31666.09,2597.3906 L31662.8088,2597.3906 L31662.0588,2600.4531 L31659.6213,2600.4531 L31662.965,2588.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="31684.84" y="2599.1074">ScriptInstance</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31040.09" x2="32387.09" y1="2610.9531" y2="2610.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="31040.09" x2="32387.09" y1="2618.9531" y2="2618.9531"/><ellipse cx="31050.09" cy="2629.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="391" x="31059.09" y="2633.1636">set(const StringName &amp; p_name, const Variant &amp; p_value) = 0 : bool</text><ellipse cx="31050.09" cy="2642.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="375" x="31059.09" y="2645.9683">get(const StringName &amp; p_name, Variant &amp; r_ret) const = 0 : bool</text><ellipse cx="31050.09" cy="2655.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="31059.09" y="2658.7729">get_property_list(List&lt;PropertyInfo&gt; * p_properties) const = 0 : void</text><ellipse cx="31050.09" cy="2668.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="569" x="31059.09" y="2671.5776">get_property_type(const StringName &amp; p_name, bool * r_is_valid = __null) const = 0 : Variant::Type</text><ellipse cx="31050.09" cy="2681.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="31059.09" y="2684.3823">get_owner() : Object *</text><ellipse cx="31050.09" cy="2693.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="31059.09" y="2697.187">get_property_state(List&lt;Pair&lt;StringName,Variant&gt;&gt; &amp; state) : void</text><ellipse cx="31050.09" cy="2706.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="31059.09" y="2709.9917">get_method_list(List&lt;MethodInfo&gt; * p_list) const = 0 : void</text><ellipse cx="31050.09" cy="2719.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="31059.09" y="2722.7964">has_method(const StringName &amp; p_method) const = 0 : bool</text><ellipse cx="31050.09" cy="2732.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1280" x="31059.09" y="2735.6011">call(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="31050.09" cy="2745.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="671" x="31059.09" y="2748.4058">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) = 0 : Variant</text><ellipse cx="31050.09" cy="2758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1323" x="31059.09" y="2761.2104">call_multilevel(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="31050.09" cy="2770.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="31059.09" y="2774.0151">call_multilevel(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="31050.09" cy="2783.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="31059.09" y="2786.8198">call_multilevel_reversed(const StringName &amp; p_method, const Variant ** p_args, int p_argcount) : void</text><ellipse cx="31050.09" cy="2796.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="31059.09" y="2799.6245">notification(int p_notification) = 0 : void</text><ellipse cx="31050.09" cy="2809.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="31059.09" y="2812.4292">to_string(bool * r_valid) : String</text><ellipse cx="31050.09" cy="2822.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="31059.09" y="2825.2339">refcount_incremented() : void</text><ellipse cx="31050.09" cy="2834.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="31059.09" y="2838.0386">refcount_decremented() : bool</text><ellipse cx="31050.09" cy="2847.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="31059.09" y="2850.8433">get_script() const = 0 : Ref&lt;Script&gt;</text><ellipse cx="31050.09" cy="2860.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="31059.09" y="2863.6479">is_placeholder() const : bool</text><ellipse cx="31050.09" cy="2873.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="31059.09" y="2876.4526">property_set_fallback(const StringName &amp; p_name, const Variant &amp; p_value, bool * r_valid) : void</text><ellipse cx="31050.09" cy="2886.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="31059.09" y="2889.2573">property_get_fallback(const StringName &amp; p_name, bool * r_valid) : Variant</text><ellipse cx="31050.09" cy="2898.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="472" x="31059.09" y="2902.062">get_rpc_mode(const StringName &amp; p_method) const = 0 : MultiplayerAPI::RPCMode</text><ellipse cx="31050.09" cy="2911.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="479" x="31059.09" y="2914.8667">get_rset_mode(const StringName &amp; p_variable) const = 0 : MultiplayerAPI::RPCMode</text><ellipse cx="31050.09" cy="2924.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="31059.09" y="2927.6714">get_language() = 0 : ScriptLanguage *</text><ellipse cx="31050.09" cy="2937.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="31059.09" y="2940.4761">~ScriptInstance() : void</text></a><!--MD5=[68528b1b7401aeebca63d15a2c5c8504]
class C_0000825523737350882091--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/message_queue.h#L37" target="_top" title="MessageQueue" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/message_queue.h#L37" xlink:show="new" xlink:title="MessageQueue" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="227.2656" id="C_0000825523737350882091" style="stroke: #A80036; stroke-width: 1.5;" width="1434" x="26097.59" y="201.9531"/><ellipse cx="26761.84" cy="217.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26764.8088,223.5938 Q26764.2306,223.8906 26763.59,224.0313 Q26762.9494,224.1875 26762.2463,224.1875 Q26759.7463,224.1875 26758.4181,222.5469 Q26757.1056,220.8906 26757.1056,217.7656 Q26757.1056,214.6406 26758.4181,212.9844 Q26759.7463,211.3281 26762.2463,211.3281 Q26762.9494,211.3281 26763.59,211.4844 Q26764.2463,211.6406 26764.8088,211.9375 L26764.8088,214.6563 Q26764.1838,214.0781 26763.59,213.8125 Q26762.9963,213.5313 26762.3713,213.5313 Q26761.0275,213.5313 26760.34,214.6094 Q26759.6525,215.6719 26759.6525,217.7656 Q26759.6525,219.8594 26760.34,220.9375 Q26761.0275,222 26762.3713,222 Q26762.9963,222 26763.59,221.7344 Q26764.1838,221.4531 26764.8088,220.875 L26764.8088,223.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="26782.34" y="222.1074">MessageQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26098.59" x2="27530.59" y1="233.9531" y2="233.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26098.59" x2="27530.59" y1="241.9531" y2="241.9531"/><ellipse cx="26108.59" cy="252.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="194" x="26117.59" y="256.1636">get_singleton() : MessageQueue *</text><ellipse cx="26108.59" cy="265.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="750" x="26117.59" y="268.9683">push_call(ObjectID p_id, const StringName &amp; p_method, const Variant ** p_args, int p_argcount, bool p_show_error = false) : Error</text><ellipse cx="26108.59" cy="278.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1385" x="26117.59" y="281.7729">push_call(ObjectID p_id, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Error</text><ellipse cx="26108.59" cy="291.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="26117.59" y="294.5776">push_notification(ObjectID p_id, int p_notification) : Error</text><ellipse cx="26108.59" cy="304.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="26117.59" y="307.3823">push_set(ObjectID p_id, const StringName &amp; p_prop, const Variant &amp; p_value) : Error</text><ellipse cx="26108.59" cy="316.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1408" x="26117.59" y="320.187">push_call(Object * p_object, const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Error</text><ellipse cx="26108.59" cy="329.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="26117.59" y="332.9917">push_notification(Object * p_object, int p_notification) : Error</text><ellipse cx="26108.59" cy="342.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="26117.59" y="345.7964">push_set(Object * p_object, const StringName &amp; p_prop, const Variant &amp; p_value) : Error</text><ellipse cx="26108.59" cy="355.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26117.59" y="358.6011">statistics() : void</text><ellipse cx="26108.59" cy="368.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="26117.59" y="371.4058">flush() : void</text><ellipse cx="26108.59" cy="381" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26117.59" y="384.2104">is_flushing() const : bool</text><ellipse cx="26108.59" cy="393.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="26117.59" y="397.0151">get_max_buffer_usage() const : int</text><ellipse cx="26108.59" cy="406.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26117.59" y="409.8198">MessageQueue() : void</text><ellipse cx="26108.59" cy="419.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26117.59" y="422.6245">~MessageQueue() : void</text></a><!--MD5=[1137d76ee25faee82ca73468ac4cb7a9]
class C_0001951177692366602790--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L48" target="_top" title="Resource" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L48" xlink:show="new" xlink:title="Resource" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="637.0156" id="C_0001951177692366602790" style="stroke: #A80036; stroke-width: 1.5;" width="717" x="26901.09" y="2976.9531"/><ellipse cx="27225.84" cy="2992.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27228.8088,2998.5938 Q27228.2306,2998.8906 27227.59,2999.0313 Q27226.9494,2999.1875 27226.2463,2999.1875 Q27223.7463,2999.1875 27222.4181,2997.5469 Q27221.1056,2995.8906 27221.1056,2992.7656 Q27221.1056,2989.6406 27222.4181,2987.9844 Q27223.7463,2986.3281 27226.2463,2986.3281 Q27226.9494,2986.3281 27227.59,2986.4844 Q27228.2463,2986.6406 27228.8088,2986.9375 L27228.8088,2989.6563 Q27228.1838,2989.0781 27227.59,2988.8125 Q27226.9963,2988.5313 27226.3713,2988.5313 Q27225.0275,2988.5313 27224.34,2989.6094 Q27223.6525,2990.6719 27223.6525,2992.7656 Q27223.6525,2994.8594 27224.34,2995.9375 Q27225.0275,2997 27226.3713,2997 Q27226.9963,2997 27227.59,2996.7344 Q27228.1838,2996.4531 27228.8088,2995.875 L27228.8088,2998.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="27246.34" y="2997.1074">Resource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26902.09" x2="27617.09" y1="3008.9531" y2="3008.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26902.09" x2="27617.09" y1="3016.9531" y2="3016.9531"/><ellipse cx="26912.09" cy="3027.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26921.09" y="3031.1636">get_class() const : String</text><ellipse cx="26912.09" cy="3040.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26921.09" y="3043.9683">_get_class_namev() const : const StringName *</text><ellipse cx="26912.09" cy="3053.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26921.09" y="3056.7729">get_class_ptr_static() : void *</text><ellipse cx="26912.09" cy="3066.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26921.09" y="3069.5776">get_class_static() : String</text><ellipse cx="26912.09" cy="3079.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26921.09" y="3082.3823">get_parent_class_static() : String</text><ellipse cx="26912.09" cy="3091.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26921.09" y="3095.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26912.09" cy="3104.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26921.09" y="3107.9917">get_category_static() : String</text><ellipse cx="26912.09" cy="3117.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26921.09" y="3120.7964">inherits_static() : String</text><ellipse cx="26912.09" cy="3130.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26921.09" y="3133.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26912.09" cy="3143.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26921.09" y="3146.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26912.09" cy="3156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26921.09" y="3159.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26912.09" cy="3168.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26921.09" y="3172.0151">initialize_class() : void</text><ellipse cx="26912.09" cy="3181.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="26921.09" y="3184.8198">register_custom_data_to_otdb() : void</text><ellipse cx="26912.09" cy="3194.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="26921.09" y="3197.6245">get_base_extension() const : String</text><ellipse cx="26912.09" cy="3207.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26921.09" y="3210.4292">editor_can_reload_from_file() : bool</text><ellipse cx="26912.09" cy="3220.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="26921.09" y="3223.2339">reload_from_file() : void</text><ellipse cx="26912.09" cy="3232.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26921.09" y="3236.0386">register_owner(Object * p_owner) : void</text><ellipse cx="26912.09" cy="3245.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="26921.09" y="3248.8433">unregister_owner(Object * p_owner) : void</text><ellipse cx="26912.09" cy="3258.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26921.09" y="3261.6479">set_name(const String &amp; p_name) : void</text><ellipse cx="26912.09" cy="3271.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26921.09" y="3274.4526">get_name() const : String</text><ellipse cx="26912.09" cy="3284.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="26921.09" y="3287.2573">set_path(const String &amp; p_path, bool p_take_over = false) : void</text><ellipse cx="26912.09" cy="3296.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="26921.09" y="3300.062">get_path() const : String</text><ellipse cx="26912.09" cy="3309.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="26921.09" y="3312.8667">set_subindex(int p_sub_index) : void</text><ellipse cx="26912.09" cy="3322.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26921.09" y="3325.6714">get_subindex() const : int</text><ellipse cx="26912.09" cy="3335.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="26921.09" y="3338.4761">duplicate(bool p_subresources = false) const : Ref&lt;Resource&gt;</text><ellipse cx="26912.09" cy="3348.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="691" x="26921.09" y="3351.2808">duplicate_for_local_scene(Node * p_for_scene, Map&lt;Ref&lt;Resource&gt;,Ref&lt;Resource&gt;&gt; &amp; remap_cache) : Ref&lt;Resource&gt;</text><ellipse cx="26912.09" cy="3360.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="627" x="26921.09" y="3364.0854">configure_for_local_scene(Node * p_for_scene, Map&lt;Ref&lt;Resource&gt;,Ref&lt;Resource&gt;&gt; &amp; remap_cache) : void</text><ellipse cx="26912.09" cy="3373.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="26921.09" y="3376.8901">set_local_to_scene(bool p_enable) : void</text><ellipse cx="26912.09" cy="3386.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="26921.09" y="3389.6948">is_local_to_scene() const : bool</text><ellipse cx="26912.09" cy="3399.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26921.09" y="3402.4995">setup_local_to_scene() : void</text><ellipse cx="26912.09" cy="3412.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26921.09" y="3415.3042">get_local_scene() const : Node *</text><ellipse cx="26912.09" cy="3424.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="26921.09" y="3428.1089">hash_edited_version() const : uint32_t</text><ellipse cx="26912.09" cy="3437.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26921.09" y="3440.9136">set_last_modified_time(uint64_t p_time) : void</text><ellipse cx="26912.09" cy="3450.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26921.09" y="3453.7183">get_last_modified_time() const : uint64_t</text><ellipse cx="26912.09" cy="3463.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="26921.09" y="3466.5229">set_import_last_modified_time(uint64_t p_time) : void</text><ellipse cx="26912.09" cy="3476.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="26921.09" y="3479.3276">get_import_last_modified_time() const : uint64_t</text><ellipse cx="26912.09" cy="3488.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="26921.09" y="3492.1323">set_import_path(const String &amp; p_path) : void</text><ellipse cx="26912.09" cy="3501.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="26921.09" y="3504.937">get_import_path() const : String</text><ellipse cx="26912.09" cy="3514.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="26921.09" y="3517.7417">set_as_translation_remapped(bool p_remapped) : void</text><ellipse cx="26912.09" cy="3527.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="26921.09" y="3530.5464">is_translation_remapped() const : bool</text><ellipse cx="26912.09" cy="3540.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="26921.09" y="3543.3511">get_rid() const : RID</text><ellipse cx="26912.09" cy="3552.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="26921.09" y="3556.1558">set_id_for_path(const String &amp; p_path, int p_id) : void</text><ellipse cx="26912.09" cy="3565.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="26921.09" y="3568.9604">get_id_for_path(const String &amp; p_path) const : int</text><ellipse cx="26912.09" cy="3578.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="26921.09" y="3581.7651">Resource() : void</text><ellipse cx="26912.09" cy="3591.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26921.09" y="3594.5698">~Resource() : void</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" target="_top" title="_get_local_scene_func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" xlink:show="new" xlink:title="_get_local_scene_func" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26907.09" y="3599.1641"/><ellipse cx="26912.09" cy="3604.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" target="_top" title="_get_local_scene_func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89" xlink:show="new" xlink:title="_get_local_scene_func" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="199" x="26921.09" y="3607.3745">_get_local_scene_func : Node *(*)()</text></a><!--MD5=[c4334e394e97c2c54b6e754d68658f48]
class C_0001608678623693693822--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L99" target="_top" title="Script" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L99" xlink:show="new" xlink:title="Script" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="547.3828" id="C_0001608678623693693822" style="stroke: #A80036; stroke-width: 1.5;" width="570" x="26441.59" y="4497.9531"/><ellipse cx="26704.34" cy="4513.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26704.4494,4509.2969 L26703.2931,4514.375 L26705.6213,4514.375 L26704.4494,4509.2969 Z M26702.965,4507.0625 L26705.9494,4507.0625 L26709.3088,4519.4531 L26706.8556,4519.4531 L26706.09,4516.3906 L26702.8088,4516.3906 L26702.0588,4519.4531 L26699.6213,4519.4531 L26702.965,4507.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="36" x="26724.84" y="4518.1074">Script</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26442.59" x2="27010.59" y1="4529.9531" y2="4529.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26442.59" x2="27010.59" y1="4537.9531" y2="4537.9531"/><ellipse cx="26452.59" cy="4548.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26461.59" y="4552.1636">get_class() const : String</text><ellipse cx="26452.59" cy="4561.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26461.59" y="4564.9683">_get_class_namev() const : const StringName *</text><ellipse cx="26452.59" cy="4574.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26461.59" y="4577.7729">get_class_ptr_static() : void *</text><ellipse cx="26452.59" cy="4587.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26461.59" y="4590.5776">get_class_static() : String</text><ellipse cx="26452.59" cy="4600.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26461.59" y="4603.3823">get_parent_class_static() : String</text><ellipse cx="26452.59" cy="4612.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26461.59" y="4616.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26452.59" cy="4625.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26461.59" y="4628.9917">get_category_static() : String</text><ellipse cx="26452.59" cy="4638.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26461.59" y="4641.7964">inherits_static() : String</text><ellipse cx="26452.59" cy="4651.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26461.59" y="4654.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26452.59" cy="4664.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26461.59" y="4667.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26452.59" cy="4677" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26461.59" y="4680.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26452.59" cy="4689.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26461.59" y="4693.0151">initialize_class() : void</text><ellipse cx="26452.59" cy="4702.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="26461.59" y="4705.8198">get_save_class() const : String</text><ellipse cx="26452.59" cy="4715.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="26461.59" y="4718.6245">can_instance() const = 0 : bool</text><ellipse cx="26452.59" cy="4728.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="235" x="26461.59" y="4731.4292">get_base_script() const = 0 : Ref&lt;Script&gt;</text><ellipse cx="26452.59" cy="4741.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="279" x="26461.59" y="4744.2339">get_instance_base_type() const = 0 : StringName</text><ellipse cx="26452.59" cy="4753.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="26461.59" y="4757.0386">instance_create(Object * p_this) = 0 : ScriptInstance *</text><ellipse cx="26452.59" cy="4766.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="26461.59" y="4769.8433">placeholder_instance_create(Object * p_this) : PlaceHolderScriptInstance *</text><ellipse cx="26452.59" cy="4779.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="292" x="26461.59" y="4782.6479">instance_has(const Object * p_this) const = 0 : bool</text><ellipse cx="26452.59" cy="4792.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="199" x="26461.59" y="4795.4526">has_source_code() const = 0 : bool</text><ellipse cx="26452.59" cy="4805.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="206" x="26461.59" y="4808.2573">get_source_code() const = 0 : String</text><ellipse cx="26452.59" cy="4817.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="26461.59" y="4821.062">set_source_code(const String &amp; p_code) = 0 : void</text><ellipse cx="26452.59" cy="4830.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="26461.59" y="4833.8667">reload(bool p_keep_state = false) = 0 : Error</text><ellipse cx="26452.59" cy="4843.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="26461.59" y="4846.6714">has_method(const StringName &amp; p_method) const = 0 : bool</text><ellipse cx="26452.59" cy="4856.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="26461.59" y="4859.4761">get_method_info(const StringName &amp; p_method) const = 0 : MethodInfo</text><ellipse cx="26452.59" cy="4869.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="26461.59" y="4872.2808">is_tool() const = 0 : bool</text><ellipse cx="26452.59" cy="4881.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="26461.59" y="4885.0854">is_valid() const = 0 : bool</text><ellipse cx="26452.59" cy="4894.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="251" x="26461.59" y="4897.8901">get_language() const = 0 : ScriptLanguage *</text><ellipse cx="26452.59" cy="4907.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="361" x="26461.59" y="4910.6948">has_script_signal(const StringName &amp; p_signal) const = 0 : bool</text><ellipse cx="26452.59" cy="4920.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="381" x="26461.59" y="4923.4995">get_script_signal_list(List&lt;MethodInfo&gt; * r_signals) const = 0 : void</text><ellipse cx="26452.59" cy="4933.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="544" x="26461.59" y="4936.3042">get_property_default_value(const StringName &amp; p_property, Variant &amp; r_value) const = 0 : bool</text><ellipse cx="26452.59" cy="4945.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26461.59" y="4949.1089">update_exports() : void</text><ellipse cx="26452.59" cy="4958.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="26461.59" y="4961.9136">get_script_method_list(List&lt;MethodInfo&gt; * p_list) const = 0 : void</text><ellipse cx="26452.59" cy="4971.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="26461.59" y="4974.7183">get_script_property_list(List&lt;PropertyInfo&gt; * p_list) const = 0 : void</text><ellipse cx="26452.59" cy="4984.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="348" x="26461.59" y="4987.5229">get_member_line(const StringName &amp; p_member) const : int</text><ellipse cx="26452.59" cy="4997.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="26461.59" y="5000.3276">get_constants(Map&lt;StringName,Variant&gt; * p_constants) : void</text><ellipse cx="26452.59" cy="5009.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="26461.59" y="5013.1323">get_members(Set&lt;StringName&gt; * p_constants) : void</text><ellipse cx="26452.59" cy="5022.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="26461.59" y="5025.937">is_placeholder_fallback_enabled() const : bool</text><ellipse cx="26452.59" cy="5035.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="26461.59" y="5038.7417">Script() : void</text></a><!--MD5=[6f34983ac71ec17bb0bbeb8f1438fe2a]
class C_0002110837736536862228--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L249" target="_top" title="ScriptLanguage" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L249" xlink:show="new" xlink:title="ScriptLanguage" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="790.6719" id="C_0002110837736536862228" style="stroke: #A80036; stroke-width: 1.5;" width="1492" x="31180.59" y="12767.9531"/><ellipse cx="31872.84" cy="12783.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31872.9494,12779.2969 L31871.7931,12784.375 L31874.1213,12784.375 L31872.9494,12779.2969 Z M31871.465,12777.0625 L31874.4494,12777.0625 L31877.8088,12789.4531 L31875.3556,12789.4531 L31874.59,12786.3906 L31871.3088,12786.3906 L31870.5588,12789.4531 L31868.1213,12789.4531 L31871.465,12777.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="31893.34" y="12788.1074">ScriptLanguage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31181.59" x2="32671.59" y1="12799.9531" y2="12799.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="31181.59" x2="32671.59" y1="12807.9531" y2="12807.9531"/><ellipse cx="31191.59" cy="12818.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="167" x="31200.59" y="12822.1636">get_name() const = 0 : String</text><ellipse cx="31191.59" cy="12831.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="31200.59" y="12834.9683">init() = 0 : void</text><ellipse cx="31191.59" cy="12844.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="31200.59" y="12847.7729">get_type() const = 0 : String</text><ellipse cx="31191.59" cy="12857.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="190" x="31200.59" y="12860.5776">get_extension() const = 0 : String</text><ellipse cx="31191.59" cy="12870.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="263" x="31200.59" y="12873.3823">execute_file(const String &amp; p_path) = 0 : Error</text><ellipse cx="31191.59" cy="12882.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="31200.59" y="12886.187">finish() = 0 : void</text><ellipse cx="31191.59" cy="12895.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="31200.59" y="12898.9917">get_reserved_words(List&lt;String&gt; * p_words) const = 0 : void</text><ellipse cx="31191.59" cy="12908.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="31200.59" y="12911.7964">get_comment_delimiters(List&lt;String&gt; * p_delimiters) const = 0 : void</text><ellipse cx="31191.59" cy="12921.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="373" x="31200.59" y="12924.6011">get_string_delimiters(List&lt;String&gt; * p_delimiters) const = 0 : void</text><ellipse cx="31191.59" cy="12934.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="588" x="31200.59" y="12937.4058">get_template(const String &amp; p_class_name, const String &amp; p_base_class_name) const = 0 : Ref&lt;Script&gt;</text><ellipse cx="31191.59" cy="12947" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="648" x="31200.59" y="12950.2104">make_template(const String &amp; p_class_name, const String &amp; p_base_class_name, Ref&lt;Script&gt; &amp; p_script) : void</text><ellipse cx="31191.59" cy="12959.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="31200.59" y="12963.0151">is_using_templates() : bool</text><ellipse cx="31191.59" cy="12972.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1466" x="31200.59" y="12975.8198">validate(const String &amp; p_script, int &amp; r_line_error, int &amp; r_col_error, String &amp; r_test_error, const String &amp; p_path = "", List&lt;String&gt; * r_functions = __null, List&lt;ScriptLanguage::Warning&gt; * r_warnings = __null, Set&lt;int&gt; * r_safe_lines = __null) const = 0 : bool</text><ellipse cx="31191.59" cy="12985.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="31200.59" y="12988.6245">validate_path(const String &amp; p_path) const : String</text><ellipse cx="31191.59" cy="12998.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="31200.59" y="13001.4292">create_script() const = 0 : Script *</text><ellipse cx="31191.59" cy="13011.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="214" x="31200.59" y="13014.2339">has_named_classes() const = 0 : bool</text><ellipse cx="31191.59" cy="13023.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="229" x="31200.59" y="13027.0386">supports_builtin_mode() const = 0 : bool</text><ellipse cx="31191.59" cy="13036.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="31200.59" y="13039.8433">can_inherit_from_file() : bool</text><ellipse cx="31191.59" cy="13049.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="31200.59" y="13052.6479">find_function(const String &amp; p_function, const String &amp; p_code) const = 0 : int</text><ellipse cx="31191.59" cy="13062.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="641" x="31200.59" y="13065.4526">make_function(const String &amp; p_class, const String &amp; p_name, const PoolStringArray &amp; p_args) const = 0 : String</text><ellipse cx="31191.59" cy="13075.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465" x="31200.59" y="13078.2573">open_in_external_editor(const Ref&lt;Script&gt; &amp; p_script, int p_line, int p_col) : Error</text><ellipse cx="31191.59" cy="13087.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="31200.59" y="13091.062">overrides_external_editor() : bool</text><ellipse cx="31191.59" cy="13100.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="983" x="31200.59" y="13103.8667">complete_code(const String &amp; p_code, const String &amp; p_path, Object * p_owner, List&lt;ScriptCodeCompletionOption&gt; * r_options, bool &amp; r_force, String &amp; r_call_hint) : Error</text><ellipse cx="31191.59" cy="13113.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="875" x="31200.59" y="13116.6714">lookup_code(const String &amp; p_code, const String &amp; p_symbol, const String &amp; p_path, Object * p_owner, ScriptLanguage::LookupResult &amp; r_result) : Error</text><ellipse cx="31191.59" cy="13126.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="31200.59" y="13129.4761">auto_indent_code(String &amp; p_code, int p_from_line, int p_to_line) const = 0 : void</text><ellipse cx="31191.59" cy="13139.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="31200.59" y="13142.2808">add_global_constant(const StringName &amp; p_variable, const Variant &amp; p_value) = 0 : void</text><ellipse cx="31191.59" cy="13151.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="31200.59" y="13155.0854">add_named_global_constant(const StringName &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="31191.59" cy="13164.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="31200.59" y="13167.8901">remove_named_global_constant(const StringName &amp; p_name) : void</text><ellipse cx="31191.59" cy="13177.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="31200.59" y="13180.6948">thread_enter() : void</text><ellipse cx="31191.59" cy="13190.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="31200.59" y="13193.4995">thread_exit() : void</text><ellipse cx="31191.59" cy="13203.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="31200.59" y="13206.3042">debug_get_error() const = 0 : String</text><ellipse cx="31191.59" cy="13215.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="256" x="31200.59" y="13219.1089">debug_get_stack_level_count() const = 0 : int</text><ellipse cx="31191.59" cy="13228.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="31200.59" y="13231.9136">debug_get_stack_level_line(int p_level) const = 0 : int</text><ellipse cx="31191.59" cy="13241.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="31200.59" y="13244.7183">debug_get_stack_level_function(int p_level) const = 0 : String</text><ellipse cx="31191.59" cy="13254.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="31200.59" y="13257.5229">debug_get_stack_level_source(int p_level) const = 0 : String</text><ellipse cx="31191.59" cy="13267.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="857" x="31200.59" y="13270.3276">debug_get_stack_level_locals(int p_level, List&lt;String&gt; * p_locals, List&lt;Variant&gt; * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void</text><ellipse cx="31191.59" cy="13279.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="901" x="31200.59" y="13283.1323">debug_get_stack_level_members(int p_level, List&lt;String&gt; * p_members, List&lt;Variant&gt; * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void</text><ellipse cx="31191.59" cy="13292.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="31200.59" y="13295.937">debug_get_stack_level_instance(int p_level) : ScriptInstance *</text><ellipse cx="31191.59" cy="13305.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="739" x="31200.59" y="13308.7417">debug_get_globals(List&lt;String&gt; * p_globals, List&lt;Variant&gt; * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void</text><ellipse cx="31191.59" cy="13318.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="790" x="31200.59" y="13321.5464">debug_parse_stack_level_expression(int p_level, const String &amp; p_expression, int p_max_subitems = -1, int p_max_depth = -1) = 0 : String</text><ellipse cx="31191.59" cy="13331.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="31200.59" y="13334.3511">debug_get_current_stack_info() : Vector&lt;ScriptLanguage::StackInfo&gt;</text><ellipse cx="31191.59" cy="13343.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="31200.59" y="13347.1558">reload_all_scripts() = 0 : void</text><ellipse cx="31191.59" cy="13356.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="444" x="31200.59" y="13359.9604">reload_tool_script(const Ref&lt;Script&gt; &amp; p_script, bool p_soft_reload) = 0 : void</text><ellipse cx="31191.59" cy="13369.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="413" x="31200.59" y="13372.7651">get_recognized_extensions(List&lt;String&gt; * p_extensions) const = 0 : void</text><ellipse cx="31191.59" cy="13382.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="393" x="31200.59" y="13385.5698">get_public_functions(List&lt;MethodInfo&gt; * p_functions) const = 0 : void</text><ellipse cx="31191.59" cy="13395.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="455" x="31200.59" y="13398.3745">get_public_constants(List&lt;Pair&lt;String,Variant&gt;&gt; * p_constants) const = 0 : void</text><ellipse cx="31191.59" cy="13407.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="31200.59" y="13411.1792">profiling_start() = 0 : void</text><ellipse cx="31191.59" cy="13420.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="31200.59" y="13423.9839">profiling_stop() = 0 : void</text><ellipse cx="31191.59" cy="13433.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="561" x="31200.59" y="13436.7886">profiling_get_accumulated_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int</text><ellipse cx="31191.59" cy="13446.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="523" x="31200.59" y="13449.5933">profiling_get_frame_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int</text><ellipse cx="31191.59" cy="13459.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="31200.59" y="13462.3979">alloc_instance_binding_data(Object * p_object) : void *</text><ellipse cx="31191.59" cy="13471.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="31200.59" y="13475.2026">free_instance_binding_data(void * p_data) : void</text><ellipse cx="31191.59" cy="13484.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="31200.59" y="13488.0073">refcount_incremented_instance_binding(Object * p_object) : void</text><ellipse cx="31191.59" cy="13497.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="31200.59" y="13500.812">refcount_decremented_instance_binding(Object * p_object) : bool</text><ellipse cx="31191.59" cy="13510.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="31200.59" y="13513.6167">frame() : void</text><ellipse cx="31191.59" cy="13523.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="31200.59" y="13526.4214">handles_global_class_type(const String &amp; p_type) const : bool</text><ellipse cx="31191.59" cy="13536.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="690" x="31200.59" y="13539.2261">get_global_class_name(const String &amp; p_path, String * r_base_type = __null, String * r_icon_path = __null) const : String</text><ellipse cx="31191.59" cy="13548.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="31200.59" y="13552.0308">~ScriptLanguage() : void</text></a><!--MD5=[20209edb2b2a39856a637a9459a4ae92]
class C_0001649884439586022807--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374" target="_top" title="PlaceHolderScriptInstance" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374" xlink:show="new" xlink:title="PlaceHolderScriptInstance" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="304.0938" id="C_0001649884439586022807" style="stroke: #A80036; stroke-width: 1.5;" width="1306" x="31055.59" y="8680.9531"/><ellipse cx="31621.84" cy="8696.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M31624.8088,8702.5938 Q31624.2306,8702.8906 31623.59,8703.0313 Q31622.9494,8703.1875 31622.2463,8703.1875 Q31619.7463,8703.1875 31618.4181,8701.5469 Q31617.1056,8699.8906 31617.1056,8696.7656 Q31617.1056,8693.6406 31618.4181,8691.9844 Q31619.7463,8690.3281 31622.2463,8690.3281 Q31622.9494,8690.3281 31623.59,8690.4844 Q31624.2463,8690.6406 31624.8088,8690.9375 L31624.8088,8693.6563 Q31624.1838,8693.0781 31623.59,8692.8125 Q31622.9963,8692.5313 31622.3713,8692.5313 Q31621.0275,8692.5313 31620.34,8693.6094 Q31619.6525,8694.6719 31619.6525,8696.7656 Q31619.6525,8698.8594 31620.34,8699.9375 Q31621.0275,8701 31622.3713,8701 Q31622.9963,8701 31623.59,8700.7344 Q31624.1838,8700.4531 31624.8088,8699.875 L31624.8088,8702.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="165" x="31642.34" y="8701.1074">PlaceHolderScriptInstance</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31056.59" x2="32360.59" y1="8712.9531" y2="8712.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="31056.59" x2="32360.59" y1="8720.9531" y2="8720.9531"/><ellipse cx="31066.59" cy="8731.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="31075.59" y="8735.1636">set(const StringName &amp; p_name, const Variant &amp; p_value) : bool</text><ellipse cx="31066.59" cy="8744.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="31075.59" y="8747.9683">get(const StringName &amp; p_name, Variant &amp; r_ret) const : bool</text><ellipse cx="31066.59" cy="8757.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="31075.59" y="8760.7729">get_property_list(List&lt;PropertyInfo&gt; * p_properties) const : void</text><ellipse cx="31066.59" cy="8770.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="545" x="31075.59" y="8773.5776">get_property_type(const StringName &amp; p_name, bool * r_is_valid = __null) const : Variant::Type</text><ellipse cx="31066.59" cy="8783.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="31075.59" y="8786.3823">get_method_list(List&lt;MethodInfo&gt; * p_list) const : void</text><ellipse cx="31066.59" cy="8795.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="31075.59" y="8799.187">has_method(const StringName &amp; p_method) const : bool</text><ellipse cx="31066.59" cy="8808.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1280" x="31075.59" y="8811.9917">call(const StringName &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : Variant</text><ellipse cx="31066.59" cy="8821.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="650" x="31075.59" y="8824.7964">call(const StringName &amp; p_method, const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="31066.59" cy="8834.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="31075.59" y="8837.6011">notification(int p_notification) : void</text><ellipse cx="31066.59" cy="8847.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="31075.59" y="8850.4058">get_script() const : Ref&lt;Script&gt;</text><ellipse cx="31066.59" cy="8860" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="31075.59" y="8863.2104">get_language() : ScriptLanguage *</text><ellipse cx="31066.59" cy="8872.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="31075.59" y="8876.0151">get_owner() : Object *</text><ellipse cx="31066.59" cy="8885.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="31075.59" y="8888.8198">update(const List&lt;PropertyInfo&gt; &amp; p_properties, const Map&lt;StringName,Variant&gt; &amp; p_values) : void</text><ellipse cx="31066.59" cy="8898.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="31075.59" y="8901.6245">is_placeholder() const : bool</text><ellipse cx="31066.59" cy="8911.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="605" x="31075.59" y="8914.4292">property_set_fallback(const StringName &amp; p_name, const Variant &amp; p_value, bool * r_valid = __null) : void</text><ellipse cx="31066.59" cy="8924.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="478" x="31075.59" y="8927.2339">property_get_fallback(const StringName &amp; p_name, bool * r_valid = __null) : Variant</text><ellipse cx="31066.59" cy="8936.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="31075.59" y="8940.0386">get_rpc_mode(const StringName &amp; p_method) const : MultiplayerAPI::RPCMode</text><ellipse cx="31066.59" cy="8949.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="456" x="31075.59" y="8952.8433">get_rset_mode(const StringName &amp; p_variable) const : MultiplayerAPI::RPCMode</text><ellipse cx="31066.59" cy="8962.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="590" x="31075.59" y="8965.6479">PlaceHolderScriptInstance(ScriptLanguage * p_language, Ref&lt;Script&gt; p_script, Object * p_owner) : void</text><ellipse cx="31066.59" cy="8975.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="31075.59" y="8978.4526">~PlaceHolderScriptInstance() : void</text></a><!--MD5=[79e27d258fa9a526a1771d31d80b94ef]
class C_0000970940027123558604--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38" target="_top" title="MainLoop" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38" xlink:show="new" xlink:title="MainLoop" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="521.7734" id="C_0000970940027123558604" style="stroke: #A80036; stroke-width: 1.5;" width="440" x="28600.59" y="4510.4531"/><ellipse cx="28786.84" cy="4526.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28789.8088,4532.0938 Q28789.2306,4532.3906 28788.59,4532.5313 Q28787.9494,4532.6875 28787.2463,4532.6875 Q28784.7463,4532.6875 28783.4181,4531.0469 Q28782.1056,4529.3906 28782.1056,4526.2656 Q28782.1056,4523.1406 28783.4181,4521.4844 Q28784.7463,4519.8281 28787.2463,4519.8281 Q28787.9494,4519.8281 28788.59,4519.9844 Q28789.2463,4520.1406 28789.8088,4520.4375 L28789.8088,4523.1563 Q28789.1838,4522.5781 28788.59,4522.3125 Q28787.9963,4522.0313 28787.3713,4522.0313 Q28786.0275,4522.0313 28785.34,4523.1094 Q28784.6525,4524.1719 28784.6525,4526.2656 Q28784.6525,4528.3594 28785.34,4529.4375 Q28786.0275,4530.5 28787.3713,4530.5 Q28787.9963,4530.5 28788.59,4530.2344 Q28789.1838,4529.9531 28789.8088,4529.375 L28789.8088,4532.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="28807.34" y="4530.6074">MainLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28601.59" x2="29039.59" y1="4542.4531" y2="4542.4531"/><ellipse cx="28611.59" cy="4553.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="28620.59" y="4556.6636">NOTIFICATION_WM_MOUSE_ENTER : enum</text><ellipse cx="28611.59" cy="4566.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="28620.59" y="4569.4683">NOTIFICATION_WM_MOUSE_EXIT : enum</text><ellipse cx="28611.59" cy="4579.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="28620.59" y="4582.2729">NOTIFICATION_WM_FOCUS_IN : enum</text><ellipse cx="28611.59" cy="4591.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="28620.59" y="4595.0776">NOTIFICATION_WM_FOCUS_OUT : enum</text><ellipse cx="28611.59" cy="4604.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="28620.59" y="4607.8823">NOTIFICATION_WM_QUIT_REQUEST : enum</text><ellipse cx="28611.59" cy="4617.4766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="28620.59" y="4620.687">NOTIFICATION_WM_GO_BACK_REQUEST : enum</text><ellipse cx="28611.59" cy="4630.2813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="28620.59" y="4633.4917">NOTIFICATION_WM_UNFOCUS_REQUEST : enum</text><ellipse cx="28611.59" cy="4643.0859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="28620.59" y="4646.2964">NOTIFICATION_OS_MEMORY_WARNING : enum</text><ellipse cx="28611.59" cy="4655.8906" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="28620.59" y="4659.1011">NOTIFICATION_TRANSLATION_CHANGED : enum</text><ellipse cx="28611.59" cy="4668.6953" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="28620.59" y="4671.9058">NOTIFICATION_WM_ABOUT : enum</text><ellipse cx="28611.59" cy="4681.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="28620.59" y="4684.7104">NOTIFICATION_CRASH : enum</text><ellipse cx="28611.59" cy="4694.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="28620.59" y="4697.5151">NOTIFICATION_OS_IME_UPDATE : enum</text><ellipse cx="28611.59" cy="4707.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="28620.59" y="4710.3198">NOTIFICATION_APP_RESUMED : enum</text><ellipse cx="28611.59" cy="4719.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="28620.59" y="4723.1245">NOTIFICATION_APP_PAUSED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="28601.59" x2="29039.59" y1="4729.7188" y2="4729.7188"/><ellipse cx="28611.59" cy="4740.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="28620.59" y="4743.9292">get_class() const : String</text><ellipse cx="28611.59" cy="4753.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="28620.59" y="4756.7339">_get_class_namev() const : const StringName *</text><ellipse cx="28611.59" cy="4766.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="28620.59" y="4769.5386">get_class_ptr_static() : void *</text><ellipse cx="28611.59" cy="4779.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="28620.59" y="4782.3433">get_class_static() : String</text><ellipse cx="28611.59" cy="4791.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="28620.59" y="4795.1479">get_parent_class_static() : String</text><ellipse cx="28611.59" cy="4804.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="28620.59" y="4807.9526">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="28611.59" cy="4817.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="28620.59" y="4820.7573">get_category_static() : String</text><ellipse cx="28611.59" cy="4830.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="28620.59" y="4833.562">inherits_static() : String</text><ellipse cx="28611.59" cy="4843.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="28620.59" y="4846.3667">is_class(const String &amp; p_class) const : bool</text><ellipse cx="28611.59" cy="4855.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="28620.59" y="4859.1714">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="28611.59" cy="4868.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="28620.59" y="4871.9761">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="28611.59" cy="4881.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="28620.59" y="4884.7808">initialize_class() : void</text><ellipse cx="28611.59" cy="4894.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="28620.59" y="4897.5854">input_event(const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="28611.59" cy="4907.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="28620.59" y="4910.3901">input_text(const String &amp; p_text) : void</text><ellipse cx="28611.59" cy="4919.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="28620.59" y="4923.1948">init() : void</text><ellipse cx="28611.59" cy="4932.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="28620.59" y="4935.9995">iteration(float p_time) : bool</text><ellipse cx="28611.59" cy="4945.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="28620.59" y="4948.8042">idle(float p_time) : bool</text><ellipse cx="28611.59" cy="4958.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="28620.59" y="4961.6089">finish() : void</text><ellipse cx="28611.59" cy="4971.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="28620.59" y="4974.4136">drop_files(const Vector&lt;String&gt; &amp; p_files, int p_from_screen = 0) : void</text><ellipse cx="28611.59" cy="4984.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="28620.59" y="4987.2183">global_menu_action(const Variant &amp; p_id, const Variant &amp; p_meta) : void</text><ellipse cx="28611.59" cy="4996.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="28620.59" y="5000.0229">set_init_script(const Ref&lt;Script&gt; &amp; p_init_script) : void</text><ellipse cx="28611.59" cy="5009.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="28620.59" y="5012.8276">MainLoop() : void</text><ellipse cx="28611.59" cy="5022.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="28620.59" y="5025.6323">~MainLoop() : void</text></a><!--MD5=[2ff27342a65908c4b6ff1f7f17075b0e]
class C_0001823345232236209470--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42" target="_top" title="Engine##Singleton" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42" xlink:show="new" xlink:title="Engine##Singleton" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0001823345232236209470" style="stroke: #A80036; stroke-width: 1.5;" width="515" x="29571.09" y="707.9531"/><ellipse cx="29769.34" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29772.3088,729.5938 Q29771.7306,729.8906 29771.09,730.0313 Q29770.4494,730.1875 29769.7463,730.1875 Q29767.2463,730.1875 29765.9181,728.5469 Q29764.6056,726.8906 29764.6056,723.7656 Q29764.6056,720.6406 29765.9181,718.9844 Q29767.2463,717.3281 29769.7463,717.3281 Q29770.4494,717.3281 29771.09,717.4844 Q29771.7463,717.6406 29772.3088,717.9375 L29772.3088,720.6563 Q29771.6838,720.0781 29771.09,719.8125 Q29770.4963,719.5313 29769.8713,719.5313 Q29768.5275,719.5313 29767.84,720.6094 Q29767.1525,721.6719 29767.1525,723.7656 Q29767.1525,725.8594 29767.84,726.9375 Q29768.5275,728 29769.8713,728 Q29770.4963,728 29771.09,727.7344 Q29771.6838,727.4531 29772.3088,726.875 L29772.3088,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="29789.84" y="728.1074">Engine::Singleton</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29572.09" x2="30085.09" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29577.09" y="745.9531"/><ellipse cx="29582.09" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" target="_top" title="name" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="29591.09" y="754.1636">name : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" target="_top" title="ptr" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" xlink:show="new" xlink:title="ptr" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29577.09" y="758.7578"/><ellipse cx="29582.09" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" target="_top" title="ptr" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44" xlink:show="new" xlink:title="ptr" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="29591.09" y="766.9683">ptr : Object *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="29572.09" x2="30085.09" y1="773.5625" y2="773.5625"/><ellipse cx="29582.09" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="489" x="29591.09" y="787.7729">Singleton(const StringName &amp; p_name = StringName(), Object * p_ptr = __null) : void</text><!--MD5=[ebdaeccedfca549d9dc34e5fd7d7aea5]
class C_0000361490529588572420--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L45" target="_top" title="OS" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L45" xlink:show="new" xlink:title="OS" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="2698.5703" id="C_0000361490529588572420" style="stroke: #A80036; stroke-width: 1.5;" width="1420" x="36008.59" y="11813.9531"/><ellipse cx="36706.34" cy="11829.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M36706.4494,11825.2969 L36705.2931,11830.375 L36707.6213,11830.375 L36706.4494,11825.2969 Z M36704.965,11823.0625 L36707.9494,11823.0625 L36711.3088,11835.4531 L36708.8556,11835.4531 L36708.09,11832.3906 L36704.8088,11832.3906 L36704.0588,11835.4531 L36701.6213,11835.4531 L36704.965,11823.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="16" x="36726.84" y="11834.1074">OS</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="36009.59" x2="37427.59" y1="11845.9531" y2="11845.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" target="_top" title="switch_vsync_function" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" xlink:show="new" xlink:title="switch_vsync_function" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="36014.59" y="11851.9531"/><ellipse cx="36019.59" cy="11856.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" target="_top" title="switch_vsync_function" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544" xlink:show="new" xlink:title="switch_vsync_function" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="36028.59" y="11860.1636">switch_vsync_function : OS::SwitchVSyncCallbackInThread</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="36009.59" x2="37427.59" y1="11866.7578" y2="11866.7578"/><ellipse cx="36019.59" cy="11877.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="36028.59" y="11880.9683">get_singleton() : OS *</text><ellipse cx="36019.59" cy="11890.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="731" x="36028.59" y="11893.7729">global_menu_add_item(const String &amp; p_menu, const String &amp; p_label, const Variant &amp; p_signal, const Variant &amp; p_meta) : void</text><ellipse cx="36019.59" cy="11903.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="36028.59" y="11906.5776">global_menu_add_separator(const String &amp; p_menu) : void</text><ellipse cx="36019.59" cy="11916.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="36028.59" y="11919.3823">global_menu_remove_item(const String &amp; p_menu, int p_idx) : void</text><ellipse cx="36019.59" cy="11928.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="36028.59" y="11932.187">global_menu_clear(const String &amp; p_menu) : void</text><ellipse cx="36019.59" cy="11941.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="954" x="36028.59" y="11944.9917">print_error(const char * p_function, const char * p_file, int p_line, const char * p_code, const char * p_rationale, Logger::ErrorType p_type = Logger::ERR_ERROR) : void</text><ellipse cx="36019.59" cy="11954.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="36028.59" y="11957.7964">print(const char * p_format) : void</text><ellipse cx="36019.59" cy="11967.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="36028.59" y="11970.6011">printerr(const char * p_format) : void</text><ellipse cx="36019.59" cy="11980.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="36028.59" y="11983.4058">alert(const String &amp; p_alert, const String &amp; p_title = "ALERT!") = 0 : void</text><ellipse cx="36019.59" cy="11993" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="36028.59" y="11996.2104">get_stdin_string(bool p_block = true) = 0 : String</text><ellipse cx="36019.59" cy="12005.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="36028.59" y="12009.0151">set_mouse_mode(OS::MouseMode p_mode) : void</text><ellipse cx="36019.59" cy="12018.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="36028.59" y="12021.8198">get_mouse_mode() const : OS::MouseMode</text><ellipse cx="36019.59" cy="12031.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="36028.59" y="12034.6245">warp_mouse_position(const Point2 &amp; p_to) : void</text><ellipse cx="36019.59" cy="12044.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="36028.59" y="12047.4292">get_mouse_position() const = 0 : Point2</text><ellipse cx="36019.59" cy="12057.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="36028.59" y="12060.2339">get_mouse_button_state() const = 0 : int</text><ellipse cx="36019.59" cy="12069.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="36028.59" y="12073.0386">set_window_title(const String &amp; p_title) = 0 : void</text><ellipse cx="36019.59" cy="12082.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="431" x="36028.59" y="12085.8433">set_window_mouse_passthrough(const PoolVector2Array &amp; p_region) : void</text><ellipse cx="36019.59" cy="12095.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="36028.59" y="12098.6479">set_clipboard(const String &amp; p_text) : void</text><ellipse cx="36019.59" cy="12108.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="36028.59" y="12111.4526">get_clipboard() const : String</text><ellipse cx="36019.59" cy="12121.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="36028.59" y="12124.2573">set_video_mode(const OS::VideoMode &amp; p_video_mode, int p_screen = 0) = 0 : void</text><ellipse cx="36019.59" cy="12133.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="36028.59" y="12137.062">get_video_mode(int p_screen = 0) const = 0 : OS::VideoMode</text><ellipse cx="36019.59" cy="12146.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="36028.59" y="12149.8667">get_fullscreen_mode_list(List&lt;OS::VideoMode&gt; * p_list, int p_screen = 0) const = 0 : void</text><ellipse cx="36019.59" cy="12159.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="36028.59" y="12162.6714">get_video_driver_count() const : int</text><ellipse cx="36019.59" cy="12172.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="36028.59" y="12175.4761">get_video_driver_name(int p_driver) const : const char *</text><ellipse cx="36019.59" cy="12185.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="36028.59" y="12188.2808">get_current_video_driver() const = 0 : int</text><ellipse cx="36019.59" cy="12197.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="36028.59" y="12201.0854">get_audio_driver_count() const : int</text><ellipse cx="36019.59" cy="12210.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="36028.59" y="12213.8901">get_audio_driver_name(int p_driver) const : const char *</text><ellipse cx="36019.59" cy="12223.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="36028.59" y="12226.6948">get_tablet_driver_count() const : int</text><ellipse cx="36019.59" cy="12236.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="36028.59" y="12239.4995">get_tablet_driver_name(int p_driver) const : String</text><ellipse cx="36019.59" cy="12249.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="36028.59" y="12252.3042">get_current_tablet_driver() const : String</text><ellipse cx="36019.59" cy="12261.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="36028.59" y="12265.1089">set_current_tablet_driver(const String &amp; p_driver) : void</text><ellipse cx="36019.59" cy="12274.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="36028.59" y="12277.9136">get_connected_midi_inputs() : PoolStringArray</text><ellipse cx="36019.59" cy="12287.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="36028.59" y="12290.7183">open_midi_inputs() : void</text><ellipse cx="36019.59" cy="12300.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="36028.59" y="12303.5229">close_midi_inputs() : void</text><ellipse cx="36019.59" cy="12313.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="36028.59" y="12316.3276">get_screen_count() const : int</text><ellipse cx="36019.59" cy="12325.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="36028.59" y="12329.1323">get_current_screen() const : int</text><ellipse cx="36019.59" cy="12338.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="36028.59" y="12341.937">set_current_screen(int p_screen) : void</text><ellipse cx="36019.59" cy="12351.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="36028.59" y="12354.7417">get_screen_position(int p_screen = -1) const : Point2</text><ellipse cx="36019.59" cy="12364.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="36028.59" y="12367.5464">get_screen_size(int p_screen = -1) const : Size2</text><ellipse cx="36019.59" cy="12377.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="36028.59" y="12380.3511">get_screen_dpi(int p_screen = -1) const : int</text><ellipse cx="36019.59" cy="12389.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="36028.59" y="12393.1558">get_screen_scale(int p_screen = -1) const : float</text><ellipse cx="36019.59" cy="12402.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="36028.59" y="12405.9604">get_screen_max_scale() const : float</text><ellipse cx="36019.59" cy="12415.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="36028.59" y="12418.7651">get_window_position() const : Point2</text><ellipse cx="36019.59" cy="12428.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="36028.59" y="12431.5698">set_window_position(const Point2 &amp; p_position) : void</text><ellipse cx="36019.59" cy="12441.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="36028.59" y="12444.3745">get_max_window_size() const : Size2</text><ellipse cx="36019.59" cy="12453.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="36028.59" y="12457.1792">get_min_window_size() const : Size2</text><ellipse cx="36019.59" cy="12466.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="36028.59" y="12469.9839">get_window_size() const = 0 : Size2</text><ellipse cx="36019.59" cy="12479.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="36028.59" y="12482.7886">get_real_window_size() const : Size2</text><ellipse cx="36019.59" cy="12492.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="36028.59" y="12495.5933">set_min_window_size(const Size2 p_size) : void</text><ellipse cx="36019.59" cy="12505.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="36028.59" y="12508.3979">set_max_window_size(const Size2 p_size) : void</text><ellipse cx="36019.59" cy="12517.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="36028.59" y="12521.2026">set_window_size(const Size2 p_size) : void</text><ellipse cx="36019.59" cy="12530.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="36028.59" y="12534.0073">set_window_fullscreen(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12543.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="36028.59" y="12546.812">is_window_fullscreen() const : bool</text><ellipse cx="36019.59" cy="12556.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="36028.59" y="12559.6167">set_window_resizable(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12569.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="36028.59" y="12572.4214">is_window_resizable() const : bool</text><ellipse cx="36019.59" cy="12582.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="36028.59" y="12585.2261">set_window_minimized(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12594.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="36028.59" y="12598.0308">is_window_minimized() const : bool</text><ellipse cx="36019.59" cy="12607.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="36028.59" y="12610.8354">set_window_maximized(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12620.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="36028.59" y="12623.6401">is_window_maximized() const : bool</text><ellipse cx="36019.59" cy="12633.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="36028.59" y="12636.4448">set_window_always_on_top(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12646.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="36028.59" y="12649.2495">is_window_always_on_top() const : bool</text><ellipse cx="36019.59" cy="12658.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="36028.59" y="12662.0542">is_window_focused() const : bool</text><ellipse cx="36019.59" cy="12671.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="36028.59" y="12674.8589">set_console_visible(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12684.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="36028.59" y="12687.6636">is_console_visible() const : bool</text><ellipse cx="36019.59" cy="12697.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="36028.59" y="12700.4683">request_attention() : void</text><ellipse cx="36019.59" cy="12710.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="36028.59" y="12713.2729">center_window() : void</text><ellipse cx="36019.59" cy="12722.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="36028.59" y="12726.0776">get_native_handle(int p_handle_type) : void *</text><ellipse cx="36019.59" cy="12735.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="36028.59" y="12738.8823">get_window_safe_area() const : Rect2</text><ellipse cx="36019.59" cy="12748.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="36028.59" y="12751.687">set_borderless_window(bool p_borderless) : void</text><ellipse cx="36019.59" cy="12761.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="36028.59" y="12764.4917">get_borderless_window() : bool</text><ellipse cx="36019.59" cy="12774.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="36028.59" y="12777.2964">get_window_per_pixel_transparency_enabled() const : bool</text><ellipse cx="36019.59" cy="12786.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="36028.59" y="12790.1011">set_window_per_pixel_transparency_enabled(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12799.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="36028.59" y="12802.9058">set_ime_active(const bool p_active) : void</text><ellipse cx="36019.59" cy="12812.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="36028.59" y="12815.7104">set_ime_position(const Point2 &amp; p_pos) : void</text><ellipse cx="36019.59" cy="12825.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="36028.59" y="12828.5151">get_ime_selection() const : Point2</text><ellipse cx="36019.59" cy="12838.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="36028.59" y="12841.3198">get_ime_text() const : String</text><ellipse cx="36019.59" cy="12850.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="646" x="36028.59" y="12854.1245">open_dynamic_library(const String p_path, void *&amp; p_library_handle, bool p_also_set_library_path = false) : Error</text><ellipse cx="36019.59" cy="12863.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="36028.59" y="12866.9292">close_dynamic_library(void * p_library_handle) : Error</text><ellipse cx="36019.59" cy="12876.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="801" x="36028.59" y="12879.7339">get_dynamic_library_symbol_handle(void * p_library_handle, const String p_name, void *&amp; p_symbol_handle, bool p_optional = false) : Error</text><ellipse cx="36019.59" cy="12889.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="36028.59" y="12892.5386">set_keep_screen_on(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12902.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="36028.59" y="12905.3433">is_keep_screen_on() const : bool</text><ellipse cx="36019.59" cy="12914.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="36028.59" y="12918.1479">set_low_processor_usage_mode(bool p_enabled) : void</text><ellipse cx="36019.59" cy="12927.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="36028.59" y="12930.9526">is_in_low_processor_usage_mode() const : bool</text><ellipse cx="36019.59" cy="12940.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="36028.59" y="12943.7573">set_low_processor_usage_mode_sleep_usec(int p_usec) : void</text><ellipse cx="36019.59" cy="12953.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="36028.59" y="12956.562">get_low_processor_usage_mode_sleep_usec() const : int</text><ellipse cx="36019.59" cy="12966.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="36028.59" y="12969.3667">get_executable_path() const : String</text><ellipse cx="36019.59" cy="12978.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1394" x="36028.59" y="12982.1714">execute(const String &amp; p_path, const List&lt;String&gt; &amp; p_arguments, bool p_blocking = true, OS::ProcessID * r_child_id = __null, String * r_pipe = __null, int * r_exitcode = __null, bool read_stderr = false, Mutex * p_pipe_mutex = __null) = 0 : Error</text><ellipse cx="36019.59" cy="12991.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="36028.59" y="12994.9761">kill(const OS::ProcessID &amp; p_pid) = 0 : Error</text><ellipse cx="36019.59" cy="13004.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="36028.59" y="13007.7808">get_process_id() const : int</text><ellipse cx="36019.59" cy="13017.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="36028.59" y="13020.5854">vibrate_handheld(int p_duration_ms = 500) : void</text><ellipse cx="36019.59" cy="13030.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="36028.59" y="13033.3901">shell_open(String p_uri) : Error</text><ellipse cx="36019.59" cy="13042.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="36028.59" y="13046.1948">set_cwd(const String &amp; p_cwd) : Error</text><ellipse cx="36019.59" cy="13055.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="36028.59" y="13058.9995">has_environment(const String &amp; p_var) const = 0 : bool</text><ellipse cx="36019.59" cy="13068.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="323" x="36028.59" y="13071.8042">get_environment(const String &amp; p_var) const = 0 : String</text><ellipse cx="36019.59" cy="13081.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="36028.59" y="13084.6089">set_environment(const String &amp; p_var, const String &amp; p_value) const = 0 : bool</text><ellipse cx="36019.59" cy="13094.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="167" x="36028.59" y="13097.4136">get_name() const = 0 : String</text><ellipse cx="36019.59" cy="13107.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="36028.59" y="13110.2183">get_cmdline_args() const : List&lt;String&gt;</text><ellipse cx="36019.59" cy="13119.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="36028.59" y="13123.0229">get_model_name() const : String</text><ellipse cx="36019.59" cy="13132.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="36028.59" y="13135.8276">ensure_user_data_dir() : void</text><ellipse cx="36019.59" cy="13145.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="36028.59" y="13148.6323">get_main_loop() const = 0 : MainLoop *</text><ellipse cx="36019.59" cy="13158.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="36028.59" y="13161.437">yield() : void</text><ellipse cx="36019.59" cy="13171.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="275" x="36028.59" y="13174.2417">get_date(bool local = false) const = 0 : OS::Date</text><ellipse cx="36019.59" cy="13183.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="36028.59" y="13187.0464">get_time(bool local = false) const = 0 : OS::Time</text><ellipse cx="36019.59" cy="13196.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="289" x="36028.59" y="13199.8511">get_time_zone_info() const = 0 : OS::TimeZoneInfo</text><ellipse cx="36019.59" cy="13209.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="36028.59" y="13212.6558">get_iso_date_time(bool local = false) const : String</text><ellipse cx="36019.59" cy="13222.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="36028.59" y="13225.4604">get_unix_time() const : uint64_t</text><ellipse cx="36019.59" cy="13235.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="36028.59" y="13238.2651">get_system_time_secs() const : uint64_t</text><ellipse cx="36019.59" cy="13247.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="36028.59" y="13251.0698">get_system_time_msecs() const : uint64_t</text><ellipse cx="36019.59" cy="13260.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="36028.59" y="13263.8745">delay_usec(uint32_t p_usec) const = 0 : void</text><ellipse cx="36019.59" cy="13273.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="36028.59" y="13276.6792">add_frame_delay(bool p_can_draw) : void</text><ellipse cx="36019.59" cy="13286.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="204" x="36028.59" y="13289.4839">get_ticks_usec() const = 0 : uint64_t</text><ellipse cx="36019.59" cy="13299.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="36028.59" y="13302.2886">get_ticks_msec() const : uint32_t</text><ellipse cx="36019.59" cy="13311.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="36028.59" y="13315.0933">get_splash_tick_msec() const : uint64_t</text><ellipse cx="36019.59" cy="13324.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="156" x="36028.59" y="13327.8979">can_draw() const = 0 : bool</text><ellipse cx="36019.59" cy="13337.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="36028.59" y="13340.7026">is_userfs_persistent() const : bool</text><ellipse cx="36019.59" cy="13350.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="36028.59" y="13353.5073">is_stdout_verbose() const : bool</text><ellipse cx="36019.59" cy="13363.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="36028.59" y="13366.312">is_stdout_debug_enabled() const : bool</text><ellipse cx="36019.59" cy="13375.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="36028.59" y="13379.1167">disable_crash_handler() : void</text><ellipse cx="36019.59" cy="13388.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="36028.59" y="13391.9214">is_disable_crash_handler() const : bool</text><ellipse cx="36019.59" cy="13401.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="36028.59" y="13404.7261">initialize_debugging() : void</text><ellipse cx="36019.59" cy="13414.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="36028.59" y="13417.5308">has_virtual_keyboard() const : bool</text><ellipse cx="36019.59" cy="13427.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1147" x="36028.59" y="13430.3354">show_virtual_keyboard(const String &amp; p_existing_text, const Rect2 &amp; p_screen_rect = Rect2(), bool p_multiline = false, int p_max_input_length = -1, int p_cursor_start = -1, int p_cursor_end = -1) : void</text><ellipse cx="36019.59" cy="13439.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="36028.59" y="13443.1401">hide_virtual_keyboard() : void</text><ellipse cx="36019.59" cy="13452.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="36028.59" y="13455.9448">get_virtual_keyboard_height() const : int</text><ellipse cx="36019.59" cy="13465.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="36028.59" y="13468.7495">set_cursor_shape(OS::CursorShape p_shape) : void</text><ellipse cx="36019.59" cy="13478.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="36028.59" y="13481.5542">get_cursor_shape() const : OS::CursorShape</text><ellipse cx="36019.59" cy="13491.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="642" x="36028.59" y="13494.3589">set_custom_mouse_cursor(const RES &amp; p_cursor, OS::CursorShape p_shape, const Vector2 &amp; p_hotspot) : void</text><ellipse cx="36019.59" cy="13503.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="36028.59" y="13507.1636">get_swap_ok_cancel() : bool</text><ellipse cx="36019.59" cy="13516.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="36028.59" y="13519.9683">dump_memory_to_file(const char * p_file) : void</text><ellipse cx="36019.59" cy="13529.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="36028.59" y="13532.7729">dump_resources_to_file(const char * p_file) : void</text><ellipse cx="36019.59" cy="13542.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="36028.59" y="13545.5776">print_resources_in_use(bool p_short = false) : void</text><ellipse cx="36019.59" cy="13555.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="36028.59" y="13558.3823">print_all_resources(String p_to_file = "") : void</text><ellipse cx="36019.59" cy="13567.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="36028.59" y="13571.187">get_static_memory_usage() const : uint64_t</text><ellipse cx="36019.59" cy="13580.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="36028.59" y="13583.9917">get_static_memory_peak_usage() const : uint64_t</text><ellipse cx="36019.59" cy="13593.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="36028.59" y="13596.7964">get_dynamic_memory_usage() const : uint64_t</text><ellipse cx="36019.59" cy="13606.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="36028.59" y="13609.6011">get_free_static_memory() const : uint64_t</text><ellipse cx="36019.59" cy="13619.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="36028.59" y="13622.4058">get_render_thread_mode() const : OS::RenderThreadMode</text><ellipse cx="36019.59" cy="13632" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="36028.59" y="13635.2104">get_locale() const : String</text><ellipse cx="36019.59" cy="13644.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="556" x="36028.59" y="13648.0151">get_safe_dir_name(const String &amp; p_dir_name, bool p_allow_dir_separator = false) const : String</text><ellipse cx="36019.59" cy="13657.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="36028.59" y="13660.8198">get_godot_dir_name() const : String</text><ellipse cx="36019.59" cy="13670.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="36028.59" y="13673.6245">get_data_path() const : String</text><ellipse cx="36019.59" cy="13683.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="36028.59" y="13686.4292">get_config_path() const : String</text><ellipse cx="36019.59" cy="13696.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="36028.59" y="13699.2339">get_cache_path() const : String</text><ellipse cx="36019.59" cy="13708.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="36028.59" y="13712.0386">get_bundle_resource_dir() const : String</text><ellipse cx="36019.59" cy="13721.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="36028.59" y="13724.8433">get_user_data_dir() const : String</text><ellipse cx="36019.59" cy="13734.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="36028.59" y="13737.6479">get_resource_dir() const : String</text><ellipse cx="36019.59" cy="13747.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="36028.59" y="13750.4526">get_system_dir(OS::SystemDir p_dir, bool p_shared_storage = true) const : String</text><ellipse cx="36019.59" cy="13760.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="36028.59" y="13763.2573">move_to_trash(const String &amp; p_path) : Error</text><ellipse cx="36019.59" cy="13772.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="36028.59" y="13776.062">set_no_window_mode(bool p_enable) : void</text><ellipse cx="36019.59" cy="13785.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="36028.59" y="13788.8667">is_no_window_mode_enabled() const : bool</text><ellipse cx="36019.59" cy="13798.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="36028.59" y="13801.6714">has_touchscreen_ui_hint() const : bool</text><ellipse cx="36019.59" cy="13811.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="36028.59" y="13814.4761">set_screen_orientation(OS::ScreenOrientation p_orientation) : void</text><ellipse cx="36019.59" cy="13824.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="36028.59" y="13827.2808">get_screen_orientation() const : OS::ScreenOrientation</text><ellipse cx="36019.59" cy="13836.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="546" x="36028.59" y="13840.0854">get_screen_orientation_from_string(const String &amp; p_orientation) const : OS::ScreenOrientation</text><ellipse cx="36019.59" cy="13849.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="36028.59" y="13852.8901">enable_for_stealing_focus(OS::ProcessID pid) : void</text><ellipse cx="36019.59" cy="13862.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="36028.59" y="13865.6948">move_window_to_foreground() : void</text><ellipse cx="36019.59" cy="13875.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="36028.59" y="13878.4995">debug_break() : void</text><ellipse cx="36019.59" cy="13888.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="36028.59" y="13891.3042">release_rendering_thread() : void</text><ellipse cx="36019.59" cy="13900.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="36028.59" y="13904.1089">make_rendering_thread() : void</text><ellipse cx="36019.59" cy="13913.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="36028.59" y="13916.9136">swap_buffers() : void</text><ellipse cx="36019.59" cy="13926.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="36028.59" y="13929.7183">set_native_icon(const String &amp; p_filename) : void</text><ellipse cx="36019.59" cy="13939.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="36028.59" y="13942.5229">set_icon(const Ref&lt;Image&gt; &amp; p_icon) : void</text><ellipse cx="36019.59" cy="13952.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="36028.59" y="13955.3276">get_exit_code() const : int</text><ellipse cx="36019.59" cy="13964.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="36028.59" y="13968.1323">set_exit_code(int p_code) : void</text><ellipse cx="36019.59" cy="13977.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="36028.59" y="13980.937">is_custom_exit_code() : bool</text><ellipse cx="36019.59" cy="13990.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="36028.59" y="13993.7417">get_processor_count() const : int</text><ellipse cx="36019.59" cy="14003.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="36028.59" y="14006.5464">get_unique_id() const : String</text><ellipse cx="36019.59" cy="14016.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="36028.59" y="14019.3511">native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error</text><ellipse cx="36019.59" cy="14028.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="36028.59" y="14032.1558">native_video_is_playing() const : bool</text><ellipse cx="36019.59" cy="14041.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="36028.59" y="14044.9604">native_video_pause() : void</text><ellipse cx="36019.59" cy="14054.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="36028.59" y="14057.7651">native_video_unpause() : void</text><ellipse cx="36019.59" cy="14067.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="36028.59" y="14070.5698">native_video_stop() : void</text><ellipse cx="36019.59" cy="14080.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="36028.59" y="14083.3745">can_use_threads() const : bool</text><ellipse cx="36019.59" cy="14092.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="661" x="36028.59" y="14096.1792">dialog_show(String p_title, String p_description, Vector&lt;String&gt; p_buttons, Object * p_obj, String p_callback) : Error</text><ellipse cx="36019.59" cy="14105.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="36028.59" y="14108.9839">dialog_input_text(String p_title, String p_description, String p_partial, Object * p_obj, String p_callback) : Error</text><ellipse cx="36019.59" cy="14118.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="36028.59" y="14121.7886">get_latin_keyboard_variant() const : OS::LatinKeyboardVariant</text><ellipse cx="36019.59" cy="14131.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="36028.59" y="14134.5933">keyboard_get_layout_count() const : int</text><ellipse cx="36019.59" cy="14144.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="36028.59" y="14147.3979">keyboard_get_current_layout() const : int</text><ellipse cx="36019.59" cy="14156.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="36028.59" y="14160.2026">keyboard_set_current_layout(int p_index) : void</text><ellipse cx="36019.59" cy="14169.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="36028.59" y="14173.0073">keyboard_get_layout_language(int p_index) const : String</text><ellipse cx="36019.59" cy="14182.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="36028.59" y="14185.812">keyboard_get_layout_name(int p_index) const : String</text><ellipse cx="36019.59" cy="14195.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="36028.59" y="14198.6167">is_joy_known(int p_device) : bool</text><ellipse cx="36019.59" cy="14208.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="36028.59" y="14211.4214">get_joy_guid(int p_device) const : String</text><ellipse cx="36019.59" cy="14221.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="36028.59" y="14224.2261">set_context(int p_context) : void</text><ellipse cx="36019.59" cy="14233.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="36028.59" y="14237.0308">set_use_vsync(bool p_enable) : void</text><ellipse cx="36019.59" cy="14246.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="36028.59" y="14249.8354">is_vsync_enabled() const : bool</text><ellipse cx="36019.59" cy="14259.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="36028.59" y="14262.6401">_set_use_vsync(bool p_enable) : void</text><ellipse cx="36019.59" cy="14272.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="36028.59" y="14275.4448">set_vsync_via_compositor(bool p_enable) : void</text><ellipse cx="36019.59" cy="14285.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="36028.59" y="14288.2495">is_vsync_via_compositor_enabled() const : bool</text><ellipse cx="36019.59" cy="14297.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="36028.59" y="14301.0542">get_power_state() : OS::PowerState</text><ellipse cx="36019.59" cy="14310.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="36028.59" y="14313.8589">get_power_seconds_left() : int</text><ellipse cx="36019.59" cy="14323.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="36028.59" y="14326.6636">get_power_percent_left() : int</text><ellipse cx="36019.59" cy="14336.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="36028.59" y="14339.4683">force_process_input() : void</text><ellipse cx="36019.59" cy="14349.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="36028.59" y="14352.2729">has_feature(const String &amp; p_feature) : bool</text><ellipse cx="36019.59" cy="14361.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="466" x="36028.59" y="14365.0776">set_has_server_feature_callback(OS::HasServerFeatureCallback p_callback) : void</text><ellipse cx="36019.59" cy="14374.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="36028.59" y="14377.8823">is_layered_allowed() const : bool</text><ellipse cx="36019.59" cy="14387.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="36028.59" y="14390.687">is_hidpi_allowed() const : bool</text><ellipse cx="36019.59" cy="14400.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="36028.59" y="14403.4917">set_restart_on_exit(bool p_restart, const List&lt;String&gt; &amp; p_restart_arguments) : void</text><ellipse cx="36019.59" cy="14413.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="36028.59" y="14416.2964">is_restart_on_exit_set() const : bool</text><ellipse cx="36019.59" cy="14425.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="36028.59" y="14429.1011">get_restart_on_exit_arguments() const : List&lt;String&gt;</text><ellipse cx="36019.59" cy="14438.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="36028.59" y="14441.9058">request_permission(const String &amp; p_name) : bool</text><ellipse cx="36019.59" cy="14451.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="36028.59" y="14454.7104">request_permissions() : bool</text><ellipse cx="36019.59" cy="14464.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="36028.59" y="14467.5151">get_granted_permissions() const : Vector&lt;String&gt;</text><ellipse cx="36019.59" cy="14477.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="36028.59" y="14480.3198">process_and_drop_events() : void</text><ellipse cx="36019.59" cy="14489.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="36028.59" y="14493.1245">OS() : void</text><ellipse cx="36019.59" cy="14502.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="36028.59" y="14505.9292">~OS() : void</text><!--MD5=[3d4aa6b0ee5484ffc25bead94ef18955]
class C_0001485048025194488343--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67" target="_top" title="TranslationServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67" xlink:show="new" xlink:title="TranslationServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="470.5547" id="C_0001485048025194488343" style="stroke: #A80036; stroke-width: 1.5;" width="412" x="35381.59" y="8597.4531"/><ellipse cx="35528.34" cy="8613.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35531.3088,8619.0938 Q35530.7306,8619.3906 35530.09,8619.5313 Q35529.4494,8619.6875 35528.7463,8619.6875 Q35526.2463,8619.6875 35524.9181,8618.0469 Q35523.6056,8616.3906 35523.6056,8613.2656 Q35523.6056,8610.1406 35524.9181,8608.4844 Q35526.2463,8606.8281 35528.7463,8606.8281 Q35529.4494,8606.8281 35530.09,8606.9844 Q35530.7463,8607.1406 35531.3088,8607.4375 L35531.3088,8610.1563 Q35530.6838,8609.5781 35530.09,8609.3125 Q35529.4963,8609.0313 35528.8713,8609.0313 Q35527.5275,8609.0313 35526.84,8610.1094 Q35526.1525,8611.1719 35526.1525,8613.2656 Q35526.1525,8615.3594 35526.84,8616.4375 Q35527.5275,8617.5 35528.8713,8617.5 Q35529.4963,8617.5 35530.09,8617.2344 Q35530.6838,8616.9531 35531.3088,8616.375 L35531.3088,8619.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="35548.84" y="8617.6074">TranslationServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35382.59" x2="35792.59" y1="8629.4531" y2="8629.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="35382.59" x2="35792.59" y1="8637.4531" y2="8637.4531"/><ellipse cx="35392.59" cy="8648.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="35401.59" y="8651.6636">get_class() const : String</text><ellipse cx="35392.59" cy="8661.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="35401.59" y="8664.4683">_get_class_namev() const : const StringName *</text><ellipse cx="35392.59" cy="8674.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="35401.59" y="8677.2729">get_class_ptr_static() : void *</text><ellipse cx="35392.59" cy="8686.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="35401.59" y="8690.0776">get_class_static() : String</text><ellipse cx="35392.59" cy="8699.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="35401.59" y="8702.8823">get_parent_class_static() : String</text><ellipse cx="35392.59" cy="8712.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="35401.59" y="8715.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="35392.59" cy="8725.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="35401.59" y="8728.4917">get_category_static() : String</text><ellipse cx="35392.59" cy="8738.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="35401.59" y="8741.2964">inherits_static() : String</text><ellipse cx="35392.59" cy="8750.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="35401.59" y="8754.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="35392.59" cy="8763.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="35401.59" y="8766.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="35392.59" cy="8776.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="35401.59" y="8779.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="35392.59" cy="8789.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="35401.59" y="8792.5151">initialize_class() : void</text><ellipse cx="35392.59" cy="8802.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="208" x="35401.59" y="8805.3198">get_singleton() : TranslationServer *</text><ellipse cx="35392.59" cy="8814.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="35401.59" y="8818.1245">set_enabled(bool p_enabled) : void</text><ellipse cx="35392.59" cy="8827.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="35401.59" y="8830.9292">is_enabled() const : bool</text><ellipse cx="35392.59" cy="8840.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="35401.59" y="8843.7339">set_locale(const String &amp; p_locale) : void</text><ellipse cx="35392.59" cy="8853.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="35401.59" y="8856.5386">get_locale() const : String</text><ellipse cx="35392.59" cy="8866.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="35401.59" y="8869.3433">get_locale_name(const String &amp; p_locale) const : String</text><ellipse cx="35392.59" cy="8878.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="35401.59" y="8882.1479">get_loaded_locales() const : Array</text><ellipse cx="35392.59" cy="8891.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="35401.59" y="8894.9526">add_translation(const Ref&lt;Translation&gt; &amp; p_translation) : void</text><ellipse cx="35392.59" cy="8904.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="35401.59" y="8907.7573">remove_translation(const Ref&lt;Translation&gt; &amp; p_translation) : void</text><ellipse cx="35392.59" cy="8917.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="35401.59" y="8920.562">translate(const StringName &amp; p_message) const : StringName</text><ellipse cx="35392.59" cy="8930.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="35401.59" y="8933.3667">get_all_locales() : Vector&lt;String&gt;</text><ellipse cx="35392.59" cy="8942.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="229" x="35401.59" y="8946.1714">get_all_locale_names() : Vector&lt;String&gt;</text><ellipse cx="35392.59" cy="8955.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="35401.59" y="8958.9761">is_locale_valid(const String &amp; p_locale) : bool</text><ellipse cx="35392.59" cy="8968.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="292" x="35401.59" y="8971.7808">standardize_locale(const String &amp; p_locale) : String</text><ellipse cx="35392.59" cy="8981.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="296" x="35401.59" y="8984.5854">get_language_code(const String &amp; p_locale) : String</text><ellipse cx="35392.59" cy="8994.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="35401.59" y="8997.3901">set_tool_translation(const Ref&lt;Translation&gt; &amp; p_translation) : void</text><ellipse cx="35392.59" cy="9006.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="35401.59" y="9010.1948">tool_translate(const StringName &amp; p_message) const : StringName</text><ellipse cx="35392.59" cy="9019.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="35401.59" y="9022.9995">setup() : void</text><ellipse cx="35392.59" cy="9032.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="35401.59" y="9035.8042">clear() : void</text><ellipse cx="35392.59" cy="9045.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="35401.59" y="9048.6089">load_translations() : void</text><ellipse cx="35392.59" cy="9058.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="35401.59" y="9061.4136">TranslationServer() : void</text></a><!--MD5=[2e1804fc10b971ae34ea328508bc0a5b]
class C_0000132048052014479231--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45" target="_top" title="_ObjectDebugLock" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45" xlink:show="new" xlink:title="_ObjectDebugLock" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0000132048052014479231" style="stroke: #A80036; stroke-width: 1.5;" width="252" x="29647.59" y="2308.9531"/><ellipse cx="29711.84" cy="2324.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M29714.8088,2330.5938 Q29714.2306,2330.8906 29713.59,2331.0313 Q29712.9494,2331.1875 29712.2463,2331.1875 Q29709.7463,2331.1875 29708.4181,2329.5469 Q29707.1056,2327.8906 29707.1056,2324.7656 Q29707.1056,2321.6406 29708.4181,2319.9844 Q29709.7463,2318.3281 29712.2463,2318.3281 Q29712.9494,2318.3281 29713.59,2318.4844 Q29714.2463,2318.6406 29714.8088,2318.9375 L29714.8088,2321.6563 Q29714.1838,2321.0781 29713.59,2320.8125 Q29712.9963,2320.5313 29712.3713,2320.5313 Q29711.0275,2320.5313 29710.34,2321.6094 Q29709.6525,2322.6719 29709.6525,2324.7656 Q29709.6525,2326.8594 29710.34,2327.9375 Q29711.0275,2329 29712.3713,2329 Q29712.9963,2329 29713.59,2328.7344 Q29714.1838,2328.4531 29714.8088,2327.875 L29714.8088,2330.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115" x="29732.34" y="2329.1074">_ObjectDebugLock</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29648.59" x2="29898.59" y1="2340.9531" y2="2340.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" xlink:show="new" xlink:title="obj" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="29653.59" y="2346.9531"/><ellipse cx="29658.59" cy="2351.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47" xlink:show="new" xlink:title="obj" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="29667.59" y="2355.1636">obj : Object *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="29648.59" x2="29898.59" y1="2361.7578" y2="2361.7578"/><ellipse cx="29658.59" cy="2372.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="29667.59" y="2375.9683">_ObjectDebugLock(Object * p_obj) : void</text><ellipse cx="29658.59" cy="2385.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="29667.59" y="2388.7729">_ObjectDebugLock() : void</text><!--MD5=[4e04dc62cf4bb361958a89934798b4f1]
class C_0000115801560197752094--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147" target="_top" title="_ObjectSignalDisconnectData" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147" xlink:show="new" xlink:title="_ObjectSignalDisconnectData" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0000115801560197752094" style="stroke: #A80036; stroke-width: 1.5;" width="216" x="35220.59" y="707.9531"/><ellipse cx="35235.59" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M35238.5588,729.5938 Q35237.9806,729.8906 35237.34,730.0313 Q35236.6994,730.1875 35235.9963,730.1875 Q35233.4963,730.1875 35232.1681,728.5469 Q35230.8556,726.8906 35230.8556,723.7656 Q35230.8556,720.6406 35232.1681,718.9844 Q35233.4963,717.3281 35235.9963,717.3281 Q35236.6994,717.3281 35237.34,717.4844 Q35237.9963,717.6406 35238.5588,717.9375 L35238.5588,720.6563 Q35237.9338,720.0781 35237.34,719.8125 Q35236.7463,719.5313 35236.1213,719.5313 Q35234.7775,719.5313 35234.09,720.6094 Q35233.4025,721.6719 35233.4025,723.7656 Q35233.4025,725.8594 35234.09,726.9375 Q35234.7775,728 35236.1213,728 Q35236.7463,728 35237.34,727.7344 Q35237.9338,727.4531 35238.5588,726.875 L35238.5588,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="184" x="35249.59" y="728.1074">_ObjectSignalDisconnectData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35221.59" x2="35435.59" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" xlink:show="new" xlink:title="signal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35226.59" y="745.9531"/><ellipse cx="35231.59" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" target="_top" title="signal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149" xlink:show="new" xlink:title="signal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="35240.59" y="754.1636">signal : StringName</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" xlink:show="new" xlink:title="target" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35226.59" y="758.7578"/><ellipse cx="35231.59" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" target="_top" title="target" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150" xlink:show="new" xlink:title="target" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="35240.59" y="766.9683">target : Object *</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="35221.59" x2="35435.59" y1="773.5625" y2="773.5625"/><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="35226.59" y="779.5625"/><ellipse cx="35231.59" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" target="_top" title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:show="new" xlink:title="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="35240.59" y="787.7729">method : StringName</text></a><!--MD5=[572807c339726b4650e58d5aced39533]
class C_0000066148521405667716--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38" target="_top" title="ProjectSettings" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38" xlink:show="new" xlink:title="ProjectSettings" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="598.6016" id="C_0000066148521405667716" style="stroke: #A80036; stroke-width: 1.5;" width="1244" x="33860.59" y="8533.4531"/><ellipse cx="34430.34" cy="8549.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M34433.3088,8555.0938 Q34432.7306,8555.3906 34432.09,8555.5313 Q34431.4494,8555.6875 34430.7463,8555.6875 Q34428.2463,8555.6875 34426.9181,8554.0469 Q34425.6056,8552.3906 34425.6056,8549.2656 Q34425.6056,8546.1406 34426.9181,8544.4844 Q34428.2463,8542.8281 34430.7463,8542.8281 Q34431.4494,8542.8281 34432.09,8542.9844 Q34432.7463,8543.1406 34433.3088,8543.4375 L34433.3088,8546.1563 Q34432.6838,8545.5781 34432.09,8545.3125 Q34431.4963,8545.0313 34430.8713,8545.0313 Q34429.5275,8545.0313 34428.84,8546.1094 Q34428.1525,8547.1719 34428.1525,8549.2656 Q34428.1525,8551.3594 34428.84,8552.4375 Q34429.5275,8553.5 34430.8713,8553.5 Q34431.4963,8553.5 34432.09,8553.2344 Q34432.6838,8552.9531 34433.3088,8552.375 L34433.3088,8555.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="34450.84" y="8553.6074">ProjectSettings</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33861.59" x2="35103.59" y1="8565.4531" y2="8565.4531"/><ellipse cx="33871.59" cy="8576.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="33880.59" y="8579.6636">NO_BUILTIN_ORDER_BASE : enum</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" target="_top" title="CONFIG_VERSION" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" xlink:show="new" xlink:title="CONFIG_VERSION" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33866.59" y="8584.2578"/><ellipse cx="33871.59" cy="8589.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" target="_top" title="CONFIG_VERSION" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117" xlink:show="new" xlink:title="CONFIG_VERSION" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="33880.59" y="8592.4683">CONFIG_VERSION : const int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33861.59" x2="35103.59" y1="8599.0625" y2="8599.0625"/><ellipse cx="33871.59" cy="8610.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="33880.59" y="8613.2729">get_class() const : String</text><ellipse cx="33871.59" cy="8622.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="33880.59" y="8626.0776">_get_class_namev() const : const StringName *</text><ellipse cx="33871.59" cy="8635.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="33880.59" y="8638.8823">get_class_ptr_static() : void *</text><ellipse cx="33871.59" cy="8648.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="33880.59" y="8651.687">get_class_static() : String</text><ellipse cx="33871.59" cy="8661.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="33880.59" y="8664.4917">get_parent_class_static() : String</text><ellipse cx="33871.59" cy="8674.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="33880.59" y="8677.2964">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="33871.59" cy="8686.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="33880.59" y="8690.1011">get_category_static() : String</text><ellipse cx="33871.59" cy="8699.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="33880.59" y="8702.9058">inherits_static() : String</text><ellipse cx="33871.59" cy="8712.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="33880.59" y="8715.7104">is_class(const String &amp; p_class) const : bool</text><ellipse cx="33871.59" cy="8725.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="33880.59" y="8728.5151">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="33871.59" cy="8738.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="33880.59" y="8741.3198">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="33871.59" cy="8750.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="33880.59" y="8754.1245">initialize_class() : void</text><ellipse cx="33871.59" cy="8763.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="33880.59" y="8766.9292">set_setting(const String &amp; p_setting, const Variant &amp; p_value) : void</text><ellipse cx="33871.59" cy="8776.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="33880.59" y="8779.7339">get_setting(const String &amp; p_setting) const : Variant</text><ellipse cx="33871.59" cy="8789.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="33880.59" y="8792.5386">has_setting(String p_var) const : bool</text><ellipse cx="33871.59" cy="8802.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="33880.59" y="8805.3433">localize_path(const String &amp; p_path) const : String</text><ellipse cx="33871.59" cy="8814.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="33880.59" y="8818.1479">globalize_path(const String &amp; p_path) const : String</text><ellipse cx="33871.59" cy="8827.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="33880.59" y="8830.9526">set_initial_value(const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="33871.59" cy="8840.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="33880.59" y="8843.7573">set_restart_if_changed(const String &amp; p_name, bool p_restart) : void</text><ellipse cx="33871.59" cy="8853.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="33880.59" y="8856.562">property_can_revert(const String &amp; p_name) : bool</text><ellipse cx="33871.59" cy="8866.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="33880.59" y="8869.3667">property_get_revert(const String &amp; p_name) : Variant</text><ellipse cx="33871.59" cy="8878.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="33880.59" y="8882.1714">get_resource_path() const : String</text><ellipse cx="33871.59" cy="8891.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="192" x="33880.59" y="8894.9761">get_singleton() : ProjectSettings *</text><ellipse cx="33871.59" cy="8904.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="33880.59" y="8907.7808">clear(const String &amp; p_name) : void</text><ellipse cx="33871.59" cy="8917.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="33880.59" y="8920.5854">get_order(const String &amp; p_name) const : int</text><ellipse cx="33871.59" cy="8930.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="33880.59" y="8933.3901">set_order(const String &amp; p_name, int p_order) : void</text><ellipse cx="33871.59" cy="8942.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="33880.59" y="8946.1948">set_builtin_order(const String &amp; p_name) : void</text><ellipse cx="33871.59" cy="8955.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="33880.59" y="8958.9995">setup(const String &amp; p_path, const String &amp; p_main_pack, bool p_upwards = false) : Error</text><ellipse cx="33871.59" cy="8968.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1218" x="33880.59" y="8971.8042">save_custom(const String &amp; p_path = "", const ProjectSettings::CustomMap &amp; p_custom = CustomMap(), const Vector&lt;String&gt; &amp; p_custom_features = Vector&lt;String&gt;(), bool p_merge_with_current = true) : Error</text><ellipse cx="33871.59" cy="8981.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="33880.59" y="8984.6089">save() : Error</text><ellipse cx="33871.59" cy="8994.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="33880.59" y="8997.4136">set_custom_property_info(const String &amp; p_prop, const PropertyInfo &amp; p_info) : void</text><ellipse cx="33871.59" cy="9007.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="33880.59" y="9010.2183">get_custom_property_info() const : const Map&lt;StringName,PropertyInfo&gt; &amp;</text><ellipse cx="33871.59" cy="9019.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="33880.59" y="9023.0229">get_last_saved_time() : uint64_t</text><ellipse cx="33871.59" cy="9032.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="33880.59" y="9035.8276">get_optimizer_presets() const : Vector&lt;String&gt;</text><ellipse cx="33871.59" cy="9045.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="33880.59" y="9048.6323">get_input_presets() const : List&lt;String&gt;</text><ellipse cx="33871.59" cy="9058.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="33880.59" y="9061.437">set_disable_feature_overrides(bool p_disable) : void</text><ellipse cx="33871.59" cy="9071.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="33880.59" y="9074.2417">is_using_datapack() const : bool</text><ellipse cx="33871.59" cy="9083.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="33880.59" y="9087.0464">set_registering_order(bool p_enable) : void</text><ellipse cx="33871.59" cy="9096.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="33880.59" y="9099.8511">has_custom_feature(const String &amp; p_feature) const : bool</text><ellipse cx="33871.59" cy="9109.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="33880.59" y="9112.6558">ProjectSettings() : void</text><ellipse cx="33871.59" cy="9122.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="33880.59" y="9125.4604">~ProjectSettings() : void</text><!--MD5=[3066cc904e29be9ea26e95834396af6e]
class C_0001191393512042218074--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39" target="_top" title="IP" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39" xlink:show="new" xlink:title="IP" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="380.9219" id="C_0001191393512042218074" style="stroke: #A80036; stroke-width: 1.5;" width="625" x="24744.09" y="8642.4531"/><ellipse cx="25046.84" cy="8658.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25046.9494,8653.7969 L25045.7931,8658.875 L25048.1213,8658.875 L25046.9494,8653.7969 Z M25045.465,8651.5625 L25048.4494,8651.5625 L25051.8088,8663.9531 L25049.3556,8663.9531 L25048.59,8660.8906 L25045.3088,8660.8906 L25044.5588,8663.9531 L25042.1213,8663.9531 L25045.465,8651.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="11" x="25067.34" y="8662.6074">IP</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24745.09" x2="25368.09" y1="8674.4531" y2="8674.4531"/><ellipse cx="24755.09" cy="8685.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="24764.09" y="8688.6636">RESOLVER_MAX_QUERIES : enum</text><ellipse cx="24755.09" cy="8698.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="24764.09" y="8701.4683">RESOLVER_INVALID_ID : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24745.09" x2="25368.09" y1="8708.0625" y2="8708.0625"/><ellipse cx="24755.09" cy="8719.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="24764.09" y="8722.2729">get_class() const : String</text><ellipse cx="24755.09" cy="8731.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="24764.09" y="8735.0776">_get_class_namev() const : const StringName *</text><ellipse cx="24755.09" cy="8744.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="24764.09" y="8747.8823">get_class_ptr_static() : void *</text><ellipse cx="24755.09" cy="8757.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="24764.09" y="8760.687">get_class_static() : String</text><ellipse cx="24755.09" cy="8770.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="24764.09" y="8773.4917">get_parent_class_static() : String</text><ellipse cx="24755.09" cy="8783.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="24764.09" y="8786.2964">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="24755.09" cy="8795.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="24764.09" y="8799.1011">get_category_static() : String</text><ellipse cx="24755.09" cy="8808.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="24764.09" y="8811.9058">inherits_static() : String</text><ellipse cx="24755.09" cy="8821.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="24764.09" y="8824.7104">is_class(const String &amp; p_class) const : bool</text><ellipse cx="24755.09" cy="8834.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="24764.09" y="8837.5151">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="24755.09" cy="8847.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="24764.09" y="8850.3198">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="24755.09" cy="8859.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="24764.09" y="8863.1245">initialize_class() : void</text><ellipse cx="24755.09" cy="8872.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="24764.09" y="8875.9292">resolve_hostname(const String &amp; p_hostname, IP::Type p_type = TYPE_ANY) : IP_Address</text><ellipse cx="24755.09" cy="8885.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="599" x="24764.09" y="8888.7339">resolve_hostname_queue_item(const String &amp; p_hostname, IP::Type p_type = TYPE_ANY) : IP::ResolverID</text><ellipse cx="24755.09" cy="8898.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="24764.09" y="8901.5386">get_resolve_item_status(IP::ResolverID p_id) const : IP::ResolverStatus</text><ellipse cx="24755.09" cy="8911.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="24764.09" y="8914.3433">get_resolve_item_address(IP::ResolverID p_id) const : IP_Address</text><ellipse cx="24755.09" cy="8923.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="24764.09" y="8927.1479">get_local_addresses(List&lt;IP_Address&gt; * r_addresses) const : void</text><ellipse cx="24755.09" cy="8936.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="24764.09" y="8939.9526">get_local_interfaces(Map&lt;String,IP::Interface_Info&gt; * r_interfaces) const = 0 : void</text><ellipse cx="24755.09" cy="8949.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="24764.09" y="8952.7573">erase_resolve_item(IP::ResolverID p_id) : void</text><ellipse cx="24755.09" cy="8962.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="24764.09" y="8965.562">clear_cache(const String &amp; p_hostname = "") : void</text><ellipse cx="24755.09" cy="8975.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="116" x="24764.09" y="8978.3667">get_singleton() : IP *</text><ellipse cx="24755.09" cy="8987.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="76" x="24764.09" y="8991.1714">create() : IP *</text><ellipse cx="24755.09" cy="9000.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="24764.09" y="9003.9761">IP() : void</text><ellipse cx="24755.09" cy="9013.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="24764.09" y="9016.7808">~IP() : void</text></a><!--MD5=[6b4bbf9b757992b19b982406f8807936]
class C_0000425668537377496256--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/expression.h#L36" target="_top" title="Expression" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/expression.h#L36" xlink:show="new" xlink:title="Expression" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="329.7031" id="C_0000425668537377496256" style="stroke: #A80036; stroke-width: 1.5;" width="843" x="29737.09" y="8667.9531"/><ellipse cx="30120.34" cy="8683.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30123.3088,8689.5938 Q30122.7306,8689.8906 30122.09,8690.0313 Q30121.4494,8690.1875 30120.7463,8690.1875 Q30118.2463,8690.1875 30116.9181,8688.5469 Q30115.6056,8686.8906 30115.6056,8683.7656 Q30115.6056,8680.6406 30116.9181,8678.9844 Q30118.2463,8677.3281 30120.7463,8677.3281 Q30121.4494,8677.3281 30122.09,8677.4844 Q30122.7463,8677.6406 30123.3088,8677.9375 L30123.3088,8680.6563 Q30122.6838,8680.0781 30122.09,8679.8125 Q30121.4963,8679.5313 30120.8713,8679.5313 Q30119.5275,8679.5313 30118.84,8680.6094 Q30118.1525,8681.6719 30118.1525,8683.7656 Q30118.1525,8685.8594 30118.84,8686.9375 Q30119.5275,8688 30120.8713,8688 Q30121.4963,8688 30122.09,8687.7344 Q30122.6838,8687.4531 30123.3088,8686.875 L30123.3088,8689.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="30140.84" y="8688.1074">Expression</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29738.09" x2="30579.09" y1="8699.9531" y2="8699.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="29738.09" x2="30579.09" y1="8707.9531" y2="8707.9531"/><ellipse cx="29748.09" cy="8718.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="29757.09" y="8722.1636">get_class() const : String</text><ellipse cx="29748.09" cy="8731.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="29757.09" y="8734.9683">_get_class_namev() const : const StringName *</text><ellipse cx="29748.09" cy="8744.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="29757.09" y="8747.7729">get_class_ptr_static() : void *</text><ellipse cx="29748.09" cy="8757.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="29757.09" y="8760.5776">get_class_static() : String</text><ellipse cx="29748.09" cy="8770.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="29757.09" y="8773.3823">get_parent_class_static() : String</text><ellipse cx="29748.09" cy="8782.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="29757.09" y="8786.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="29748.09" cy="8795.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="29757.09" y="8798.9917">get_category_static() : String</text><ellipse cx="29748.09" cy="8808.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="29757.09" y="8811.7964">inherits_static() : String</text><ellipse cx="29748.09" cy="8821.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="29757.09" y="8824.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="29748.09" cy="8834.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="29757.09" y="8837.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="29748.09" cy="8847" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="29757.09" y="8850.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="29748.09" cy="8859.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="29757.09" y="8863.0151">initialize_class() : void</text><ellipse cx="29748.09" cy="8872.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="353" x="29757.09" y="8875.8198">get_func_argument_count(Expression::BuiltinFunc p_func) : int</text><ellipse cx="29748.09" cy="8885.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="29757.09" y="8888.6245">get_func_name(Expression::BuiltinFunc p_func) : String</text><ellipse cx="29748.09" cy="8898.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="817" x="29757.09" y="8901.4292">exec_func(Expression::BuiltinFunc p_func, const Variant ** p_inputs, Variant * r_return, Variant::CallError &amp; r_error, String &amp; r_error_str) : void</text><ellipse cx="29748.09" cy="8911.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="357" x="29757.09" y="8914.2339">find_function(const String &amp; p_string) : Expression::BuiltinFunc</text><ellipse cx="29748.09" cy="8923.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="593" x="29757.09" y="8927.0386">parse(const String &amp; p_expression, const Vector&lt;String&gt; &amp; p_input_names = Vector&lt;String&gt;()) : Error</text><ellipse cx="29748.09" cy="8936.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="488" x="29757.09" y="8939.8433">execute(Array p_inputs, Object * p_base = __null, bool p_show_error = true) : Variant</text><ellipse cx="29748.09" cy="8949.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="29757.09" y="8952.6479">has_execute_failed() const : bool</text><ellipse cx="29748.09" cy="8962.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="29757.09" y="8965.4526">get_error_text() const : String</text><ellipse cx="29748.09" cy="8975.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="29757.09" y="8978.2573">Expression() : void</text><ellipse cx="29748.09" cy="8987.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="29757.09" y="8991.062">~Expression() : void</text></a><!--MD5=[c256f191a1f4c63b2807fd5478edf736]
class C_0001197720528033242618--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45" target="_top" title="_ResourceLoader" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45" xlink:show="new" xlink:title="_ResourceLoader" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="329.7031" id="C_0001197720528033242618" style="stroke: #A80036; stroke-width: 1.5;" width="633" x="26301.09" y="8667.9531"/><ellipse cx="26559.34" cy="8683.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26562.3088,8689.5938 Q26561.7306,8689.8906 26561.09,8690.0313 Q26560.4494,8690.1875 26559.7463,8690.1875 Q26557.2463,8690.1875 26555.9181,8688.5469 Q26554.6056,8686.8906 26554.6056,8683.7656 Q26554.6056,8680.6406 26555.9181,8678.9844 Q26557.2463,8677.3281 26559.7463,8677.3281 Q26560.4494,8677.3281 26561.09,8677.4844 Q26561.7463,8677.6406 26562.3088,8677.9375 L26562.3088,8680.6563 Q26561.6838,8680.0781 26561.09,8679.8125 Q26560.4963,8679.5313 26559.8713,8679.5313 Q26558.5275,8679.5313 26557.84,8680.6094 Q26557.1525,8681.6719 26557.1525,8683.7656 Q26557.1525,8685.8594 26557.84,8686.9375 Q26558.5275,8688 26559.8713,8688 Q26560.4963,8688 26561.09,8687.7344 Q26561.6838,8687.4531 26562.3088,8686.875 L26562.3088,8689.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="26579.84" y="8688.1074">_ResourceLoader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26302.09" x2="26933.09" y1="8699.9531" y2="8699.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26302.09" x2="26933.09" y1="8707.9531" y2="8707.9531"/><ellipse cx="26312.09" cy="8718.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26321.09" y="8722.1636">get_class() const : String</text><ellipse cx="26312.09" cy="8731.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26321.09" y="8734.9683">_get_class_namev() const : const StringName *</text><ellipse cx="26312.09" cy="8744.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26321.09" y="8747.7729">get_class_ptr_static() : void *</text><ellipse cx="26312.09" cy="8757.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26321.09" y="8760.5776">get_class_static() : String</text><ellipse cx="26312.09" cy="8770.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26321.09" y="8773.3823">get_parent_class_static() : String</text><ellipse cx="26312.09" cy="8782.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26321.09" y="8786.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26312.09" cy="8795.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26321.09" y="8798.9917">get_category_static() : String</text><ellipse cx="26312.09" cy="8808.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26321.09" y="8811.7964">inherits_static() : String</text><ellipse cx="26312.09" cy="8821.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26321.09" y="8824.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26312.09" cy="8834.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26321.09" y="8837.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26312.09" cy="8847" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26321.09" y="8850.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26312.09" cy="8859.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26321.09" y="8863.0151">initialize_class() : void</text><ellipse cx="26312.09" cy="8872.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="26321.09" y="8875.8198">get_singleton() : _ResourceLoader *</text><ellipse cx="26312.09" cy="8885.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="607" x="26321.09" y="8888.6245">load_interactive(const String &amp; p_path, const String &amp; p_type_hint = "") : Ref&lt;ResourceInteractiveLoader&gt;</text><ellipse cx="26312.09" cy="8898.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="26321.09" y="8901.4292">load(const String &amp; p_path, const String &amp; p_type_hint = "", bool p_no_cache = false) : RES</text><ellipse cx="26312.09" cy="8911.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="26321.09" y="8914.2339">get_recognized_extensions_for_type(const String &amp; p_type) : PoolVector&lt;String&gt;</text><ellipse cx="26312.09" cy="8923.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26321.09" y="8927.0386">set_abort_on_missing_resources(bool p_abort) : void</text><ellipse cx="26312.09" cy="8936.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="26321.09" y="8939.8433">get_dependencies(const String &amp; p_path) : PoolStringArray</text><ellipse cx="26312.09" cy="8949.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="26321.09" y="8952.6479">has(const String &amp; p_path) : bool</text><ellipse cx="26312.09" cy="8962.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="26321.09" y="8965.4526">has_cached(const String &amp; p_path) : bool</text><ellipse cx="26312.09" cy="8975.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="26321.09" y="8978.2573">exists(const String &amp; p_path, const String &amp; p_type_hint = "") : bool</text><ellipse cx="26312.09" cy="8987.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26321.09" y="8991.062">_ResourceLoader() : void</text></a><!--MD5=[8320b79068f24653412391a69e41cea5]
class C_0001130773750498288283--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68" target="_top" title="_ResourceSaver" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68" xlink:show="new" xlink:title="_ResourceSaver" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="252.875" id="C_0001130773750498288283" style="stroke: #A80036; stroke-width: 1.5;" width="590" x="25504.59" y="8706.4531"/><ellipse cx="25745.34" cy="8722.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M25748.3088,8728.0938 Q25747.7306,8728.3906 25747.09,8728.5313 Q25746.4494,8728.6875 25745.7463,8728.6875 Q25743.2463,8728.6875 25741.9181,8727.0469 Q25740.6056,8725.3906 25740.6056,8722.2656 Q25740.6056,8719.1406 25741.9181,8717.4844 Q25743.2463,8715.8281 25745.7463,8715.8281 Q25746.4494,8715.8281 25747.09,8715.9844 Q25747.7463,8716.1406 25748.3088,8716.4375 L25748.3088,8719.1563 Q25747.6838,8718.5781 25747.09,8718.3125 Q25746.4963,8718.0313 25745.8713,8718.0313 Q25744.5275,8718.0313 25743.84,8719.1094 Q25743.1525,8720.1719 25743.1525,8722.2656 Q25743.1525,8724.3594 25743.84,8725.4375 Q25744.5275,8726.5 25745.8713,8726.5 Q25746.4963,8726.5 25747.09,8726.2344 Q25747.6838,8725.9531 25748.3088,8725.375 L25748.3088,8728.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="25765.84" y="8726.6074">_ResourceSaver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="25505.59" x2="26093.59" y1="8738.4531" y2="8738.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="25505.59" x2="26093.59" y1="8746.4531" y2="8746.4531"/><ellipse cx="25515.59" cy="8757.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="25524.59" y="8760.6636">get_class() const : String</text><ellipse cx="25515.59" cy="8770.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="25524.59" y="8773.4683">_get_class_namev() const : const StringName *</text><ellipse cx="25515.59" cy="8783.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="25524.59" y="8786.2729">get_class_ptr_static() : void *</text><ellipse cx="25515.59" cy="8795.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="25524.59" y="8799.0776">get_class_static() : String</text><ellipse cx="25515.59" cy="8808.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="25524.59" y="8811.8823">get_parent_class_static() : String</text><ellipse cx="25515.59" cy="8821.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="25524.59" y="8824.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="25515.59" cy="8834.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="25524.59" y="8837.4917">get_category_static() : String</text><ellipse cx="25515.59" cy="8847.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="25524.59" y="8850.2964">inherits_static() : String</text><ellipse cx="25515.59" cy="8859.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="25524.59" y="8863.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="25515.59" cy="8872.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="25524.59" y="8875.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="25515.59" cy="8885.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="25524.59" y="8888.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="25515.59" cy="8898.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="25524.59" y="8901.5151">initialize_class() : void</text><ellipse cx="25515.59" cy="8911.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="198" x="25524.59" y="8914.3198">get_singleton() : _ResourceSaver *</text><ellipse cx="25515.59" cy="8923.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="564" x="25524.59" y="8927.1245">save(const String &amp; p_path, const RES &amp; p_resource, _ResourceSaver::SaverFlags p_flags) : Error</text><ellipse cx="25515.59" cy="8936.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="25524.59" y="8939.9292">get_recognized_extensions(const RES &amp; p_resource) : PoolVector&lt;String&gt;</text><ellipse cx="25515.59" cy="8949.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="25524.59" y="8952.7339">_ResourceSaver() : void</text></a><!--MD5=[4791f32a7532edb6976f97ebd5eb02c0]
class C_0000790752023609648644--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99" target="_top" title="_OS" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99" xlink:show="new" xlink:title="_OS" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="2263.2109" id="C_0000790752023609648644" style="stroke: #A80036; stroke-width: 1.5;" width="908" x="15354.59" y="7701.4531"/><ellipse cx="15792.84" cy="7717.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M15795.8088,7723.0938 Q15795.2306,7723.3906 15794.59,7723.5313 Q15793.9494,7723.6875 15793.2463,7723.6875 Q15790.7463,7723.6875 15789.4181,7722.0469 Q15788.1056,7720.3906 15788.1056,7717.2656 Q15788.1056,7714.1406 15789.4181,7712.4844 Q15790.7463,7710.8281 15793.2463,7710.8281 Q15793.9494,7710.8281 15794.59,7710.9844 Q15795.2463,7711.1406 15795.8088,7711.4375 L15795.8088,7714.1563 Q15795.1838,7713.5781 15794.59,7713.3125 Q15793.9963,7713.0313 15793.3713,7713.0313 Q15792.0275,7713.0313 15791.34,7714.1094 Q15790.6525,7715.1719 15790.6525,7717.2656 Q15790.6525,7719.3594 15791.34,7720.4375 Q15792.0275,7721.5 15793.3713,7721.5 Q15793.9963,7721.5 15794.59,7721.2344 Q15795.1838,7720.9531 15795.8088,7720.375 L15795.8088,7723.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="15813.34" y="7721.6074">_OS</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15355.59" x2="16261.59" y1="7733.4531" y2="7733.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="15355.59" x2="16261.59" y1="7741.4531" y2="7741.4531"/><ellipse cx="15365.59" cy="7752.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="15374.59" y="7755.6636">get_class() const : String</text><ellipse cx="15365.59" cy="7765.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="15374.59" y="7768.4683">_get_class_namev() const : const StringName *</text><ellipse cx="15365.59" cy="7778.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="15374.59" y="7781.2729">get_class_ptr_static() : void *</text><ellipse cx="15365.59" cy="7790.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="15374.59" y="7794.0776">get_class_static() : String</text><ellipse cx="15365.59" cy="7803.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="15374.59" y="7806.8823">get_parent_class_static() : String</text><ellipse cx="15365.59" cy="7816.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="15374.59" y="7819.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="15365.59" cy="7829.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="15374.59" y="7832.4917">get_category_static() : String</text><ellipse cx="15365.59" cy="7842.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="15374.59" y="7845.2964">inherits_static() : String</text><ellipse cx="15365.59" cy="7854.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="15374.59" y="7858.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="15365.59" cy="7867.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="15374.59" y="7870.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="15365.59" cy="7880.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="15374.59" y="7883.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="15365.59" cy="7893.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="15374.59" y="7896.5151">initialize_class() : void</text><ellipse cx="15365.59" cy="7906.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="731" x="15374.59" y="7909.3198">global_menu_add_item(const String &amp; p_menu, const String &amp; p_label, const Variant &amp; p_signal, const Variant &amp; p_meta) : void</text><ellipse cx="15365.59" cy="7918.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="15374.59" y="7922.1245">global_menu_add_separator(const String &amp; p_menu) : void</text><ellipse cx="15365.59" cy="7931.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="15374.59" y="7934.9292">global_menu_remove_item(const String &amp; p_menu, int p_idx) : void</text><ellipse cx="15365.59" cy="7944.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="15374.59" y="7947.7339">global_menu_clear(const String &amp; p_menu) : void</text><ellipse cx="15365.59" cy="7957.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="15374.59" y="7960.5386">get_mouse_position() const : Point2</text><ellipse cx="15365.59" cy="7970.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="15374.59" y="7973.3433">set_window_title(const String &amp; p_title) : void</text><ellipse cx="15365.59" cy="7982.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="431" x="15374.59" y="7986.1479">set_window_mouse_passthrough(const PoolVector2Array &amp; p_region) : void</text><ellipse cx="15365.59" cy="7995.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="15374.59" y="7998.9526">get_mouse_button_state() const : int</text><ellipse cx="15365.59" cy="8008.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="15374.59" y="8011.7573">set_clipboard(const String &amp; p_text) : void</text><ellipse cx="15365.59" cy="8021.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="15374.59" y="8024.562">get_clipboard() const : String</text><ellipse cx="15365.59" cy="8034.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="15374.59" y="8037.3667">set_video_mode(const Size2 &amp; p_size, bool p_fullscreen, bool p_resizeable, int p_screen = 0) : void</text><ellipse cx="15365.59" cy="8046.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="15374.59" y="8050.1714">get_video_mode(int p_screen = 0) const : Size2</text><ellipse cx="15365.59" cy="8059.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="15374.59" y="8062.9761">is_video_mode_fullscreen(int p_screen = 0) const : bool</text><ellipse cx="15365.59" cy="8072.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="15374.59" y="8075.7808">is_video_mode_resizable(int p_screen = 0) const : bool</text><ellipse cx="15365.59" cy="8085.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="15374.59" y="8088.5854">get_fullscreen_mode_list(int p_screen = 0) const : Array</text><ellipse cx="15365.59" cy="8098.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="15374.59" y="8101.3901">get_video_driver_count() const : int</text><ellipse cx="15365.59" cy="8110.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="366" x="15374.59" y="8114.1948">get_video_driver_name(_OS::VideoDriver p_driver) const : String</text><ellipse cx="15365.59" cy="8123.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="15374.59" y="8126.9995">get_current_video_driver() const : _OS::VideoDriver</text><ellipse cx="15365.59" cy="8136.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="15374.59" y="8139.8042">get_audio_driver_count() const : int</text><ellipse cx="15365.59" cy="8149.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="15374.59" y="8152.6089">get_audio_driver_name(int p_driver) const : String</text><ellipse cx="15365.59" cy="8162.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="15374.59" y="8165.4136">get_connected_midi_inputs() : PoolStringArray</text><ellipse cx="15365.59" cy="8175.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="15374.59" y="8178.2183">open_midi_inputs() : void</text><ellipse cx="15365.59" cy="8187.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="15374.59" y="8191.0229">close_midi_inputs() : void</text><ellipse cx="15365.59" cy="8200.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="15374.59" y="8203.8276">get_screen_count() const : int</text><ellipse cx="15365.59" cy="8213.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="15374.59" y="8216.6323">get_current_screen() const : int</text><ellipse cx="15365.59" cy="8226.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="15374.59" y="8229.437">set_current_screen(int p_screen) : void</text><ellipse cx="15365.59" cy="8239.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="15374.59" y="8242.2417">get_screen_position(int p_screen = -1) const : Point2</text><ellipse cx="15365.59" cy="8251.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="15374.59" y="8255.0464">get_screen_size(int p_screen = -1) const : Size2</text><ellipse cx="15365.59" cy="8264.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="15374.59" y="8267.8511">get_screen_dpi(int p_screen = -1) const : int</text><ellipse cx="15365.59" cy="8277.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="15374.59" y="8280.6558">get_screen_scale(int p_screen = -1) const : float</text><ellipse cx="15365.59" cy="8290.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="15374.59" y="8293.4604">get_screen_max_scale() const : float</text><ellipse cx="15365.59" cy="8303.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="15374.59" y="8306.2651">get_window_position() const : Point2</text><ellipse cx="15365.59" cy="8315.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="15374.59" y="8319.0698">set_window_position(const Point2 &amp; p_position) : void</text><ellipse cx="15365.59" cy="8328.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="15374.59" y="8331.8745">get_max_window_size() const : Size2</text><ellipse cx="15365.59" cy="8341.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="15374.59" y="8344.6792">get_min_window_size() const : Size2</text><ellipse cx="15365.59" cy="8354.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="15374.59" y="8357.4839">get_window_size() const : Size2</text><ellipse cx="15365.59" cy="8367.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="15374.59" y="8370.2886">get_real_window_size() const : Size2</text><ellipse cx="15365.59" cy="8379.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="15374.59" y="8383.0933">get_window_safe_area() const : Rect2</text><ellipse cx="15365.59" cy="8392.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="15374.59" y="8395.8979">set_max_window_size(const Size2 &amp; p_size) : void</text><ellipse cx="15365.59" cy="8405.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="15374.59" y="8408.7026">set_min_window_size(const Size2 &amp; p_size) : void</text><ellipse cx="15365.59" cy="8418.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="15374.59" y="8421.5073">set_window_size(const Size2 &amp; p_size) : void</text><ellipse cx="15365.59" cy="8431.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="15374.59" y="8434.312">set_window_fullscreen(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8443.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="15374.59" y="8447.1167">is_window_fullscreen() const : bool</text><ellipse cx="15365.59" cy="8456.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="15374.59" y="8459.9214">set_window_resizable(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8469.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="15374.59" y="8472.7261">is_window_resizable() const : bool</text><ellipse cx="15365.59" cy="8482.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="15374.59" y="8485.5308">set_window_minimized(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8495.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="15374.59" y="8498.3354">is_window_minimized() const : bool</text><ellipse cx="15365.59" cy="8507.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="15374.59" y="8511.1401">set_window_maximized(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8520.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="15374.59" y="8523.9448">is_window_maximized() const : bool</text><ellipse cx="15365.59" cy="8533.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="15374.59" y="8536.7495">set_window_always_on_top(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8546.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="15374.59" y="8549.5542">is_window_always_on_top() const : bool</text><ellipse cx="15365.59" cy="8559.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="15374.59" y="8562.3589">is_window_focused() const : bool</text><ellipse cx="15365.59" cy="8571.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="15374.59" y="8575.1636">request_attention() : void</text><ellipse cx="15365.59" cy="8584.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="15374.59" y="8587.9683">center_window() : void</text><ellipse cx="15365.59" cy="8597.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="15374.59" y="8600.7729">move_window_to_foreground() : void</text><ellipse cx="15365.59" cy="8610.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="15374.59" y="8613.5776">get_native_handle(_OS::HandleType p_handle_type) : int64_t</text><ellipse cx="15365.59" cy="8623.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="15374.59" y="8626.3823">set_borderless_window(bool p_borderless) : void</text><ellipse cx="15365.59" cy="8635.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="15374.59" y="8639.187">get_borderless_window() const : bool</text><ellipse cx="15365.59" cy="8648.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="15374.59" y="8651.9917">get_window_per_pixel_transparency_enabled() const : bool</text><ellipse cx="15365.59" cy="8661.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="15374.59" y="8664.7964">set_window_per_pixel_transparency_enabled(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8674.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="15374.59" y="8677.6011">set_ime_active(const bool p_active) : void</text><ellipse cx="15365.59" cy="8687.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="15374.59" y="8690.4058">set_ime_position(const Point2 &amp; p_pos) : void</text><ellipse cx="15365.59" cy="8700" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="15374.59" y="8703.2104">get_ime_selection() const : Point2</text><ellipse cx="15365.59" cy="8712.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="15374.59" y="8716.0151">get_ime_text() const : String</text><ellipse cx="15365.59" cy="8725.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="15374.59" y="8728.8198">native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error</text><ellipse cx="15365.59" cy="8738.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="15374.59" y="8741.6245">native_video_is_playing() : bool</text><ellipse cx="15365.59" cy="8751.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="15374.59" y="8754.4292">native_video_pause() : void</text><ellipse cx="15365.59" cy="8764.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="15374.59" y="8767.2339">native_video_unpause() : void</text><ellipse cx="15365.59" cy="8776.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="15374.59" y="8780.0386">native_video_stop() : void</text><ellipse cx="15365.59" cy="8789.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="15374.59" y="8792.8433">set_low_processor_usage_mode(bool p_enabled) : void</text><ellipse cx="15365.59" cy="8802.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="15374.59" y="8805.6479">is_in_low_processor_usage_mode() const : bool</text><ellipse cx="15365.59" cy="8815.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="15374.59" y="8818.4526">set_low_processor_usage_mode_sleep_usec(int p_usec) : void</text><ellipse cx="15365.59" cy="8828.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="15374.59" y="8831.2573">get_low_processor_usage_mode_sleep_usec() const : int</text><ellipse cx="15365.59" cy="8840.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="15374.59" y="8844.062">get_executable_path() const : String</text><ellipse cx="15365.59" cy="8853.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="882" x="15374.59" y="8856.8667">execute(const String &amp; p_path, const Vector&lt;String&gt; &amp; p_arguments, bool p_blocking = true, Array p_output = = Array(), bool p_read_stderr = false) : int</text><ellipse cx="15365.59" cy="8866.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="15374.59" y="8869.6714">kill(int p_pid) : Error</text><ellipse cx="15365.59" cy="8879.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="15374.59" y="8882.4761">shell_open(String p_uri) : Error</text><ellipse cx="15365.59" cy="8892.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="15374.59" y="8895.2808">get_process_id() const : int</text><ellipse cx="15365.59" cy="8904.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="15374.59" y="8908.0854">has_environment(const String &amp; p_var) const : bool</text><ellipse cx="15365.59" cy="8917.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="15374.59" y="8920.8901">get_environment(const String &amp; p_var) const : String</text><ellipse cx="15365.59" cy="8930.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="15374.59" y="8933.6948">set_environment(const String &amp; p_var, const String &amp; p_value) const : bool</text><ellipse cx="15365.59" cy="8943.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="15374.59" y="8946.4995">get_name() const : String</text><ellipse cx="15365.59" cy="8956.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="15374.59" y="8959.3042">get_cmdline_args() : Vector&lt;String&gt;</text><ellipse cx="15365.59" cy="8968.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="15374.59" y="8972.1089">get_locale() const : String</text><ellipse cx="15365.59" cy="8981.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="15374.59" y="8984.9136">get_latin_keyboard_variant() const : String</text><ellipse cx="15365.59" cy="8994.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="15374.59" y="8997.7183">keyboard_get_layout_count() const : int</text><ellipse cx="15365.59" cy="9007.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="15374.59" y="9010.5229">keyboard_get_current_layout() const : int</text><ellipse cx="15365.59" cy="9020.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="15374.59" y="9023.3276">keyboard_set_current_layout(int p_index) : void</text><ellipse cx="15365.59" cy="9032.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="15374.59" y="9036.1323">keyboard_get_layout_language(int p_index) const : String</text><ellipse cx="15365.59" cy="9045.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="15374.59" y="9048.937">keyboard_get_layout_name(int p_index) const : String</text><ellipse cx="15365.59" cy="9058.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="15374.59" y="9061.7417">get_model_name() const : String</text><ellipse cx="15365.59" cy="9071.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="15374.59" y="9074.5464">dump_memory_to_file(const String &amp; p_file) : void</text><ellipse cx="15365.59" cy="9084.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="15374.59" y="9087.3511">dump_resources_to_file(const String &amp; p_file) : void</text><ellipse cx="15365.59" cy="9096.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="15374.59" y="9100.1558">has_virtual_keyboard() const : bool</text><ellipse cx="15365.59" cy="9109.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="512" x="15374.59" y="9112.9604">show_virtual_keyboard(const String &amp; p_existing_text = "", bool p_multiline = false) : void</text><ellipse cx="15365.59" cy="9122.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="15374.59" y="9125.7651">hide_virtual_keyboard() : void</text><ellipse cx="15365.59" cy="9135.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="15374.59" y="9138.5698">get_virtual_keyboard_height() : int</text><ellipse cx="15365.59" cy="9148.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="15374.59" y="9151.3745">print_resources_in_use(bool p_short = false) : void</text><ellipse cx="15365.59" cy="9160.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="15374.59" y="9164.1792">print_all_resources(const String &amp; p_to_file) : void</text><ellipse cx="15365.59" cy="9173.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="15374.59" y="9176.9839">print_all_textures_by_size() : void</text><ellipse cx="15365.59" cy="9186.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="15374.59" y="9189.7886">print_resources_by_type(const Vector&lt;String&gt; &amp; p_types) : void</text><ellipse cx="15365.59" cy="9199.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="15374.59" y="9202.5933">has_touchscreen_ui_hint() const : bool</text><ellipse cx="15365.59" cy="9212.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="15374.59" y="9215.3979">is_debug_build() const : bool</text><ellipse cx="15365.59" cy="9224.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="15374.59" y="9228.2026">get_unique_id() const : String</text><ellipse cx="15365.59" cy="9237.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="15374.59" y="9241.0073">get_scancode_string(uint32_t p_code) const : String</text><ellipse cx="15365.59" cy="9250.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="15374.59" y="9253.812">is_scancode_unicode(uint32_t p_unicode) const : bool</text><ellipse cx="15365.59" cy="9263.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="15374.59" y="9266.6167">find_scancode_from_string(const String &amp; p_code) const : int</text><ellipse cx="15365.59" cy="9276.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="15374.59" y="9279.4214">set_use_file_access_save_and_swap(bool p_enable) : void</text><ellipse cx="15365.59" cy="9289.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="15374.59" y="9292.2261">set_native_icon(const String &amp; p_filename) : void</text><ellipse cx="15365.59" cy="9301.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="15374.59" y="9305.0308">set_icon(const Ref&lt;Image&gt; &amp; p_icon) : void</text><ellipse cx="15365.59" cy="9314.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="15374.59" y="9317.8354">get_exit_code() const : int</text><ellipse cx="15365.59" cy="9327.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="15374.59" y="9330.6401">set_exit_code(int p_code) : void</text><ellipse cx="15365.59" cy="9340.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="15374.59" y="9343.4448">get_date(bool utc) const : Dictionary</text><ellipse cx="15365.59" cy="9353.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="15374.59" y="9356.2495">get_time(bool utc) const : Dictionary</text><ellipse cx="15365.59" cy="9365.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="15374.59" y="9369.0542">get_datetime(bool utc) const : Dictionary</text><ellipse cx="15365.59" cy="9378.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="396" x="15374.59" y="9381.8589">get_datetime_from_unix_time(int64_t unix_time_val) const : Dictionary</text><ellipse cx="15365.59" cy="9391.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="15374.59" y="9394.6636">get_unix_time_from_datetime(Dictionary datetime) const : int64_t</text><ellipse cx="15365.59" cy="9404.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="15374.59" y="9407.4683">get_time_zone_info() const : Dictionary</text><ellipse cx="15365.59" cy="9417.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="15374.59" y="9420.2729">get_unix_time() const : uint64_t</text><ellipse cx="15365.59" cy="9429.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="15374.59" y="9433.0776">get_system_time_secs() const : uint64_t</text><ellipse cx="15365.59" cy="9442.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="15374.59" y="9445.8823">get_system_time_msecs() const : uint64_t</text><ellipse cx="15365.59" cy="9455.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="15374.59" y="9458.687">get_static_memory_usage() const : uint64_t</text><ellipse cx="15365.59" cy="9468.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="15374.59" y="9471.4917">get_static_memory_peak_usage() const : uint64_t</text><ellipse cx="15365.59" cy="9481.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="15374.59" y="9484.2964">get_dynamic_memory_usage() const : uint64_t</text><ellipse cx="15365.59" cy="9493.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="15374.59" y="9497.1011">delay_usec(int p_usec) const : void</text><ellipse cx="15365.59" cy="9506.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="15374.59" y="9509.9058">delay_msec(int p_msec) const : void</text><ellipse cx="15365.59" cy="9519.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="15374.59" y="9522.7104">get_ticks_msec() const : uint32_t</text><ellipse cx="15365.59" cy="9532.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="15374.59" y="9535.5151">get_ticks_usec() const : uint64_t</text><ellipse cx="15365.59" cy="9545.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="15374.59" y="9548.3198">get_splash_tick_msec() const : uint32_t</text><ellipse cx="15365.59" cy="9557.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="15374.59" y="9561.1245">can_use_threads() const : bool</text><ellipse cx="15365.59" cy="9570.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="15374.59" y="9573.9292">can_draw() const : bool</text><ellipse cx="15365.59" cy="9583.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="15374.59" y="9586.7339">is_userfs_persistent() const : bool</text><ellipse cx="15365.59" cy="9596.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="15374.59" y="9599.5386">is_stdout_verbose() const : bool</text><ellipse cx="15365.59" cy="9609.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="15374.59" y="9612.3433">get_processor_count() const : int</text><ellipse cx="15365.59" cy="9621.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="477" x="15374.59" y="9625.1479">get_system_dir(_OS::SystemDir p_dir, bool p_shared_storage = true) const : String</text><ellipse cx="15365.59" cy="9634.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="15374.59" y="9637.9526">get_user_data_dir() const : String</text><ellipse cx="15365.59" cy="9647.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="15374.59" y="9650.7573">alert(const String &amp; p_alert, const String &amp; p_title = "ALERT!") : void</text><ellipse cx="15365.59" cy="9660.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="15374.59" y="9663.562">set_screen_orientation(_OS::ScreenOrientation p_orientation) : void</text><ellipse cx="15365.59" cy="9673.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="15374.59" y="9676.3667">get_screen_orientation() const : _OS::ScreenOrientation</text><ellipse cx="15365.59" cy="9685.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="15374.59" y="9689.1714">set_keep_screen_on(bool p_enabled) : void</text><ellipse cx="15365.59" cy="9698.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="15374.59" y="9701.9761">is_keep_screen_on() const : bool</text><ellipse cx="15365.59" cy="9711.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="15374.59" y="9714.7808">is_ok_left_and_cancel_right() const : bool</text><ellipse cx="15365.59" cy="9724.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="15374.59" y="9727.5854">set_thread_name(const String &amp; p_name) : Error</text><ellipse cx="15365.59" cy="9737.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="15374.59" y="9740.3901">get_thread_caller_id() const : Thread::ID</text><ellipse cx="15365.59" cy="9749.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="15374.59" y="9753.1948">set_use_vsync(bool p_enable) : void</text><ellipse cx="15365.59" cy="9762.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="15374.59" y="9765.9995">is_vsync_enabled() const : bool</text><ellipse cx="15365.59" cy="9775.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="15374.59" y="9778.8042">set_vsync_via_compositor(bool p_enable) : void</text><ellipse cx="15365.59" cy="9788.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="15374.59" y="9791.6089">is_vsync_via_compositor_enabled() const : bool</text><ellipse cx="15365.59" cy="9801.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="15374.59" y="9804.4136">get_power_state() : _OS::PowerState</text><ellipse cx="15365.59" cy="9814.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="15374.59" y="9817.2183">get_power_seconds_left() : int</text><ellipse cx="15365.59" cy="9826.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="15374.59" y="9830.0229">get_power_percent_left() : int</text><ellipse cx="15365.59" cy="9839.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="15374.59" y="9842.8276">has_feature(const String &amp; p_feature) const : bool</text><ellipse cx="15365.59" cy="9852.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="15374.59" y="9855.6323">request_permission(const String &amp; p_name) : bool</text><ellipse cx="15365.59" cy="9865.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="15374.59" y="9868.437">request_permissions() : bool</text><ellipse cx="15365.59" cy="9878.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="15374.59" y="9881.2417">get_granted_permissions() const : Vector&lt;String&gt;</text><ellipse cx="15365.59" cy="9890.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="15374.59" y="9894.0464">get_tablet_driver_count() const : int</text><ellipse cx="15365.59" cy="9903.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="15374.59" y="9906.8511">get_tablet_driver_name(int p_driver) const : String</text><ellipse cx="15365.59" cy="9916.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="15374.59" y="9919.6558">get_current_tablet_driver() const : String</text><ellipse cx="15365.59" cy="9929.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="15374.59" y="9932.4604">set_current_tablet_driver(const String &amp; p_driver) : void</text><ellipse cx="15365.59" cy="9942.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="15374.59" y="9945.2651">get_singleton() : _OS *</text><ellipse cx="15365.59" cy="9954.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="15374.59" y="9958.0698">_OS() : void</text></a><!--MD5=[9cd91452c1d17095030b673b85aa269f]
class C_0000897221634691489964--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401" target="_top" title="_Geometry" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401" xlink:show="new" xlink:title="_Geometry" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="675.4297" id="C_0000897221634691489964" style="stroke: #A80036; stroke-width: 1.5;" width="1086" x="13011.59" y="8495.4531"/><ellipse cx="13517.34" cy="8511.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M13520.3088,8517.0938 Q13519.7306,8517.3906 13519.09,8517.5313 Q13518.4494,8517.6875 13517.7463,8517.6875 Q13515.2463,8517.6875 13513.9181,8516.0469 Q13512.6056,8514.3906 13512.6056,8511.2656 Q13512.6056,8508.1406 13513.9181,8506.4844 Q13515.2463,8504.8281 13517.7463,8504.8281 Q13518.4494,8504.8281 13519.09,8504.9844 Q13519.7463,8505.1406 13520.3088,8505.4375 L13520.3088,8508.1563 Q13519.6838,8507.5781 13519.09,8507.3125 Q13518.4963,8507.0313 13517.8713,8507.0313 Q13516.5275,8507.0313 13515.84,8508.1094 Q13515.1525,8509.1719 13515.1525,8511.2656 Q13515.1525,8513.3594 13515.84,8514.4375 Q13516.5275,8515.5 13517.8713,8515.5 Q13518.4963,8515.5 13519.09,8515.2344 Q13519.6838,8514.9531 13520.3088,8514.375 L13520.3088,8517.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="13537.84" y="8515.6074">_Geometry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="13012.59" x2="14096.59" y1="8527.4531" y2="8527.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="13012.59" x2="14096.59" y1="8535.4531" y2="8535.4531"/><ellipse cx="13022.59" cy="8546.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="13031.59" y="8549.6636">get_class() const : String</text><ellipse cx="13022.59" cy="8559.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="13031.59" y="8562.4683">_get_class_namev() const : const StringName *</text><ellipse cx="13022.59" cy="8572.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="13031.59" y="8575.2729">get_class_ptr_static() : void *</text><ellipse cx="13022.59" cy="8584.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="13031.59" y="8588.0776">get_class_static() : String</text><ellipse cx="13022.59" cy="8597.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="13031.59" y="8600.8823">get_parent_class_static() : String</text><ellipse cx="13022.59" cy="8610.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="13031.59" y="8613.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="13022.59" cy="8623.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="13031.59" y="8626.4917">get_category_static() : String</text><ellipse cx="13022.59" cy="8636.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="13031.59" y="8639.2964">inherits_static() : String</text><ellipse cx="13022.59" cy="8648.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="13031.59" y="8652.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="13022.59" cy="8661.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="13031.59" y="8664.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="13022.59" cy="8674.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="13031.59" y="8677.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="13022.59" cy="8687.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="13031.59" y="8690.5151">initialize_class() : void</text><ellipse cx="13022.59" cy="8700.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="13031.59" y="8703.3198">get_singleton() : _Geometry *</text><ellipse cx="13022.59" cy="8712.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="13031.59" y="8716.1245">build_box_planes(const Vector3 &amp; p_extents) : PoolVector&lt;Plane&gt;</text><ellipse cx="13022.59" cy="8725.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="713" x="13031.59" y="8728.9292">build_cylinder_planes(float p_radius, float p_height, int p_sides, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector&lt;Plane&gt;</text><ellipse cx="13022.59" cy="8738.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="773" x="13031.59" y="8741.7339">build_capsule_planes(float p_radius, float p_height, int p_sides, int p_lats, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector&lt;Plane&gt;</text><ellipse cx="13022.59" cy="8751.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="837" x="13031.59" y="8754.5386">segment_intersects_segment_2d(const Vector2 &amp; p_from_a, const Vector2 &amp; p_to_a, const Vector2 &amp; p_from_b, const Vector2 &amp; p_to_b) : Variant</text><ellipse cx="13022.59" cy="8764.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="785" x="13031.59" y="8767.3433">line_intersects_line_2d(const Vector2 &amp; p_from_a, const Vector2 &amp; p_dir_a, const Vector2 &amp; p_from_b, const Vector2 &amp; p_dir_b) : Variant</text><ellipse cx="13022.59" cy="8776.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="848" x="13031.59" y="8780.1479">get_closest_points_between_segments_2d(const Vector2 &amp; p1, const Vector2 &amp; q1, const Vector2 &amp; p2, const Vector2 &amp; q2) : PoolVector&lt;Vector2&gt;</text><ellipse cx="13022.59" cy="8789.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="828" x="13031.59" y="8792.9526">get_closest_points_between_segments(const Vector3 &amp; p1, const Vector3 &amp; p2, const Vector3 &amp; q1, const Vector3 &amp; q2) : PoolVector&lt;Vector3&gt;</text><ellipse cx="13022.59" cy="8802.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="640" x="13031.59" y="8805.7573">get_closest_point_to_segment_2d(const Vector2 &amp; p_point, const Vector2 &amp; p_a, const Vector2 &amp; p_b) : Vector2</text><ellipse cx="13022.59" cy="8815.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="620" x="13031.59" y="8818.562">get_closest_point_to_segment(const Vector3 &amp; p_point, const Vector3 &amp; p_a, const Vector3 &amp; p_b) : Vector3</text><ellipse cx="13022.59" cy="8828.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="701" x="13031.59" y="8831.3667">get_closest_point_to_segment_uncapped_2d(const Vector2 &amp; p_point, const Vector2 &amp; p_a, const Vector2 &amp; p_b) : Vector2</text><ellipse cx="13022.59" cy="8840.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="681" x="13031.59" y="8844.1714">get_closest_point_to_segment_uncapped(const Vector3 &amp; p_point, const Vector3 &amp; p_a, const Vector3 &amp; p_b) : Vector3</text><ellipse cx="13022.59" cy="8853.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="848" x="13031.59" y="8856.9761">ray_intersects_triangle(const Vector3 &amp; p_from, const Vector3 &amp; p_dir, const Vector3 &amp; p_v0, const Vector3 &amp; p_v1, const Vector3 &amp; p_v2) : Variant</text><ellipse cx="13022.59" cy="8866.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="876" x="13031.59" y="8869.7808">segment_intersects_triangle(const Vector3 &amp; p_from, const Vector3 &amp; p_to, const Vector3 &amp; p_v0, const Vector3 &amp; p_v1, const Vector3 &amp; p_v2) : Variant</text><ellipse cx="13022.59" cy="8879.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="647" x="13031.59" y="8882.5854">point_is_inside_triangle(const Vector2 &amp; s, const Vector2 &amp; a, const Vector2 &amp; b, const Vector2 &amp; c) const : bool</text><ellipse cx="13022.59" cy="8892.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="887" x="13031.59" y="8895.3901">segment_intersects_sphere(const Vector3 &amp; p_from, const Vector3 &amp; p_to, const Vector3 &amp; p_sphere_pos, real_t p_sphere_radius) : PoolVector&lt;Vector3&gt;</text><ellipse cx="13022.59" cy="8904.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="739" x="13031.59" y="8908.1948">segment_intersects_cylinder(const Vector3 &amp; p_from, const Vector3 &amp; p_to, float p_height, float p_radius) : PoolVector&lt;Vector3&gt;</text><ellipse cx="13022.59" cy="8917.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="760" x="13031.59" y="8920.9995">segment_intersects_convex(const Vector3 &amp; p_from, const Vector3 &amp; p_to, const Vector&lt;Plane&gt; &amp; p_planes) : PoolVector&lt;Vector3&gt;</text><ellipse cx="13022.59" cy="8930.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="13031.59" y="8933.8042">is_point_in_circle(const Vector2 &amp; p_point, const Vector2 &amp; p_circle_pos, real_t p_circle_radius) : bool</text><ellipse cx="13022.59" cy="8943.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="768" x="13031.59" y="8946.6089">segment_intersects_circle(const Vector2 &amp; p_from, const Vector2 &amp; p_to, const Vector2 &amp; p_circle_pos, real_t p_circle_radius) : real_t</text><ellipse cx="13022.59" cy="8956.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="13031.59" y="8959.4136">get_uv84_normal_bit(const Vector3 &amp; p_vector) : int</text><ellipse cx="13022.59" cy="8969.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="13031.59" y="8972.2183">is_polygon_clockwise(const Vector&lt;Vector2&gt; &amp; p_polygon) : bool</text><ellipse cx="13022.59" cy="8981.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="498" x="13031.59" y="8985.0229">is_point_in_polygon(const Point2 &amp; p_point, const Vector&lt;Vector2&gt; &amp; p_polygon) : bool</text><ellipse cx="13022.59" cy="8994.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="13031.59" y="8997.8276">triangulate_polygon(const Vector&lt;Vector2&gt; &amp; p_polygon) : Vector&lt;int&gt;</text><ellipse cx="13022.59" cy="9007.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="424" x="13031.59" y="9010.6323">triangulate_delaunay_2d(const Vector&lt;Vector2&gt; &amp; p_points) : Vector&lt;int&gt;</text><ellipse cx="13022.59" cy="9020.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="13031.59" y="9023.437">convex_hull_2d(const Vector&lt;Point2&gt; &amp; p_points) : Vector&lt;Point2&gt;</text><ellipse cx="13022.59" cy="9033.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="13031.59" y="9036.2417">clip_polygon(const Vector&lt;Vector3&gt; &amp; p_points, const Plane &amp; p_plane) : Vector&lt;Vector3&gt;</text><ellipse cx="13022.59" cy="9045.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="13031.59" y="9049.0464">merge_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="13022.59" cy="9058.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="594" x="13031.59" y="9061.8511">clip_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="13022.59" cy="9071.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="13031.59" y="9074.6558">intersect_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="13022.59" cy="9084.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="618" x="13031.59" y="9087.4604">exclude_polygons_2d(const Vector&lt;Vector2&gt; &amp; p_polygon_a, const Vector&lt;Vector2&gt; &amp; p_polygon_b) : Array</text><ellipse cx="13022.59" cy="9097.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="638" x="13031.59" y="9100.2651">clip_polyline_with_polygon_2d(const Vector&lt;Vector2&gt; &amp; p_polyline, const Vector&lt;Vector2&gt; &amp; p_polygon) : Array</text><ellipse cx="13022.59" cy="9109.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="669" x="13031.59" y="9113.0698">intersect_polyline_with_polygon_2d(const Vector&lt;Vector2&gt; &amp; p_polyline, const Vector&lt;Vector2&gt; &amp; p_polygon) : Array</text><ellipse cx="13022.59" cy="9122.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="752" x="13031.59" y="9125.8745">offset_polygon_2d(const Vector&lt;Vector2&gt; &amp; p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE) : Array</text><ellipse cx="13022.59" cy="9135.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1060" x="13031.59" y="9138.6792">offset_polyline_2d(const Vector&lt;Vector2&gt; &amp; p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE, _Geometry::PolyEndType p_end_type = END_SQUARE) : Array</text><ellipse cx="13022.59" cy="9148.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="13031.59" y="9151.4839">make_atlas(const Vector&lt;Size2&gt; &amp; p_rects) : Dictionary</text><ellipse cx="13022.59" cy="9161.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="13031.59" y="9164.2886">_Geometry() : void</text></a><!--MD5=[4dcc2a5e5ca6c256ca3086aa64be2a49]
class C_0000135188690773659020--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629" target="_top" title="_Marshalls" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629" xlink:show="new" xlink:title="_Marshalls" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="316.8984" id="C_0000135188690773659020" style="stroke: #A80036; stroke-width: 1.5;" width="476" x="14232.59" y="8674.4531"/><ellipse cx="14433.84" cy="8690.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14436.8088,8696.0938 Q14436.2306,8696.3906 14435.59,8696.5313 Q14434.9494,8696.6875 14434.2463,8696.6875 Q14431.7463,8696.6875 14430.4181,8695.0469 Q14429.1056,8693.3906 14429.1056,8690.2656 Q14429.1056,8687.1406 14430.4181,8685.4844 Q14431.7463,8683.8281 14434.2463,8683.8281 Q14434.9494,8683.8281 14435.59,8683.9844 Q14436.2463,8684.1406 14436.8088,8684.4375 L14436.8088,8687.1563 Q14436.1838,8686.5781 14435.59,8686.3125 Q14434.9963,8686.0313 14434.3713,8686.0313 Q14433.0275,8686.0313 14432.34,8687.1094 Q14431.6525,8688.1719 14431.6525,8690.2656 Q14431.6525,8692.3594 14432.34,8693.4375 Q14433.0275,8694.5 14434.3713,8694.5 Q14434.9963,8694.5 14435.59,8694.2344 Q14436.1838,8693.9531 14436.8088,8693.375 L14436.8088,8696.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="14454.34" y="8694.6074">_Marshalls</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14233.59" x2="14707.59" y1="8706.4531" y2="8706.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="14233.59" x2="14707.59" y1="8714.4531" y2="8714.4531"/><ellipse cx="14243.59" cy="8725.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="14252.59" y="8728.6636">get_class() const : String</text><ellipse cx="14243.59" cy="8738.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="14252.59" y="8741.4683">_get_class_namev() const : const StringName *</text><ellipse cx="14243.59" cy="8751.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="14252.59" y="8754.2729">get_class_ptr_static() : void *</text><ellipse cx="14243.59" cy="8763.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="14252.59" y="8767.0776">get_class_static() : String</text><ellipse cx="14243.59" cy="8776.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="14252.59" y="8779.8823">get_parent_class_static() : String</text><ellipse cx="14243.59" cy="8789.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="14252.59" y="8792.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="14243.59" cy="8802.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="14252.59" y="8805.4917">get_category_static() : String</text><ellipse cx="14243.59" cy="8815.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="14252.59" y="8818.2964">inherits_static() : String</text><ellipse cx="14243.59" cy="8827.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="14252.59" y="8831.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="14243.59" cy="8840.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="14252.59" y="8843.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="14243.59" cy="8853.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="14252.59" y="8856.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="14243.59" cy="8866.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="14252.59" y="8869.5151">initialize_class() : void</text><ellipse cx="14243.59" cy="8879.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="14252.59" y="8882.3198">get_singleton() : _Marshalls *</text><ellipse cx="14243.59" cy="8891.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="14252.59" y="8895.1245">variant_to_base64(const Variant &amp; p_var, bool p_full_objects = false) : String</text><ellipse cx="14243.59" cy="8904.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="14252.59" y="8907.9292">base64_to_variant(const String &amp; p_str, bool p_allow_objects = false) : Variant</text><ellipse cx="14243.59" cy="8917.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="14252.59" y="8920.7339">raw_to_base64(const PoolVector&lt;uint8_t&gt; &amp; p_arr) : String</text><ellipse cx="14243.59" cy="8930.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="14252.59" y="8933.5386">base64_to_raw(const String &amp; p_str) : PoolVector&lt;uint8_t&gt;</text><ellipse cx="14243.59" cy="8943.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="14252.59" y="8946.3433">utf8_to_base64(const String &amp; p_str) : String</text><ellipse cx="14243.59" cy="8955.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="14252.59" y="8959.1479">base64_to_utf8(const String &amp; p_str) : String</text><ellipse cx="14243.59" cy="8968.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="14252.59" y="8971.9526">_Marshalls() : void</text><ellipse cx="14243.59" cy="8981.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="14252.59" y="8984.7573">_Marshalls() : void</text></a><!--MD5=[bec2467cb88707ae9252054f6d93a9ae]
class C_0001150621116588802549--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679" target="_top" title="_Thread" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679" xlink:show="new" xlink:title="_Thread" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="278.4844" id="C_0001150621116588802549" style="stroke: #A80036; stroke-width: 1.5;" width="905" x="18639.09" y="8693.9531"/><ellipse cx="19062.34" cy="8709.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M19065.3088,8715.5938 Q19064.7306,8715.8906 19064.09,8716.0313 Q19063.4494,8716.1875 19062.7463,8716.1875 Q19060.2463,8716.1875 19058.9181,8714.5469 Q19057.6056,8712.8906 19057.6056,8709.7656 Q19057.6056,8706.6406 19058.9181,8704.9844 Q19060.2463,8703.3281 19062.7463,8703.3281 Q19063.4494,8703.3281 19064.09,8703.4844 Q19064.7463,8703.6406 19065.3088,8703.9375 L19065.3088,8706.6563 Q19064.6838,8706.0781 19064.09,8705.8125 Q19063.4963,8705.5313 19062.8713,8705.5313 Q19061.5275,8705.5313 19060.84,8706.6094 Q19060.1525,8707.6719 19060.1525,8709.7656 Q19060.1525,8711.8594 19060.84,8712.9375 Q19061.5275,8714 19062.8713,8714 Q19063.4963,8714 19064.09,8713.7344 Q19064.6838,8713.4531 19065.3088,8712.875 L19065.3088,8715.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="19082.84" y="8714.1074">_Thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="18640.09" x2="19543.09" y1="8725.9531" y2="8725.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="18640.09" x2="19543.09" y1="8733.9531" y2="8733.9531"/><ellipse cx="18650.09" cy="8744.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="18659.09" y="8748.1636">get_class() const : String</text><ellipse cx="18650.09" cy="8757.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="18659.09" y="8760.9683">_get_class_namev() const : const StringName *</text><ellipse cx="18650.09" cy="8770.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="18659.09" y="8773.7729">get_class_ptr_static() : void *</text><ellipse cx="18650.09" cy="8783.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="18659.09" y="8786.5776">get_class_static() : String</text><ellipse cx="18650.09" cy="8796.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="18659.09" y="8799.3823">get_parent_class_static() : String</text><ellipse cx="18650.09" cy="8808.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="18659.09" y="8812.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="18650.09" cy="8821.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="18659.09" y="8824.9917">get_category_static() : String</text><ellipse cx="18650.09" cy="8834.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="18659.09" y="8837.7964">inherits_static() : String</text><ellipse cx="18650.09" cy="8847.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="18659.09" y="8850.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="18650.09" cy="8860.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="18659.09" y="8863.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="18650.09" cy="8873" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="18659.09" y="8876.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="18650.09" cy="8885.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="18659.09" y="8889.0151">initialize_class() : void</text><ellipse cx="18650.09" cy="8898.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="879" x="18659.09" y="8901.8198">start(Object * p_instance, const StringName &amp; p_method, const Variant &amp; p_userdata = Variant(), _Thread::Priority p_priority = PRIORITY_NORMAL) : Error</text><ellipse cx="18650.09" cy="8911.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="18659.09" y="8914.6245">get_id() const : String</text><ellipse cx="18650.09" cy="8924.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="18659.09" y="8927.4292">is_active() const : bool</text><ellipse cx="18650.09" cy="8937.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="18659.09" y="8940.2339">wait_to_finish() : Variant</text><ellipse cx="18650.09" cy="8949.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="18659.09" y="8953.0386">_Thread() : void</text><ellipse cx="18650.09" cy="8962.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="18659.09" y="8965.8433">_Thread() : void</text></a><!--MD5=[aee0a6e401a1fbb7c861b56a21d0daf4]
class C_0001186331261774827872--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713" target="_top" title="_ClassDB" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713" xlink:show="new" xlink:title="_ClassDB" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="483.3594" id="C_0001186331261774827872" style="stroke: #A80036; stroke-width: 1.5;" width="651" x="5938.09" y="8591.4531"/><ellipse cx="6231.34" cy="8607.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6234.3088,8613.0938 Q6233.7306,8613.3906 6233.09,8613.5313 Q6232.4494,8613.6875 6231.7463,8613.6875 Q6229.2463,8613.6875 6227.9181,8612.0469 Q6226.6056,8610.3906 6226.6056,8607.2656 Q6226.6056,8604.1406 6227.9181,8602.4844 Q6229.2463,8600.8281 6231.7463,8600.8281 Q6232.4494,8600.8281 6233.09,8600.9844 Q6233.7463,8601.1406 6234.3088,8601.4375 L6234.3088,8604.1563 Q6233.6838,8603.5781 6233.09,8603.3125 Q6232.4963,8603.0313 6231.8713,8603.0313 Q6230.5275,8603.0313 6229.84,8604.1094 Q6229.1525,8605.1719 6229.1525,8607.2656 Q6229.1525,8609.3594 6229.84,8610.4375 Q6230.5275,8611.5 6231.8713,8611.5 Q6232.4963,8611.5 6233.09,8611.2344 Q6233.6838,8610.9531 6234.3088,8610.375 L6234.3088,8613.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="6251.84" y="8611.6074">_ClassDB</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5939.09" x2="6588.09" y1="8623.4531" y2="8623.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5939.09" x2="6588.09" y1="8631.4531" y2="8631.4531"/><ellipse cx="5949.09" cy="8642.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5958.09" y="8645.6636">get_class() const : String</text><ellipse cx="5949.09" cy="8655.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="5958.09" y="8658.4683">_get_class_namev() const : const StringName *</text><ellipse cx="5949.09" cy="8668.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="5958.09" y="8671.2729">get_class_ptr_static() : void *</text><ellipse cx="5949.09" cy="8680.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="5958.09" y="8684.0776">get_class_static() : String</text><ellipse cx="5949.09" cy="8693.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="5958.09" y="8696.8823">get_parent_class_static() : String</text><ellipse cx="5949.09" cy="8706.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="5958.09" y="8709.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="5949.09" cy="8719.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="5958.09" y="8722.4917">get_category_static() : String</text><ellipse cx="5949.09" cy="8732.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="5958.09" y="8735.2964">inherits_static() : String</text><ellipse cx="5949.09" cy="8744.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="5958.09" y="8748.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="5949.09" cy="8757.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="5958.09" y="8760.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="5949.09" cy="8770.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="5958.09" y="8773.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="5949.09" cy="8783.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="5958.09" y="8786.5151">initialize_class() : void</text><ellipse cx="5949.09" cy="8796.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="5958.09" y="8799.3198">get_class_list() const : PoolStringArray</text><ellipse cx="5949.09" cy="8808.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="454" x="5958.09" y="8812.1245">get_inheriters_from_class(const StringName &amp; p_class) const : PoolStringArray</text><ellipse cx="5949.09" cy="8821.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="5958.09" y="8824.9292">get_parent_class(const StringName &amp; p_class) const : StringName</text><ellipse cx="5949.09" cy="8834.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="5958.09" y="8837.7339">class_exists(const StringName &amp; p_class) const : bool</text><ellipse cx="5949.09" cy="8847.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="5958.09" y="8850.5386">is_parent_class(const StringName &amp; p_class, const StringName &amp; p_inherits) const : bool</text><ellipse cx="5949.09" cy="8860.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="5958.09" y="8863.3433">can_instance(const StringName &amp; p_class) const : bool</text><ellipse cx="5949.09" cy="8872.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="5958.09" y="8876.1479">instance(const StringName &amp; p_class) const : Variant</text><ellipse cx="5949.09" cy="8885.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="5958.09" y="8888.9526">has_signal(StringName p_class, StringName p_signal) const : bool</text><ellipse cx="5949.09" cy="8898.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="5958.09" y="8901.7573">get_signal(StringName p_class, StringName p_signal) const : Dictionary</text><ellipse cx="5949.09" cy="8911.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="5958.09" y="8914.562">get_signal_list(StringName p_class, bool p_no_inheritance = false) const : Array</text><ellipse cx="5949.09" cy="8924.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="471" x="5958.09" y="8927.3667">get_property_list(StringName p_class, bool p_no_inheritance = false) const : Array</text><ellipse cx="5949.09" cy="8936.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="453" x="5958.09" y="8940.1714">get_property(Object * p_object, const StringName &amp; p_property) const : Variant</text><ellipse cx="5949.09" cy="8949.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="5958.09" y="8952.9761">set_property(Object * p_object, const StringName &amp; p_property, const Variant &amp; p_value) const : Error</text><ellipse cx="5949.09" cy="8962.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="575" x="5958.09" y="8965.7808">has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) const : bool</text><ellipse cx="5949.09" cy="8975.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="466" x="5958.09" y="8978.5854">get_method_list(StringName p_class, bool p_no_inheritance = false) const : Array</text><ellipse cx="5949.09" cy="8988.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="625" x="5958.09" y="8991.3901">get_integer_constant_list(const StringName &amp; p_class, bool p_no_inheritance = false) const : PoolStringArray</text><ellipse cx="5949.09" cy="9000.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="5958.09" y="9004.1948">has_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name) const : bool</text><ellipse cx="5949.09" cy="9013.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="5958.09" y="9016.9995">get_integer_constant(const StringName &amp; p_class, const StringName &amp; p_name) const : int</text><ellipse cx="5949.09" cy="9026.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="5958.09" y="9029.8042">get_category(const StringName &amp; p_node) const : StringName</text><ellipse cx="5949.09" cy="9039.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="5958.09" y="9042.6089">is_class_enabled(StringName p_class) const : bool</text><ellipse cx="5949.09" cy="9052.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5958.09" y="9055.4136">_ClassDB() : void</text><ellipse cx="5949.09" cy="9065.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="5958.09" y="9068.2183">_ClassDB() : void</text></a><!--MD5=[05b7e85f3dbac3be88f6744cbcc1427a]
class C_0001895218672297528471--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752" target="_top" title="_Engine" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752" xlink:show="new" xlink:title="_Engine" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="547.3828" id="C_0001895218672297528471" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="6624.09" y="8559.4531"/><ellipse cx="6795.84" cy="8575.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6798.8088,8581.0938 Q6798.2306,8581.3906 6797.59,8581.5313 Q6796.9494,8581.6875 6796.2463,8581.6875 Q6793.7463,8581.6875 6792.4181,8580.0469 Q6791.1056,8578.3906 6791.1056,8575.2656 Q6791.1056,8572.1406 6792.4181,8570.4844 Q6793.7463,8568.8281 6796.2463,8568.8281 Q6796.9494,8568.8281 6797.59,8568.9844 Q6798.2463,8569.1406 6798.8088,8569.4375 L6798.8088,8572.1563 Q6798.1838,8571.5781 6797.59,8571.3125 Q6796.9963,8571.0313 6796.3713,8571.0313 Q6795.0275,8571.0313 6794.34,8572.1094 Q6793.6525,8573.1719 6793.6525,8575.2656 Q6793.6525,8577.3594 6794.34,8578.4375 Q6795.0275,8579.5 6796.3713,8579.5 Q6796.9963,8579.5 6797.59,8579.2344 Q6798.1838,8578.9531 6798.8088,8578.375 L6798.8088,8581.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="6816.34" y="8579.6074">_Engine</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6625.09" x2="7024.09" y1="8591.4531" y2="8591.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6625.09" x2="7024.09" y1="8599.4531" y2="8599.4531"/><ellipse cx="6635.09" cy="8610.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6644.09" y="8613.6636">get_class() const : String</text><ellipse cx="6635.09" cy="8623.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="6644.09" y="8626.4683">_get_class_namev() const : const StringName *</text><ellipse cx="6635.09" cy="8636.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="6644.09" y="8639.2729">get_class_ptr_static() : void *</text><ellipse cx="6635.09" cy="8648.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="6644.09" y="8652.0776">get_class_static() : String</text><ellipse cx="6635.09" cy="8661.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="6644.09" y="8664.8823">get_parent_class_static() : String</text><ellipse cx="6635.09" cy="8674.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="6644.09" y="8677.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="6635.09" cy="8687.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="6644.09" y="8690.4917">get_category_static() : String</text><ellipse cx="6635.09" cy="8700.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="6644.09" y="8703.2964">inherits_static() : String</text><ellipse cx="6635.09" cy="8712.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="6644.09" y="8716.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="6635.09" cy="8725.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6644.09" y="8728.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="6635.09" cy="8738.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="6644.09" y="8741.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="6635.09" cy="8751.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="6644.09" y="8754.5151">initialize_class() : void</text><ellipse cx="6635.09" cy="8764.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="6644.09" y="8767.3198">get_singleton() : _Engine *</text><ellipse cx="6635.09" cy="8776.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6644.09" y="8780.1245">set_iterations_per_second(int p_ips) : void</text><ellipse cx="6635.09" cy="8789.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6644.09" y="8792.9292">get_iterations_per_second() const : int</text><ellipse cx="6635.09" cy="8802.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="6644.09" y="8805.7339">set_physics_jitter_fix(float p_threshold) : void</text><ellipse cx="6635.09" cy="8815.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6644.09" y="8818.5386">get_physics_jitter_fix() const : float</text><ellipse cx="6635.09" cy="8828.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="6644.09" y="8831.3433">get_physics_interpolation_fraction() const : float</text><ellipse cx="6635.09" cy="8840.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="6644.09" y="8844.1479">set_target_fps(int p_fps) : void</text><ellipse cx="6635.09" cy="8853.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6644.09" y="8856.9526">get_target_fps() const : int</text><ellipse cx="6635.09" cy="8866.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="6644.09" y="8869.7573">get_frames_per_second() const : float</text><ellipse cx="6635.09" cy="8879.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="6644.09" y="8882.562">get_physics_frames() const : uint64_t</text><ellipse cx="6635.09" cy="8892.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="6644.09" y="8895.3667">get_idle_frames() const : uint64_t</text><ellipse cx="6635.09" cy="8904.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="6644.09" y="8908.1714">get_frames_drawn() : int</text><ellipse cx="6635.09" cy="8917.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6644.09" y="8920.9761">set_time_scale(float p_scale) : void</text><ellipse cx="6635.09" cy="8930.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="6644.09" y="8933.7808">get_time_scale() : float</text><ellipse cx="6635.09" cy="8943.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="6644.09" y="8946.5854">get_main_loop() const : MainLoop *</text><ellipse cx="6635.09" cy="8956.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="6644.09" y="8959.3901">get_version_info() const : Dictionary</text><ellipse cx="6635.09" cy="8968.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="6644.09" y="8972.1948">get_author_info() const : Dictionary</text><ellipse cx="6635.09" cy="8981.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="6644.09" y="8984.9995">get_copyright_info() const : Array</text><ellipse cx="6635.09" cy="8994.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="6644.09" y="8997.8042">get_donor_info() const : Dictionary</text><ellipse cx="6635.09" cy="9007.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="6644.09" y="9010.6089">get_license_info() const : Dictionary</text><ellipse cx="6635.09" cy="9020.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6644.09" y="9023.4136">get_license_text() const : String</text><ellipse cx="6635.09" cy="9033.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="6644.09" y="9036.2183">is_in_physics_frame() const : bool</text><ellipse cx="6635.09" cy="9045.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="6644.09" y="9049.0229">has_singleton(const String &amp; p_name) const : bool</text><ellipse cx="6635.09" cy="9058.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="6644.09" y="9061.8276">get_singleton_object(const String &amp; p_name) const : Object *</text><ellipse cx="6635.09" cy="9071.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6644.09" y="9074.6323">set_editor_hint(bool p_enabled) : void</text><ellipse cx="6635.09" cy="9084.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6644.09" y="9087.437">is_editor_hint() const : bool</text><ellipse cx="6635.09" cy="9097.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="6644.09" y="9100.2417">_Engine() : void</text></a><!--MD5=[c754248bd0e8ccbf585ab49c3c72bce4]
class C_0000979065355535690103--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833" target="_top" title="_JSON" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833" xlink:show="new" xlink:title="_JSON" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="252.875" id="C_0000979065355535690103" style="stroke: #A80036; stroke-width: 1.5;" width="561" x="7160.09" y="8706.4531"/><ellipse cx="7418.84" cy="8722.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7421.8088,8728.0938 Q7421.2306,8728.3906 7420.59,8728.5313 Q7419.9494,8728.6875 7419.2463,8728.6875 Q7416.7463,8728.6875 7415.4181,8727.0469 Q7414.1056,8725.3906 7414.1056,8722.2656 Q7414.1056,8719.1406 7415.4181,8717.4844 Q7416.7463,8715.8281 7419.2463,8715.8281 Q7419.9494,8715.8281 7420.59,8715.9844 Q7421.2463,8716.1406 7421.8088,8716.4375 L7421.8088,8719.1563 Q7421.1838,8718.5781 7420.59,8718.3125 Q7419.9963,8718.0313 7419.3713,8718.0313 Q7418.0275,8718.0313 7417.34,8719.1094 Q7416.6525,8720.1719 7416.6525,8722.2656 Q7416.6525,8724.3594 7417.34,8725.4375 Q7418.0275,8726.5 7419.3713,8726.5 Q7419.9963,8726.5 7420.59,8726.2344 Q7421.1838,8725.9531 7421.8088,8725.375 L7421.8088,8728.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="7439.34" y="8726.6074">_JSON</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7161.09" x2="7720.09" y1="8738.4531" y2="8738.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7161.09" x2="7720.09" y1="8746.4531" y2="8746.4531"/><ellipse cx="7171.09" cy="8757.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7180.09" y="8760.6636">get_class() const : String</text><ellipse cx="7171.09" cy="8770.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="7180.09" y="8773.4683">_get_class_namev() const : const StringName *</text><ellipse cx="7171.09" cy="8783.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="7180.09" y="8786.2729">get_class_ptr_static() : void *</text><ellipse cx="7171.09" cy="8795.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="7180.09" y="8799.0776">get_class_static() : String</text><ellipse cx="7171.09" cy="8808.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="7180.09" y="8811.8823">get_parent_class_static() : String</text><ellipse cx="7171.09" cy="8821.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="7180.09" y="8824.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="7171.09" cy="8834.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="7180.09" y="8837.4917">get_category_static() : String</text><ellipse cx="7171.09" cy="8847.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="7180.09" y="8850.2964">inherits_static() : String</text><ellipse cx="7171.09" cy="8859.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7180.09" y="8863.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="7171.09" cy="8872.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7180.09" y="8875.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="7171.09" cy="8885.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="7180.09" y="8888.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="7171.09" cy="8898.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="7180.09" y="8901.5151">initialize_class() : void</text><ellipse cx="7171.09" cy="8911.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="140" x="7180.09" y="8914.3198">get_singleton() : _JSON *</text><ellipse cx="7171.09" cy="8923.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="7180.09" y="8927.1245">print(const Variant &amp; p_value, const String &amp; p_indent = "", bool p_sort_keys = false) : String</text><ellipse cx="7171.09" cy="8936.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="7180.09" y="8939.9292">parse(const String &amp; p_json) : Ref&lt;JSONParseResult&gt;</text><ellipse cx="7171.09" cy="8949.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="7180.09" y="8952.7339">_JSON() : void</text></a><!--MD5=[7f9ee7589f5b66fe26bf327ebbd73d28]
class C_0001701907280759632930--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49" target="_top" title="CameraServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49" xlink:show="new" xlink:title="CameraServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="380.9219" id="C_0001701907280759632930" style="stroke: #A80036; stroke-width: 1.5;" width="401" x="7856.09" y="8642.4531"/><ellipse cx="8008.34" cy="8658.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8011.3088,8664.0938 Q8010.7306,8664.3906 8010.09,8664.5313 Q8009.4494,8664.6875 8008.7463,8664.6875 Q8006.2463,8664.6875 8004.9181,8663.0469 Q8003.6056,8661.3906 8003.6056,8658.2656 Q8003.6056,8655.1406 8004.9181,8653.4844 Q8006.2463,8651.8281 8008.7463,8651.8281 Q8009.4494,8651.8281 8010.09,8651.9844 Q8010.7463,8652.1406 8011.3088,8652.4375 L8011.3088,8655.1563 Q8010.6838,8654.5781 8010.09,8654.3125 Q8009.4963,8654.0313 8008.8713,8654.0313 Q8007.5275,8654.0313 8006.84,8655.1094 Q8006.1525,8656.1719 8006.1525,8658.2656 Q8006.1525,8660.3594 8006.84,8661.4375 Q8007.5275,8662.5 8008.8713,8662.5 Q8009.4963,8662.5 8010.09,8662.2344 Q8010.6838,8661.9531 8011.3088,8661.375 L8011.3088,8664.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="8028.84" y="8662.6074">CameraServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7857.09" x2="8256.09" y1="8674.4531" y2="8674.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7857.09" x2="8256.09" y1="8682.4531" y2="8682.4531"/><ellipse cx="7867.09" cy="8693.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7876.09" y="8696.6636">get_class() const : String</text><ellipse cx="7867.09" cy="8706.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="7876.09" y="8709.4683">_get_class_namev() const : const StringName *</text><ellipse cx="7867.09" cy="8719.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="7876.09" y="8722.2729">get_class_ptr_static() : void *</text><ellipse cx="7867.09" cy="8731.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="7876.09" y="8735.0776">get_class_static() : String</text><ellipse cx="7867.09" cy="8744.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="7876.09" y="8747.8823">get_parent_class_static() : String</text><ellipse cx="7867.09" cy="8757.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="7876.09" y="8760.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="7867.09" cy="8770.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="7876.09" y="8773.4917">get_category_static() : String</text><ellipse cx="7867.09" cy="8783.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="7876.09" y="8786.2964">inherits_static() : String</text><ellipse cx="7867.09" cy="8795.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7876.09" y="8799.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="7867.09" cy="8808.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7876.09" y="8811.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="7867.09" cy="8821.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="7876.09" y="8824.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="7867.09" cy="8834.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="7876.09" y="8837.5151">initialize_class() : void</text><ellipse cx="7867.09" cy="8847.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="189" x="7876.09" y="8850.3198">get_singleton() : CameraServer *</text><ellipse cx="7867.09" cy="8859.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="7876.09" y="8863.1245">create() : CameraServer *</text><ellipse cx="7867.09" cy="8872.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="7876.09" y="8875.9292">get_free_id() : int</text><ellipse cx="7867.09" cy="8885.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="7876.09" y="8888.7339">get_feed_index(int p_id) : int</text><ellipse cx="7867.09" cy="8898.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="7876.09" y="8901.5386">get_feed_by_id(int p_id) : Ref&lt;CameraFeed&gt;</text><ellipse cx="7867.09" cy="8911.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="7876.09" y="8914.3433">add_feed(const Ref&lt;CameraFeed&gt; &amp; p_feed) : void</text><ellipse cx="7867.09" cy="8923.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="7876.09" y="8927.1479">remove_feed(const Ref&lt;CameraFeed&gt; &amp; p_feed) : void</text><ellipse cx="7867.09" cy="8936.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="7876.09" y="8939.9526">get_feed(int p_index) : Ref&lt;CameraFeed&gt;</text><ellipse cx="7867.09" cy="8949.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7876.09" y="8952.7573">get_feed_count() : int</text><ellipse cx="7867.09" cy="8962.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="7876.09" y="8965.562">get_feeds() : Array</text><ellipse cx="7867.09" cy="8975.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="7876.09" y="8978.3667">feed_texture(int p_id, CameraServer::FeedImage p_texture) : RID</text><ellipse cx="7867.09" cy="8987.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="7876.09" y="8991.1714">CameraServer() : void</text><ellipse cx="7867.09" cy="9000.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7876.09" y="9003.9761">~CameraServer() : void</text><ellipse cx="7867.09" cy="9013.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="119" x="7876.09" y="9016.7808">make_default() : void</text></a><!--MD5=[5316dbe070bc4024b413849b0399fc2e]
class C_0001589464385186808769--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42" target="_top" title="VisualServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42" xlink:show="new" xlink:title="VisualServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="5489.9922" id="C_0001589464385186808769" style="stroke: #A80036; stroke-width: 1.5;" width="2566" x="8392.59" y="6087.9531"/><ellipse cx="9633.34" cy="6103.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9633.4494,6099.2969 L9632.2931,6104.375 L9634.6213,6104.375 L9633.4494,6099.2969 Z M9631.965,6097.0625 L9634.9494,6097.0625 L9638.3088,6109.4531 L9635.8556,6109.4531 L9635.09,6106.3906 L9631.8088,6106.3906 L9631.0588,6109.4531 L9628.6213,6109.4531 L9631.965,6097.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="76" x="9653.84" y="6108.1074">VisualServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8393.59" x2="10957.59" y1="6119.9531" y2="6119.9531"/><ellipse cx="8403.59" cy="6130.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="8412.59" y="6134.1636">NO_INDEX_ARRAY : enum</text><ellipse cx="8403.59" cy="6143.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="8412.59" y="6146.9683">ARRAY_WEIGHTS_SIZE : enum</text><ellipse cx="8403.59" cy="6156.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="8412.59" y="6159.7729">CANVAS_ITEM_Z_MIN : enum</text><ellipse cx="8403.59" cy="6169.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="8412.59" y="6172.5776">CANVAS_ITEM_Z_MAX : enum</text><ellipse cx="8403.59" cy="6182.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="8412.59" y="6185.3823">MAX_GLOW_LEVELS : enum</text><ellipse cx="8403.59" cy="6194.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="8412.59" y="6198.187">MAX_CURSORS : enum</text><ellipse cx="8403.59" cy="6207.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="8412.59" y="6210.9917">MATERIAL_RENDER_PRIORITY_MIN : enum</text><ellipse cx="8403.59" cy="6220.5859" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="8412.59" y="6223.7964">MATERIAL_RENDER_PRIORITY_MAX : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8393.59" x2="10957.59" y1="6230.3906" y2="6230.3906"/><ellipse cx="8403.59" cy="6241.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="8412.59" y="6244.6011">get_class() const : String</text><ellipse cx="8403.59" cy="6254.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="8412.59" y="6257.4058">_get_class_namev() const : const StringName *</text><ellipse cx="8403.59" cy="6267" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="8412.59" y="6270.2104">get_class_ptr_static() : void *</text><ellipse cx="8403.59" cy="6279.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="8412.59" y="6283.0151">get_class_static() : String</text><ellipse cx="8403.59" cy="6292.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="8412.59" y="6295.8198">get_parent_class_static() : String</text><ellipse cx="8403.59" cy="6305.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="8412.59" y="6308.6245">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="8403.59" cy="6318.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="8412.59" y="6321.4292">get_category_static() : String</text><ellipse cx="8403.59" cy="6331.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="8412.59" y="6334.2339">inherits_static() : String</text><ellipse cx="8403.59" cy="6343.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="8412.59" y="6347.0386">is_class(const String &amp; p_class) const : bool</text><ellipse cx="8403.59" cy="6356.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="8412.59" y="6359.8433">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="8403.59" cy="6369.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="8412.59" y="6372.6479">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="8403.59" cy="6382.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="8412.59" y="6385.4526">initialize_class() : void</text><ellipse cx="8403.59" cy="6395.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="178" x="8412.59" y="6398.2573">get_singleton() : VisualServer *</text><ellipse cx="8403.59" cy="6407.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="138" x="8412.59" y="6411.062">create() : VisualServer *</text><ellipse cx="8403.59" cy="6420.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="8412.59" y="6423.8667">texture_create() = 0 : RID</text><ellipse cx="8403.59" cy="6433.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="628" x="8412.59" y="6436.6714">texture_create_from_image(const Ref&lt;Image&gt; &amp; p_image, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) : RID</text><ellipse cx="8403.59" cy="6446.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1082" x="8412.59" y="6449.4761">texture_allocate(RID p_texture, int p_width, int p_height, int p_depth_3d, Image::Format p_format, VisualServer::TextureType p_type, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) = 0 : void</text><ellipse cx="8403.59" cy="6459.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="511" x="8412.59" y="6462.2808">texture_set_data(RID p_texture, const Ref&lt;Image&gt; &amp; p_image, int p_layer = 0) = 0 : void</text><ellipse cx="8403.59" cy="6471.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="974" x="8412.59" y="6475.0854">texture_set_data_partial(RID p_texture, const Ref&lt;Image&gt; &amp; p_image, int src_x, int src_y, int src_w, int src_h, int dst_x, int dst_y, int p_dst_mip, int p_layer = 0) = 0 : void</text><ellipse cx="8403.59" cy="6484.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="415" x="8412.59" y="6487.8901">texture_get_data(RID p_texture, int p_layer = 0) const = 0 : Ref&lt;Image&gt;</text><ellipse cx="8403.59" cy="6497.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="8412.59" y="6500.6948">texture_set_flags(RID p_texture, uint32_t p_flags) = 0 : void</text><ellipse cx="8403.59" cy="6510.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="8412.59" y="6513.4995">texture_get_flags(RID p_texture) const = 0 : uint32_t</text><ellipse cx="8403.59" cy="6523.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="8412.59" y="6526.3042">texture_get_format(RID p_texture) const = 0 : Image::Format</text><ellipse cx="8403.59" cy="6535.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="8412.59" y="6539.1089">texture_get_type(RID p_texture) const = 0 : VisualServer::TextureType</text><ellipse cx="8403.59" cy="6548.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="8412.59" y="6551.9136">texture_get_texid(RID p_texture) const = 0 : uint32_t</text><ellipse cx="8403.59" cy="6561.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="301" x="8412.59" y="6564.7183">texture_get_width(RID p_texture) const = 0 : uint32_t</text><ellipse cx="8403.59" cy="6574.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="8412.59" y="6577.5229">texture_get_height(RID p_texture) const = 0 : uint32_t</text><ellipse cx="8403.59" cy="6587.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="8412.59" y="6590.3276">texture_get_depth(RID p_texture) const = 0 : uint32_t</text><ellipse cx="8403.59" cy="6599.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="525" x="8412.59" y="6603.1323">texture_set_size_override(RID p_texture, int p_width, int p_height, int p_depth_3d) = 0 : void</text><ellipse cx="8403.59" cy="6612.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="8412.59" y="6615.937">texture_bind(RID p_texture, uint32_t p_texture_no) = 0 : void</text><ellipse cx="8403.59" cy="6625.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="8412.59" y="6628.7417">texture_set_path(RID p_texture, const String &amp; p_path) = 0 : void</text><ellipse cx="8403.59" cy="6638.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="284" x="8412.59" y="6641.5464">texture_get_path(RID p_texture) const = 0 : String</text><ellipse cx="8403.59" cy="6651.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="8412.59" y="6654.3511">texture_set_shrink_all_x2_on_set_data(bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="6663.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="707" x="8412.59" y="6667.1558">texture_set_detect_3d_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void</text><ellipse cx="8403.59" cy="6676.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="718" x="8412.59" y="6679.9604">texture_set_detect_srgb_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void</text><ellipse cx="8403.59" cy="6689.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="733" x="8412.59" y="6692.7651">texture_set_detect_normal_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void</text><ellipse cx="8403.59" cy="6702.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="8412.59" y="6705.5698">texture_debug_usage(List&lt;VisualServer::TextureInfo&gt; * r_info) = 0 : void</text><ellipse cx="8403.59" cy="6715.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="8412.59" y="6718.3745">_texture_debug_usage_bind() : Array</text><ellipse cx="8403.59" cy="6727.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="275" x="8412.59" y="6731.1792">textures_keep_original(bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="6740.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="311" x="8412.59" y="6743.9839">texture_set_proxy(RID p_proxy, RID p_base) = 0 : void</text><ellipse cx="8403.59" cy="6753.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="8412.59" y="6756.7886">texture_set_force_redraw_if_visible(RID p_texture, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="6766.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="124" x="8412.59" y="6769.5933">sky_create() = 0 : RID</text><ellipse cx="8403.59" cy="6779.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="430" x="8412.59" y="6782.3979">sky_set_texture(RID p_sky, RID p_cube_map, int p_radiance_size) = 0 : void</text><ellipse cx="8403.59" cy="6791.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="8412.59" y="6795.2026">shader_create() = 0 : RID</text><ellipse cx="8403.59" cy="6804.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="8412.59" y="6808.0073">shader_set_code(RID p_shader, const String &amp; p_code) = 0 : void</text><ellipse cx="8403.59" cy="6817.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="8412.59" y="6820.812">shader_get_code(RID p_shader) const = 0 : String</text><ellipse cx="8403.59" cy="6830.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="506" x="8412.59" y="6833.6167">shader_get_param_list(RID p_shader, List&lt;PropertyInfo&gt; * p_param_list) const = 0 : void</text><ellipse cx="8403.59" cy="6843.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="8412.59" y="6846.4214">_shader_get_param_list_bind(RID p_shader) const : Array</text><ellipse cx="8403.59" cy="6856.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="595" x="8412.59" y="6859.2261">shader_set_default_texture_param(RID p_shader, const StringName &amp; p_name, RID p_texture) = 0 : void</text><ellipse cx="8403.59" cy="6868.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="540" x="8412.59" y="6872.0308">shader_get_default_texture_param(RID p_shader, const StringName &amp; p_name) const = 0 : RID</text><ellipse cx="8403.59" cy="6881.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="8412.59" y="6884.8354">shader_add_custom_define(RID p_shader, const String &amp; p_define) = 0 : void</text><ellipse cx="8403.59" cy="6894.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="498" x="8412.59" y="6897.6401">shader_get_custom_defines(RID p_shader, Vector&lt;String&gt; * p_defines) const = 0 : void</text><ellipse cx="8403.59" cy="6907.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="460" x="8412.59" y="6910.4448">shader_remove_custom_define(RID p_shader, const String &amp; p_define) = 0 : void</text><ellipse cx="8403.59" cy="6920.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="8412.59" y="6923.2495">material_create() = 0 : RID</text><ellipse cx="8403.59" cy="6932.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="8412.59" y="6936.0542">material_set_shader(RID p_shader_material, RID p_shader) = 0 : void</text><ellipse cx="8403.59" cy="6945.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="8412.59" y="6948.8589">material_get_shader(RID p_shader_material) const = 0 : RID</text><ellipse cx="8403.59" cy="6958.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="583" x="8412.59" y="6961.6636">material_set_param(RID p_material, const StringName &amp; p_param, const Variant &amp; p_value) = 0 : void</text><ellipse cx="8403.59" cy="6971.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="491" x="8412.59" y="6974.4683">material_get_param(RID p_material, const StringName &amp; p_param) const = 0 : Variant</text><ellipse cx="8403.59" cy="6984.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="536" x="8412.59" y="6987.2729">material_get_param_default(RID p_material, const StringName &amp; p_param) const = 0 : Variant</text><ellipse cx="8403.59" cy="6996.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="8412.59" y="7000.0776">material_set_render_priority(RID p_material, int priority) = 0 : void</text><ellipse cx="8403.59" cy="7009.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="8412.59" y="7012.8823">material_set_line_width(RID p_material, float p_width) = 0 : void</text><ellipse cx="8403.59" cy="7022.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="406" x="8412.59" y="7025.687">material_set_next_pass(RID p_material, RID p_next_material) = 0 : void</text><ellipse cx="8403.59" cy="7035.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="136" x="8412.59" y="7038.4917">mesh_create() = 0 : RID</text><ellipse cx="8403.59" cy="7048.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="8412.59" y="7051.2964">mesh_surface_get_format_offset(uint32_t p_format, int p_vertex_len, int p_index_len, int p_array_index) const : uint32_t</text><ellipse cx="8403.59" cy="7060.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="8412.59" y="7064.1011">mesh_surface_get_format_stride(uint32_t p_format, int p_vertex_len, int p_index_len) const : uint32_t</text><ellipse cx="8403.59" cy="7073.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="748" x="8412.59" y="7076.9058">mesh_surface_make_offsets_from_format(uint32_t p_format, int p_vertex_len, int p_index_len, uint32_t * r_offsets) const : uint32_t</text><ellipse cx="8403.59" cy="7086.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1250" x="8412.59" y="7089.7104">mesh_add_surface_from_arrays(RID p_mesh, VisualServer::PrimitiveType p_primitive, const Array &amp; p_arrays, const Array &amp; p_blend_shapes = Array(), uint32_t p_compress_format = ARRAY_COMPRESS_DEFAULT) : void</text><ellipse cx="8403.59" cy="7099.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2272" x="8412.59" y="7102.5151">mesh_add_surface(RID p_mesh, uint32_t p_format, VisualServer::PrimitiveType p_primitive, const PoolVector&lt;uint8_t&gt; &amp; p_array, int p_vertex_count, const PoolVector&lt;uint8_t&gt; &amp; p_index_array, int p_index_count, const AABB &amp; p_aabb, const Vector&lt;PoolVector&lt;uint8_t&gt;&gt; &amp; p_blend_shapes = Vector&lt;PoolVector&lt;uint8_t&gt; &gt;(), const Vector&lt;AABB&gt; &amp; p_bone_aabbs = Vector&lt;AABB&gt;()) = 0 : void</text><ellipse cx="8403.59" cy="7112.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="8412.59" y="7115.3198">mesh_set_blend_shape_count(RID p_mesh, int p_amount) = 0 : void</text><ellipse cx="8403.59" cy="7124.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="328" x="8412.59" y="7128.1245">mesh_get_blend_shape_count(RID p_mesh) const = 0 : int</text><ellipse cx="8403.59" cy="7137.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="538" x="8412.59" y="7140.9292">mesh_set_blend_shape_mode(RID p_mesh, VisualServer::BlendShapeMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="7150.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="492" x="8412.59" y="7153.7339">mesh_get_blend_shape_mode(RID p_mesh) const = 0 : VisualServer::BlendShapeMode</text><ellipse cx="8403.59" cy="7163.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="667" x="8412.59" y="7166.5386">mesh_surface_update_region(RID p_mesh, int p_surface, int p_offset, const PoolVector&lt;uint8_t&gt; &amp; p_data) = 0 : void</text><ellipse cx="8403.59" cy="7176.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="462" x="8412.59" y="7179.3433">mesh_surface_set_material(RID p_mesh, int p_surface, RID p_material) = 0 : void</text><ellipse cx="8403.59" cy="7188.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="8412.59" y="7192.1479">mesh_surface_get_material(RID p_mesh, int p_surface) const = 0 : RID</text><ellipse cx="8403.59" cy="7201.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="8412.59" y="7204.9526">mesh_surface_get_array_len(RID p_mesh, int p_surface) const = 0 : int</text><ellipse cx="8403.59" cy="7214.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="8412.59" y="7217.7573">mesh_surface_get_array_index_len(RID p_mesh, int p_surface) const = 0 : int</text><ellipse cx="8403.59" cy="7227.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="483" x="8412.59" y="7230.562">mesh_surface_get_array(RID p_mesh, int p_surface) const = 0 : PoolVector&lt;uint8_t&gt;</text><ellipse cx="8403.59" cy="7240.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="520" x="8412.59" y="7243.3667">mesh_surface_get_index_array(RID p_mesh, int p_surface) const = 0 : PoolVector&lt;uint8_t&gt;</text><ellipse cx="8403.59" cy="7252.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="8412.59" y="7256.1714">mesh_surface_get_arrays(RID p_mesh, int p_surface) const : Array</text><ellipse cx="8403.59" cy="7265.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="8412.59" y="7268.9761">mesh_surface_get_blend_shape_arrays(RID p_mesh, int p_surface) const : Array</text><ellipse cx="8403.59" cy="7278.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="8412.59" y="7281.7808">mesh_surface_get_format(RID p_mesh, int p_surface) const = 0 : uint32_t</text><ellipse cx="8403.59" cy="7291.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="574" x="8412.59" y="7294.5854">mesh_surface_get_primitive_type(RID p_mesh, int p_surface) const = 0 : VisualServer::PrimitiveType</text><ellipse cx="8403.59" cy="7304.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="8412.59" y="7307.3901">mesh_surface_get_aabb(RID p_mesh, int p_surface) const = 0 : AABB</text><ellipse cx="8403.59" cy="7316.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="584" x="8412.59" y="7320.1948">mesh_surface_get_blend_shapes(RID p_mesh, int p_surface) const = 0 : Vector&lt;PoolVector&lt;uint8_t&gt;&gt;</text><ellipse cx="8403.59" cy="7329.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="8412.59" y="7332.9995">mesh_surface_get_skeleton_aabb(RID p_mesh, int p_surface) const = 0 : Vector&lt;AABB&gt;</text><ellipse cx="8403.59" cy="7342.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="8412.59" y="7345.8042">_mesh_surface_get_skeleton_aabb_bind(RID p_mesh, int p_surface) const : Array</text><ellipse cx="8403.59" cy="7355.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="8412.59" y="7358.6089">mesh_remove_surface(RID p_mesh, int p_index) = 0 : void</text><ellipse cx="8403.59" cy="7368.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="8412.59" y="7371.4136">mesh_get_surface_count(RID p_mesh) const = 0 : int</text><ellipse cx="8403.59" cy="7381.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="402" x="8412.59" y="7384.2183">mesh_set_custom_aabb(RID p_mesh, const AABB &amp; p_aabb) = 0 : void</text><ellipse cx="8403.59" cy="7393.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="8412.59" y="7397.0229">mesh_get_custom_aabb(RID p_mesh) const = 0 : AABB</text><ellipse cx="8403.59" cy="7406.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="8412.59" y="7409.8276">mesh_clear(RID p_mesh) = 0 : void</text><ellipse cx="8403.59" cy="7419.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="8412.59" y="7422.6323">multimesh_create() = 0 : RID</text><ellipse cx="8403.59" cy="7432.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1579" x="8412.59" y="7435.437">multimesh_allocate(RID p_multimesh, int p_instances, VisualServer::MultimeshTransformFormat p_transform_format, VisualServer::MultimeshColorFormat p_color_format, VisualServer::MultimeshCustomDataFormat p_data_format = MULTIMESH_CUSTOM_DATA_NONE) = 0 : void</text><ellipse cx="8403.59" cy="7445.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="8412.59" y="7448.2417">multimesh_get_instance_count(RID p_multimesh) const = 0 : int</text><ellipse cx="8403.59" cy="7457.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="8412.59" y="7461.0464">multimesh_set_mesh(RID p_multimesh, RID p_mesh) = 0 : void</text><ellipse cx="8403.59" cy="7470.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="617" x="8412.59" y="7473.8511">multimesh_instance_set_transform(RID p_multimesh, int p_index, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="7483.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="652" x="8412.59" y="7486.6558">multimesh_instance_set_transform_2d(RID p_multimesh, int p_index, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="7496.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="532" x="8412.59" y="7499.4604">multimesh_instance_set_color(RID p_multimesh, int p_index, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="7509.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="576" x="8412.59" y="7512.2651">multimesh_instance_set_custom_data(RID p_multimesh, int p_index, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="7521.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="312" x="8412.59" y="7525.0698">multimesh_get_mesh(RID p_multimesh) const = 0 : RID</text><ellipse cx="8403.59" cy="7534.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="8412.59" y="7537.8745">multimesh_get_aabb(RID p_multimesh) const = 0 : AABB</text><ellipse cx="8403.59" cy="7547.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="500" x="8412.59" y="7550.6792">multimesh_instance_get_transform(RID p_multimesh, int p_index) const = 0 : Transform</text><ellipse cx="8403.59" cy="7560.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="535" x="8412.59" y="7563.4839">multimesh_instance_get_transform_2d(RID p_multimesh, int p_index) const = 0 : Transform2D</text><ellipse cx="8403.59" cy="7573.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="443" x="8412.59" y="7576.2886">multimesh_instance_get_color(RID p_multimesh, int p_index) const = 0 : Color</text><ellipse cx="8403.59" cy="7585.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="8412.59" y="7589.0933">multimesh_instance_get_custom_data(RID p_multimesh, int p_index) const = 0 : Color</text><ellipse cx="8403.59" cy="7598.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="537" x="8412.59" y="7601.8979">multimesh_set_as_bulk_array(RID p_multimesh, const PoolVector&lt;float&gt; &amp; p_array) = 0 : void</text><ellipse cx="8403.59" cy="7611.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="421" x="8412.59" y="7614.7026">multimesh_set_visible_instances(RID p_multimesh, int p_visible) = 0 : void</text><ellipse cx="8403.59" cy="7624.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="8412.59" y="7627.5073">multimesh_get_visible_instances(RID p_multimesh) const = 0 : int</text><ellipse cx="8403.59" cy="7637.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="165" x="8412.59" y="7640.312">immediate_create() = 0 : RID</text><ellipse cx="8403.59" cy="7649.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="629" x="8412.59" y="7653.1167">immediate_begin(RID p_immediate, VisualServer::PrimitiveType p_rimitive, RID p_texture = = RID()) = 0 : void</text><ellipse cx="8403.59" cy="7662.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="420" x="8412.59" y="7665.9214">immediate_vertex(RID p_immediate, const Vector3 &amp; p_vertex) = 0 : void</text><ellipse cx="8403.59" cy="7675.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="411" x="8412.59" y="7678.7261">immediate_vertex_2d(RID p_immediate, const Vector2 &amp; p_vertex) : void</text><ellipse cx="8403.59" cy="7688.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="426" x="8412.59" y="7691.5308">immediate_normal(RID p_immediate, const Vector3 &amp; p_normal) = 0 : void</text><ellipse cx="8403.59" cy="7701.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="419" x="8412.59" y="7704.3354">immediate_tangent(RID p_immediate, const Plane &amp; p_tangent) = 0 : void</text><ellipse cx="8403.59" cy="7713.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="8412.59" y="7717.1401">immediate_color(RID p_immediate, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="7726.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="8412.59" y="7729.9448">immediate_uv(RID p_immediate, const Vector2 &amp; tex_uv) = 0 : void</text><ellipse cx="8403.59" cy="7739.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="8412.59" y="7742.7495">immediate_uv2(RID p_immediate, const Vector2 &amp; tex_uv) = 0 : void</text><ellipse cx="8403.59" cy="7752.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="251" x="8412.59" y="7755.5542">immediate_end(RID p_immediate) = 0 : void</text><ellipse cx="8403.59" cy="7765.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="258" x="8412.59" y="7768.3589">immediate_clear(RID p_immediate) = 0 : void</text><ellipse cx="8403.59" cy="7777.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="391" x="8412.59" y="7781.1636">immediate_set_material(RID p_immediate, RID p_material) = 0 : void</text><ellipse cx="8403.59" cy="7790.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="330" x="8412.59" y="7793.9683">immediate_get_material(RID p_immediate) const = 0 : RID</text><ellipse cx="8403.59" cy="7803.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="8412.59" y="7806.7729">skeleton_create() = 0 : RID</text><ellipse cx="8403.59" cy="7816.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="481" x="8412.59" y="7819.5776">skeleton_allocate(RID p_skeleton, int p_bones, bool p_2d_skeleton = false) = 0 : void</text><ellipse cx="8403.59" cy="7829.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="8412.59" y="7832.3823">skeleton_get_bone_count(RID p_skeleton) const = 0 : int</text><ellipse cx="8403.59" cy="7841.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="8412.59" y="7845.187">skeleton_bone_set_transform(RID p_skeleton, int p_bone, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="7854.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="8412.59" y="7857.9917">skeleton_bone_get_transform(RID p_skeleton, int p_bone) const = 0 : Transform</text><ellipse cx="8403.59" cy="7867.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="606" x="8412.59" y="7870.7964">skeleton_bone_set_transform_2d(RID p_skeleton, int p_bone, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="7880.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="489" x="8412.59" y="7883.6011">skeleton_bone_get_transform_2d(RID p_skeleton, int p_bone) const = 0 : Transform2D</text><ellipse cx="8403.59" cy="7893.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="8412.59" y="7896.4058">skeleton_set_base_transform_2d(RID p_skeleton, const Transform2D &amp; p_base_transform) = 0 : void</text><ellipse cx="8403.59" cy="7906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="8412.59" y="7909.2104">directional_light_create() = 0 : RID</text><ellipse cx="8403.59" cy="7918.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="8412.59" y="7922.0151">omni_light_create() = 0 : RID</text><ellipse cx="8403.59" cy="7931.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="159" x="8412.59" y="7934.8198">spot_light_create() = 0 : RID</text><ellipse cx="8403.59" cy="7944.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="8412.59" y="7947.6245">light_set_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="7957.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="505" x="8412.59" y="7960.4292">light_set_param(RID p_light, VisualServer::LightParam p_param, float p_value) = 0 : void</text><ellipse cx="8403.59" cy="7970.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="318" x="8412.59" y="7973.2339">light_set_shadow(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="7982.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="8412.59" y="7986.0386">light_set_shadow_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="7995.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="8412.59" y="7998.8433">light_set_projector(RID p_light, RID p_texture) = 0 : void</text><ellipse cx="8403.59" cy="8008.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="8412.59" y="8011.6479">light_set_negative(RID p_light, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8021.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="8412.59" y="8024.4526">light_set_cull_mask(RID p_light, uint32_t p_mask) = 0 : void</text><ellipse cx="8403.59" cy="8034.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="8412.59" y="8037.2573">light_set_reverse_cull_face_mode(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="8046.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="304" x="8412.59" y="8050.062">light_set_use_gi(RID p_light, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8059.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="8412.59" y="8062.8667">light_set_bake_mode(RID p_light, VisualServer::LightBakeMode p_bake_mode) = 0 : void</text><ellipse cx="8403.59" cy="8072.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="564" x="8412.59" y="8075.6714">light_omni_set_shadow_mode(RID p_light, VisualServer::LightOmniShadowMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="8085.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="564" x="8412.59" y="8088.4761">light_omni_set_shadow_detail(RID p_light, VisualServer::LightOmniShadowDetail p_detail) = 0 : void</text><ellipse cx="8403.59" cy="8098.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="625" x="8412.59" y="8101.2808">light_directional_set_shadow_mode(RID p_light, VisualServer::LightDirectionalShadowMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="8110.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="399" x="8412.59" y="8114.0854">light_directional_set_blend_splits(RID p_light, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8123.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="810" x="8412.59" y="8126.8901">light_directional_set_shadow_depth_range_mode(RID p_light, VisualServer::LightDirectionalShadowDepthRangeMode p_range_mode) = 0 : void</text><ellipse cx="8403.59" cy="8136.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="197" x="8412.59" y="8139.6948">reflection_probe_create() = 0 : RID</text><ellipse cx="8403.59" cy="8149.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="631" x="8412.59" y="8152.4995">reflection_probe_set_update_mode(RID p_probe, VisualServer::ReflectionProbeUpdateMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="8162.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="8412.59" y="8165.3042">reflection_probe_set_intensity(RID p_probe, float p_intensity) = 0 : void</text><ellipse cx="8403.59" cy="8174.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="481" x="8412.59" y="8178.1089">reflection_probe_set_interior_ambient(RID p_probe, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="8187.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="8412.59" y="8190.9136">reflection_probe_set_interior_ambient_energy(RID p_probe, float p_energy) = 0 : void</text><ellipse cx="8403.59" cy="8200.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="552" x="8412.59" y="8203.7183">reflection_probe_set_interior_ambient_probe_contribution(RID p_probe, float p_contrib) = 0 : void</text><ellipse cx="8403.59" cy="8213.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="433" x="8412.59" y="8216.5229">reflection_probe_set_max_distance(RID p_probe, float p_distance) = 0 : void</text><ellipse cx="8403.59" cy="8226.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="458" x="8412.59" y="8229.3276">reflection_probe_set_extents(RID p_probe, const Vector3 &amp; p_extents) = 0 : void</text><ellipse cx="8403.59" cy="8238.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="476" x="8412.59" y="8242.1323">reflection_probe_set_origin_offset(RID p_probe, const Vector3 &amp; p_offset) = 0 : void</text><ellipse cx="8403.59" cy="8251.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="8412.59" y="8254.937">reflection_probe_set_as_interior(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8264.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="472" x="8412.59" y="8267.7417">reflection_probe_set_enable_box_projection(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8277.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="8412.59" y="8280.5464">reflection_probe_set_enable_shadows(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8290.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="418" x="8412.59" y="8293.3511">reflection_probe_set_cull_mask(RID p_probe, uint32_t p_layers) = 0 : void</text><ellipse cx="8403.59" cy="8302.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="409" x="8412.59" y="8306.1558">reflection_probe_set_resolution(RID p_probe, int p_resolution) = 0 : void</text><ellipse cx="8403.59" cy="8315.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="8412.59" y="8318.9604">gi_probe_create() = 0 : RID</text><ellipse cx="8403.59" cy="8328.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="8412.59" y="8331.7651">gi_probe_set_bounds(RID p_probe, const AABB &amp; p_bounds) = 0 : void</text><ellipse cx="8403.59" cy="8341.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="8412.59" y="8344.5698">gi_probe_get_bounds(RID p_probe) const = 0 : AABB</text><ellipse cx="8403.59" cy="8354.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="8412.59" y="8357.3745">gi_probe_set_cell_size(RID p_probe, float p_range) = 0 : void</text><ellipse cx="8403.59" cy="8366.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="8412.59" y="8370.1792">gi_probe_get_cell_size(RID p_probe) const = 0 : float</text><ellipse cx="8403.59" cy="8379.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="456" x="8412.59" y="8382.9839">gi_probe_set_to_cell_xform(RID p_probe, const Transform &amp; p_xform) = 0 : void</text><ellipse cx="8403.59" cy="8392.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="361" x="8412.59" y="8395.7886">gi_probe_get_to_cell_xform(RID p_probe) const = 0 : Transform</text><ellipse cx="8403.59" cy="8405.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="484" x="8412.59" y="8408.5933">gi_probe_set_dynamic_data(RID p_probe, const PoolVector&lt;int&gt; &amp; p_data) = 0 : void</text><ellipse cx="8403.59" cy="8418.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="398" x="8412.59" y="8421.3979">gi_probe_get_dynamic_data(RID p_probe) const = 0 : PoolVector&lt;int&gt;</text><ellipse cx="8403.59" cy="8430.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="8412.59" y="8434.2026">gi_probe_set_dynamic_range(RID p_probe, int p_range) = 0 : void</text><ellipse cx="8403.59" cy="8443.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="327" x="8412.59" y="8447.0073">gi_probe_get_dynamic_range(RID p_probe) const = 0 : int</text><ellipse cx="8403.59" cy="8456.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="338" x="8412.59" y="8459.812">gi_probe_set_energy(RID p_probe, float p_range) = 0 : void</text><ellipse cx="8403.59" cy="8469.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="291" x="8412.59" y="8472.6167">gi_probe_get_energy(RID p_probe) const = 0 : float</text><ellipse cx="8403.59" cy="8482.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="321" x="8412.59" y="8485.4214">gi_probe_set_bias(RID p_probe, float p_range) = 0 : void</text><ellipse cx="8403.59" cy="8495.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="274" x="8412.59" y="8498.2261">gi_probe_get_bias(RID p_probe) const = 0 : float</text><ellipse cx="8403.59" cy="8507.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="8412.59" y="8511.0308">gi_probe_set_normal_bias(RID p_probe, float p_range) = 0 : void</text><ellipse cx="8403.59" cy="8520.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="8412.59" y="8523.8354">gi_probe_get_normal_bias(RID p_probe) const = 0 : float</text><ellipse cx="8403.59" cy="8533.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="8412.59" y="8536.6401">gi_probe_set_propagation(RID p_probe, float p_range) = 0 : void</text><ellipse cx="8403.59" cy="8546.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="319" x="8412.59" y="8549.4448">gi_probe_get_propagation(RID p_probe) const = 0 : float</text><ellipse cx="8403.59" cy="8559.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="8412.59" y="8562.2495">gi_probe_set_interior(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8571.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="8412.59" y="8575.0542">gi_probe_is_interior(RID p_probe) const = 0 : bool</text><ellipse cx="8403.59" cy="8584.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="8412.59" y="8587.8589">gi_probe_set_compress(RID p_probe, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8597.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="310" x="8412.59" y="8600.6636">gi_probe_is_compressed(RID p_probe) const = 0 : bool</text><ellipse cx="8403.59" cy="8610.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="203" x="8412.59" y="8613.4683">lightmap_capture_create() = 0 : RID</text><ellipse cx="8403.59" cy="8623.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="460" x="8412.59" y="8626.2729">lightmap_capture_set_bounds(RID p_capture, const AABB &amp; p_bounds) = 0 : void</text><ellipse cx="8403.59" cy="8635.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="8412.59" y="8639.0776">lightmap_capture_get_bounds(RID p_capture) const = 0 : AABB</text><ellipse cx="8403.59" cy="8648.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="535" x="8412.59" y="8651.8823">lightmap_capture_set_octree(RID p_capture, const PoolVector&lt;uint8_t&gt; &amp; p_octree) = 0 : void</text><ellipse cx="8403.59" cy="8661.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="562" x="8412.59" y="8664.687">lightmap_capture_set_octree_cell_transform(RID p_capture, const Transform &amp; p_xform) = 0 : void</text><ellipse cx="8403.59" cy="8674.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="467" x="8412.59" y="8677.4917">lightmap_capture_get_octree_cell_transform(RID p_capture) const = 0 : Transform</text><ellipse cx="8403.59" cy="8687.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="8412.59" y="8690.2964">lightmap_capture_set_octree_cell_subdiv(RID p_capture, int p_subdiv) = 0 : void</text><ellipse cx="8403.59" cy="8699.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="8412.59" y="8703.1011">lightmap_capture_get_octree_cell_subdiv(RID p_capture) const = 0 : int</text><ellipse cx="8403.59" cy="8712.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="8412.59" y="8715.9058">lightmap_capture_get_octree(RID p_capture) const = 0 : PoolVector&lt;uint8_t&gt;</text><ellipse cx="8403.59" cy="8725.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="8412.59" y="8728.7104">lightmap_capture_set_energy(RID p_capture, float p_energy) = 0 : void</text><ellipse cx="8403.59" cy="8738.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="8412.59" y="8741.5151">lightmap_capture_get_energy(RID p_capture) const = 0 : float</text><ellipse cx="8403.59" cy="8751.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="8412.59" y="8754.3198">lightmap_capture_set_interior(RID p_capture, bool p_interior) = 0 : void</text><ellipse cx="8403.59" cy="8763.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="8412.59" y="8767.1245">lightmap_capture_is_interior(RID p_capture) const = 0 : bool</text><ellipse cx="8403.59" cy="8776.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="153" x="8412.59" y="8779.9292">particles_create() = 0 : RID</text><ellipse cx="8403.59" cy="8789.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="8412.59" y="8792.7339">particles_set_emitting(RID p_particles, bool p_emitting) = 0 : void</text><ellipse cx="8403.59" cy="8802.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="8412.59" y="8805.5386">particles_get_emitting(RID p_particles) = 0 : bool</text><ellipse cx="8403.59" cy="8815.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="8412.59" y="8818.3433">particles_set_amount(RID p_particles, int p_amount) = 0 : void</text><ellipse cx="8403.59" cy="8827.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="8412.59" y="8831.1479">particles_set_lifetime(RID p_particles, float p_lifetime) = 0 : void</text><ellipse cx="8403.59" cy="8840.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="380" x="8412.59" y="8843.9526">particles_set_one_shot(RID p_particles, bool p_one_shot) = 0 : void</text><ellipse cx="8403.59" cy="8853.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="8412.59" y="8856.7573">particles_set_pre_process_time(RID p_particles, float p_time) = 0 : void</text><ellipse cx="8403.59" cy="8866.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="8412.59" y="8869.562">particles_set_explosiveness_ratio(RID p_particles, float p_ratio) = 0 : void</text><ellipse cx="8403.59" cy="8879.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="8412.59" y="8882.3667">particles_set_randomness_ratio(RID p_particles, float p_ratio) = 0 : void</text><ellipse cx="8403.59" cy="8891.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="8412.59" y="8895.1714">particles_set_custom_aabb(RID p_particles, const AABB &amp; p_aabb) = 0 : void</text><ellipse cx="8403.59" cy="8904.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="377" x="8412.59" y="8907.9761">particles_set_speed_scale(RID p_particles, float p_scale) = 0 : void</text><ellipse cx="8403.59" cy="8917.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="8412.59" y="8920.7808">particles_set_use_local_coordinates(RID p_particles, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8930.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="8412.59" y="8933.5854">particles_set_process_material(RID p_particles, RID p_material) = 0 : void</text><ellipse cx="8403.59" cy="8943.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="8412.59" y="8946.3901">particles_set_fixed_fps(RID p_particles, int p_fps) = 0 : void</text><ellipse cx="8403.59" cy="8955.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="8412.59" y="8959.1948">particles_set_fractional_delta(RID p_particles, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="8968.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="265" x="8412.59" y="8971.9995">particles_is_inactive(RID p_particles) = 0 : bool</text><ellipse cx="8403.59" cy="8981.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="8412.59" y="8984.8042">particles_request_process(RID p_particles) = 0 : void</text><ellipse cx="8403.59" cy="8994.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="244" x="8412.59" y="8997.6089">particles_restart(RID p_particles) = 0 : void</text><ellipse cx="8403.59" cy="9007.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="540" x="8412.59" y="9010.4136">particles_set_draw_order(RID p_particles, VisualServer::ParticlesDrawOrder p_order) = 0 : void</text><ellipse cx="8403.59" cy="9020.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="372" x="8412.59" y="9023.2183">particles_set_draw_passes(RID p_particles, int p_count) = 0 : void</text><ellipse cx="8403.59" cy="9032.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="466" x="8412.59" y="9036.0229">particles_set_draw_pass_mesh(RID p_particles, int p_pass, RID p_mesh) = 0 : void</text><ellipse cx="8403.59" cy="9045.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="8412.59" y="9048.8276">particles_get_current_aabb(RID p_particles) = 0 : AABB</text><ellipse cx="8403.59" cy="9058.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="528" x="8412.59" y="9061.6323">particles_set_emission_transform(RID p_particles, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="9071.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="148" x="8412.59" y="9074.437">camera_create() = 0 : RID</text><ellipse cx="8403.59" cy="9084.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="578" x="8412.59" y="9087.2417">camera_set_perspective(RID p_camera, float p_fovy_degrees, float p_z_near, float p_z_far) = 0 : void</text><ellipse cx="8403.59" cy="9096.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="518" x="8412.59" y="9100.0464">camera_set_orthogonal(RID p_camera, float p_size, float p_z_near, float p_z_far) = 0 : void</text><ellipse cx="8403.59" cy="9109.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="602" x="8412.59" y="9112.8511">camera_set_frustum(RID p_camera, float p_size, Vector2 p_offset, float p_z_near, float p_z_far) = 0 : void</text><ellipse cx="8403.59" cy="9122.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="462" x="8412.59" y="9125.6558">camera_set_transform(RID p_camera, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="9135.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="8412.59" y="9138.4604">camera_set_cull_mask(RID p_camera, uint32_t p_layers) = 0 : void</text><ellipse cx="8403.59" cy="9148.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="8412.59" y="9151.2651">camera_set_environment(RID p_camera, RID p_env) = 0 : void</text><ellipse cx="8403.59" cy="9160.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="8412.59" y="9164.0698">camera_set_use_vertical_aspect(RID p_camera, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="9173.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="8412.59" y="9176.8745">viewport_create() = 0 : RID</text><ellipse cx="8403.59" cy="9186.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="380" x="8412.59" y="9189.6792">viewport_set_use_arvr(RID p_viewport, bool p_use_arvr) = 0 : void</text><ellipse cx="8403.59" cy="9199.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="8412.59" y="9202.4839">viewport_set_size(RID p_viewport, int p_width, int p_height) = 0 : void</text><ellipse cx="8403.59" cy="9212.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="8412.59" y="9215.2886">viewport_set_active(RID p_viewport, bool p_active) = 0 : void</text><ellipse cx="8403.59" cy="9224.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="8412.59" y="9228.0933">viewport_set_parent_viewport(RID p_viewport, RID p_parent_viewport) = 0 : void</text><ellipse cx="8403.59" cy="9237.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="588" x="8412.59" y="9240.8979">viewport_attach_to_screen(RID p_viewport, const Rect2 &amp; p_rect = Rect2(), int p_screen = 0) = 0 : void</text><ellipse cx="8403.59" cy="9250.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="455" x="8412.59" y="9253.7026">viewport_set_render_direct_to_screen(RID p_viewport, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="9263.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="246" x="8412.59" y="9266.5073">viewport_detach(RID p_viewport) = 0 : void</text><ellipse cx="8403.59" cy="9276.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="8412.59" y="9279.312">viewport_set_update_mode(RID p_viewport, VisualServer::ViewportUpdateMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="9288.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="8412.59" y="9292.1167">viewport_set_vflip(RID p_viewport, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="9301.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="578" x="8412.59" y="9304.9214">viewport_set_clear_mode(RID p_viewport, VisualServer::ViewportClearMode p_clear_mode) = 0 : void</text><ellipse cx="8403.59" cy="9314.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="8412.59" y="9317.7261">viewport_get_texture(RID p_viewport) const = 0 : RID</text><ellipse cx="8403.59" cy="9327.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="382" x="8412.59" y="9330.5308">viewport_set_hide_scenario(RID p_viewport, bool p_hide) = 0 : void</text><ellipse cx="8403.59" cy="9340.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="8412.59" y="9343.3354">viewport_set_hide_canvas(RID p_viewport, bool p_hide) = 0 : void</text><ellipse cx="8403.59" cy="9352.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="8412.59" y="9356.1401">viewport_set_disable_environment(RID p_viewport, bool p_disable) = 0 : void</text><ellipse cx="8403.59" cy="9365.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="380" x="8412.59" y="9368.9448">viewport_set_disable_3d(RID p_viewport, bool p_disable) = 0 : void</text><ellipse cx="8403.59" cy="9378.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="8412.59" y="9381.7495">viewport_set_keep_3d_linear(RID p_viewport, bool p_disable) = 0 : void</text><ellipse cx="8403.59" cy="9391.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="8412.59" y="9394.5542">viewport_attach_camera(RID p_viewport, RID p_camera) = 0 : void</text><ellipse cx="8403.59" cy="9404.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="8412.59" y="9407.3589">viewport_set_scenario(RID p_viewport, RID p_scenario) = 0 : void</text><ellipse cx="8403.59" cy="9416.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="373" x="8412.59" y="9420.1636">viewport_attach_canvas(RID p_viewport, RID p_canvas) = 0 : void</text><ellipse cx="8403.59" cy="9429.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="382" x="8412.59" y="9432.9683">viewport_remove_canvas(RID p_viewport, RID p_canvas) = 0 : void</text><ellipse cx="8403.59" cy="9442.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="595" x="8412.59" y="9445.7729">viewport_set_canvas_transform(RID p_viewport, RID p_canvas, const Transform2D &amp; p_offset) = 0 : void</text><ellipse cx="8403.59" cy="9455.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="463" x="8412.59" y="9458.5776">viewport_set_transparent_background(RID p_viewport, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="9468.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="575" x="8412.59" y="9471.3823">viewport_set_global_canvas_transform(RID p_viewport, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="9480.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="563" x="8412.59" y="9484.187">viewport_set_canvas_stacking(RID p_viewport, RID p_canvas, int p_layer, int p_sublayer) = 0 : void</text><ellipse cx="8403.59" cy="9493.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="8412.59" y="9496.9917">viewport_set_shadow_atlas_size(RID p_viewport, int p_size) = 0 : void</text><ellipse cx="8403.59" cy="9506.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="599" x="8412.59" y="9509.7964">viewport_set_shadow_atlas_quadrant_subdivision(RID p_viewport, int p_quadrant, int p_subdiv) = 0 : void</text><ellipse cx="8403.59" cy="9519.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="8412.59" y="9522.6011">viewport_set_msaa(RID p_viewport, VisualServer::ViewportMSAA p_msaa) = 0 : void</text><ellipse cx="8403.59" cy="9532.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="8412.59" y="9535.4058">viewport_set_use_fxaa(RID p_viewport, bool p_fxaa) = 0 : void</text><ellipse cx="8403.59" cy="9545" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="424" x="8412.59" y="9548.2104">viewport_set_use_debanding(RID p_viewport, bool p_debanding) = 0 : void</text><ellipse cx="8403.59" cy="9557.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="8412.59" y="9561.0151">viewport_set_hdr(RID p_viewport, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="9570.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="489" x="8412.59" y="9573.8198">viewport_set_usage(RID p_viewport, VisualServer::ViewportUsage p_usage) = 0 : void</text><ellipse cx="8403.59" cy="9583.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="525" x="8412.59" y="9586.6245">viewport_get_render_info(RID p_viewport, VisualServer::ViewportRenderInfo p_info) = 0 : int</text><ellipse cx="8403.59" cy="9596.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="548" x="8412.59" y="9599.4292">viewport_set_debug_draw(RID p_viewport, VisualServer::ViewportDebugDraw p_draw) = 0 : void</text><ellipse cx="8403.59" cy="9609.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="177" x="8412.59" y="9612.2339">environment_create() = 0 : RID</text><ellipse cx="8403.59" cy="9621.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="500" x="8412.59" y="9625.0386">environment_set_background(RID p_env, VisualServer::EnvironmentBG p_bg) = 0 : void</text><ellipse cx="8403.59" cy="9634.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="308" x="8412.59" y="9637.8433">environment_set_sky(RID p_env, RID p_sky) = 0 : void</text><ellipse cx="8403.59" cy="9647.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="8412.59" y="9650.6479">environment_set_sky_custom_fov(RID p_env, float p_scale) = 0 : void</text><ellipse cx="8403.59" cy="9660.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="8412.59" y="9663.4526">environment_set_sky_orientation(RID p_env, const Basis &amp; p_orientation) = 0 : void</text><ellipse cx="8403.59" cy="9673.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="8412.59" y="9676.2573">environment_set_bg_color(RID p_env, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="9685.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="376" x="8412.59" y="9689.062">environment_set_bg_energy(RID p_env, float p_energy) = 0 : void</text><ellipse cx="8403.59" cy="9698.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="8412.59" y="9701.8667">environment_set_canvas_max_layer(RID p_env, int p_max_layer) = 0 : void</text><ellipse cx="8403.59" cy="9711.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="734" x="8412.59" y="9714.6714">environment_set_ambient_light(RID p_env, const Color &amp; p_color, float p_energy = 1.0, float p_sky_contribution = 0.0) = 0 : void</text><ellipse cx="8403.59" cy="9724.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="445" x="8412.59" y="9727.4761">environment_set_camera_feed_id(RID p_env, int p_camera_feed_id) = 0 : void</text><ellipse cx="8403.59" cy="9737.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1007" x="8412.59" y="9740.2808">environment_set_dof_blur_near(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void</text><ellipse cx="8403.59" cy="9749.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="997" x="8412.59" y="9753.0854">environment_set_dof_blur_far(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void</text><ellipse cx="8403.59" cy="9762.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1715" x="8412.59" y="9765.8901">environment_set_glow(RID p_env, bool p_enable, int p_level_flags, float p_intensity, float p_strength, float p_bloom_threshold, VisualServer::EnvironmentGlowBlendMode p_blend_mode, float p_hdr_bleed_threshold, float p_hdr_bleed_scale, float p_hdr_luminance_cap, bool p_bicubic_upscale) = 0 : void</text><ellipse cx="8403.59" cy="9775.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1464" x="8412.59" y="9778.6948">environment_set_tonemap(RID p_env, VisualServer::EnvironmentToneMapper p_tone_mapper, float p_exposure, float p_white, bool p_auto_exposure, float p_min_luminance, float p_max_luminance, float p_auto_exp_speed, float p_auto_exp_grey) = 0 : void</text><ellipse cx="8403.59" cy="9788.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="762" x="8412.59" y="9791.4995">environment_set_adjustment(RID p_env, bool p_enable, float p_brightness, float p_contrast, float p_saturation, RID p_ramp) = 0 : void</text><ellipse cx="8403.59" cy="9801.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="869" x="8412.59" y="9804.3042">environment_set_ssr(RID p_env, bool p_enable, int p_max_steps, float p_fade_in, float p_fade_out, float p_depth_tolerance, bool p_roughness) = 0 : void</text><ellipse cx="8403.59" cy="9813.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1885" x="8412.59" y="9817.1089">environment_set_ssao(RID p_env, bool p_enable, float p_radius, float p_intensity, float p_radius2, float p_intensity2, float p_bias, float p_light_affect, float p_ao_channel_affect, const Color &amp; p_color, VisualServer::EnvironmentSSAOQuality p_quality, VisualServer::EnvironmentSSAOBlur p_blur, float p_bilateral_sharpness) = 0 : void</text><ellipse cx="8403.59" cy="9826.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="736" x="8412.59" y="9829.9136">environment_set_fog(RID p_env, bool p_enable, const Color &amp; p_color, const Color &amp; p_sun_color, float p_sun_amount) = 0 : void</text><ellipse cx="8403.59" cy="9839.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="948" x="8412.59" y="9842.7183">environment_set_fog_depth(RID p_env, bool p_enable, float p_depth_begin, float p_depth_end, float p_depth_curve, bool p_transmit, float p_transmit_curve) = 0 : void</text><ellipse cx="8403.59" cy="9852.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="723" x="8412.59" y="9855.5229">environment_set_fog_height(RID p_env, bool p_enable, float p_min_height, float p_max_height, float p_height_curve) = 0 : void</text><ellipse cx="8403.59" cy="9865.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="153" x="8412.59" y="9868.3276">scenario_create() = 0 : RID</text><ellipse cx="8403.59" cy="9877.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="557" x="8412.59" y="9881.1323">scenario_set_debug(RID p_scenario, VisualServer::ScenarioDebugMode p_debug_mode) = 0 : void</text><ellipse cx="8403.59" cy="9890.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="417" x="8412.59" y="9893.937">scenario_set_environment(RID p_scenario, RID p_environment) = 0 : void</text><ellipse cx="8403.59" cy="9903.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="8412.59" y="9906.7417">scenario_set_reflection_atlas_size(RID p_scenario, int p_size, int p_subdiv) = 0 : void</text><ellipse cx="8403.59" cy="9916.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="466" x="8412.59" y="9919.5464">scenario_set_fallback_environment(RID p_scenario, RID p_environment) = 0 : void</text><ellipse cx="8403.59" cy="9929.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="8412.59" y="9932.3511">instance_create2(RID p_base, RID p_scenario) : RID</text><ellipse cx="8403.59" cy="9941.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="152" x="8412.59" y="9945.1558">instance_create() = 0 : RID</text><ellipse cx="8403.59" cy="9954.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="8412.59" y="9957.9604">instance_set_base(RID p_instance, RID p_base) = 0 : void</text><ellipse cx="8403.59" cy="9967.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="8412.59" y="9970.7651">instance_set_scenario(RID p_instance, RID p_scenario) = 0 : void</text><ellipse cx="8403.59" cy="9980.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="8412.59" y="9983.5698">instance_set_layer_mask(RID p_instance, uint32_t p_mask) = 0 : void</text><ellipse cx="8403.59" cy="9993.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="470" x="8412.59" y="9996.3745">instance_set_transform(RID p_instance, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="10005.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="430" x="8412.59" y="10009.1792">instance_attach_object_instance_id(RID p_instance, ObjectID p_id) = 0 : void</text><ellipse cx="8403.59" cy="10018.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="8412.59" y="10021.9839">instance_set_blend_shape_weight(RID p_instance, int p_shape, float p_weight) = 0 : void</text><ellipse cx="8403.59" cy="10031.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="494" x="8412.59" y="10034.7886">instance_set_surface_material(RID p_instance, int p_surface, RID p_material) = 0 : void</text><ellipse cx="8403.59" cy="10044.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="8412.59" y="10047.5933">instance_set_visible(RID p_instance, bool p_visible) = 0 : void</text><ellipse cx="8403.59" cy="10057.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="861" x="8412.59" y="10060.3979">instance_set_use_lightmap(RID p_instance, RID p_lightmap_instance, RID p_lightmap, int p_lightmap_slice, const Rect2 &amp; p_lightmap_uv_rect) = 0 : void</text><ellipse cx="8403.59" cy="10069.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="8412.59" y="10073.2026">instance_set_custom_aabb(RID p_instance, AABB aabb) = 0 : void</text><ellipse cx="8403.59" cy="10082.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="383" x="8412.59" y="10086.0073">instance_attach_skeleton(RID p_instance, RID p_skeleton) = 0 : void</text><ellipse cx="8403.59" cy="10095.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="8412.59" y="10098.812">instance_set_exterior(RID p_instance, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="10108.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="452" x="8412.59" y="10111.6167">instance_set_extra_visibility_margin(RID p_instance, real_t p_margin) = 0 : void</text><ellipse cx="8403.59" cy="10121.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="8412.59" y="10124.4214">instances_cull_aabb(const AABB &amp; p_aabb, RID p_scenario = = RID()) const = 0 : Vector&lt;ObjectID&gt;</text><ellipse cx="8403.59" cy="10134.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="694" x="8412.59" y="10137.2261">instances_cull_ray(const Vector3 &amp; p_from, const Vector3 &amp; p_to, RID p_scenario = = RID()) const = 0 : Vector&lt;ObjectID&gt;</text><ellipse cx="8403.59" cy="10146.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="645" x="8412.59" y="10150.0308">instances_cull_convex(const Vector&lt;Plane&gt; &amp; p_convex, RID p_scenario = = RID()) const = 0 : Vector&lt;ObjectID&gt;</text><ellipse cx="8403.59" cy="10159.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="507" x="8412.59" y="10162.8354">_instances_cull_aabb_bind(const AABB &amp; p_aabb, RID p_scenario = = RID()) const : Array</text><ellipse cx="8403.59" cy="10172.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="8412.59" y="10175.6401">_instances_cull_ray_bind(const Vector3 &amp; p_from, const Vector3 &amp; p_to, RID p_scenario = = RID()) const : Array</text><ellipse cx="8403.59" cy="10185.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="529" x="8412.59" y="10188.4448">_instances_cull_convex_bind(const Array &amp; p_convex, RID p_scenario = = RID()) const : Array</text><ellipse cx="8403.59" cy="10198.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="8412.59" y="10201.2495">instance_geometry_set_flag(RID p_instance, VisualServer::InstanceFlags p_flags, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="10210.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="773" x="8412.59" y="10214.0542">instance_geometry_set_cast_shadows_setting(RID p_instance, VisualServer::ShadowCastingSetting p_shadow_casting_setting) = 0 : void</text><ellipse cx="8403.59" cy="10223.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="480" x="8412.59" y="10226.8589">instance_geometry_set_material_override(RID p_instance, RID p_material) = 0 : void</text><ellipse cx="8403.59" cy="10236.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="739" x="8412.59" y="10239.6636">instance_geometry_set_draw_range(RID p_instance, float p_min, float p_max, float p_min_margin, float p_max_margin) = 0 : void</text><ellipse cx="8403.59" cy="10249.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="527" x="8412.59" y="10252.4683">instance_geometry_set_as_instance_lod(RID p_instance, RID p_as_lod_of_instance) = 0 : void</text><ellipse cx="8403.59" cy="10262.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="145" x="8412.59" y="10265.2729">canvas_create() = 0 : RID</text><ellipse cx="8403.59" cy="10274.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="526" x="8412.59" y="10278.0776">canvas_set_item_mirroring(RID p_canvas, RID p_item, const Point2 &amp; p_mirroring) = 0 : void</text><ellipse cx="8403.59" cy="10287.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="8412.59" y="10290.8823">canvas_set_modulate(RID p_canvas, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="10300.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="8412.59" y="10303.687">canvas_set_parent(RID p_canvas, RID p_parent, float p_scale) = 0 : void</text><ellipse cx="8403.59" cy="10313.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="293" x="8412.59" y="10316.4917">canvas_set_disable_scale(bool p_disable) = 0 : void</text><ellipse cx="8403.59" cy="10326.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="8412.59" y="10329.2964">canvas_item_create() = 0 : RID</text><ellipse cx="8403.59" cy="10338.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="8412.59" y="10342.1011">canvas_item_set_parent(RID p_item, RID p_parent) = 0 : void</text><ellipse cx="8403.59" cy="10351.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="8412.59" y="10354.9058">canvas_item_set_visible(RID p_item, bool p_visible) = 0 : void</text><ellipse cx="8403.59" cy="10364.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="8412.59" y="10367.7104">canvas_item_set_light_mask(RID p_item, int p_mask) = 0 : void</text><ellipse cx="8403.59" cy="10377.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="8412.59" y="10380.5151">canvas_item_set_update_when_visible(RID p_item, bool p_update) = 0 : void</text><ellipse cx="8403.59" cy="10390.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="8412.59" y="10393.3198">canvas_item_set_transform(RID p_item, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="10402.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="8412.59" y="10406.1245">canvas_item_set_clip(RID p_item, bool p_clip) = 0 : void</text><ellipse cx="8403.59" cy="10415.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="8412.59" y="10418.9292">canvas_item_set_distance_field_mode(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="10428.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="599" x="8412.59" y="10431.7339">canvas_item_set_custom_rect(RID p_item, bool p_custom_rect, const Rect2 &amp; p_rect = Rect2()) = 0 : void</text><ellipse cx="8403.59" cy="10441.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="8412.59" y="10444.5386">canvas_item_set_modulate(RID p_item, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="10454.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="8412.59" y="10457.3433">canvas_item_set_self_modulate(RID p_item, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="10466.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="8412.59" y="10470.1479">canvas_item_set_draw_behind_parent(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="10479.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="904" x="8412.59" y="10482.9526">canvas_item_add_line(RID p_item, const Point2 &amp; p_from, const Point2 &amp; p_to, const Color &amp; p_color, float p_width = 1.0, bool p_antialiased = false) = 0 : void</text><ellipse cx="8403.59" cy="10492.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="933" x="8412.59" y="10495.7573">canvas_item_add_polyline(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void</text><ellipse cx="8403.59" cy="10505.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="937" x="8412.59" y="10508.562">canvas_item_add_multiline(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void</text><ellipse cx="8403.59" cy="10518.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="511" x="8412.59" y="10521.3667">canvas_item_add_rect(RID p_item, const Rect2 &amp; p_rect, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="10530.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="605" x="8412.59" y="10534.1714">canvas_item_add_circle(RID p_item, const Point2 &amp; p_pos, float p_radius, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="10543.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1191" x="8412.59" y="10546.9761">canvas_item_add_texture_rect(RID p_item, const Rect2 &amp; p_rect, RID p_texture, bool p_tile = false, const Color &amp; p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="8403.59" cy="10556.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1404" x="8412.59" y="10559.7808">canvas_item_add_texture_rect_region(RID p_item, const Rect2 &amp; p_rect, RID p_texture, const Rect2 &amp; p_src_rect, const Color &amp; p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID(), bool p_clip_uv = false) = 0 : void</text><ellipse cx="8403.59" cy="10569.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2427" x="8412.59" y="10572.5854">canvas_item_add_nine_patch(RID p_item, const Rect2 &amp; p_rect, const Rect2 &amp; p_source, RID p_texture, const Vector2 &amp; p_topleft, const Vector2 &amp; p_bottomright, VisualServer::NinePatchAxisMode p_x_axis_mode = NINE_PATCH_STRETCH, VisualServer::NinePatchAxisMode p_y_axis_mode = NINE_PATCH_STRETCH, bool p_draw_center = true, const Color &amp; p_modulate = Color(1, 1, 1), RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="8403.59" cy="10582.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1224" x="8412.59" y="10585.3901">canvas_item_add_primitive(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs, RID p_texture, float p_width = 1.0, RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="8403.59" cy="10594.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1430" x="8412.59" y="10598.1948">canvas_item_add_polygon(RID p_item, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs = Vector&lt;Point2&gt;(), RID p_texture = = RID(), RID p_normal_map = = RID(), bool p_antialiased = false) = 0 : void</text><ellipse cx="8403.59" cy="10607.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2540" x="8412.59" y="10610.9995">canvas_item_add_triangle_array(RID p_item, const Vector&lt;int&gt; &amp; p_indices, const Vector&lt;Point2&gt; &amp; p_points, const Vector&lt;Color&gt; &amp; p_colors, const Vector&lt;Point2&gt; &amp; p_uvs = Vector&lt;Point2&gt;(), const Vector&lt;int&gt; &amp; p_bones = Vector&lt;int&gt;(), const Vector&lt;float&gt; &amp; p_weights = Vector&lt;float&gt;(), RID p_texture = = RID(), int p_count = -1, RID p_normal_map = = RID(), bool p_antialiased = false, bool p_antialiasing_use_indices = false) = 0 : void</text><ellipse cx="8403.59" cy="10620.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1248" x="8412.59" y="10623.8042">canvas_item_add_mesh(RID p_item, const RID &amp; p_mesh, const Transform2D &amp; p_transform = Transform2D(), const Color &amp; p_modulate = Color(1, 1, 1), RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="8403.59" cy="10633.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="681" x="8412.59" y="10636.6089">canvas_item_add_multimesh(RID p_item, RID p_mesh, RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void</text><ellipse cx="8403.59" cy="10646.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="573" x="8412.59" y="10649.4136">canvas_item_add_particles(RID p_item, RID p_particles, RID p_texture, RID p_normal_map) = 0 : void</text><ellipse cx="8403.59" cy="10659.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="514" x="8412.59" y="10662.2183">canvas_item_add_set_transform(RID p_item, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="10671.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="8412.59" y="10675.0229">canvas_item_add_clip_ignore(RID p_item, bool p_ignore) = 0 : void</text><ellipse cx="8403.59" cy="10684.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="422" x="8412.59" y="10687.8276">canvas_item_set_sort_children_by_y(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="10697.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="8412.59" y="10700.6323">canvas_item_set_z_index(RID p_item, int p_z) = 0 : void</text><ellipse cx="8403.59" cy="10710.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="450" x="8412.59" y="10713.437">canvas_item_set_z_as_relative_to_parent(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="10723.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="552" x="8412.59" y="10726.2417">canvas_item_set_copy_to_backbuffer(RID p_item, bool p_enable, const Rect2 &amp; p_rect) = 0 : void</text><ellipse cx="8403.59" cy="10735.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="8412.59" y="10739.0464">canvas_item_attach_skeleton(RID p_item, RID p_skeleton) = 0 : void</text><ellipse cx="8403.59" cy="10748.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="8412.59" y="10751.8511">canvas_item_clear(RID p_item) = 0 : void</text><ellipse cx="8403.59" cy="10761.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="8412.59" y="10764.6558">canvas_item_set_draw_index(RID p_item, int p_index) = 0 : void</text><ellipse cx="8403.59" cy="10774.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="8412.59" y="10777.4604">canvas_item_set_material(RID p_item, RID p_material) = 0 : void</text><ellipse cx="8403.59" cy="10787.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="8412.59" y="10790.2651">canvas_item_set_use_parent_material(RID p_item, bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="10799.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="8412.59" y="10803.0698">canvas_light_create() = 0 : RID</text><ellipse cx="8403.59" cy="10812.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="386" x="8412.59" y="10815.8745">canvas_light_attach_to_canvas(RID p_light, RID p_canvas) = 0 : void</text><ellipse cx="8403.59" cy="10825.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="8412.59" y="10828.6792">canvas_light_set_enabled(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="10838.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="335" x="8412.59" y="10841.4839">canvas_light_set_scale(RID p_light, float p_scale) = 0 : void</text><ellipse cx="8403.59" cy="10851.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="485" x="8412.59" y="10854.2886">canvas_light_set_transform(RID p_light, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="8403.59" cy="10863.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="353" x="8412.59" y="10867.0933">canvas_light_set_texture(RID p_light, RID p_texture) = 0 : void</text><ellipse cx="8403.59" cy="10876.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="8412.59" y="10879.8979">canvas_light_set_texture_offset(RID p_light, const Vector2 &amp; p_offset) = 0 : void</text><ellipse cx="8403.59" cy="10889.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="385" x="8412.59" y="10892.7026">canvas_light_set_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="10902.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="8412.59" y="10905.5073">canvas_light_set_height(RID p_light, float p_height) = 0 : void</text><ellipse cx="8403.59" cy="10915.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="8412.59" y="10918.312">canvas_light_set_energy(RID p_light, float p_energy) = 0 : void</text><ellipse cx="8403.59" cy="10927.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="420" x="8412.59" y="10931.1167">canvas_light_set_z_range(RID p_light, int p_min_z, int p_max_z) = 0 : void</text><ellipse cx="8403.59" cy="10940.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="489" x="8412.59" y="10943.9214">canvas_light_set_layer_range(RID p_light, int p_min_layer, int p_max_layer) = 0 : void</text><ellipse cx="8403.59" cy="10953.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="382" x="8412.59" y="10956.7261">canvas_light_set_item_cull_mask(RID p_light, int p_mask) = 0 : void</text><ellipse cx="8403.59" cy="10966.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="8412.59" y="10969.5308">canvas_light_set_item_shadow_cull_mask(RID p_light, int p_mask) = 0 : void</text><ellipse cx="8403.59" cy="10979.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="495" x="8412.59" y="10982.3354">canvas_light_set_mode(RID p_light, VisualServer::CanvasLightMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="10991.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="415" x="8412.59" y="10995.1401">canvas_light_set_shadow_enabled(RID p_light, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="11004.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="399" x="8412.59" y="11007.9448">canvas_light_set_shadow_buffer_size(RID p_light, int p_size) = 0 : void</text><ellipse cx="8403.59" cy="11017.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="8412.59" y="11020.7495">canvas_light_set_shadow_gradient_length(RID p_light, float p_length) = 0 : void</text><ellipse cx="8403.59" cy="11030.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="574" x="8412.59" y="11033.5542">canvas_light_set_shadow_filter(RID p_light, VisualServer::CanvasLightShadowFilter p_filter) = 0 : void</text><ellipse cx="8403.59" cy="11043.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="8412.59" y="11046.3589">canvas_light_set_shadow_color(RID p_light, const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="11055.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="8412.59" y="11059.1636">canvas_light_set_shadow_smooth(RID p_light, float p_smooth) = 0 : void</text><ellipse cx="8403.59" cy="11068.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="229" x="8412.59" y="11071.9683">canvas_light_occluder_create() = 0 : RID</text><ellipse cx="8403.59" cy="11081.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="464" x="8412.59" y="11084.7729">canvas_light_occluder_attach_to_canvas(RID p_occluder, RID p_canvas) = 0 : void</text><ellipse cx="8403.59" cy="11094.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="444" x="8412.59" y="11097.5776">canvas_light_occluder_set_enabled(RID p_occluder, bool p_enabled) = 0 : void</text><ellipse cx="8403.59" cy="11107.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="439" x="8412.59" y="11110.3823">canvas_light_occluder_set_polygon(RID p_occluder, RID p_polygon) = 0 : void</text><ellipse cx="8403.59" cy="11119.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="541" x="8412.59" y="11123.187">canvas_light_occluder_set_transform(RID p_occluder, const Transform2D &amp; p_xform) = 0 : void</text><ellipse cx="8403.59" cy="11132.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="8412.59" y="11135.9917">canvas_light_occluder_set_light_mask(RID p_occluder, int p_mask) = 0 : void</text><ellipse cx="8403.59" cy="11145.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="250" x="8412.59" y="11148.7964">canvas_occluder_polygon_create() = 0 : RID</text><ellipse cx="8403.59" cy="11158.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="725" x="8412.59" y="11161.6011">canvas_occluder_polygon_set_shape(RID p_occluder_polygon, const PoolVector&lt;Vector2&gt; &amp; p_shape, bool p_closed) = 0 : void</text><ellipse cx="8403.59" cy="11171.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="691" x="8412.59" y="11174.4058">canvas_occluder_polygon_set_shape_as_lines(RID p_occluder_polygon, const PoolVector&lt;Vector2&gt; &amp; p_shape) = 0 : void</text><ellipse cx="8403.59" cy="11184" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="759" x="8412.59" y="11187.2104">canvas_occluder_polygon_set_cull_mode(RID p_occluder_polygon, VisualServer::CanvasOccluderPolygonCullMode p_mode) = 0 : void</text><ellipse cx="8403.59" cy="11196.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="453" x="8412.59" y="11200.0151">black_bars_set_margins(int p_left, int p_top, int p_right, int p_bottom) = 0 : void</text><ellipse cx="8403.59" cy="11209.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="8412.59" y="11212.8198">black_bars_set_images(RID p_left, RID p_top, RID p_right, RID p_bottom) = 0 : void</text><ellipse cx="8403.59" cy="11222.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="8412.59" y="11225.6245">free(RID p_rid) = 0 : void</text><ellipse cx="8403.59" cy="11235.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="685" x="8412.59" y="11238.4292">request_frame_drawn_callback(Object * p_where, const StringName &amp; p_method, const Variant &amp; p_userdata) = 0 : void</text><ellipse cx="8403.59" cy="11248.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="401" x="8412.59" y="11251.2339">draw(bool p_swap_buffers = true, double frame_step = 0.0) = 0 : void</text><ellipse cx="8403.59" cy="11260.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="8412.59" y="11264.0386">sync() = 0 : void</text><ellipse cx="8403.59" cy="11273.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="8412.59" y="11276.8433">has_changed() const = 0 : bool</text><ellipse cx="8403.59" cy="11286.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="8412.59" y="11289.6479">init() = 0 : void</text><ellipse cx="8403.59" cy="11299.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="8412.59" y="11302.4526">finish() = 0 : void</text><ellipse cx="8403.59" cy="11312.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="8412.59" y="11315.2573">get_render_info(VisualServer::RenderInfo p_info) = 0 : uint64_t</text><ellipse cx="8403.59" cy="11324.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="254" x="8412.59" y="11328.062">get_video_adapter_name() const = 0 : String</text><ellipse cx="8403.59" cy="11337.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="8412.59" y="11340.8667">get_video_adapter_vendor() const = 0 : String</text><ellipse cx="8403.59" cy="11350.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="141" x="8412.59" y="11353.6714">get_test_cube() = 0 : RID</text><ellipse cx="8403.59" cy="11363.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="8412.59" y="11366.4761">get_test_texture() : RID</text><ellipse cx="8403.59" cy="11376.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="8412.59" y="11379.2808">get_white_texture() : RID</text><ellipse cx="8403.59" cy="11388.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="8412.59" y="11392.0854">make_sphere_mesh(int p_lats, int p_lons, float p_radius) : RID</text><ellipse cx="8403.59" cy="11401.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="577" x="8412.59" y="11404.8901">mesh_add_surface_from_mesh_data(RID p_mesh, const Geometry::MeshData &amp; p_mesh_data) : void</text><ellipse cx="8403.59" cy="11414.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="516" x="8412.59" y="11417.6948">mesh_add_surface_from_planes(RID p_mesh, const PoolVector&lt;Plane&gt; &amp; p_planes) : void</text><ellipse cx="8403.59" cy="11427.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="677" x="8412.59" y="11430.4995">set_boot_image(const Ref&lt;Image&gt; &amp; p_image, const Color &amp; p_color, bool p_scale, bool p_use_filter = true) = 0 : void</text><ellipse cx="8403.59" cy="11440.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="8412.59" y="11443.3042">set_default_clear_color(const Color &amp; p_color) = 0 : void</text><ellipse cx="8403.59" cy="11452.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="267" x="8412.59" y="11456.1089">set_shader_time_scale(float p_scale) = 0 : void</text><ellipse cx="8403.59" cy="11465.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="8412.59" y="11468.9136">has_feature(VisualServer::Features p_feature) const = 0 : bool</text><ellipse cx="8403.59" cy="11478.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="8412.59" y="11481.7183">has_os_feature(const String &amp; p_feature) const = 0 : bool</text><ellipse cx="8403.59" cy="11491.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="8412.59" y="11494.5229">set_debug_generate_wireframes(bool p_generate) = 0 : void</text><ellipse cx="8403.59" cy="11504.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="254" x="8412.59" y="11507.3276">call_set_use_vsync(bool p_enable) = 0 : void</text><ellipse cx="8403.59" cy="11516.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="8412.59" y="11520.1323">is_low_end() const = 0 : bool</text><ellipse cx="8403.59" cy="11529.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="8412.59" y="11532.937">is_render_loop_enabled() const : bool</text><ellipse cx="8403.59" cy="11542.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="8412.59" y="11545.7417">set_render_loop_enabled(bool p_enabled) : void</text><ellipse cx="8403.59" cy="11555.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="8412.59" y="11558.5464">VisualServer() : void</text><ellipse cx="8403.59" cy="11568.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="8412.59" y="11571.3511">~VisualServer() : void</text></a><!--MD5=[8bd677d40488ae3737ee9bebc9a74ec6]
class C_0001559146041463814963--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39" target="_top" title="PhysicsDirectBodyState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39" xlink:show="new" xlink:title="PhysicsDirectBodyState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="675.4297" id="C_0001559146041463814963" style="stroke: #A80036; stroke-width: 1.5;" width="472" x="11093.59" y="8495.4531"/><ellipse cx="11252.34" cy="8511.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M11252.4494,8506.7969 L11251.2931,8511.875 L11253.6213,8511.875 L11252.4494,8506.7969 Z M11250.965,8504.5625 L11253.9494,8504.5625 L11257.3088,8516.9531 L11254.8556,8516.9531 L11254.09,8513.8906 L11250.8088,8513.8906 L11250.0588,8516.9531 L11247.6213,8516.9531 L11250.965,8504.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="11272.84" y="8515.6074">PhysicsDirectBodyState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11094.59" x2="11564.59" y1="8527.4531" y2="8527.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11094.59" x2="11564.59" y1="8535.4531" y2="8535.4531"/><ellipse cx="11104.59" cy="8546.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="11113.59" y="8549.6636">get_class() const : String</text><ellipse cx="11104.59" cy="8559.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="11113.59" y="8562.4683">_get_class_namev() const : const StringName *</text><ellipse cx="11104.59" cy="8572.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="11113.59" y="8575.2729">get_class_ptr_static() : void *</text><ellipse cx="11104.59" cy="8584.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="11113.59" y="8588.0776">get_class_static() : String</text><ellipse cx="11104.59" cy="8597.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="11113.59" y="8600.8823">get_parent_class_static() : String</text><ellipse cx="11104.59" cy="8610.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="11113.59" y="8613.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="11104.59" cy="8623.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="11113.59" y="8626.4917">get_category_static() : String</text><ellipse cx="11104.59" cy="8636.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="11113.59" y="8639.2964">inherits_static() : String</text><ellipse cx="11104.59" cy="8648.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="11113.59" y="8652.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="11104.59" cy="8661.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11113.59" y="8664.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="11104.59" cy="8674.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="11113.59" y="8677.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="11104.59" cy="8687.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="11113.59" y="8690.5151">initialize_class() : void</text><ellipse cx="11104.59" cy="8700.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="11113.59" y="8703.3198">get_total_gravity() const = 0 : Vector3</text><ellipse cx="11104.59" cy="8712.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="11113.59" y="8716.1245">get_total_angular_damp() const = 0 : float</text><ellipse cx="11104.59" cy="8725.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="11113.59" y="8728.9292">get_total_linear_damp() const = 0 : float</text><ellipse cx="11104.59" cy="8738.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="235" x="11113.59" y="8741.7339">get_center_of_mass() const = 0 : Vector3</text><ellipse cx="11104.59" cy="8751.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="255" x="11113.59" y="8754.5386">get_principal_inertia_axes() const = 0 : Basis</text><ellipse cx="11104.59" cy="8764.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="11113.59" y="8767.3433">get_inverse_mass() const = 0 : float</text><ellipse cx="11104.59" cy="8776.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="11113.59" y="8780.1479">get_inverse_inertia() const = 0 : Vector3</text><ellipse cx="11104.59" cy="8789.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="258" x="11113.59" y="8792.9526">get_inverse_inertia_tensor() const = 0 : Basis</text><ellipse cx="11104.59" cy="8802.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="11113.59" y="8805.7573">set_linear_velocity(const Vector3 &amp; p_velocity) = 0 : void</text><ellipse cx="11104.59" cy="8815.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="11113.59" y="8818.562">get_linear_velocity() const = 0 : Vector3</text><ellipse cx="11104.59" cy="8828.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="336" x="11113.59" y="8831.3667">set_angular_velocity(const Vector3 &amp; p_velocity) = 0 : void</text><ellipse cx="11104.59" cy="8840.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="11113.59" y="8844.1714">get_angular_velocity() const = 0 : Vector3</text><ellipse cx="11104.59" cy="8853.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="11113.59" y="8856.9761">set_transform(const Transform &amp; p_transform) = 0 : void</text><ellipse cx="11104.59" cy="8866.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="11113.59" y="8869.7808">get_transform() const = 0 : Transform</text><ellipse cx="11104.59" cy="8879.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="11113.59" y="8882.5854">add_central_force(const Vector3 &amp; p_force) = 0 : void</text><ellipse cx="11104.59" cy="8892.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="11113.59" y="8895.3901">add_force(const Vector3 &amp; p_force, const Vector3 &amp; p_pos) = 0 : void</text><ellipse cx="11104.59" cy="8904.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="11113.59" y="8908.1948">add_torque(const Vector3 &amp; p_torque) = 0 : void</text><ellipse cx="11104.59" cy="8917.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="11113.59" y="8920.9995">apply_central_impulse(const Vector3 &amp; p_j) = 0 : void</text><ellipse cx="11104.59" cy="8930.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="11113.59" y="8933.8042">apply_impulse(const Vector3 &amp; p_pos, const Vector3 &amp; p_j) = 0 : void</text><ellipse cx="11104.59" cy="8943.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="11113.59" y="8946.6089">apply_torque_impulse(const Vector3 &amp; p_j) = 0 : void</text><ellipse cx="11104.59" cy="8956.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="11113.59" y="8959.4136">set_sleep_state(bool p_enable) = 0 : void</text><ellipse cx="11104.59" cy="8969.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="11113.59" y="8972.2183">is_sleeping() const = 0 : bool</text><ellipse cx="11104.59" cy="8981.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="11113.59" y="8985.0229">get_contact_count() const = 0 : int</text><ellipse cx="11104.59" cy="8994.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="11113.59" y="8997.8276">get_contact_local_position(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="11104.59" cy="9007.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="11113.59" y="9010.6323">get_contact_local_normal(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="11104.59" cy="9020.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="11113.59" y="9023.437">get_contact_impulse(int p_contact_idx) const = 0 : float</text><ellipse cx="11104.59" cy="9033.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="324" x="11113.59" y="9036.2417">get_contact_local_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="11104.59" cy="9045.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="304" x="11113.59" y="9049.0464">get_contact_collider(int p_contact_idx) const = 0 : RID</text><ellipse cx="11104.59" cy="9058.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="11113.59" y="9061.8511">get_contact_collider_position(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="11104.59" cy="9071.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="11113.59" y="9074.6558">get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID</text><ellipse cx="11104.59" cy="9084.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="11113.59" y="9087.4604">get_contact_collider_object(int p_contact_idx) const : Object *</text><ellipse cx="11104.59" cy="9097.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="11113.59" y="9100.2651">get_contact_collider_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="11104.59" cy="9109.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="446" x="11113.59" y="9113.0698">get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector3</text><ellipse cx="11104.59" cy="9122.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="11113.59" y="9125.8745">get_step() const = 0 : real_t</text><ellipse cx="11104.59" cy="9135.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="11113.59" y="9138.6792">integrate_forces() : void</text><ellipse cx="11104.59" cy="9148.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="283" x="11113.59" y="9151.4839">get_space_state() = 0 : PhysicsDirectSpaceState *</text><ellipse cx="11104.59" cy="9161.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="11113.59" y="9164.2886">PhysicsDirectBodyState() : void</text></a><!--MD5=[123a6318eb7c3f47a6d4372e2b561658]
class C_0000503002593685351124--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143" target="_top" title="PhysicsDirectSpaceState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143" xlink:show="new" xlink:title="PhysicsDirectSpaceState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="304.0938" id="C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.5;" width="2171" x="26137.09" y="2199.9531"/><ellipse cx="27141.34" cy="2215.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27141.4494,2211.2969 L27140.2931,2216.375 L27142.6213,2216.375 L27141.4494,2211.2969 Z M27139.965,2209.0625 L27142.9494,2209.0625 L27146.3088,2221.4531 L27143.8556,2221.4531 L27143.09,2218.3906 L27139.8088,2218.3906 L27139.0588,2221.4531 L27136.6213,2221.4531 L27139.965,2209.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="27161.84" y="2220.1074">PhysicsDirectSpaceState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26138.09" x2="28307.09" y1="2231.9531" y2="2231.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="26138.09" x2="28307.09" y1="2239.9531" y2="2239.9531"/><ellipse cx="26148.09" cy="2250.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26157.09" y="2254.1636">get_class() const : String</text><ellipse cx="26148.09" cy="2263.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26157.09" y="2266.9683">_get_class_namev() const : const StringName *</text><ellipse cx="26148.09" cy="2276.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="26157.09" y="2279.7729">get_class_ptr_static() : void *</text><ellipse cx="26148.09" cy="2289.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26157.09" y="2292.5776">get_class_static() : String</text><ellipse cx="26148.09" cy="2302.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="26157.09" y="2305.3823">get_parent_class_static() : String</text><ellipse cx="26148.09" cy="2314.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="26157.09" y="2318.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="26148.09" cy="2327.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="26157.09" y="2330.9917">get_category_static() : String</text><ellipse cx="26148.09" cy="2340.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="26157.09" y="2343.7964">inherits_static() : String</text><ellipse cx="26148.09" cy="2353.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="26157.09" y="2356.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="26148.09" cy="2366.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="26157.09" y="2369.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="26148.09" cy="2379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="26157.09" y="2382.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="26148.09" cy="2391.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="26157.09" y="2395.0151">initialize_class() : void</text><ellipse cx="26148.09" cy="2404.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1540" x="26157.09" y="2407.8198">intersect_point(const Vector3 &amp; p_point, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int</text><ellipse cx="26148.09" cy="2417.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1689" x="26157.09" y="2420.6245">intersect_ray(const Vector3 &amp; p_from, const Vector3 &amp; p_to, PhysicsDirectSpaceState::RayResult &amp; r_result, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_ray = false) = 0 : bool</text><ellipse cx="26148.09" cy="2430.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1782" x="26157.09" y="2433.4292">intersect_shape(const RID &amp; p_shape, const Transform &amp; p_xform, float p_margin, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int</text><ellipse cx="26148.09" cy="2443.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="2145" x="26157.09" y="2446.2339">cast_motion(const RID &amp; p_shape, const Transform &amp; p_xform, const Vector3 &amp; p_motion, float p_margin, float &amp; p_closest_safe, float &amp; p_closest_unsafe, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, PhysicsDirectSpaceState::ShapeRestInfo * r_info = __null) = 0 : bool</text><ellipse cx="26148.09" cy="2455.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1719" x="26157.09" y="2459.0386">collide_shape(RID p_shape, const Transform &amp; p_shape_xform, float p_margin, Vector3 * r_results, int p_result_max, int &amp; r_result_count, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="26148.09" cy="2468.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1637" x="26157.09" y="2471.8433">rest_info(RID p_shape, const Transform &amp; p_shape_xform, float p_margin, PhysicsDirectSpaceState::ShapeRestInfo * r_info, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="26148.09" cy="2481.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="525" x="26157.09" y="2484.6479">get_closest_point_to_object_volume(RID p_object, const Vector3 p_point) const = 0 : Vector3</text><ellipse cx="26148.09" cy="2494.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26157.09" y="2497.4526">PhysicsDirectSpaceState() : void</text></a><!--MD5=[c66ec037f9beb318ec4ceea904716941]
class C_0000493041171271776846--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158" target="_top" title="PhysicsDirectSpaceState##ShapeResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158" xlink:show="new" xlink:title="PhysicsDirectSpaceState##ShapeResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="99.2188" id="C_0000493041171271776846" style="stroke: #A80036; stroke-width: 1.5;" width="275" x="27184.09" y="701.4531"/><ellipse cx="27199.09" cy="717.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M27202.0588,723.0938 Q27201.4806,723.3906 27200.84,723.5313 Q27200.1994,723.6875 27199.4963,723.6875 Q27196.9963,723.6875 27195.6681,722.0469 Q27194.3556,720.3906 27194.3556,717.2656 Q27194.3556,714.1406 27195.6681,712.4844 Q27196.9963,710.8281 27199.4963,710.8281 Q27200.1994,710.8281 27200.84,710.9844 Q27201.4963,711.1406 27202.0588,711.4375 L27202.0588,714.1563 Q27201.4338,713.5781 27200.84,713.3125 Q27200.2463,713.0313 27199.6213,713.0313 Q27198.2775,713.0313 27197.59,714.1094 Q27196.9025,715.1719 27196.9025,717.2656 Q27196.9025,719.3594 27197.59,720.4375 Q27198.2775,721.5 27199.6213,721.5 Q27200.2463,721.5 27200.84,721.2344 Q27201.4338,720.9531 27202.0588,720.375 L27202.0588,723.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="243" x="27213.09" y="721.6074">PhysicsDirectSpaceState::ShapeResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27185.09" x2="27458.09" y1="733.4531" y2="733.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="27190.09" y="739.4531"/><ellipse cx="27195.09" cy="744.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="27204.09" y="747.6636">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="27190.09" y="752.2578"/><ellipse cx="27195.09" cy="757.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="27204.09" y="760.4683">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="27190.09" y="765.0625"/><ellipse cx="27195.09" cy="770.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="27204.09" y="773.2729">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="27190.09" y="777.8672"/><ellipse cx="27195.09" cy="782.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="27204.09" y="786.0776">shape : int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="27185.09" x2="27458.09" y1="792.6719" y2="792.6719"/><!--MD5=[22d525dd8ab5843672eb9a446d1ac0b7]
class C_0000461609734144368587--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168" target="_top" title="PhysicsDirectSpaceState##RayResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168" xlink:show="new" xlink:title="PhysicsDirectSpaceState##RayResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="124.8281" id="C_0000461609734144368587" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="26697.09" y="688.4531"/><ellipse cx="26712.09" cy="704.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M26715.0588,710.0938 Q26714.4806,710.3906 26713.84,710.5313 Q26713.1994,710.6875 26712.4963,710.6875 Q26709.9963,710.6875 26708.6681,709.0469 Q26707.3556,707.3906 26707.3556,704.2656 Q26707.3556,701.1406 26708.6681,699.4844 Q26709.9963,697.8281 26712.4963,697.8281 Q26713.1994,697.8281 26713.84,697.9844 Q26714.4963,698.1406 26715.0588,698.4375 L26715.0588,701.1563 Q26714.4338,700.5781 26713.84,700.3125 Q26713.2463,700.0313 26712.6213,700.0313 Q26711.2775,700.0313 26710.59,701.1094 Q26709.9025,702.1719 26709.9025,704.2656 Q26709.9025,706.3594 26710.59,707.4375 Q26711.2775,708.5 26712.6213,708.5 Q26713.2463,708.5 26713.84,708.2344 Q26714.4338,707.9531 26715.0588,707.375 L26715.0588,710.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="225" x="26726.09" y="708.6074">PhysicsDirectSpaceState::RayResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="26698.09" x2="26953.09" y1="720.4531" y2="720.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" xlink:show="new" xlink:title="position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26703.09" y="726.4531"/><ellipse cx="26708.09" cy="731.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170" xlink:show="new" xlink:title="position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26717.09" y="734.6636">position : Vector3</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" xlink:show="new" xlink:title="normal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26703.09" y="739.2578"/><ellipse cx="26708.09" cy="744.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171" xlink:show="new" xlink:title="normal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26717.09" y="747.4683">normal : Vector3</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26703.09" y="752.0625"/><ellipse cx="26708.09" cy="757.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="26717.09" y="760.2729">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26703.09" y="764.8672"/><ellipse cx="26708.09" cy="769.8672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26717.09" y="773.0776">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26703.09" y="777.6719"/><ellipse cx="26708.09" cy="782.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26717.09" y="785.8823">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="26703.09" y="790.4766"/><ellipse cx="26708.09" cy="795.4766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="26717.09" y="798.687">shape : int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="26698.09" x2="26953.09" y1="805.2813" y2="805.2813"/><!--MD5=[a29f7384437247e0f26d2b1ff51d7842]
class C_0001034902024938599899--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224" target="_top" title="PhysicsServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224" xlink:show="new" xlink:title="PhysicsServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="2557.7188" id="C_0001034902024938599899" style="stroke: #A80036; stroke-width: 1.5;" width="1275" x="11601.09" y="7553.9531"/><ellipse cx="12192.34" cy="7569.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M12192.4494,7565.2969 L12191.2931,7570.375 L12193.6213,7570.375 L12192.4494,7565.2969 Z M12190.965,7563.0625 L12193.9494,7563.0625 L12197.3088,7575.4531 L12194.8556,7575.4531 L12194.09,7572.3906 L12190.8088,7572.3906 L12190.0588,7575.4531 L12187.6213,7575.4531 L12190.965,7563.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="12212.84" y="7574.1074">PhysicsServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="11602.09" x2="12875.09" y1="7585.9531" y2="7585.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="11602.09" x2="12875.09" y1="7593.9531" y2="7593.9531"/><ellipse cx="11612.09" cy="7604.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="11621.09" y="7608.1636">get_class() const : String</text><ellipse cx="11612.09" cy="7617.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="11621.09" y="7620.9683">_get_class_namev() const : const StringName *</text><ellipse cx="11612.09" cy="7630.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="11621.09" y="7633.7729">get_class_ptr_static() : void *</text><ellipse cx="11612.09" cy="7643.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="11621.09" y="7646.5776">get_class_static() : String</text><ellipse cx="11612.09" cy="7656.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="11621.09" y="7659.3823">get_parent_class_static() : String</text><ellipse cx="11612.09" cy="7668.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="11621.09" y="7672.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="11612.09" cy="7681.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="11621.09" y="7684.9917">get_category_static() : String</text><ellipse cx="11612.09" cy="7694.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="11621.09" y="7697.7964">inherits_static() : String</text><ellipse cx="11612.09" cy="7707.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="11621.09" y="7710.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="11612.09" cy="7720.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="11621.09" y="7723.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="11612.09" cy="7733" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="11621.09" y="7736.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="11612.09" cy="7745.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="11621.09" y="7749.0151">initialize_class() : void</text><ellipse cx="11612.09" cy="7758.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="11621.09" y="7761.8198">get_singleton() : PhysicsServer *</text><ellipse cx="11612.09" cy="7771.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="11621.09" y="7774.6245">shape_create(PhysicsServer::ShapeType p_shape) = 0 : RID</text><ellipse cx="11612.09" cy="7784.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="11621.09" y="7787.4292">shape_set_data(RID p_shape, const Variant &amp; p_data) = 0 : void</text><ellipse cx="11612.09" cy="7797.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="11621.09" y="7800.2339">shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void</text><ellipse cx="11612.09" cy="7809.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="11621.09" y="7813.0386">shape_get_type(RID p_shape) const = 0 : PhysicsServer::ShapeType</text><ellipse cx="11612.09" cy="7822.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="11621.09" y="7825.8433">shape_get_data(RID p_shape) const = 0 : Variant</text><ellipse cx="11612.09" cy="7835.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="338" x="11621.09" y="7838.6479">shape_set_margin(RID p_shape, real_t p_margin) = 0 : void</text><ellipse cx="11612.09" cy="7848.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="284" x="11621.09" y="7851.4526">shape_get_margin(RID p_shape) const = 0 : real_t</text><ellipse cx="11612.09" cy="7861.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="355" x="11621.09" y="7864.2573">shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t</text><ellipse cx="11612.09" cy="7873.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="11621.09" y="7877.062">space_create() = 0 : RID</text><ellipse cx="11612.09" cy="7886.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="11621.09" y="7889.8667">space_set_active(RID p_space, bool p_active) = 0 : void</text><ellipse cx="11612.09" cy="7899.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="11621.09" y="7902.6714">space_is_active(RID p_space) const = 0 : bool</text><ellipse cx="11612.09" cy="7912.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="568" x="11621.09" y="7915.4761">space_set_param(RID p_space, PhysicsServer::SpaceParameter p_param, real_t p_value) = 0 : void</text><ellipse cx="11612.09" cy="7925.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="523" x="11621.09" y="7928.2808">space_get_param(RID p_space, PhysicsServer::SpaceParameter p_param) const = 0 : real_t</text><ellipse cx="11612.09" cy="7937.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="11621.09" y="7941.0854">space_get_direct_state(RID p_space) = 0 : PhysicsDirectSpaceState *</text><ellipse cx="11612.09" cy="7950.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="11621.09" y="7953.8901">space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void</text><ellipse cx="11612.09" cy="7963.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="11621.09" y="7966.6948">space_get_contacts(RID p_space) const = 0 : Vector&lt;Vector3&gt;</text><ellipse cx="11612.09" cy="7976.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="11621.09" y="7979.4995">space_get_contact_count(RID p_space) const = 0 : int</text><ellipse cx="11612.09" cy="7989.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="11621.09" y="7992.3042">area_create() = 0 : RID</text><ellipse cx="11612.09" cy="8001.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="11621.09" y="8005.1089">area_set_space(RID p_area, RID p_space) = 0 : void</text><ellipse cx="11612.09" cy="8014.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="11621.09" y="8017.9136">area_get_space(RID p_area) const = 0 : RID</text><ellipse cx="11612.09" cy="8027.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="596" x="11621.09" y="8030.7183">area_set_space_override_mode(RID p_area, PhysicsServer::AreaSpaceOverrideMode p_mode) = 0 : void</text><ellipse cx="11612.09" cy="8040.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="550" x="11621.09" y="8043.5229">area_get_space_override_mode(RID p_area) const = 0 : PhysicsServer::AreaSpaceOverrideMode</text><ellipse cx="11612.09" cy="8053.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="712" x="11621.09" y="8056.3276">area_add_shape(RID p_area, RID p_shape, const Transform &amp; p_transform = Transform(), bool p_disabled = false) = 0 : void</text><ellipse cx="11612.09" cy="8065.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="393" x="11621.09" y="8069.1323">area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="11612.09" cy="8078.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="564" x="11621.09" y="8081.937">area_set_shape_transform(RID p_area, int p_shape_idx, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="11612.09" cy="8091.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="281" x="11621.09" y="8094.7417">area_get_shape_count(RID p_area) const = 0 : int</text><ellipse cx="11612.09" cy="8104.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="11621.09" y="8107.5464">area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID</text><ellipse cx="11612.09" cy="8117.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="447" x="11621.09" y="8120.3511">area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform</text><ellipse cx="11612.09" cy="8129.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="11621.09" y="8133.1558">area_remove_shape(RID p_area, int p_shape_idx) = 0 : void</text><ellipse cx="11612.09" cy="8142.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="11621.09" y="8145.9604">area_clear_shapes(RID p_area) = 0 : void</text><ellipse cx="11612.09" cy="8155.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="464" x="11621.09" y="8158.7651">area_set_shape_disabled(RID p_area, int p_shape_idx, bool p_disabled) = 0 : void</text><ellipse cx="11612.09" cy="8168.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="11621.09" y="8171.5698">area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void</text><ellipse cx="11612.09" cy="8181.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="11621.09" y="8184.3745">area_get_object_instance_id(RID p_area) const = 0 : ObjectID</text><ellipse cx="11612.09" cy="8193.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="603" x="11621.09" y="8197.1792">area_set_param(RID p_area, PhysicsServer::AreaParameter p_param, const Variant &amp; p_value) = 0 : void</text><ellipse cx="11612.09" cy="8206.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="428" x="11621.09" y="8209.9839">area_set_transform(RID p_area, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="11612.09" cy="8219.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="518" x="11621.09" y="8222.7886">area_get_param(RID p_parea, PhysicsServer::AreaParameter p_param) const = 0 : Variant</text><ellipse cx="11612.09" cy="8232.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="311" x="11621.09" y="8235.5933">area_get_transform(RID p_area) const = 0 : Transform</text><ellipse cx="11612.09" cy="8245.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="11621.09" y="8248.3979">area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void</text><ellipse cx="11612.09" cy="8257.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="11621.09" y="8261.2026">area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void</text><ellipse cx="11612.09" cy="8270.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="11621.09" y="8274.0073">area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void</text><ellipse cx="11612.09" cy="8283.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="11621.09" y="8286.812">area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="11612.09" cy="8296.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="11621.09" y="8299.6167">area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="11612.09" cy="8309.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="11621.09" y="8312.4214">area_set_ray_pickable(RID p_area, bool p_enable) = 0 : void</text><ellipse cx="11612.09" cy="8322.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="11621.09" y="8325.2261">area_is_ray_pickable(RID p_area) const = 0 : bool</text><ellipse cx="11612.09" cy="8334.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="617" x="11621.09" y="8338.0308">body_create(PhysicsServer::BodyMode p_mode = BODY_MODE_RIGID, bool p_init_sleeping = false) = 0 : RID</text><ellipse cx="11612.09" cy="8347.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="11621.09" y="8350.8354">body_set_space(RID p_body, RID p_space) = 0 : void</text><ellipse cx="11612.09" cy="8360.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="11621.09" y="8363.6401">body_get_space(RID p_body) const = 0 : RID</text><ellipse cx="11612.09" cy="8373.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="425" x="11621.09" y="8376.4448">body_set_mode(RID p_body, PhysicsServer::BodyMode p_mode) = 0 : void</text><ellipse cx="11612.09" cy="8386.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="11621.09" y="8389.2495">body_get_mode(RID p_body) const = 0 : PhysicsServer::BodyMode</text><ellipse cx="11612.09" cy="8398.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="716" x="11621.09" y="8402.0542">body_add_shape(RID p_body, RID p_shape, const Transform &amp; p_transform = Transform(), bool p_disabled = false) = 0 : void</text><ellipse cx="11612.09" cy="8411.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="11621.09" y="8414.8589">body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="11612.09" cy="8424.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="568" x="11621.09" y="8427.6636">body_set_shape_transform(RID p_body, int p_shape_idx, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="11612.09" cy="8437.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="285" x="11621.09" y="8440.4683">body_get_shape_count(RID p_body) const = 0 : int</text><ellipse cx="11612.09" cy="8450.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="349" x="11621.09" y="8453.2729">body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID</text><ellipse cx="11612.09" cy="8462.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="451" x="11621.09" y="8466.0776">body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform</text><ellipse cx="11612.09" cy="8475.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="11621.09" y="8478.8823">body_remove_shape(RID p_body, int p_shape_idx) = 0 : void</text><ellipse cx="11612.09" cy="8488.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="240" x="11621.09" y="8491.687">body_clear_shapes(RID p_body) = 0 : void</text><ellipse cx="11612.09" cy="8501.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="11621.09" y="8504.4917">body_set_shape_disabled(RID p_body, int p_shape_idx, bool p_disabled) = 0 : void</text><ellipse cx="11612.09" cy="8514.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="11621.09" y="8517.2964">body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void</text><ellipse cx="11612.09" cy="8526.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="11621.09" y="8530.1011">body_get_object_instance_id(RID p_body) const = 0 : uint32_t</text><ellipse cx="11612.09" cy="8539.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="490" x="11621.09" y="8542.9058">body_set_enable_continuous_collision_detection(RID p_body, bool p_enable) = 0 : void</text><ellipse cx="11612.09" cy="8552.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="11621.09" y="8555.7104">body_is_continuous_collision_detection_enabled(RID p_body) const = 0 : bool</text><ellipse cx="11612.09" cy="8565.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="368" x="11621.09" y="8568.5151">body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void</text><ellipse cx="11612.09" cy="8578.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="11621.09" y="8581.3198">body_get_collision_layer(RID p_body) const = 0 : uint32_t</text><ellipse cx="11612.09" cy="8590.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="11621.09" y="8594.1245">body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void</text><ellipse cx="11612.09" cy="8603.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="11621.09" y="8606.9292">body_get_collision_mask(RID p_body) const = 0 : uint32_t</text><ellipse cx="11612.09" cy="8616.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="11621.09" y="8619.7339">body_set_user_flags(RID p_body, uint32_t p_flags) = 0 : void</text><ellipse cx="11612.09" cy="8629.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="11621.09" y="8632.5386">body_get_user_flags(RID p_body) const = 0 : uint32_t</text><ellipse cx="11612.09" cy="8642.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="11621.09" y="8645.3433">body_set_param(RID p_body, PhysicsServer::BodyParameter p_param, float p_value) = 0 : void</text><ellipse cx="11612.09" cy="8654.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="11621.09" y="8658.1479">body_get_param(RID p_body, PhysicsServer::BodyParameter p_param) const = 0 : float</text><ellipse cx="11612.09" cy="8667.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="416" x="11621.09" y="8670.9526">body_set_kinematic_safe_margin(RID p_body, real_t p_margin) = 0 : void</text><ellipse cx="11612.09" cy="8680.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="362" x="11621.09" y="8683.7573">body_get_kinematic_safe_margin(RID p_body) const = 0 : real_t</text><ellipse cx="11612.09" cy="8693.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="569" x="11621.09" y="8696.562">body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant &amp; p_variant) = 0 : void</text><ellipse cx="11612.09" cy="8706.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="468" x="11621.09" y="8709.3667">body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant</text><ellipse cx="11612.09" cy="8718.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="11621.09" y="8722.1714">body_set_applied_force(RID p_body, const Vector3 &amp; p_force) = 0 : void</text><ellipse cx="11612.09" cy="8731.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="11621.09" y="8734.9761">body_get_applied_force(RID p_body) const = 0 : Vector3</text><ellipse cx="11612.09" cy="8744.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="426" x="11621.09" y="8747.7808">body_set_applied_torque(RID p_body, const Vector3 &amp; p_torque) = 0 : void</text><ellipse cx="11612.09" cy="8757.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="328" x="11621.09" y="8760.5854">body_get_applied_torque(RID p_body) const = 0 : Vector3</text><ellipse cx="11612.09" cy="8770.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="11621.09" y="8773.3901">body_add_central_force(RID p_body, const Vector3 &amp; p_force) = 0 : void</text><ellipse cx="11612.09" cy="8782.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="503" x="11621.09" y="8786.1948">body_add_force(RID p_body, const Vector3 &amp; p_force, const Vector3 &amp; p_pos) = 0 : void</text><ellipse cx="11612.09" cy="8795.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="383" x="11621.09" y="8798.9995">body_add_torque(RID p_body, const Vector3 &amp; p_torque) = 0 : void</text><ellipse cx="11612.09" cy="8808.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="452" x="11621.09" y="8811.8042">body_apply_central_impulse(RID p_body, const Vector3 &amp; p_impulse) = 0 : void</text><ellipse cx="11612.09" cy="8821.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="543" x="11621.09" y="8824.6089">body_apply_impulse(RID p_body, const Vector3 &amp; p_pos, const Vector3 &amp; p_impulse) = 0 : void</text><ellipse cx="11612.09" cy="8834.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="450" x="11621.09" y="8837.4136">body_apply_torque_impulse(RID p_body, const Vector3 &amp; p_impulse) = 0 : void</text><ellipse cx="11612.09" cy="8847.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="451" x="11621.09" y="8850.2183">body_set_axis_velocity(RID p_body, const Vector3 &amp; p_axis_velocity) = 0 : void</text><ellipse cx="11612.09" cy="8859.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="500" x="11621.09" y="8863.0229">body_set_axis_lock(RID p_body, PhysicsServer::BodyAxis p_axis, bool p_lock) = 0 : void</text><ellipse cx="11612.09" cy="8872.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="469" x="11621.09" y="8875.8276">body_is_axis_locked(RID p_body, PhysicsServer::BodyAxis p_axis) const = 0 : bool</text><ellipse cx="11612.09" cy="8885.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="11621.09" y="8888.6323">body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="11612.09" cy="8898.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="11621.09" y="8901.437">body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="11612.09" cy="8911.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="11621.09" y="8914.2417">body_get_collision_exceptions(RID p_body, List&lt;RID&gt; * p_exceptions) = 0 : void</text><ellipse cx="11612.09" cy="8923.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="11621.09" y="8927.0464">body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void</text><ellipse cx="11612.09" cy="8936.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="11621.09" y="8939.8511">body_get_max_contacts_reported(RID p_body) const = 0 : int</text><ellipse cx="11612.09" cy="8949.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="491" x="11621.09" y="8952.6558">body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void</text><ellipse cx="11612.09" cy="8962.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="424" x="11621.09" y="8965.4604">body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float</text><ellipse cx="11612.09" cy="8975.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="11621.09" y="8978.2651">body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void</text><ellipse cx="11612.09" cy="8987.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="11621.09" y="8991.0698">body_is_omitting_force_integration(RID p_body) const = 0 : bool</text><ellipse cx="11612.09" cy="9000.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="846" x="11621.09" y="9003.8745">body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName &amp; p_method, const Variant &amp; p_udata = Variant()) = 0 : void</text><ellipse cx="11612.09" cy="9013.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="11621.09" y="9016.6792">body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void</text><ellipse cx="11612.09" cy="9026.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="11621.09" y="9029.4839">body_is_ray_pickable(RID p_body) const = 0 : bool</text><ellipse cx="11612.09" cy="9039.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="375" x="11621.09" y="9042.2886">body_get_direct_state(RID p_body) = 0 : PhysicsDirectBodyState *</text><ellipse cx="11612.09" cy="9051.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1175" x="11621.09" y="9055.0933">body_test_motion(RID p_body, const Transform &amp; p_from, const Vector3 &amp; p_motion, bool p_infinite_inertia, PhysicsServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool</text><ellipse cx="11612.09" cy="9064.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1249" x="11621.09" y="9067.8979">body_test_ray_separation(RID p_body, const Transform &amp; p_transform, bool p_infinite_inertia, Vector3 &amp; r_recover_motion, PhysicsServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int</text><ellipse cx="11612.09" cy="9077.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="11621.09" y="9080.7026">soft_body_create(bool p_init_sleeping = false) = 0 : RID</text><ellipse cx="11612.09" cy="9090.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="673" x="11621.09" y="9093.5073">soft_body_update_visual_server(RID p_body, class SoftBodyVisualServerHandler * p_visual_server_handler) = 0 : void</text><ellipse cx="11612.09" cy="9103.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="11621.09" y="9106.312">soft_body_set_space(RID p_body, RID p_space) = 0 : void</text><ellipse cx="11612.09" cy="9115.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="279" x="11621.09" y="9119.1167">soft_body_get_space(RID p_body) const = 0 : RID</text><ellipse cx="11612.09" cy="9128.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="371" x="11621.09" y="9131.9214">soft_body_set_mesh(RID p_body, const REF &amp; p_mesh) = 0 : void</text><ellipse cx="11612.09" cy="9141.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="11621.09" y="9144.7261">soft_body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void</text><ellipse cx="11612.09" cy="9154.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="352" x="11621.09" y="9157.5308">soft_body_get_collision_layer(RID p_body) const = 0 : uint32_t</text><ellipse cx="11612.09" cy="9167.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="11621.09" y="9170.3354">soft_body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void</text><ellipse cx="11612.09" cy="9179.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="353" x="11621.09" y="9183.1401">soft_body_get_collision_mask(RID p_body) const = 0 : uint32_t</text><ellipse cx="11612.09" cy="9192.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="411" x="11621.09" y="9195.9448">soft_body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="11612.09" cy="9205.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="434" x="11621.09" y="9208.7495">soft_body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="11612.09" cy="9218.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="481" x="11621.09" y="9221.5542">soft_body_get_collision_exceptions(RID p_body, List&lt;RID&gt; * p_exceptions) = 0 : void</text><ellipse cx="11612.09" cy="9231.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="596" x="11621.09" y="9234.3589">soft_body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant &amp; p_variant) = 0 : void</text><ellipse cx="11612.09" cy="9243.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="495" x="11621.09" y="9247.1636">soft_body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant</text><ellipse cx="11612.09" cy="9256.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="11621.09" y="9259.9683">soft_body_set_transform(RID p_body, const Transform &amp; p_transform) = 0 : void</text><ellipse cx="11612.09" cy="9269.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="458" x="11621.09" y="9272.7729">soft_body_get_vertex_position(RID p_body, int vertex_index) const = 0 : Vector3</text><ellipse cx="11612.09" cy="9282.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="11621.09" y="9285.5776">soft_body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void</text><ellipse cx="11612.09" cy="9295.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="313" x="11621.09" y="9298.3823">soft_body_is_ray_pickable(RID p_body) const = 0 : bool</text><ellipse cx="11612.09" cy="9307.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="485" x="11621.09" y="9311.187">soft_body_set_simulation_precision(RID p_body, int p_simulation_precision) = 0 : void</text><ellipse cx="11612.09" cy="9320.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="322" x="11621.09" y="9323.9917">soft_body_get_simulation_precision(RID p_body) = 0 : int</text><ellipse cx="11612.09" cy="9333.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="395" x="11621.09" y="9336.7964">soft_body_set_total_mass(RID p_body, real_t p_total_mass) = 0 : void</text><ellipse cx="11612.09" cy="9346.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="286" x="11621.09" y="9349.6011">soft_body_get_total_mass(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9359.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="11621.09" y="9362.4058">soft_body_set_linear_stiffness(RID p_body, real_t p_stiffness) = 0 : void</text><ellipse cx="11612.09" cy="9372" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="310" x="11621.09" y="9375.2104">soft_body_get_linear_stiffness(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9384.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="443" x="11621.09" y="9388.0151">soft_body_set_areaAngular_stiffness(RID p_body, real_t p_stiffness) = 0 : void</text><ellipse cx="11612.09" cy="9397.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="11621.09" y="9400.8198">soft_body_get_areaAngular_stiffness(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9410.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="415" x="11621.09" y="9413.6245">soft_body_set_volume_stiffness(RID p_body, real_t p_stiffness) = 0 : void</text><ellipse cx="11612.09" cy="9423.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="11621.09" y="9426.4292">soft_body_get_volume_stiffness(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9436.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="501" x="11621.09" y="9439.2339">soft_body_set_pressure_coefficient(RID p_body, real_t p_pressure_coefficient) = 0 : void</text><ellipse cx="11612.09" cy="9448.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="11621.09" y="9452.0386">soft_body_get_pressure_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9461.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="571" x="11621.09" y="9464.8433">soft_body_set_pose_matching_coefficient(RID p_body, real_t p_pose_matching_coefficient) = 0 : void</text><ellipse cx="11612.09" cy="9474.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="374" x="11621.09" y="9477.6479">soft_body_get_pose_matching_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9487.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="499" x="11621.09" y="9490.4526">soft_body_set_damping_coefficient(RID p_body, real_t p_damping_coefficient) = 0 : void</text><ellipse cx="11612.09" cy="9500.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="338" x="11621.09" y="9503.2573">soft_body_get_damping_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9512.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="453" x="11621.09" y="9516.062">soft_body_set_drag_coefficient(RID p_body, real_t p_drag_coefficient) = 0 : void</text><ellipse cx="11612.09" cy="9525.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="11621.09" y="9528.8667">soft_body_get_drag_coefficient(RID p_body) = 0 : real_t</text><ellipse cx="11612.09" cy="9538.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="563" x="11621.09" y="9541.6714">soft_body_move_point(RID p_body, int p_point_index, const Vector3 &amp; p_global_position) = 0 : void</text><ellipse cx="11612.09" cy="9551.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="11621.09" y="9554.4761">soft_body_get_point_global_position(RID p_body, int p_point_index) = 0 : Vector3</text><ellipse cx="11612.09" cy="9564.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="441" x="11621.09" y="9567.2808">soft_body_get_point_offset(RID p_body, int p_point_index) const = 0 : Vector3</text><ellipse cx="11612.09" cy="9576.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="11621.09" y="9580.0854">soft_body_remove_all_pinned_points(RID p_body) = 0 : void</text><ellipse cx="11612.09" cy="9589.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="414" x="11621.09" y="9592.8901">soft_body_pin_point(RID p_body, int p_point_index, bool p_pin) = 0 : void</text><ellipse cx="11612.09" cy="9602.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="11621.09" y="9605.6948">soft_body_is_point_pinned(RID p_body, int p_point_index) = 0 : bool</text><ellipse cx="11612.09" cy="9615.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="357" x="11621.09" y="9618.4995">joint_get_type(RID p_joint) const = 0 : PhysicsServer::JointType</text><ellipse cx="11612.09" cy="9628.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="11621.09" y="9631.3042">joint_set_solver_priority(RID p_joint, int p_priority) = 0 : void</text><ellipse cx="11612.09" cy="9640.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="288" x="11621.09" y="9644.1089">joint_get_solver_priority(RID p_joint) const = 0 : int</text><ellipse cx="11612.09" cy="9653.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="11621.09" y="9656.9136">joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void</text><ellipse cx="11612.09" cy="9666.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="11621.09" y="9669.7183">joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool</text><ellipse cx="11612.09" cy="9679.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="628" x="11621.09" y="9682.5229">joint_create_pin(RID p_body_A, const Vector3 &amp; p_local_A, RID p_body_B, const Vector3 &amp; p_local_B) = 0 : RID</text><ellipse cx="11612.09" cy="9692.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="550" x="11621.09" y="9695.3276">pin_joint_set_param(RID p_joint, PhysicsServer::PinJointParam p_param, float p_value) = 0 : void</text><ellipse cx="11612.09" cy="9704.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="505" x="11621.09" y="9708.1323">pin_joint_get_param(RID p_joint, PhysicsServer::PinJointParam p_param) const = 0 : float</text><ellipse cx="11612.09" cy="9717.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="11621.09" y="9720.937">pin_joint_set_local_a(RID p_joint, const Vector3 &amp; p_A) = 0 : void</text><ellipse cx="11612.09" cy="9730.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="11621.09" y="9733.7417">pin_joint_get_local_a(RID p_joint) const = 0 : Vector3</text><ellipse cx="11612.09" cy="9743.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="367" x="11621.09" y="9746.5464">pin_joint_set_local_b(RID p_joint, const Vector3 &amp; p_B) = 0 : void</text><ellipse cx="11612.09" cy="9756.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="11621.09" y="9759.3511">pin_joint_get_local_b(RID p_joint) const = 0 : Vector3</text><ellipse cx="11612.09" cy="9768.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="682" x="11621.09" y="9772.1558">joint_create_hinge(RID p_body_A, const Transform &amp; p_hinge_A, RID p_body_B, const Transform &amp; p_hinge_B) = 0 : RID</text><ellipse cx="11612.09" cy="9781.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="995" x="11621.09" y="9784.9604">joint_create_hinge_simple(RID p_body_A, const Vector3 &amp; p_pivot_A, const Vector3 &amp; p_axis_A, RID p_body_B, const Vector3 &amp; p_pivot_B, const Vector3 &amp; p_axis_B) = 0 : RID</text><ellipse cx="11612.09" cy="9794.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="11621.09" y="9797.7651">hinge_joint_set_param(RID p_joint, PhysicsServer::HingeJointParam p_param, float p_value) = 0 : void</text><ellipse cx="11612.09" cy="9807.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="11621.09" y="9810.5698">hinge_joint_get_param(RID p_joint, PhysicsServer::HingeJointParam p_param) const = 0 : float</text><ellipse cx="11612.09" cy="9820.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="532" x="11621.09" y="9823.3745">hinge_joint_set_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag, bool p_value) = 0 : void</text><ellipse cx="11612.09" cy="9832.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="11621.09" y="9836.1792">hinge_joint_get_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag) const = 0 : bool</text><ellipse cx="11612.09" cy="9845.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="752" x="11621.09" y="9848.9839">joint_create_slider(RID p_body_A, const Transform &amp; p_local_frame_A, RID p_body_B, const Transform &amp; p_local_frame_B) = 0 : RID</text><ellipse cx="11612.09" cy="9858.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="11621.09" y="9861.7886">slider_joint_set_param(RID p_joint, PhysicsServer::SliderJointParam p_param, float p_value) = 0 : void</text><ellipse cx="11612.09" cy="9871.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="534" x="11621.09" y="9874.5933">slider_joint_get_param(RID p_joint, PhysicsServer::SliderJointParam p_param) const = 0 : float</text><ellipse cx="11612.09" cy="9884.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="780" x="11621.09" y="9887.3979">joint_create_cone_twist(RID p_body_A, const Transform &amp; p_local_frame_A, RID p_body_B, const Transform &amp; p_local_frame_B) = 0 : RID</text><ellipse cx="11612.09" cy="9896.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="633" x="11621.09" y="9900.2026">cone_twist_joint_set_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param, float p_value) = 0 : void</text><ellipse cx="11612.09" cy="9909.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="588" x="11621.09" y="9913.0073">cone_twist_joint_get_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param) const = 0 : float</text><ellipse cx="11612.09" cy="9922.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="794" x="11621.09" y="9925.812">joint_create_generic_6dof(RID p_body_A, const Transform &amp; p_local_frame_A, RID p_body_B, const Transform &amp; p_local_frame_B) = 0 : RID</text><ellipse cx="11612.09" cy="9935.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="740" x="11621.09" y="9938.6167">generic_6dof_joint_set_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param, float p_value) = 0 : void</text><ellipse cx="11612.09" cy="9948.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="661" x="11621.09" y="9951.4214">generic_6dof_joint_get_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param) = 0 : float</text><ellipse cx="11612.09" cy="9961.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="700" x="11621.09" y="9964.2261">generic_6dof_joint_set_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag, bool p_enable) = 0 : void</text><ellipse cx="11612.09" cy="9973.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="614" x="11621.09" y="9977.0308">generic_6dof_joint_get_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag) = 0 : bool</text><ellipse cx="11612.09" cy="9986.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="11621.09" y="9989.8354">free(RID p_rid) = 0 : void</text><ellipse cx="11612.09" cy="9999.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="11621.09" y="10002.6401">set_active(bool p_active) = 0 : void</text><ellipse cx="11612.09" cy="10012.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="11621.09" y="10015.4448">init() = 0 : void</text><ellipse cx="11612.09" cy="10025.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="11621.09" y="10028.2495">step(float p_step) = 0 : void</text><ellipse cx="11612.09" cy="10037.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="143" x="11621.09" y="10041.0542">flush_queries() = 0 : void</text><ellipse cx="11612.09" cy="10050.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="11621.09" y="10053.8589">finish() = 0 : void</text><ellipse cx="11612.09" cy="10063.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="11621.09" y="10066.6636">is_flushing_queries() const = 0 : bool</text><ellipse cx="11612.09" cy="10076.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="344" x="11621.09" y="10079.4683">get_process_info(PhysicsServer::ProcessInfo p_info) = 0 : int</text><ellipse cx="11612.09" cy="10089.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="11621.09" y="10092.2729">PhysicsServer() : void</text><ellipse cx="11612.09" cy="10101.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="11621.09" y="10105.0776">~PhysicsServer() : void</text></a><!--MD5=[15ab565944242ceeac87f602c1eae9a8]
class C_0002302096389852429221--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40" target="_top" title="Physics2DDirectBodyState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40" xlink:show="new" xlink:title="Physics2DDirectBodyState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="637.0156" id="C_0002302096389852429221" style="stroke: #A80036; stroke-width: 1.5;" width="475" x="14844.09" y="8514.4531"/><ellipse cx="14995.84" cy="8530.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M14995.9494,8525.7969 L14994.7931,8530.875 L14997.1213,8530.875 L14995.9494,8525.7969 Z M14994.465,8523.5625 L14997.4494,8523.5625 L15000.8088,8535.9531 L14998.3556,8535.9531 L14997.59,8532.8906 L14994.3088,8532.8906 L14993.5588,8535.9531 L14991.1213,8535.9531 L14994.465,8523.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="15016.34" y="8534.6074">Physics2DDirectBodyState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="14845.09" x2="15318.09" y1="8546.4531" y2="8546.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="14845.09" x2="15318.09" y1="8554.4531" y2="8554.4531"/><ellipse cx="14855.09" cy="8565.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="14864.09" y="8568.6636">get_class() const : String</text><ellipse cx="14855.09" cy="8578.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="14864.09" y="8581.4683">_get_class_namev() const : const StringName *</text><ellipse cx="14855.09" cy="8591.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="14864.09" y="8594.2729">get_class_ptr_static() : void *</text><ellipse cx="14855.09" cy="8603.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="14864.09" y="8607.0776">get_class_static() : String</text><ellipse cx="14855.09" cy="8616.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="14864.09" y="8619.8823">get_parent_class_static() : String</text><ellipse cx="14855.09" cy="8629.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="14864.09" y="8632.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="14855.09" cy="8642.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="14864.09" y="8645.4917">get_category_static() : String</text><ellipse cx="14855.09" cy="8655.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="14864.09" y="8658.2964">inherits_static() : String</text><ellipse cx="14855.09" cy="8667.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="14864.09" y="8671.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="14855.09" cy="8680.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="14864.09" y="8683.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="14855.09" cy="8693.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="14864.09" y="8696.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="14855.09" cy="8706.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="14864.09" y="8709.5151">initialize_class() : void</text><ellipse cx="14855.09" cy="8719.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="14864.09" y="8722.3198">get_total_gravity() const = 0 : Vector2</text><ellipse cx="14855.09" cy="8731.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="14864.09" y="8735.1245">get_total_linear_damp() const = 0 : float</text><ellipse cx="14855.09" cy="8744.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="14864.09" y="8747.9292">get_total_angular_damp() const = 0 : float</text><ellipse cx="14855.09" cy="8757.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="14864.09" y="8760.7339">get_inverse_mass() const = 0 : float</text><ellipse cx="14855.09" cy="8770.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="218" x="14864.09" y="8773.5386">get_inverse_inertia() const = 0 : real_t</text><ellipse cx="14855.09" cy="8783.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="14864.09" y="8786.3433">set_linear_velocity(const Vector2 &amp; p_velocity) = 0 : void</text><ellipse cx="14855.09" cy="8795.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="14864.09" y="8799.1479">get_linear_velocity() const = 0 : Vector2</text><ellipse cx="14855.09" cy="8808.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="14864.09" y="8811.9526">set_angular_velocity(real_t p_velocity) = 0 : void</text><ellipse cx="14855.09" cy="8821.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="14864.09" y="8824.7573">get_angular_velocity() const = 0 : real_t</text><ellipse cx="14855.09" cy="8834.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="341" x="14864.09" y="8837.562">set_transform(const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="14855.09" cy="8847.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="14864.09" y="8850.3667">get_transform() const = 0 : Transform2D</text><ellipse cx="14855.09" cy="8859.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="14864.09" y="8863.1714">add_central_force(const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="14855.09" cy="8872.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="409" x="14864.09" y="8875.9761">add_force(const Vector2 &amp; p_offset, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="14855.09" cy="8885.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="218" x="14864.09" y="8888.7808">add_torque(real_t p_torque) = 0 : void</text><ellipse cx="14855.09" cy="8898.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="14864.09" y="8901.5854">apply_central_impulse(const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="14855.09" cy="8911.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="14864.09" y="8914.3901">apply_torque_impulse(real_t p_torque) = 0 : void</text><ellipse cx="14855.09" cy="8923.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="449" x="14864.09" y="8927.1948">apply_impulse(const Vector2 &amp; p_offset, const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="14855.09" cy="8936.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="14864.09" y="8939.9995">set_sleep_state(bool p_enable) = 0 : void</text><ellipse cx="14855.09" cy="8949.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="14864.09" y="8952.8042">is_sleeping() const = 0 : bool</text><ellipse cx="14855.09" cy="8962.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="14864.09" y="8965.6089">get_contact_count() const = 0 : int</text><ellipse cx="14855.09" cy="8975.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="14864.09" y="8978.4136">get_contact_local_position(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="14855.09" cy="8988.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="14864.09" y="8991.2183">get_contact_local_normal(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="14855.09" cy="9000.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="324" x="14864.09" y="9004.0229">get_contact_local_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="14855.09" cy="9013.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="304" x="14864.09" y="9016.8276">get_contact_collider(int p_contact_idx) const = 0 : RID</text><ellipse cx="14855.09" cy="9026.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="379" x="14864.09" y="9029.6323">get_contact_collider_position(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="14855.09" cy="9039.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="14864.09" y="9042.437">get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID</text><ellipse cx="14855.09" cy="9052.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="14864.09" y="9055.2417">get_contact_collider_object(int p_contact_idx) const : Object *</text><ellipse cx="14855.09" cy="9064.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="14864.09" y="9068.0464">get_contact_collider_shape(int p_contact_idx) const = 0 : int</text><ellipse cx="14855.09" cy="9077.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="426" x="14864.09" y="9080.8511">get_contact_collider_shape_metadata(int p_contact_idx) const = 0 : Variant</text><ellipse cx="14855.09" cy="9090.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="446" x="14864.09" y="9093.6558">get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector2</text><ellipse cx="14855.09" cy="9103.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="14864.09" y="9106.4604">get_step() const = 0 : real_t</text><ellipse cx="14855.09" cy="9116.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="14864.09" y="9119.2651">integrate_forces() : void</text><ellipse cx="14855.09" cy="9128.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="298" x="14864.09" y="9132.0698">get_space_state() = 0 : Physics2DDirectSpaceState *</text><ellipse cx="14855.09" cy="9141.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="14864.09" y="9144.8745">Physics2DDirectBodyState() : void</text></a><!--MD5=[ca40d70d705a3e45bf51321044ec5376]
class C_0000236996062289735257--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145" target="_top" title="Physics2DDirectSpaceState" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145" xlink:show="new" xlink:title="Physics2DDirectSpaceState" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="304.0938" id="C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.5;" width="1992" x="29934.59" y="2199.9531"/><ellipse cx="30840.84" cy="2215.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M30840.9494,2211.2969 L30839.7931,2216.375 L30842.1213,2216.375 L30840.9494,2211.2969 Z M30839.465,2209.0625 L30842.4494,2209.0625 L30845.8088,2221.4531 L30843.3556,2221.4531 L30842.59,2218.3906 L30839.3088,2218.3906 L30838.5588,2221.4531 L30836.1213,2221.4531 L30839.465,2209.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="30861.34" y="2220.1074">Physics2DDirectSpaceState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="29935.59" x2="31925.59" y1="2231.9531" y2="2231.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="29935.59" x2="31925.59" y1="2239.9531" y2="2239.9531"/><ellipse cx="29945.59" cy="2250.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="29954.59" y="2254.1636">get_class() const : String</text><ellipse cx="29945.59" cy="2263.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="29954.59" y="2266.9683">_get_class_namev() const : const StringName *</text><ellipse cx="29945.59" cy="2276.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="29954.59" y="2279.7729">get_class_ptr_static() : void *</text><ellipse cx="29945.59" cy="2289.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="29954.59" y="2292.5776">get_class_static() : String</text><ellipse cx="29945.59" cy="2302.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="29954.59" y="2305.3823">get_parent_class_static() : String</text><ellipse cx="29945.59" cy="2314.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="29954.59" y="2318.187">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="29945.59" cy="2327.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="29954.59" y="2330.9917">get_category_static() : String</text><ellipse cx="29945.59" cy="2340.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="29954.59" y="2343.7964">inherits_static() : String</text><ellipse cx="29945.59" cy="2353.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="29954.59" y="2356.6011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="29945.59" cy="2366.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="29954.59" y="2369.4058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="29945.59" cy="2379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="29954.59" y="2382.2104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="29945.59" cy="2391.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="29954.59" y="2395.0151">initialize_class() : void</text><ellipse cx="29945.59" cy="2404.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1563" x="29954.59" y="2407.8198">intersect_ray(const Vector2 &amp; p_from, const Vector2 &amp; p_to, Physics2DDirectSpaceState::RayResult &amp; r_result, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="29945.59" cy="2417.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1703" x="29954.59" y="2420.6245">intersect_point(const Vector2 &amp; p_point, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int</text><ellipse cx="29945.59" cy="2430.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1950" x="29954.59" y="2433.4292">intersect_point_on_canvas(const Vector2 &amp; p_point, ObjectID p_canvas_instance_id, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int</text><ellipse cx="29945.59" cy="2443.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1966" x="29954.59" y="2446.2339">intersect_shape(const RID &amp; p_shape, const Transform2D &amp; p_xform, const Vector2 &amp; p_motion, float p_margin, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int</text><ellipse cx="29945.59" cy="2455.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1829" x="29954.59" y="2459.0386">cast_motion(const RID &amp; p_shape, const Transform2D &amp; p_xform, const Vector2 &amp; p_motion, float p_margin, float &amp; p_closest_safe, float &amp; p_closest_unsafe, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="29945.59" cy="2468.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1888" x="29954.59" y="2471.8433">collide_shape(RID p_shape, const Transform2D &amp; p_shape_xform, const Vector2 &amp; p_motion, float p_margin, Vector2 * r_results, int p_result_max, int &amp; r_result_count, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="29945.59" cy="2481.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1821" x="29954.59" y="2484.6479">rest_info(RID p_shape, const Transform2D &amp; p_shape_xform, const Vector2 &amp; p_motion, float p_margin, Physics2DDirectSpaceState::ShapeRestInfo * r_info, const Set&lt;RID&gt; &amp; p_exclude = Set&lt;RID&gt;(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool</text><ellipse cx="29945.59" cy="2494.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="29954.59" y="2497.4526">Physics2DDirectSpaceState() : void</text></a><!--MD5=[9eb4616909927b8afaeaff475656c5e3]
class C_0001801355352189289676--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162" target="_top" title="Physics2DDirectSpaceState##RayResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162" xlink:show="new" xlink:title="Physics2DDirectSpaceState##RayResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="137.6328" id="C_0001801355352189289676" style="stroke: #A80036; stroke-width: 1.5;" width="274" x="32155.59" y="681.9531"/><ellipse cx="32170.59" cy="697.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32173.5588,703.5938 Q32172.9806,703.8906 32172.34,704.0313 Q32171.6994,704.1875 32170.9963,704.1875 Q32168.4963,704.1875 32167.1681,702.5469 Q32165.8556,700.8906 32165.8556,697.7656 Q32165.8556,694.6406 32167.1681,692.9844 Q32168.4963,691.3281 32170.9963,691.3281 Q32171.6994,691.3281 32172.34,691.4844 Q32172.9963,691.6406 32173.5588,691.9375 L32173.5588,694.6563 Q32172.9338,694.0781 32172.34,693.8125 Q32171.7463,693.5313 32171.1213,693.5313 Q32169.7775,693.5313 32169.09,694.6094 Q32168.4025,695.6719 32168.4025,697.7656 Q32168.4025,699.8594 32169.09,700.9375 Q32169.7775,702 32171.1213,702 Q32171.7463,702 32172.34,701.7344 Q32172.9338,701.4531 32173.5588,700.875 L32173.5588,703.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="242" x="32184.59" y="702.1074">Physics2DDirectSpaceState::RayResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32156.59" x2="32428.59" y1="713.9531" y2="713.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" xlink:show="new" xlink:title="position" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="719.9531"/><ellipse cx="32166.59" cy="724.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" target="_top" title="position" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164" xlink:show="new" xlink:title="position" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="32175.59" y="728.1636">position : Vector2</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" xlink:show="new" xlink:title="normal" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="732.7578"/><ellipse cx="32166.59" cy="737.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" target="_top" title="normal" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165" xlink:show="new" xlink:title="normal" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="32175.59" y="740.9683">normal : Vector2</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="745.5625"/><ellipse cx="32166.59" cy="750.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="32175.59" y="753.7729">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="758.3672"/><ellipse cx="32166.59" cy="763.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="32175.59" y="766.5776">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="771.1719"/><ellipse cx="32166.59" cy="776.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="32175.59" y="779.3823">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="783.9766"/><ellipse cx="32166.59" cy="788.9766" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="32175.59" y="792.187">shape : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" xlink:show="new" xlink:title="metadata" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32161.59" y="796.7813"/><ellipse cx="32166.59" cy="801.7813" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170" xlink:show="new" xlink:title="metadata" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="32175.59" y="804.9917">metadata : Variant</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32156.59" x2="32428.59" y1="811.5859" y2="811.5859"/><!--MD5=[833071aa6dd5b089efecfc256c21fee2]
class C_0001771770302499309898--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175" target="_top" title="Physics2DDirectSpaceState##ShapeResult" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175" xlink:show="new" xlink:title="Physics2DDirectSpaceState##ShapeResult" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="112.0234" id="C_0001771770302499309898" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="33300.59" y="694.9531"/><ellipse cx="33315.59" cy="710.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M33318.5588,716.5938 Q33317.9806,716.8906 33317.34,717.0313 Q33316.6994,717.1875 33315.9963,717.1875 Q33313.4963,717.1875 33312.1681,715.5469 Q33310.8556,713.8906 33310.8556,710.7656 Q33310.8556,707.6406 33312.1681,705.9844 Q33313.4963,704.3281 33315.9963,704.3281 Q33316.6994,704.3281 33317.34,704.4844 Q33317.9963,704.6406 33318.5588,704.9375 L33318.5588,707.6563 Q33317.9338,707.0781 33317.34,706.8125 Q33316.7463,706.5313 33316.1213,706.5313 Q33314.7775,706.5313 33314.09,707.6094 Q33313.4025,708.6719 33313.4025,710.7656 Q33313.4025,712.8594 33314.09,713.9375 Q33314.7775,715 33316.1213,715 Q33316.7463,715 33317.34,714.7344 Q33317.9338,714.4531 33318.5588,713.875 L33318.5588,716.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="33329.59" y="715.1074">Physics2DDirectSpaceState::ShapeResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="33301.59" x2="33591.59" y1="726.9531" y2="726.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" xlink:show="new" xlink:title="rid" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33306.59" y="732.9531"/><ellipse cx="33311.59" cy="737.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" target="_top" title="rid" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177" xlink:show="new" xlink:title="rid" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="33320.59" y="741.1636">rid : RID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33306.59" y="745.7578"/><ellipse cx="33311.59" cy="750.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" target="_top" title="collider_id" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178" xlink:show="new" xlink:title="collider_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="33320.59" y="753.9683">collider_id : ObjectID</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" xlink:show="new" xlink:title="collider" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33306.59" y="758.5625"/><ellipse cx="33311.59" cy="763.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" target="_top" title="collider" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179" xlink:show="new" xlink:title="collider" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="33320.59" y="766.7729">collider : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" xlink:show="new" xlink:title="shape" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33306.59" y="771.3672"/><ellipse cx="33311.59" cy="776.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" target="_top" title="shape" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180" xlink:show="new" xlink:title="shape" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="33320.59" y="779.5776">shape : int</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" xlink:show="new" xlink:title="metadata" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="33306.59" y="784.1719"/><ellipse cx="33311.59" cy="789.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" target="_top" title="metadata" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181" xlink:show="new" xlink:title="metadata" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="33320.59" y="792.3823">metadata : Variant</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="33301.59" x2="33591.59" y1="798.9766" y2="798.9766"/><!--MD5=[75170794dfa38b97f308a928ae46e341]
class C_0001561529841391244418--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232" target="_top" title="Physics2DServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232" xlink:show="new" xlink:title="Physics2DServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="1904.6797" id="C_0001561529841391244418" style="stroke: #A80036; stroke-width: 1.5;" width="1408" x="16397.59" y="7880.4531"/><ellipse cx="17046.84" cy="7896.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M17046.9494,7891.7969 L17045.7931,7896.875 L17048.1213,7896.875 L17046.9494,7891.7969 Z M17045.465,7889.5625 L17048.4494,7889.5625 L17051.8088,7901.9531 L17049.3556,7901.9531 L17048.59,7898.8906 L17045.3088,7898.8906 L17044.5588,7901.9531 L17042.1213,7901.9531 L17045.465,7889.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="17067.34" y="7900.6074">Physics2DServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="16398.59" x2="17804.59" y1="7912.4531" y2="7912.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="16398.59" x2="17804.59" y1="7920.4531" y2="7920.4531"/><ellipse cx="16408.59" cy="7931.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="16417.59" y="7934.6636">get_class() const : String</text><ellipse cx="16408.59" cy="7944.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="16417.59" y="7947.4683">_get_class_namev() const : const StringName *</text><ellipse cx="16408.59" cy="7957.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="16417.59" y="7960.2729">get_class_ptr_static() : void *</text><ellipse cx="16408.59" cy="7969.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="16417.59" y="7973.0776">get_class_static() : String</text><ellipse cx="16408.59" cy="7982.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="16417.59" y="7985.8823">get_parent_class_static() : String</text><ellipse cx="16408.59" cy="7995.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="16417.59" y="7998.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="16408.59" cy="8008.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="16417.59" y="8011.4917">get_category_static() : String</text><ellipse cx="16408.59" cy="8021.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="16417.59" y="8024.2964">inherits_static() : String</text><ellipse cx="16408.59" cy="8033.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="16417.59" y="8037.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="16408.59" cy="8046.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="16417.59" y="8049.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="16408.59" cy="8059.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="16417.59" y="8062.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="16408.59" cy="8072.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="16417.59" y="8075.5151">initialize_class() : void</text><ellipse cx="16408.59" cy="8085.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="16417.59" y="8088.3198">get_singleton() : Physics2DServer *</text><ellipse cx="16408.59" cy="8097.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="165" x="16417.59" y="8101.1245">line_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8110.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="16417.59" y="8113.9292">ray_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8123.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="16417.59" y="8126.7339">segment_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8136.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="16417.59" y="8139.5386">circle_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8149.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="198" x="16417.59" y="8152.3433">rectangle_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8161.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="188" x="16417.59" y="8165.1479">capsule_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8174.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="16417.59" y="8177.9526">convex_polygon_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8187.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="243" x="16417.59" y="8190.7573">concave_polygon_shape_create() = 0 : RID</text><ellipse cx="16408.59" cy="8200.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="16417.59" y="8203.562">shape_set_data(RID p_shape, const Variant &amp; p_data) = 0 : void</text><ellipse cx="16408.59" cy="8213.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="16417.59" y="8216.3667">shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void</text><ellipse cx="16408.59" cy="8225.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="403" x="16417.59" y="8229.1714">shape_get_type(RID p_shape) const = 0 : Physics2DServer::ShapeType</text><ellipse cx="16408.59" cy="8238.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="16417.59" y="8241.9761">shape_get_data(RID p_shape) const = 0 : Variant</text><ellipse cx="16408.59" cy="8251.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="355" x="16417.59" y="8254.7808">shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t</text><ellipse cx="16408.59" cy="8264.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1382" x="16417.59" y="8267.5854">shape_collide(RID p_shape_A, const Transform2D &amp; p_xform_A, const Vector2 &amp; p_motion_A, RID p_shape_B, const Transform2D &amp; p_xform_B, const Vector2 &amp; p_motion_B, Vector2 * r_results, int p_result_max, int &amp; r_result_count) = 0 : bool</text><ellipse cx="16408.59" cy="8277.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="16417.59" y="8280.3901">space_create() = 0 : RID</text><ellipse cx="16408.59" cy="8289.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="316" x="16417.59" y="8293.1948">space_set_active(RID p_space, bool p_active) = 0 : void</text><ellipse cx="16408.59" cy="8302.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="16417.59" y="8305.9995">space_is_active(RID p_space) const = 0 : bool</text><ellipse cx="16408.59" cy="8315.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="583" x="16417.59" y="8318.8042">space_set_param(RID p_space, Physics2DServer::SpaceParameter p_param, real_t p_value) = 0 : void</text><ellipse cx="16408.59" cy="8328.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="538" x="16417.59" y="8331.6089">space_get_param(RID p_space, Physics2DServer::SpaceParameter p_param) const = 0 : real_t</text><ellipse cx="16408.59" cy="8341.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="405" x="16417.59" y="8344.4136">space_get_direct_state(RID p_space) = 0 : Physics2DDirectSpaceState *</text><ellipse cx="16408.59" cy="8354.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="404" x="16417.59" y="8357.2183">space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void</text><ellipse cx="16408.59" cy="8366.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="356" x="16417.59" y="8370.0229">space_get_contacts(RID p_space) const = 0 : Vector&lt;Vector2&gt;</text><ellipse cx="16408.59" cy="8379.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="16417.59" y="8382.8276">space_get_contact_count(RID p_space) const = 0 : int</text><ellipse cx="16408.59" cy="8392.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="16417.59" y="8395.6323">area_create() = 0 : RID</text><ellipse cx="16408.59" cy="8405.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="295" x="16417.59" y="8408.437">area_set_space(RID p_area, RID p_space) = 0 : void</text><ellipse cx="16408.59" cy="8418.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="16417.59" y="8421.2417">area_get_space(RID p_area) const = 0 : RID</text><ellipse cx="16408.59" cy="8430.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="16417.59" y="8434.0464">area_set_space_override_mode(RID p_area, Physics2DServer::AreaSpaceOverrideMode p_mode) = 0 : void</text><ellipse cx="16408.59" cy="8443.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="16417.59" y="8446.8511">area_get_space_override_mode(RID p_area) const = 0 : Physics2DServer::AreaSpaceOverrideMode</text><ellipse cx="16408.59" cy="8456.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="742" x="16417.59" y="8459.6558">area_add_shape(RID p_area, RID p_shape, const Transform2D &amp; p_transform = Transform2D(), bool p_disabled = false) = 0 : void</text><ellipse cx="16408.59" cy="8469.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="393" x="16417.59" y="8472.4604">area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="16408.59" cy="8482.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="16417.59" y="8485.2651">area_set_shape_transform(RID p_area, int p_shape_idx, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="16408.59" cy="8494.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="281" x="16417.59" y="8498.0698">area_get_shape_count(RID p_area) const = 0 : int</text><ellipse cx="16408.59" cy="8507.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="345" x="16417.59" y="8510.8745">area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID</text><ellipse cx="16408.59" cy="8520.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="462" x="16417.59" y="8523.6792">area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform2D</text><ellipse cx="16408.59" cy="8533.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="16417.59" y="8536.4839">area_remove_shape(RID p_area, int p_shape_idx) = 0 : void</text><ellipse cx="16408.59" cy="8546.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="16417.59" y="8549.2886">area_clear_shapes(RID p_area) = 0 : void</text><ellipse cx="16408.59" cy="8558.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="441" x="16417.59" y="8562.0933">area_set_shape_disabled(RID p_area, int p_shape, bool p_disabled) = 0 : void</text><ellipse cx="16408.59" cy="8571.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="388" x="16417.59" y="8574.8979">area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void</text><ellipse cx="16408.59" cy="8584.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="16417.59" y="8587.7026">area_get_object_instance_id(RID p_area) const = 0 : ObjectID</text><ellipse cx="16408.59" cy="8597.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="16417.59" y="8600.5073">area_attach_canvas_instance_id(RID p_area, ObjectID p_id) = 0 : void</text><ellipse cx="16408.59" cy="8610.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="352" x="16417.59" y="8613.312">area_get_canvas_instance_id(RID p_area) const = 0 : ObjectID</text><ellipse cx="16408.59" cy="8622.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="618" x="16417.59" y="8626.1167">area_set_param(RID p_area, Physics2DServer::AreaParameter p_param, const Variant &amp; p_value) = 0 : void</text><ellipse cx="16408.59" cy="8635.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="443" x="16417.59" y="8638.9214">area_set_transform(RID p_area, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="16408.59" cy="8648.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="16417.59" y="8651.7261">area_get_param(RID p_parea, Physics2DServer::AreaParameter p_param) const = 0 : Variant</text><ellipse cx="16408.59" cy="8661.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="16417.59" y="8664.5308">area_get_transform(RID p_area) const = 0 : Transform2D</text><ellipse cx="16408.59" cy="8674.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="16417.59" y="8677.3354">area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void</text><ellipse cx="16408.59" cy="8686.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="364" x="16417.59" y="8690.1401">area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void</text><ellipse cx="16408.59" cy="8699.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="16417.59" y="8702.9448">area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void</text><ellipse cx="16408.59" cy="8712.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="16417.59" y="8715.7495">area_set_pickable(RID p_area, bool p_pickable) = 0 : void</text><ellipse cx="16408.59" cy="8725.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="579" x="16417.59" y="8728.5542">area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="16408.59" cy="8738.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="16417.59" y="8741.3589">area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName &amp; p_method) = 0 : void</text><ellipse cx="16408.59" cy="8750.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="16417.59" y="8754.1636">body_create() = 0 : RID</text><ellipse cx="16408.59" cy="8763.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="299" x="16417.59" y="8766.9683">body_set_space(RID p_body, RID p_space) = 0 : void</text><ellipse cx="16408.59" cy="8776.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="16417.59" y="8779.7729">body_get_space(RID p_body) const = 0 : RID</text><ellipse cx="16408.59" cy="8789.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="16417.59" y="8792.5776">body_set_mode(RID p_body, Physics2DServer::BodyMode p_mode) = 0 : void</text><ellipse cx="16408.59" cy="8802.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="394" x="16417.59" y="8805.3823">body_get_mode(RID p_body) const = 0 : Physics2DServer::BodyMode</text><ellipse cx="16408.59" cy="8814.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="746" x="16417.59" y="8818.187">body_add_shape(RID p_body, RID p_shape, const Transform2D &amp; p_transform = Transform2D(), bool p_disabled = false) = 0 : void</text><ellipse cx="16408.59" cy="8827.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="397" x="16417.59" y="8830.9917">body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void</text><ellipse cx="16408.59" cy="8840.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="583" x="16417.59" y="8843.7964">body_set_shape_transform(RID p_body, int p_shape_idx, const Transform2D &amp; p_transform) = 0 : void</text><ellipse cx="16408.59" cy="8853.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="546" x="16417.59" y="8856.6011">body_set_shape_metadata(RID p_body, int p_shape_idx, const Variant &amp; p_metadata) = 0 : void</text><ellipse cx="16408.59" cy="8866.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="285" x="16417.59" y="8869.4058">body_get_shape_count(RID p_body) const = 0 : int</text><ellipse cx="16408.59" cy="8879" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="349" x="16417.59" y="8882.2104">body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID</text><ellipse cx="16408.59" cy="8891.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="466" x="16417.59" y="8895.0151">body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform2D</text><ellipse cx="16408.59" cy="8904.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="431" x="16417.59" y="8907.8198">body_get_shape_metadata(RID p_body, int p_shape_idx) const = 0 : Variant</text><ellipse cx="16408.59" cy="8917.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="445" x="16417.59" y="8920.6245">body_set_shape_disabled(RID p_body, int p_shape, bool p_disabled) = 0 : void</text><ellipse cx="16408.59" cy="8930.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="630" x="16417.59" y="8933.4292">body_set_shape_as_one_way_collision(RID p_body, int p_shape, bool p_enabled, float p_margin = 0) = 0 : void</text><ellipse cx="16408.59" cy="8943.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="346" x="16417.59" y="8946.2339">body_remove_shape(RID p_body, int p_shape_idx) = 0 : void</text><ellipse cx="16408.59" cy="8955.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="240" x="16417.59" y="8959.0386">body_clear_shapes(RID p_body) = 0 : void</text><ellipse cx="16408.59" cy="8968.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="16417.59" y="8971.8433">body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void</text><ellipse cx="16408.59" cy="8981.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="348" x="16417.59" y="8984.6479">body_get_object_instance_id(RID p_body) const = 0 : uint32_t</text><ellipse cx="16408.59" cy="8994.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="16417.59" y="8997.4526">body_attach_canvas_instance_id(RID p_body, uint32_t p_id) = 0 : void</text><ellipse cx="16408.59" cy="9007.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="354" x="16417.59" y="9010.2573">body_get_canvas_instance_id(RID p_body) const = 0 : uint32_t</text><ellipse cx="16408.59" cy="9019.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="611" x="16417.59" y="9023.062">body_set_continuous_collision_detection_mode(RID p_body, Physics2DServer::CCDMode p_mode) = 0 : void</text><ellipse cx="16408.59" cy="9032.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="565" x="16417.59" y="9035.8667">body_get_continuous_collision_detection_mode(RID p_body) const = 0 : Physics2DServer::CCDMode</text><ellipse cx="16408.59" cy="9045.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="368" x="16417.59" y="9048.6714">body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void</text><ellipse cx="16408.59" cy="9058.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="16417.59" y="9061.4761">body_get_collision_layer(RID p_body) const = 0 : uint32_t</text><ellipse cx="16408.59" cy="9071.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="16417.59" y="9074.2808">body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void</text><ellipse cx="16408.59" cy="9083.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="326" x="16417.59" y="9087.0854">body_get_collision_mask(RID p_body) const = 0 : uint32_t</text><ellipse cx="16408.59" cy="9096.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="561" x="16417.59" y="9099.8901">body_set_param(RID p_body, Physics2DServer::BodyParameter p_param, float p_value) = 0 : void</text><ellipse cx="16408.59" cy="9109.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="516" x="16417.59" y="9112.6948">body_get_param(RID p_body, Physics2DServer::BodyParameter p_param) const = 0 : float</text><ellipse cx="16408.59" cy="9122.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="584" x="16417.59" y="9125.4995">body_set_state(RID p_body, Physics2DServer::BodyState p_state, const Variant &amp; p_variant) = 0 : void</text><ellipse cx="16408.59" cy="9135.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="483" x="16417.59" y="9138.3042">body_get_state(RID p_body, Physics2DServer::BodyState p_state) const = 0 : Variant</text><ellipse cx="16408.59" cy="9147.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="410" x="16417.59" y="9151.1089">body_set_applied_force(RID p_body, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="16408.59" cy="9160.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="16417.59" y="9163.9136">body_get_applied_force(RID p_body) const = 0 : Vector2</text><ellipse cx="16408.59" cy="9173.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="360" x="16417.59" y="9176.7183">body_set_applied_torque(RID p_body, float p_torque) = 0 : void</text><ellipse cx="16408.59" cy="9186.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="16417.59" y="9189.5229">body_get_applied_torque(RID p_body) const = 0 : float</text><ellipse cx="16408.59" cy="9199.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="412" x="16417.59" y="9202.3276">body_add_central_force(RID p_body, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="16408.59" cy="9211.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="515" x="16417.59" y="9215.1323">body_add_force(RID p_body, const Vector2 &amp; p_offset, const Vector2 &amp; p_force) = 0 : void</text><ellipse cx="16408.59" cy="9224.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="317" x="16417.59" y="9227.937">body_add_torque(RID p_body, float p_torque) = 0 : void</text><ellipse cx="16408.59" cy="9237.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="452" x="16417.59" y="9240.7417">body_apply_central_impulse(RID p_body, const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="16408.59" cy="9250.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="377" x="16417.59" y="9253.5464">body_apply_torque_impulse(RID p_body, float p_torque) = 0 : void</text><ellipse cx="16408.59" cy="9263.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="555" x="16417.59" y="9266.3511">body_apply_impulse(RID p_body, const Vector2 &amp; p_offset, const Vector2 &amp; p_impulse) = 0 : void</text><ellipse cx="16408.59" cy="9275.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="451" x="16417.59" y="9279.1558">body_set_axis_velocity(RID p_body, const Vector2 &amp; p_axis_velocity) = 0 : void</text><ellipse cx="16408.59" cy="9288.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="384" x="16417.59" y="9291.9604">body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="16408.59" cy="9301.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="407" x="16417.59" y="9304.7651">body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void</text><ellipse cx="16408.59" cy="9314.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="16417.59" y="9317.5698">body_get_collision_exceptions(RID p_body, List&lt;RID&gt; * p_exceptions) = 0 : void</text><ellipse cx="16408.59" cy="9327.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="16417.59" y="9330.3745">body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void</text><ellipse cx="16408.59" cy="9339.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="16417.59" y="9343.1792">body_get_max_contacts_reported(RID p_body) const = 0 : int</text><ellipse cx="16408.59" cy="9352.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="491" x="16417.59" y="9355.9839">body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void</text><ellipse cx="16408.59" cy="9365.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="424" x="16417.59" y="9368.7886">body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float</text><ellipse cx="16408.59" cy="9378.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="16417.59" y="9381.5933">body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void</text><ellipse cx="16408.59" cy="9391.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="363" x="16417.59" y="9394.3979">body_is_omitting_force_integration(RID p_body) const = 0 : bool</text><ellipse cx="16408.59" cy="9403.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="846" x="16417.59" y="9407.2026">body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName &amp; p_method, const Variant &amp; p_udata = Variant()) = 0 : void</text><ellipse cx="16408.59" cy="9416.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1138" x="16417.59" y="9420.0073">body_collide_shape(RID p_body, int p_body_shape, RID p_shape, const Transform2D &amp; p_shape_xform, const Vector2 &amp; p_motion, Vector2 * r_results, int p_result_max, int &amp; r_result_count) = 0 : bool</text><ellipse cx="16408.59" cy="9429.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="330" x="16417.59" y="9432.812">body_set_pickable(RID p_body, bool p_pickable) = 0 : void</text><ellipse cx="16408.59" cy="9442.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="16417.59" y="9445.6167">body_get_direct_state(RID p_body) = 0 : Physics2DDirectBodyState *</text><ellipse cx="16408.59" cy="9455.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1344" x="16417.59" y="9458.4214">body_test_motion(RID p_body, const Transform2D &amp; p_from, const Vector2 &amp; p_motion, bool p_infinite_inertia, float p_margin = 0.001, Physics2DServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool</text><ellipse cx="16408.59" cy="9468.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1279" x="16417.59" y="9471.2261">body_test_ray_separation(RID p_body, const Transform2D &amp; p_transform, bool p_infinite_inertia, Vector2 &amp; r_recover_motion, Physics2DServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int</text><ellipse cx="16408.59" cy="9480.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="532" x="16417.59" y="9484.0308">joint_set_param(RID p_joint, Physics2DServer::JointParam p_param, real_t p_value) = 0 : void</text><ellipse cx="16408.59" cy="9493.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="487" x="16417.59" y="9496.8354">joint_get_param(RID p_joint, Physics2DServer::JointParam p_param) const = 0 : real_t</text><ellipse cx="16408.59" cy="9506.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="16417.59" y="9509.6401">joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void</text><ellipse cx="16408.59" cy="9519.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="408" x="16417.59" y="9522.4448">joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool</text><ellipse cx="16408.59" cy="9532.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="526" x="16417.59" y="9535.2495">pin_joint_create(const Vector2 &amp; p_anchor, RID p_body_a, RID p_body_b = = RID()) = 0 : RID</text><ellipse cx="16408.59" cy="9544.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="857" x="16417.59" y="9548.0542">groove_joint_create(const Vector2 &amp; p_a_groove1, const Vector2 &amp; p_a_groove2, const Vector2 &amp; p_b_anchor, RID p_body_a, RID p_body_b) = 0 : RID</text><ellipse cx="16408.59" cy="9557.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="777" x="16417.59" y="9560.8589">damped_spring_joint_create(const Vector2 &amp; p_anchor_a, const Vector2 &amp; p_anchor_b, RID p_body_a, RID p_body_b = = RID()) = 0 : RID</text><ellipse cx="16408.59" cy="9570.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="572" x="16417.59" y="9573.6636">pin_joint_set_param(RID p_joint, Physics2DServer::PinJointParam p_param, real_t p_value) = 0 : void</text><ellipse cx="16408.59" cy="9583.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="527" x="16417.59" y="9586.4683">pin_joint_get_param(RID p_joint, Physics2DServer::PinJointParam p_param) const = 0 : real_t</text><ellipse cx="16408.59" cy="9596.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="678" x="16417.59" y="9599.2729">damped_string_joint_set_param(RID p_joint, Physics2DServer::DampedStringParam p_param, real_t p_value) = 0 : void</text><ellipse cx="16408.59" cy="9608.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="633" x="16417.59" y="9612.0776">damped_string_joint_get_param(RID p_joint, Physics2DServer::DampedStringParam p_param) const = 0 : real_t</text><ellipse cx="16408.59" cy="9621.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="372" x="16417.59" y="9624.8823">joint_get_type(RID p_joint) const = 0 : Physics2DServer::JointType</text><ellipse cx="16408.59" cy="9634.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="16417.59" y="9637.687">free(RID p_rid) = 0 : void</text><ellipse cx="16408.59" cy="9647.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="16417.59" y="9650.4917">set_active(bool p_active) = 0 : void</text><ellipse cx="16408.59" cy="9660.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="85" x="16417.59" y="9663.2964">init() = 0 : void</text><ellipse cx="16408.59" cy="9672.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="16417.59" y="9676.1011">step(float p_step) = 0 : void</text><ellipse cx="16408.59" cy="9685.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="16417.59" y="9688.9058">sync() = 0 : void</text><ellipse cx="16408.59" cy="9698.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="143" x="16417.59" y="9701.7104">flush_queries() = 0 : void</text><ellipse cx="16408.59" cy="9711.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="16417.59" y="9714.5151">end_sync() = 0 : void</text><ellipse cx="16408.59" cy="9724.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="16417.59" y="9727.3198">finish() = 0 : void</text><ellipse cx="16408.59" cy="9736.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="16417.59" y="9740.1245">is_flushing_queries() const = 0 : bool</text><ellipse cx="16408.59" cy="9749.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="359" x="16417.59" y="9752.9292">get_process_info(Physics2DServer::ProcessInfo p_info) = 0 : int</text><ellipse cx="16408.59" cy="9762.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="16417.59" y="9765.7339">Physics2DServer() : void</text><ellipse cx="16408.59" cy="9775.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="16417.59" y="9778.5386">~Physics2DServer() : void</text></a><!--MD5=[a1e2045fa446997825c1a6b4f13c2aa9]
class C_0001872058027933416994--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/scene_tree.h#L69" target="_top" title="SceneTree" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/scene_tree.h#L69" xlink:show="new" xlink:title="SceneTree" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="1251.6406" id="C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.5;" width="1661" x="27444.09" y="8206.9531"/><ellipse cx="28236.84" cy="8222.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M28239.8088,8228.5938 Q28239.2306,8228.8906 28238.59,8229.0313 Q28237.9494,8229.1875 28237.2463,8229.1875 Q28234.7463,8229.1875 28233.4181,8227.5469 Q28232.1056,8225.8906 28232.1056,8222.7656 Q28232.1056,8219.6406 28233.4181,8217.9844 Q28234.7463,8216.3281 28237.2463,8216.3281 Q28237.9494,8216.3281 28238.59,8216.4844 Q28239.2463,8216.6406 28239.8088,8216.9375 L28239.8088,8219.6563 Q28239.1838,8219.0781 28238.59,8218.8125 Q28237.9963,8218.5313 28237.3713,8218.5313 Q28236.0275,8218.5313 28235.34,8219.6094 Q28234.6525,8220.6719 28234.6525,8222.7656 Q28234.6525,8224.8594 28235.34,8225.9375 Q28236.0275,8227 28237.3713,8227 Q28237.9963,8227 28238.59,8226.7344 Q28239.1838,8226.4531 28239.8088,8225.875 L28239.8088,8228.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="28257.34" y="8227.1074">SceneTree</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27445.09" x2="29104.09" y1="8238.9531" y2="8238.9531"/><ellipse cx="27455.09" cy="8249.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="27464.09" y="8253.1636">NOTIFICATION_TRANSFORM_CHANGED : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="27445.09" x2="29104.09" y1="8259.7578" y2="8259.7578"/><ellipse cx="27455.09" cy="8270.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="27464.09" y="8273.9683">get_class() const : String</text><ellipse cx="27455.09" cy="8283.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="27464.09" y="8286.7729">_get_class_namev() const : const StringName *</text><ellipse cx="27455.09" cy="8296.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="27464.09" y="8299.5776">get_class_ptr_static() : void *</text><ellipse cx="27455.09" cy="8309.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="27464.09" y="8312.3823">get_class_static() : String</text><ellipse cx="27455.09" cy="8321.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="27464.09" y="8325.187">get_parent_class_static() : String</text><ellipse cx="27455.09" cy="8334.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="27464.09" y="8337.9917">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="27455.09" cy="8347.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="27464.09" y="8350.7964">get_category_static() : String</text><ellipse cx="27455.09" cy="8360.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="27464.09" y="8363.6011">inherits_static() : String</text><ellipse cx="27455.09" cy="8373.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27464.09" y="8376.4058">is_class(const String &amp; p_class) const : bool</text><ellipse cx="27455.09" cy="8386" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="27464.09" y="8389.2104">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="27455.09" cy="8398.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="27464.09" y="8402.0151">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="27455.09" cy="8411.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="27464.09" y="8414.8198">initialize_class() : void</text><ellipse cx="27455.09" cy="8424.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="27464.09" y="8427.6245">get_root() const : Viewport *</text><ellipse cx="27455.09" cy="8437.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1635" x="27464.09" y="8440.4292">call_group_flags(uint32_t p_call_flags, const StringName &amp; p_group, const StringName &amp; p_function, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27455.09" cy="8450.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="27464.09" y="8453.2339">notify_group_flags(uint32_t p_call_flags, const StringName &amp; p_group, int p_notification) : void</text><ellipse cx="27455.09" cy="8462.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="707" x="27464.09" y="8466.0386">set_group_flags(uint32_t p_call_flags, const StringName &amp; p_group, const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="27455.09" cy="8475.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1478" x="27464.09" y="8478.8433">call_group(const StringName &amp; p_group, const StringName &amp; p_function, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="27455.09" cy="8488.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="27464.09" y="8491.6479">notify_group(const StringName &amp; p_group, int p_notification) : void</text><ellipse cx="27455.09" cy="8501.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="550" x="27464.09" y="8504.4526">set_group(const StringName &amp; p_group, const String &amp; p_name, const Variant &amp; p_value) : void</text><ellipse cx="27455.09" cy="8514.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="27464.09" y="8517.2573">flush_transform_notifications() : void</text><ellipse cx="27455.09" cy="8526.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="27464.09" y="8530.062">input_text(const String &amp; p_text) : void</text><ellipse cx="27455.09" cy="8539.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="27464.09" y="8542.8667">input_event(const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="27455.09" cy="8552.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="27464.09" y="8555.6714">init() : void</text><ellipse cx="27455.09" cy="8565.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27464.09" y="8568.4761">iteration(float p_time) : bool</text><ellipse cx="27455.09" cy="8578.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="27464.09" y="8581.2808">idle(float p_time) : bool</text><ellipse cx="27455.09" cy="8590.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="27464.09" y="8594.0854">finish() : void</text><ellipse cx="27455.09" cy="8603.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="27464.09" y="8606.8901">set_auto_accept_quit(bool p_enable) : void</text><ellipse cx="27455.09" cy="8616.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="27464.09" y="8619.6948">set_quit_on_go_back(bool p_enable) : void</text><ellipse cx="27455.09" cy="8629.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27464.09" y="8632.4995">quit(int p_exit_code = -1) : void</text><ellipse cx="27455.09" cy="8642.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="27464.09" y="8645.3042">set_input_as_handled() : void</text><ellipse cx="27455.09" cy="8654.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="27464.09" y="8658.1089">is_input_handled() : bool</text><ellipse cx="27455.09" cy="8667.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="27464.09" y="8670.9136">get_physics_process_time() const : float</text><ellipse cx="27455.09" cy="8680.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="27464.09" y="8683.7183">get_idle_process_time() const : float</text><ellipse cx="27455.09" cy="8693.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="27464.09" y="8696.5229">is_node_being_edited(const Node * p_node) const : bool</text><ellipse cx="27455.09" cy="8706.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="27464.09" y="8709.3276">set_pause(bool p_enabled) : void</text><ellipse cx="27455.09" cy="8718.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="27464.09" y="8722.1323">is_paused() const : bool</text><ellipse cx="27455.09" cy="8731.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27464.09" y="8734.937">set_camera(const RID &amp; p_camera) : void</text><ellipse cx="27455.09" cy="8744.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="27464.09" y="8747.7417">get_camera() const : RID</text><ellipse cx="27455.09" cy="8757.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="27464.09" y="8760.5464">set_debug_collisions_hint(bool p_enabled) : void</text><ellipse cx="27455.09" cy="8770.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="27464.09" y="8773.3511">is_debugging_collisions_hint() const : bool</text><ellipse cx="27455.09" cy="8782.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="27464.09" y="8786.1558">set_debug_navigation_hint(bool p_enabled) : void</text><ellipse cx="27455.09" cy="8795.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="27464.09" y="8798.9604">is_debugging_navigation_hint() const : bool</text><ellipse cx="27455.09" cy="8808.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="27464.09" y="8811.7651">set_debug_collisions_color(const Color &amp; p_color) : void</text><ellipse cx="27455.09" cy="8821.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27464.09" y="8824.5698">get_debug_collisions_color() const : Color</text><ellipse cx="27455.09" cy="8834.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="27464.09" y="8837.3745">set_debug_collision_contact_color(const Color &amp; p_color) : void</text><ellipse cx="27455.09" cy="8846.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="27464.09" y="8850.1792">get_debug_collision_contact_color() const : Color</text><ellipse cx="27455.09" cy="8859.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="27464.09" y="8862.9839">set_debug_navigation_color(const Color &amp; p_color) : void</text><ellipse cx="27455.09" cy="8872.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="27464.09" y="8875.7886">get_debug_navigation_color() const : Color</text><ellipse cx="27455.09" cy="8885.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="27464.09" y="8888.5933">set_debug_navigation_disabled_color(const Color &amp; p_color) : void</text><ellipse cx="27455.09" cy="8898.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27464.09" y="8901.3979">get_debug_navigation_disabled_color() const : Color</text><ellipse cx="27455.09" cy="8910.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="27464.09" y="8914.2026">get_debug_navigation_material() : Ref&lt;Material&gt;</text><ellipse cx="27455.09" cy="8923.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="27464.09" y="8927.0073">get_debug_navigation_disabled_material() : Ref&lt;Material&gt;</text><ellipse cx="27455.09" cy="8936.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27464.09" y="8939.812">get_debug_collision_material() : Ref&lt;Material&gt;</text><ellipse cx="27455.09" cy="8949.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="27464.09" y="8952.6167">get_debug_contact_mesh() : Ref&lt;ArrayMesh&gt;</text><ellipse cx="27455.09" cy="8962.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="27464.09" y="8965.4214">get_collision_debug_contact_count() : int</text><ellipse cx="27455.09" cy="8975.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="27464.09" y="8978.2261">get_frame() const : int64_t</text><ellipse cx="27455.09" cy="8987.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="27464.09" y="8991.0308">get_event_count() const : int64_t</text><ellipse cx="27455.09" cy="9000.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27464.09" y="9003.8354">get_node_count() const : int</text><ellipse cx="27455.09" cy="9013.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="27464.09" y="9016.6401">queue_delete(Object * p_object) : void</text><ellipse cx="27455.09" cy="9026.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="27464.09" y="9029.4448">get_nodes_in_group(const StringName &amp; p_group, List&lt;Node *&gt; * p_list) : void</text><ellipse cx="27455.09" cy="9039.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="27464.09" y="9042.2495">has_group(const StringName &amp; p_identifier) const : bool</text><ellipse cx="27455.09" cy="9051.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="815" x="27464.09" y="9055.0542">set_screen_stretch(SceneTree::StretchMode p_mode, SceneTree::StretchAspect p_aspect, const Size2 &amp; p_minsize, real_t p_shrink = 1) : void</text><ellipse cx="27455.09" cy="9064.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="27464.09" y="9067.8589">set_use_font_oversampling(bool p_oversampling) : void</text><ellipse cx="27455.09" cy="9077.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="27464.09" y="9080.6636">is_using_font_oversampling() const : bool</text><ellipse cx="27455.09" cy="9090.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27464.09" y="9093.4683">set_edited_scene_root(Node * p_node) : void</text><ellipse cx="27455.09" cy="9103.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="27464.09" y="9106.2729">get_edited_scene_root() const : Node *</text><ellipse cx="27455.09" cy="9115.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="27464.09" y="9119.0776">set_current_scene(Node * p_scene) : void</text><ellipse cx="27455.09" cy="9128.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="27464.09" y="9131.8823">get_current_scene() const : Node *</text><ellipse cx="27455.09" cy="9141.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="27464.09" y="9144.687">change_scene(const String &amp; p_path) : Error</text><ellipse cx="27455.09" cy="9154.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="27464.09" y="9157.4917">change_scene_to(const Ref&lt;PackedScene&gt; &amp; p_scene) : Error</text><ellipse cx="27455.09" cy="9167.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="27464.09" y="9170.2964">reload_current_scene() : Error</text><ellipse cx="27455.09" cy="9179.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="27464.09" y="9183.1011">create_timer(float p_delay_sec, bool p_process_pause = true) : Ref&lt;SceneTreeTimer&gt;</text><ellipse cx="27455.09" cy="9192.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="27464.09" y="9195.9058">add_current_scene(Node * p_current) : void</text><ellipse cx="27455.09" cy="9205.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="27464.09" y="9208.7104">get_singleton() : SceneTree *</text><ellipse cx="27455.09" cy="9218.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412" x="27464.09" y="9221.5151">drop_files(const Vector&lt;String&gt; &amp; p_files, int p_from_screen = 0) : void</text><ellipse cx="27455.09" cy="9231.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="27464.09" y="9234.3198">global_menu_action(const Variant &amp; p_id, const Variant &amp; p_meta) : void</text><ellipse cx="27455.09" cy="9243.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="27464.09" y="9247.1245">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="27455.09" cy="9256.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="27464.09" y="9259.9292">get_multiplayer() const : Ref&lt;MultiplayerAPI&gt;</text><ellipse cx="27455.09" cy="9269.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="27464.09" y="9272.7339">set_multiplayer_poll_enabled(bool p_enabled) : void</text><ellipse cx="27455.09" cy="9282.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="27464.09" y="9285.5386">is_multiplayer_poll_enabled() const : bool</text><ellipse cx="27455.09" cy="9295.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="27464.09" y="9298.3433">set_multiplayer(Ref&lt;MultiplayerAPI&gt; p_multiplayer) : void</text><ellipse cx="27455.09" cy="9307.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="470" x="27464.09" y="9311.1479">set_network_peer(const Ref&lt;NetworkedMultiplayerPeer&gt; &amp; p_network_peer) : void</text><ellipse cx="27455.09" cy="9320.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="27464.09" y="9323.9526">get_network_peer() const : Ref&lt;NetworkedMultiplayerPeer&gt;</text><ellipse cx="27455.09" cy="9333.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="27464.09" y="9336.7573">is_network_server() const : bool</text><ellipse cx="27455.09" cy="9346.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="27464.09" y="9349.562">has_network_peer() const : bool</text><ellipse cx="27455.09" cy="9359.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="27464.09" y="9362.3667">get_network_unique_id() const : int</text><ellipse cx="27455.09" cy="9371.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="27464.09" y="9375.1714">get_network_connected_peers() const : Vector&lt;int&gt;</text><ellipse cx="27455.09" cy="9384.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="27464.09" y="9387.9761">get_rpc_sender_id() const : int</text><ellipse cx="27455.09" cy="9397.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="27464.09" y="9400.7808">set_refuse_new_network_connections(bool p_refuse) : void</text><ellipse cx="27455.09" cy="9410.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27464.09" y="9413.5854">is_refusing_new_network_connections() const : bool</text><ellipse cx="27455.09" cy="9423.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="339" x="27464.09" y="9426.3901">add_idle_callback(SceneTree::IdleCallback p_callback) : void</text><ellipse cx="27455.09" cy="9435.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="27464.09" y="9439.1948">SceneTree() : void</text><ellipse cx="27455.09" cy="9448.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="27464.09" y="9451.9995">~SceneTree() : void</text></a><!--MD5=[9ad247f9a1f402d5bcd303a8e9ade6db]
class C_0000762417759113755306--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298" target="_top" title="_ArrayVariantSortCustom" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298" xlink:show="new" xlink:title="_ArrayVariantSortCustom" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="86.4141" id="C_0000762417759113755306" style="stroke: #A80036; stroke-width: 1.5;" width="390" x="32464.59" y="707.9531"/><ellipse cx="32577.34" cy="723.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M32580.3088,729.5938 Q32579.7306,729.8906 32579.09,730.0313 Q32578.4494,730.1875 32577.7463,730.1875 Q32575.2463,730.1875 32573.9181,728.5469 Q32572.6056,726.8906 32572.6056,723.7656 Q32572.6056,720.6406 32573.9181,718.9844 Q32575.2463,717.3281 32577.7463,717.3281 Q32578.4494,717.3281 32579.09,717.4844 Q32579.7463,717.6406 32580.3088,717.9375 L32580.3088,720.6563 Q32579.6838,720.0781 32579.09,719.8125 Q32578.4963,719.5313 32577.8713,719.5313 Q32576.5275,719.5313 32575.84,720.6094 Q32575.1525,721.6719 32575.1525,723.7656 Q32575.1525,725.8594 32575.84,726.9375 Q32576.5275,728 32577.8713,728 Q32578.4963,728 32579.09,727.7344 Q32579.6838,727.4531 32580.3088,726.875 L32580.3088,729.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="32597.84" y="728.1074">_ArrayVariantSortCustom</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="32465.59" x2="32853.59" y1="739.9531" y2="739.9531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" xlink:show="new" xlink:title="obj" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32470.59" y="745.9531"/><ellipse cx="32475.59" cy="750.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" target="_top" title="obj" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300" xlink:show="new" xlink:title="obj" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="32484.59" y="754.1636">obj : Object *</text></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" target="_top" title="func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" xlink:show="new" xlink:title="func" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="32470.59" y="758.7578"/><ellipse cx="32475.59" cy="763.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" target="_top" title="func" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301" xlink:show="new" xlink:title="func" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="32484.59" y="766.9683">func : StringName</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="32465.59" x2="32853.59" y1="773.5625" y2="773.5625"/><ellipse cx="32475.59" cy="784.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="32484.59" y="787.7729">operator()(const Variant &amp; p_l, const Variant &amp; p_r) const : bool</text><!--MD5=[6de3aa3d86b19b8e0f1ee230f1ebf3bf]
class C_0000314051240057057851--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37" target="_top" title="InputMap" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37" xlink:show="new" xlink:title="InputMap" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="444.9453" id="C_0000314051240057057851" style="stroke: #A80036; stroke-width: 1.5;" width="921" x="21774.09" y="8610.4531"/><ellipse cx="22201.34" cy="8626.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M22204.3088,8632.0938 Q22203.7306,8632.3906 22203.09,8632.5313 Q22202.4494,8632.6875 22201.7463,8632.6875 Q22199.2463,8632.6875 22197.9181,8631.0469 Q22196.6056,8629.3906 22196.6056,8626.2656 Q22196.6056,8623.1406 22197.9181,8621.4844 Q22199.2463,8619.8281 22201.7463,8619.8281 Q22202.4494,8619.8281 22203.09,8619.9844 Q22203.7463,8620.1406 22204.3088,8620.4375 L22204.3088,8623.1563 Q22203.6838,8622.5781 22203.09,8622.3125 Q22202.4963,8622.0313 22201.8713,8622.0313 Q22200.5275,8622.0313 22199.84,8623.1094 Q22199.1525,8624.1719 22199.1525,8626.2656 Q22199.1525,8628.3594 22199.84,8629.4375 Q22200.5275,8630.5 22201.8713,8630.5 Q22202.4963,8630.5 22203.09,8630.2344 Q22203.6838,8629.9531 22204.3088,8629.375 L22204.3088,8632.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="22221.84" y="8630.6074">InputMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="21775.09" x2="22694.09" y1="8642.4531" y2="8642.4531"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" target="_top" title="A special value used to signify that a given Action can be triggered by any device" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" xlink:show="new" xlink:title="A special value used to signify that a given Action can be triggered by any device" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="21780.09" y="8648.4531"/><ellipse cx="21785.09" cy="8653.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" target="_top" title="A special value used to signify that a given Action can be triggered by any device" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45" xlink:show="new" xlink:title="A special value used to signify that a given Action can be triggered by any device" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="99" x="21794.09" y="8656.6636">ALL_DEVICES : int</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="21775.09" x2="22694.09" y1="8663.2578" y2="8663.2578"/><ellipse cx="21785.09" cy="8674.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="21794.09" y="8677.4683">get_class() const : String</text><ellipse cx="21785.09" cy="8687.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="21794.09" y="8690.2729">_get_class_namev() const : const StringName *</text><ellipse cx="21785.09" cy="8699.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="21794.09" y="8703.0776">get_class_ptr_static() : void *</text><ellipse cx="21785.09" cy="8712.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="21794.09" y="8715.8823">get_class_static() : String</text><ellipse cx="21785.09" cy="8725.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="21794.09" y="8728.687">get_parent_class_static() : String</text><ellipse cx="21785.09" cy="8738.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="21794.09" y="8741.4917">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="21785.09" cy="8751.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="21794.09" y="8754.2964">get_category_static() : String</text><ellipse cx="21785.09" cy="8763.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="21794.09" y="8767.1011">inherits_static() : String</text><ellipse cx="21785.09" cy="8776.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="21794.09" y="8779.9058">is_class(const String &amp; p_class) const : bool</text><ellipse cx="21785.09" cy="8789.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="21794.09" y="8792.7104">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="21785.09" cy="8802.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="21794.09" y="8805.5151">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="21785.09" cy="8815.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="21794.09" y="8818.3198">initialize_class() : void</text><ellipse cx="21785.09" cy="8827.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="157" x="21794.09" y="8831.1245">get_singleton() : InputMap *</text><ellipse cx="21785.09" cy="8840.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="21794.09" y="8843.9292">has_action(const StringName &amp; p_action) const : bool</text><ellipse cx="21785.09" cy="8853.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="21794.09" y="8856.7339">get_actions() const : List&lt;StringName&gt;</text><ellipse cx="21785.09" cy="8866.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="21794.09" y="8869.5386">add_action(const StringName &amp; p_action, float p_deadzone = 0.5) : void</text><ellipse cx="21785.09" cy="8879.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="21794.09" y="8882.3433">erase_action(const StringName &amp; p_action) : void</text><ellipse cx="21785.09" cy="8891.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="21794.09" y="8895.1479">action_get_deadzone(const StringName &amp; p_action) : float</text><ellipse cx="21785.09" cy="8904.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="21794.09" y="8907.9526">action_set_deadzone(const StringName &amp; p_action, float p_deadzone) : void</text><ellipse cx="21785.09" cy="8917.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="21794.09" y="8920.7573">action_add_event(const StringName &amp; p_action, const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="21785.09" cy="8930.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="21794.09" y="8933.562">action_has_event(const StringName &amp; p_action, const Ref&lt;InputEvent&gt; &amp; p_event) : bool</text><ellipse cx="21785.09" cy="8943.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="21794.09" y="8946.3667">action_erase_event(const StringName &amp; p_action, const Ref&lt;InputEvent&gt; &amp; p_event) : void</text><ellipse cx="21785.09" cy="8955.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="21794.09" y="8959.1714">action_erase_events(const StringName &amp; p_action) : void</text><ellipse cx="21785.09" cy="8968.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="21794.09" y="8971.9761">get_action_list(const StringName &amp; p_action) : const List&lt;Ref&lt;InputEvent&gt;&gt; *</text><ellipse cx="21785.09" cy="8981.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="533" x="21794.09" y="8984.7808">event_is_action(const Ref&lt;InputEvent&gt; &amp; p_event, const StringName &amp; p_action) const : bool</text><ellipse cx="21785.09" cy="8994.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="895" x="21794.09" y="8997.5854">event_get_action_status(const Ref&lt;InputEvent&gt; &amp; p_event, const StringName &amp; p_action, bool * p_pressed = __null, float * p_strength = __null) const : bool</text><ellipse cx="21785.09" cy="9007.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="21794.09" y="9010.3901">get_action_map() const : const Map&lt;StringName,InputMap::Action&gt; &amp;</text><ellipse cx="21785.09" cy="9019.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="21794.09" y="9023.1948">load_from_globals() : void</text><ellipse cx="21785.09" cy="9032.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="21794.09" y="9035.9995">load_default() : void</text><ellipse cx="21785.09" cy="9045.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="21794.09" y="9048.8042">InputMap() : void</text><!--MD5=[3306ef7474ee8a0f7d63514abbcbe3b8]
class C_0000535376932101028371--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38" target="_top" title="Input" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38" xlink:show="new" xlink:title="Input" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="854.6953" id="C_0000535376932101028371" style="stroke: #A80036; stroke-width: 1.5;" width="876" x="22830.59" y="8405.4531"/><ellipse cx="23247.84" cy="8421.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23247.9494,8416.7969 L23246.7931,8421.875 L23249.1213,8421.875 L23247.9494,8416.7969 Z M23246.465,8414.5625 L23249.4494,8414.5625 L23252.8088,8426.9531 L23250.3556,8426.9531 L23249.59,8423.8906 L23246.3088,8423.8906 L23245.5588,8426.9531 L23243.1213,8426.9531 L23246.465,8414.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="33" x="23268.34" y="8425.6074">Input</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="22831.59" x2="23705.59" y1="8437.4531" y2="8437.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="22831.59" x2="23705.59" y1="8445.4531" y2="8445.4531"/><ellipse cx="22841.59" cy="8456.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="22850.59" y="8459.6636">get_class() const : String</text><ellipse cx="22841.59" cy="8469.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="22850.59" y="8472.4683">_get_class_namev() const : const StringName *</text><ellipse cx="22841.59" cy="8482.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="22850.59" y="8485.2729">get_class_ptr_static() : void *</text><ellipse cx="22841.59" cy="8494.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="22850.59" y="8498.0776">get_class_static() : String</text><ellipse cx="22841.59" cy="8507.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="22850.59" y="8510.8823">get_parent_class_static() : String</text><ellipse cx="22841.59" cy="8520.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="22850.59" y="8523.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="22841.59" cy="8533.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="22850.59" y="8536.4917">get_category_static() : String</text><ellipse cx="22841.59" cy="8546.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="22850.59" y="8549.2964">inherits_static() : String</text><ellipse cx="22841.59" cy="8558.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="22850.59" y="8562.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="22841.59" cy="8571.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="22850.59" y="8574.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="22841.59" cy="8584.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="22850.59" y="8587.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="22841.59" cy="8597.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="22850.59" y="8600.5151">initialize_class() : void</text><ellipse cx="22841.59" cy="8610.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="22850.59" y="8613.3198">set_mouse_mode(Input::MouseMode p_mode) : void</text><ellipse cx="22841.59" cy="8622.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="22850.59" y="8626.1245">get_mouse_mode() const : Input::MouseMode</text><ellipse cx="22841.59" cy="8635.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="22850.59" y="8638.9292">get_singleton() : Input *</text><ellipse cx="22841.59" cy="8648.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="272" x="22850.59" y="8651.7339">is_key_pressed(int p_scancode) const = 0 : bool</text><ellipse cx="22841.59" cy="8661.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="315" x="22850.59" y="8664.5386">is_mouse_button_pressed(int p_button) const = 0 : bool</text><ellipse cx="22841.59" cy="8674.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="22850.59" y="8677.3433">is_joy_button_pressed(int p_device, int p_button) const = 0 : bool</text><ellipse cx="22841.59" cy="8686.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="366" x="22850.59" y="8690.1479">is_action_pressed(const StringName &amp; p_action) const = 0 : bool</text><ellipse cx="22841.59" cy="8699.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="392" x="22850.59" y="8702.9526">is_action_just_pressed(const StringName &amp; p_action) const = 0 : bool</text><ellipse cx="22841.59" cy="8712.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="396" x="22850.59" y="8715.7573">is_action_just_released(const StringName &amp; p_action) const = 0 : bool</text><ellipse cx="22841.59" cy="8725.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="378" x="22850.59" y="8728.562">get_action_strength(const StringName &amp; p_action) const = 0 : float</text><ellipse cx="22841.59" cy="8738.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="303" x="22850.59" y="8741.3667">get_joy_axis(int p_device, int p_axis) const = 0 : float</text><ellipse cx="22841.59" cy="8750.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="204" x="22850.59" y="8754.1714">get_joy_name(int p_idx) = 0 : String</text><ellipse cx="22841.59" cy="8763.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="22850.59" y="8766.9761">get_connected_joypads() = 0 : Array</text><ellipse cx="22841.59" cy="8776.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="533" x="22850.59" y="8779.7808">joy_connection_changed(int p_idx, bool p_connected, String p_name, String p_guid) = 0 : void</text><ellipse cx="22841.59" cy="8789.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="448" x="22850.59" y="8792.5854">add_joy_mapping(String p_mapping, bool p_update_existing = false) = 0 : void</text><ellipse cx="22841.59" cy="8802.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="264" x="22850.59" y="8805.3901">remove_joy_mapping(String p_guid) = 0 : void</text><ellipse cx="22841.59" cy="8814.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="210" x="22850.59" y="8818.1948">is_joy_known(int p_device) = 0 : bool</text><ellipse cx="22841.59" cy="8827.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="250" x="22850.59" y="8830.9995">get_joy_guid(int p_device) const = 0 : String</text><ellipse cx="22841.59" cy="8840.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="306" x="22850.59" y="8843.8042">get_joy_vibration_strength(int p_device) = 0 : Vector2</text><ellipse cx="22841.59" cy="8853.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="22850.59" y="8856.6089">get_joy_vibration_duration(int p_device) = 0 : float</text><ellipse cx="22841.59" cy="8866.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="320" x="22850.59" y="8869.4136">get_joy_vibration_timestamp(int p_device) = 0 : uint64_t</text><ellipse cx="22841.59" cy="8879.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="659" x="22850.59" y="8882.2183">start_joy_vibration(int p_device, float p_weak_magnitude, float p_strong_magnitude, float p_duration = 0) = 0 : void</text><ellipse cx="22841.59" cy="8891.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="22850.59" y="8895.0229">stop_joy_vibration(int p_device) = 0 : void</text><ellipse cx="22841.59" cy="8904.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="305" x="22850.59" y="8907.8276">vibrate_handheld(int p_duration_ms = 500) = 0 : void</text><ellipse cx="22841.59" cy="8917.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="225" x="22850.59" y="8920.6323">get_mouse_position() const = 0 : Point2</text><ellipse cx="22841.59" cy="8930.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241" x="22850.59" y="8933.437">get_last_mouse_speed() const = 0 : Point2</text><ellipse cx="22841.59" cy="8943.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="22850.59" y="8946.2417">get_mouse_button_mask() const = 0 : int</text><ellipse cx="22841.59" cy="8955.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="22850.59" y="8959.0464">warp_mouse_position(const Vector2 &amp; p_to) = 0 : void</text><ellipse cx="22841.59" cy="8968.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="598" x="22850.59" y="8971.8511">warp_mouse_motion(const Ref&lt;InputEventMouseMotion&gt; &amp; p_motion, const Rect2 &amp; p_rect) = 0 : Point2i</text><ellipse cx="22841.59" cy="8981.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="22850.59" y="8984.6558">get_gravity() const = 0 : Vector3</text><ellipse cx="22841.59" cy="8994.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="22850.59" y="8997.4604">get_accelerometer() const = 0 : Vector3</text><ellipse cx="22841.59" cy="9007.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="22850.59" y="9010.2651">get_magnetometer() const = 0 : Vector3</text><ellipse cx="22841.59" cy="9019.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="22850.59" y="9023.0698">get_gyroscope() const = 0 : Vector3</text><ellipse cx="22841.59" cy="9032.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="22850.59" y="9035.8745">action_press(const StringName &amp; p_action, float p_strength = 1.f) = 0 : void</text><ellipse cx="22841.59" cy="9045.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="314" x="22850.59" y="9048.6792">action_release(const StringName &amp; p_action) = 0 : void</text><ellipse cx="22841.59" cy="9058.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="22850.59" y="9061.4839">get_argument_options(const StringName &amp; p_function, int p_idx, List&lt;String&gt; * r_options) const : void</text><ellipse cx="22841.59" cy="9071.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="22850.59" y="9074.2886">is_emulating_touch_from_mouse() const = 0 : bool</text><ellipse cx="22841.59" cy="9083.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="22850.59" y="9087.0933">is_emulating_mouse_from_touch() const = 0 : bool</text><ellipse cx="22841.59" cy="9096.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="332" x="22850.59" y="9099.8979">get_default_cursor_shape() const = 0 : Input::CursorShape</text><ellipse cx="22841.59" cy="9109.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="372" x="22850.59" y="9112.7026">set_default_cursor_shape(Input::CursorShape p_shape) = 0 : void</text><ellipse cx="22841.59" cy="9122.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="334" x="22850.59" y="9125.5073">get_current_cursor_shape() const = 0 : Input::CursorShape</text><ellipse cx="22841.59" cy="9135.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="850" x="22850.59" y="9138.312">set_custom_mouse_cursor(const RES &amp; p_cursor, Input::CursorShape p_shape = CURSOR_ARROW, const Vector2 &amp; p_hotspot = Vector2()) = 0 : void</text><ellipse cx="22841.59" cy="9147.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="265" x="22850.59" y="9151.1167">get_joy_button_string(int p_button) = 0 : String</text><ellipse cx="22841.59" cy="9160.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239" x="22850.59" y="9163.9214">get_joy_axis_string(int p_axis) = 0 : String</text><ellipse cx="22841.59" cy="9173.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="335" x="22850.59" y="9176.7261">get_joy_button_index_from_string(String p_button) = 0 : int</text><ellipse cx="22841.59" cy="9186.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="309" x="22850.59" y="9189.5308">get_joy_axis_index_from_string(String p_axis) = 0 : int</text><ellipse cx="22841.59" cy="9199.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="365" x="22850.59" y="9202.3354">parse_input_event(const Ref&lt;InputEvent&gt; &amp; p_event) = 0 : void</text><ellipse cx="22841.59" cy="9211.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="398" x="22850.59" y="9215.1401">accumulate_input_event(const Ref&lt;InputEvent&gt; &amp; p_event) = 0 : void</text><ellipse cx="22841.59" cy="9224.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217" x="22850.59" y="9227.9448">flush_accumulated_events() = 0 : void</text><ellipse cx="22841.59" cy="9237.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="302" x="22850.59" y="9240.7495">set_use_accumulated_input(bool p_enable) = 0 : void</text><ellipse cx="22841.59" cy="9250.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="22850.59" y="9253.5542">Input() : void</text></a><!--MD5=[e6941b9b1ee3163b45cd73ecd30a9f2c]
class C_0001370497546359815893--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148" target="_top" title="AudioServer" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148" xlink:show="new" xlink:title="AudioServer" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="1085.1797" id="C_0001370497546359815893" style="stroke: #A80036; stroke-width: 1.5;" width="560" x="24048.59" y="8290.4531"/><ellipse cx="24286.84" cy="8306.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M24289.8088,8312.0938 Q24289.2306,8312.3906 24288.59,8312.5313 Q24287.9494,8312.6875 24287.2463,8312.6875 Q24284.7463,8312.6875 24283.4181,8311.0469 Q24282.1056,8309.3906 24282.1056,8306.2656 Q24282.1056,8303.1406 24283.4181,8301.4844 Q24284.7463,8299.8281 24287.2463,8299.8281 Q24287.9494,8299.8281 24288.59,8299.9844 Q24289.2463,8300.1406 24289.8088,8300.4375 L24289.8088,8303.1563 Q24289.1838,8302.5781 24288.59,8302.3125 Q24287.9963,8302.0313 24287.3713,8302.0313 Q24286.0275,8302.0313 24285.34,8303.1094 Q24284.6525,8304.1719 24284.6525,8306.2656 Q24284.6525,8308.3594 24285.34,8309.4375 Q24286.0275,8310.5 24287.3713,8310.5 Q24287.9963,8310.5 24288.59,8310.2344 Q24289.1838,8309.9531 24289.8088,8309.375 L24289.8088,8312.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="24307.34" y="8310.6074">AudioServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24049.59" x2="24607.59" y1="8322.4531" y2="8322.4531"/><ellipse cx="24059.59" cy="8333.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="24068.59" y="8336.6636">AUDIO_DATA_INVALID_ID : enum</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="24049.59" x2="24607.59" y1="8343.2578" y2="8343.2578"/><ellipse cx="24059.59" cy="8354.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="24068.59" y="8357.4683">get_class() const : String</text><ellipse cx="24059.59" cy="8367.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="24068.59" y="8370.2729">_get_class_namev() const : const StringName *</text><ellipse cx="24059.59" cy="8379.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="24068.59" y="8383.0776">get_class_ptr_static() : void *</text><ellipse cx="24059.59" cy="8392.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="24068.59" y="8395.8823">get_class_static() : String</text><ellipse cx="24059.59" cy="8405.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="24068.59" y="8408.687">get_parent_class_static() : String</text><ellipse cx="24059.59" cy="8418.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="24068.59" y="8421.4917">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="24059.59" cy="8431.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="24068.59" y="8434.2964">get_category_static() : String</text><ellipse cx="24059.59" cy="8443.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="24068.59" y="8447.1011">inherits_static() : String</text><ellipse cx="24059.59" cy="8456.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="24068.59" y="8459.9058">is_class(const String &amp; p_class) const : bool</text><ellipse cx="24059.59" cy="8469.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="24068.59" y="8472.7104">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="24059.59" cy="8482.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="24068.59" y="8485.5151">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="24059.59" cy="8495.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="24068.59" y="8498.3198">initialize_class() : void</text><ellipse cx="24059.59" cy="8507.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="24068.59" y="8511.1245">get_channel_count() const : int</text><ellipse cx="24059.59" cy="8520.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="24068.59" y="8523.9292">thread_has_channel_mix_buffer(int p_bus, int p_buffer) const : bool</text><ellipse cx="24059.59" cy="8533.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="24068.59" y="8536.7339">thread_get_channel_mix_buffer(int p_bus, int p_buffer) : AudioFrame *</text><ellipse cx="24059.59" cy="8546.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="24068.59" y="8549.5386">thread_get_mix_buffer_size() const : int</text><ellipse cx="24059.59" cy="8559.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="24068.59" y="8562.3433">thread_find_bus_index(const StringName &amp; p_name) : int</text><ellipse cx="24059.59" cy="8571.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="24068.59" y="8575.1479">set_bus_count(int p_count) : void</text><ellipse cx="24059.59" cy="8584.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="24068.59" y="8587.9526">get_bus_count() const : int</text><ellipse cx="24059.59" cy="8597.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="24068.59" y="8600.7573">remove_bus(int p_index) : void</text><ellipse cx="24059.59" cy="8610.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="24068.59" y="8613.562">add_bus(int p_at_pos = -1) : void</text><ellipse cx="24059.59" cy="8623.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="24068.59" y="8626.3667">move_bus(int p_bus, int p_to_pos) : void</text><ellipse cx="24059.59" cy="8635.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="24068.59" y="8639.1714">set_bus_name(int p_bus, const String &amp; p_name) : void</text><ellipse cx="24059.59" cy="8648.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="24068.59" y="8651.9761">get_bus_name(int p_bus) const : String</text><ellipse cx="24059.59" cy="8661.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="24068.59" y="8664.7808">get_bus_index(const StringName &amp; p_bus_name) const : int</text><ellipse cx="24059.59" cy="8674.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="24068.59" y="8677.5854">get_bus_channels(int p_bus) const : int</text><ellipse cx="24059.59" cy="8687.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="24068.59" y="8690.3901">set_bus_volume_db(int p_bus, float p_volume_db) : void</text><ellipse cx="24059.59" cy="8699.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="24068.59" y="8703.1948">get_bus_volume_db(int p_bus) const : float</text><ellipse cx="24059.59" cy="8712.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="24068.59" y="8715.9995">set_bus_send(int p_bus, const StringName &amp; p_send) : void</text><ellipse cx="24059.59" cy="8725.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="24068.59" y="8728.8042">get_bus_send(int p_bus) const : StringName</text><ellipse cx="24059.59" cy="8738.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="24068.59" y="8741.6089">set_bus_solo(int p_bus, bool p_enable) : void</text><ellipse cx="24059.59" cy="8751.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="24068.59" y="8754.4136">is_bus_solo(int p_bus) const : bool</text><ellipse cx="24059.59" cy="8764.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="24068.59" y="8767.2183">set_bus_mute(int p_bus, bool p_enable) : void</text><ellipse cx="24059.59" cy="8776.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="24068.59" y="8780.0229">is_bus_mute(int p_bus) const : bool</text><ellipse cx="24059.59" cy="8789.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="24068.59" y="8792.8276">set_bus_bypass_effects(int p_bus, bool p_enable) : void</text><ellipse cx="24059.59" cy="8802.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="24068.59" y="8805.6323">is_bus_bypassing_effects(int p_bus) const : bool</text><ellipse cx="24059.59" cy="8815.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="24068.59" y="8818.437">add_bus_effect(int p_bus, const Ref&lt;AudioEffect&gt; &amp; p_effect, int p_at_pos = -1) : void</text><ellipse cx="24059.59" cy="8828.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="24068.59" y="8831.2417">remove_bus_effect(int p_bus, int p_effect) : void</text><ellipse cx="24059.59" cy="8840.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="24068.59" y="8844.0464">get_bus_effect_count(int p_bus) : int</text><ellipse cx="24059.59" cy="8853.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="24068.59" y="8856.8511">get_bus_effect(int p_bus, int p_effect) : Ref&lt;AudioEffect&gt;</text><ellipse cx="24059.59" cy="8866.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="534" x="24068.59" y="8869.6558">get_bus_effect_instance(int p_bus, int p_effect, int p_channel = 0) : Ref&lt;AudioEffectInstance&gt;</text><ellipse cx="24059.59" cy="8879.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="24068.59" y="8882.4604">swap_bus_effects(int p_bus, int p_effect, int p_by_effect) : void</text><ellipse cx="24059.59" cy="8892.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="24068.59" y="8895.2651">set_bus_effect_enabled(int p_bus, int p_effect, bool p_enabled) : void</text><ellipse cx="24059.59" cy="8904.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="24068.59" y="8908.0698">is_bus_effect_enabled(int p_bus, int p_effect) const : bool</text><ellipse cx="24059.59" cy="8917.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="384" x="24068.59" y="8920.8745">get_bus_peak_volume_left_db(int p_bus, int p_channel) const : float</text><ellipse cx="24059.59" cy="8930.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="24068.59" y="8933.6792">get_bus_peak_volume_right_db(int p_bus, int p_channel) const : float</text><ellipse cx="24059.59" cy="8943.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="24068.59" y="8946.4839">is_bus_channel_active(int p_bus, int p_channel) const : bool</text><ellipse cx="24059.59" cy="8956.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="24068.59" y="8959.2886">set_global_rate_scale(float p_scale) : void</text><ellipse cx="24059.59" cy="8968.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="24068.59" y="8972.0933">get_global_rate_scale() const : float</text><ellipse cx="24059.59" cy="8981.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="24068.59" y="8984.8979">init() : void</text><ellipse cx="24059.59" cy="8994.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="24068.59" y="8997.7026">finish() : void</text><ellipse cx="24059.59" cy="9007.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="24068.59" y="9010.5073">update() : void</text><ellipse cx="24059.59" cy="9020.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="24068.59" y="9023.312">load_default_bus_layout() : void</text><ellipse cx="24059.59" cy="9032.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="24068.59" y="9036.1167">lock() : void</text><ellipse cx="24059.59" cy="9045.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="24068.59" y="9048.9214">unlock() : void</text><ellipse cx="24059.59" cy="9058.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="24068.59" y="9061.7261">get_speaker_mode() const : AudioServer::SpeakerMode</text><ellipse cx="24059.59" cy="9071.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="24068.59" y="9074.5308">get_mix_rate() const : float</text><ellipse cx="24059.59" cy="9084.125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="24068.59" y="9087.3354">read_output_peak_db() const : float</text><ellipse cx="24059.59" cy="9096.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="175" x="24068.59" y="9100.1401">get_singleton() : AudioServer *</text><ellipse cx="24059.59" cy="9109.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="24068.59" y="9112.9448">get_output_latency() const : double</text><ellipse cx="24059.59" cy="9122.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="24068.59" y="9125.7495">get_time_to_next_mix() const : double</text><ellipse cx="24059.59" cy="9135.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="24068.59" y="9138.5542">get_time_since_last_mix() const : double</text><ellipse cx="24059.59" cy="9148.1484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="24068.59" y="9151.3589">audio_data_alloc(uint32_t p_data_len, const uint8_t * p_from_data = __null) : void *</text><ellipse cx="24059.59" cy="9160.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="24068.59" y="9164.1636">audio_data_free(void * p_data) : void</text><ellipse cx="24059.59" cy="9173.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="24068.59" y="9176.9683">audio_data_get_total_memory_usage() const : size_t</text><ellipse cx="24059.59" cy="9186.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="24068.59" y="9189.7729">audio_data_get_max_memory_usage() const : size_t</text><ellipse cx="24059.59" cy="9199.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="441" x="24068.59" y="9202.5776">add_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="24059.59" cy="9212.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="24068.59" y="9215.3823">remove_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="24059.59" cy="9224.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="24068.59" y="9228.187">add_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="24059.59" cy="9237.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="24068.59" y="9240.9917">remove_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void</text><ellipse cx="24059.59" cy="9250.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="24068.59" y="9253.7964">set_bus_layout(const Ref&lt;AudioBusLayout&gt; &amp; p_bus_layout) : void</text><ellipse cx="24059.59" cy="9263.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="24068.59" y="9266.6011">generate_bus_layout() const : Ref&lt;AudioBusLayout&gt;</text><ellipse cx="24059.59" cy="9276.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="24068.59" y="9279.4058">get_device_list() : Array</text><ellipse cx="24059.59" cy="9289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="24068.59" y="9292.2104">get_device() : String</text><ellipse cx="24059.59" cy="9301.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="24068.59" y="9305.0151">set_device(String device) : void</text><ellipse cx="24059.59" cy="9314.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="24068.59" y="9317.8198">capture_get_device_list() : Array</text><ellipse cx="24059.59" cy="9327.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="24068.59" y="9330.6245">capture_get_device() : String</text><ellipse cx="24059.59" cy="9340.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="24068.59" y="9343.4292">capture_set_device(const String &amp; p_name) : void</text><ellipse cx="24059.59" cy="9353.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="24068.59" y="9356.2339">AudioServer() : void</text><ellipse cx="24059.59" cy="9365.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="24068.59" y="9369.0386">~AudioServer() : void</text></a><!--MD5=[6f2b8bf6de67278d3387148d256017be]
class C_0000096380574950611570--><a href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37" target="_top" title="UndoRedo" xlink:actuate="onRequest" xlink:href="https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37" xlink:show="new" xlink:title="UndoRedo" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f717qjsf0e7yl)" height="508.9688" id="C_0000096380574950611570" style="stroke: #A80036; stroke-width: 1.5;" width="1446" x="20292.59" y="8578.4531"/><ellipse cx="20978.84" cy="8594.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M20981.8088,8600.0938 Q20981.2306,8600.3906 20980.59,8600.5313 Q20979.9494,8600.6875 20979.2463,8600.6875 Q20976.7463,8600.6875 20975.4181,8599.0469 Q20974.1056,8597.3906 20974.1056,8594.2656 Q20974.1056,8591.1406 20975.4181,8589.4844 Q20976.7463,8587.8281 20979.2463,8587.8281 Q20979.9494,8587.8281 20980.59,8587.9844 Q20981.2463,8588.1406 20981.8088,8588.4375 L20981.8088,8591.1563 Q20981.1838,8590.5781 20980.59,8590.3125 Q20979.9963,8590.0313 20979.3713,8590.0313 Q20978.0275,8590.0313 20977.34,8591.1094 Q20976.6525,8592.1719 20976.6525,8594.2656 Q20976.6525,8596.3594 20977.34,8597.4375 Q20978.0275,8598.5 20979.3713,8598.5 Q20979.9963,8598.5 20980.59,8598.2344 Q20981.1838,8597.9531 20981.8088,8597.375 L20981.8088,8600.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="20999.34" y="8598.6074">UndoRedo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="20293.59" x2="21737.59" y1="8610.4531" y2="8610.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="20293.59" x2="21737.59" y1="8618.4531" y2="8618.4531"/><ellipse cx="20303.59" cy="8629.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="20312.59" y="8632.6636">get_class() const : String</text><ellipse cx="20303.59" cy="8642.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="20312.59" y="8645.4683">_get_class_namev() const : const StringName *</text><ellipse cx="20303.59" cy="8655.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="20312.59" y="8658.2729">get_class_ptr_static() : void *</text><ellipse cx="20303.59" cy="8667.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="20312.59" y="8671.0776">get_class_static() : String</text><ellipse cx="20303.59" cy="8680.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="188" x="20312.59" y="8683.8823">get_parent_class_static() : String</text><ellipse cx="20303.59" cy="8693.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="375" x="20312.59" y="8696.687">get_inheritance_list_static(List&lt;String&gt; * p_inheritance_list) : void</text><ellipse cx="20303.59" cy="8706.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="20312.59" y="8709.4917">get_category_static() : String</text><ellipse cx="20303.59" cy="8719.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="20312.59" y="8722.2964">inherits_static() : String</text><ellipse cx="20303.59" cy="8731.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="20312.59" y="8735.1011">is_class(const String &amp; p_class) const : bool</text><ellipse cx="20303.59" cy="8744.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="20312.59" y="8747.9058">is_class_ptr(void * p_ptr) const : bool</text><ellipse cx="20303.59" cy="8757.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="20312.59" y="8760.7104">get_valid_parents_static(List&lt;String&gt; * p_parents) : void</text><ellipse cx="20303.59" cy="8770.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="20312.59" y="8773.5151">initialize_class() : void</text><ellipse cx="20303.59" cy="8783.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="20312.59" y="8786.3198">get_save_class() const : String</text><ellipse cx="20303.59" cy="8795.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="20312.59" y="8799.1245">_add_do_method(const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="20303.59" cy="8808.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="20312.59" y="8811.9292">_add_undo_method(const Variant ** p_args, int p_argcount, Variant::CallError &amp; r_error) : Variant</text><ellipse cx="20303.59" cy="8821.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="20312.59" y="8824.7339">create_action(const String &amp; p_name = "", UndoRedo::MergeMode p_mode = MERGE_DISABLE) : void</text><ellipse cx="20303.59" cy="8834.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1406" x="20312.59" y="8837.5386">add_do_method(Object * p_object, const String &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="20303.59" cy="8847.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1420" x="20312.59" y="8850.3433">add_undo_method(Object * p_object, const String &amp; p_method, const Variant &amp; p_arg1 = Variant(), const Variant &amp; p_arg2 = Variant(), const Variant &amp; p_arg3 = Variant(), const Variant &amp; p_arg4 = Variant(), const Variant &amp; p_arg5 = Variant()) : void</text><ellipse cx="20303.59" cy="8859.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="535" x="20312.59" y="8863.1479">add_do_property(Object * p_object, const String &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="20303.59" cy="8872.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="549" x="20312.59" y="8875.9526">add_undo_property(Object * p_object, const String &amp; p_property, const Variant &amp; p_value) : void</text><ellipse cx="20303.59" cy="8885.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="20312.59" y="8888.7573">add_do_reference(Object * p_object) : void</text><ellipse cx="20303.59" cy="8898.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="20312.59" y="8901.562">add_undo_reference(Object * p_object) : void</text><ellipse cx="20303.59" cy="8911.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="20312.59" y="8914.3667">is_committing_action() const : bool</text><ellipse cx="20303.59" cy="8923.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="20312.59" y="8927.1714">commit_action() : void</text><ellipse cx="20303.59" cy="8936.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="20312.59" y="8939.9761">redo() : bool</text><ellipse cx="20303.59" cy="8949.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="20312.59" y="8952.7808">undo() : bool</text><ellipse cx="20303.59" cy="8962.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="20312.59" y="8965.5854">get_current_action_name() const : String</text><ellipse cx="20303.59" cy="8975.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="20312.59" y="8978.3901">clear_history(bool p_increase_version = true) : void</text><ellipse cx="20303.59" cy="8987.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="20312.59" y="8991.1948">has_undo() : bool</text><ellipse cx="20303.59" cy="9000.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="20312.59" y="9003.9995">has_redo() : bool</text><ellipse cx="20303.59" cy="9013.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="20312.59" y="9016.8042">get_version() const : uint64_t</text><ellipse cx="20303.59" cy="9026.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="519" x="20312.59" y="9029.6089">set_commit_notify_callback(UndoRedo::CommitNotifyCallback p_callback, void * p_ud) : void</text><ellipse cx="20303.59" cy="9039.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="566" x="20312.59" y="9042.4136">set_method_notify_callback(UndoRedo::MethodNotifyCallback p_method_callback, void * p_ud) : void</text><ellipse cx="20303.59" cy="9052.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="20312.59" y="9055.2183">set_property_notify_callback(UndoRedo::PropertyNotifyCallback p_property_callback, void * p_ud) : void</text><ellipse cx="20303.59" cy="9064.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="20312.59" y="9068.0229">UndoRedo() : void</text><ellipse cx="20303.59" cy="9077.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="20312.59" y="9080.8276">~UndoRedo() : void</text></a><!--MD5=[67369f02025bab145a8745314f1215ba]
reverse link C_0000699772808699382057 to C_0001357046052919104842--><path d="M23280.53,3371.7231 C23287.62,3646.5131 23311.89,4587.9331 23316,4747.4131 " fill="none" id="C_0000699772808699382057&lt;-C_0001357046052919104842" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23280.19,3358.3831,23276.3498,3364.4866,23280.5067,3370.3789,23284.347,3364.2755,23280.19,3358.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23291.59" y="3650.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="23301.59" y="3657.02">count</text><!--MD5=[4c9c7e9fa624d339c5be6a15aac515e8]
link C_0000945411446247634027 to C_0000945411446247634027--><path d="M35290.64,15571.7531 C35312.34,15608.6531 35325.59,15662.8831 35325.59,15734.4531 C35325.59,15803.2231 35313.35,15855.9931 35293.15,15892.7531 " fill="none" id="C_0000945411446247634027-&gt;C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="35290.64,15897.1531,35298.5679,15891.3094,35293.113,15892.8075,35291.6149,15887.3526,35290.64,15897.1531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35336.59" cy="15735.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="198" x="35343.59" y="15739.02">invalid_node_name_characters</text><!--MD5=[d934a0270b0ad177cfb5d143cb8bbb45]
reverse link C_0002153970433534458832 to C_0000945411446247634027--><path d="M34258.84,13288.8431 C34387.39,13525.4331 34662.71,14059.8631 34804.59,14542.9531 C34809.12,14558.3731 34813.55,14573.9431 34817.86,14589.6431 " fill="none" id="C_0002153970433534458832&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34252.46,13277.1131,34251.8121,13284.2951,34258.1924,13287.6554,34258.8403,13280.4735,34252.46,13277.1131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="34810.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="34817.59" y="14556.02">name</text><!--MD5=[d934a0270b0ad177cfb5d143cb8bbb45]
reverse link C_0002153970433534458832 to C_0000945411446247634027--><path d="M34269.11,13288.6131 C34414.93,13523.1431 34723,14051.9031 34863.59,14542.9531 C34868.03,14558.4331 34872.3,14574.0731 34876.43,14589.8331 " fill="none" id="C_0002153970433534458832&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34262.08,13277.3331,34261.8537,13284.5407,34268.4198,13287.5217,34268.6461,13280.3141,34262.08,13277.3331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="34869.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="34876.59" y="14556.02">hint_string</text><!--MD5=[f7e72b70e63c22ae83a0fc14835e215b]
reverse link C_0002153970433534458832 to C_0001858199404643284193--><path d="M34164.5,13290.3931 C34101.55,13568.7431 33908.33,14233.6631 33454.59,14512.9531 C33314.58,14599.1431 32139.98,14556.7631 31975.59,14559.9531 C31033.3,14578.2531 28675.46,14535.0431 27734.59,14589.9531 C23567.29,14833.1531 18500.91,15561.2231 17507.99,15707.6431 " fill="none" id="C_0002153970433534458832&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34167.4,13277.4331,34162.1901,13282.4188,34164.7885,13289.1455,34169.9984,13284.1598,34167.4,13277.4331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33321.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="33328.59" y="14556.02">class_name</text><!--MD5=[45bfbd9f726a9d8a05612aa5a39a8ccf]
reverse link C_0000774532299576474923 to C_0000945411446247634027--><path d="M33064.92,9062.4331 C33053.7,9591.6131 33105.77,10907.2231 33843.59,11577.9531 C33898.48,11627.8431 35110.01,11757.0631 35157.59,11813.9531 C35253.79,11928.9731 35168.02,14363.3731 35157.59,14512.9531 C35155.83,14538.3031 35153.86,14563.9231 35151.7,14589.7331 " fill="none" id="C_0000774532299576474923&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33065.21,9049.3131,33061.0791,9055.2238,33064.9463,9061.3102,33069.0772,9055.3996,33065.21,9049.3131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35208.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="35215.59" y="13168.02">name</text><!--MD5=[bf3540a227a68f80fea4c2e0c9c4a7bc]
reverse link C_0000774532299576474923 to C_0002153970433534458832--><path d="M33113.5,9062.2531 C33198.62,9561.0931 33419.73,10783.7031 33701.59,11783.9531 C33836.56,12262.9031 34050.92,12816.5131 34143.98,13049.7031 " fill="none" id="C_0000774532299576474923&lt;-C_0002153970433534458832" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33111.27,9049.1531,33108.3287,9055.7371,33113.2749,9060.9845,33116.2162,9054.4005,33111.27,9049.1531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33707.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="64" x="33714.59" y="11700.52">return_val</text><!--MD5=[47352fc66835e2ae7bf4456c577d7fb1]
reverse link C_0000774532299576474923 to C_0000788782266645010446--><path d="M33042.03,9062.2331 C32974.33,9535.5631 32823.44,10658.9931 32771.59,11607.9531 C32767.33,11686.0631 32771.51,11705.7331 32771.59,11783.9531 C32772.19,12333.8031 32774.13,13007.0031 32774.53,13139.2831 " fill="none" id="C_0000774532299576474923&lt;-C_0000788782266645010446" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33043.91,9049.1031,33039.1,9054.4756,33042.2093,9060.982,33047.0192,9055.6095,33043.91,9049.1031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32777.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="70" x="32784.59" y="11700.52">arguments</text><!--MD5=[deafcd45f62677e5d83ede38d0c3889d]
reverse link C_0000774532299576474923 to C_0000367042517371617856--><path d="M33099.86,9062.3531 C33143.07,9603.7731 33164.75,10965.5431 32379.59,11577.9531 C32312.22,11630.5031 20158.5,11591.7931 20074.59,11607.9531 C19866.56,11648.0231 19839.64,11743.9431 19631.59,11783.9531 C19576.68,11794.5131 3571.19,11780.2131 3526.59,11813.9531 C3075.23,12155.3931 3126.99,12988.9231 3140.3,13139.0831 " fill="none" id="C_0000774532299576474923&lt;-C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33098.81,9049.3231,33095.3112,9055.6285,33099.7858,9061.2834,33103.2847,9054.978,33098.81,9049.3231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20080.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="20087.59" y="11700.52">default_arguments</text><!--MD5=[2ffeeed3545e7b157c0ce9e8e5104c4e]
reverse link C_0001531814603945772616 to C_0001578539238208480863--><path d="M26520.91,1624.8231 C27119.87,1739.3031 28011.57,1918.3931 28780.59,2107.9531 C28854.21,2126.1031 28882.22,2111.8331 28944.59,2154.9531 C29010.91,2200.7931 29059.21,2286.5531 29079.71,2327.7331 " fill="none" id="C_0001531814603945772616&lt;-C_0001578539238208480863" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26507.7,1622.3031,26512.8417,1627.3591,26519.4863,1624.5576,26514.3446,1619.5016,26507.7,1622.3031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28880.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="28890.59" y="2121.02">signal_map</text><!--MD5=[72f037eff370e80d2cbcf7aa189b1853]
reverse link C_0001531814603945772616 to C_0000751300156436098886--><path d="M26521.11,1586.6231 C27264.87,1694.2331 28392.14,1894.1231 28734.59,2154.9531 C28793.1,2199.5131 28822.67,2286.2931 28833.98,2327.7731 " fill="none" id="C_0001531814603945772616&lt;-C_0000751300156436098886" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26508,1584.7231,26513.3673,1589.539,26519.877,1586.4368,26514.5097,1581.621,26508,1584.7231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28684.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="28694.59" y="2121.02">connections</text><!--MD5=[24eeaa45737871c41c3c567256e955dc]
reverse link C_0001531814603945772616 to C_0000699772808699382057--><path d="M25150.48,1578.3531 C24491.64,1672.5731 23568.17,1855.1631 23376.59,2154.9531 C23329.12,2229.2431 23336.48,2859.2331 23327.59,2946.9531 C23317.42,3047.4231 23299.88,3163.4631 23288.78,3232.8031 " fill="none" id="C_0001531814603945772616&lt;-C_0000699772808699382057" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25163.56,1576.4931,25157.0537,1573.3839,25151.6811,1578.1939,25158.1875,1581.3031,25163.56,1576.4931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23379.59" y="2349.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="23389.59" y="2356.52">_lock_index</text><!--MD5=[28ef588d9e338ac6e5c120423ba24700]
reverse link C_0001531814603945772616 to C_0000051860595756965531--><path d="M26520.81,1550.6431 C27393.69,1630.9431 28837.18,1812.1331 29236.59,2154.9531 C29288.83,2199.7831 29302.08,2286.4331 29305.45,2327.8331 " fill="none" id="C_0001531814603945772616&lt;-C_0000051860595756965531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26507.68,1549.4431,26513.2905,1553.9733,26519.6301,1550.5367,26514.0196,1546.0065,26507.68,1549.4431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29180.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="115" x="29190.59" y="2121.02">change_receptors</text><!--MD5=[ed9dc36b2f21e467e266d4389da6816d]
link C_0001531814603945772616 to C_0000933379568804427881--><path d="M26507.84,1519.8931 C27441.26,1565.0331 29060.93,1701.2931 29464.59,2107.9531 C29509.79,2153.4831 29515.39,2229.2031 29512.29,2284.0331 " fill="none" id="C_0001531814603945772616-&gt;C_0000933379568804427881" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="29511.96,2289.2731,29516.5167,2280.5418,29512.2737,2284.283,29508.5325,2280.0399,29511.96,2289.2731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29479.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="19" x="29489.59" y="2121.02">_rc</text><!--MD5=[465ae2a41eb5396ad803817584c492e2]
link C_0000933379568804427881 to C_0001531814603945772616--><path d="M29477.33,2289.2031 C29447.82,2229.0931 29393.48,2141.9831 29314.59,2107.9531 C28395.44,1711.4431 27233.86,1572.5831 26512.79,1524.0031 " fill="none" id="C_0000933379568804427881-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.77,1523.6631,26516.4875,1528.2463,26512.7592,1523.9919,26517.0136,1520.2636,26507.77,1523.6631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29345.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="25" x="29355.59" y="2121.02">_ptr</text><!--MD5=[a69d5e275dd95acce759534bd27bf2c9]
reverse link C_0001531814603945772616 to C_0001682405743486361214--><path d="M26520.65,1542.4231 C27707.27,1623.8831 30220.36,1815.9631 32328.59,2107.9531 C32736.92,2164.5031 32905.43,2231.7231 33127.59,2578.9531 C33401.19,3006.5631 33289.39,3193.0831 33388.59,3690.9531 C33483.69,4168.2331 33401.58,5505.7431 33743.59,5851.9531 C34113.12,6226.0131 34387.58,5987.1131 34908.59,6057.9531 C34943.32,6062.6731 35199.02,6062.0231 35222.59,6087.9531 C35325.17,6200.8031 35321.59,11461.9531 35222.59,11577.9531 C35175.34,11633.3231 34001.02,11776.6431 33928.59,11783.9531 C33890.25,11787.8231 33263,11786.8631 33235.59,11813.9531 C33040.19,12007.1131 33140.56,12976.8831 33158.91,13139.3431 " fill="none" id="C_0001531814603945772616&lt;-C_0001682405743486361214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26507.62,1541.5231,26513.3336,1545.9226,26519.5921,1542.3406,26513.8786,1537.9412,26507.62,1541.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33384.59" y="3650.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="139" x="33394.59" y="3657.02">editor_section_folding</text><!--MD5=[e890cc5c6d0e6bb285e3e89ed5d4bd98]
link C_0001531814603945772616 to C_0001735438654351294549--><path d="M26507.95,1520.5731 C28020.24,1578.3631 31586.19,1755.9331 31944.59,2154.9531 C32061.61,2285.2231 32014.87,2388.5631 31944.59,2548.9531 C31940.81,2557.5931 31936.48,2566.0431 31931.7,2574.2831 " fill="none" id="C_0001531814603945772616-&gt;C_0001735438654351294549" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="31928.99,2578.8331,31937.0282,2573.1421,31931.5457,2574.5356,31930.1522,2569.0531,31928.99,2578.8331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31895.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="96" x="31905.59" y="2121.02">script_instance</text><!--MD5=[c5e4261359ae37cd97c8a7ca8ed3d9da]
reverse link C_0001531814603945772616 to C_0002025812040042972946--><path d="M26520.88,1565.5831 C27059.94,1643.4531 27813.31,1808.5731 28387.59,2154.9531 C28433.25,2182.4931 28474.08,2225.3131 28505.08,2263.9231 " fill="none" id="C_0001531814603945772616&lt;-C_0002025812040042972946" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26507.78,1563.7031,26513.1473,1568.519,26519.657,1565.4168,26514.2897,1560.601,26507.78,1563.7031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28329.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="28339.59" y="2121.02">script</text><!--MD5=[c05e40dce802254568c704f572fe66ef]
reverse link C_0001531814603945772616 to C_0001299121424291583786--><path d="M25628.58,2090.5231 C25620.83,2112.7131 25613.32,2134.1931 25606.17,2154.6531 " fill="none" id="C_0001531814603945772616&lt;-C_0001299121424291583786" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25632.91,2078.1231,25627.157,2082.4708,25628.9575,2089.4535,25634.7106,2085.1058,25632.91,2078.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25620.59" y="2114.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="25630.59" y="2121.02">metadata</text><!--MD5=[67cf5364a880881dbfa9463a33b38abe]
reverse link C_0001531814603945772616 to C_0001858199404643284193--><path d="M26025.73,2090.9231 C26031.59,2112.4831 26037.23,2133.8831 26042.59,2154.9531 C26086.58,2327.8731 25983.19,2433.9331 26119.59,2548.9531 C26174.18,2594.9831 27334.98,2563.0431 27404.59,2578.9531 C28268.13,2776.3131 28660.44,2899.6731 29058.59,3690.9531 C29299.34,4169.4031 29278.54,5553.3131 29310.59,6087.9531 C29462.14,8615.2331 29437.18,9252.5031 29393.59,11783.9531 C29388.37,12087.3131 29491.26,14277.7531 29299.59,14512.9531 C29243.55,14581.7231 29193.56,14548.4731 29105.59,14559.9531 C28803.42,14599.3931 28038.68,14569.9431 27734.59,14589.9531 C23568.63,14864.0331 18499.93,15567.7231 17507.65,15708.6631 " fill="none" id="C_0001531814603945772616&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26022.26,2078.2131,26019.9856,2085.0562,26025.4275,2089.7875,26027.7019,2082.9445,26022.26,2078.2131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29302.59" y="4769.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29312.59" y="4776.02">_class_name</text><!--MD5=[9f9c127cde67f8af23da46dde2ce4ce8]
link C_0001531814603945772616 to C_0001858199404643284193--><path d="M26507.66,1592.9231 C27158.22,1698.8431 28080.98,1890.6731 28325.59,2154.9531 C28446.51,2285.5931 28263.46,2431.9231 28397.59,2548.9531 C28453.66,2597.8731 29002.36,2541.3931 29066.59,2578.9531 C29246.51,2684.1731 29236.35,2783.7731 29314.59,2976.9531 C29801.08,4178.0531 29536.22,4586.3831 29564.59,5881.9531 C29569.84,6121.6531 29552.87,14283.1231 29484.59,14512.9531 C29477.54,14536.7131 29476.22,14547.8531 29454.59,14559.9531 C29412.89,14583.2831 27782.28,14586.9231 27734.59,14589.9531 C23575.16,14854.3331 18517.12,15563.4131 17512.75,15707.6431 " fill="none" id="C_0001531814603945772616-&gt;C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17507.63,15708.3731,17517.1096,15711.0448,17512.5786,15707.658,17515.9654,15703.127,17507.63,15708.3731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29613.59" y="4769.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="64" x="29623.59" y="4776.02">_class_ptr</text><!--MD5=[d327e113621300c939a9250d421ffcd5]
reverse link C_0001531814603945772616 to C_0001357046052919104842--><path d="M25150.41,1624.7931 C24615.35,1736.4531 23928.94,1911.5431 23721.59,2107.9531 C23560.67,2260.3931 23606.46,2362.7431 23557.59,2578.9531 C23551.26,2606.9931 23344.34,4514.5231 23319.11,4747.2731 " fill="none" id="C_0001531814603945772616&lt;-C_0001357046052919104842" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25163.42,1622.0931,25156.7321,1619.3964,25151.6706,1624.5327,25158.3585,1627.2294,25163.42,1622.0931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23560.59" y="2760.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="150" x="23570.59" y="2767.52">instance_binding_count</text><!--MD5=[9f6312e8f49fb01007aa82352e3e18a3]
reverse link C_0001531814603945772616 to C_0000104564426296396960--><path d="M25158.24,1507.8931 C23365.91,1543.1331 18635.59,1697.9831 18635.59,2350.9531 C18635.59,2350.9531 18635.59,2350.9531 18635.59,4772.4531 C18635.59,4961.4931 18513.29,11423.0131 18621.59,11577.9531 C18643.83,11609.7631 18675.47,11581.2131 18703.59,11607.9531 C18996.46,11886.4631 19165.02,12315.8731 19258.21,12652.8631 " fill="none" id="C_0001531814603945772616&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25163.49,1507.7831,25154.4118,1503.9639,25158.491,1507.8831,25154.5718,1511.9623,25163.49,1507.7831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18641.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18648.59" y="3657.02">«friend»</text><!--MD5=[a1d7a68971fac74740bd2ff8f508d74d]
reverse link C_0001531814603945772616 to C_0001778859257025660860--><path d="M25158.08,1530.7531 C24606.46,1585.8231 23828.4,1730.6031 23257.59,2107.9531 C23219.46,2133.1631 23186.52,2169.4131 23159.68,2206.2531 " fill="none" id="C_0001531814603945772616&lt;-C_0001778859257025660860" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25163.35,1530.2231,25154.0037,1527.1172,25158.3737,1530.7093,25154.7816,1535.0793,25163.35,1530.2231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="23263.59" cy="2117.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="23270.59" y="2121.02">«friend»</text><!--MD5=[a1d7a68971fac74740bd2ff8f508d74d]
reverse link C_0001531814603945772616 to C_0001778859257025660860--><path d="M25143.18,1599.0531 C24478.94,1706.7331 23533.48,1891.2931 23230.59,2107.9531 C23195.28,2133.2131 23166.38,2169.4831 23143.63,2206.3231 " fill="none" id="C_0001531814603945772616&lt;-C_0001778859257025660860-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.38,1592.0931,25163.24,1595.8131,25144.62,1605.9131,25142.38,1592.0931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bfb0bd8a69f4f74c042f91302129fecd]
reverse link C_0001531814603945772616 to C_0000132048052014479231--><path d="M26513.35,1533.5831 C27471.43,1595.9531 29159.77,1753.6631 29648.59,2107.9531 C29716.2,2156.9531 29749.93,2253.4331 29764.41,2308.9531 " fill="none" id="C_0001531814603945772616&lt;-C_0000132048052014479231" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26508.09,1533.2431,26516.8075,1537.8263,26513.0792,1533.5719,26517.3336,1529.8436,26508.09,1533.2431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="29670.59" cy="2117.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="29677.59" y="2121.02">«friend»</text><!--MD5=[b349530a27aaee85f524a15949be3331]
link C_0000132048052014479231 to C_0001531814603945772616--><path d="M29751.57,2308.6031 C29726.99,2264.9431 29683.49,2197.4131 29629.59,2154.9531 C29587.19,2121.5431 29569.46,2122.9131 29517.59,2107.9531 C28491.17,1811.9631 27259.69,1644.2131 26512.98,1562.2931 " fill="none" id="C_0000132048052014479231-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.78,1561.7231,26516.2785,1566.7006,26512.7489,1562.28,26517.1695,1558.7504,26507.78,1561.7231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="29582.59" cy="2117.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="19" x="29589.59" y="2121.02">obj</text><!--MD5=[ffb696d15bc654aa90b9653d940ba57b]
link C_0000219886141561409828 to C_0001531814603945772616--><path d="M25666.4,800.4831 C25672.67,826.2531 25681.1,860.9231 25690.87,901.0731 " fill="none" id="C_0000219886141561409828-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25692.56" cy="908.0196" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25690.6699" x2="25694.45" y1="900.2461" y2="915.7931"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25700.3335" x2="25684.7864" y1="906.1296" y2="909.9096"/><!--MD5=[a29fa1eddeab9e55f3e1f73ad0d0fc92]
link C_0001267214583673362755 to C_0001531814603945772616--><path d="M13517.27,753.3831 C14409.96,760.7231 18337.66,796.6131 19558.59,868.9531 C21596.73,989.7131 23995.22,1267.1031 25148.36,1408.9531 " fill="none" id="C_0001267214583673362755-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25155.6106" cy="1409.8402" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25147.6712" x2="25163.55" y1="1408.8573" y2="1410.8231"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25156.5935" x2="25154.6277" y1="1401.9008" y2="1417.7796"/><!--MD5=[a29fa1eddeab9e55f3e1f73ad0d0fc92]
link C_0001267214583673362755 to C_0001531814603945772616--><path d="M13517.12,762.7531 C14820.57,840.3431 22770.72,1313.5331 25158.23,1455.6331 " fill="none" id="C_0001267214583673362755-&gt;C_0001531814603945772616-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25163.47,1455.9431,25154.7265,1451.4098,25158.479,1455.6428,25154.246,1459.3953,25163.47,1455.9431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="15437.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="43" x="15444.59" y="882.02">source</text><!--MD5=[a29fa1eddeab9e55f3e1f73ad0d0fc92]
link C_0001267214583673362755 to C_0001531814603945772616--><path d="M13517.4,761.3931 C13889.14,780.7931 14763.03,826.8531 15496.59,868.9531 C19140.93,1078.1131 23506.46,1349.7931 25158.08,1453.3431 " fill="none" id="C_0001267214583673362755-&gt;C_0001531814603945772616-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25163.21,1453.6631,25154.4795,1449.1048,25158.2199,1453.3486,25153.9762,1457.089,25163.21,1453.6631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="15780.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="39" x="15787.59" y="882.02">target</text><!--MD5=[cefd988d71eccb1a821b8696bd59678c]
reverse link C_0001267214583673362755 to C_0001858199404643284193--><path d="M13141.16,837.9631 C13139.64,838.3031 13138.11,838.6331 13136.59,838.9531 C13092.7,848.1831 250.87,838.8731 217.59,868.9531 C9.75,1056.8031 152.59,1215.7931 152.59,1495.9531 C152.59,1495.9531 152.59,1495.9531 152.59,13164.4531 C152.59,13785.3431 -216.61,14116.1331 217.59,14559.9531 C843.89,15200.1231 15404.2,15673.2831 17161.52,15728.1331 " fill="none" id="C_0001267214583673362755&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="13153.84,834.8531,13147.062,832.3916,13142.1829,837.7015,13148.9609,840.163,13153.84,834.8531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="158.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="165.59" y="3657.02">signal</text><!--MD5=[cefd988d71eccb1a821b8696bd59678c]
reverse link C_0001267214583673362755 to C_0001858199404643284193--><path d="M13141.16,837.9531 C13139.63,838.2931 13138.11,838.6331 13136.59,838.9531 C12815.01,907.2731 1619.8,833.3531 1301.59,915.9531 C782.55,1050.6931 243.59,959.7131 243.59,1495.9531 C243.59,1495.9531 243.59,1495.9531 243.59,13164.4531 C243.59,13464.1631 87.62,14271.8131 265.59,14512.9531 C796.07,15231.7031 15400.13,15677.3231 17161.31,15728.5031 " fill="none" id="C_0001267214583673362755&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="13153.83,834.8231,13147.0461,832.3779,13142.1798,837.6994,13148.9637,840.1447,13153.83,834.8231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="249.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="50" x="256.59" y="3657.02">method</text><!--MD5=[e0bcb0691af37a52a5d6539567493f1b]
reverse link C_0001267214583673362755 to C_0000367042517371617856--><path d="M13141.21,837.8231 C13139.67,838.2131 13138.13,838.5831 13136.59,838.9531 C12496.43,991.4231 1309.59,837.8831 1309.59,1495.9531 C1309.59,1495.9531 1309.59,1495.9531 1309.59,3653.4531 C1309.59,3923.8031 1478.42,5879.6131 1681.59,6057.9531 C1734.93,6104.7631 2908.35,6037.8331 2958.59,6087.9531 C3093.08,6222.1031 3139.47,12702.8231 3142.44,13139.3631 " fill="none" id="C_0001267214583673362755&lt;-C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="13154.03,834.3731,13147.1956,832.073,13142.4438,837.4971,13149.2782,839.7972,13154.03,834.3731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1315.59" cy="3296.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="1322.59" y="3300.02">binds</text><!--MD5=[823a143a71700de2dee8f67b9b5676a1]
link C_0000250357724807605097 to C_0001531814603945772616--><path d="M32994.84,793.9631 C32958.27,810.7031 32914.21,828.4531 32872.59,838.9531 C31681.62,1139.5431 28049.33,1371.8131 26522.8,1458.7731 " fill="none" id="C_0000250357724807605097-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26515.7174" cy="1459.1835" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="26523.7047" x2="26507.73" y1="1458.7338" y2="1459.6331"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="26516.167" x2="26515.2677" y1="1467.1708" y2="1451.1961"/><!--MD5=[63356db21c17edf7af154c059834b621]
reverse link C_0000250357724807605097 to C_0000774532299576474923--><path d="M33077.59,807.4331 C33077.59,931.0531 33077.59,1238.5531 33077.59,1495.9531 C33077.59,1495.9531 33077.59,1495.9531 33077.59,2763.9531 C33077.59,5054.9231 33076.15,7832.4331 33075.72,8616.6431 " fill="none" id="C_0000250357724807605097&lt;-C_0000774532299576474923" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33077.59,794.3131,33073.59,800.3131,33077.59,806.3131,33081.59,800.3131,33077.59,794.3131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33083.59" cy="2763.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="33090.59" y="2767.52">user</text><!--MD5=[fed6bc410413bdf90b9aebd1d2474545]
link C_0002064336919270342687 to C_0001531814603945772616--><path d="M25915.22,800.5531 C25903.95,820.9331 25892.3,845.3431 25885.59,868.9531 C25881.71,882.6331 25878.09,896.5531 25874.72,910.6331 " fill="none" id="C_0002064336919270342687-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25873.49,915.8331,25879.4668,908.0051,25874.6487,910.9692,25871.6846,906.1511,25873.49,915.8331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25888.59" y="875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="25898.59" y="882.02">instances</text><!--MD5=[fed6bc410413bdf90b9aebd1d2474545]
link C_0002064336919270342687 to C_0001531814603945772616--><path d="M25958.28,800.5431 C25963.43,825.9331 25967.56,857.5631 25964.59,885.9531 C25963.74,894.0931 25962.83,902.2731 25961.86,910.5031 " fill="none" id="C_0002064336919270342687-&gt;C_0001531814603945772616-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25961.25,915.6331,25966.2756,907.163,25961.835,910.6675,25958.3305,906.2269,25961.25,915.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25967.59" y="875.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="105" x="25977.59" y="882.02">instance_checks</text><!--MD5=[8b696ada1a164533cee31d9d01e1d4f0]
reverse link C_0002064336919270342687 to C_0001531814603945772616--><path d="M25861.01,804.0031 C25839.59,821.7331 25819.34,843.5931 25807.59,868.9531 C25800.55,884.1531 25794.46,899.7931 25789.22,915.7531 " fill="none" id="C_0002064336919270342687&lt;-C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25865.02,800.7331,25855.5126,803.304,25861.1394,803.8861,25860.5573,809.5129,25865.02,800.7331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25813.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="25820.59" y="882.02">«friend»</text><!--MD5=[293fa7784106f5f5337199f4462ce0c4]
link C_0001040552259499621557 to C_0002064336919270342687--><path d="M25945.59,346.2531 C25945.59,416.0131 25945.59,591.2231 25945.59,686.2531 " fill="none" id="C_0001040552259499621557-&gt;C_0002064336919270342687" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="25945.59" cy="693.3531" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25945.59" x2="25945.59" y1="685.3531" y2="701.3531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="25953.59" x2="25937.59" y1="693.3531" y2="693.3531"/><!--MD5=[6176b754db1099095469d86baa598663]
reverse link C_0001725595510223069271 to C_0001858199404643284193--><path d="M3915.36,3490.9031 C3879.29,3552.1231 3845.05,3621.8531 3825.59,3690.9531 C3793.04,3806.5531 3852.46,5766.9731 3767.59,5851.9531 C3684.18,5935.4831 2787.88,5797.3131 2705.59,5881.9531 C2651.07,5938.0431 2662.2,5992.8731 2705.59,6057.9531 C2724.82,6086.7931 2758.04,6059.3231 2777.59,6087.9531 C2785.85,6100.0331 2959.2,14500.9731 2967.59,14512.9531 C3397.14,15125.6731 15561.15,15658.6931 17161.46,15726.2431 " fill="none" id="C_0001725595510223069271&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3922.11,3479.5731,3915.6006,3482.6761,3915.9613,3489.8781,3922.4707,3486.7752,3922.11,3479.5731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2902.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="2912.59" y="8837.52">name</text><!--MD5=[1109c8b45d174a8043b3007e6901a4cf]
reverse link C_0001725595510223069271 to C_0000367042517371617856--><path d="M4002.99,3492.8131 C3989.08,3555.7031 3975.58,3625.8931 3967.59,3690.9531 C3952.97,3810.1731 3982.51,5766.0131 3898.59,5851.9531 C3815.1,5937.4731 3445.2,5796.5431 3361.59,5881.9531 C3250.27,5995.6831 3168.46,11448.8531 3164.59,11607.9531 C3149.45,12231.9231 3143.71,12997.0531 3142.75,13139.1731 " fill="none" id="C_0001725595510223069271&lt;-C_0000367042517371617856" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4005.88,3479.9231,4000.6701,3484.9088,4003.2685,3491.6355,4008.4784,3486.6498,4005.88,3479.9231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3364.59" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="3374.59" y="5974.52">default_arguments</text><!--MD5=[c0b23ac663a0b4bd2241530c03c4684d]
reverse link C_0001725595510223069271 to C_0001169846630986447699--><path d="M4379.2,3359.7331 C4542.65,3408.9631 4727.95,3495.0331 4834.59,3643.9531 C5096.13,4009.1631 4971.71,4621.1431 4942.26,4747.2931 " fill="none" id="C_0001725595510223069271&lt;-C_0001169846630986447699" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4366.47,3355.9631,4371.0886,3361.501,4377.9769,3359.3677,4373.3583,3353.8298,4366.47,3355.9631" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4840.59,3648.0195,4844.59,3652.0195,4840.59,3656.0195,4836.59,3652.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4847.59" y="3657.02">arg_names</text><!--MD5=[94cc3f54f033bdab9f6f8be3fdefa009]
reverse link C_0000626842387047507019 to C_0000774532299576474923--><path d="M32089.22,4879.1631 C32224.47,5421.1431 32836.15,7872.3931 33021.92,8616.8631 " fill="none" id="C_0000626842387047507019&lt;-C_0000774532299576474923" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32086.02,4866.3331,32083.5892,4873.1222,32088.9211,4877.9772,32091.3519,4871.1881,32086.02,4866.3331" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="32367.59,5965.5195,32371.59,5969.5195,32367.59,5973.5195,32363.59,5969.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="70" x="32374.59" y="5974.52">arguments</text><!--MD5=[57aea8c2eac04ad3bb696ae56b1027e2]
reverse link C_0001725595510223069271 to C_0000626842387047507019--><path d="M4386.38,3305.9531 C5978.2,3350.8131 12958.04,3542.1131 18680.59,3613.9531 C22598.09,3663.1331 23578.09,3595.8731 27495.59,3643.9531 C27989.67,3650.0131 29237.09,3580.0631 29718.59,3690.9531 C30604.61,3895.0131 31558.89,4453.9131 31916.42,4676.8431 " fill="none" id="C_0001725595510223069271&lt;-C_0000626842387047507019" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.98,3312.9531,4366.18,3305.3931,4386.37,3298.9531,4385.98,3312.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[36a1d1bdbde270b6b2c85f87797101d1]
reverse link C_0002161264899189627575 to C_0001858199404643284193--><path d="M3007.36,6071.4231 C2995.94,7018.7831 2912.51,14350.3731 3063.59,14512.9531 C4073.71,15599.8831 15606.28,15720.9731 17161.48,15732.3731 " fill="none" id="C_0002161264899189627575&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3007.52,6058.2631,3003.4478,6064.2143,3007.375,6070.2622,3011.4472,6064.311,3007.52,6058.2631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2981.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2988.59" y="11700.52">type_name</text><!--MD5=[d4dc04b24a9f5e64d045669d490fb2af]
reverse link C_0001725595510223069271 to C_0002161264899189627575--><path d="M3962.62,3498.5831 C3945.32,3545.4531 3929.52,3595.7431 3919.59,3643.9531 C3894.83,3764.1931 3915.65,5764.3931 3829.59,5851.9531 C3789.34,5892.9131 3370.22,5872.3531 3313.59,5881.9531 C3312.51,5882.1331 3311.42,5882.3231 3310.33,5882.5131 " fill="none" id="C_0001725595510223069271&lt;-C_0002161264899189627575" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3956.11,3496.0131,3969.71,3479.7631,3969.21,3500.9531,3956.11,3496.0131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b12528307832d955820af94cfa0a24ce]
reverse link C_0000514530488699023626 to C_0001858199404643284193--><path d="M3457.47,11797.2931 C3410.91,12285.5831 3242.03,14396.4131 3783.59,14559.9531 C6459.38,15367.9831 15774.48,15685.0931 17161.37,15728.2431 " fill="none" id="C_0000514530488699023626&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3458.74,11784.0031,3454.1848,11789.5933,3457.593,11795.9482,3462.1482,11790.358,3458.74,11784.0031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3693.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="3700.59" y="13168.02">type_name</text><!--MD5=[97e429f1cd7019ad053f02f6682df600]
reverse link C_0001725595510223069271 to C_0000514530488699023626--><path d="M4045.21,3499.7431 C4043.02,3561.1831 4040.66,3628.8231 4038.59,3690.9531 C4034.6,3811.0031 4054.94,5765.4631 3971.59,5851.9531 C3903.43,5922.6831 3598.04,5810.5431 3530.59,5881.9531 C3427.84,5990.7531 3461.43,10890.5631 3466.91,11607.7231 " fill="none" id="C_0001725595510223069271&lt;-C_0000514530488699023626" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4038.22,3499.3431,4045.92,3479.6031,4052.21,3499.8431,4038.22,3499.3431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[53f987b2a1d9878a5e1924c9e1999673]
reverse link C_0001500902353747816170 to C_0001858199404643284193--><path d="M3832.13,6071.4331 C3818.59,7018.8831 3718.73,14351.1031 3870.59,14512.9531 C4826.78,15532.0331 15656.36,15711.3031 17161.41,15731.3431 " fill="none" id="C_0001500902353747816170&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3832.32,6058.2731,3828.2347,6064.2154,3832.1486,6070.2719,3836.2339,6064.3296,3832.32,6058.2731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3793.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="3800.59" y="11700.52">type_name</text><!--MD5=[c76f15a600908a5d9f5ada2cec176d92]
reverse link C_0001725595510223069271 to C_0001500902353747816170--><path d="M4063.44,3499.7431 C4092.19,4069.2431 4160.45,5651.8131 4042.59,5851.9531 C4036.26,5862.7031 4028.55,5872.5431 4019.86,5881.5331 " fill="none" id="C_0001725595510223069271&lt;-C_0001500902353747816170" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4056.43,3499.8431,4062.41,3479.5131,4070.41,3499.1331,4056.43,3499.8431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a283e665aa50e2c6f50fcf7bcd63554]
reverse link C_0001463339540638256927 to C_0001858199404643284193--><path d="M4168.56,11796.6831 C4015.14,12264.4131 3441.05,14231.6531 4518.59,14559.9531 C7042.63,15328.9531 15818.31,15677.8731 17161.54,15727.2731 " fill="none" id="C_0001463339540638256927&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4172.65,11784.2731,4166.9718,11788.7181,4168.8909,11795.6691,4174.5691,11791.2242,4172.65,11784.2731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4379.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4386.59" y="13168.02">type_name</text><!--MD5=[e2f4438b33038cd1a3fe79142aa1fcf6]
reverse link C_0001725595510223069271 to C_0001463339540638256927--><path d="M4083.51,3499.7331 C4091.44,3561.0331 4098.8,3628.5931 4102.59,3690.9531 C4161.72,4663.0531 4123.51,4908.1431 4136.59,5881.9531 C4167.95,8215.6731 4196.51,11076.5331 4201.74,11607.8931 " fill="none" id="C_0001725595510223069271&lt;-C_0001463339540638256927" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4076.54,3500.3831,4080.86,3479.6331,4090.42,3498.5531,4076.54,3500.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2154fea7909c76a8070f23473df8354d]
reverse link C_0001770130608234301442 to C_0001858199404643284193--><path d="M4484.11,6071.3231 C4489.16,7023.5531 4530.82,14431.8031 4606.59,14512.9531 C5506.67,15476.8831 15703.55,15702.9331 17161.48,15730.3931 " fill="none" id="C_0001770130608234301442&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4484.04,6058.1031,4480.073,6064.125,4484.1059,6070.1029,4488.0729,6064.0811,4484.04,6058.1031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4538.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4545.59" y="11700.52">type_name</text><!--MD5=[a393e23103db017e69067d89a910bc2e]
reverse link C_0001725595510223069271 to C_0001770130608234301442--><path d="M4138.49,3498.5231 C4155.92,3545.5831 4172.58,3595.9831 4184.59,3643.9531 C4398.89,4499.3731 4464.63,5572.4331 4479.77,5881.8231 " fill="none" id="C_0001725595510223069271&lt;-C_0001770130608234301442" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4131.87,3500.8031,4131.38,3479.6231,4144.97,3495.8831,4131.87,3500.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3cf6f50b6a5efe8eecff906ae7ba49b2]
reverse link C_0001227602006568872099 to C_0001858199404643284193--><path d="M4903.6,11796.5531 C4750.36,12263.6931 4176.96,14228.6831 5253.59,14559.9531 C7625.96,15289.9031 15862.5,15670.1531 17161.51,15726.1731 " fill="none" id="C_0001227602006568872099&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4907.68,11784.1631,4902.0018,11788.6081,4903.9209,11795.5591,4909.5991,11791.1142,4907.68,11784.1631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5114.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="5121.59" y="13168.02">type_name</text><!--MD5=[f2688015b58ca8510cf11b1f391c7a17]
reverse link C_0001725595510223069271 to C_0001227602006568872099--><path d="M4242.54,3495.1031 C4290.17,3554.2431 4336.73,3621.8231 4368.59,3690.9531 C4783.6,4591.2431 4680.48,4896.3031 4786.59,5881.9531 C5036.48,8203.1031 4958.13,11074.1031 4940.64,11607.5431 " fill="none" id="C_0001725595510223069271&lt;-C_0001227602006568872099" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4236.99,3499.3731,4229.76,3479.4531,4247.83,3490.5131,4236.99,3499.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[24ed2b397bfd75777763001ef999242c]
reverse link C_0000721345300172868993 to C_0001858199404643284193--><path d="M5135.59,6071.4531 C5154.58,7026.8231 5303.81,14472.2531 5341.59,14512.9531 C6185.53,15422.0531 15751.98,15694.0831 17161.55,15729.3331 " fill="none" id="C_0000721345300172868993&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5135.32,6058.1931,5131.4394,6064.2711,5135.5573,6070.1908,5139.4379,6064.1128,5135.32,6058.1931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5263.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="5270.59" y="11700.52">type_name</text><!--MD5=[b529a9bda62b26da95e7f2b619cb436a]
reverse link C_0001725595510223069271 to C_0000721345300172868993--><path d="M4385.94,3335.2331 C4609.01,3380.5031 4886.78,3478.5731 5028.59,3690.9531 C5508.43,4409.5431 5246.42,5558.5831 5158.72,5881.8331 " fill="none" id="C_0001725595510223069271&lt;-C_0000721345300172868993" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4384.5,3342.0931,4366.24,3331.3431,4387.22,3328.3531,4384.5,3342.0931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2f600bfdfed375e1d84ad5960d178506]
reverse link C_0000779559418824132960 to C_0001858199404643284193--><path d="M5638.64,11796.4131 C5485.61,12262.8931 4913,14225.3331 5988.59,14559.9531 C8209.52,15250.8931 15907.86,15661.8931 17161.43,15724.9331 " fill="none" id="C_0000779559418824132960&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5642.72,11784.0331,5637.0418,11788.4781,5638.9609,11795.4291,5644.6391,11790.9842,5642.72,11784.0331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5849.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="5856.59" y="13168.02">type_name</text><!--MD5=[c16129dae5dd7a3ee99d746565d6891c]
reverse link C_0001725595510223069271 to C_0000779559418824132960--><path d="M4386.24,3318.0331 C4648.65,3353.9331 5001.33,3447.7531 5195.59,3690.9531 C5807.01,4456.3831 5377.21,4904.1031 5436.59,5881.9531 C5474.96,6513.7231 5206.55,11019.0531 5503.59,11577.9531 C5509.29,11588.6631 5516.45,11598.6031 5524.59,11607.7631 " fill="none" id="C_0001725595510223069271&lt;-C_0000779559418824132960" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.22,3324.9631,4366.32,3315.3931,4387.06,3311.0831,4385.22,3324.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[40a23b537608769ced7193cb410553b3]
reverse link C_0001326581917102107425 to C_0001858199404643284193--><path d="M5574.25,6067.7531 C5568.84,6074.0831 5563.92,6080.8131 5559.59,6087.9531 C5480.57,6218.3831 5455.71,11466.3131 5559.59,11577.9531 C5622.73,11645.8031 5911.28,11541.2131 5975.59,11607.9531 C6031.63,11666.0931 6022.62,14453.8131 6077.59,14512.9531 C6868.79,15364.0431 15801.99,15684.1531 17161.57,15728.0831 " fill="none" id="C_0001326581917102107425&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5583.12,6058.1231,5576.1145,6059.8328,5574.9982,6066.9569,5582.0037,6065.2473,5583.12,6058.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6002.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6009.59" y="11700.52">type_name</text><!--MD5=[0b841243efd14e05f8183f2b5b313466]
reverse link C_0001725595510223069271 to C_0001326581917102107425--><path d="M4386.12,3333.7431 C4762.24,3383.0031 5340.35,3482.8731 5484.59,3643.9531 C6080.86,4309.8031 5874.11,5544.4031 5803.31,5881.8031 " fill="none" id="C_0001725595510223069271&lt;-C_0001326581917102107425" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.07,3340.6631,4366.13,3331.1531,4386.87,3326.7831,4385.07,3340.6631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6553a4ed0721951ec26a6849f549381]
reverse link C_0000845455246171879191 to C_0001858199404643284193--><path d="M6373.57,11796.6331 C6220.58,12263.0531 5649.48,14221.6131 6723.59,14559.9531 C8793.29,15211.8931 15954.24,15652.9931 17161.22,15723.5231 " fill="none" id="C_0000845455246171879191&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6377.64,11784.2531,6371.9618,11788.6981,6373.8809,11795.6491,6379.5591,11791.2042,6377.64,11784.2531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6584.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6591.59" y="13168.02">type_name</text><!--MD5=[1abd71a672dca6d0c6bdaeacdbe720ba]
reverse link C_0001725595510223069271 to C_0000845455246171879191--><path d="M4386.47,3330.2331 C4825.94,3381.8231 5564.12,3495.4231 5745.59,3690.9531 C6416,4413.2831 6010.59,4899.3831 6086.59,5881.9531 C6092.63,5959.9431 6140,6000.7931 6086.59,6057.9531 C6019.54,6129.7231 5712.65,6016.1831 5645.59,6087.9531 C5541.48,6199.3831 5541.36,11466.6331 5645.59,11577.9531 C5680.3,11615.0131 6051.56,11599.2931 6101.59,11607.9531 C6103.09,11608.2131 6104.59,11608.4731 6106.09,11608.7431 " fill="none" id="C_0001725595510223069271&lt;-C_0000845455246171879191" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.48,3337.1631,4366.42,3327.8931,4387.1,3323.2531,4385.48,3337.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fbd9cc6d64d97bfa96618a21d20dbb24]
reverse link C_0000081704011730798793 to C_0001858199404643284193--><path d="M6118.83,6058.3231 C6037.56,6064.7031 5730.88,6055.4531 5700.59,6087.9531 C5648.61,6143.7331 5647.48,11523.2431 5700.59,11577.9531 C5778.8,11658.5131 6630.99,11528.7831 6710.59,11607.9531 C6767.84,11664.8931 6757.84,14453.6131 6812.59,14512.9531 C7547.63,15309.5831 15853.2,15674.0731 17161.56,15726.7131 " fill="none" id="C_0000081704011730798793&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6131.77,6056.8531,6125.3557,6053.5581,6119.8471,6058.2116,6126.2614,6061.5066,6131.77,6056.8531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6737.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="6744.59" y="11700.52">type_name</text><!--MD5=[dad312aeb585e3289ae3ff32a11bd594]
reverse link C_0001725595510223069271 to C_0000081704011730798793--><path d="M4386.29,3305.3331 C4912.32,3326.7231 5898.89,3399.2431 6134.59,3643.9531 C6755.54,4288.6231 6530.23,5541.6731 6454.43,5881.9131 " fill="none" id="C_0001725595510223069271&lt;-C_0000081704011730798793" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.93,3312.3231,4366.23,3304.5331,4386.49,3298.3331,4385.93,3312.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ee1664e15557051b6018f82bc0fefac8]
reverse link C_0002027329212022555569 to C_0001858199404643284193--><path d="M7108.63,11796.4431 C6955.92,12262.0031 6385.87,14217.2531 7458.59,14559.9531 C9377.56,15172.9931 16003.54,15643.4431 17161.32,15721.9131 " fill="none" id="C_0002027329212022555569&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7112.7,11784.0831,7107.0264,11788.534,7108.9528,11795.4831,7114.6264,11791.0322,7112.7,11784.0831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7319.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="7326.59" y="13168.02">type_name</text><!--MD5=[18dd516b58568163dd367d722af09765]
reverse link C_0001725595510223069271 to C_0002027329212022555569--><path d="M4386.12,3305.0831 C4967.23,3327.5031 6129.53,3407.5331 6401.59,3690.9531 C6493.57,3786.7631 6829.01,5962.5731 6736.59,6057.9531 C6663.18,6133.7231 5861,6012.1831 5787.59,6087.9531 C5681.48,6197.4731 5681.31,11468.5931 5787.59,11577.9531 C5828.23,11619.7631 6778.97,11599.0831 6836.59,11607.9531 C6837.96,11608.1631 6839.33,11608.3731 6840.7,11608.5931 " fill="none" id="C_0001725595510223069271&lt;-C_0002027329212022555569" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.84,3312.0731,4366.12,3304.3231,4386.37,3298.0831,4385.84,3312.0731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4697dac272b7aed678d38b116d927321]
reverse link C_0000512545424965820103 to C_0001858199404643284193--><path d="M6768.88,6057.3031 C6644.72,6064.5431 5870.13,6052.2931 5835.59,6087.9531 C5782.55,6142.7231 5782.18,11523.5331 5835.59,11577.9531 C5898.26,11641.7931 7366.62,11565.9231 7445.59,11607.9531 C8837.41,12348.6531 8143.14,13679.6931 9481.59,14512.9531 C10833.71,15354.7231 16134.19,15670.8731 17161.59,15724.8131 " fill="none" id="C_0000512545424965820103&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6781.94,6056.1431,6775.6118,6052.6858,6769.9864,6057.1975,6776.3147,6060.6548,6781.94,6056.1431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7724.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="7731.59" y="11700.52">type_name</text><!--MD5=[fe2ed7ed42cd4786efef197dc1a0f49c]
reverse link C_0001725595510223069271 to C_0000512545424965820103--><path d="M4386.39,3316.2831 C5078.02,3360.5731 6617.32,3476.9131 6784.59,3643.9531 C7418.31,4276.7931 7183.46,5539.6731 7105.04,5881.7731 " fill="none" id="C_0001725595510223069271&lt;-C_0000512545424965820103" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.69,3323.2531,4366.18,3314.9931,4386.59,3309.2831,4385.69,3323.2531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fea6c7b8cfa5712234b6612d17a41427]
reverse link C_0002087322448002339587 to C_0001858199404643284193--><path d="M9487.36,11797.0931 C9523.14,12193.2831 9705.12,13670.5731 10476.59,14512.9531 C11414.48,15537.0331 16188.79,15705.9531 17161.47,15729.8731 " fill="none" id="C_0002087322448002339587&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9486.2,11784.0131,9482.7502,11790.3455,9487.2686,11795.9655,9490.7184,11789.6331,9486.2,11784.0131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="10482.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="10489.59" y="13168.02">type_name</text><!--MD5=[c20b6e93f71478fe84fa0a15dcb5c548]
reverse link C_0001725595510223069271 to C_0002087322448002339587--><path d="M4386.48,3317.0731 C5130.3,3366.2531 6872.73,3500.7031 7055.59,3690.9531 C7791.69,4456.7931 8129.99,5299.1931 7386.59,6057.9531 C7329.58,6116.1431 5977.6,6029.7631 5920.59,6087.9531 C5813.87,6196.8831 5813.74,11469.1531 5920.59,11577.9531 C5952.87,11610.8131 7532.55,11606.4831 7578.59,11607.9531 C8143.88,11626.0031 8803.2,11658.8131 9178.03,11678.5731 " fill="none" id="C_0001725595510223069271&lt;-C_0002087322448002339587" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4385.89,3324.0531,4366.39,3315.7531,4386.81,3310.0831,4385.89,3324.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0a32efc566a127e7ee0bcdd173b65cd7]
reverse link C_0000031906668996487033 to C_0001858199404643284193--><path d="M587.02,6071.2331 C526.09,7007.4831 69.27,14190.9631 374.59,14512.9531 C985.12,15156.8031 15411.34,15667.9131 17161.29,15727.6231 " fill="none" id="C_0000031906668996487033&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="587.86,6058.2331,583.4731,6063.9563,587.0688,6070.207,591.4557,6064.4838,587.86,6058.2331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="307.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="314.59" y="11700.52">type_name</text><!--MD5=[39ff125dd0afe8ba230792e2ce80b20d]
reverse link C_0001725595510223069271 to C_0000031906668996487033--><path d="M3718.75,3298.5131 C3092.06,3309.0231 1771.42,3364.6831 1425.59,3643.9531 C689.94,4238.0331 604.33,5534.2931 594.72,5881.7831 " fill="none" id="C_0001725595510223069271&lt;-C_0000031906668996487033" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.81,3291.5131,3738.92,3298.1931,3719.04,3305.5131,3718.81,3291.5131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c5acbe2511d99e2def2a5535ac9b2243]
reverse link C_0001134043413451695381 to C_0001858199404643284193--><path d="M673.55,11796.7531 C519.7,12265.8531 -57.4,14242.0831 1023.59,14559.9531 C4271.48,15515.0031 15623.38,15709.0531 17161.58,15731.1331 " fill="none" id="C_0001134043413451695381&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="677.65,11784.3031,671.9764,11788.754,673.9028,11795.7031,679.5764,11791.2522,677.65,11784.3031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="883.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="890.59" y="13168.02">type_name</text><!--MD5=[da830b13a1d08eb57097d99553db1d40]
reverse link C_0001725595510223069271 to C_0001134043413451695381--><path d="M3718.81,3321.4231 C3051.25,3375.0231 1604.09,3510.9631 1473.59,3690.9531 C896.54,4486.8631 1511.71,5011.5731 1001.59,5851.9531 C990.79,5869.7531 974.84,5863.2931 965.59,5881.9531 C832.7,6150.0531 724.77,10902.6531 709.46,11607.7931 " fill="none" id="C_0001725595510223069271&lt;-C_0001134043413451695381" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.32,3314.4431,3738.82,3319.8231,3719.44,3328.4031,3718.32,3314.4431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5783799f0680878364566d813ba01cd3]
reverse link C_0001212767095252394753 to C_0001858199404643284193--><path d="M1263.13,6071.0931 C1212.59,7005.9931 834.91,14179.5431 1127.59,14512.9531 C1686.3,15149.4031 15454.38,15665.6531 17161.47,15727.2831 " fill="none" id="C_0001212767095252394753&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1263.83,6058.1031,1259.5128,6063.8791,1263.1841,6070.0857,1267.5012,6064.3097,1263.83,6058.1031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1041.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1048.59" y="11700.52">type_name</text><!--MD5=[6fd06a8464d09c9534d7b0aadebcf77d]
reverse link C_0001725595510223069271 to C_0001212767095252394753--><path d="M3718.64,3319.6031 C3074.27,3367.6131 1710.05,3486.7831 1567.59,3643.9531 C1402.7,3825.8831 1606.06,5642.7031 1477.59,5851.9531 C1470.96,5862.7631 1462.94,5872.6531 1453.96,5881.7031 " fill="none" id="C_0001725595510223069271&lt;-C_0001212767095252394753" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.44,3312.6031,3738.9,3318.1031,3719.48,3326.5631,3718.44,3312.6031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3321ca8fd8657dfe2d73b6ad7261807c]
reverse link C_0001038624653636336005 to C_0001858199404643284193--><path d="M1369.34,11796.1031 C1366.73,11801.9831 1364.45,11807.9531 1362.59,11813.9531 C1185.42,12386.9631 954.96,14072.9831 1362.59,14512.9531 C1929.58,15124.9131 15469.6,15662.0931 17161.54,15726.9031 " fill="none" id="C_0001038624653636336005&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1375.1,11784.1631,1368.887,11787.8236,1369.8764,11794.9665,1376.0893,11791.306,1375.1,11784.1631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1368.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1375.59" y="13168.02">type_name</text><!--MD5=[2ba05fb841dbe1bb36a71b1440c88383]
reverse link C_0001725595510223069271 to C_0001038624653636336005--><path d="M3718.79,3321.0831 C3091.02,3370.7631 1785.16,3491.3831 1649.59,3643.9531 C1632.16,3663.5731 1465.09,10739.0331 1444.64,11607.8431 " fill="none" id="C_0001725595510223069271&lt;-C_0001038624653636336005" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.51,3314.0831,3739,3319.4931,3719.61,3328.0431,3718.51,3314.0831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[daf066193adf31dfc56223eb392e96f6]
reverse link C_0000375613860790632263 to C_0001858199404643284193--><path d="M1748.82,13264.6831 C1706.71,13523.8231 1635.75,14219.4631 2010.59,14559.9531 C3191.91,15633.0131 15549.49,15725.3331 17161.54,15732.8231 " fill="none" id="C_0000375613860790632263&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1750.99,13251.5631,1746.0675,13256.8328,1749.0386,13263.4034,1753.9611,13258.1337,1750.99,13251.5631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2016.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2023.59" y="14556.02">type_name</text><!--MD5=[76cdcfe53eae5f1be3a433c2ee385d6b]
reverse link C_0001725595510223069271 to C_0000375613860790632263--><path d="M3718.8,3321.7931 C3171.55,3367.5631 2110.98,3475.2431 1777.59,3643.9531 C1751.24,3657.2931 1742.1,3663.7431 1730.59,3690.9531 C1633.95,3919.3831 1752.41,12135.1531 1766.29,13075.1231 " fill="none" id="C_0001725595510223069271&lt;-C_0000375613860790632263" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.34,3314.8031,3738.85,3320.1231,3719.5,3328.7631,3718.34,3314.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1f64c9cc378153a2e5d2bfdb3115b47f]
reverse link C_0001053911039767528095 to C_0001858199404643284193--><path d="M1995.46,6071.1731 C1956.7,6832.1831 1714.26,11673.1031 1813.59,11783.9531 C1854.33,11829.4031 2044.97,11769.3131 2086.59,11813.9531 C2291.28,12033.4531 1995.3,14287.6631 2193.59,14512.9531 C3235.63,15696.8331 15551.23,15733.8931 17161.37,15733.6731 " fill="none" id="C_0001053911039767528095&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1996.12,6058.1431,1991.8219,6063.9333,1995.5135,6070.1278,1999.8116,6064.3376,1996.12,6058.1431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1819.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="1826.59" y="11700.52">type_name</text><!--MD5=[4b4db5a06613e61fad32d12372358e70]
reverse link C_0001725595510223069271 to C_0001053911039767528095--><path d="M3718.9,3323.9531 C3120.5,3376.6531 1915.47,3499.5831 1791.59,3643.9531 C1711.72,3737.0431 1729.56,5746.1331 1791.59,5851.9531 C1797.9,5862.7131 1805.6,5872.5631 1814.28,5881.5631 " fill="none" id="C_0001725595510223069271&lt;-C_0001053911039767528095" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.51,3316.9531,3739.05,3322.1831,3719.74,3330.9031,3718.51,3316.9531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[63995b2b972f0bd028109810f5781d0e]
reverse link C_0000462780498821063561 to C_0001858199404643284193--><path d="M2214.42,11797.1831 C2197.63,12244.0131 2149.52,14052.5231 2448.59,14512.9531 C2472.32,14549.4831 2492.85,14547.5131 2534.59,14559.9531 C5469.05,15434.4931 15704.85,15696.5331 17161.58,15729.6931 " fill="none" id="C_0000462780498821063561&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2214.92,11784.0531,2210.6985,11789.8994,2214.4715,11796.0447,2218.6929,11790.1984,2214.92,11784.0531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2454.59" cy="13164.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2461.59" y="13168.02">type_name</text><!--MD5=[2a416d6ba2cea9a95a7ed7b92f7c9540]
reverse link C_0001725595510223069271 to C_0000462780498821063561--><path d="M3718.71,3305.9931 C3163.34,3329.6731 2087.48,3411.3731 1853.59,3690.9531 C1776.56,3783.0331 1771.57,5764.2831 1853.59,5851.9531 C1922.06,5925.1431 2235.12,5808.7631 2303.59,5881.9531 C2711.56,6318.0231 2292.61,10915.5631 2226.96,11607.8731 " fill="none" id="C_0001725595510223069271&lt;-C_0000462780498821063561" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.78,3298.9831,3739.06,3305.1431,3719.37,3312.9731,3718.78,3298.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dd43d07d1b11b23e8fd0cbbb89b1b53e]
reverse link C_0000803203155573352820 to C_0001858199404643284193--><path d="M2193.61,4872.7231 C2233.5,5066.7031 2320.32,5507.2731 2366.59,5881.9531 C2377.85,5973.0631 2376.76,5996.2831 2381.59,6087.9531 C2387.76,6204.8631 2588.44,14418.4831 2657.59,14512.9531 C3109.4,15130.1131 15542.41,15659.9831 17161.39,15726.4431 " fill="none" id="C_0000803203155573352820&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2190.94,4859.7431,2188.2361,4866.4281,2193.3669,4871.4952,2196.0708,4864.8102,2190.94,4859.7431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2545.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2552.59" y="11700.52">type_name</text><!--MD5=[08dc6c2f911341194ca327d3cafcfc19]
reverse link C_0001725595510223069271 to C_0000803203155573352820--><path d="M3719.11,3341.5331 C3314.73,3402.6731 2665.56,3523.7731 2491.59,3690.9531 C2206.96,3964.4831 2172.9,4478.4631 2171.19,4683.1331 " fill="none" id="C_0001725595510223069271&lt;-C_0000803203155573352820" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3718.25,3334.5831,3739.07,3338.5331,3720.34,3348.4231,3718.25,3334.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[691503ad50075dbc9d15f24fb88ab03a]
reverse link C_0001728875246190146863 to C_0001858199404643284193--><path d="M2788.43,4872.5431 C2746.81,5066.2231 2658.37,5506.3031 2627.59,5881.9531 C2621.21,5959.9131 2627.21,5979.7331 2627.59,6057.9531 C2628.74,6292.8431 2635.01,14319.0531 2767.59,14512.9531 C3196.03,15139.5031 15548.4,15661.0131 17161.49,15726.5231 " fill="none" id="C_0001728875246190146863&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2791.22,4859.5831,2786.0435,4864.6035,2788.6867,4871.3127,2793.8632,4866.2923,2791.22,4859.5831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2671.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2678.59" y="11700.52">type_name</text><!--MD5=[ad4724cdb00bb7c073f35084dbe05f7c]
reverse link C_0001725595510223069271 to C_0001728875246190146863--><path d="M3719.44,3363.7531 C3522.38,3419.8831 3282.27,3519.3631 3129.59,3690.9531 C2868.33,3984.6031 2820.69,4483.1531 2812.27,4683.3931 " fill="none" id="C_0001725595510223069271&lt;-C_0001728875246190146863" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3717.83,3356.9331,3738.98,3358.2931,3721.6,3370.4231,3717.83,3356.9331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ca4ff7cb11ecc22aebae9cef7d802bc5]
reverse link C_0000319868049196089894 to C_0001858199404643284193--><path d="M3453.38,4872.8031 C3457.69,5091.1431 3433.59,5609.1531 3129.59,5851.9531 C3048.69,5916.5731 2735.42,5806.4131 2664.59,5881.9531 C2611.09,5939.0131 2641.08,5983.3531 2664.59,6057.9531 C2669.49,6073.4731 2680.53,6072.4831 2685.59,6087.9531 C2882.47,6689.6031 2792.9,11151.1331 2809.59,11783.9531 C2817.73,12092.4431 2682.92,14336.3431 2895.59,14559.9531 C3930.28,15647.8431 15596.75,15727.2431 17161.46,15733.0031 " fill="none" id="C_0000319868049196089894&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3453.08,4859.4931,3449.2196,4865.5839,3453.3572,4871.4899,3457.2175,4865.3991,3453.08,4859.4931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2815.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="2822.59" y="11700.52">type_name</text><!--MD5=[a10f761581de782c0803a55370c182db]
reverse link C_0001725595510223069271 to C_0000319868049196089894--><path d="M3873.76,3495.7531 C3838.31,3542.1331 3803.95,3592.9431 3777.59,3643.9531 C3590.93,4005.3131 3495.33,4488.0931 3462.28,4683.1931 " fill="none" id="C_0001725595510223069271&lt;-C_0000319868049196089894" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3868.29,3491.3831,3886.08,3479.8731,3879.36,3499.9631,3868.29,3491.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M19240.96,13674.2631 C19157.2,13954.1131 19025.47,14296.6931 18831.59,14559.9531 C18461.34,15062.7031 17821.42,15462.9431 17512.13,15637.8531 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17507.6,15640.4131,17517.4042,15639.4764,17511.9552,15637.9571,17513.4745,15632.5081,17507.6,15640.4131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18837.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="47" x="18844.59" y="14556.02">classes</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M19272.08,13674.1231 C19203.94,13954.7631 19088.96,14298.1631 18900.59,14559.9531 C18521.48,15086.8531 17835.97,15480.9231 17512.58,15646.9431 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17507.85,15649.3731,17517.6829,15648.8127,17512.2961,15647.0857,17514.0231,15641.6989,17507.85,15649.3731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18906.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="170" x="18913.59" y="14556.02">resource_base_extensions</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M19357.95,13674.0631 C19333.49,13955.5131 19265.57,14299.7331 19092.59,14559.9531 C18694.16,15159.3431 17874.33,15529.1131 17512.68,15669.2831 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17507.92,15671.1231,17517.7563,15671.6197,17512.5856,15669.3254,17514.8799,15664.1547,17507.92,15671.1231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="19098.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="103" x="19105.59" y="14556.02">compat_classes</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M18997.69,13674.1931 C18812.24,13929.0531 18581.05,14240.4631 18365.59,14512.9531 C18055.82,14904.7331 17671.75,15349.2031 17471.15,15578.4131 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17467.63,15582.4431,17476.5668,15578.304,17470.9225,15578.6802,17470.5462,15573.0359,17467.63,15582.4431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18345.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="18352.59" y="14556.02">default_values</text><!--MD5=[1259c5a3a05eb23b6b415165781cedc4]
link C_0000104564426296396960 to C_0001858199404643284193--><path d="M19061.98,13674.3631 C18894.32,13945.6631 18675.08,14280.0931 18453.59,14559.9531 C18144.3,14950.7631 17727.61,15362.2831 17500,15578.9531 " fill="none" id="C_0000104564426296396960-&gt;C_0001858199404643284193-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17496.33,15582.4431,17505.6055,15579.1319,17499.9503,15578.9945,17500.0877,15573.3393,17496.33,15582.4431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18459.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="18466.59" y="14556.02">default_values_cached</text><!--MD5=[ba964ffb66bb1329413fe3c100b0ab0b]
link C_0000104564426296396960 to C_0000210234563198599367--><path d="M19747.22,13674.0131 C19997.25,13967.3431 20348.9,14315.8331 20740.59,14512.9531 C21970.66,15131.9931 26122.77,15540.6131 27746.22,15680.1531 " fill="none" id="C_0000104564426296396960-&gt;C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="27751.28,15680.5931,27742.6568,15675.8349,27746.2985,15680.1637,27741.9697,15683.8053,27751.28,15680.5931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20844.59" cy="14552.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="20851.59" y="14556.02">default_values</text><!--MD5=[f728ac2c311f9c9f533bae5aa126394c]
reverse link C_0001778859257025660860 to C_0001858199404643284193--><path d="M22864.82,2370.1331 C22399.48,2407.0631 21259.72,2495.0531 20303.59,2548.9531 C20224.54,2553.4131 19659.44,2538.1331 19591.59,2578.9531 C19415.96,2684.6231 19447.95,2792.4831 19358.59,2976.9531 C18739.16,4255.7631 18773.81,4675.1931 18621.59,6087.9531 C18588.91,6391.3031 18693.37,11360.2731 18479.59,11577.9531 C18426.45,11632.0731 17850.45,11553.5531 17797.59,11607.9531 C17741.36,11665.8331 17767.48,14433.4531 17753.59,14512.9531 C17683.97,14911.5731 17504.01,15355.2831 17404.07,15582.0131 " fill="none" id="C_0001778859257025660860&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="22878.06,2369.0831,22871.7623,2365.5705,22866.0976,2370.0327,22872.3954,2373.5454,22878.06,2369.0831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18645.59" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="18655.59" y="5974.52">_class_name</text><!--MD5=[d895a2b3bcb124753bfb70e9baa17b4b]
reverse link C_0001778859257025660860 to C_0000699772808699382057--><path d="M23070.76,2510.6231 C23068.7,2631.8231 23074.42,2802.4231 23111.59,2946.9531 C23138.85,3052.9431 23199.41,3165.2931 23239.62,3232.6431 " fill="none" id="C_0001778859257025660860&lt;-C_0000699772808699382057" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23071.02,2497.5731,23066.902,2503.4928,23070.7824,2509.5708,23074.9004,2503.6511,23071.02,2497.5731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23114.59" y="2760.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="53" x="23124.59" y="2767.52">refcount</text><!--MD5=[d895a2b3bcb124753bfb70e9baa17b4b]
reverse link C_0001778859257025660860 to C_0000699772808699382057--><path d="M23158.04,2509.8031 C23167.44,2532.5931 23176.01,2556.0831 23182.59,2578.9531 C23228.26,2737.4431 23208.64,2783.4831 23230.59,2946.9531 C23244.03,3047.0031 23260.19,3163.1731 23269.91,3232.6431 " fill="none" id="C_0001778859257025660860&lt;-C_0000699772808699382057-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23152.91,2497.5931,23151.5499,2504.6748,23157.5637,2508.654,23158.9238,2501.5723,23152.91,2497.5931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23233.59" y="2760.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="23243.59" y="2767.52">refcount_init</text><!--MD5=[0a2b60ba7d2c96e1d65f8bc42ff8af0b]
reverse link C_0001778859257025660860 to C_0000104564426296396960--><path d="M22872.86,2371.5231 C22188.64,2438.8731 20032.59,2698.3831 20032.59,3294.4531 C20032.59,3294.4531 20032.59,3294.4531 20032.59,5970.9531 C20032.59,6126.7031 20088.63,11451.5731 19997.59,11577.9531 C19973.44,11611.4831 19938.96,11578.8731 19909.59,11607.9531 C19629.18,11885.6331 19492.14,12315.3831 19425.38,12652.7131 " fill="none" id="C_0001778859257025660860&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="22877.85,2371.0331,22868.5037,2367.9272,22872.8737,2371.5193,22869.2816,2375.8893,22877.85,2371.0331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20038.59" cy="4772.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="20045.59" y="4776.02">«friend»</text><!--MD5=[4def885f8334d479e8b07d6a9cf14ba6]
reverse link C_0001213123647052694419 to C_0001858199404643284193--><path d="M19791.56,8972.8331 C19831.91,9479.8131 19940.29,11219.8331 19561.59,11577.9531 C19509.95,11626.7931 18333.14,11557.9831 18282.59,11607.9531 C18167.76,11721.4931 18232.5,14359.7031 18181.59,14512.9531 C18037.27,14947.4131 17685.89,15366.1531 17483.97,15582.1031 " fill="none" id="C_0001213123647052694419&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="19790.5,8959.6331,19786.9942,8965.9347,19791.4627,8971.5944,19794.9685,8965.2929,19790.5,8959.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18244.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="18254.59" y="13168.02">_class_name</text><!--MD5=[11aa9a0bb56ee0f681895cd87e708f0c]
reverse link C_0001213123647052694419 to C_0000104564426296396960--><path d="M19771.33,8964.7931 C19745.92,9359.7031 19664.44,10574.2331 19561.59,11577.9531 C19524.71,11937.8731 19473.72,12342.5931 19432.59,12652.9131 " fill="none" id="C_0001213123647052694419&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="19771.66,8959.6031,19767.0768,8968.3206,19771.3312,8964.5923,19775.0595,8968.8467,19771.66,8959.6031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="19563.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="19570.59" y="11700.52">«friend»</text><!--MD5=[9c1588adceb28ea989716b6537d0f66c]
reverse link C_0001778859257025660860 to C_0001213123647052694419--><path d="M22857.53,2352.5931 C22185.98,2353.7531 20203.5,2374.5931 20006.59,2578.9531 C19566.6,3035.6031 19740.4,7861.3631 19774.35,8706.1131 " fill="none" id="C_0001778859257025660860&lt;-C_0001213123647052694419" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="22857.97,2345.5931,22877.98,2352.5631,22857.99,2359.5931,22857.97,2345.5931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[43e270b203a1efc3a7378a000f4b2686]
reverse link C_0001699661383862634192 to C_0001858199404643284193--><path d="M18242.97,8991.4731 C18354.85,9456.9431 18610.72,10839.6131 17922.59,11577.9531 C17869.39,11635.0431 17811.66,11560.6531 17749.59,11607.9531 C17669.11,11669.2931 17677.43,11715.8531 17652.59,11813.9531 C17357.7,12978.6331 17616.68,13317.0431 17501.59,14512.9531 C17464.39,14899.6031 17395.91,15351.9531 17359.27,15582.1631 " fill="none" id="C_0001699661383862634192&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="18239.87,8978.6331,18237.3923,8985.4052,18242.6904,8990.297,18245.1682,8983.5249,18239.87,8978.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17655.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="17665.59" y="13168.02">_class_name</text><!--MD5=[43e270b203a1efc3a7378a000f4b2686]
reverse link C_0001699661383862634192 to C_0001858199404643284193--><path d="M18244.54,8991.4031 C18361.9,9460.3831 18633.98,10859.9031 17922.59,11577.9531 C17880.11,11620.8431 17707.54,11582.9431 17652.59,11607.9531 C17529.49,11663.9831 17483.85,11690.5031 17428.59,11813.9531 C17397.96,11882.3931 17391.82,14438.0031 17389.59,14512.9531 C17378.13,14898.2831 17355.22,15351.6631 17342.9,15582.2431 " fill="none" id="C_0001699661383862634192&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="18241.28,8978.4731,18238.8637,8985.2673,18244.2059,8990.1109,18246.6222,8983.3167,18241.28,8978.4731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17431.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="17441.59" y="13168.02">function</text><!--MD5=[7ec9132e29862f4fe6197450a34dda02]
reverse link C_0001699661383862634192 to C_0000104564426296396960--><path d="M18184.39,8983.8231 C18141.94,9417.4131 18068.7,10698.1331 18560.59,11577.9531 C18570.93,11596.4331 18586.61,11589.8531 18597.59,11607.9531 C18639.03,11676.2031 18606.66,11708.7931 18633.59,11783.9531 C18741.08,12083.8831 18903.81,12399.3831 19048.27,12652.7431 " fill="none" id="C_0001699661383862634192&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="18184.89,8978.7631,18180.0338,8987.3315,18184.4038,8983.7394,18187.9959,8988.1094,18184.89,8978.7631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18639.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18646.59" y="11700.52">«friend»</text><!--MD5=[e0e13f14938ed7974959856216727404]
reverse link C_0001778859257025660860 to C_0001699661383862634192--><path d="M22857.57,2357.0631 C22019.47,2373.6531 19077.53,2441.5231 18935.59,2578.9531 C18769.74,2739.5531 18991.06,3434.6731 18845.59,3613.9531 C18816.63,3649.6531 18786.51,3621.1331 18746.59,3643.9531 C18719.84,3659.2531 18709.34,3663.3631 18695.59,3690.9531 C17803.67,5481.1431 18091.02,8054.8131 18179.73,8687.4431 " fill="none" id="C_0001778859257025660860&lt;-C_0001699661383862634192" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="22857.74,2350.0531,22877.87,2356.6631,22858.01,2364.0531,22857.74,2350.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b642425c83424b61917059e5da81b445]
reverse link C_0000218299049716973303 to C_0001858199404643284193--><path d="M28575.51,5845.6131 C28578.2,5847.7431 28580.9,5849.8531 28583.59,5851.9531 C28822.54,6037.8631 29049.53,5839.5431 29222.59,6087.9531 C29309.77,6213.0831 29298.87,11445.8931 29222.59,11577.9531 C29209.25,11601.0531 29183.94,11584.8531 29170.59,11607.9531 C29131.47,11675.6931 29139.5,11712.1731 29170.59,11783.9531 C29178.34,11801.8431 29194.84,11796.0631 29202.59,11813.9531 C29262.2,11951.5431 29305.81,14404.1831 29202.59,14512.9531 C29146.38,14572.1931 27815.99,14583.3531 27734.59,14589.9531 C23573.3,14927.5831 18500.88,15580.7131 17507.79,15710.6531 " fill="none" id="C_0000218299049716973303&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28565.18,5837.3531,28567.3711,5844.2233,28574.5556,5844.843,28572.3644,5837.9729,28565.18,5837.3531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29173.59" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29183.59" y="11700.52">_class_name</text><!--MD5=[bd154d8958cda7fc523b5af6c622945b]
reverse link C_0000218299049716973303 to C_0001872058027933416994--><path d="M28011.55,5857.2231 C28012.58,5865.4931 28013.59,5873.7431 28014.59,5881.9531 C28112.13,6682.1031 28187.71,7608.6331 28231.65,8206.6331 " fill="none" id="C_0000218299049716973303&lt;-C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28010.91,5852.0631,28008.0472,5861.4867,28011.5249,5857.0252,28015.9864,5860.5029,28010.91,5852.0631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="28038.59" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="28045.59" y="5974.52">«friend»</text><!--MD5=[3fd4490e8add7f4a5625d4623d397047]
link C_0001872058027933416994 to C_0000218299049716973303--><path d="M28271.1,8206.8031 C28260.19,7607.4331 28223.48,6678.6431 28106.59,5881.9531 C28105.39,5873.7431 28104.15,5865.4931 28102.89,5857.2231 " fill="none" id="C_0001872058027933416994-&gt;C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="28102.09,5852.0731,28099.4988,5861.575,28102.8471,5857.0155,28107.4066,5860.3637,28102.09,5852.0731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28130.59" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="118" x="28140.59" y="5974.52">edited_scene_root</text><!--MD5=[3fd4490e8add7f4a5625d4623d397047]
link C_0001872058027933416994 to C_0000218299049716973303--><path d="M28053.76,8206.9431 C27867.65,7614.0131 27639.59,6695.2831 27693.59,5881.9531 C27694.14,5873.7231 27694.71,5865.4631 27695.3,5857.1731 " fill="none" id="C_0001872058027933416994-&gt;C_0000218299049716973303-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="27695.67,5852.0031,27691.0372,5860.6943,27695.3127,5856.9903,27699.0167,5861.2659,27695.67,5852.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27696.59" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="91" x="27706.59" y="5974.52">current_scene</text><!--MD5=[025b4de6bd2e68b8ca567d9f667db6aa]
reverse link C_0001872058027933416994 to C_0000218299049716973303--><path d="M28146.85,8201.9931 C28040.16,7641.8931 27896.5,6799.2431 27838.59,6057.9531 C27832.5,5979.9731 27838.49,5960.1731 27838.59,5881.9531 C27838.61,5872.0831 27838.62,5862.1631 27838.64,5852.1931 " fill="none" id="C_0001872058027933416994&lt;-C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28147.79,8206.9231,28150.0174,8197.3294,28146.8452,8202.0132,28142.1615,8198.8411,28147.79,8206.9231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27844.59" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27851.59" y="5974.52">«friend»</text><!--MD5=[b604a94a8074bade127c96b8a1da6977]
reverse link C_0000218299049716973303 to C_0000104564426296396960--><path d="M27113.46,5800.5531 C27086.22,5819.0331 27058.27,5836.2431 27029.59,5851.9531 C26430.54,6180.2831 24432.19,5589.9431 23964.59,6087.9531 C23747.97,6318.6731 24110.03,11560.8331 23885.59,11783.9531 C23811.68,11857.4331 20223.54,11761.2931 20133.59,11813.9531 C19824.22,11995.0931 19628.25,12351.7431 19511.33,12652.7731 " fill="none" id="C_0000218299049716973303&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="27117.82,5797.5731,27108.1304,5799.3372,27113.6886,5800.3894,27112.6364,5805.9475,27117.82,5797.5731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="23970.59" cy="8833.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="23977.59" y="8837.52">«friend»</text><!--MD5=[70070708faa8146b449b4995936967c8]
reverse link C_0001531814603945772616 to C_0000218299049716973303--><path d="M25908.18,2098.1931 C25937.87,2323.0831 25969.26,2529.5731 25986.59,2548.9531 C26018.14,2584.2231 27604.55,2941.2431 27635.59,2976.9531 C27806.58,3173.6431 27888.23,3431.7931 27920.52,3690.7231 " fill="none" id="C_0001531814603945772616&lt;-C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25901.21,2098.8731,25905.54,2078.1331,25915.09,2097.0531,25901.21,2098.8731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ba2cffb63cb3f035d21a701c85d098f8]
link C_0000825523737350882091 to C_0000825523737350882091--><path d="M27531.93,283.8931 C27554.05,292.4331 27566.59,302.9531 27566.59,315.4531 C27566.59,326.9731 27555.93,336.8131 27536.94,344.9731 " fill="none" id="C_0000825523737350882091-&gt;C_0000825523737350882091" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="27531.93,347.0131,27541.774,347.3218,27536.5605,345.1266,27538.7556,339.9131,27531.93,347.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27574.59" y="313.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="27584.59" y="320.02">singleton</text><!--MD5=[c50f7161c688797db185b0408c3ff27c]
reverse link C_0001951177692366602790 to C_0001858199404643284193--><path d="M27116.03,3626.7531 C27109.96,3648.2331 27104.71,3669.7431 27100.59,3690.9531 C27009.16,4162.3931 27098.38,5371.7331 27100.59,5851.9531 C27106.66,7170.2131 27206.36,10466.7331 27153.59,11783.9531 C27129.24,12391.8631 27329.86,14050.4531 26934.59,14512.9531 C26293.83,15262.7031 18751.83,15663.8931 17507.82,15725.1631 " fill="none" id="C_0001951177692366602790&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="27119.7,3614.1231,27114.1831,3618.7668,27116.3476,3625.6453,27121.8645,3621.0017,27119.7,3614.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27171.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="27181.59" y="8837.52">_class_name</text><!--MD5=[3320896de7ce0d6466aa5eab6e649e4e]
reverse link C_0001951177692366602790 to C_0000945411446247634027--><path d="M27630.85,3410.5931 C27914.96,3493.3431 28317.97,3600.8631 28678.59,3660.9531 C28720.37,3667.9131 29028.78,3660.8731 29058.59,3690.9531 C29397.45,4032.8831 28897.57,5485.3731 29209.59,5851.9531 C29247.47,5896.4431 29291.5,5846.0431 29337.59,5881.9531 C29407.06,5936.0731 29353.97,6011.2031 29428.59,6057.9531 C29483.65,6092.4431 30551.92,6041.7531 30597.59,6087.9531 C30704.83,6196.4031 30633.38,11431.6831 30676.59,11577.9531 C30711.67,11696.6831 30789.4,11695.2531 30824.59,11813.9531 C30867.22,11957.7331 30777.9,14393.5231 30868.59,14512.9531 C31342.32,15136.7731 33812.02,15558.7031 34682.53,15689.9631 " fill="none" id="C_0001951177692366602790&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="27618.26,3406.9231,27622.8995,3412.4435,27629.7797,3410.2841,27625.1402,3404.7637,27618.26,3406.9231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30679.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="30689.59" y="8837.52">name</text><!--MD5=[3320896de7ce0d6466aa5eab6e649e4e]
reverse link C_0001951177692366602790 to C_0000945411446247634027--><path d="M27631.2,3385.7231 C27913.55,3454.2831 28311.21,3552.4231 28658.59,3643.9531 C28685.81,3651.1231 28691.86,3656.1931 28719.59,3660.9531 C28767.89,3669.2431 29125.16,3656.0931 29159.59,3690.9531 C29497.62,4033.1131 28948.67,5503.8731 29280.59,5851.9531 C29325.15,5898.6831 29514.47,5848.3331 29569.59,5881.9531 C29649.37,5930.6131 29603.06,6012.3131 29684.59,6057.9531 C29735.37,6086.3731 30690.79,6046.4631 30731.59,6087.9531 C30838.54,6196.6831 30738.24,11437.4631 30797.59,11577.9531 C30855.45,11714.8831 30975.86,11677.3931 31034.59,11813.9531 C31093.85,11951.7431 30995.69,14406.7331 31101.59,14512.9531 C31143.93,14555.4231 32122,14530.1831 32180.59,14542.9531 C33139.08,14751.7831 34180.78,15282.4231 34682.59,15559.3031 " fill="none" id="C_0001951177692366602790&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="27618.27,3382.5831,27623.1618,3387.8813,27629.9338,3385.4035,27625.0421,3380.1054,27618.27,3382.5831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30800.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="30810.59" y="8837.52">path_cache</text><!--MD5=[3320896de7ce0d6466aa5eab6e649e4e]
reverse link C_0001951177692366602790 to C_0000945411446247634027--><path d="M27631.29,3310.9031 C28187.03,3340.9131 29194.41,3430.6531 29428.59,3690.9531 C29750.67,4048.9531 29257.44,5503.2931 29589.59,5851.9531 C29627.12,5891.3431 29778.86,5873.4131 29832.59,5881.9531 C30305.27,5957.0931 30583.33,5720.1531 30889.59,6087.9531 C30987.18,6205.1531 30903.9,11431.5431 30946.59,11577.9531 C30981.19,11696.5831 31058.08,11695.5931 31093.59,11813.9531 C31136.7,11957.6231 31057.63,14406.7931 31163.59,14512.9531 C31205.92,14555.3531 32183.11,14529.9631 32241.59,14542.9531 C33177.03,14750.6831 34189.66,15277.1931 34682.52,15555.2031 " fill="none" id="C_0001951177692366602790&lt;-C_0000945411446247634027-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="27618.25,3310.2031,27624.026,3314.5203,27630.2326,3310.8491,27624.4566,3306.5319,27618.25,3310.2031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30949.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="30959.59" y="8837.52">import_path</text><!--MD5=[73ef91ca258cdf41725932dce529de2e]
link C_0001951177692366602790 to C_0000218299049716973303--><path d="M27384.98,3614.0231 C27394.15,3637.2231 27403.64,3661.2631 27413.39,3685.9731 " fill="none" id="C_0001951177692366602790-&gt;C_0000218299049716973303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="27415.35,3690.9231,27415.7475,3681.0823,27413.5054,3686.2758,27408.3118,3684.0337,27415.35,3690.9231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27402.59" y="3650.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="27412.59" y="3657.02">local_scene</text><!--MD5=[15931407f9b4d3dfacc95626ff56eba4]
reverse link C_0001951177692366602790 to C_0000104564426296396960--><path d="M26895.84,3389.9431 C26683.64,3454.5531 26416.83,3553.7731 26204.59,3690.9531 C25068.88,4425.0531 25294.67,5294.5031 24062.59,5851.9531 C24037.68,5863.2231 20150.43,6068.1231 20131.59,6087.9531 C20022.61,6202.6631 20119.94,11630.4431 20081.59,11783.9531 C20005.35,12089.2031 19849.48,12402.2631 19702.29,12652.7431 " fill="none" id="C_0001951177692366602790&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26900.84,3388.4231,26891.0675,3387.1994,26896.054,3389.8704,26893.3831,3394.857,26900.84,3388.4231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="23592.59" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="23599.59" y="5974.52">«friend»</text><!--MD5=[007e28acd4d135ba2c4f8234f2e24eda]
reverse link C_0001778859257025660860 to C_0001951177692366602790--><path d="M23236.15,2509.5631 C23258.44,2525.1431 23282.14,2538.8931 23306.59,2548.9531 C23394.36,2585.0531 23638.56,2566.1631 23732.59,2578.9531 C24902.1,2738.0731 26266.13,3051.9631 26900.78,3205.5631 " fill="none" id="C_0001778859257025660860&lt;-C_0001951177692366602790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23231.81,2515.0631,23219.79,2497.6131,23240.07,2503.7531,23231.81,2515.0631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aa0c273b9f60adfd568ff5c86238f80b]
reverse link C_0001608678623693693822 to C_0001858199404643284193--><path d="M26818.29,5057.5231 C26898.07,5321.4931 27007.62,5726.6131 27051.59,6087.9531 C27125.29,6693.4831 27082.44,10968.7331 27051.59,11577.9531 C27018.44,12232.6931 27210.7,14043.0231 26753.59,14512.9531 C26079.48,15205.9831 18735.09,15653.5631 17507.99,15723.7631 " fill="none" id="C_0001608678623693693822&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26814.51,5045.0531,26812.4173,5051.9539,26817.9824,5056.5397,26820.0751,5049.639,26814.51,5045.0531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27052.59" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="27062.59" y="11700.52">_class_name</text><!--MD5=[276c31c105800b95195630ce44e7eac9]
reverse link C_0001608678623693693822 to C_0001649884439586022807--><path d="M26739.01,5050.3831 C26766.7,5304.1731 26850.83,5667.0731 27100.59,5851.9531 C27172.8,5905.4031 27840.7,5823.1231 27908.59,5881.9531 C27968.68,5934.0231 27879.8,6006.7131 27940.59,6057.9531 C28006.19,6113.2331 30961.29,6034.7631 31028.59,6087.9531 C31848.78,6736.1431 31774.87,8205.3131 31726.91,8680.5731 " fill="none" id="C_0001608678623693693822&lt;-C_0001649884439586022807" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26738.45,5045.1631,26735.4506,5054.5441,26738.9928,5050.1336,26743.4033,5053.6757,26738.45,5045.1631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27946.59" cy="5970.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27953.59" y="5974.52">«friend»</text><!--MD5=[440f40faf3fe69bc1287a9f9d9945bfb]
reverse link C_0001608678623693693822 to C_0000104564426296396960--><path d="M26707.15,5050.3031 C26672.89,5305.6531 26578.86,5671.0931 26321.59,5851.9531 C26271.62,5887.0831 24182.52,5870.1031 24122.59,5881.9531 C23913.95,5923.1931 23886.35,6017.2331 23677.59,6057.9531 C23630.3,6067.1731 20242.75,6053.9731 20208.59,6087.9531 C20096.41,6199.5531 20170.4,11631.0631 20129.59,11783.9531 C20047.59,12091.2331 19882.16,12403.3931 19725.86,12652.7631 " fill="none" id="C_0001608678623693693822&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26707.85,5045.0431,26702.702,5053.4394,26707.1929,5049.9998,26710.6326,5054.4907,26707.85,5045.0431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20214.59" cy="8833.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="20221.59" y="8837.52">«friend»</text><!--MD5=[16d7dd01d25636e525d063c3bea0b5f8]
reverse link C_0001951177692366602790 to C_0001608678623693693822--><path d="M27043.9,3632.2631 C27042.09,3636.1631 27040.32,3640.0631 27038.59,3643.9531 C26914.27,3923.6131 26828.15,4264.7231 26778.36,4497.8331 " fill="none" id="C_0001951177692366602790&lt;-C_0001608678623693693822" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="27037.69,3629.0131,27052.61,3613.9631,27050.33,3635.0331,27037.69,3629.0131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2cf028d42d6a2db252d6d720b88d2c11]
link C_0001649884439586022807 to C_0001531814603945772616--><path d="M31731.88,8680.7431 C31799.61,8259.6931 32015.14,7042.0231 32379.59,6087.9531 C32384.99,6073.8331 32391.8,6072.5831 32395.59,6057.9531 C32538.92,5504.8031 32417.59,5343.8731 32417.59,4772.4531 C32417.59,2350.9531 32417.59,2350.9531 32417.59,2350.9531 C32417.59,1760.1731 28193.43,1568.5131 26513.13,1515.6531 " fill="none" id="C_0001649884439586022807-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.9,1515.4831,26516.7699,1519.7639,26512.8975,1515.6402,26517.0212,1511.7678,26507.9,1515.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32420.59" y="3293.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="32430.59" y="3300.02">owner</text><!--MD5=[8415f50d93551f9719370020f3d5388d]
reverse link C_0001649884439586022807 to C_0000788782266645010446--><path d="M31711.53,8998.3731 C31726.91,9448.8131 31820.4,10725.8231 32379.59,11577.9531 C32474.79,11723.0231 32608.64,11661.0131 32690.59,11813.9531 C32945.98,12290.5231 32809.57,13002.1231 32779.86,13139.1631 " fill="none" id="C_0001649884439586022807&lt;-C_0000788782266645010446" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="31711.1,8985.2831,31707.3001,8991.4118,31711.4958,8997.2766,31715.2957,8991.1479,31711.1,8985.2831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="32672.59" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="32682.59" y="11700.52">properties</text><!--MD5=[a4f0e8eee4c7fe37314c0c917d922cff]
link C_0001649884439586022807 to C_0002110837736536862228--><path d="M31716.21,8985.1531 C31746.62,9588.9031 31859.93,11838.8531 31906.46,12762.6631 " fill="none" id="C_0001649884439586022807-&gt;C_0002110837736536862228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="31906.72,12767.7431,31910.2511,12758.549,31906.4625,12762.7498,31902.2617,12758.9611,31906.72,12767.7431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="31858.59" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="59" x="31868.59" y="11700.52">language</text><!--MD5=[9db7a3eb346815fb65d8e4265bbdc5b6]
reverse link C_0001735438654351294549 to C_0001649884439586022807--><path d="M31713.43,2967.2831 C31712.65,3911.4131 31709.4,7856.5531 31708.72,8680.6531 " fill="none" id="C_0001735438654351294549&lt;-C_0001649884439586022807" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="31706.43,2967.2031,31713.44,2947.2131,31720.43,2967.2131,31706.43,2967.2031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2191a2c55081528738a9601d975d7e81]
reverse link C_0000970940027123558604 to C_0001858199404643284193--><path d="M28836.97,5045.7531 C28860.11,5272.9731 28915.93,5598.9031 29050.59,5851.9531 C29119.11,5980.7031 29223.95,5952.7331 29278.59,6087.9531 C29300.52,6142.1931 29298.06,14468.8731 29259.59,14512.9531 C29162.77,14623.9131 29078.35,14547.6431 28931.59,14559.9531 C28401.29,14604.4431 28265.56,14554.1731 27734.59,14589.9531 C23569.07,14870.6531 18500.02,15569.0831 17507.66,15708.8731 " fill="none" id="C_0000970940027123558604&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28835.66,5032.6331,28832.2734,5038.9995,28836.8475,5044.5742,28840.2341,5038.2078,28835.66,5032.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29291.59" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29301.59" y="11700.52">_class_name</text><!--MD5=[d541019a02b5abc817eac1d3ff5a0498]
reverse link C_0000970940027123558604 to C_0000104564426296396960--><path d="M28817.11,5037.6231 C28802.03,5270.8531 28749.7,5609.9431 28582.59,5851.9531 C28487.55,5989.6031 28427.1,6007.5431 28267.59,6057.9531 C28219.52,6073.1431 27395.91,6051.9731 27360.59,6087.9531 C27146.91,6305.6331 27470.97,11339.6231 27280.59,11577.9531 C27245.21,11622.2531 27196.84,11568.0131 27156.59,11607.9531 C27099.36,11664.7531 27176.04,11734.1931 27112.59,11783.9531 C27036.32,11843.7731 20217.33,11765.1331 20133.59,11813.9531 C19823.74,11994.6131 19627.74,12351.5331 19510.93,12652.8031 " fill="none" id="C_0000970940027123558604&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28817.44,5032.4831,28812.8833,5041.2145,28817.1263,5037.4733,28820.8675,5041.7163,28817.44,5032.4831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27366.59" cy="8833.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27373.59" y="8837.52">«friend»</text><!--MD5=[af31877db6ec92759d70e67f8199ce9a]
reverse link C_0001531814603945772616 to C_0000970940027123558604--><path d="M25964.58,2097.9531 C25968.65,2117.1731 25972.66,2136.2131 25976.59,2154.9531 C26013.35,2329.9031 25921.24,2433.3431 26057.59,2548.9531 C26123.66,2604.9731 26751.98,2560.4231 26836.59,2578.9531 C27735.32,2775.7431 28121.58,2894.7731 28582.59,3690.9531 C28729.73,3945.0531 28786,4281.0131 28807.47,4510.2231 " fill="none" id="C_0001531814603945772616&lt;-C_0000970940027123558604" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25957.71,2099.2931,25960.42,2078.2731,25971.41,2096.3931,25957.71,2099.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f972d27a027a57bd8d2a6ea69d3db7f2]
reverse link C_0001823345232236209470 to C_0001858199404643284193--><path d="M30018.09,797.4131 C30569.65,942.3331 32151.19,1451.6831 32405.59,2578.9531 C32441.6,2738.4931 32469.42,2796.3631 32405.59,2946.9531 C32398.11,2964.6031 32387.84,2963.0931 32374.59,2976.9531 C32081.99,3283.1031 32011.67,3363.1031 31743.59,3690.9531 C30981.55,4622.8831 30978.32,5017.5331 30110.59,5851.9531 C29995.07,5963.0531 29958.43,5987.2331 29814.59,6057.9531 C29774.86,6077.4931 29745.95,6052.3731 29719.59,6087.9531 C29674.2,6149.2231 29663.43,11501.7031 29662.59,11577.9531 C29655.43,12230.1831 29824.26,13890.7231 29628.59,14512.9531 C29621.01,14537.0631 29618.84,14547.9631 29596.59,14559.9531 C29551.06,14584.5031 27786.22,14586.7031 27734.59,14589.9531 C23567.86,14852.0131 18499.77,15565.2731 17507.62,15708.2831 " fill="none" id="C_0001823345232236209470&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30005.26,794.0531,30010.0535,799.4403,30016.87,797.0876,30012.0765,791.7003,30005.26,794.0531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="31786.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="31793.59" y="3657.02">name</text><!--MD5=[d03f40f4e0550f14d97c47cc13da68a0]
link C_0001823345232236209470 to C_0001531814603945772616--><path d="M29602.83,794.0231 C29016.81,903.2131 27429.09,1199.0431 26512.74,1369.7831 " fill="none" id="C_0001823345232236209470-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.7,1370.7231,26517.2798,1373.0095,26512.6157,1369.8086,26515.8165,1365.1444,26507.7,1370.7231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="29164.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="18" x="29171.59" y="882.02">ptr</text><!--MD5=[54c87c44ad6b03a38874e33edc86c7a9]
reverse link C_0000361490529588572420 to C_0000945411446247634027--><path d="M36266.78,14524.7631 C36259.49,14536.6131 36252.09,14548.3531 36244.59,14559.9531 C35989.85,14954.0931 35573.91,15306.4831 35290.61,15519.8931 " fill="none" id="C_0000361490529588572420&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="36273.73,14513.3631,36267.1905,14516.4021,36267.4806,14523.6074,36274.0201,14520.5684,36273.73,14513.3631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36247.59" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="36257.59" y="14556.02">_execpath</text><!--MD5=[54c87c44ad6b03a38874e33edc86c7a9]
reverse link C_0000361490529588572420 to C_0000945411446247634027--><path d="M36005.55,14524.1531 C35997.58,14536.1831 35989.6,14548.1131 35981.59,14559.9531 C35773.9,14867.1031 35498.89,15186.1931 35290.64,15413.9631 " fill="none" id="C_0000361490529588572420&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="36012.85,14513.0931,36006.2081,14515.9011,36006.2454,14523.1121,36012.8874,14520.3041,36012.85,14513.0931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35984.59" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="35994.59" y="14556.02">_local_clipboard</text><!--MD5=[b64bbfe1dfefa7e0cb7589d09d95a866]
reverse link C_0000361490529588572420 to C_0002063845175027013341--><path d="M36869.39,14526.2031 C36869.79,14531.7931 36870.2,14537.3831 36870.59,14542.9531 C36904.14,15012.7331 36908.87,15588.8831 36909.5,15710.3231 " fill="none" id="C_0000361490529588572420&lt;-C_0002063845175027013341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="36868.42,14513.1231,36864.8729,14519.4015,36869.304,14525.0905,36872.8511,14518.8121,36868.42,14513.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36873.59" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="36883.59" y="14556.02">_cmdline</text><!--MD5=[b64bbfe1dfefa7e0cb7589d09d95a866]
reverse link C_0000361490529588572420 to C_0002063845175027013341--><path d="M36708.89,14526.2931 C36709.76,14537.5631 36710.66,14548.7831 36711.59,14559.9531 C36750.79,15027.8431 36876.42,15589.7631 36904.15,15710.0831 " fill="none" id="C_0000361490529588572420&lt;-C_0002063845175027013341-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="36707.9,14513.0431,36704.3598,14519.3254,36708.7972,14525.0095,36712.3374,14518.7273,36707.9,14513.0431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="36714.59" y="14549.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="36724.59" y="14556.02">restart_commandline</text><!--MD5=[6a56705f3e0a2b0efcdc552be9ef22dd]
link C_0000361490529588572420 to C_0000361490529588572420--><path d="M37428.64,13023.7731 C37450.93,13061.4931 37463.59,13108.0531 37463.59,13163.4531 C37463.59,13216.6931 37451.9,13261.7631 37431.21,13298.6731 " fill="none" id="C_0000361490529588572420-&gt;C_0000361490529588572420" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="37428.64,13303.1331,37436.605,13297.3401,37431.1407,13298.8034,37429.6774,13293.3391,37428.64,13303.1331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="37471.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="37481.59" y="13168.02">singleton</text><!--MD5=[61db9f2a674de4dd20c1e8d6466365f6]
reverse link C_0001485048025194488343 to C_0001858199404643284193--><path d="M35644.38,9081.5031 C35748.2,9600.3131 35910.22,10816.4731 35354.59,11577.9531 C35334.16,11605.9531 35307.38,11583.7131 35282.59,11607.9531 C35221.42,11667.7731 35275.93,11736.7131 35204.59,11783.9531 C35119.45,11840.3431 33439.27,11742.2131 33366.59,11813.9531 C33153.08,12024.7231 33500.42,14301.4931 33287.59,14512.9531 C33235.72,14564.4931 32043.33,14528.7331 31971.59,14542.9531 C31951.03,14547.0331 31948.19,14556.0331 31927.59,14559.9531 C31698.75,14603.4731 27967.15,14576.3731 27734.59,14589.9531 C23567.3,14833.3231 18500.91,15561.2631 17507.99,15707.6431 " fill="none" id="C_0001485048025194488343&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35641.78,9068.6231,35639.0459,9075.2958,35644.1537,9080.386,35646.8878,9073.7133,35641.78,9068.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33369.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="33379.59" y="13168.02">_class_name</text><!--MD5=[55b2a8d5d68dbf7117485c4d04f1ed20]
reverse link C_0001485048025194488343 to C_0000945411446247634027--><path d="M35591.32,9081.5031 C35605.9,10105.1531 35652.76,13978.7831 35535.59,14512.9531 C35485.19,14742.7331 35388.78,14981.6731 35290.64,15186.5831 " fill="none" id="C_0001485048025194488343&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35591.13,9068.4831,35587.2161,9074.5396,35591.3014,9080.4819,35595.2153,9074.4254,35591.13,9068.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35615.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="35625.59" y="13168.02">locale</text><!--MD5=[55b2a8d5d68dbf7117485c4d04f1ed20]
reverse link C_0001485048025194488343 to C_0000945411446247634027--><path d="M35608.63,9081.7731 C35686.87,10035.1631 35942.83,13465.1631 35669.59,14512.9531 C35594.84,14799.6031 35436.22,15090.2231 35290.65,15315.9431 " fill="none" id="C_0001485048025194488343&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35607.55,9068.6131,35604.0581,9074.9224,35608.5389,9080.5723,35612.0308,9074.2631,35607.55,9068.6131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35795.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="35805.59" y="13168.02">fallback</text><!--MD5=[f95868a4bcc46beaa6866e3b4ea59e8f]
link C_0001485048025194488343 to C_0001485048025194488343--><path d="M35621.16,8597.3931 C35705.72,8128.7231 35828.59,8207.2431 35828.59,8832.9531 C35828.59,9456.3731 35706.62,9536.6031 35622.09,9073.6431 " fill="none" id="C_0001485048025194488343-&gt;C_0001485048025194488343" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="35621.16,9068.5131,35618.8198,9078.0799,35622.0469,9073.4338,35626.6929,9076.6609,35621.16,9068.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35836.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="35846.59" y="8837.52">singleton</text><!--MD5=[7c58e4f37afb0d5a6a6c8a0d7e05a07b]
reverse link C_0001485048025194488343 to C_0000104564426296396960--><path d="M35645.28,9073.7931 C35759.85,9616.5031 35946.67,10940.9231 35222.59,11577.9531 C35187.92,11608.4631 28617.29,11601.2131 28571.59,11607.9531 C28299.62,11648.0931 28250.58,11743.8631 27978.59,11783.9531 C27879.14,11798.6131 20833.6,11775.7931 20740.59,11813.9531 C20325.05,11984.4531 19966.53,12346.7231 19719.42,12652.8631 " fill="none" id="C_0001485048025194488343&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="35644.19,9068.6331,35642.1299,9078.2641,35645.2201,9073.5259,35649.9583,9076.616,35644.19,9068.6331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="28577.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="28584.59" y="11700.52">«friend»</text><!--MD5=[575bdde0c40cde995e5d193ed3ac9a95]
reverse link C_0001531814603945772616 to C_0001485048025194488343--><path d="M26527.88,1500.3531 C28459.9,1516.1731 33769.59,1625.6231 33769.59,2350.9531 C33769.59,2350.9531 33769.59,2350.9531 33769.59,4772.4531 C33769.59,5633.3631 34498.03,5586.8431 35218.59,6057.9531 C35245.23,6075.3631 35264.99,6062.1431 35283.59,6087.9531 C35840.3,6860.6031 35715.98,8086.8031 35632.41,8597.1131 " fill="none" id="C_0001531814603945772616&lt;-C_0001485048025194488343" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26527.71,1507.3531,26507.77,1500.1931,26527.82,1493.3531,26527.71,1507.3531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0041b05e6148a13b62ca40da023988b6]
reverse link C_0000115801560197752094 to C_0001858199404643284193--><path d="M35328.59,807.4331 C35328.59,931.0531 35328.59,1238.5531 35328.59,1495.9531 C35328.59,1495.9531 35328.59,1495.9531 35328.59,5970.9531 C35328.59,6126.7031 35380.09,11454.1331 35285.59,11577.9531 C35272.8,11594.7231 34575.46,11780.8231 34554.59,11783.9531 C34484.75,11794.4431 33333.48,11763.9431 33283.59,11813.9531 C33177.68,11920.1331 33332.54,14406.7931 33226.59,14512.9531 C33201.16,14538.4431 31966.58,14541.6431 31930.59,14542.9531 C31777.62,14548.5031 31739.61,14555.5831 31586.59,14559.9531 C30730.92,14584.4131 28589.15,14539.7731 27734.59,14589.9531 C23567.37,14834.6431 18500.93,15561.5331 17507.99,15707.6831 " fill="none" id="C_0000115801560197752094&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35328.59,794.3131,35324.59,800.3131,35328.59,806.3131,35332.59,800.3131,35328.59,794.3131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35334.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="37" x="35341.59" y="3657.02">signal</text><!--MD5=[0041b05e6148a13b62ca40da023988b6]
reverse link C_0000115801560197752094 to C_0001858199404643284193--><path d="M35413.96,800.8231 C35583.53,904.9831 35946.59,1166.4731 35946.59,1495.9531 C35946.59,1495.9531 35946.59,1495.9531 35946.59,5970.9531 C35946.59,6126.7031 36003.77,11452.4031 35911.59,11577.9531 C35734.26,11819.5131 35562.95,11722.7831 35269.59,11783.9531 C35204.66,11797.4931 35017.6,11765.2231 34972.59,11813.9531 C34870.85,11924.1331 35021.1,14406.3631 34915.59,14512.9531 C34856.86,14572.2831 33497.07,14558.4231 33413.59,14559.9531 C32782.69,14571.4931 28364.56,14553.7531 27734.59,14589.9531 C23567.07,14829.4231 18500.87,15560.4631 17507.98,15707.5231 " fill="none" id="C_0000115801560197752094&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="35402.83,794.0431,35405.8751,800.5797,35413.0801,800.2829,35410.035,793.7463,35402.83,794.0431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="35952.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="50" x="35959.59" y="3657.02">method</text><!--MD5=[54ac8f63d86bc4e03834512bd61d98ef]
link C_0000115801560197752094 to C_0001531814603945772616--><path d="M35220.35,760.4331 C34353.43,828.3831 28520.5,1285.5231 26512.9,1442.8731 " fill="none" id="C_0000115801560197752094-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.76,1443.2731,26517.0417,1446.567,26512.7451,1442.8875,26516.4247,1438.5908,26507.76,1443.2731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33742.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="39" x="33749.59" y="882.02">target</text><!--MD5=[105b5b587ddf98014e1a550a5acdc50e]
reverse link C_0000066148521405667716 to C_0001858199404643284193--><path d="M34516.22,9145.8131 C34559.53,9727.7131 34556.96,10974.4631 33833.59,11577.9531 C33784.38,11619.0031 33317.49,11585.1431 33257.59,11607.9531 C33189.19,11634.0031 33033.24,11748.4431 33000.59,11813.9531 C32933.68,11948.2131 33026.74,14406.9531 32920.59,14512.9531 C32918.55,14515.0031 31256.49,14559.9031 31253.59,14559.9531 C30471.7,14574.3031 28515.26,14543.8231 27734.59,14589.9531 C23567.46,14836.1731 18500.95,15561.8431 17508,15707.7331 " fill="none" id="C_0000066148521405667716&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34515.22,9132.6231,34511.6798,9138.9054,34516.1172,9144.5895,34519.6574,9138.3073,34515.22,9132.6231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="33003.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="33013.59" y="13168.02">_class_name</text><!--MD5=[d39e92b29be60c83b30c1a4b2e8c7bab]
reverse link C_0000066148521405667716 to C_0000945411446247634027--><path d="M34580.23,9145.1731 C34737.58,9655.4131 35049.41,10703.6331 35245.59,11607.9531 C35519.34,12869.7931 35429.85,13230.6531 35278.59,14512.9531 C35275.6,14538.3731 35272.26,14564.0331 35268.62,14589.8631 " fill="none" id="C_0000066148521405667716&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34576.32,9132.4731,34574.2636,9139.3848,34579.8527,9143.9413,34581.9091,9137.0297,34576.32,9132.4731" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="35427.59,13159.0195,35431.59,13163.0195,35427.59,13167.0195,35423.59,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="35434.59" y="13168.02">resource_path</text><!--MD5=[a6badd9f9dcaf3086eae6031b522d0ad]
reverse link C_0000066148521405667716 to C_0002063845175027013341--><path d="M34480.68,9145.7631 C34495.64,9726.5231 34618.48,10969.9331 35364.59,11577.9531 C35742.67,11886.0531 37220.8,11451.0131 37546.59,11813.9531 C37646.76,11925.5331 37582.31,14367.3231 37546.59,14512.9531 C37417.35,15039.9031 37016.46,15591.9831 36927.29,15710.3031 " fill="none" id="C_0000066148521405667716&lt;-C_0002063845175027013341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34480.36,9132.5931,34476.5063,9138.6881,34480.6503,9144.5896,34484.504,9138.4946,34480.36,9132.5931" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="37605.59,13159.0195,37609.59,13163.0195,37605.59,13167.0195,37601.59,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="87" x="37612.59" y="13168.02">input_presets</text><!--MD5=[2dc6087e93f271bd3bd7602f5b86331c]
reverse link C_0000066148521405667716 to C_0001682405743486361214--><path d="M34496.8,9145.7231 C34505.09,9702.2831 34442.8,10874.2931 33833.59,11577.9531 C33646.57,11793.9731 33402.74,11582.2131 33235.59,11813.9531 C33075.12,12036.4431 33146.18,12978.8831 33159.58,13139.2131 " fill="none" id="C_0000066148521405667716&lt;-C_0001682405743486361214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="34496.6,9132.6931,34492.6928,9138.7539,34496.7846,9144.6917,34500.6918,9138.6309,34496.6,9132.6931" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="33804.59,11691.5195,33808.59,11695.5195,33804.59,11699.5195,33800.59,11695.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="33811.59" y="11700.52">custom_features</text><!--MD5=[b1cdeb5c1d2293693591756cb414570e]
link C_0000066148521405667716 to C_0000066148521405667716--><path d="M34608.17,8533.3131 C34836.2,8137.5831 35139.59,8237.4631 35139.59,8832.9531 C35139.59,9426.2631 34838.42,9527.5831 34610.68,9136.9131 " fill="none" id="C_0000066148521405667716-&gt;C_0000066148521405667716" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="34608.17,9132.5931,34609.2457,9142.3831,34610.6876,9136.9131,34616.1576,9138.3549,34608.17,9132.5931" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="35150.59,8828.5195,35154.59,8832.5195,35150.59,8836.5195,35146.59,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="35157.59" y="8837.52">singleton</text><!--MD5=[3549a9a1546b9f3f927ae4be5a497360]
reverse link C_0000066148521405667716 to C_0000104564426296396960--><path d="M34510.4,9137.7131 C34544.85,9721.1231 34524.24,10992.3831 33771.59,11577.9531 C33707.32,11627.9531 27971.55,11556.3031 27908.59,11607.9531 C27846.87,11658.5931 27934.34,11733.3431 27872.59,11783.9531 C27795.98,11846.7431 20832.24,11776.3531 20740.59,11813.9531 C20325.05,11984.4631 19966.53,12346.7331 19719.42,12652.8731 " fill="none" id="C_0000066148521405667716&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="34510.09,9132.5931,34506.61,9141.8067,34510.3752,9137.585,34514.5969,9141.3503,34510.09,9132.5931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27914.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27921.59" y="11700.52">«friend»</text><!--MD5=[5f66742971e8c9e8cae80ea28ed781f8]
reverse link C_0001531814603945772616 to C_0000066148521405667716--><path d="M26527.74,1525.9031 C28115.03,1595.8431 31915.87,1798.8831 32367.59,2154.9531 C32973.06,2632.2031 32924.92,2961.2131 33173.59,3690.9531 C33488.12,4613.9331 33300.61,4909.9731 33552.59,5851.9531 C33577.77,5946.0831 33552.02,5996.4531 33627.59,6057.9531 C33699.35,6116.3531 33765.37,6025.4631 33833.59,6087.9531 C34531.19,6726.9431 34545.41,7964.8731 34510.47,8533.3531 " fill="none" id="C_0001531814603945772616&lt;-C_0000066148521405667716" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26527.39,1532.8931,26507.72,1525.0131,26528.01,1518.9031,26527.39,1532.8931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[defcce9c8f425e144c84d1e88f84777b]
reverse link C_0001191393512042218074 to C_0001858199404643284193--><path d="M25086.2,9036.6831 C25214.91,9950.4531 25687.62,13677.8331 24963.59,14512.9531 C23948.2,15684.1431 18547.83,15735.3931 17507.93,15734.2931 " fill="none" id="C_0001191393512042218074&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25084.38,9023.7631,25081.2637,9030.2661,25086.0678,9035.6438,25089.1841,9029.1409,25084.38,9023.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25360.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="25370.59" y="13168.02">_class_name</text><!--MD5=[b77e23c3a90867c3de8e35bacb429255]
link C_0001191393512042218074 to C_0001191393512042218074--><path d="M25093.92,8642.1231 C25215.87,8124.4131 25404.09,8188.0231 25404.09,8832.9531 C25404.09,9475.8331 25217.07,9541.0831 25095.08,9028.7031 " fill="none" id="C_0001191393512042218074-&gt;C_0001191393512042218074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25093.92,9023.7831,25092.0877,9033.46,25095.0652,9028.6502,25099.875,9031.6277,25093.92,9023.7831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25415.09,8828.5195,25419.09,8832.5195,25415.09,8836.5195,25411.09,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="25422.09" y="8837.52">singleton</text><!--MD5=[f80c7ee04ef556cee553628e7a65d3d1]
reverse link C_0001191393512042218074 to C_0000104564426296396960--><path d="M25103.97,9028.6131 C25213.4,9530.8431 25423.9,10879.7431 24725.59,11577.9531 C24686.18,11617.3631 24528.82,11588.4931 24476.59,11607.9531 C24345.49,11656.7931 24349.22,11742.4831 24215.59,11783.9531 C24031.21,11841.1831 20919.04,11740.2631 20740.59,11813.9531 C20325.82,11985.2231 19967.56,12346.9331 19720.37,12652.6431 " fill="none" id="C_0001191393512042218074&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25102.85,9023.4731,25100.8766,9033.1223,25103.924,9028.3564,25108.6899,9031.4038,25102.85,9023.4731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24482.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24489.59" y="11700.52">«friend»</text><!--MD5=[ab8fd2992e044c54f6cd905a344680fd]
reverse link C_0001531814603945772616 to C_0001191393512042218074--><path d="M25143.53,1566.2231 C24662.6,1656.3731 24107.59,1865.5631 24107.59,2350.9531 C24107.59,2350.9531 24107.59,2350.9531 24107.59,4772.4531 C24107.59,5418.4231 24547.32,5467.0731 24725.59,6087.9531 C24993.27,7020.1631 25044.6,8190.9031 25054.35,8642.3831 " fill="none" id="C_0001531814603945772616&lt;-C_0001191393512042218074" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.55,1559.2831,25163.48,1562.5431,25145.09,1573.0531,25142.55,1559.2831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[280af337143101b9c3d73b7838d445f5]
reverse link C_0000425668537377496256 to C_0001858199404643284193--><path d="M30151.37,9011.6131 C30112.07,9957.3631 29918.19,14365.0231 29710.59,14559.9531 C29670.58,14597.5331 27789.38,14586.5331 27734.59,14589.9531 C23567.74,14850.0831 18499.74,15564.8731 17507.62,15708.2231 " fill="none" id="C_0000425668537377496256&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30151.92,8998.2731,30147.6729,9004.1008,30151.4188,9010.2627,30155.6659,9004.435,30151.92,8998.2731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30011.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="30021.59" y="13168.02">_class_name</text><!--MD5=[f92d939a6323d7037ad6a417dc348d89]
reverse link C_0000425668537377496256 to C_0000945411446247634027--><path d="M30151.11,9011.1231 C30118.23,9876.5531 30018.42,13652.7531 30737.59,14512.9531 C31256.04,15133.0531 33797.63,15558.9631 34682.32,15690.4631 " fill="none" id="C_0000425668537377496256&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30151.61,8997.9731,30147.3821,9003.8148,30151.1483,9009.9642,30155.3762,9004.1226,30151.61,8997.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30740.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="69" x="30750.59" y="13168.02">expression</text><!--MD5=[f92d939a6323d7037ad6a417dc348d89]
reverse link C_0000425668537377496256 to C_0000945411446247634027--><path d="M30152.73,9011.3531 C30144.86,9464.3031 30168.68,10690.3831 30606.59,11577.9531 C30670.31,11707.0931 30772.25,11681.4331 30828.59,11813.9531 C30946.08,12090.2631 30746.77,14303.1831 30961.59,14512.9531 C31008.43,14558.6931 32075.58,14529.2531 32139.59,14542.9531 C32156.28,14546.5231 33951.5,15299.2331 34682.3,15605.7831 " fill="none" id="C_0000425668537377496256&lt;-C_0000945411446247634027-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30152.97,8998.1731,30148.8651,9004.1019,30152.759,9010.1713,30156.8639,9004.2425,30152.97,8998.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="30964.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="30974.59" y="13168.02">error_str</text><!--MD5=[cec3ce52536a4a93abd3a3466f0863d1]
reverse link C_0000425668537377496256 to C_0000104564426296396960--><path d="M30161.44,9003.2631 C30159.49,9499.0531 30078.1,10952.1031 29222.59,11577.9531 C29158.91,11624.5431 27880.24,11593.8931 27802.59,11607.9531 C27569.95,11650.0831 27533.58,11743.7431 27300.59,11783.9531 C27210.81,11799.4431 20824.88,11779.3531 20740.59,11813.9531 C20325.09,11984.5431 19966.56,12346.8031 19719.44,12652.9231 " fill="none" id="C_0000425668537377496256&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="30161.46,8998.1931,30157.4343,9007.1817,30161.4457,9003.1931,30165.4343,9007.2045,30161.46,8998.1931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27808.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27815.59" y="11700.52">«friend»</text><!--MD5=[7d452e244b0aee8c038afb4d6799e947]
reverse link C_0001778859257025660860 to C_0000425668537377496256--><path d="M23250.64,2508.8231 C23276.03,2525.0431 23302.98,2539.1531 23330.59,2548.9531 C23481,2602.3231 24608.74,2555.4531 24766.59,2578.9531 C25363.07,2667.7431 25476.04,2858.6731 26072.59,2946.9531 C26244.42,2972.3831 27466.96,2935.3031 27635.59,2976.9531 C28322.55,3146.6031 28656.69,3108.5831 29058.59,3690.9531 C29332.79,4088.2731 29139.7,5390.2231 29280.59,5851.9531 C29285,5866.4031 29291.17,5867.8531 29296.59,5881.9531 C29325.56,5957.2031 29312.62,5982.3331 29340.59,6057.9531 C29345.77,6071.9331 29350.15,6074.0731 29355.59,6087.9531 C29729.32,7039.7231 30021.54,8236.5431 30121.43,8667.7331 " fill="none" id="C_0001778859257025660860&lt;-C_0000425668537377496256" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="23246.52,2514.4931,23233.76,2497.5831,23254.28,2502.8431,23246.52,2514.4931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f51a88240f615cca582e7a0121c3766]
reverse link C_0001197720528033242618 to C_0001858199404643284193--><path d="M26628.03,9011.4031 C26675.36,9883.3031 26835.31,13703.8131 26058.59,14512.9531 C25439.86,15157.5131 18681.2,15642.3331 17507.76,15721.9431 " fill="none" id="C_0001197720528033242618&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="26627.31,8998.1631,26623.6459,9004.374,26627.9698,9010.145,26631.6338,9003.9341,26627.31,8998.1631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="26651.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="26661.59" y="13168.02">_class_name</text><!--MD5=[ee3ac7328ce85f190ffde4073aa3ab2d]
link C_0001197720528033242618 to C_0001197720528033242618--><path d="M26649.39,8667.8231 C26772.47,8122.5031 26969.09,8177.5431 26969.09,8832.9531 C26969.09,9486.2831 26773.72,9543.0531 26650.56,9003.2631 " fill="none" id="C_0001197720528033242618-&gt;C_0001197720528033242618" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26649.39,8998.0831,26647.4975,9007.7485,26650.5049,9002.9572,26655.2961,9005.9646,26649.39,8998.0831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26980.09,8828.5195,26984.09,8832.5195,26980.09,8836.5195,26976.09,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="26987.09" y="8837.52">singleton</text><!--MD5=[d5273b688c2cbc8d25291921feeb727a]
reverse link C_0001197720528033242618 to C_0000104564426296396960--><path d="M26657.92,9002.9531 C26761.3,9482.5531 26980.5,10863.4531 26273.59,11577.9531 C26213.97,11638.2231 24846.15,11777.9031 24761.59,11783.9531 C24650.18,11791.9231 20843.86,11771.3831 20740.59,11813.9531 C20325.53,11985.0631 19967.13,12347.0331 19719.96,12652.9031 " fill="none" id="C_0001197720528033242618&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26656.86,8998.0531,26654.8538,9007.6955,26657.9174,9002.94,26662.6729,9006.0036,26656.86,8998.0531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26160.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="26167.59" y="11700.52">«friend»</text><!--MD5=[30e625aae1c06fb81ca2c0a65c06b825]
reverse link C_0001531814603945772616 to C_0001197720528033242618--><path d="M25875.21,2098.3031 C25885.51,2245.7131 25896.99,2403.0731 25908.59,2548.9531 C26025.44,4018.1931 26037.6,4387.5631 26204.59,5851.9531 C26327.39,6928.7631 26522.46,8217.7831 26591.96,8667.5531 " fill="none" id="C_0001531814603945772616&lt;-C_0001197720528033242618" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25868.21,2098.4831,25873.8,2078.0431,25882.17,2097.5131,25868.21,2098.4831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2f8780ed64ed38ffe1cf4ca2575b2709]
reverse link C_0001130773750498288283 to C_0001858199404643284193--><path d="M25813.66,8972.6631 C25890.51,9761.3331 26228.63,13674.8631 25462.59,14512.9531 C24902.12,15126.1431 18635.45,15633.6931 17507.86,15720.3831 " fill="none" id="C_0001130773750498288283&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="25812.39,8959.6031,25808.9888,8965.9617,25813.5501,8971.5469,25816.9513,8965.1883,25812.39,8959.6031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="25956.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="25966.59" y="13168.02">_class_name</text><!--MD5=[f88684864f83bcfca48b3287b5bf4bf4]
link C_0001130773750498288283 to C_0001130773750498288283--><path d="M25821.61,8706.2631 C25936.44,8120.2931 26129.59,8162.5231 26129.59,8832.9531 C26129.59,9501.4231 25937.57,9545.3631 25822.62,8964.7731 " fill="none" id="C_0001130773750498288283-&gt;C_0001130773750498288283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25821.61,8959.6431,25819.4096,8969.243,25822.5686,8964.5504,25827.2612,8967.7093,25821.61,8959.6431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26140.59,8828.5195,26144.59,8832.5195,26140.59,8836.5195,26136.59,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="26147.59" y="8837.52">singleton</text><!--MD5=[3e73bcbd9daf28c3d368d37c56cc0e9c]
reverse link C_0001130773750498288283 to C_0000104564426296396960--><path d="M25835.29,8964.6731 C25947.98,9409.5031 26245.57,10875.7731 25486.59,11577.9531 C25418.37,11641.0731 24730.49,11560.4431 24650.59,11607.9531 C24572.5,11654.3931 24625.33,11738.6131 24546.59,11783.9531 C24454.97,11836.7131 20838.33,11773.6331 20740.59,11813.9531 C20325.76,11985.0731 19967.5,12346.7831 19720.33,12652.5431 " fill="none" id="C_0001130773750498288283&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="25834.06,8959.8031,25832.3891,8969.5092,25835.2861,8964.6505,25840.1448,8967.5475,25834.06,8959.8031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24656.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24663.59" y="11700.52">«friend»</text><!--MD5=[c2fcb52a4859165f7fca92f209480c5e]
reverse link C_0001531814603945772616 to C_0001130773750498288283--><path d="M25803.89,2098.0631 C25801.27,2182.9431 25799.59,2269.1331 25799.59,2350.9531 C25799.59,2350.9531 25799.59,2350.9531 25799.59,4772.4531 C25799.59,6323.3931 25799.59,8207.6431 25799.59,8706.1031 " fill="none" id="C_0001531814603945772616&lt;-C_0001130773750498288283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25796.9,2097.7331,25804.53,2077.9631,25810.89,2098.1831,25796.9,2097.7331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c3000aebde2149cc2be64412041baff]
reverse link C_0000790752023609648644 to C_0001858199404643284193--><path d="M16041.13,9977.9431 C16142.73,10470.7431 16264.71,11053.2031 16379.59,11577.9531 C16723.03,13146.6731 17170.2,15040.7831 17298.66,15582.2931 " fill="none" id="C_0000790752023609648644&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="16038.43,9964.8531,16035.7189,9971.5352,16040.8443,9976.6078,16043.5553,9969.9257,16038.43,9964.8531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17049.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="17059.59" y="13168.02">_class_name</text><!--MD5=[ef5671d32f6987d56ec842457947c9ac]
link C_0000790752023609648644 to C_0000790752023609648644--><path d="M16262.65,8490.5231 C16284.66,8576.2631 16297.59,8690.4131 16297.59,8832.9531 C16297.59,8972.7131 16285.16,9085.1731 16263.93,9170.3331 " fill="none" id="C_0000790752023609648644-&gt;C_0000790752023609648644" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="16262.65,9175.3831,16268.7188,9167.6262,16263.866,9170.5333,16260.959,9165.6805,16262.65,9175.3831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="16308.59,8828.5195,16312.59,8832.5195,16308.59,8836.5195,16304.59,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="16315.59" y="8837.52">singleton</text><!--MD5=[5d43d9f033ddff753a837836cd050d9b]
reverse link C_0000790752023609648644 to C_0000104564426296396960--><path d="M15736.7,9969.7131 C15766.87,10542.4431 15915.95,11195.0631 16379.59,11577.9531 C16465.53,11648.9231 18300.56,11535.9031 18385.59,11607.9531 C18446.25,11659.3531 18387.34,11710.4331 18417.59,11783.9531 C18545.13,12093.8731 18749.95,12404.7331 18936.35,12652.6131 " fill="none" id="C_0000790752023609648644&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="15736.44,9964.6631,15732.9337,9973.8667,15736.711,9969.6558,15740.922,9973.4331,15736.44,9964.6631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18423.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18430.59" y="11700.52">«friend»</text><!--MD5=[26a39b7fc31ced5e0167cdc73077bc9d]
reverse link C_0001531814603945772616 to C_0000790752023609648644--><path d="M25143.24,1524.6231 C22972.52,1612.7431 16443.59,1914.1231 16443.59,2350.9531 C16443.59,2350.9531 16443.59,2350.9531 16443.59,4772.4531 C16443.59,5770.9131 16253.77,6891.0931 16081.69,7701.4131 " fill="none" id="C_0001531814603945772616&lt;-C_0000790752023609648644" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.18,1517.6131,25163.44,1523.8031,25143.74,1531.6031,25143.18,1517.6131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a6755319c82a581eac8987a926ca1aa6]
reverse link C_0000897221634691489964 to C_0001858199404643284193--><path d="M13496.15,9183.5331 C13355.66,10146.9231 13098.9,12876.8931 14372.59,14512.9531 C15094.57,15440.3331 16642.81,15668.3131 17161.33,15719.6431 " fill="none" id="C_0000897221634691489964&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="13498.05,9170.5331,13493.2217,9175.8892,13496.3086,9182.4061,13501.137,9177.0501,13498.05,9170.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14375.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="14385.59" y="13168.02">_class_name</text><!--MD5=[588807cb7a44356f49494dcdc443a06c]
link C_0000897221634691489964 to C_0000897221634691489964--><path d="M13685.41,8495.2731 C13883.23,8144.8131 14132.59,8257.3731 14132.59,8832.9531 C14132.59,9406.0031 13885.42,9520.0931 13688.02,9175.2231 " fill="none" id="C_0000897221634691489964-&gt;C_0000897221634691489964" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="13685.41,9170.6331,13686.3849,9180.4336,13687.883,9174.9787,13693.3379,9176.4768,13685.41,9170.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14140.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="14150.59" y="8837.52">singleton</text><!--MD5=[b2579420d2152b5e55fe92957e16071b]
reverse link C_0000897221634691489964 to C_0000104564426296396960--><path d="M13517.93,9175.9531 C13475.27,9773.8131 13487.5,11000.2031 14214.59,11577.9531 C14294.91,11641.7731 17820.43,11553.8631 17907.59,11607.9531 C17982.08,11654.1731 17923.85,11735.0531 17996.59,11783.9531 C18064.87,11829.8531 18293.7,11773.9631 18365.59,11813.9531 C18701.93,12001.0431 18956.75,12354.4631 19124.56,12652.5631 " fill="none" id="C_0000897221634691489964&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="13518.31,9170.7031,13513.6772,9179.3943,13517.9527,9175.6903,13521.6567,9179.9659,13518.31,9170.7031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18002.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18009.59" y="11700.52">«friend»</text><!--MD5=[eb044c62a1c7a56ece172b94356c22f4]
reverse link C_0001531814603945772616 to C_0000897221634691489964--><path d="M25143.31,1513.8931 C23173.02,1563.3931 17561.27,1734.0831 15762.59,2107.9531 C15702.85,2120.3731 15678.46,2113.5931 15633.59,2154.9531 C15563.12,2219.9331 15543.59,2255.0931 15543.59,2350.9531 C15543.59,2350.9531 15543.59,2350.9531 15543.59,4772.4531 C15543.59,5058.9631 15652.43,5860.7431 15444.59,6057.9531 C15395.01,6105.0031 14267.76,6044.9931 14214.59,6087.9531 C13490.58,6672.9231 13477.66,7900.7331 13519.17,8495.2031 " fill="none" id="C_0001531814603945772616&lt;-C_0000897221634691489964" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.29,1506.8931,25163.46,1513.3931,25143.64,1520.8931,25143.29,1506.8931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ff6a4cd457cb05befae3532e64a2ade2]
reverse link C_0000135188690773659020 to C_0001858199404643284193--><path d="M14448.87,9004.6331 C14364.02,9746.6131 14122.55,12734.1931 15470.59,14512.9531 C15932.9,15122.9631 16794.17,15519.1531 17161.45,15667.6131 " fill="none" id="C_0000135188690773659020&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="14450.39,8991.4831,14445.7305,8996.9866,14449.0185,9003.4045,14453.678,8997.901,14450.39,8991.4831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15473.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="15483.59" y="13168.02">_class_name</text><!--MD5=[b9e190a0b6f3b1ed5b4efd3465fe9397]
link C_0000135188690773659020 to C_0000135188690773659020--><path d="M14494.14,8674.3931 C14589.66,8122.0731 14743.59,8174.9231 14743.59,8832.9531 C14743.59,9488.8931 14590.63,9543.4931 14495.05,8996.7531 " fill="none" id="C_0000135188690773659020-&gt;C_0000135188690773659020" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="14494.14,8991.5131,14491.7412,9001.0654,14494.9967,8996.4392,14499.6229,8999.6947,14494.14,8991.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14751.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="14761.59" y="8837.52">singleton</text><!--MD5=[690fea73cee7ce9a9e7a660e160b4514]
reverse link C_0000135188690773659020 to C_0000104564426296396960--><path d="M14429.37,8996.4131 C14318.06,9477.9031 14068.39,10905.5231 14826.59,11577.9531 C14894.01,11637.7431 17993.84,11560.7431 18070.59,11607.9531 C18145.6,11654.0831 18089.91,11732.8031 18161.59,11783.9531 C18236.19,11837.1831 18287,11766.8331 18365.59,11813.9531 C18692.87,12010.1731 18946.36,12358.9231 19115.84,12652.6031 " fill="none" id="C_0000135188690773659020&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="14430.52,8991.4931,14424.592,8999.3581,14429.3915,8996.3641,14432.3855,9001.1637,14430.52,8991.4931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18167.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18174.59" y="11700.52">«friend»</text><!--MD5=[17445eda0668e3f315ac88fffdbd1807]
reverse link C_0001531814603945772616 to C_0000135188690773659020--><path d="M25143.2,1539.5031 C23574.83,1634.2631 19631.06,1876.1131 16333.59,2107.9531 C16060.14,2127.1831 15939.07,1992.0431 15718.59,2154.9531 C15643.32,2210.5731 15641.59,2257.3631 15641.59,2350.9531 C15641.59,2350.9531 15641.59,2350.9531 15641.59,4772.4531 C15641.59,5058.5631 15773.48,5857.2231 15569.59,6057.9531 C15510.72,6115.9231 14887.55,6032.1731 14826.59,6087.9531 C14077.04,6773.8331 14323.01,8199.3531 14431.18,8674.2131 " fill="none" id="C_0001531814603945772616&lt;-C_0000135188690773659020" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.87,1532.5131,25163.25,1538.2931,25143.71,1546.4931,25142.87,1532.5131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b16246fece6ea345d4e7230a252ecdad]
reverse link C_0001150621116588802549 to C_0001858199404643284193--><path d="M19116.42,8985.1531 C19183.88,9454.4831 19316.95,10895.6631 18541.59,11577.9531 C18470.35,11640.6431 18181.3,11539.4731 18115.59,11607.9531 C18003.82,11724.4631 18075.27,14357.5131 18031.59,14512.9531 C17913.54,14933.1531 17620.17,15362.0231 17454.12,15582.2831 " fill="none" id="C_0001150621116588802549&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="19114.54,8972.2331,19111.4389,8978.7433,19116.2555,8984.1099,19119.3567,8977.5997,19114.54,8972.2331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="18079.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="18089.59" y="13168.02">_class_name</text><!--MD5=[b16246fece6ea345d4e7230a252ecdad]
reverse link C_0001150621116588802549 to C_0001858199404643284193--><path d="M19116.89,8985.0131 C19186.03,9455.4531 19324.22,10903.0931 18541.59,11577.9531 C18491.3,11621.3231 17993.83,11563.3731 17944.59,11607.9531 C17822.88,11718.1631 17835.78,14399.3631 17801.59,14559.9531 C17719.98,14943.3131 17524.66,15363.4431 17414.21,15582.0931 " fill="none" id="C_0001150621116588802549&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="19114.96,8972.0531,19111.8872,8978.5768,19116.7272,8983.9223,19119.8,8977.3986,19114.96,8972.0531" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="17903.59,13159.0195,17907.59,13163.0195,17903.59,13167.0195,17899.59,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="96" x="17910.59" y="13168.02">target_method</text><!--MD5=[44b215f3cf752c659380949525347290]
reverse link C_0001150621116588802549 to C_0000210234563198599367--><path d="M19060.18,8985.1131 C18971.89,9457.4131 18776.39,10913.4931 19561.59,11577.9531 C19654.04,11656.1831 28194.39,11522.9031 28280.59,11607.9531 C28338.04,11664.6331 28326.44,14432.3131 28329.59,14512.9531 C28331.57,14563.3331 28333.82,14614.8731 28336.28,14666.9131 " fill="none" id="C_0001150621116588802549&lt;-C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="19062.63,8972.1031,19057.5862,8977.2567,19060.4034,8983.8947,19065.4473,8978.7411,19062.63,8972.1031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28335.59,13159.0195,28339.59,13163.0195,28335.59,13167.0195,28331.59,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="18" x="28342.59" y="13168.02">ret</text><!--MD5=[44b215f3cf752c659380949525347290]
reverse link C_0001150621116588802549 to C_0000210234563198599367--><path d="M19060.18,8985.1131 C18971.89,9457.4131 18776.39,10913.5031 19561.59,11577.9531 C19654.41,11656.4931 28220.15,11532.6331 28315.59,11607.9531 C28389.55,11666.3131 28353.94,11720.4631 28365.59,11813.9531 C28399.9,12089.1531 28406.33,13603.1831 28406.48,14666.7231 " fill="none" id="C_0001150621116588802549&lt;-C_0000210234563198599367-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="19062.63,8972.1031,19057.5862,8977.2567,19060.4034,8983.8947,19065.4473,8978.7411,19062.63,8972.1031" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28411.59,13159.0195,28415.59,13163.0195,28411.59,13167.0195,28407.59,13163.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="28418.59" y="13168.02">userdata</text><!--MD5=[6ec94f72a6ef3ec7ace433902892bd7e]
link C_0001150621116588802549 to C_0001531814603945772616--><path d="M19079.39,8693.7431 C19029.01,8094.8631 18850.33,5665.2531 19079.59,3690.9531 C19142.36,3150.4931 19117.43,2845.7931 19591.59,2578.9531 C20539.16,2045.7031 23746,1691.4531 25158.29,1557.6931 " fill="none" id="C_0001150621116588802549-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="25163.46,1557.2131,25154.1234,1554.0781,25158.4822,1557.6838,25154.8765,1562.0426,25163.46,1557.2131" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="19208.59,3291.0195,19212.59,3295.0195,19208.59,3299.0195,19204.59,3295.0195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="100" x="19215.59" y="3300.02">target_instance</text><!--MD5=[927cfeb52f41859ab2973f5dadce2f60]
reverse link C_0001150621116588802549 to C_0000104564426296396960--><path d="M19100.59,8977.5531 C19136.27,9547.5631 19268.98,11667.2931 19330.68,12652.7331 " fill="none" id="C_0001150621116588802549&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="19100.25,8972.1531,19096.8225,8981.3863,19100.5637,8977.1433,19104.8067,8980.8845,19100.25,8972.1531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="19281.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="19288.59" y="11700.52">«friend»</text><!--MD5=[d6a6ec8d3380d1482b36a055e886b7ee]
reverse link C_0001778859257025660860 to C_0001150621116588802549--><path d="M22857.83,2353.4131 C22168.03,2356.9031 20085.5,2383.6631 19859.59,2578.9531 C18901.85,3406.9031 19048.24,7850.8331 19085.03,8693.8531 " fill="none" id="C_0001778859257025660860&lt;-C_0001150621116588802549" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="22858.05,2346.4131,22878.08,2353.3231,22858.11,2360.4131,22858.05,2346.4131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d31de51765da68085e856073ce4122]
reverse link C_0001186331261774827872 to C_0001858199404643284193--><path d="M6200.84,9087.4931 C6081.58,9637.6631 5893.58,10942.5231 6606.59,11577.9531 C6639.69,11607.4531 9754.67,11601.9531 9798.59,11607.9531 C10148.74,11655.7731 10349.48,11535.1131 10566.59,11813.9531 C10658.73,11932.2731 10511.69,14396.0331 10605.59,14512.9531 C11458.96,15575.4731 16192.79,15713.8431 17161.43,15731.0831 " fill="none" id="C_0001186331261774827872&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6203.64,9074.6431,6198.4527,9079.6523,6201.0815,9086.3672,6206.2688,9081.358,6203.64,9074.6431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10608.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="10618.59" y="13168.02">_class_name</text><!--MD5=[1dc07f46a8f623d4dfac70da7186de42]
reverse link C_0001186331261774827872 to C_0000104564426296396960--><path d="M6202.47,9079.6731 C6083.15,9625.3431 5889.51,10940.1531 6606.59,11577.9531 C6648.37,11615.1031 10575.88,11603.3431 10631.59,11607.9531 C11128.08,11649.0331 11242.05,11743.5931 11738.59,11783.9531 C11830.33,11791.4131 18283.5,11772.3231 18365.59,11813.9531 C18712.42,11989.8431 18968.73,12349.2531 19134.57,12652.8231 " fill="none" id="C_0001186331261774827872&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6203.61,9074.4831,6197.775,9082.4174,6202.539,9079.3671,6205.5893,9084.131,6203.61,9074.4831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="11744.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="11751.59" y="11700.52">«friend»</text><!--MD5=[b77ea624b2b728023d518baa273d3067]
reverse link C_0001531814603945772616 to C_0001186331261774827872--><path d="M25143.2,1512.9031 C21873.71,1585.7131 8138.59,1917.3731 8138.59,2350.9531 C8138.59,2350.9531 8138.59,2350.9531 8138.59,4772.4531 C8138.59,5413.2731 8025.98,5713.5231 7485.59,6057.9531 C7403.19,6110.4831 6678.74,6022.0431 6606.59,6087.9531 C5896.48,6736.7131 6087.76,8050.6131 6204.49,8591.2431 " fill="none" id="C_0001531814603945772616&lt;-C_0001186331261774827872" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.31,1505.8931,25163.46,1512.4531,25143.62,1519.8931,25143.31,1505.8931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[64510270a9d4c68a897134b90e8a959c]
reverse link C_0001895218672297528471 to C_0001858199404643284193--><path d="M6751.93,9119.4431 C6626.83,9686.1931 6446.49,10952.4731 7142.59,11577.9531 C7214.69,11642.7331 10551.97,11552.7031 10631.59,11607.9531 C10712.16,11663.8531 10691.53,11717.7631 10710.59,11813.9531 C10739.76,11961.0831 10682.1,14398.1231 10778.59,14512.9531 C11631.92,15528.3531 16209.51,15703.8431 17161.22,15729.4931 " fill="none" id="C_0001895218672297528471&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6754.78,9106.6031,6749.5766,9111.5956,6752.1838,9118.3189,6757.3872,9113.3264,6754.78,9106.6031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10781.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="10791.59" y="13168.02">_class_name</text><!--MD5=[d0af4a0fe845fc378a64240482e48309]
link C_0001895218672297528471 to C_0001895218672297528471--><path d="M6864.4,8559.4231 C6946.64,8133.5331 7060.09,8224.7131 7060.09,8832.9531 C7060.09,9438.8231 6947.52,9531.6531 6865.36,9111.4531 " fill="none" id="C_0001895218672297528471-&gt;C_0001895218672297528471" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6864.4,9106.4831,6862.1675,9116.0756,6865.3421,9111.3936,6870.0242,9114.5682,6864.4,9106.4831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7071.09,8828.5195,7075.09,8832.5195,7071.09,8836.5195,7067.09,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="7078.09" y="8837.52">singleton</text><!--MD5=[20437a7e41890d7ee60ce7b7515fc40c]
reverse link C_0001895218672297528471 to C_0000104564426296396960--><path d="M6753.63,9111.3931 C6628.28,9674.2931 6442.44,10950.2131 7142.59,11577.9531 C7190.89,11621.2531 11751.18,11587.0731 11812.59,11607.9531 C11935.13,11649.6131 11922.02,11742.3931 12044.59,11783.9531 C12127.74,11812.1431 18287.3,11774.2331 18365.59,11813.9531 C18712.4,11989.8731 18968.71,12349.2931 19134.56,12652.8531 " fill="none" id="C_0001895218672297528471&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6754.73,9106.4531,6748.868,9114.3674,6753.6423,9111.3334,6756.6764,9116.1077,6754.73,9106.4531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="12050.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="12057.59" y="11700.52">«friend»</text><!--MD5=[e168ed7c7ccb452307da64f4f0e17e44]
reverse link C_0001531814603945772616 to C_0001895218672297528471--><path d="M25143.26,1503.0631 C22302.6,1528.4731 11690.59,1669.0631 11690.59,2350.9531 C11690.59,2350.9531 11690.59,2350.9531 11690.59,4772.4531 C11690.59,6440.4631 9802.75,5743.7931 8164.59,6057.9531 C8108.81,6068.6531 7184.45,6049.5531 7142.59,6087.9531 C6448.2,6725.0431 6632.45,8000.7931 6755.61,8559.4131 " fill="none" id="C_0001531814603945772616&lt;-C_0001895218672297528471" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.4,1496.0531,25163.46,1502.8831,25143.52,1510.0531,25143.4,1496.0531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0ede8bff03eb35b50071265c451248f5]
reverse link C_0000979065355535690103 to C_0001858199404643284193--><path d="M7407.47,8972.5331 C7307.43,9429.4431 7060.81,10897.9231 7838.59,11577.9531 C7900.52,11632.0931 10732.05,11561.0131 10799.59,11607.9531 C11065.2,11792.5531 10776.61,14267.7831 10987.59,14512.9531 C11824.39,15485.3431 16229.9,15694.3731 17161.47,15727.9331 " fill="none" id="C_0000979065355535690103&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7410.31,8959.6331,7405.112,8964.6312,7407.7264,8971.3517,7412.9244,8966.3536,7410.31,8959.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="10990.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="11000.59" y="13168.02">_class_name</text><!--MD5=[80721d2d59c4e03b4d092514cb916805]
link C_0000979065355535690103 to C_0000979065355535690103--><path d="M7461.64,8706.2631 C7571.42,8120.2931 7756.09,8162.5231 7756.09,8832.9531 C7756.09,9501.4231 7572.5,9545.3631 7462.61,8964.7731 " fill="none" id="C_0000979065355535690103-&gt;C_0000979065355535690103" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7461.64,8959.6431,7459.3806,8969.2293,7462.5683,8964.5562,7467.2415,8967.744,7461.64,8959.6431" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7767.09,8828.5195,7771.09,8832.5195,7767.09,8836.5195,7763.09,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="7774.09" y="8837.52">singleton</text><!--MD5=[c41fcfd5ef56e0f0da68aff980d3f176]
reverse link C_0000979065355535690103 to C_0000104564426296396960--><path d="M7409.15,8964.6131 C7310.05,9412.4231 7055.14,10895.1231 7838.59,11577.9531 C7883.41,11617.0131 12065.52,11581.1831 12118.59,11607.9531 C12205.9,11651.9831 12163.25,11740.0131 12250.59,11783.9531 C12402.34,11860.2931 18214.11,11737.0931 18365.59,11813.9531 C18712.38,11989.9031 18968.7,12349.3231 19134.55,12652.8731 " fill="none" id="C_0000979065355535690103&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7410.24,8959.7231,7404.378,8967.6374,7409.1523,8964.6034,7412.1864,8969.3777,7410.24,8959.7231" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="12256.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="12263.59" y="11700.52">«friend»</text><!--MD5=[46b7366d08aa74c8bf64b6674b2b20fb]
reverse link C_0001531814603945772616 to C_0000979065355535690103--><path d="M25143.09,1509.3331 C22541.86,1556.5531 13502.59,1762.9731 13502.59,2350.9531 C13502.59,2350.9531 13502.59,2350.9531 13502.59,4772.4531 C13502.59,5750.4631 12646.24,5754.2031 11716.59,6057.9531 C11665.4,6074.6831 7879.19,6052.5531 7838.59,6087.9531 C7052.51,6773.5831 7312.02,8264.4731 7410.26,8706.2031 " fill="none" id="C_0001531814603945772616&lt;-C_0000979065355535690103" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.36,1502.3231,25163.49,1508.9631,25143.62,1516.3231,25143.36,1502.3231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afd78d936730b2a5d2a27c3ca7ae5858]
reverse link C_0001701907280759632930 to C_0001858199404643284193--><path d="M8003.09,9036.3131 C7880.48,9551.5431 7643.06,10918.6731 8374.59,11577.9531 C8428.14,11626.2131 10910.43,11566.7731 10969.59,11607.9531 C11501.73,11978.3531 10812.07,14026.4031 11240.59,14512.9531 C12053.7,15436.1531 16253.43,15683.0631 17161.39,15725.9931 " fill="none" id="C_0001701907280759632930&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8006.14,9023.5531,8000.8523,9028.4562,8003.3445,9035.223,8008.6322,9030.3199,8006.14,9023.5531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11243.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="11253.59" y="13168.02">_class_name</text><!--MD5=[5f60c9416fe2cf317930fcaaeb87688d]
link C_0001701907280759632930 to C_0001701907280759632930--><path d="M8081.89,8642.1231 C8164.54,8124.4131 8292.09,8188.0231 8292.09,8832.9531 C8292.09,9475.6731 8165.41,9541.0531 8082.74,9029.0731 " fill="none" id="C_0001701907280759632930-&gt;C_0001701907280759632930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8081.89,9023.7831,8079.3793,9033.3066,8082.6889,9028.7189,8087.2766,9032.0284,8081.89,9023.7831" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8303.09,8828.5195,8307.09,8832.5195,8303.09,8836.5195,8299.09,8832.5195" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="8310.09" y="8837.52">singleton</text><!--MD5=[88b42ccf7d3beb4b42ddd913181f42f8]
reverse link C_0001701907280759632930 to C_0000104564426296396960--><path d="M8004.75,9028.9331 C7882.34,9538.6331 7638.14,10916.8831 8374.59,11577.9531 C8456.25,11651.2531 12232.29,11548.6331 12324.59,11607.9531 C12397.19,11654.6031 12333.94,11737.3931 12406.59,11783.9531 C12476.28,11828.6131 18291.79,11776.5031 18365.59,11813.9531 C18712.37,11989.9231 18968.69,12349.3431 19134.54,12652.8831 " fill="none" id="C_0001701907280759632930&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8006,9023.7131,8000.0232,9031.5411,8004.8413,9028.577,8007.8054,9033.3951,8006,9023.7131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="12412.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="12419.59" y="11700.52">«friend»</text><!--MD5=[27a7e43ab26a99a3f421aa78b5d844cd]
reverse link C_0001531814603945772616 to C_0001701907280759632930--><path d="M25143.13,1513.3731 C22673.42,1572.8431 14443.59,1811.5231 14443.59,2350.9531 C14443.59,2350.9531 14443.59,2350.9531 14443.59,4772.4531 C14443.59,5473.7331 14150.95,5734.7331 13528.59,6057.9531 C13465.07,6090.9431 8427.91,6040.1831 8374.59,6087.9531 C7635.03,6750.6331 7883.8,8136.4831 8005.94,8642.1131 " fill="none" id="C_0001531814603945772616&lt;-C_0001701907280759632930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.24,1506.3631,25163.4,1512.8831,25143.58,1520.3631,25143.24,1506.3631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[91b59d0d2b46b114de331f37d45c6fea]
reverse link C_0001589464385186808769 to C_0001858199404643284193--><path d="M10967.64,11467.2431 C11002.84,11505.2231 11038.82,11542.1731 11075.59,11577.9531 C11097.82,11599.5831 11116.64,11586.0531 11138.59,11607.9531 C12152.45,12619.0731 11435.52,13591.6031 12531.59,14512.9531 C13268.8,15132.6431 16389.81,15601.8831 17161.5,15709.8931 " fill="none" id="C_0001589464385186808769&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="10958.71,11457.5631,10959.8431,11464.6846,10966.8526,11466.3777,10965.7195,11459.2562,10958.71,11457.5631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12534.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="12544.59" y="13168.02">_class_name</text><!--MD5=[04ea438e6be471aabf4ca3b13070cdc4]
link C_0001589464385186808769 to C_0001589464385186808769--><path d="M10958.69,8608.4831 C10981.22,8673.2331 10993.59,8748.0531 10993.59,8832.9531 C10993.59,8915.6931 10981.84,8988.8631 10960.38,9052.4731 " fill="none" id="C_0001589464385186808769-&gt;C_0001589464385186808769" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="10958.69,9057.4231,10965.4027,9050.2162,10960.3182,9052.6957,10957.8388,9047.6111,10958.69,9057.4231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="11001.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="11011.59" y="8837.52">singleton</text><!--MD5=[427f4b2a588f733610b23579090a59fb]
reverse link C_0001589464385186808769 to C_0000104564426296396960--><path d="M10963.1,11501.3631 C10999.6,11528.2331 11037.09,11553.8031 11075.59,11577.9531 C11207.88,11660.9231 12344.68,11531.0831 12480.59,11607.9531 C12561.09,11653.4831 12510.73,11739.0731 12591.59,11783.9531 C12731.84,11861.7831 18222.57,11741.3631 18365.59,11813.9531 C18712.36,11989.9531 18968.67,12349.3731 19134.53,12652.9031 " fill="none" id="C_0001589464385186808769&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="10958.65,11498.0831,10963.5186,11506.6445,10962.6738,11501.0511,10968.2673,11500.2063,10958.65,11498.0831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="12597.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="12604.59" y="11700.52">«friend»</text><!--MD5=[4ddd664f6ccf290832a36f79f3862090]
reverse link C_0001531814603945772616 to C_0001589464385186808769--><path d="M25143.12,1509.9631 C23475.63,1545.1531 19107.48,1674.6331 15489.59,2107.9531 C15228.28,2139.2531 14949.59,2087.7731 14949.59,2350.9531 C14949.59,2350.9531 14949.59,2350.9531 14949.59,4772.4531 C14949.59,5382.3131 14969.07,5708.0131 14469.59,6057.9531 C14392.38,6112.0531 11155.78,6038.3531 11075.59,6087.9531 C11035.51,6112.7431 10996.53,6139.0831 10958.62,6166.8231 " fill="none" id="C_0001531814603945772616&lt;-C_0001589464385186808769" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.08,1502.9631,25163.22,1509.5431,25143.37,1516.9631,25143.08,1502.9631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2cf4dc3403b3f63884c534491eb99b5f]
reverse link C_0001559146041463814963 to C_0001858199404643284193--><path d="M11234.59,9183.4931 C11097.85,9773.5931 10928.48,10963.0431 11583.59,11577.9531 C11667.4,11656.6131 12536.76,11526.2431 12617.59,11607.9531 C12731.12,11722.7031 12570.8,14386.0831 12670.59,14512.9531 C13250.18,15249.7331 16386.37,15631.5931 17161.36,15715.5431 " fill="none" id="C_0001559146041463814963&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="11237.61,9170.5331,11232.3498,9175.4658,11234.8799,9182.2184,11240.1401,9177.2858,11237.61,9170.5331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12673.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="12683.59" y="13168.02">_class_name</text><!--MD5=[8b9b48228f1f4eaa16d2eda56805776c]
reverse link C_0001559146041463814963 to C_0000104564426296396960--><path d="M11236.32,9175.7831 C11099.16,9763.2731 10925.18,10960.7431 11583.59,11577.9531 C11605.53,11598.5131 12635.56,11606.5431 12665.59,11607.9531 C13847.32,11663.4731 14139.42,11738.9931 15321.59,11783.9531 C15406.09,11787.1631 18290.28,11775.5031 18365.59,11813.9531 C18711.62,11990.5931 18967.8,12349.4731 19133.78,12652.6031 " fill="none" id="C_0001559146041463814963&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="11237.53,9170.6131,11231.575,9178.4577,11236.3848,9175.4802,11239.3623,9180.29,11237.53,9170.6131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="15327.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="15334.59" y="11700.52">«friend»</text><!--MD5=[4af771cf0c6fabd07b7b07fb51de9469]
reverse link C_0001531814603945772616 to C_0001559146041463814963--><path d="M25142.89,1522.2231 C23153.06,1594.6331 17444.8,1821.9931 15596.59,2107.9531 C15406.55,2137.3531 15238.59,2158.6531 15238.59,2350.9531 C15238.59,2350.9531 15238.59,2350.9531 15238.59,4772.4531 C15238.59,5355.6231 15425.76,5687.2331 14975.59,6057.9531 C14902.86,6117.8531 11652.94,6024.1631 11583.59,6087.9531 C10916.99,6701.1231 11097.4,7908.0031 11236.62,8495.1731 " fill="none" id="C_0001531814603945772616&lt;-C_0001559146041463814963" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.99,1515.2131,25163.23,1521.4831,25143.5,1529.2031,25142.99,1515.2131" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[487a8427ca85592aeea29c0764de0754]
reverse link C_0000503002593685351124 to C_0001858199404643284193--><path d="M28022.88,2506.0431 C28127.78,2522.5331 28234.06,2537.4631 28335.59,2548.9531 C28400.49,2556.2931 28866.85,2544.9331 28922.59,2578.9531 C29135.11,2708.6631 29426.19,3678.1431 29428.59,3690.9531 C29456.38,3839.3331 29532.83,14452.7031 29426.59,14559.9531 C29393.51,14593.3531 27781.51,14586.9631 27734.59,14589.9531 C23568.07,14855.3831 18499.81,15565.9631 17507.63,15708.3931 " fill="none" id="C_0000503002593685351124&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28009.77,2503.9731,28015.0724,2508.8603,28021.623,2505.8454,28016.3206,2500.9582,28009.77,2503.9731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29462.59" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29472.59" y="5974.52">_class_name</text><!--MD5=[489f5a7a7e59ee03221596499549568c]
reverse link C_0000503002593685351124 to C_0000104564426296396960--><path d="M26399.86,2505.4931 C26322.91,2528.3431 26259.56,2553.0131 26221.59,2578.9531 C24674.46,3636.0331 24335.76,4269.3031 23884.59,6087.9531 C23847.87,6235.9731 23923.47,11462.6931 23823.59,11577.9531 C23628.02,11803.6531 22793.2,11759.1031 22495.59,11783.9531 C22430.21,11789.4131 20190.14,11780.6631 20133.59,11813.9531 C19824.79,11995.7431 19628.84,12352.1131 19511.79,12652.8531 " fill="none" id="C_0000503002593685351124&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="26404.95,2503.9931,26395.1854,2502.7078,26400.155,2505.4102,26397.4526,2510.3798,26404.95,2503.9931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24909.59" cy="4772.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24916.59" y="4776.02">«friend»</text><!--MD5=[c24c628f808045c87231a65882d87e6c]
reverse link C_0001531814603945772616 to C_0000503002593685351124--><path d="M26524.98,1921.9231 C26687.19,2021.6831 26849.69,2121.6131 26977,2199.9131 " fill="none" id="C_0001531814603945772616&lt;-C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26521.13,1927.7731,26507.76,1911.3331,26528.47,1915.8531,26521.13,1927.7731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c0fc8be268a4058cfc901a3bfe23dfe6]
link C_0000493041171271776846 to C_0000503002593685351124--><path d="M27320.09,800.6731 C27314.36,978.2631 27292.07,1607.5931 27248.59,2124.9531 C27246.97,2144.3331 27245,2164.6231 27242.89,2184.7531 " fill="none" id="C_0000493041171271776846-&gt;C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27242.1425" cy="2191.7787" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="27242.9951" x2="27241.29" y1="2183.8242" y2="2199.7331"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="27250.097" x2="27234.1881" y1="2192.6312" y2="2190.9261"/><!--MD5=[f9e2d358c0077ba50b9cdc90935a7cd8]
link C_0000493041171271776846 to C_0001531814603945772616--><path d="M27224.67,800.4831 C27078.53,873.6531 26789.34,1018.4431 26512.49,1157.0531 " fill="none" id="C_0000493041171271776846-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26508,1159.2931,26517.8381,1158.8333,26512.4693,1157.0513,26514.2513,1151.6825,26508,1159.2931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27077.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="27084.59" y="882.02">collider</text><!--MD5=[408dbe512b8935ec69e129fbaa9ad1d8]
link C_0000461609734144368587 to C_0000503002593685351124--><path d="M26840.91,813.6531 C26897.35,1040.9731 27094.87,1836.5131 27181.43,2185.1431 " fill="none" id="C_0000461609734144368587-&gt;C_0000503002593685351124" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27183.1623" cy="2192.1189" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="27181.2345" x2="27185.09" y1="2184.3546" y2="2199.8831"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="27190.9265" x2="27175.398" y1="2190.1911" y2="2194.0466"/><!--MD5=[a4acf2a0a8f086b9008d5a97b35ead67]
link C_0000461609734144368587 to C_0001531814603945772616--><path d="M26743.74,813.4731 C26686.51,856.4831 26604.02,918.4731 26511.8,987.7731 " fill="none" id="C_0000461609734144368587-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.68,990.8631,26517.28,988.6631,26511.68,987.8631,26512.48,982.2631,26507.68,990.8631" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26665.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="26672.59" y="882.02">collider</text><!--MD5=[acb73802bd90075711fdfa2eb81ba4e2]
reverse link C_0001034902024938599899 to C_0001858199404643284193--><path d="M12468.05,10125.1331 C12763.74,11775.3631 13248.77,14430.7931 13322.59,14512.9531 C13860.61,15111.6831 16462.53,15586.6931 17161.46,15705.0031 " fill="none" id="C_0001034902024938599899&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="12465.72,10112.1231,12462.837,10118.7329,12467.8295,10123.9363,12470.7125,10117.3265,12465.72,10112.1231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="13325.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="13335.59" y="13168.02">_class_name</text><!--MD5=[b5cd0ac589986cb9ed90f22c5fd42456]
link C_0001034902024938599899 to C_0001034902024938599899--><path d="M12876.14,8532.2731 C12898.37,8612.1931 12911.09,8712.4231 12911.09,8832.9531 C12911.09,8950.8931 12898.91,9049.3931 12877.56,9128.4531 " fill="none" id="C_0001034902024938599899-&gt;C_0001034902024938599899" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="12876.14,9133.6331,12882.369,9126.0043,12877.4568,9128.8096,12874.6514,9123.8974,12876.14,9133.6331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="12919.09" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="12929.09" y="8837.52">singleton</text><!--MD5=[5e0ea8049b7e63b70aa4577072912f6a]
reverse link C_0001034902024938599899 to C_0000104564426296396960--><path d="M12266.95,10117.1531 C12350.39,10655.3531 12549.01,11234.7631 12993.59,11577.9531 C13020,11598.3431 15362.26,11606.5431 15395.59,11607.9531 C16481,11653.8731 16749.46,11714.2531 17833.59,11783.9531 C17892.68,11787.7531 18313.5,11785.8131 18365.59,11813.9531 C18705.34,11997.4631 18960.65,12352.7631 19127.83,12652.6031 " fill="none" id="C_0001034902024938599899&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="12266.16,10112.0131,12263.5957,10121.5223,12266.931,10116.9533,12271.5,10120.2887,12266.16,10112.0131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="17839.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="17846.59" y="11700.52">«friend»</text><!--MD5=[2a21d702013630b9a2bb4ab014f806e3]
reverse link C_0001531814603945772616 to C_0001034902024938599899--><path d="M25143.32,1515.3531 C23161.84,1568.9731 17493.84,1750.1231 15673.59,2107.9531 C15519.98,2138.1531 15418.59,2194.4031 15418.59,2350.9531 C15418.59,2350.9531 15418.59,2350.9531 15418.59,4772.4531 C15418.59,5347.8731 15692.46,5673.2031 15264.59,6057.9531 C15170.77,6142.3231 13093.45,6010.8131 12993.59,6087.9531 C12547.84,6432.3031 12349.37,7014.1031 12266.34,7553.6031 " fill="none" id="C_0001531814603945772616&lt;-C_0001034902024938599899" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.4,1508.3431,25163.58,1514.8031,25143.78,1522.3431,25143.4,1508.3431" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[890a5f3a9ab4b2f75c35c9d8b993635e]
reverse link C_0002302096389852429221 to C_0001858199404643284193--><path d="M15017.42,9164.6231 C14929.43,9716.7031 14834.41,10838.4131 15336.59,11577.9531 C15353.12,11602.2931 15376.51,11585.5631 15395.59,11607.9531 C16275.22,12640.2031 15679.43,13322.7531 16329.59,14512.9531 C16563.82,14941.7331 16958.2,15364.3031 17176.79,15582.0031 " fill="none" id="C_0002302096389852429221&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="15019.5,9151.6831,15014.5956,9156.9696,15017.5892,9163.53,15022.4936,9158.2435,15019.5,9151.6831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="16332.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="16342.59" y="13168.02">_class_name</text><!--MD5=[1c64f5bce8010bf6b825f4da2fbeefb2]
reverse link C_0002302096389852429221 to C_0000104564426296396960--><path d="M14992.15,9156.7931 C14852.92,9738.5131 14665.04,10959.5231 15336.59,11577.9531 C15395.83,11632.5031 18168.53,11563.3631 18235.59,11607.9531 C18306.55,11655.1231 18254.42,11720.7831 18311.59,11783.9531 C18330.02,11804.3031 18344.96,11795.8331 18365.59,11813.9531 C18638.92,12053.9831 18882.93,12380.9131 19061.13,12652.7531 " fill="none" id="C_0002302096389852429221&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="14993.38,9151.6831,14987.4032,9159.5111,14992.2213,9156.547,14995.1854,9161.3651,14993.38,9151.6831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18317.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18324.59" y="11700.52">«friend»</text><!--MD5=[664b2e106c93f0f6277b4a445906c078]
reverse link C_0001531814603945772616 to C_0002302096389852429221--><path d="M25143.11,1520.0831 C22861.73,1597.4931 15726.59,1877.4531 15726.59,2350.9531 C15726.59,2350.9531 15726.59,2350.9531 15726.59,4772.4531 C15726.59,5344.3831 16062.91,5644.6331 15667.59,6057.9531 C15616.55,6111.3231 15388.88,6035.7831 15336.59,6087.9531 C14690.32,6732.7531 14865.79,7940.8031 14997.06,8514.2231 " fill="none" id="C_0001531814603945772616&lt;-C_0002302096389852429221" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.28,1513.0731,25163.5,1519.3931,25143.75,1527.0631,25143.28,1513.0731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7ce68193d44632dd4e25c66ffbbce4c]
reverse link C_0000236996062289735257 to C_0001858199404643284193--><path d="M30871.38,2516.7531 C30629.04,3188.4131 29722.59,5713.8631 29658.59,6087.9531 C29638.75,6203.9431 29651.56,14476.5031 29568.59,14559.9531 C29532.67,14596.0831 27785.44,14586.7531 27734.59,14589.9531 C23567.89,14852.5231 18499.77,15565.3731 17507.62,15708.3031 " fill="none" id="C_0000236996062289735257&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="30875.94,2504.1031,30870.1448,2508.3945,30871.8772,2515.3944,30877.6724,2511.103,30875.94,2504.1031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29712.59" y="5967.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="29722.59" y="5974.52">_class_name</text><!--MD5=[6f8680ec89f27b3fc0455684d508cc80]
reverse link C_0000236996062289735257 to C_0000104564426296396960--><path d="M30167.47,2504.9231 C30083.26,2520.4031 29998.69,2535.3931 29917.59,2548.9531 C29096.77,2686.1631 26247.59,2462.2431 26247.59,3294.4531 C26247.59,3294.4531 26247.59,3294.4531 26247.59,5970.9531 C26247.59,6126.7031 26321.93,11467.0231 26212.59,11577.9531 C26156.11,11635.2631 24827.5,11557.7831 24764.59,11607.9531 C24701.56,11658.2331 24783.98,11734.1231 24720.59,11783.9531 C24620.42,11862.6931 20243.6,11749.6531 20133.59,11813.9531 C19824.09,11994.8731 19628.12,12351.5331 19511.23,12652.6231 " fill="none" id="C_0000236996062289735257&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="30172.5,2503.9931,30162.9279,2501.6749,30167.5813,2504.8913,30164.365,2509.5448,30172.5,2503.9931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="26253.59" cy="4772.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="26260.59" y="4776.02">«friend»</text><!--MD5=[3f2e423855117caec285a310b19c1bbc]
reverse link C_0001531814603945772616 to C_0000236996062289735257--><path d="M26527.75,1596.2931 C27309.23,1709.6131 28617.94,1906.2631 29738.59,2107.9531 C29893.71,2135.8731 30059.68,2168.1631 30217,2199.9031 " fill="none" id="C_0001531814603945772616&lt;-C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="26526.74,1603.2231,26507.95,1593.4231,26528.75,1589.3631,26526.74,1603.2231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9a7eb49f1533d167fe82948ecfcf8f82]
link C_0001801355352189289676 to C_0000236996062289735257--><path d="M32301.9,820.1231 C32328.14,1042.8031 32378.57,1755.6131 32010.59,2124.9531 C31984.96,2150.6831 31943.22,2173.7531 31890.7,2194.3831 " fill="none" id="C_0001801355352189289676-&gt;C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="31883.8417" cy="2196.9941" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="31891.3133" x2="31876.37" y1="2194.135" y2="2199.8531"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="31886.7007" x2="31880.9826" y1="2204.4657" y2="2189.5224"/><!--MD5=[94135747fba5deb4c607347f1e06518f]
link C_0001801355352189289676 to C_0001531814603945772616--><path d="M32155.49,767.7531 C31427.27,851.6631 27990.23,1247.6831 26513.04,1417.8931 " fill="none" id="C_0001801355352189289676-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.9,1418.4831,26517.2979,1421.4292,26512.8673,1417.9122,26516.3844,1413.4816,26507.9,1418.4831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="31215.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="31222.59" y="882.02">collider</text><!--MD5=[b75e3b69c12a4dd7e94bd0823e916a99]
reverse link C_0001801355352189289676 to C_0000210234563198599367--><path d="M32419.88,825.9331 C32429.16,830.5331 32438.46,834.9331 32447.59,838.9531 C32547.8,883.0631 32590.92,854.5931 32681.59,915.9531 C33277.24,1319.0631 33314.51,1562.7031 33722.59,2154.9531 C34857.65,3802.2731 35409.03,4151.6031 35911.59,6087.9531 C35988.22,6383.1731 36080.75,11324.1531 35911.59,11577.9531 C35760.44,11804.7431 35500.26,11589.5431 35345.59,11813.9531 C35175.33,12061.0031 35470.19,14297.2931 35261.59,14512.9531 C35225.6,14550.1631 34847.82,14535.4631 34796.59,14542.9531 C34763.2,14547.8331 34755.64,14553.0931 34722.59,14559.9531 C32661.49,14987.9131 30206.4,15422.5231 29057.82,15621.4831 " fill="none" id="C_0001801355352189289676&lt;-C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32408.15,819.9931,32411.6907,826.2751,32418.8513,825.4229,32415.3106,819.1409,32408.15,819.9931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="34820.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="34827.59" y="3657.02">metadata</text><!--MD5=[327ec61c802d4b8bc89d445f02ff7678]
link C_0001771770302499309898 to C_0000236996062289735257--><path d="M33412.39,807.2131 C33283.49,1010.6431 32804.53,1724.2831 32218.59,2077.9531 C32132.68,2129.8131 32038.35,2171.9131 31941.02,2206.0731 " fill="none" id="C_0001771770302499309898-&gt;C_0000236996062289735257" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="31934.1984" cy="2208.4421" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="31941.7569" x2="31926.64" y1="2205.821" y2="2211.0631"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="31936.8195" x2="31931.5774" y1="2216.0005" y2="2200.8836"/><!--MD5=[dddc2f9d809445d4a2bacef7d4a58738]
link C_0001771770302499309898 to C_0001531814603945772616--><path d="M33358.28,807.0431 C33334.5,819.5431 33308.24,831.3631 33282.59,838.9531 C33121.03,886.7931 28318.75,1289.5531 26513.09,1439.7631 " fill="none" id="C_0001771770302499309898-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.81,1440.2031,26517.1103,1443.4441,26512.7928,1439.7891,26516.4479,1435.4716,26507.81,1440.2031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="33031.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="33038.59" y="882.02">collider</text><!--MD5=[de36d73f8d20b29c8ffe70c0f57ee265]
reverse link C_0001771770302499309898 to C_0000210234563198599367--><path d="M33546.93,814.2731 C33970.27,1084.6831 35607.51,2207.6231 36018.59,3643.9531 C36988.86,7034.0931 36065.41,8052.6231 35984.59,11577.9531 C35980.85,11741.1031 35976.67,14396.2531 35862.59,14512.9531 C35769.43,14608.2531 34797.87,14573.6731 34665.59,14589.9531 C32603.14,14843.7531 30192.08,15341.7731 29057.63,15588.2231 " fill="none" id="C_0001771770302499309898&lt;-C_0000210234563198599367" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="33535.66,807.0931,33538.5689,813.6915,33545.7785,813.5442,33542.8696,806.9458,33535.66,807.0931" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="36024.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="36031.59" y="3657.02">metadata</text><!--MD5=[eed6ab08d8c501b6208d9f4ac11f9b83]
reverse link C_0001561529841391244418 to C_0001858199404643284193--><path d="M17131.97,9799.0031 C17167.87,10928.9631 17230.12,12856.8931 17288.59,14512.9531 C17302.19,14898.1031 17319.67,15351.5531 17328.66,15582.1931 " fill="none" id="C_0001561529841391244418&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="17131.55,9785.7531,17127.7366,9791.8734,17131.9195,9797.7474,17135.7328,9791.6271,17131.55,9785.7531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17291.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="17301.59" y="13168.02">_class_name</text><!--MD5=[23ceac23f6c6826b07cc87ed3906ae98]
link C_0001561529841391244418 to C_0001561529841391244418--><path d="M17805.62,8543.8831 C17827.92,8621.8331 17840.59,8718.1831 17840.59,8832.9531 C17840.59,8945.2531 17828.46,9039.9331 17807.04,9116.9731 " fill="none" id="C_0001561529841391244418-&gt;C_0001561529841391244418" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="17805.62,9122.0231,17811.9119,9114.446,17806.9766,9117.2107,17804.212,9112.2754,17805.62,9122.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="17848.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="17858.59" y="8837.52">singleton</text><!--MD5=[a7f38b71b0c412aea9feb929bf57c436]
reverse link C_0001561529841391244418 to C_0000104564426296396960--><path d="M17122.01,9790.9731 C17190.15,10402.6231 17387.81,11157.4131 17922.59,11577.9531 C18022.13,11656.2231 18396.55,11524.2931 18491.59,11607.9531 C18551.27,11660.4831 18495.34,11709.6331 18523.59,11783.9531 C18639.64,12089.2031 18823.95,12402.2731 18990.3,12652.7431 " fill="none" id="C_0001561529841391244418&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="17121.41,9785.5831,17118.4135,9794.9651,17121.9543,9790.5534,17126.366,9794.0942,17121.41,9785.5831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="18529.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="18536.59" y="11700.52">«friend»</text><!--MD5=[a58d0cd78cca24a1b417e2c7091ad184]
reverse link C_0001531814603945772616 to C_0001561529841391244418--><path d="M25142.96,1499.2231 C23190.38,1511.9131 17782.59,1613.6131 17782.59,2350.9531 C17782.59,2350.9531 17782.59,2350.9531 17782.59,4772.4531 C17782.59,5848.1831 17547.13,7062.4331 17353.12,7880.3631 " fill="none" id="C_0001531814603945772616&lt;-C_0001561529841391244418" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25143.24,1492.2231,25163.28,1499.0931,25143.33,1506.2231,25143.24,1492.2231" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28076.49,9471.7831 C27904.39,10032.5731 27651.84,10871.8031 27450.59,11607.9531 C27429.33,11685.7331 27463.38,11726.7131 27406.59,11783.9531 C27369.09,11821.7631 27323.87,11772.3831 27290.59,11813.9531 C27099.82,12052.2731 27407.98,14335.0131 27201.59,14559.9531 C26516.18,15306.9831 18769.44,15671.5831 17507.8,15726.1931 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28080.41,9459.0031,28074.8257,9463.5655,28076.8893,9470.475,28082.4736,9465.9126,28080.41,9459.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27293.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="27303.59" y="13168.02">_class_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28051.06,9471.9031 C27853.62,10068.8431 27578.81,10989.7131 27457.59,11813.9531 C27435.77,11962.3431 27483.03,14394.0631 27391.59,14512.9531 C26760.65,15333.3431 18788.16,15676.9031 17507.63,15726.9431 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28055.28,9459.1831,28049.5971,9463.6222,28051.509,9470.5752,28057.1919,9466.1362,28055.28,9459.1831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27460.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="132" x="27470.59" y="13168.02">tree_changed_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28112.32,9471.7431 C27967.71,10071.6931 27765.22,10997.3131 27673.59,11813.9531 C27656.87,11963.0031 27703.95,14398.0131 27607.59,14512.9531 C26928.12,15323.4531 18801.97,15675.7331 17507.83,15726.8431 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28115.4,9458.9531,28110.1006,9463.8435,28112.5766,9470.6162,28117.876,9465.7258,28115.4,9458.9531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27676.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="27686.59" y="13168.02">node_added_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28160.2,9472.3131 C28065.15,10032.9431 27936.05,10871.6731 27875.59,11607.9531 C27862.38,11768.8331 27917.77,14388.8031 27814.59,14512.9531 C27124.55,15343.3031 18816.73,15679.4031 17507.73,15727.3431 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28162.44,9459.1131,28157.4938,9464.3605,28160.4351,9470.9445,28165.3813,9465.6971,28162.44,9459.1131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="27881.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="140" x="27891.59" y="13168.02">node_removed_name</text><!--MD5=[56ebdce5895db0cbf0742bd19f50d5ed]
reverse link C_0001872058027933416994 to C_0001858199404643284193--><path d="M28244.55,9472.5531 C28216.48,10075.9331 28174.01,11006.3931 28140.59,11813.9531 C28134.39,11963.8731 28136.26,14399.0431 28038.59,14512.9531 C27948.57,14617.9531 18879.89,15571.5931 17507.7,15715.3431 " fill="none" id="C_0001872058027933416994&lt;-C_0001858199404643284193-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28245.17,9459.2531,28240.891,9465.0574,28244.603,9471.2397,28248.882,9465.4354,28245.17,9459.2531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28143.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="141" x="28153.59" y="13168.02">node_renamed_name</text><!--MD5=[aa41735a795cbca578fc6182c40fdd69]
reverse link C_0001872058027933416994 to C_0001768230974934037264--><path d="M28359.09,9472.2031 C28491.43,10471.9531 28740.85,12356.1331 28821.64,12966.3631 " fill="none" id="C_0001872058027933416994&lt;-C_0001768230974934037264" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28357.34,9459.0231,28354.1591,9465.4948,28358.9095,9470.92,28362.0904,9464.4484,28357.34,9459.0231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="28664.59" y="11693.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="28674.59" y="11700.52">live_edit_root</text><!--MD5=[87dac64b8e7976967bba39fd65a14430]
reverse link C_0001872058027933416994 to C_0000945411446247634027--><path d="M28422.1,9471.8831 C28607.79,10118.4131 28994.2,11090.7531 29719.59,11577.9531 C30112.89,11842.1031 31368.49,11758.7331 31841.59,11783.9531 C31884.23,11786.2231 34885.28,11783.8931 34915.59,11813.9531 C35013.87,11911.4131 35015.91,13467.9231 35004.34,14589.6731 " fill="none" id="C_0001872058027933416994&lt;-C_0000945411446247634027" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="28418.43,9459.0631,28416.2395,9465.9335,28421.7388,9470.5979,28423.9294,9463.7276,28418.43,9459.0631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="35011.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="97" x="35021.59" y="13168.02">live_edit_scene</text><!--MD5=[d4b05c55b80957af852af4024a8a787a]
link C_0001872058027933416994 to C_0001872058027933416994--><path d="M29105.12,8562.7331 C29127.51,8637.1931 29140.09,8727.2731 29140.09,8832.9531 C29140.09,8936.3631 29128.04,9024.8331 29106.55,9098.3531 " fill="none" id="C_0001872058027933416994-&gt;C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="29105.12,9103.1731,29111.5006,9095.6706,29106.5331,9098.377,29103.8268,9093.4095,29105.12,9103.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="29148.09" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="29158.09" y="8837.52">singleton</text><!--MD5=[5882dd6fcc6b177240657afccabb0c63]
reverse link C_0001872058027933416994 to C_0000104564426296396960--><path d="M28259.22,9464.2131 C28207.83,10096.5731 28025.79,11050.2631 27416.59,11577.9531 C27353.3,11632.7731 27295.91,11555.5531 27230.59,11607.9531 C27164.93,11660.6331 27230.15,11736.5231 27160.59,11783.9531 C27086.92,11834.1831 20823.08,11780.0831 20740.59,11813.9531 C20325.09,11984.5631 19966.57,12346.8231 19719.45,12652.9431 " fill="none" id="C_0001872058027933416994&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="28259.63,9459.1131,28254.8985,9467.751,28259.216,9464.096,28262.871,9468.4135,28259.63,9459.1131" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="27236.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="27243.59" y="11700.52">«friend»</text><!--MD5=[5b0fb04546520b0dec254b45853dbfed]
reverse link C_0000970940027123558604 to C_0001872058027933416994--><path d="M28782.88,5052.8431 C28695.83,5700.1031 28479.11,7311.4031 28358.66,8206.8931 " fill="none" id="C_0000970940027123558604&lt;-C_0001872058027933416994" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="28776.01,5051.4531,28785.61,5032.5731,28789.88,5053.3231,28776.01,5051.4531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e0b6cbd5b03f80ab3eba4fe2dcbf948]
link C_0000762417759113755306 to C_0001531814603945772616--><path d="M32573.33,794.0131 C32535.58,810.6631 32490.25,828.3231 32447.59,838.9531 C31335.23,1116.1631 27964.6,1358.9531 26512.76,1453.6731 " fill="none" id="C_0000762417759113755306-&gt;C_0001531814603945772616" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="26507.71,1454.0031,26516.9536,1457.4026,26512.6992,1453.6743,26516.4275,1449.4199,26507.71,1454.0031" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32263.59" cy="878.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="19" x="32270.59" y="882.02">obj</text><!--MD5=[8bda8e308cc1dbbbc74088973fe49d83]
reverse link C_0000762417759113755306 to C_0001858199404643284193--><path d="M32694.69,805.6231 C32769.02,924.6631 32935.59,1221.9631 32935.59,1495.9531 C32935.59,1495.9531 32935.59,1495.9531 32935.59,2763.9531 C32935.59,4140.3331 32420,4697.6031 33169.59,5851.9531 C33274.65,6013.7231 33368.2,5998.1831 33551.59,6057.9531 C33598.51,6073.2431 33739.15,6050.7831 33771.59,6087.9531 C33821.74,6145.3931 33824.42,11522.9731 33771.59,11577.9531 C33713.81,11638.0931 33086.29,11555.3231 33021.59,11607.9531 C32959.05,11658.8331 33028.25,11721.2231 32977.59,11783.9531 C32958.61,11807.4531 32932.83,11788.4731 32916.59,11813.9531 C32835.99,11940.4231 32965.96,14407.2231 32859.59,14512.9531 C32844.24,14528.2231 29763.25,14559.6231 29741.59,14559.9531 C29295.59,14566.6431 28179.78,14562.2131 27734.59,14589.9531 C23567.71,14849.5931 18499.74,15564.7731 17507.62,15708.2131 " fill="none" id="C_0000762417759113755306&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="32687.58,794.3331,32687.3932,801.5418,32693.9755,804.4868,32694.1623,797.2781,32687.58,794.3331" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="32873.59" cy="3653.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="27" x="32880.59" y="3657.02">func</text><!--MD5=[5ecf1269ba038493d7a188869314b523]
reverse link C_0000314051240057057851 to C_0001858199404643284193--><path d="M22271.29,9068.5231 C22390.22,9919.0231 22678.82,12876.5731 21241.59,14512.9531 C20724.22,15102.0231 18196.08,15582.3631 17507.86,15703.7731 " fill="none" id="C_0000314051240057057851&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="22269.46,9055.5431,22266.3366,9062.0427,22271.1349,9067.4257,22274.2583,9060.9261,22269.46,9055.5431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22304.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="22314.59" y="13168.02">_class_name</text><!--MD5=[c8cd5ec3f4799bfb98fee18601ebcdfe]
link C_0000314051240057057851 to C_0000314051240057057851--><path d="M22298.96,8610.0831 C22472.93,8127.3631 22730.09,8201.6531 22730.09,8832.9531 C22730.09,9462.1031 22474.69,9538.0331 22300.74,9060.7531 " fill="none" id="C_0000314051240057057851-&gt;C_0000314051240057057851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="22298.96,9055.8231,22298.2597,9065.6471,22300.6607,9060.525,22305.7827,9062.926,22298.96,9055.8231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="22738.09" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="22748.09" y="8837.52">singleton</text><!--MD5=[1a5c4e57827c1ce3cfed75acbd29db82]
reverse link C_0000314051240057057851 to C_0000104564426296396960--><path d="M22277.94,9060.7531 C22365.5,9595.6731 22496.76,10938.9731 21755.59,11577.9531 C21705.13,11621.4631 20615.99,11577.7531 20556.59,11607.9531 C20439.29,11667.6031 20027.8,12222.7331 19720.47,12652.7831 " fill="none" id="C_0000314051240057057851&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="22277.11,9055.6731,22274.5993,9065.1966,22277.9089,9060.6089,22282.4966,9063.9184,22277.11,9055.6731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20562.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="20569.59" y="11700.52">«friend»</text><!--MD5=[d5123be137e691922de774dbcf9f522d]
reverse link C_0001531814603945772616 to C_0000314051240057057851--><path d="M25144.36,1704.3031 C24779.54,1816.8331 24325.75,1962.5331 23925.59,2107.9531 C23873.7,2126.8131 23848.11,2114.4331 23810.59,2154.9531 C23748.43,2222.0931 23747.59,2259.4531 23747.59,2350.9531 C23747.59,2350.9531 23747.59,2350.9531 23747.59,4772.4531 C23747.59,5058.7731 23866.29,5858.7831 23660.59,6057.9531 C23592.86,6123.5331 22884.75,6027.2631 22812.59,6087.9531 C22056.01,6724.2731 22136.02,8077.6131 22201.46,8610.1031 " fill="none" id="C_0001531814603945772616&lt;-C_0000314051240057057851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.41,1697.5831,25163.58,1698.3731,25146.53,1710.9531,25142.41,1697.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fbb6989faf4ed278e5063ce8d06d64a7]
reverse link C_0000535376932101028371 to C_0001858199404643284193--><path d="M23349.39,9273.6131 C23515.78,10327.8631 23774.7,13022.5631 22406.59,14512.9531 C21717.1,15264.0831 18317.01,15638.0631 17507.71,15717.2831 " fill="none" id="C_0000535376932101028371&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="23347.32,9260.5231,23344.3122,9267.077,23349.2051,9272.3741,23352.2129,9265.8203,23347.32,9260.5231" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23447.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="23457.59" y="13168.02">_class_name</text><!--MD5=[491d9ca8506983be5dd6ad346fa76ecd]
link C_0000535376932101028371 to C_0000535376932101028371--><path d="M23424.54,8405.0931 C23575.8,8171.5231 23741.59,8314.1431 23741.59,8832.9531 C23741.59,9348.4631 23577.9,9492.5531 23427.42,9265.2231 " fill="none" id="C_0000535376932101028371-&gt;C_0000535376932101028371" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="23424.54,9260.8131,23426.1424,9270.5307,23427.287,9264.9909,23432.8269,9266.1355,23424.54,9260.8131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="23749.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="23759.59" y="8837.52">singleton</text><!--MD5=[aeb94eee531eb6d8f9e0dab2a65178b2]
reverse link C_0000535376932101028371 to C_0000104564426296396960--><path d="M23342.08,9266.0731 C23418.9,9879.3831 23451.85,10992.6731 22812.59,11577.9531 C22780.46,11607.3731 22464.95,11603.6331 22421.59,11607.9531 C21672.6,11682.5431 21418.93,11487.7331 20740.59,11813.9531 C20343.16,12005.0831 19989.82,12356.6531 19740.46,12652.8931 " fill="none" id="C_0000535376932101028371&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="23341.41,9260.6831,23338.5705,9270.1138,23342.0372,9265.6436,23346.5073,9269.1103,23341.41,9260.6831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="22427.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="22434.59" y="11700.52">«friend»</text><!--MD5=[ccb0f2e105ae37379c60a8eaf42ab781]
reverse link C_0001531814603945772616 to C_0000535376932101028371--><path d="M25143.55,1582.0631 C24733.41,1665.0531 24229.6,1829.5131 23892.59,2154.9531 C23825.61,2219.6331 23818.59,2257.8431 23818.59,2350.9531 C23818.59,2350.9531 23818.59,2350.9531 23818.59,4772.4531 C23818.59,5344.1331 23834.95,5489.5731 23773.59,6057.9531 C23683.07,6896.5731 23485.61,7863.0331 23366.19,8405.2931 " fill="none" id="C_0001531814603945772616&lt;-C_0000535376932101028371" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.33,1575.1631,25163.32,1578.1131,25145.08,1588.8931,25142.33,1575.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ee47356e384c9a8586af688e36c84f71]
reverse link C_0001370497546359815893 to C_0001858199404643284193--><path d="M24239.89,9388.6831 C24175.16,10005.5931 24178.03,10992.1731 24726.59,11577.9531 C24770.39,11624.7231 24827.28,11558.1531 24867.59,11607.9531 C24916.82,11668.7531 24885.04,11707.7031 24867.59,11783.9531 C24567.13,13096.9531 24615.81,13689.9031 23549.59,14512.9531 C22557.98,15278.4131 18408.41,15648.1231 17507.62,15720.1831 " fill="none" id="C_0001370497546359815893&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="24241.28,9375.5431,24236.6688,9381.0872,24240.0128,9387.476,24244.624,9381.932,24241.28,9375.5431" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24861.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="24871.59" y="13168.02">_class_name</text><!--MD5=[3adf581e5c7850b91ef14b43d83cd267]
link C_0001370497546359815893 to C_0001370497546359815893--><path d="M24608.64,8428.3931 C24630.26,8517.8331 24643.59,8652.6831 24643.59,8832.9531 C24643.59,9009.8831 24630.75,9143.0531 24609.84,9232.4831 " fill="none" id="C_0001370497546359815893-&gt;C_0001370497546359815893" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="24608.64,9237.5131,24614.6117,9229.6812,24609.7955,9232.6485,24606.8282,9227.8323,24608.64,9237.5131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="24651.59" y="8830.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="24661.59" y="8837.52">singleton</text><!--MD5=[f0c11157ea1c302f0338a5d98b865e3f]
reverse link C_0001370497546359815893 to C_0000104564426296396960--><path d="M24459.25,9380.7031 C24586.76,10067.6331 24672.18,11224.1331 23973.59,11783.9531 C23903.51,11840.1131 20823.59,11779.6531 20740.59,11813.9531 C20325.87,11985.3631 19967.61,12347.0631 19720.41,12652.7331 " fill="none" id="C_0001370497546359815893&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="24458.32,9375.6731,24456.0337,9385.2529,24459.2345,9380.5888,24463.8987,9383.7897,24458.32,9375.6731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="24147.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="24154.59" y="11700.52">«friend»</text><!--MD5=[fcb1dceefea1281ea342b1a8ab9dedf3]
reverse link C_0001531814603945772616 to C_0001370497546359815893--><path d="M25144.29,1665.7131 C24588.74,1821.3631 23900.59,2070.7131 23900.59,2350.9531 C23900.59,2350.9531 23900.59,2350.9531 23900.59,4772.4531 C23900.59,5252.6431 23846.19,5382.1631 23945.59,5851.9531 C23968.93,5962.2531 24011.76,5978.4531 24038.59,6087.9531 C24222.39,6837.9131 24289.71,7731.3131 24314.36,8290.2031 " fill="none" id="C_0001531814603945772616&lt;-C_0001370497546359815893" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.43,1658.9731,25163.58,1660.3331,25146.19,1672.4531,25142.43,1658.9731" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5b171c69af600bc12977795a2bb103e4]
reverse link C_0000096380574950611570 to C_0001858199404643284193--><path d="M21061.35,9100.5831 C21197.21,9985.7031 21508.4,12863.7031 20141.59,14512.9531 C19431,15370.3831 18002.79,15641.8931 17508.03,15712.1831 " fill="none" id="C_0000096380574950611570&lt;-C_0001858199404643284193" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="21059.36,9087.6931,21056.3227,9094.2334,21061.1916,9099.5525,21064.2289,9093.0123,21059.36,9087.6931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="21139.59" y="13161.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="21149.59" y="13168.02">_class_name</text><!--MD5=[7d4e19f5f1e549348290eead97de4c50]
reverse link C_0000096380574950611570 to C_0000104564426296396960--><path d="M20971.82,9092.9331 C20877.64,9616.9131 20630.22,10833.7431 20217.59,11783.9531 C20086.21,12086.5031 19896.08,12400.7631 19728.45,12652.6831 " fill="none" id="C_0000096380574950611570&lt;-C_0000104564426296396960" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="20972.72,9087.9431,20967.1871,9096.0909,20971.8331,9092.8638,20975.0602,9097.5099,20972.72,9087.9431" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="20287.59" cy="11696.5195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="20294.59" y="11700.52">«friend»</text><!--MD5=[d80b17199b730d4efec0c676d67f0184]
reverse link C_0001531814603945772616 to C_0000096380574950611570--><path d="M25143.8,1687.6831 C24724.63,1804.5831 24179.86,1959.9631 23699.59,2107.9531 C23636.06,2127.5331 23604.94,2108.2831 23557.59,2154.9531 C23491.93,2219.6831 23489.59,2258.7531 23489.59,2350.9531 C23489.59,2350.9531 23489.59,2350.9531 23489.59,4772.4531 C23489.59,5253.3231 23743.87,5499.6231 23416.59,5851.9531 C22909.43,6397.9431 22314.8,5594.2731 21756.59,6087.9531 C21022.3,6737.3731 20981.42,8031.2631 20999.95,8578.3431 " fill="none" id="C_0001531814603945772616&lt;-C_0000096380574950611570" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="25142.21,1680.8531,25163.35,1682.2331,25145.97,1694.3431,25142.21,1680.8531" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f602332b486c61adc317321c7dd7305]
link C_0000228469999635536560 to C_0001789265459324510060--><!--MD5=[d366f22993ee22643e7574cd9cab9193]
link C_0000228469999635536560 to C_0001201075309499995726--><!--MD5=[ed6576951b890cef8484672a4cd2a070]
link C_0001201075309499995726 to C_0002270819269735237405--><!--MD5=[eddfa551cab9ef0a6368d5bf60834db4]
@startuml
title Godot Object class hierarchy
class "SafeNumeric<uint32_t>" as C_0001357046052919104842
class C_0001357046052919104842 {
}
class "SafeRefCount" as C_0000699772808699382057
class C_0000699772808699382057 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/safe_refcount.h#L164{SafeRefCount}]] {
+ref() : bool
+refval() : uint32_t
+unref() : bool
+unrefval() : uint32_t
+get() const : uint32_t
+init(uint32_t p_value = 1) : void
}
class "Array" as C_0000228469999635536560
class C_0000228469999635536560 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/array.h#L41{Array}]] {
+operator[](int p_idx) : Variant &
+operator[](int p_idx) const : const Variant &
+set(int p_idx, const Variant & p_value) : void
+get(int p_idx) const : const Variant &
+size() const : int
+empty() const : bool
+clear() : void
+operator==(const Array & p_array) const : bool
+hash() const : uint32_t
+operator=(const Array & p_array) : void
+push_back(const Variant & p_value) : void
+append(const Variant & p_value) : void
+append_array(const Array & p_array) : void
+resize(int p_new_size) : Error
+insert(int p_pos, const Variant & p_value) : void
+remove(int p_pos) : void
+front() const : Variant
+back() const : Variant
+sort() : Array &
+sort_custom(Object * p_obj, const StringName & p_function) : Array &
+shuffle() : void
+bsearch(const Variant & p_value, bool p_before = true) : int
+bsearch_custom(const Variant & p_value, Object * p_obj, const StringName & p_function, bool p_before = true) : int
+invert() : Array &
+find(const Variant & p_value, int p_from = 0) const : int
+rfind(const Variant & p_value, int p_from = -1) const : int
+find_last(const Variant & p_value) const : int
+count(const Variant & p_value) const : int
+has(const Variant & p_value) const : bool
+erase(const Variant & p_value) : void
+push_front(const Variant & p_value) : void
+pop_back() : Variant
+pop_front() : Variant
+duplicate(bool p_deep = false) const : Array
+slice(int p_begin, int p_end, int p_step = 1, bool p_deep = false) const : Array
+min() const : Variant
+max() const : Variant
+id() const : const void *
+Array(const Array & p_from) : void
+Array() : void
+~Array() : void
}
class "String" as C_0000945411446247634027
class C_0000945411446247634027 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L126{String}]] {
+ptrw() : CharType *
+ptr() const : const CharType *
+remove(int p_index) : void
+clear() : void
+get(int p_index) const : CharType
+set(int p_index, const CharType & p_elem) : void
+size() const : int
+resize(int p_size) : Error
+operator[](int p_index) const : const CharType &
+operator[](int p_index) : CharProxy<CharType>
+operator==(const String & p_str) const : bool
+operator!=(const String & p_str) const : bool
+operator+(const String & p_str) const : String
+operator+=(const String & ) : String &
+operator+=(CharType p_char) : String &
+operator+=(const char * p_str) : String &
+operator+=(const CharType * p_str) : String &
+operator=(const char * p_str) : void
+operator=(const CharType * p_str) : void
+operator==(const char * p_str) const : bool
+operator==(const CharType * p_str) const : bool
+operator==(const StrRange & p_str_range) const : bool
+operator!=(const char * p_str) const : bool
+operator!=(const CharType * p_str) const : bool
+operator<(const CharType * p_str) const : bool
+operator<(const char * p_str) const : bool
+operator<(const String & p_str) const : bool
+operator<=(const String & p_str) const : bool
+casecmp_to(const String & p_str) const : signed char
+nocasecmp_to(const String & p_str) const : signed char
+naturalnocasecmp_to(const String & p_str) const : signed char
+c_str() const : const CharType *
+length() const : int
+substr(int p_from, int p_chars = -1) const : String
+find(const String & p_str, int p_from = 0) const : int
+find(const char * p_str, int p_from = 0) const : int
+find_char(const CharType & p_char, int p_from = 0) const : int
+find_last(const String & p_str) const : int
+findn(const String & p_str, int p_from = 0) const : int
+rfind(const String & p_str, int p_from = -1) const : int
+rfindn(const String & p_str, int p_from = -1) const : int
+findmk(const Vector<String> & p_keys, int p_from = 0, int * r_key = __null) const : int
+match(const String & p_wildcard) const : bool
+matchn(const String & p_wildcard) const : bool
+begins_with(const String & p_string) const : bool
+begins_with(const char * p_string) const : bool
+ends_with(const String & p_string) const : bool
+is_enclosed_in(const String & p_string) const : bool
+is_subsequence_of(const String & p_string) const : bool
+is_subsequence_ofi(const String & p_string) const : bool
+is_quoted() const : bool
+bigrams() const : Vector<String>
+similarity(const String & p_string) const : float
+format(const Variant & values, String placeholder = "{_}") const : String
+replace_first(const String & p_key, const String & p_with) const : String
+replace(const String & p_key, const String & p_with) const : String
+replace(const char * p_key, const char * p_with) const : String
+replacen(const String & p_key, const String & p_with) const : String
+repeat(int p_count) const : String
+insert(int p_at_pos, const String & p_string) const : String
+pad_decimals(int p_digits) const : String
+pad_zeros(int p_digits) const : String
+trim_prefix(const String & p_prefix) const : String
+trim_suffix(const String & p_suffix) const : String
+lpad(int min_length, const String & character = " ") const : String
+rpad(int min_length, const String & character = " ") const : String
+sprintf(const Array & values, bool * error) const : String
+quote(String quotechar = "\"") const : String
+unquote() const : String
{static} +num(double p_num, int p_decimals = -1) : String
{static} +num_scientific(double p_num) : String
{static} +num_real(double p_num) : String
{static} +num_int64(int64_t p_num, int base = 10, bool capitalize_hex = false) : String
{static} +num_uint64(uint64_t p_num, int base = 10, bool capitalize_hex = false) : String
{static} +chr(CharType p_char) : String
{static} +md5(const uint8_t * p_md5) : String
{static} +hex_encode_buffer(const uint8_t * p_buffer, int p_len) : String
+is_numeric() const : bool
+to_double() const : double
+to_float() const : float
+hex_to_int(bool p_with_prefix = true) const : int
+to_int() const : int
+hex_to_int64(bool p_with_prefix = true) const : int64_t
+bin_to_int64(bool p_with_prefix = true) const : int64_t
+to_int64() const : int64_t
{static} +to_int(const char * p_str, int p_len = -1) : int
{static} +to_double(const char * p_str) : double
{static} +to_double(const CharType * p_str, const CharType ** r_end = __null) : double
{static} +to_int(const CharType * p_str, int p_len = -1) : int64_t
+capitalize() const : String
+camelcase_to_underscore(bool lowercase = true) const : String
+get_slice_count(String p_splitter) const : int
+get_slice(String p_splitter, int p_slice) const : String
+get_slicec(CharType p_splitter, int p_slice) const : String
+split(const String & p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector<String>
+rsplit(const String & p_splitter, bool p_allow_empty = true, int p_maxsplit = 0) const : Vector<String>
+split_spaces() const : Vector<String>
+split_floats(const String & p_splitter, bool p_allow_empty = true) const : Vector<float>
+split_floats_mk(const Vector<String> & p_splitters, bool p_allow_empty = true) const : Vector<float>
+split_ints(const String & p_splitter, bool p_allow_empty = true) const : Vector<int>
+split_ints_mk(const Vector<String> & p_splitters, bool p_allow_empty = true) const : Vector<int>
+join(Vector<String> parts) : String
{static} +char_uppercase(CharType p_char) : CharType
{static} +char_lowercase(CharType p_char) : CharType
+to_upper() const : String
+to_lower() const : String
+count(const String & p_string, int p_from = 0, int p_to = 0) const : int
+countn(const String & p_string, int p_from = 0, int p_to = 0) const : int
+left(int p_pos) const : String
+right(int p_pos) const : String
+dedent() const : String
+strip_edges(bool left = true, bool right = true) const : String
+strip_escapes() const : String
+lstrip(const String & p_chars) const : String
+rstrip(const String & p_chars) const : String
+get_extension() const : String
+get_basename() const : String
+plus_file(const String & p_file) const : String
+ord_at(int p_idx) const : CharType
+erase(int p_pos, int p_chars) : void
+ascii(bool p_allow_extended = false) const : CharString
+utf8() const : CharString
+parse_utf8(const char * p_utf8, int p_len = -1) : bool
{static} +utf8(const char * p_utf8, int p_len = -1) : String
{static} +hash(const CharType * p_cstr, int p_len) : uint32_t
{static} +hash(const CharType * p_cstr) : uint32_t
{static} +hash(const char * p_cstr, int p_len) : uint32_t
{static} +hash(const char * p_cstr) : uint32_t
+hash() const : uint32_t
+hash64() const : uint64_t
+md5_text() const : String
+sha1_text() const : String
+sha256_text() const : String
+md5_buffer() const : Vector<uint8_t>
+sha1_buffer() const : Vector<uint8_t>
+sha256_buffer() const : Vector<uint8_t>
+empty() const : bool
+is_abs_path() const : bool
+is_rel_path() const : bool
+is_resource_file() const : bool
+path_to(const String & p_path) const : String
+path_to_file(const String & p_path) const : String
+get_base_dir() const : String
+get_file() const : String
{static} +humanize_size(uint64_t p_size) : String
+simplify_path() const : String
+xml_escape(bool p_escape_quotes = false) const : String
+xml_unescape() const : String
+http_escape() const : String
+http_unescape() const : String
+c_escape() const : String
+c_escape_multiline() const : String
+c_unescape() const : String
+json_escape() const : String
+word_wrap(int p_chars_per_line) const : String
+parse_url(String & r_scheme, String & r_host, int & r_port, String & r_path) const : Error
+percent_encode() const : String
+percent_decode() const : String
+property_name_encode() const : String
+validate_node_name() const : String
+is_valid_identifier() const : bool
+is_valid_integer() const : bool
+is_valid_float() const : bool
+is_valid_hex_number(bool p_with_prefix) const : bool
+is_valid_html_color() const : bool
+is_valid_ip_address() const : bool
+is_valid_filename() const : bool
+String() : void
+String(const String & p_str) : void
+operator=(const String & p_str) : String
+String(const char * p_str) : void
+String(const CharType * p_str, int p_clip_to_len = -1) : void
+String(const StrRange & p_range) : void
+npos : enum
{static} +invalid_node_name_characters : const String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ustring.h#L345{invalid_node_name_characters}]]]
}
class "Dictionary" as C_0001299121424291583786
class C_0001299121424291583786 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/dictionary.h#L42{Dictionary}]] {
+get_key_list(List<Variant> * p_keys) const : void
+get_key_at_index(int p_index) const : Variant
+get_value_at_index(int p_index) const : Variant
+operator[](const Variant & p_key) : Variant &
+operator[](const Variant & p_key) const : const Variant &
+getptr(const Variant & p_key) const : const Variant *
+getptr(const Variant & p_key) : Variant *
+get_valid(const Variant & p_key) const : Variant
+get(const Variant & p_key, const Variant & p_default) const : Variant
+size() const : int
+empty() const : bool
+clear() : void
+has(const Variant & p_key) const : bool
+has_all(const Array & p_keys) const : bool
+erase(const Variant & p_key) : bool
+operator==(const Dictionary & p_dictionary) const : bool
+operator!=(const Dictionary & p_dictionary) const : bool
+hash() const : uint32_t
+operator=(const Dictionary & p_dictionary) : void
+next(const Variant * p_key = __null) const : const Variant *
+keys() const : Array
+values() const : Array
+duplicate(bool p_deep = false) const : Dictionary
+id() const : const void *
+Dictionary(const Dictionary & p_from) : void
+Dictionary() : void
+~Dictionary() : void
}
class "StringName" as C_0001858199404643284193
class C_0001858199404643284193 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44{StringName}]] {
+operator const void *() const : const void *
+operator==(const String & p_name) const : bool
+operator==(const char * p_name) const : bool
+operator!=(const String & p_name) const : bool
+operator<(const StringName & p_name) const : bool
+operator==(const StringName & p_name) const : bool
+hash() const : uint32_t
+data_unique_pointer() const : const void *
+operator!=(const StringName & p_name) const : bool
+operator String() const : String
{static} +search(const char * p_name) : StringName
{static} +search(const CharType * p_name) : StringName
{static} +search(const String & p_name) : StringName
+operator=(const StringName & p_name) : void
+StringName(const char * p_name) : void
+StringName(const StringName & p_name) : void
+StringName(const String & p_name) : void
+StringName(const StaticCString & p_static_string) : void
+StringName() : void
+~StringName() : void
}
class "Vector<StringName>" as C_0001169846630986447699
class C_0001169846630986447699 {
}
class "NodePath" as C_0001768230974934037264
class C_0001768230974934037264 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/node_path.h#L37{NodePath}]] {
+get_sname() const : StringName
+is_absolute() const : bool
+get_name_count() const : int
+get_name(int p_idx) const : StringName
+get_subname_count() const : int
+get_subname(int p_idx) const : StringName
+get_names() const : Vector<StringName>
+get_subnames() const : Vector<StringName>
+get_concatenated_subnames() const : StringName
+rel_path_to(const NodePath & p_np) const : NodePath
+get_as_property_path() const : NodePath
+prepend_period() : void
+get_parent() const : NodePath
+hash() const : uint32_t
+operator String() const : String
+is_empty() const : bool
+operator==(const NodePath & p_path) const : bool
+operator!=(const NodePath & p_path) const : bool
+operator=(const NodePath & p_path) : void
+simplify() : void
+simplified() const : NodePath
+NodePath(const Vector<StringName> & p_path, bool p_absolute) : void
+NodePath(const Vector<StringName> & p_path, const Vector<StringName> & p_subpath, bool p_absolute) : void
+NodePath(const NodePath & p_path) : void
+NodePath(const String & p_path) : void
+NodePath() : void
+~NodePath() : void
}
class "RefPtr" as C_0002025812040042972946
class C_0002025812040042972946 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/ref_ptr.h#L41{RefPtr}]] {
+is_null() const : bool
+operator=(const RefPtr & p_other) : void
+operator==(const RefPtr & p_other) const : bool
+operator!=(const RefPtr & p_other) const : bool
+get_rid() const : RID
+unref() : void
+get_data() const : void *
+RefPtr(const RefPtr & p_other) : void
+RefPtr() : void
+~RefPtr() : void
}
class "Vector<Variant>" as C_0000367042517371617856
class C_0000367042517371617856 {
}
class "List<MethodInfo>" as C_0001789265459324510060
class C_0001789265459324510060 {
}
class "List<PropertyInfo>" as C_0000788782266645010446
class C_0000788782266645010446 {
}
class "Variant" as C_0000210234563198599367
class C_0000210234563198599367 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L93{Variant}]] {
+get_type() const : Variant::Type
{static} +get_type_name(Variant::Type p_type) : String
{static} +can_convert(Variant::Type p_type_from, Variant::Type p_type_to) : bool
{static} +can_convert_strict(Variant::Type p_type_from, Variant::Type p_type_to) : bool
+is_ref() const : bool
+is_num() const : bool
+is_array() const : bool
+is_shared() const : bool
+is_zero() const : bool
+is_one() const : bool
+operator bool() const : bool
+operator int() const : int
+operator unsigned int() const : unsigned int
+operator short() const : short
+operator unsigned short() const : unsigned short
+operator signed char() const : signed char
+operator unsigned char() const : unsigned char
+operator long() const : int64_t
+operator unsigned long() const : uint64_t
+operator wchar_t() const : CharType
+operator float() const : float
+operator double() const : double
+operator String() const : String
+operator StringName() const : StringName
+operator Vector2() const : Vector2
+operator Rect2() const : Rect2
+operator Vector3() const : Vector3
+operator Plane() const : Plane
+operator AABB() const : ::AABB
+operator Quat() const : Quat
+operator Basis() const : Basis
+operator Transform() const : Transform
+operator Transform2D() const : Transform2D
+operator Color() const : Color
+operator NodePath() const : NodePath
+operator RefPtr() const : RefPtr
+operator RID() const : RID
+operator Object *() const : Object *
+operator Node *() const : Node *
+operator Control *() const : Control *
+operator Dictionary() const : Dictionary
+operator Array() const : Array
+operator PoolVector() const : PoolVector<uint8_t>
+operator PoolVector() const : PoolVector<int>
+operator PoolVector() const : PoolVector<real_t>
+operator PoolVector() const : PoolVector<String>
+operator PoolVector() const : PoolVector<Vector3>
+operator PoolVector() const : PoolVector<Color>
+operator PoolVector() const : PoolVector<Plane>
+operator PoolVector() const : PoolVector<Face3>
+operator Vector() const : Vector<Variant>
+operator Vector() const : Vector<uint8_t>
+operator Vector() const : Vector<int>
+operator Vector() const : Vector<real_t>
+operator Vector() const : Vector<String>
+operator Vector() const : Vector<StringName>
+operator Vector() const : Vector<Vector3>
+operator Vector() const : Vector<Color>
+operator Vector() const : Vector<RID>
+operator Vector() const : Vector<Vector2>
+operator PoolVector() const : PoolVector<Vector2>
+operator Vector() const : Vector<Plane>
+operator Margin() const : Margin
+operator Orientation() const : Orientation
+operator IP_Address() const : IP_Address
+Variant(bool p_bool) : void
+Variant(int p_int) : void
+Variant(unsigned int p_int) : void
+Variant(short p_short) : void
+Variant(unsigned short p_short) : void
+Variant(signed char p_char) : void
+Variant(unsigned char p_char) : void
+Variant(int64_t p_int) : void
+Variant(uint64_t p_int) : void
+Variant(float p_float) : void
+Variant(double p_double) : void
+Variant(const String & p_string) : void
+Variant(const StringName & p_string) : void
+Variant(const char *const p_cstring) : void
+Variant(const CharType * p_wstring) : void
+Variant(const Vector2 & p_vector2) : void
+Variant(const Rect2 & p_rect2) : void
+Variant(const Vector3 & p_vector3) : void
+Variant(const Plane & p_plane) : void
+Variant(const ::AABB & p_aabb) : void
+Variant(const Quat & p_quat) : void
+Variant(const Basis & p_matrix) : void
+Variant(const Transform2D & p_transform) : void
+Variant(const Transform & p_transform) : void
+Variant(const Color & p_color) : void
+Variant(const NodePath & p_node_path) : void
+Variant(const RefPtr & p_resource) : void
+Variant(const RID & p_rid) : void
+Variant(const Object * p_object) : void
+Variant(const Dictionary & p_dictionary) : void
+Variant(const Array & p_array) : void
+Variant(const PoolVector<Plane> & p_array) : void
+Variant(const PoolVector<uint8_t> & p_raw_array) : void
+Variant(const PoolVector<int> & p_int_array) : void
+Variant(const PoolVector<real_t> & p_real_array) : void
+Variant(const PoolVector<String> & p_string_array) : void
+Variant(const PoolVector<Vector3> & p_vector3_array) : void
+Variant(const PoolVector<Color> & p_color_array) : void
+Variant(const PoolVector<Face3> & p_face_array) : void
+Variant(const Vector<Variant> & p_array) : void
+Variant(const Vector<uint8_t> & p_array) : void
+Variant(const Vector<int> & p_array) : void
+Variant(const Vector<real_t> & p_array) : void
+Variant(const Vector<String> & p_array) : void
+Variant(const Vector<StringName> & p_array) : void
+Variant(const Vector<Vector3> & p_array) : void
+Variant(const Vector<Color> & p_array) : void
+Variant(const Vector<Plane> & p_array) : void
+Variant(const Vector<RID> & p_array) : void
+Variant(const Vector<Vector2> & p_array) : void
+Variant(const PoolVector<Vector2> & p_vector2_array) : void
+Variant(const IP_Address & p_address) : void
{static} +get_operator_name(Variant::Operator p_op) : String
{static} +evaluate(const Variant::Operator & p_op, const Variant & p_a, const Variant & p_b, Variant & r_ret, bool & r_valid) : void
{static} +evaluate(const Variant::Operator & p_op, const Variant & p_a, const Variant & p_b) : Variant
+zero() : void
+duplicate(bool deep = false) const : Variant
{static} +blend(const Variant & a, const Variant & b, float c, Variant & r_dst) : void
{static} +interpolate(const Variant & a, const Variant & b, float c, Variant & r_dst) : void
+call_ptr(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant * r_ret, Variant::CallError & r_error) : void
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
{static} +get_call_error_text(Object * p_base, const StringName & p_method, const Variant ** p_argptrs, int p_argcount, const Variant::CallError & ce) : String
{static} +construct(const Variant::Type , const Variant ** p_args, int p_argcount, Variant::CallError & r_error, bool p_strict = true) : Variant
+get_method_list(List<MethodInfo> * p_list) const : void
+has_method(const StringName & p_method) const : bool
{static} +get_method_argument_types(Variant::Type p_type, const StringName & p_method) : Vector<Variant::Type>
{static} +get_method_default_arguments(Variant::Type p_type, const StringName & p_method) : Vector<Variant>
{static} +get_method_return_type(Variant::Type p_type, const StringName & p_method, bool * r_has_return = __null) : Variant::Type
{static} +get_method_argument_names(Variant::Type p_type, const StringName & p_method) : Vector<StringName>
{static} +is_method_const(Variant::Type p_type, const StringName & p_method) : bool
+set_named(const StringName & p_index, const Variant & p_value, bool * r_valid = __null) : void
+get_named(const StringName & p_index, bool * r_valid = __null) const : Variant
+set(const Variant & p_index, const Variant & p_value, bool * r_valid = __null) : void
+get(const Variant & p_index, bool * r_valid = __null) const : Variant
+in(const Variant & p_index, bool * r_valid = __null) const : bool
+iter_init(Variant & r_iter, bool & r_valid) const : bool
+iter_next(Variant & r_iter, bool & r_valid) const : bool
+iter_get(const Variant & r_iter, bool & r_valid) const : Variant
+get_property_list(List<PropertyInfo> * p_list) const : void
+operator==(const Variant & p_variant) const : bool
+operator!=(const Variant & p_variant) const : bool
+operator<(const Variant & p_variant) const : bool
+hash() const : uint32_t
+hash_compare(const Variant & p_variant) const : bool
+booleanize() const : bool
+stringify(List<const void *> & stack) const : String
+static_assign(const Variant & p_variant) : void
{static} +get_constructor_list(Variant::Type p_type, List<MethodInfo> * p_list) : void
{static} +get_constants_for_type(Variant::Type p_type, List<StringName> * p_constants) : void
{static} +has_constant(Variant::Type p_type, const StringName & p_value) : bool
{static} +get_constant_value(Variant::Type p_type, const StringName & p_value, bool * r_valid = __null) : Variant
+get_construct_string() const : String
{static} +construct_from_string(const String & p_string, Variant & r_value, Variant::ObjectConstruct p_obj_construct = __null, void * p_construct_ud = __null) : void
+operator=(const Variant & p_variant) : void
+Variant(const Variant & p_variant) : void
+Variant() : void
+~Variant() : void
}
class "PropertyInfo" as C_0002153970433534458832
class C_0002153970433534458832 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L144{PropertyInfo}]] {
+added_usage(int p_fl) const : PropertyInfo
+operator Dictionary() const : Dictionary
{static} +from_dict(const Dictionary & p_dict) : PropertyInfo
+PropertyInfo() : void
+PropertyInfo(Variant::Type p_type, const String p_name, PropertyHint p_hint = PROPERTY_HINT_NONE, const String & p_hint_string = "", uint32_t p_usage = PROPERTY_USAGE_DEFAULT, const StringName & p_class_name = StringName()) : void
+PropertyInfo(const StringName & p_class_name) : void
+operator==(const PropertyInfo & p_info) const : bool
+operator<(const PropertyInfo & p_info) const : bool
+type : Variant::Type [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L146{type}]]]
+name : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L147{name}]]]
+class_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L148{class_name}]]]
+hint : PropertyHint [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L149{hint}]]]
+hint_string : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L150{hint_string}]]]
+usage : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L151{usage}]]]
}
class "MethodInfo" as C_0000774532299576474923
class C_0000774532299576474923 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L206{MethodInfo}]] {
+operator==(const MethodInfo & p_method) const : bool
+operator<(const MethodInfo & p_method) const : bool
+operator Dictionary() const : Dictionary
{static} +from_dict(const Dictionary & p_dict) : MethodInfo
+MethodInfo() : void
+MethodInfo(const String & p_name) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4) : void
+MethodInfo(const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4, const PropertyInfo & p_param5) : void
+MethodInfo(Variant::Type ret) : void
+MethodInfo(Variant::Type ret, const String & p_name) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4) : void
+MethodInfo(Variant::Type ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4, const PropertyInfo & p_param5) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4) : void
+MethodInfo(const PropertyInfo & p_ret, const String & p_name, const PropertyInfo & p_param1, const PropertyInfo & p_param2, const PropertyInfo & p_param3, const PropertyInfo & p_param4, const PropertyInfo & p_param5) : void
+name : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L208{name}]]]
+return_val : PropertyInfo [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L209{return_val}]]]
+flags : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L210{flags}]]]
+id : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L211{id}]]]
+arguments : List<PropertyInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L212{arguments}]]]
+default_arguments : Vector<Variant> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L213{default_arguments}]]]
}
class "List<String>" as C_0002063845175027013341
class C_0002063845175027013341 {
}
class "List<Object::Connection>" as C_0000751300156436098886
class C_0000751300156436098886 {
}
class "HashMap<StringName,Object::Signal>" as C_0001578539238208480863
class C_0001578539238208480863 {
}
class "Set<Object *>" as C_0000051860595756965531
class C_0000051860595756965531 {
}
class "Set<String>" as C_0001682405743486361214
class C_0001682405743486361214 {
}
class "Object" as C_0001531814603945772616
class C_0001531814603945772616 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L408{Object}]] {
{static} +initialize_class() : void
{static} +register_custom_data_to_otdb() : void
+_change_notify(const char * p_property = "") : void
{static} +get_class_ptr_static() : void *
+_use_rc() : ObjectRC *
+_is_gpl_reversed() const : bool
+get_instance_id() const : ObjectID
+add_change_receptor(Object * p_receptor) : void
+remove_change_receptor(Object * p_receptor) : void
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_category_static() : String
+get_class() const : String
+get_save_class() const : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
+get_class_name() const : const StringName &
+set(const StringName & p_name, const Variant & p_value, bool * r_valid = __null) : void
+get(const StringName & p_name, bool * r_valid = __null) const : Variant
+set_indexed(const Vector<StringName> & p_names, const Variant & p_value, bool * r_valid = __null) : void
+get_indexed(const Vector<StringName> & p_names, bool * r_valid = __null) const : Variant
+get_property_list(List<PropertyInfo> * p_list, bool p_reversed = false) const : void
+has_method(const StringName & p_method) const : bool
+get_method_list(List<MethodInfo> * p_list) const : void
+callv(const StringName & p_method, const Array & p_args) : Variant
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call_multilevel(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call_multilevel_reversed(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
+call_multilevel(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notification(int p_notification, bool p_reversed = false) : void
+to_string() : String
+getvar(const Variant & p_key, bool * r_valid = __null) const : Variant
+setvar(const Variant & p_key, const Variant & p_value, bool * r_valid = __null) : void
+set_script(const RefPtr & p_script) : void
+get_script() const : RefPtr
+has_meta(const String & p_name) const : bool
+set_meta(const String & p_name, const Variant & p_value) : void
+remove_meta(const String & p_name) : void
+get_meta(const String & p_name) const : Variant
+get_meta_list(List<String> * p_list) const : void
+set_edited(bool p_edited) : void
+is_edited() const : bool
+get_edited_version() const : uint32_t
+set_script_instance(ScriptInstance * p_instance) : void
+get_script_instance() const : ScriptInstance *
+set_script_and_instance(const RefPtr & p_script, ScriptInstance * p_instance) : void
+add_user_signal(const MethodInfo & p_signal) : void
+emit_signal(const StringName & p_name, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+emit_signal(const StringName & p_name, const Variant ** p_args, int p_argcount) : Error
+has_signal(const StringName & p_name) const : bool
+get_signal_list(List<MethodInfo> * p_signals) const : void
+get_signal_connection_list(const StringName & p_signal, List<Object::Connection> * p_connections) const : void
+get_all_signal_connections(List<Object::Connection> * p_connections) const : void
+get_persistent_signal_connection_count() const : int
+get_signals_connected_to_this(List<Object::Connection> * p_connections) const : void
+connect(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method, const Vector<Variant> & p_binds = Vector<Variant>(), uint32_t p_flags = 0) : Error
+disconnect(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method) : void
+is_connected(const StringName & p_signal, Object * p_to_object, const StringName & p_to_method) const : bool
+call_deferred(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+set_deferred(const StringName & p_property, const Variant & p_value) : void
+set_block_signals(bool p_block) : void
+is_blocking_signals() const : bool
+get_static_property_type(const StringName & p_property, bool * r_valid = __null) const : Variant::Type
+get_static_property_type_indexed(const Vector<StringName> & p_path, bool * r_valid = __null) const : Variant::Type
+get_translatable_strings(List<String> * p_strings) const : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+tr(const StringName & p_message) const : StringName
+is_queued_for_deletion() const : bool
+set_message_translation(bool p_enable) : void
+can_translate_messages() const : bool
+editor_set_section_unfold(const String & p_section, bool p_unfolded) : void
+editor_is_section_unfolded(const String & p_section) : bool
+editor_get_section_folding() const : const Set<String> &
+editor_clear_section_folding() : void
+get_script_instance_binding(int p_script_language_index) : void *
+has_script_instance_binding(int p_script_language_index) : bool
+set_script_instance_binding(int p_script_language_index, void * p_data) : void
+clear_internal_resource_paths() : void
+Object() : void
+~Object() : void
{static} +cast_to(Object * p_object) : T *
{static} +cast_to(const Object * p_object) : const T *
+_is_queued_for_deletion : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L745{_is_queued_for_deletion}]]]
+NOTIFICATION_POSTINITIALIZE : enum
+NOTIFICATION_PREDELETE : enum
}
enum "Object::ConnectFlags" as C_0000219886141561409828
enum C_0000219886141561409828 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L410{Object##ConnectFlags}]] {
CONNECT_DEFERRED
CONNECT_PERSIST
CONNECT_ONESHOT
CONNECT_REFERENCE_COUNTED
}
class "Object::Connection" as C_0001267214583673362755
class C_0001267214583673362755 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L418{Object##Connection}]] {
+operator<(const Object::Connection & p_conn) const : bool
+operator Variant() const : Variant
+Connection() : void
+Connection(const Variant & p_variant) : void
+source : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L420{source}]]]
+signal : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L421{signal}]]]
+target : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L422{target}]]]
+method : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L423{method}]]]
+flags : uint32_t [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L424{flags}]]]
+binds : Vector<Variant> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L425{binds}]]]
}
class "Object::Signal" as C_0000250357724807605097
class C_0000250357724807605097 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L448{Object##Signal}]] {
+Signal() : void
+user : MethodInfo [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L472{user}]]]
+slot_map : VMap<Object::Signal::Target,Object::Signal::Slot> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L473{slot_map}]]]
}
class "ObjectDB" as C_0002064336919270342687
class C_0002064336919270342687 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L773{ObjectDB}]] {
{static} +get_instance(ObjectID p_instance_id) : Object *
{static} +debug_objects(ObjectDB::DebugFunc p_func) : void
{static} +get_object_count() : int
{static} +instance_validate(Object * p_ptr) : bool
}
class "ObjectDB::ObjectPtrHash" as C_0001040552259499621557
class C_0001040552259499621557 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L775{ObjectDB##ObjectPtrHash}]] {
{static} +hash(const Object * p_obj) : uint32_t
}
class "GetTypeInfo<T *,typename EnableIf<TypeInherits<Object,T>>>" as C_0001201075309499995726
class C_0001201075309499995726 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L244{GetTypeInfo}]] {
{static} +get_class_info() : PropertyInfo
{static} +VARIANT_TYPE : const Variant::Type [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L245{VARIANT_TYPE}]]]
{static} +METADATA : const GodotTypeInfo::Metadata [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L246{METADATA}]]]
}
class "GetTypeInfo<const type-parameter-0-0 *,typename EnableIf<TypeInherits<Object,T>>>" as C_0002270819269735237405
class C_0002270819269735237405 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L253{GetTypeInfo}]] {
{static} +get_class_info() : PropertyInfo
{static} +VARIANT_TYPE : const Variant::Type [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L254{VARIANT_TYPE}]]]
{static} +METADATA : const GodotTypeInfo::Metadata [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/type_info.h#L255{METADATA}]]]
}
abstract "MethodBind" as C_0001725595510223069271
abstract C_0001725595510223069271 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L207{MethodBind}]] {
+get_default_arguments() const : Vector<Variant>
+get_default_argument_count() const : int
+has_default_argument(int p_arg) const : Variant
+get_default_argument(int p_arg) const : Variant
+get_argument_type(int p_argument) const : Variant::Type
+get_argument_info(int p_argument) const : PropertyInfo
+get_return_info() const : PropertyInfo
+set_argument_names(const Vector<StringName> & p_names) : void
+get_argument_names() const : Vector<StringName>
{abstract} +get_argument_meta(int p_arg) const = 0 : GodotTypeInfo::Metadata
+set_hint_flags(uint32_t p_hint) : void
+get_hint_flags() const : uint32_t
{abstract} +get_instance_class() const = 0 : String
+get_argument_count() const : int
{abstract} +call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) = 0 : Variant
{abstract} +ptrcall(Object * p_object, const void ** p_args, void * r_ret) = 0 : void
+get_name() const : StringName
+set_name(const StringName & p_name) : void
+get_method_id() const : int
+is_const() const : bool
+has_return() const : bool
+is_vararg() const : bool
+set_default_arguments(const Vector<Variant> & p_defargs) : void
+MethodBind() : void
+~MethodBind() : void
}
class "MethodBindVarArg<T>" as C_0000626842387047507019
class C_0000626842387047507019 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/method_bind.h#L301{MethodBindVarArg}]] {
+_gen_argument_type_info(int p_arg) const : PropertyInfo
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int ) const : GodotTypeInfo::Metadata
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+set_method_info(const MethodInfo & p_info, bool p_return_nil_is_variant) : void
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+set_method(MethodBindVarArg::NativeCall p_method) : void
+is_const() const : bool
+get_instance_class() const : String
+is_vararg() const : bool
+MethodBindVarArg<T>() : void
}
class "MethodBind0" as C_0002161264899189627575
class C_0002161264899189627575 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4{MethodBind0}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L8{type_name}]]]
+method : void (__UnexistingClass::*)() [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L9{method}]]]
}
class "MethodBind0R<R>" as C_0000514530488699023626
class C_0000514530488699023626 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L182{MethodBind0R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0R<R>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L186{type_name}]]]
+method : R (__UnexistingClass::*)() [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L187{method}]]]
}
class "MethodBind0C" as C_0001500902353747816170
class C_0001500902353747816170 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L360{MethodBind0C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0C() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L364{type_name}]]]
+method : void (__UnexistingClass::*)() const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L365{method}]]]
}
class "MethodBind0RC<R>" as C_0001463339540638256927
class C_0001463339540638256927 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L538{MethodBind0RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind0RC<R>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L542{type_name}]]]
+method : R (__UnexistingClass::*)() const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L543{method}]]]
}
class "MethodBind1<P1>" as C_0001770130608234301442
class C_0001770130608234301442 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L716{MethodBind1}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1<P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L720{type_name}]]]
+method : void (__UnexistingClass::*)(P1) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L721{method}]]]
}
class "MethodBind1R<R,P1>" as C_0001227602006568872099
class C_0001227602006568872099 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L902{MethodBind1R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1R<R, P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L906{type_name}]]]
+method : R (__UnexistingClass::*)(P1) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L907{method}]]]
}
class "MethodBind1C<P1>" as C_0000721345300172868993
class C_0000721345300172868993 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1088{MethodBind1C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1C<P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1092{type_name}]]]
+method : void (__UnexistingClass::*)(P1) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1093{method}]]]
}
class "MethodBind1RC<R,P1>" as C_0000779559418824132960
class C_0000779559418824132960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1274{MethodBind1RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind1RC<R, P1>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1278{type_name}]]]
+method : R (__UnexistingClass::*)(P1) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1279{method}]]]
}
class "MethodBind2<P1,P2>" as C_0001326581917102107425
class C_0001326581917102107425 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1460{MethodBind2}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2<P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1464{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1465{method}]]]
}
class "MethodBind2R<R,P1,P2>" as C_0000845455246171879191
class C_0000845455246171879191 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1654{MethodBind2R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2R<R, P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1658{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1659{method}]]]
}
class "MethodBind2C<P1,P2>" as C_0000081704011730798793
class C_0000081704011730798793 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1848{MethodBind2C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2C<P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1852{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L1853{method}]]]
}
class "MethodBind2RC<R,P1,P2>" as C_0002027329212022555569
class C_0002027329212022555569 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2042{MethodBind2RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind2RC<R, P1, P2>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2046{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2047{method}]]]
}
class "MethodBind3<P1,P2,P3>" as C_0000512545424965820103
class C_0000512545424965820103 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2236{MethodBind3}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3<P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2240{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2241{method}]]]
}
class "MethodBind3R<R,P1,P2,P3>" as C_0002087322448002339587
class C_0002087322448002339587 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2438{MethodBind3R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3R<R, P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2442{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2443{method}]]]
}
class "MethodBind3C<P1,P2,P3>" as C_0000031906668996487033
class C_0000031906668996487033 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2640{MethodBind3C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3C<P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2644{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2645{method}]]]
}
class "MethodBind3RC<R,P1,P2,P3>" as C_0001134043413451695381
class C_0001134043413451695381 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2842{MethodBind3RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind3RC<R, P1, P2, P3>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2846{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L2847{method}]]]
}
class "MethodBind4<P1,P2,P3,P4>" as C_0001212767095252394753
class C_0001212767095252394753 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3044{MethodBind4}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4<P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3048{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3049{method}]]]
}
class "MethodBind4R<R,P1,P2,P3,P4>" as C_0001038624653636336005
class C_0001038624653636336005 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3254{MethodBind4R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4R<R, P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3258{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3259{method}]]]
}
class "MethodBind4C<P1,P2,P3,P4>" as C_0000375613860790632263
class C_0000375613860790632263 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3464{MethodBind4C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4C<P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3468{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3469{method}]]]
}
class "MethodBind4RC<R,P1,P2,P3,P4>" as C_0001053911039767528095
class C_0001053911039767528095 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3674{MethodBind4RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind4RC<R, P1, P2, P3, P4>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3678{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3679{method}]]]
}
class "MethodBind5<P1,P2,P3,P4,P5>" as C_0000462780498821063561
class C_0000462780498821063561 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3884{MethodBind5}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5<P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3888{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L3889{method}]]]
}
class "MethodBind5R<R,P1,P2,P3,P4,P5>" as C_0000803203155573352820
class C_0000803203155573352820 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4102{MethodBind5R}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5R<R, P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4106{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4107{method}]]]
}
class "MethodBind5C<P1,P2,P3,P4,P5>" as C_0001728875246190146863
class C_0001728875246190146863 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4320{MethodBind5C}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5C<P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4324{type_name}]]]
+method : void (__UnexistingClass::*)(P1,P2,P3,P4,P5) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4325{method}]]]
}
class "MethodBind5RC<R,P1,P2,P3,P4,P5>" as C_0000319868049196089894
class C_0000319868049196089894 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4538{MethodBind5RC}]] {
+_gen_argument_type(int p_arg) const : Variant::Type
+get_argument_meta(int p_arg) const : GodotTypeInfo::Metadata
+_get_argument_type(int p_argument) const : Variant::Type
+_gen_argument_type_info(int p_argument) const : PropertyInfo
+get_instance_class() const : String
+call(Object * p_object, const Variant ** p_args, int p_arg_count, Variant::CallError & r_error) : Variant
+ptrcall(Object * p_object, const void ** p_args, void * r_ret) : void
+MethodBind5RC<R, P1, P2, P3, P4, P5>() : void
+type_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4542{type_name}]]]
+method : R (__UnexistingClass::*)(P1,P2,P3,P4,P5) const [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/method_bind.gen.inc#L4543{method}]]]
}
class "ClassDB" as C_0000104564426296396960
class C_0000104564426296396960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94{ClassDB}]] {
{static} +bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition & method_name, const Variant ** p_defs, int p_defcount) : MethodBind *
{static} +_add_class2(const StringName & p_class, const StringName & p_inherits) : void
{static} +get_class_list(List<StringName> * p_classes) : void
{static} +get_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_direct_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_parent_class_nocheck(const StringName & p_class) : StringName
{static} +get_parent_class(const StringName & p_class) : StringName
{static} +class_exists(const StringName & p_class) : bool
{static} +is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +can_instance(const StringName & p_class) : bool
{static} +instance(const StringName & p_class) : Object *
{static} +get_api_type(const StringName & p_class) : ClassDB::APIType
{static} +get_api_hash(ClassDB::APIType p_api) : uint64_t
{static} +add_signal(StringName p_class, const MethodInfo & p_signal) : void
{static} +has_signal(StringName p_class, StringName p_signal) : bool
{static} +get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool
{static} +get_signal_list(StringName p_class, List<MethodInfo> * p_signals, bool p_no_inheritance = false) : void
{static} +add_property_group(StringName p_class, const String & p_name, const String & p_prefix = "") : void
{static} +add_property(StringName p_class, const PropertyInfo & p_pinfo, const StringName & p_setter, const StringName & p_getter, int p_index = -1) : void
{static} +set_property_default_value(StringName p_class, const StringName & p_name, const Variant & p_default) : void
{static} +get_property_list(StringName p_class, List<PropertyInfo> * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void
{static} +set_property(Object * p_object, const StringName & p_property, const Variant & p_value, bool * r_valid = __null) : bool
{static} +get_property(Object * p_object, const StringName & p_property, Variant & r_value) : bool
{static} +has_property(const StringName & p_class, const StringName & p_property, bool p_no_inheritance = false) : bool
{static} +get_property_index(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : int
{static} +get_property_type(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : Variant::Type
{static} +get_property_setter(StringName p_class, const StringName & p_property) : StringName
{static} +get_property_getter(StringName p_class, const StringName & p_property) : StringName
{static} +has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool
{static} +set_method_flags(StringName p_class, StringName p_method, int p_flags) : void
{static} +get_method_list(StringName p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void
{static} +get_method(StringName p_class, StringName p_name) : MethodBind *
{static} +add_virtual_method(const StringName & p_class, const MethodInfo & p_method, bool p_virtual = true) : void
{static} +get_virtual_methods(const StringName & p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false) : void
{static} +bind_integer_constant(const StringName & p_class, const StringName & p_enum, const StringName & p_name, int p_constant) : void
{static} +get_integer_constant_list(const StringName & p_class, List<String> * p_constants, bool p_no_inheritance = false) : void
{static} +get_integer_constant(const StringName & p_class, const StringName & p_name, bool * p_success = __null) : int
{static} +get_integer_constant_enum(const StringName & p_class, const StringName & p_name, bool p_no_inheritance = false) : StringName
{static} +get_enum_list(const StringName & p_class, List<StringName> * p_enums, bool p_no_inheritance = false) : void
{static} +get_enum_constants(const StringName & p_class, const StringName & p_enum, List<StringName> * p_constants, bool p_no_inheritance = false) : void
{static} +class_get_default_property_value(const StringName & p_class, const StringName & p_property, bool * r_valid = __null) : Variant
{static} +get_category(const StringName & p_node) : StringName
{static} +set_class_enabled(StringName p_class, bool p_enable) : void
{static} +is_class_enabled(StringName p_class) : bool
{static} +is_class_exposed(StringName p_class) : bool
{static} +add_resource_base_extension(const StringName & p_extension, const StringName & p_class) : void
{static} +get_resource_base_extensions(List<String> * p_extensions) : void
{static} +get_extensions_for_type(const StringName & p_class, List<String> * p_extensions) : void
{static} +add_compatibility_class(const StringName & p_class, const StringName & p_fallback) : void
{static} +set_current_api(ClassDB::APIType p_api) : void
{static} +get_current_api() : ClassDB::APIType
{static} +cleanup_defaults() : void
{static} +cleanup() : void
{static} +creator() : class Object *
{static} +_add_class() : void
{static} +register_class() : void
{static} +register_virtual_class() : void
{static} +_create_ptr_func() : class Object *
{static} +register_custom_instance_class() : void
{static} +bind_method(N p_method_name, M p_method) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7) : class MethodBind *
{static} +bind_method(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7, const Variant & p_def8) : class MethodBind *
{static} +bind_vararg_method(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo & p_info = MethodInfo(), const Vector<Variant> & p_default_args = Vector<Variant>(), bool p_return_nil_is_variant = true) : class MethodBind *
{static} +lock : RWLock [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146{lock}]]]
{static} +classes : HashMap<StringName,ClassDB::ClassInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147{classes}]]]
{static} +resource_base_extensions : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148{resource_base_extensions}]]]
{static} +compat_classes : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149{compat_classes}]]]
{static} +current_api : ClassDB::APIType [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157{current_api}]]]
{static} +default_values : HashMap<StringName,HashMap<StringName,Variant>> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161{default_values}]]]
{static} +default_values_cached : Set<StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162{default_values_cached}]]]
}
class "Reference" as C_0001778859257025660860
class C_0001778859257025660860 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L39{Reference}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+is_referenced() const : bool
+init_ref() : bool
+reference() : bool
+unreference() : bool
+reference_get_count() const : int
+Reference() : void
+~Reference() : void
}
class "WeakRef" as C_0001213123647052694419
class C_0001213123647052694419 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/reference.h#L301{WeakRef}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_ref() const : Variant
+set_obj(Object * p_object) : void
+set_ref(const REF & p_ref) : void
+WeakRef() : void
}
class "FuncRef" as C_0001699661383862634192
class C_0001699661383862634192 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/func_ref.h#L36{FuncRef}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+call_func(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+call_funcv(const Array & p_args) : Variant
+set_instance(Object * p_obj) : void
+set_function(const StringName & p_func) : void
+get_function() : StringName
+is_valid() const : bool
+FuncRef() : void
}
class "Node" as C_0000218299049716973303
class C_0000218299049716973303 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L55{Node}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_name() const : StringName
+set_name(const String & p_name) : void
+add_child(Node * p_child, bool p_legible_unique_name = false) : void
+add_child_below_node(Node * p_node, Node * p_child, bool p_legible_unique_name = false) : void
+remove_child(Node * p_child) : void
+get_child_count() const : int
+get_child(int p_index) const : Node *
+has_node(const NodePath & p_path) const : bool
+get_node(const NodePath & p_path) const : Node *
+get_node_or_null(const NodePath & p_path) const : Node *
+find_node(const String & p_mask, bool p_recursive = true, bool p_owned = true) const : Node *
+has_node_and_resource(const NodePath & p_path) const : bool
+get_node_and_resource(const NodePath & p_path, RES & r_res, Vector<StringName> & r_leftover_subpath, bool p_last_is_property = true) const : Node *
+get_parent() const : Node *
+find_parent(const String & p_mask) const : Node *
+get_tree() const : SceneTree *
+is_inside_tree() const : bool
+is_a_parent_of(const Node * p_node) const : bool
+is_greater_than(const Node * p_node) const : bool
+get_path() const : NodePath
+get_path_to(const Node * p_node) const : NodePath
+find_common_parent_with(const Node * p_node) const : Node *
+add_to_group(const StringName & p_identifier, bool p_persistent = false) : void
+remove_from_group(const StringName & p_identifier) : void
+is_in_group(const StringName & p_identifier) const : bool
+get_groups(List<Node::GroupInfo> * p_groups) const : void
+get_persistent_group_count() const : int
+move_child(Node * p_child, int p_pos) : void
+raise() : void
+set_owner(Node * p_owner) : void
+get_owner() const : Node *
+get_owned_by(Node * p_by, List<Node *> * p_owned) : void
+remove_and_skip() : void
+get_index() const : int
+print_tree() : void
+print_tree_pretty() : void
+set_filename(const String & p_filename) : void
+get_filename() const : String
+set_editor_description(const String & p_editor_description) : void
+get_editor_description() const : String
+set_editable_instance(Node * p_node, bool p_editable) : void
+is_editable_instance(const Node * p_node) const : bool
+get_deepest_editable_node(Node * start_node) const : Node *
+propagate_notification(int p_notification) : void
+propagate_call(const StringName & p_method, const Array & p_args = Array(), const bool p_parent_first = false) : void
+set_physics_process(bool p_process) : void
+get_physics_process_delta_time() const : float
+is_physics_processing() const : bool
+set_process(bool p_idle_process) : void
+get_process_delta_time() const : float
+is_processing() const : bool
+set_physics_process_internal(bool p_process_internal) : void
+is_physics_processing_internal() const : bool
+set_process_internal(bool p_idle_process_internal) : void
+is_processing_internal() const : bool
+set_process_priority(int p_priority) : void
+get_process_priority() const : int
+set_process_input(bool p_enable) : void
+is_processing_input() const : bool
+set_process_unhandled_input(bool p_enable) : void
+is_processing_unhandled_input() const : bool
+set_process_unhandled_key_input(bool p_enable) : void
+is_processing_unhandled_key_input() const : bool
+get_position_in_parent() const : int
+duplicate(int p_flags = DUPLICATE_GROUPS | DUPLICATE_SIGNALS | DUPLICATE_SCRIPTS) const : Node *
+duplicate_and_reown(const Map<Node *,Node *> & p_reown_map) const : Node *
+duplicate_from_editor(Map<const Node *,Node *> & r_duplimap) const : Node *
+duplicate_from_editor(Map<const Node *,Node *> & r_duplimap, const Map<RES,RES> & p_resource_remap) const : Node *
+remap_node_resources(Node * p_node, const Map<RES,RES> & p_resource_remap) const : void
+remap_nested_resources(RES p_resource, const Map<RES,RES> & p_resource_remap) const : void
+set_scene_instance_state(const Ref<SceneState> & p_state) : void
+get_scene_instance_state() const : Ref<SceneState>
+set_scene_inherited_state(const Ref<SceneState> & p_state) : void
+get_scene_inherited_state() const : Ref<SceneState>
+set_scene_instance_load_placeholder(bool p_enable) : void
+get_scene_instance_load_placeholder() const : bool
{static} +make_binds(const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Vector<Variant>
+replace_by(Node * p_node, bool p_keep_data = false) : void
+set_pause_mode(Node::PauseMode p_mode) : void
+get_pause_mode() const : Node::PauseMode
+can_process() const : bool
+can_process_notification(int p_what) const : bool
+request_ready() : void
{static} +print_stray_nodes() : void
+validate_child_name(Node * p_child) : String
+queue_delete() : void
{static} +set_human_readable_collision_renaming(bool p_enabled) : void
{static} +init_node_hrcr() : void
+force_parent_owned() : void
+set_import_path(const NodePath & p_import_path) : void
+get_import_path() const : NodePath
+is_owned_by_parent() const : bool
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+clear_internal_tree_resource_paths() : void
+get_viewport() const : Viewport *
+get_configuration_warning() const : String
+update_configuration_warning() : void
+set_display_folded(bool p_folded) : void
+is_displayed_folded() const : bool
+set_network_master(int p_peer_id, bool p_recursive = true) : void
+get_network_master() const : int
+is_network_master() const : bool
+rpc_config(const StringName & p_method, MultiplayerAPI::RPCMode p_mode) : void
+rset_config(const StringName & p_property, MultiplayerAPI::RPCMode p_mode) : void
+rpc(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_unreliable(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_id(int p_peer_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rpc_unreliable_id(int p_peer_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+rset(const StringName & p_property, const Variant & p_value) : void
+rset_unreliable(const StringName & p_property, const Variant & p_value) : void
+rset_id(int p_peer_id, const StringName & p_property, const Variant & p_value) : void
+rset_unreliable_id(int p_peer_id, const StringName & p_property, const Variant & p_value) : void
+rpcp(int p_peer_id, bool p_unreliable, const StringName & p_method, const Variant ** p_arg, int p_argcount) : void
+rsetp(int p_peer_id, bool p_unreliable, const StringName & p_property, const Variant & p_value) : void
+get_multiplayer() const : Ref<MultiplayerAPI>
+get_custom_multiplayer() const : Ref<MultiplayerAPI>
+set_custom_multiplayer(Ref<MultiplayerAPI> p_multiplayer) : void
+get_node_rpc_mode(const StringName & p_method) : const Map<StringName,MultiplayerAPI::RPCMode>::Element *
+get_node_rset_mode(const StringName & p_property) : const Map<StringName,MultiplayerAPI::RPCMode>::Element *
+Node() : void
+~Node() : void
{static} +orphan_node_count : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/node.h#L78{orphan_node_count}]]]
+NOTIFICATION_ENTER_TREE : enum
+NOTIFICATION_EXIT_TREE : enum
+NOTIFICATION_MOVED_IN_PARENT : enum
+NOTIFICATION_READY : enum
+NOTIFICATION_PAUSED : enum
+NOTIFICATION_UNPAUSED : enum
+NOTIFICATION_PHYSICS_PROCESS : enum
+NOTIFICATION_PROCESS : enum
+NOTIFICATION_PARENTED : enum
+NOTIFICATION_UNPARENTED : enum
+NOTIFICATION_INSTANCED : enum
+NOTIFICATION_DRAG_BEGIN : enum
+NOTIFICATION_DRAG_END : enum
+NOTIFICATION_PATH_CHANGED : enum
+NOTIFICATION_INTERNAL_PROCESS : enum
+NOTIFICATION_INTERNAL_PHYSICS_PROCESS : enum
+NOTIFICATION_POST_ENTER_TREE : enum
+NOTIFICATION_WM_MOUSE_ENTER : enum
+NOTIFICATION_WM_MOUSE_EXIT : enum
+NOTIFICATION_WM_FOCUS_IN : enum
+NOTIFICATION_WM_FOCUS_OUT : enum
+NOTIFICATION_WM_QUIT_REQUEST : enum
+NOTIFICATION_WM_GO_BACK_REQUEST : enum
+NOTIFICATION_WM_UNFOCUS_REQUEST : enum
+NOTIFICATION_OS_MEMORY_WARNING : enum
+NOTIFICATION_TRANSLATION_CHANGED : enum
+NOTIFICATION_WM_ABOUT : enum
+NOTIFICATION_CRASH : enum
+NOTIFICATION_OS_IME_UPDATE : enum
+NOTIFICATION_APP_RESUMED : enum
+NOTIFICATION_APP_PAUSED : enum
}
class "ObjectRC" as C_0000933379568804427881
class C_0000933379568804427881 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/variant.h#L54{ObjectRC}]] {
+increment() : void
+decrement() : bool
+invalidate() : bool
+get_ptr() : Object *
+ObjectRC(Object * p_object) : void
+instance_id : const ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object_rc.h#L52{instance_id}]]]
}
abstract "ScriptInstance" as C_0001735438654351294549
abstract C_0001735438654351294549 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/object.h#L405{ScriptInstance}]] {
{abstract} +set(const StringName & p_name, const Variant & p_value) = 0 : bool
{abstract} +get(const StringName & p_name, Variant & r_ret) const = 0 : bool
{abstract} +get_property_list(List<PropertyInfo> * p_properties) const = 0 : void
{abstract} +get_property_type(const StringName & p_name, bool * r_is_valid = __null) const = 0 : Variant::Type
+get_owner() : Object *
+get_property_state(List<Pair<StringName,Variant>> & state) : void
{abstract} +get_method_list(List<MethodInfo> * p_list) const = 0 : void
{abstract} +has_method(const StringName & p_method) const = 0 : bool
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
{abstract} +call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) = 0 : Variant
+call_multilevel(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+call_multilevel(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
+call_multilevel_reversed(const StringName & p_method, const Variant ** p_args, int p_argcount) : void
{abstract} +notification(int p_notification) = 0 : void
+to_string(bool * r_valid) : String
+refcount_incremented() : void
+refcount_decremented() : bool
{abstract} +get_script() const = 0 : Ref<Script>
+is_placeholder() const : bool
+property_set_fallback(const StringName & p_name, const Variant & p_value, bool * r_valid) : void
+property_get_fallback(const StringName & p_name, bool * r_valid) : Variant
{abstract} +get_rpc_mode(const StringName & p_method) const = 0 : MultiplayerAPI::RPCMode
{abstract} +get_rset_mode(const StringName & p_variable) const = 0 : MultiplayerAPI::RPCMode
{abstract} +get_language() = 0 : ScriptLanguage *
+~ScriptInstance() : void
}
class "MessageQueue" as C_0000825523737350882091
class C_0000825523737350882091 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/message_queue.h#L37{MessageQueue}]] {
{static} +get_singleton() : MessageQueue *
+push_call(ObjectID p_id, const StringName & p_method, const Variant ** p_args, int p_argcount, bool p_show_error = false) : Error
+push_call(ObjectID p_id, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+push_notification(ObjectID p_id, int p_notification) : Error
+push_set(ObjectID p_id, const StringName & p_prop, const Variant & p_value) : Error
+push_call(Object * p_object, const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Error
+push_notification(Object * p_object, int p_notification) : Error
+push_set(Object * p_object, const StringName & p_prop, const Variant & p_value) : Error
+statistics() : void
+flush() : void
+is_flushing() const : bool
+get_max_buffer_usage() const : int
+MessageQueue() : void
+~MessageQueue() : void
}
class "Resource" as C_0001951177692366602790
class C_0001951177692366602790 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L48{Resource}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +register_custom_data_to_otdb() : void
+get_base_extension() const : String
+editor_can_reload_from_file() : bool
+reload_from_file() : void
+register_owner(Object * p_owner) : void
+unregister_owner(Object * p_owner) : void
+set_name(const String & p_name) : void
+get_name() const : String
+set_path(const String & p_path, bool p_take_over = false) : void
+get_path() const : String
+set_subindex(int p_sub_index) : void
+get_subindex() const : int
+duplicate(bool p_subresources = false) const : Ref<Resource>
+duplicate_for_local_scene(Node * p_for_scene, Map<Ref<Resource>,Ref<Resource>> & remap_cache) : Ref<Resource>
+configure_for_local_scene(Node * p_for_scene, Map<Ref<Resource>,Ref<Resource>> & remap_cache) : void
+set_local_to_scene(bool p_enable) : void
+is_local_to_scene() const : bool
+setup_local_to_scene() : void
+get_local_scene() const : Node *
+hash_edited_version() const : uint32_t
+set_last_modified_time(uint64_t p_time) : void
+get_last_modified_time() const : uint64_t
+set_import_last_modified_time(uint64_t p_time) : void
+get_import_last_modified_time() const : uint64_t
+set_import_path(const String & p_path) : void
+get_import_path() const : String
+set_as_translation_remapped(bool p_remapped) : void
+is_translation_remapped() const : bool
+get_rid() const : RID
+set_id_for_path(const String & p_path, int p_id) : void
+get_id_for_path(const String & p_path) const : int
+Resource() : void
+~Resource() : void
{static} +_get_local_scene_func : Node *(*)() [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/resource.h#L89{_get_local_scene_func}]]]
}
abstract "Script" as C_0001608678623693693822
abstract C_0001608678623693693822 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L99{Script}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_save_class() const : String
{abstract} +can_instance() const = 0 : bool
{abstract} +get_base_script() const = 0 : Ref<Script>
{abstract} +get_instance_base_type() const = 0 : StringName
{abstract} +instance_create(Object * p_this) = 0 : ScriptInstance *
+placeholder_instance_create(Object * p_this) : PlaceHolderScriptInstance *
{abstract} +instance_has(const Object * p_this) const = 0 : bool
{abstract} +has_source_code() const = 0 : bool
{abstract} +get_source_code() const = 0 : String
{abstract} +set_source_code(const String & p_code) = 0 : void
{abstract} +reload(bool p_keep_state = false) = 0 : Error
{abstract} +has_method(const StringName & p_method) const = 0 : bool
{abstract} +get_method_info(const StringName & p_method) const = 0 : MethodInfo
{abstract} +is_tool() const = 0 : bool
{abstract} +is_valid() const = 0 : bool
{abstract} +get_language() const = 0 : ScriptLanguage *
{abstract} +has_script_signal(const StringName & p_signal) const = 0 : bool
{abstract} +get_script_signal_list(List<MethodInfo> * r_signals) const = 0 : void
{abstract} +get_property_default_value(const StringName & p_property, Variant & r_value) const = 0 : bool
+update_exports() : void
{abstract} +get_script_method_list(List<MethodInfo> * p_list) const = 0 : void
{abstract} +get_script_property_list(List<PropertyInfo> * p_list) const = 0 : void
+get_member_line(const StringName & p_member) const : int
+get_constants(Map<StringName,Variant> * p_constants) : void
+get_members(Set<StringName> * p_constants) : void
+is_placeholder_fallback_enabled() const : bool
+Script() : void
}
abstract "ScriptLanguage" as C_0002110837736536862228
abstract C_0002110837736536862228 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L249{ScriptLanguage}]] {
{abstract} +get_name() const = 0 : String
{abstract} +init() = 0 : void
{abstract} +get_type() const = 0 : String
{abstract} +get_extension() const = 0 : String
{abstract} +execute_file(const String & p_path) = 0 : Error
{abstract} +finish() = 0 : void
{abstract} +get_reserved_words(List<String> * p_words) const = 0 : void
{abstract} +get_comment_delimiters(List<String> * p_delimiters) const = 0 : void
{abstract} +get_string_delimiters(List<String> * p_delimiters) const = 0 : void
{abstract} +get_template(const String & p_class_name, const String & p_base_class_name) const = 0 : Ref<Script>
+make_template(const String & p_class_name, const String & p_base_class_name, Ref<Script> & p_script) : void
+is_using_templates() : bool
{abstract} +validate(const String & p_script, int & r_line_error, int & r_col_error, String & r_test_error, const String & p_path = "", List<String> * r_functions = __null, List<ScriptLanguage::Warning> * r_warnings = __null, Set<int> * r_safe_lines = __null) const = 0 : bool
+validate_path(const String & p_path) const : String
{abstract} +create_script() const = 0 : Script *
{abstract} +has_named_classes() const = 0 : bool
{abstract} +supports_builtin_mode() const = 0 : bool
+can_inherit_from_file() : bool
{abstract} +find_function(const String & p_function, const String & p_code) const = 0 : int
{abstract} +make_function(const String & p_class, const String & p_name, const PoolStringArray & p_args) const = 0 : String
+open_in_external_editor(const Ref<Script> & p_script, int p_line, int p_col) : Error
+overrides_external_editor() : bool
+complete_code(const String & p_code, const String & p_path, Object * p_owner, List<ScriptCodeCompletionOption> * r_options, bool & r_force, String & r_call_hint) : Error
+lookup_code(const String & p_code, const String & p_symbol, const String & p_path, Object * p_owner, ScriptLanguage::LookupResult & r_result) : Error
{abstract} +auto_indent_code(String & p_code, int p_from_line, int p_to_line) const = 0 : void
{abstract} +add_global_constant(const StringName & p_variable, const Variant & p_value) = 0 : void
+add_named_global_constant(const StringName & p_name, const Variant & p_value) : void
+remove_named_global_constant(const StringName & p_name) : void
+thread_enter() : void
+thread_exit() : void
{abstract} +debug_get_error() const = 0 : String
{abstract} +debug_get_stack_level_count() const = 0 : int
{abstract} +debug_get_stack_level_line(int p_level) const = 0 : int
{abstract} +debug_get_stack_level_function(int p_level) const = 0 : String
{abstract} +debug_get_stack_level_source(int p_level) const = 0 : String
{abstract} +debug_get_stack_level_locals(int p_level, List<String> * p_locals, List<Variant> * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void
{abstract} +debug_get_stack_level_members(int p_level, List<String> * p_members, List<Variant> * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void
+debug_get_stack_level_instance(int p_level) : ScriptInstance *
{abstract} +debug_get_globals(List<String> * p_globals, List<Variant> * p_values, int p_max_subitems = -1, int p_max_depth = -1) = 0 : void
{abstract} +debug_parse_stack_level_expression(int p_level, const String & p_expression, int p_max_subitems = -1, int p_max_depth = -1) = 0 : String
+debug_get_current_stack_info() : Vector<ScriptLanguage::StackInfo>
{abstract} +reload_all_scripts() = 0 : void
{abstract} +reload_tool_script(const Ref<Script> & p_script, bool p_soft_reload) = 0 : void
{abstract} +get_recognized_extensions(List<String> * p_extensions) const = 0 : void
{abstract} +get_public_functions(List<MethodInfo> * p_functions) const = 0 : void
{abstract} +get_public_constants(List<Pair<String,Variant>> * p_constants) const = 0 : void
{abstract} +profiling_start() = 0 : void
{abstract} +profiling_stop() = 0 : void
{abstract} +profiling_get_accumulated_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int
{abstract} +profiling_get_frame_data(ScriptLanguage::ProfilingInfo * p_info_arr, int p_info_max) = 0 : int
+alloc_instance_binding_data(Object * p_object) : void *
+free_instance_binding_data(void * p_data) : void
+refcount_incremented_instance_binding(Object * p_object) : void
+refcount_decremented_instance_binding(Object * p_object) : bool
+frame() : void
+handles_global_class_type(const String & p_type) const : bool
+get_global_class_name(const String & p_path, String * r_base_type = __null, String * r_icon_path = __null) const : String
+~ScriptLanguage() : void
}
class "PlaceHolderScriptInstance" as C_0001649884439586022807
class C_0001649884439586022807 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/script_language.h#L374{PlaceHolderScriptInstance}]] {
+set(const StringName & p_name, const Variant & p_value) : bool
+get(const StringName & p_name, Variant & r_ret) const : bool
+get_property_list(List<PropertyInfo> * p_properties) const : void
+get_property_type(const StringName & p_name, bool * r_is_valid = __null) const : Variant::Type
+get_method_list(List<MethodInfo> * p_list) const : void
+has_method(const StringName & p_method) const : bool
+call(const StringName & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : Variant
+call(const StringName & p_method, const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+notification(int p_notification) : void
+get_script() const : Ref<Script>
+get_language() : ScriptLanguage *
+get_owner() : Object *
+update(const List<PropertyInfo> & p_properties, const Map<StringName,Variant> & p_values) : void
+is_placeholder() const : bool
+property_set_fallback(const StringName & p_name, const Variant & p_value, bool * r_valid = __null) : void
+property_get_fallback(const StringName & p_name, bool * r_valid = __null) : Variant
+get_rpc_mode(const StringName & p_method) const : MultiplayerAPI::RPCMode
+get_rset_mode(const StringName & p_variable) const : MultiplayerAPI::RPCMode
+PlaceHolderScriptInstance(ScriptLanguage * p_language, Ref<Script> p_script, Object * p_owner) : void
+~PlaceHolderScriptInstance() : void
}
class "MainLoop" as C_0000970940027123558604
class C_0000970940027123558604 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/main_loop.h#L38{MainLoop}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+input_event(const Ref<InputEvent> & p_event) : void
+input_text(const String & p_text) : void
+init() : void
+iteration(float p_time) : bool
+idle(float p_time) : bool
+finish() : void
+drop_files(const Vector<String> & p_files, int p_from_screen = 0) : void
+global_menu_action(const Variant & p_id, const Variant & p_meta) : void
+set_init_script(const Ref<Script> & p_init_script) : void
+MainLoop() : void
+~MainLoop() : void
+NOTIFICATION_WM_MOUSE_ENTER : enum
+NOTIFICATION_WM_MOUSE_EXIT : enum
+NOTIFICATION_WM_FOCUS_IN : enum
+NOTIFICATION_WM_FOCUS_OUT : enum
+NOTIFICATION_WM_QUIT_REQUEST : enum
+NOTIFICATION_WM_GO_BACK_REQUEST : enum
+NOTIFICATION_WM_UNFOCUS_REQUEST : enum
+NOTIFICATION_OS_MEMORY_WARNING : enum
+NOTIFICATION_TRANSLATION_CHANGED : enum
+NOTIFICATION_WM_ABOUT : enum
+NOTIFICATION_CRASH : enum
+NOTIFICATION_OS_IME_UPDATE : enum
+NOTIFICATION_APP_RESUMED : enum
+NOTIFICATION_APP_PAUSED : enum
}
class "Engine::Singleton" as C_0001823345232236209470
class C_0001823345232236209470 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L42{Engine##Singleton}]] {
+Singleton(const StringName & p_name = StringName(), Object * p_ptr = __null) : void
+name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L43{name}]]]
+ptr : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/engine.h#L44{ptr}]]]
}
abstract "OS" as C_0000361490529588572420
abstract C_0000361490529588572420 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L45{OS}]] {
{static} +get_singleton() : OS *
+global_menu_add_item(const String & p_menu, const String & p_label, const Variant & p_signal, const Variant & p_meta) : void
+global_menu_add_separator(const String & p_menu) : void
+global_menu_remove_item(const String & p_menu, int p_idx) : void
+global_menu_clear(const String & p_menu) : void
+print_error(const char * p_function, const char * p_file, int p_line, const char * p_code, const char * p_rationale, Logger::ErrorType p_type = Logger::ERR_ERROR) : void
+print(const char * p_format) : void
+printerr(const char * p_format) : void
{abstract} +alert(const String & p_alert, const String & p_title = "ALERT!") = 0 : void
{abstract} +get_stdin_string(bool p_block = true) = 0 : String
+set_mouse_mode(OS::MouseMode p_mode) : void
+get_mouse_mode() const : OS::MouseMode
+warp_mouse_position(const Point2 & p_to) : void
{abstract} +get_mouse_position() const = 0 : Point2
{abstract} +get_mouse_button_state() const = 0 : int
{abstract} +set_window_title(const String & p_title) = 0 : void
+set_window_mouse_passthrough(const PoolVector2Array & p_region) : void
+set_clipboard(const String & p_text) : void
+get_clipboard() const : String
{abstract} +set_video_mode(const OS::VideoMode & p_video_mode, int p_screen = 0) = 0 : void
{abstract} +get_video_mode(int p_screen = 0) const = 0 : OS::VideoMode
{abstract} +get_fullscreen_mode_list(List<OS::VideoMode> * p_list, int p_screen = 0) const = 0 : void
+get_video_driver_count() const : int
+get_video_driver_name(int p_driver) const : const char *
{abstract} +get_current_video_driver() const = 0 : int
+get_audio_driver_count() const : int
+get_audio_driver_name(int p_driver) const : const char *
+get_tablet_driver_count() const : int
+get_tablet_driver_name(int p_driver) const : String
+get_current_tablet_driver() const : String
+set_current_tablet_driver(const String & p_driver) : void
+get_connected_midi_inputs() : PoolStringArray
+open_midi_inputs() : void
+close_midi_inputs() : void
+get_screen_count() const : int
+get_current_screen() const : int
+set_current_screen(int p_screen) : void
+get_screen_position(int p_screen = -1) const : Point2
+get_screen_size(int p_screen = -1) const : Size2
+get_screen_dpi(int p_screen = -1) const : int
+get_screen_scale(int p_screen = -1) const : float
+get_screen_max_scale() const : float
+get_window_position() const : Point2
+set_window_position(const Point2 & p_position) : void
+get_max_window_size() const : Size2
+get_min_window_size() const : Size2
{abstract} +get_window_size() const = 0 : Size2
+get_real_window_size() const : Size2
+set_min_window_size(const Size2 p_size) : void
+set_max_window_size(const Size2 p_size) : void
+set_window_size(const Size2 p_size) : void
+set_window_fullscreen(bool p_enabled) : void
+is_window_fullscreen() const : bool
+set_window_resizable(bool p_enabled) : void
+is_window_resizable() const : bool
+set_window_minimized(bool p_enabled) : void
+is_window_minimized() const : bool
+set_window_maximized(bool p_enabled) : void
+is_window_maximized() const : bool
+set_window_always_on_top(bool p_enabled) : void
+is_window_always_on_top() const : bool
+is_window_focused() const : bool
+set_console_visible(bool p_enabled) : void
+is_console_visible() const : bool
+request_attention() : void
+center_window() : void
+get_native_handle(int p_handle_type) : void *
+get_window_safe_area() const : Rect2
+set_borderless_window(bool p_borderless) : void
+get_borderless_window() : bool
+get_window_per_pixel_transparency_enabled() const : bool
+set_window_per_pixel_transparency_enabled(bool p_enabled) : void
+set_ime_active(const bool p_active) : void
+set_ime_position(const Point2 & p_pos) : void
+get_ime_selection() const : Point2
+get_ime_text() const : String
+open_dynamic_library(const String p_path, void *& p_library_handle, bool p_also_set_library_path = false) : Error
+close_dynamic_library(void * p_library_handle) : Error
+get_dynamic_library_symbol_handle(void * p_library_handle, const String p_name, void *& p_symbol_handle, bool p_optional = false) : Error
+set_keep_screen_on(bool p_enabled) : void
+is_keep_screen_on() const : bool
+set_low_processor_usage_mode(bool p_enabled) : void
+is_in_low_processor_usage_mode() const : bool
+set_low_processor_usage_mode_sleep_usec(int p_usec) : void
+get_low_processor_usage_mode_sleep_usec() const : int
+get_executable_path() const : String
{abstract} +execute(const String & p_path, const List<String> & p_arguments, bool p_blocking = true, OS::ProcessID * r_child_id = __null, String * r_pipe = __null, int * r_exitcode = __null, bool read_stderr = false, Mutex * p_pipe_mutex = __null) = 0 : Error
{abstract} +kill(const OS::ProcessID & p_pid) = 0 : Error
+get_process_id() const : int
+vibrate_handheld(int p_duration_ms = 500) : void
+shell_open(String p_uri) : Error
+set_cwd(const String & p_cwd) : Error
{abstract} +has_environment(const String & p_var) const = 0 : bool
{abstract} +get_environment(const String & p_var) const = 0 : String
{abstract} +set_environment(const String & p_var, const String & p_value) const = 0 : bool
{abstract} +get_name() const = 0 : String
+get_cmdline_args() const : List<String>
+get_model_name() const : String
+ensure_user_data_dir() : void
{abstract} +get_main_loop() const = 0 : MainLoop *
+yield() : void
{abstract} +get_date(bool local = false) const = 0 : OS::Date
{abstract} +get_time(bool local = false) const = 0 : OS::Time
{abstract} +get_time_zone_info() const = 0 : OS::TimeZoneInfo
+get_iso_date_time(bool local = false) const : String
+get_unix_time() const : uint64_t
+get_system_time_secs() const : uint64_t
+get_system_time_msecs() const : uint64_t
{abstract} +delay_usec(uint32_t p_usec) const = 0 : void
+add_frame_delay(bool p_can_draw) : void
{abstract} +get_ticks_usec() const = 0 : uint64_t
+get_ticks_msec() const : uint32_t
+get_splash_tick_msec() const : uint64_t
{abstract} +can_draw() const = 0 : bool
+is_userfs_persistent() const : bool
+is_stdout_verbose() const : bool
+is_stdout_debug_enabled() const : bool
+disable_crash_handler() : void
+is_disable_crash_handler() const : bool
+initialize_debugging() : void
+has_virtual_keyboard() const : bool
+show_virtual_keyboard(const String & p_existing_text, const Rect2 & p_screen_rect = Rect2(), bool p_multiline = false, int p_max_input_length = -1, int p_cursor_start = -1, int p_cursor_end = -1) : void
+hide_virtual_keyboard() : void
+get_virtual_keyboard_height() const : int
+set_cursor_shape(OS::CursorShape p_shape) : void
+get_cursor_shape() const : OS::CursorShape
+set_custom_mouse_cursor(const RES & p_cursor, OS::CursorShape p_shape, const Vector2 & p_hotspot) : void
+get_swap_ok_cancel() : bool
+dump_memory_to_file(const char * p_file) : void
+dump_resources_to_file(const char * p_file) : void
+print_resources_in_use(bool p_short = false) : void
+print_all_resources(String p_to_file = "") : void
+get_static_memory_usage() const : uint64_t
+get_static_memory_peak_usage() const : uint64_t
+get_dynamic_memory_usage() const : uint64_t
+get_free_static_memory() const : uint64_t
+get_render_thread_mode() const : OS::RenderThreadMode
+get_locale() const : String
+get_safe_dir_name(const String & p_dir_name, bool p_allow_dir_separator = false) const : String
+get_godot_dir_name() const : String
+get_data_path() const : String
+get_config_path() const : String
+get_cache_path() const : String
+get_bundle_resource_dir() const : String
+get_user_data_dir() const : String
+get_resource_dir() const : String
+get_system_dir(OS::SystemDir p_dir, bool p_shared_storage = true) const : String
+move_to_trash(const String & p_path) : Error
+set_no_window_mode(bool p_enable) : void
+is_no_window_mode_enabled() const : bool
+has_touchscreen_ui_hint() const : bool
+set_screen_orientation(OS::ScreenOrientation p_orientation) : void
+get_screen_orientation() const : OS::ScreenOrientation
+get_screen_orientation_from_string(const String & p_orientation) const : OS::ScreenOrientation
+enable_for_stealing_focus(OS::ProcessID pid) : void
+move_window_to_foreground() : void
+debug_break() : void
+release_rendering_thread() : void
+make_rendering_thread() : void
+swap_buffers() : void
+set_native_icon(const String & p_filename) : void
+set_icon(const Ref<Image> & p_icon) : void
+get_exit_code() const : int
+set_exit_code(int p_code) : void
+is_custom_exit_code() : bool
+get_processor_count() const : int
+get_unique_id() const : String
+native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error
+native_video_is_playing() const : bool
+native_video_pause() : void
+native_video_unpause() : void
+native_video_stop() : void
+can_use_threads() const : bool
+dialog_show(String p_title, String p_description, Vector<String> p_buttons, Object * p_obj, String p_callback) : Error
+dialog_input_text(String p_title, String p_description, String p_partial, Object * p_obj, String p_callback) : Error
+get_latin_keyboard_variant() const : OS::LatinKeyboardVariant
+keyboard_get_layout_count() const : int
+keyboard_get_current_layout() const : int
+keyboard_set_current_layout(int p_index) : void
+keyboard_get_layout_language(int p_index) const : String
+keyboard_get_layout_name(int p_index) const : String
+is_joy_known(int p_device) : bool
+get_joy_guid(int p_device) const : String
+set_context(int p_context) : void
+set_use_vsync(bool p_enable) : void
+is_vsync_enabled() const : bool
+_set_use_vsync(bool p_enable) : void
+set_vsync_via_compositor(bool p_enable) : void
+is_vsync_via_compositor_enabled() const : bool
+get_power_state() : OS::PowerState
+get_power_seconds_left() : int
+get_power_percent_left() : int
+force_process_input() : void
+has_feature(const String & p_feature) : bool
+set_has_server_feature_callback(OS::HasServerFeatureCallback p_callback) : void
+is_layered_allowed() const : bool
+is_hidpi_allowed() const : bool
+set_restart_on_exit(bool p_restart, const List<String> & p_restart_arguments) : void
+is_restart_on_exit_set() const : bool
+get_restart_on_exit_arguments() const : List<String>
+request_permission(const String & p_name) : bool
+request_permissions() : bool
+get_granted_permissions() const : Vector<String>
+process_and_drop_events() : void
+OS() : void
+~OS() : void
{static} +switch_vsync_function : OS::SwitchVSyncCallbackInThread [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/os.h#L544{switch_vsync_function}]]]
}
class "TranslationServer" as C_0001485048025194488343
class C_0001485048025194488343 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/translation.h#L67{TranslationServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : TranslationServer *
+set_enabled(bool p_enabled) : void
+is_enabled() const : bool
+set_locale(const String & p_locale) : void
+get_locale() const : String
+get_locale_name(const String & p_locale) const : String
+get_loaded_locales() const : Array
+add_translation(const Ref<Translation> & p_translation) : void
+remove_translation(const Ref<Translation> & p_translation) : void
+translate(const StringName & p_message) const : StringName
{static} +get_all_locales() : Vector<String>
{static} +get_all_locale_names() : Vector<String>
{static} +is_locale_valid(const String & p_locale) : bool
{static} +standardize_locale(const String & p_locale) : String
{static} +get_language_code(const String & p_locale) : String
+set_tool_translation(const Ref<Translation> & p_translation) : void
+tool_translate(const StringName & p_message) const : StringName
+setup() : void
+clear() : void
+load_translations() : void
+TranslationServer() : void
}
class "_ObjectDebugLock" as C_0000132048052014479231
class C_0000132048052014479231 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L45{_ObjectDebugLock}]] {
+_ObjectDebugLock(Object * p_obj) : void
+~_ObjectDebugLock() : void
+obj : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L47{obj}]]]
}
class "_ObjectSignalDisconnectData" as C_0000115801560197752094
class C_0000115801560197752094 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1147{_ObjectSignalDisconnectData}]] {
+signal : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1149{signal}]]]
+target : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1150{target}]]]
+method : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/object.cpp#L1151{method}]]]
}
class "ProjectSettings" as C_0000066148521405667716
class C_0000066148521405667716 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L38{ProjectSettings}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+set_setting(const String & p_setting, const Variant & p_value) : void
+get_setting(const String & p_setting) const : Variant
+has_setting(String p_var) const : bool
+localize_path(const String & p_path) const : String
+globalize_path(const String & p_path) const : String
+set_initial_value(const String & p_name, const Variant & p_value) : void
+set_restart_if_changed(const String & p_name, bool p_restart) : void
+property_can_revert(const String & p_name) : bool
+property_get_revert(const String & p_name) : Variant
+get_resource_path() const : String
{static} +get_singleton() : ProjectSettings *
+clear(const String & p_name) : void
+get_order(const String & p_name) const : int
+set_order(const String & p_name, int p_order) : void
+set_builtin_order(const String & p_name) : void
+setup(const String & p_path, const String & p_main_pack, bool p_upwards = false) : Error
+save_custom(const String & p_path = "", const ProjectSettings::CustomMap & p_custom = CustomMap(), const Vector<String> & p_custom_features = Vector<String>(), bool p_merge_with_current = true) : Error
+save() : Error
+set_custom_property_info(const String & p_prop, const PropertyInfo & p_info) : void
+get_custom_property_info() const : const Map<StringName,PropertyInfo> &
+get_last_saved_time() : uint64_t
+get_optimizer_presets() const : Vector<String>
+get_input_presets() const : List<String>
+set_disable_feature_overrides(bool p_disable) : void
+is_using_datapack() const : bool
+set_registering_order(bool p_enable) : void
+has_custom_feature(const String & p_feature) const : bool
+ProjectSettings() : void
+~ProjectSettings() : void
+NO_BUILTIN_ORDER_BASE : enum
{static} +CONFIG_VERSION : const int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/project_settings.h#L117{CONFIG_VERSION}]]]
}
abstract "IP" as C_0001191393512042218074
abstract C_0001191393512042218074 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/io/ip.h#L39{IP}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+resolve_hostname(const String & p_hostname, IP::Type p_type = TYPE_ANY) : IP_Address
+resolve_hostname_queue_item(const String & p_hostname, IP::Type p_type = TYPE_ANY) : IP::ResolverID
+get_resolve_item_status(IP::ResolverID p_id) const : IP::ResolverStatus
+get_resolve_item_address(IP::ResolverID p_id) const : IP_Address
+get_local_addresses(List<IP_Address> * r_addresses) const : void
{abstract} +get_local_interfaces(Map<String,IP::Interface_Info> * r_interfaces) const = 0 : void
+erase_resolve_item(IP::ResolverID p_id) : void
+clear_cache(const String & p_hostname = "") : void
{static} +get_singleton() : IP *
{static} +create() : IP *
+IP() : void
+~IP() : void
+RESOLVER_MAX_QUERIES : enum
+RESOLVER_INVALID_ID : enum
}
class "Expression" as C_0000425668537377496256
class C_0000425668537377496256 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/expression.h#L36{Expression}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_func_argument_count(Expression::BuiltinFunc p_func) : int
{static} +get_func_name(Expression::BuiltinFunc p_func) : String
{static} +exec_func(Expression::BuiltinFunc p_func, const Variant ** p_inputs, Variant * r_return, Variant::CallError & r_error, String & r_error_str) : void
{static} +find_function(const String & p_string) : Expression::BuiltinFunc
+parse(const String & p_expression, const Vector<String> & p_input_names = Vector<String>()) : Error
+execute(Array p_inputs, Object * p_base = __null, bool p_show_error = true) : Variant
+has_execute_failed() const : bool
+get_error_text() const : String
+Expression() : void
+~Expression() : void
}
class "_ResourceLoader" as C_0001197720528033242618
class C_0001197720528033242618 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L45{_ResourceLoader}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _ResourceLoader *
+load_interactive(const String & p_path, const String & p_type_hint = "") : Ref<ResourceInteractiveLoader>
+load(const String & p_path, const String & p_type_hint = "", bool p_no_cache = false) : RES
+get_recognized_extensions_for_type(const String & p_type) : PoolVector<String>
+set_abort_on_missing_resources(bool p_abort) : void
+get_dependencies(const String & p_path) : PoolStringArray
+has(const String & p_path) : bool
+has_cached(const String & p_path) : bool
+exists(const String & p_path, const String & p_type_hint = "") : bool
+_ResourceLoader() : void
}
class "_ResourceSaver" as C_0001130773750498288283
class C_0001130773750498288283 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L68{_ResourceSaver}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _ResourceSaver *
+save(const String & p_path, const RES & p_resource, _ResourceSaver::SaverFlags p_flags) : Error
+get_recognized_extensions(const RES & p_resource) : PoolVector<String>
+_ResourceSaver() : void
}
class "_OS" as C_0000790752023609648644
class C_0000790752023609648644 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L99{_OS}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+global_menu_add_item(const String & p_menu, const String & p_label, const Variant & p_signal, const Variant & p_meta) : void
+global_menu_add_separator(const String & p_menu) : void
+global_menu_remove_item(const String & p_menu, int p_idx) : void
+global_menu_clear(const String & p_menu) : void
+get_mouse_position() const : Point2
+set_window_title(const String & p_title) : void
+set_window_mouse_passthrough(const PoolVector2Array & p_region) : void
+get_mouse_button_state() const : int
+set_clipboard(const String & p_text) : void
+get_clipboard() const : String
+set_video_mode(const Size2 & p_size, bool p_fullscreen, bool p_resizeable, int p_screen = 0) : void
+get_video_mode(int p_screen = 0) const : Size2
+is_video_mode_fullscreen(int p_screen = 0) const : bool
+is_video_mode_resizable(int p_screen = 0) const : bool
+get_fullscreen_mode_list(int p_screen = 0) const : Array
+get_video_driver_count() const : int
+get_video_driver_name(_OS::VideoDriver p_driver) const : String
+get_current_video_driver() const : _OS::VideoDriver
+get_audio_driver_count() const : int
+get_audio_driver_name(int p_driver) const : String
+get_connected_midi_inputs() : PoolStringArray
+open_midi_inputs() : void
+close_midi_inputs() : void
+get_screen_count() const : int
+get_current_screen() const : int
+set_current_screen(int p_screen) : void
+get_screen_position(int p_screen = -1) const : Point2
+get_screen_size(int p_screen = -1) const : Size2
+get_screen_dpi(int p_screen = -1) const : int
+get_screen_scale(int p_screen = -1) const : float
+get_screen_max_scale() const : float
+get_window_position() const : Point2
+set_window_position(const Point2 & p_position) : void
+get_max_window_size() const : Size2
+get_min_window_size() const : Size2
+get_window_size() const : Size2
+get_real_window_size() const : Size2
+get_window_safe_area() const : Rect2
+set_max_window_size(const Size2 & p_size) : void
+set_min_window_size(const Size2 & p_size) : void
+set_window_size(const Size2 & p_size) : void
+set_window_fullscreen(bool p_enabled) : void
+is_window_fullscreen() const : bool
+set_window_resizable(bool p_enabled) : void
+is_window_resizable() const : bool
+set_window_minimized(bool p_enabled) : void
+is_window_minimized() const : bool
+set_window_maximized(bool p_enabled) : void
+is_window_maximized() const : bool
+set_window_always_on_top(bool p_enabled) : void
+is_window_always_on_top() const : bool
+is_window_focused() const : bool
+request_attention() : void
+center_window() : void
+move_window_to_foreground() : void
+get_native_handle(_OS::HandleType p_handle_type) : int64_t
+set_borderless_window(bool p_borderless) : void
+get_borderless_window() const : bool
+get_window_per_pixel_transparency_enabled() const : bool
+set_window_per_pixel_transparency_enabled(bool p_enabled) : void
+set_ime_active(const bool p_active) : void
+set_ime_position(const Point2 & p_pos) : void
+get_ime_selection() const : Point2
+get_ime_text() const : String
+native_video_play(String p_path, float p_volume, String p_audio_track, String p_subtitle_track) : Error
+native_video_is_playing() : bool
+native_video_pause() : void
+native_video_unpause() : void
+native_video_stop() : void
+set_low_processor_usage_mode(bool p_enabled) : void
+is_in_low_processor_usage_mode() const : bool
+set_low_processor_usage_mode_sleep_usec(int p_usec) : void
+get_low_processor_usage_mode_sleep_usec() const : int
+get_executable_path() const : String
+execute(const String & p_path, const Vector<String> & p_arguments, bool p_blocking = true, Array p_output = = Array(), bool p_read_stderr = false) : int
+kill(int p_pid) : Error
+shell_open(String p_uri) : Error
+get_process_id() const : int
+has_environment(const String & p_var) const : bool
+get_environment(const String & p_var) const : String
+set_environment(const String & p_var, const String & p_value) const : bool
+get_name() const : String
+get_cmdline_args() : Vector<String>
+get_locale() const : String
+get_latin_keyboard_variant() const : String
+keyboard_get_layout_count() const : int
+keyboard_get_current_layout() const : int
+keyboard_set_current_layout(int p_index) : void
+keyboard_get_layout_language(int p_index) const : String
+keyboard_get_layout_name(int p_index) const : String
+get_model_name() const : String
+dump_memory_to_file(const String & p_file) : void
+dump_resources_to_file(const String & p_file) : void
+has_virtual_keyboard() const : bool
+show_virtual_keyboard(const String & p_existing_text = "", bool p_multiline = false) : void
+hide_virtual_keyboard() : void
+get_virtual_keyboard_height() : int
+print_resources_in_use(bool p_short = false) : void
+print_all_resources(const String & p_to_file) : void
+print_all_textures_by_size() : void
+print_resources_by_type(const Vector<String> & p_types) : void
+has_touchscreen_ui_hint() const : bool
+is_debug_build() const : bool
+get_unique_id() const : String
+get_scancode_string(uint32_t p_code) const : String
+is_scancode_unicode(uint32_t p_unicode) const : bool
+find_scancode_from_string(const String & p_code) const : int
+set_use_file_access_save_and_swap(bool p_enable) : void
+set_native_icon(const String & p_filename) : void
+set_icon(const Ref<Image> & p_icon) : void
+get_exit_code() const : int
+set_exit_code(int p_code) : void
+get_date(bool utc) const : Dictionary
+get_time(bool utc) const : Dictionary
+get_datetime(bool utc) const : Dictionary
+get_datetime_from_unix_time(int64_t unix_time_val) const : Dictionary
+get_unix_time_from_datetime(Dictionary datetime) const : int64_t
+get_time_zone_info() const : Dictionary
+get_unix_time() const : uint64_t
+get_system_time_secs() const : uint64_t
+get_system_time_msecs() const : uint64_t
+get_static_memory_usage() const : uint64_t
+get_static_memory_peak_usage() const : uint64_t
+get_dynamic_memory_usage() const : uint64_t
+delay_usec(int p_usec) const : void
+delay_msec(int p_msec) const : void
+get_ticks_msec() const : uint32_t
+get_ticks_usec() const : uint64_t
+get_splash_tick_msec() const : uint32_t
+can_use_threads() const : bool
+can_draw() const : bool
+is_userfs_persistent() const : bool
+is_stdout_verbose() const : bool
+get_processor_count() const : int
+get_system_dir(_OS::SystemDir p_dir, bool p_shared_storage = true) const : String
+get_user_data_dir() const : String
+alert(const String & p_alert, const String & p_title = "ALERT!") : void
+set_screen_orientation(_OS::ScreenOrientation p_orientation) : void
+get_screen_orientation() const : _OS::ScreenOrientation
+set_keep_screen_on(bool p_enabled) : void
+is_keep_screen_on() const : bool
+is_ok_left_and_cancel_right() const : bool
+set_thread_name(const String & p_name) : Error
+get_thread_caller_id() const : Thread::ID
+set_use_vsync(bool p_enable) : void
+is_vsync_enabled() const : bool
+set_vsync_via_compositor(bool p_enable) : void
+is_vsync_via_compositor_enabled() const : bool
+get_power_state() : _OS::PowerState
+get_power_seconds_left() : int
+get_power_percent_left() : int
+has_feature(const String & p_feature) const : bool
+request_permission(const String & p_name) : bool
+request_permissions() : bool
+get_granted_permissions() const : Vector<String>
+get_tablet_driver_count() const : int
+get_tablet_driver_name(int p_driver) const : String
+get_current_tablet_driver() const : String
+set_current_tablet_driver(const String & p_driver) : void
{static} +get_singleton() : _OS *
+_OS() : void
}
class "_Geometry" as C_0000897221634691489964
class C_0000897221634691489964 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L401{_Geometry}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Geometry *
+build_box_planes(const Vector3 & p_extents) : PoolVector<Plane>
+build_cylinder_planes(float p_radius, float p_height, int p_sides, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector<Plane>
+build_capsule_planes(float p_radius, float p_height, int p_sides, int p_lats, Vector3::Axis p_axis = Vector3::AXIS_Z) : PoolVector<Plane>
+segment_intersects_segment_2d(const Vector2 & p_from_a, const Vector2 & p_to_a, const Vector2 & p_from_b, const Vector2 & p_to_b) : Variant
+line_intersects_line_2d(const Vector2 & p_from_a, const Vector2 & p_dir_a, const Vector2 & p_from_b, const Vector2 & p_dir_b) : Variant
+get_closest_points_between_segments_2d(const Vector2 & p1, const Vector2 & q1, const Vector2 & p2, const Vector2 & q2) : PoolVector<Vector2>
+get_closest_points_between_segments(const Vector3 & p1, const Vector3 & p2, const Vector3 & q1, const Vector3 & q2) : PoolVector<Vector3>
+get_closest_point_to_segment_2d(const Vector2 & p_point, const Vector2 & p_a, const Vector2 & p_b) : Vector2
+get_closest_point_to_segment(const Vector3 & p_point, const Vector3 & p_a, const Vector3 & p_b) : Vector3
+get_closest_point_to_segment_uncapped_2d(const Vector2 & p_point, const Vector2 & p_a, const Vector2 & p_b) : Vector2
+get_closest_point_to_segment_uncapped(const Vector3 & p_point, const Vector3 & p_a, const Vector3 & p_b) : Vector3
+ray_intersects_triangle(const Vector3 & p_from, const Vector3 & p_dir, const Vector3 & p_v0, const Vector3 & p_v1, const Vector3 & p_v2) : Variant
+segment_intersects_triangle(const Vector3 & p_from, const Vector3 & p_to, const Vector3 & p_v0, const Vector3 & p_v1, const Vector3 & p_v2) : Variant
+point_is_inside_triangle(const Vector2 & s, const Vector2 & a, const Vector2 & b, const Vector2 & c) const : bool
+segment_intersects_sphere(const Vector3 & p_from, const Vector3 & p_to, const Vector3 & p_sphere_pos, real_t p_sphere_radius) : PoolVector<Vector3>
+segment_intersects_cylinder(const Vector3 & p_from, const Vector3 & p_to, float p_height, float p_radius) : PoolVector<Vector3>
+segment_intersects_convex(const Vector3 & p_from, const Vector3 & p_to, const Vector<Plane> & p_planes) : PoolVector<Vector3>
+is_point_in_circle(const Vector2 & p_point, const Vector2 & p_circle_pos, real_t p_circle_radius) : bool
+segment_intersects_circle(const Vector2 & p_from, const Vector2 & p_to, const Vector2 & p_circle_pos, real_t p_circle_radius) : real_t
+get_uv84_normal_bit(const Vector3 & p_vector) : int
+is_polygon_clockwise(const Vector<Vector2> & p_polygon) : bool
+is_point_in_polygon(const Point2 & p_point, const Vector<Vector2> & p_polygon) : bool
+triangulate_polygon(const Vector<Vector2> & p_polygon) : Vector<int>
+triangulate_delaunay_2d(const Vector<Vector2> & p_points) : Vector<int>
+convex_hull_2d(const Vector<Point2> & p_points) : Vector<Point2>
+clip_polygon(const Vector<Vector3> & p_points, const Plane & p_plane) : Vector<Vector3>
+merge_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+clip_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+intersect_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+exclude_polygons_2d(const Vector<Vector2> & p_polygon_a, const Vector<Vector2> & p_polygon_b) : Array
+clip_polyline_with_polygon_2d(const Vector<Vector2> & p_polyline, const Vector<Vector2> & p_polygon) : Array
+intersect_polyline_with_polygon_2d(const Vector<Vector2> & p_polyline, const Vector<Vector2> & p_polygon) : Array
+offset_polygon_2d(const Vector<Vector2> & p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE) : Array
+offset_polyline_2d(const Vector<Vector2> & p_polygon, real_t p_delta, _Geometry::PolyJoinType p_join_type = JOIN_SQUARE, _Geometry::PolyEndType p_end_type = END_SQUARE) : Array
+make_atlas(const Vector<Size2> & p_rects) : Dictionary
+_Geometry() : void
}
class "_Marshalls" as C_0000135188690773659020
class C_0000135188690773659020 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L629{_Marshalls}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Marshalls *
+variant_to_base64(const Variant & p_var, bool p_full_objects = false) : String
+base64_to_variant(const String & p_str, bool p_allow_objects = false) : Variant
+raw_to_base64(const PoolVector<uint8_t> & p_arr) : String
+base64_to_raw(const String & p_str) : PoolVector<uint8_t>
+utf8_to_base64(const String & p_str) : String
+base64_to_utf8(const String & p_str) : String
+_Marshalls() : void
+~_Marshalls() : void
}
class "_Thread" as C_0001150621116588802549
class C_0001150621116588802549 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L679{_Thread}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+start(Object * p_instance, const StringName & p_method, const Variant & p_userdata = Variant(), _Thread::Priority p_priority = PRIORITY_NORMAL) : Error
+get_id() const : String
+is_active() const : bool
+wait_to_finish() : Variant
+_Thread() : void
+~_Thread() : void
}
class "_ClassDB" as C_0001186331261774827872
class C_0001186331261774827872 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L713{_ClassDB}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_class_list() const : PoolStringArray
+get_inheriters_from_class(const StringName & p_class) const : PoolStringArray
+get_parent_class(const StringName & p_class) const : StringName
+class_exists(const StringName & p_class) const : bool
+is_parent_class(const StringName & p_class, const StringName & p_inherits) const : bool
+can_instance(const StringName & p_class) const : bool
+instance(const StringName & p_class) const : Variant
+has_signal(StringName p_class, StringName p_signal) const : bool
+get_signal(StringName p_class, StringName p_signal) const : Dictionary
+get_signal_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_property_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_property(Object * p_object, const StringName & p_property) const : Variant
+set_property(Object * p_object, const StringName & p_property, const Variant & p_value) const : Error
+has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) const : bool
+get_method_list(StringName p_class, bool p_no_inheritance = false) const : Array
+get_integer_constant_list(const StringName & p_class, bool p_no_inheritance = false) const : PoolStringArray
+has_integer_constant(const StringName & p_class, const StringName & p_name) const : bool
+get_integer_constant(const StringName & p_class, const StringName & p_name) const : int
+get_category(const StringName & p_node) const : StringName
+is_class_enabled(StringName p_class) const : bool
+_ClassDB() : void
+~_ClassDB() : void
}
class "_Engine" as C_0001895218672297528471
class C_0001895218672297528471 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L752{_Engine}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _Engine *
+set_iterations_per_second(int p_ips) : void
+get_iterations_per_second() const : int
+set_physics_jitter_fix(float p_threshold) : void
+get_physics_jitter_fix() const : float
+get_physics_interpolation_fraction() const : float
+set_target_fps(int p_fps) : void
+get_target_fps() const : int
+get_frames_per_second() const : float
+get_physics_frames() const : uint64_t
+get_idle_frames() const : uint64_t
+get_frames_drawn() : int
+set_time_scale(float p_scale) : void
+get_time_scale() : float
+get_main_loop() const : MainLoop *
+get_version_info() const : Dictionary
+get_author_info() const : Dictionary
+get_copyright_info() const : Array
+get_donor_info() const : Dictionary
+get_license_info() const : Dictionary
+get_license_text() const : String
+is_in_physics_frame() const : bool
+has_singleton(const String & p_name) const : bool
+get_singleton_object(const String & p_name) const : Object *
+set_editor_hint(bool p_enabled) : void
+is_editor_hint() const : bool
+_Engine() : void
}
class "_JSON" as C_0000979065355535690103
class C_0000979065355535690103 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/bind/core_bind.h#L833{_JSON}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : _JSON *
+print(const Variant & p_value, const String & p_indent = "", bool p_sort_keys = false) : String
+parse(const String & p_json) : Ref<JSONParseResult>
+_JSON() : void
}
class "CameraServer" as C_0001701907280759632930
class C_0001701907280759632930 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/camera_server.h#L49{CameraServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : CameraServer *
{static} +create() : CameraServer *
+get_free_id() : int
+get_feed_index(int p_id) : int
+get_feed_by_id(int p_id) : Ref<CameraFeed>
+add_feed(const Ref<CameraFeed> & p_feed) : void
+remove_feed(const Ref<CameraFeed> & p_feed) : void
+get_feed(int p_index) : Ref<CameraFeed>
+get_feed_count() : int
+get_feeds() : Array
+feed_texture(int p_id, CameraServer::FeedImage p_texture) : RID
+CameraServer() : void
+~CameraServer() : void
{static} +make_default() : void
}
abstract "VisualServer" as C_0001589464385186808769
abstract C_0001589464385186808769 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/visual_server.h#L42{VisualServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : VisualServer *
{static} +create() : VisualServer *
{abstract} +texture_create() = 0 : RID
+texture_create_from_image(const Ref<Image> & p_image, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) : RID
{abstract} +texture_allocate(RID p_texture, int p_width, int p_height, int p_depth_3d, Image::Format p_format, VisualServer::TextureType p_type, uint32_t p_flags = TEXTURE_FLAGS_DEFAULT) = 0 : void
{abstract} +texture_set_data(RID p_texture, const Ref<Image> & p_image, int p_layer = 0) = 0 : void
{abstract} +texture_set_data_partial(RID p_texture, const Ref<Image> & p_image, int src_x, int src_y, int src_w, int src_h, int dst_x, int dst_y, int p_dst_mip, int p_layer = 0) = 0 : void
{abstract} +texture_get_data(RID p_texture, int p_layer = 0) const = 0 : Ref<Image>
{abstract} +texture_set_flags(RID p_texture, uint32_t p_flags) = 0 : void
{abstract} +texture_get_flags(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_format(RID p_texture) const = 0 : Image::Format
{abstract} +texture_get_type(RID p_texture) const = 0 : VisualServer::TextureType
{abstract} +texture_get_texid(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_width(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_height(RID p_texture) const = 0 : uint32_t
{abstract} +texture_get_depth(RID p_texture) const = 0 : uint32_t
{abstract} +texture_set_size_override(RID p_texture, int p_width, int p_height, int p_depth_3d) = 0 : void
{abstract} +texture_bind(RID p_texture, uint32_t p_texture_no) = 0 : void
{abstract} +texture_set_path(RID p_texture, const String & p_path) = 0 : void
{abstract} +texture_get_path(RID p_texture) const = 0 : String
{abstract} +texture_set_shrink_all_x2_on_set_data(bool p_enable) = 0 : void
{abstract} +texture_set_detect_3d_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_set_detect_srgb_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_set_detect_normal_callback(RID p_texture, VisualServer::TextureDetectCallback p_callback, void * p_userdata) = 0 : void
{abstract} +texture_debug_usage(List<VisualServer::TextureInfo> * r_info) = 0 : void
+_texture_debug_usage_bind() : Array
{abstract} +textures_keep_original(bool p_enable) = 0 : void
{abstract} +texture_set_proxy(RID p_proxy, RID p_base) = 0 : void
{abstract} +texture_set_force_redraw_if_visible(RID p_texture, bool p_enable) = 0 : void
{abstract} +sky_create() = 0 : RID
{abstract} +sky_set_texture(RID p_sky, RID p_cube_map, int p_radiance_size) = 0 : void
{abstract} +shader_create() = 0 : RID
{abstract} +shader_set_code(RID p_shader, const String & p_code) = 0 : void
{abstract} +shader_get_code(RID p_shader) const = 0 : String
{abstract} +shader_get_param_list(RID p_shader, List<PropertyInfo> * p_param_list) const = 0 : void
+_shader_get_param_list_bind(RID p_shader) const : Array
{abstract} +shader_set_default_texture_param(RID p_shader, const StringName & p_name, RID p_texture) = 0 : void
{abstract} +shader_get_default_texture_param(RID p_shader, const StringName & p_name) const = 0 : RID
{abstract} +shader_add_custom_define(RID p_shader, const String & p_define) = 0 : void
{abstract} +shader_get_custom_defines(RID p_shader, Vector<String> * p_defines) const = 0 : void
{abstract} +shader_remove_custom_define(RID p_shader, const String & p_define) = 0 : void
{abstract} +material_create() = 0 : RID
{abstract} +material_set_shader(RID p_shader_material, RID p_shader) = 0 : void
{abstract} +material_get_shader(RID p_shader_material) const = 0 : RID
{abstract} +material_set_param(RID p_material, const StringName & p_param, const Variant & p_value) = 0 : void
{abstract} +material_get_param(RID p_material, const StringName & p_param) const = 0 : Variant
{abstract} +material_get_param_default(RID p_material, const StringName & p_param) const = 0 : Variant
{abstract} +material_set_render_priority(RID p_material, int priority) = 0 : void
{abstract} +material_set_line_width(RID p_material, float p_width) = 0 : void
{abstract} +material_set_next_pass(RID p_material, RID p_next_material) = 0 : void
{abstract} +mesh_create() = 0 : RID
+mesh_surface_get_format_offset(uint32_t p_format, int p_vertex_len, int p_index_len, int p_array_index) const : uint32_t
+mesh_surface_get_format_stride(uint32_t p_format, int p_vertex_len, int p_index_len) const : uint32_t
+mesh_surface_make_offsets_from_format(uint32_t p_format, int p_vertex_len, int p_index_len, uint32_t * r_offsets) const : uint32_t
+mesh_add_surface_from_arrays(RID p_mesh, VisualServer::PrimitiveType p_primitive, const Array & p_arrays, const Array & p_blend_shapes = Array(), uint32_t p_compress_format = ARRAY_COMPRESS_DEFAULT) : void
{abstract} +mesh_add_surface(RID p_mesh, uint32_t p_format, VisualServer::PrimitiveType p_primitive, const PoolVector<uint8_t> & p_array, int p_vertex_count, const PoolVector<uint8_t> & p_index_array, int p_index_count, const AABB & p_aabb, const Vector<PoolVector<uint8_t>> & p_blend_shapes = Vector<PoolVector<uint8_t> >(), const Vector<AABB> & p_bone_aabbs = Vector<AABB>()) = 0 : void
{abstract} +mesh_set_blend_shape_count(RID p_mesh, int p_amount) = 0 : void
{abstract} +mesh_get_blend_shape_count(RID p_mesh) const = 0 : int
{abstract} +mesh_set_blend_shape_mode(RID p_mesh, VisualServer::BlendShapeMode p_mode) = 0 : void
{abstract} +mesh_get_blend_shape_mode(RID p_mesh) const = 0 : VisualServer::BlendShapeMode
{abstract} +mesh_surface_update_region(RID p_mesh, int p_surface, int p_offset, const PoolVector<uint8_t> & p_data) = 0 : void
{abstract} +mesh_surface_set_material(RID p_mesh, int p_surface, RID p_material) = 0 : void
{abstract} +mesh_surface_get_material(RID p_mesh, int p_surface) const = 0 : RID
{abstract} +mesh_surface_get_array_len(RID p_mesh, int p_surface) const = 0 : int
{abstract} +mesh_surface_get_array_index_len(RID p_mesh, int p_surface) const = 0 : int
{abstract} +mesh_surface_get_array(RID p_mesh, int p_surface) const = 0 : PoolVector<uint8_t>
{abstract} +mesh_surface_get_index_array(RID p_mesh, int p_surface) const = 0 : PoolVector<uint8_t>
+mesh_surface_get_arrays(RID p_mesh, int p_surface) const : Array
+mesh_surface_get_blend_shape_arrays(RID p_mesh, int p_surface) const : Array
{abstract} +mesh_surface_get_format(RID p_mesh, int p_surface) const = 0 : uint32_t
{abstract} +mesh_surface_get_primitive_type(RID p_mesh, int p_surface) const = 0 : VisualServer::PrimitiveType
{abstract} +mesh_surface_get_aabb(RID p_mesh, int p_surface) const = 0 : AABB
{abstract} +mesh_surface_get_blend_shapes(RID p_mesh, int p_surface) const = 0 : Vector<PoolVector<uint8_t>>
{abstract} +mesh_surface_get_skeleton_aabb(RID p_mesh, int p_surface) const = 0 : Vector<AABB>
+_mesh_surface_get_skeleton_aabb_bind(RID p_mesh, int p_surface) const : Array
{abstract} +mesh_remove_surface(RID p_mesh, int p_index) = 0 : void
{abstract} +mesh_get_surface_count(RID p_mesh) const = 0 : int
{abstract} +mesh_set_custom_aabb(RID p_mesh, const AABB & p_aabb) = 0 : void
{abstract} +mesh_get_custom_aabb(RID p_mesh) const = 0 : AABB
{abstract} +mesh_clear(RID p_mesh) = 0 : void
{abstract} +multimesh_create() = 0 : RID
{abstract} +multimesh_allocate(RID p_multimesh, int p_instances, VisualServer::MultimeshTransformFormat p_transform_format, VisualServer::MultimeshColorFormat p_color_format, VisualServer::MultimeshCustomDataFormat p_data_format = MULTIMESH_CUSTOM_DATA_NONE) = 0 : void
{abstract} +multimesh_get_instance_count(RID p_multimesh) const = 0 : int
{abstract} +multimesh_set_mesh(RID p_multimesh, RID p_mesh) = 0 : void
{abstract} +multimesh_instance_set_transform(RID p_multimesh, int p_index, const Transform & p_transform) = 0 : void
{abstract} +multimesh_instance_set_transform_2d(RID p_multimesh, int p_index, const Transform2D & p_transform) = 0 : void
{abstract} +multimesh_instance_set_color(RID p_multimesh, int p_index, const Color & p_color) = 0 : void
{abstract} +multimesh_instance_set_custom_data(RID p_multimesh, int p_index, const Color & p_color) = 0 : void
{abstract} +multimesh_get_mesh(RID p_multimesh) const = 0 : RID
{abstract} +multimesh_get_aabb(RID p_multimesh) const = 0 : AABB
{abstract} +multimesh_instance_get_transform(RID p_multimesh, int p_index) const = 0 : Transform
{abstract} +multimesh_instance_get_transform_2d(RID p_multimesh, int p_index) const = 0 : Transform2D
{abstract} +multimesh_instance_get_color(RID p_multimesh, int p_index) const = 0 : Color
{abstract} +multimesh_instance_get_custom_data(RID p_multimesh, int p_index) const = 0 : Color
{abstract} +multimesh_set_as_bulk_array(RID p_multimesh, const PoolVector<float> & p_array) = 0 : void
{abstract} +multimesh_set_visible_instances(RID p_multimesh, int p_visible) = 0 : void
{abstract} +multimesh_get_visible_instances(RID p_multimesh) const = 0 : int
{abstract} +immediate_create() = 0 : RID
{abstract} +immediate_begin(RID p_immediate, VisualServer::PrimitiveType p_rimitive, RID p_texture = = RID()) = 0 : void
{abstract} +immediate_vertex(RID p_immediate, const Vector3 & p_vertex) = 0 : void
+immediate_vertex_2d(RID p_immediate, const Vector2 & p_vertex) : void
{abstract} +immediate_normal(RID p_immediate, const Vector3 & p_normal) = 0 : void
{abstract} +immediate_tangent(RID p_immediate, const Plane & p_tangent) = 0 : void
{abstract} +immediate_color(RID p_immediate, const Color & p_color) = 0 : void
{abstract} +immediate_uv(RID p_immediate, const Vector2 & tex_uv) = 0 : void
{abstract} +immediate_uv2(RID p_immediate, const Vector2 & tex_uv) = 0 : void
{abstract} +immediate_end(RID p_immediate) = 0 : void
{abstract} +immediate_clear(RID p_immediate) = 0 : void
{abstract} +immediate_set_material(RID p_immediate, RID p_material) = 0 : void
{abstract} +immediate_get_material(RID p_immediate) const = 0 : RID
{abstract} +skeleton_create() = 0 : RID
{abstract} +skeleton_allocate(RID p_skeleton, int p_bones, bool p_2d_skeleton = false) = 0 : void
{abstract} +skeleton_get_bone_count(RID p_skeleton) const = 0 : int
{abstract} +skeleton_bone_set_transform(RID p_skeleton, int p_bone, const Transform & p_transform) = 0 : void
{abstract} +skeleton_bone_get_transform(RID p_skeleton, int p_bone) const = 0 : Transform
{abstract} +skeleton_bone_set_transform_2d(RID p_skeleton, int p_bone, const Transform2D & p_transform) = 0 : void
{abstract} +skeleton_bone_get_transform_2d(RID p_skeleton, int p_bone) const = 0 : Transform2D
{abstract} +skeleton_set_base_transform_2d(RID p_skeleton, const Transform2D & p_base_transform) = 0 : void
{abstract} +directional_light_create() = 0 : RID
{abstract} +omni_light_create() = 0 : RID
{abstract} +spot_light_create() = 0 : RID
{abstract} +light_set_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +light_set_param(RID p_light, VisualServer::LightParam p_param, float p_value) = 0 : void
{abstract} +light_set_shadow(RID p_light, bool p_enabled) = 0 : void
{abstract} +light_set_shadow_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +light_set_projector(RID p_light, RID p_texture) = 0 : void
{abstract} +light_set_negative(RID p_light, bool p_enable) = 0 : void
{abstract} +light_set_cull_mask(RID p_light, uint32_t p_mask) = 0 : void
{abstract} +light_set_reverse_cull_face_mode(RID p_light, bool p_enabled) = 0 : void
{abstract} +light_set_use_gi(RID p_light, bool p_enable) = 0 : void
{abstract} +light_set_bake_mode(RID p_light, VisualServer::LightBakeMode p_bake_mode) = 0 : void
{abstract} +light_omni_set_shadow_mode(RID p_light, VisualServer::LightOmniShadowMode p_mode) = 0 : void
{abstract} +light_omni_set_shadow_detail(RID p_light, VisualServer::LightOmniShadowDetail p_detail) = 0 : void
{abstract} +light_directional_set_shadow_mode(RID p_light, VisualServer::LightDirectionalShadowMode p_mode) = 0 : void
{abstract} +light_directional_set_blend_splits(RID p_light, bool p_enable) = 0 : void
{abstract} +light_directional_set_shadow_depth_range_mode(RID p_light, VisualServer::LightDirectionalShadowDepthRangeMode p_range_mode) = 0 : void
{abstract} +reflection_probe_create() = 0 : RID
{abstract} +reflection_probe_set_update_mode(RID p_probe, VisualServer::ReflectionProbeUpdateMode p_mode) = 0 : void
{abstract} +reflection_probe_set_intensity(RID p_probe, float p_intensity) = 0 : void
{abstract} +reflection_probe_set_interior_ambient(RID p_probe, const Color & p_color) = 0 : void
{abstract} +reflection_probe_set_interior_ambient_energy(RID p_probe, float p_energy) = 0 : void
{abstract} +reflection_probe_set_interior_ambient_probe_contribution(RID p_probe, float p_contrib) = 0 : void
{abstract} +reflection_probe_set_max_distance(RID p_probe, float p_distance) = 0 : void
{abstract} +reflection_probe_set_extents(RID p_probe, const Vector3 & p_extents) = 0 : void
{abstract} +reflection_probe_set_origin_offset(RID p_probe, const Vector3 & p_offset) = 0 : void
{abstract} +reflection_probe_set_as_interior(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_enable_box_projection(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_enable_shadows(RID p_probe, bool p_enable) = 0 : void
{abstract} +reflection_probe_set_cull_mask(RID p_probe, uint32_t p_layers) = 0 : void
{abstract} +reflection_probe_set_resolution(RID p_probe, int p_resolution) = 0 : void
{abstract} +gi_probe_create() = 0 : RID
{abstract} +gi_probe_set_bounds(RID p_probe, const AABB & p_bounds) = 0 : void
{abstract} +gi_probe_get_bounds(RID p_probe) const = 0 : AABB
{abstract} +gi_probe_set_cell_size(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_cell_size(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_to_cell_xform(RID p_probe, const Transform & p_xform) = 0 : void
{abstract} +gi_probe_get_to_cell_xform(RID p_probe) const = 0 : Transform
{abstract} +gi_probe_set_dynamic_data(RID p_probe, const PoolVector<int> & p_data) = 0 : void
{abstract} +gi_probe_get_dynamic_data(RID p_probe) const = 0 : PoolVector<int>
{abstract} +gi_probe_set_dynamic_range(RID p_probe, int p_range) = 0 : void
{abstract} +gi_probe_get_dynamic_range(RID p_probe) const = 0 : int
{abstract} +gi_probe_set_energy(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_energy(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_bias(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_bias(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_normal_bias(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_normal_bias(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_propagation(RID p_probe, float p_range) = 0 : void
{abstract} +gi_probe_get_propagation(RID p_probe) const = 0 : float
{abstract} +gi_probe_set_interior(RID p_probe, bool p_enable) = 0 : void
{abstract} +gi_probe_is_interior(RID p_probe) const = 0 : bool
{abstract} +gi_probe_set_compress(RID p_probe, bool p_enable) = 0 : void
{abstract} +gi_probe_is_compressed(RID p_probe) const = 0 : bool
{abstract} +lightmap_capture_create() = 0 : RID
{abstract} +lightmap_capture_set_bounds(RID p_capture, const AABB & p_bounds) = 0 : void
{abstract} +lightmap_capture_get_bounds(RID p_capture) const = 0 : AABB
{abstract} +lightmap_capture_set_octree(RID p_capture, const PoolVector<uint8_t> & p_octree) = 0 : void
{abstract} +lightmap_capture_set_octree_cell_transform(RID p_capture, const Transform & p_xform) = 0 : void
{abstract} +lightmap_capture_get_octree_cell_transform(RID p_capture) const = 0 : Transform
{abstract} +lightmap_capture_set_octree_cell_subdiv(RID p_capture, int p_subdiv) = 0 : void
{abstract} +lightmap_capture_get_octree_cell_subdiv(RID p_capture) const = 0 : int
{abstract} +lightmap_capture_get_octree(RID p_capture) const = 0 : PoolVector<uint8_t>
{abstract} +lightmap_capture_set_energy(RID p_capture, float p_energy) = 0 : void
{abstract} +lightmap_capture_get_energy(RID p_capture) const = 0 : float
{abstract} +lightmap_capture_set_interior(RID p_capture, bool p_interior) = 0 : void
{abstract} +lightmap_capture_is_interior(RID p_capture) const = 0 : bool
{abstract} +particles_create() = 0 : RID
{abstract} +particles_set_emitting(RID p_particles, bool p_emitting) = 0 : void
{abstract} +particles_get_emitting(RID p_particles) = 0 : bool
{abstract} +particles_set_amount(RID p_particles, int p_amount) = 0 : void
{abstract} +particles_set_lifetime(RID p_particles, float p_lifetime) = 0 : void
{abstract} +particles_set_one_shot(RID p_particles, bool p_one_shot) = 0 : void
{abstract} +particles_set_pre_process_time(RID p_particles, float p_time) = 0 : void
{abstract} +particles_set_explosiveness_ratio(RID p_particles, float p_ratio) = 0 : void
{abstract} +particles_set_randomness_ratio(RID p_particles, float p_ratio) = 0 : void
{abstract} +particles_set_custom_aabb(RID p_particles, const AABB & p_aabb) = 0 : void
{abstract} +particles_set_speed_scale(RID p_particles, float p_scale) = 0 : void
{abstract} +particles_set_use_local_coordinates(RID p_particles, bool p_enable) = 0 : void
{abstract} +particles_set_process_material(RID p_particles, RID p_material) = 0 : void
{abstract} +particles_set_fixed_fps(RID p_particles, int p_fps) = 0 : void
{abstract} +particles_set_fractional_delta(RID p_particles, bool p_enable) = 0 : void
{abstract} +particles_is_inactive(RID p_particles) = 0 : bool
{abstract} +particles_request_process(RID p_particles) = 0 : void
{abstract} +particles_restart(RID p_particles) = 0 : void
{abstract} +particles_set_draw_order(RID p_particles, VisualServer::ParticlesDrawOrder p_order) = 0 : void
{abstract} +particles_set_draw_passes(RID p_particles, int p_count) = 0 : void
{abstract} +particles_set_draw_pass_mesh(RID p_particles, int p_pass, RID p_mesh) = 0 : void
{abstract} +particles_get_current_aabb(RID p_particles) = 0 : AABB
{abstract} +particles_set_emission_transform(RID p_particles, const Transform & p_transform) = 0 : void
{abstract} +camera_create() = 0 : RID
{abstract} +camera_set_perspective(RID p_camera, float p_fovy_degrees, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_orthogonal(RID p_camera, float p_size, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_frustum(RID p_camera, float p_size, Vector2 p_offset, float p_z_near, float p_z_far) = 0 : void
{abstract} +camera_set_transform(RID p_camera, const Transform & p_transform) = 0 : void
{abstract} +camera_set_cull_mask(RID p_camera, uint32_t p_layers) = 0 : void
{abstract} +camera_set_environment(RID p_camera, RID p_env) = 0 : void
{abstract} +camera_set_use_vertical_aspect(RID p_camera, bool p_enable) = 0 : void
{abstract} +viewport_create() = 0 : RID
{abstract} +viewport_set_use_arvr(RID p_viewport, bool p_use_arvr) = 0 : void
{abstract} +viewport_set_size(RID p_viewport, int p_width, int p_height) = 0 : void
{abstract} +viewport_set_active(RID p_viewport, bool p_active) = 0 : void
{abstract} +viewport_set_parent_viewport(RID p_viewport, RID p_parent_viewport) = 0 : void
{abstract} +viewport_attach_to_screen(RID p_viewport, const Rect2 & p_rect = Rect2(), int p_screen = 0) = 0 : void
{abstract} +viewport_set_render_direct_to_screen(RID p_viewport, bool p_enable) = 0 : void
{abstract} +viewport_detach(RID p_viewport) = 0 : void
{abstract} +viewport_set_update_mode(RID p_viewport, VisualServer::ViewportUpdateMode p_mode) = 0 : void
{abstract} +viewport_set_vflip(RID p_viewport, bool p_enable) = 0 : void
{abstract} +viewport_set_clear_mode(RID p_viewport, VisualServer::ViewportClearMode p_clear_mode) = 0 : void
{abstract} +viewport_get_texture(RID p_viewport) const = 0 : RID
{abstract} +viewport_set_hide_scenario(RID p_viewport, bool p_hide) = 0 : void
{abstract} +viewport_set_hide_canvas(RID p_viewport, bool p_hide) = 0 : void
{abstract} +viewport_set_disable_environment(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_set_disable_3d(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_set_keep_3d_linear(RID p_viewport, bool p_disable) = 0 : void
{abstract} +viewport_attach_camera(RID p_viewport, RID p_camera) = 0 : void
{abstract} +viewport_set_scenario(RID p_viewport, RID p_scenario) = 0 : void
{abstract} +viewport_attach_canvas(RID p_viewport, RID p_canvas) = 0 : void
{abstract} +viewport_remove_canvas(RID p_viewport, RID p_canvas) = 0 : void
{abstract} +viewport_set_canvas_transform(RID p_viewport, RID p_canvas, const Transform2D & p_offset) = 0 : void
{abstract} +viewport_set_transparent_background(RID p_viewport, bool p_enabled) = 0 : void
{abstract} +viewport_set_global_canvas_transform(RID p_viewport, const Transform2D & p_transform) = 0 : void
{abstract} +viewport_set_canvas_stacking(RID p_viewport, RID p_canvas, int p_layer, int p_sublayer) = 0 : void
{abstract} +viewport_set_shadow_atlas_size(RID p_viewport, int p_size) = 0 : void
{abstract} +viewport_set_shadow_atlas_quadrant_subdivision(RID p_viewport, int p_quadrant, int p_subdiv) = 0 : void
{abstract} +viewport_set_msaa(RID p_viewport, VisualServer::ViewportMSAA p_msaa) = 0 : void
{abstract} +viewport_set_use_fxaa(RID p_viewport, bool p_fxaa) = 0 : void
{abstract} +viewport_set_use_debanding(RID p_viewport, bool p_debanding) = 0 : void
{abstract} +viewport_set_hdr(RID p_viewport, bool p_enabled) = 0 : void
{abstract} +viewport_set_usage(RID p_viewport, VisualServer::ViewportUsage p_usage) = 0 : void
{abstract} +viewport_get_render_info(RID p_viewport, VisualServer::ViewportRenderInfo p_info) = 0 : int
{abstract} +viewport_set_debug_draw(RID p_viewport, VisualServer::ViewportDebugDraw p_draw) = 0 : void
{abstract} +environment_create() = 0 : RID
{abstract} +environment_set_background(RID p_env, VisualServer::EnvironmentBG p_bg) = 0 : void
{abstract} +environment_set_sky(RID p_env, RID p_sky) = 0 : void
{abstract} +environment_set_sky_custom_fov(RID p_env, float p_scale) = 0 : void
{abstract} +environment_set_sky_orientation(RID p_env, const Basis & p_orientation) = 0 : void
{abstract} +environment_set_bg_color(RID p_env, const Color & p_color) = 0 : void
{abstract} +environment_set_bg_energy(RID p_env, float p_energy) = 0 : void
{abstract} +environment_set_canvas_max_layer(RID p_env, int p_max_layer) = 0 : void
{abstract} +environment_set_ambient_light(RID p_env, const Color & p_color, float p_energy = 1.0, float p_sky_contribution = 0.0) = 0 : void
{abstract} +environment_set_camera_feed_id(RID p_env, int p_camera_feed_id) = 0 : void
{abstract} +environment_set_dof_blur_near(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void
{abstract} +environment_set_dof_blur_far(RID p_env, bool p_enable, float p_distance, float p_transition, float p_far_amount, VisualServer::EnvironmentDOFBlurQuality p_quality) = 0 : void
{abstract} +environment_set_glow(RID p_env, bool p_enable, int p_level_flags, float p_intensity, float p_strength, float p_bloom_threshold, VisualServer::EnvironmentGlowBlendMode p_blend_mode, float p_hdr_bleed_threshold, float p_hdr_bleed_scale, float p_hdr_luminance_cap, bool p_bicubic_upscale) = 0 : void
{abstract} +environment_set_tonemap(RID p_env, VisualServer::EnvironmentToneMapper p_tone_mapper, float p_exposure, float p_white, bool p_auto_exposure, float p_min_luminance, float p_max_luminance, float p_auto_exp_speed, float p_auto_exp_grey) = 0 : void
{abstract} +environment_set_adjustment(RID p_env, bool p_enable, float p_brightness, float p_contrast, float p_saturation, RID p_ramp) = 0 : void
{abstract} +environment_set_ssr(RID p_env, bool p_enable, int p_max_steps, float p_fade_in, float p_fade_out, float p_depth_tolerance, bool p_roughness) = 0 : void
{abstract} +environment_set_ssao(RID p_env, bool p_enable, float p_radius, float p_intensity, float p_radius2, float p_intensity2, float p_bias, float p_light_affect, float p_ao_channel_affect, const Color & p_color, VisualServer::EnvironmentSSAOQuality p_quality, VisualServer::EnvironmentSSAOBlur p_blur, float p_bilateral_sharpness) = 0 : void
{abstract} +environment_set_fog(RID p_env, bool p_enable, const Color & p_color, const Color & p_sun_color, float p_sun_amount) = 0 : void
{abstract} +environment_set_fog_depth(RID p_env, bool p_enable, float p_depth_begin, float p_depth_end, float p_depth_curve, bool p_transmit, float p_transmit_curve) = 0 : void
{abstract} +environment_set_fog_height(RID p_env, bool p_enable, float p_min_height, float p_max_height, float p_height_curve) = 0 : void
{abstract} +scenario_create() = 0 : RID
{abstract} +scenario_set_debug(RID p_scenario, VisualServer::ScenarioDebugMode p_debug_mode) = 0 : void
{abstract} +scenario_set_environment(RID p_scenario, RID p_environment) = 0 : void
{abstract} +scenario_set_reflection_atlas_size(RID p_scenario, int p_size, int p_subdiv) = 0 : void
{abstract} +scenario_set_fallback_environment(RID p_scenario, RID p_environment) = 0 : void
+instance_create2(RID p_base, RID p_scenario) : RID
{abstract} +instance_create() = 0 : RID
{abstract} +instance_set_base(RID p_instance, RID p_base) = 0 : void
{abstract} +instance_set_scenario(RID p_instance, RID p_scenario) = 0 : void
{abstract} +instance_set_layer_mask(RID p_instance, uint32_t p_mask) = 0 : void
{abstract} +instance_set_transform(RID p_instance, const Transform & p_transform) = 0 : void
{abstract} +instance_attach_object_instance_id(RID p_instance, ObjectID p_id) = 0 : void
{abstract} +instance_set_blend_shape_weight(RID p_instance, int p_shape, float p_weight) = 0 : void
{abstract} +instance_set_surface_material(RID p_instance, int p_surface, RID p_material) = 0 : void
{abstract} +instance_set_visible(RID p_instance, bool p_visible) = 0 : void
{abstract} +instance_set_use_lightmap(RID p_instance, RID p_lightmap_instance, RID p_lightmap, int p_lightmap_slice, const Rect2 & p_lightmap_uv_rect) = 0 : void
{abstract} +instance_set_custom_aabb(RID p_instance, AABB aabb) = 0 : void
{abstract} +instance_attach_skeleton(RID p_instance, RID p_skeleton) = 0 : void
{abstract} +instance_set_exterior(RID p_instance, bool p_enabled) = 0 : void
{abstract} +instance_set_extra_visibility_margin(RID p_instance, real_t p_margin) = 0 : void
{abstract} +instances_cull_aabb(const AABB & p_aabb, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
{abstract} +instances_cull_ray(const Vector3 & p_from, const Vector3 & p_to, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
{abstract} +instances_cull_convex(const Vector<Plane> & p_convex, RID p_scenario = = RID()) const = 0 : Vector<ObjectID>
+_instances_cull_aabb_bind(const AABB & p_aabb, RID p_scenario = = RID()) const : Array
+_instances_cull_ray_bind(const Vector3 & p_from, const Vector3 & p_to, RID p_scenario = = RID()) const : Array
+_instances_cull_convex_bind(const Array & p_convex, RID p_scenario = = RID()) const : Array
{abstract} +instance_geometry_set_flag(RID p_instance, VisualServer::InstanceFlags p_flags, bool p_enabled) = 0 : void
{abstract} +instance_geometry_set_cast_shadows_setting(RID p_instance, VisualServer::ShadowCastingSetting p_shadow_casting_setting) = 0 : void
{abstract} +instance_geometry_set_material_override(RID p_instance, RID p_material) = 0 : void
{abstract} +instance_geometry_set_draw_range(RID p_instance, float p_min, float p_max, float p_min_margin, float p_max_margin) = 0 : void
{abstract} +instance_geometry_set_as_instance_lod(RID p_instance, RID p_as_lod_of_instance) = 0 : void
{abstract} +canvas_create() = 0 : RID
{abstract} +canvas_set_item_mirroring(RID p_canvas, RID p_item, const Point2 & p_mirroring) = 0 : void
{abstract} +canvas_set_modulate(RID p_canvas, const Color & p_color) = 0 : void
{abstract} +canvas_set_parent(RID p_canvas, RID p_parent, float p_scale) = 0 : void
{abstract} +canvas_set_disable_scale(bool p_disable) = 0 : void
{abstract} +canvas_item_create() = 0 : RID
{abstract} +canvas_item_set_parent(RID p_item, RID p_parent) = 0 : void
{abstract} +canvas_item_set_visible(RID p_item, bool p_visible) = 0 : void
{abstract} +canvas_item_set_light_mask(RID p_item, int p_mask) = 0 : void
{abstract} +canvas_item_set_update_when_visible(RID p_item, bool p_update) = 0 : void
{abstract} +canvas_item_set_transform(RID p_item, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_item_set_clip(RID p_item, bool p_clip) = 0 : void
{abstract} +canvas_item_set_distance_field_mode(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_custom_rect(RID p_item, bool p_custom_rect, const Rect2 & p_rect = Rect2()) = 0 : void
{abstract} +canvas_item_set_modulate(RID p_item, const Color & p_color) = 0 : void
{abstract} +canvas_item_set_self_modulate(RID p_item, const Color & p_color) = 0 : void
{abstract} +canvas_item_set_draw_behind_parent(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_add_line(RID p_item, const Point2 & p_from, const Point2 & p_to, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_polyline(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_multiline(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_rect(RID p_item, const Rect2 & p_rect, const Color & p_color) = 0 : void
{abstract} +canvas_item_add_circle(RID p_item, const Point2 & p_pos, float p_radius, const Color & p_color) = 0 : void
{abstract} +canvas_item_add_texture_rect(RID p_item, const Rect2 & p_rect, RID p_texture, bool p_tile = false, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_texture_rect_region(RID p_item, const Rect2 & p_rect, RID p_texture, const Rect2 & p_src_rect, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, RID p_normal_map = = RID(), bool p_clip_uv = false) = 0 : void
{abstract} +canvas_item_add_nine_patch(RID p_item, const Rect2 & p_rect, const Rect2 & p_source, RID p_texture, const Vector2 & p_topleft, const Vector2 & p_bottomright, VisualServer::NinePatchAxisMode p_x_axis_mode = NINE_PATCH_STRETCH, VisualServer::NinePatchAxisMode p_y_axis_mode = NINE_PATCH_STRETCH, bool p_draw_center = true, const Color & p_modulate = Color(1, 1, 1), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_primitive(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs, RID p_texture, float p_width = 1.0, RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_polygon(RID p_item, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), RID p_texture = = RID(), RID p_normal_map = = RID(), bool p_antialiased = false) = 0 : void
{abstract} +canvas_item_add_triangle_array(RID p_item, const Vector<int> & p_indices, const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), const Vector<int> & p_bones = Vector<int>(), const Vector<float> & p_weights = Vector<float>(), RID p_texture = = RID(), int p_count = -1, RID p_normal_map = = RID(), bool p_antialiased = false, bool p_antialiasing_use_indices = false) = 0 : void
{abstract} +canvas_item_add_mesh(RID p_item, const RID & p_mesh, const Transform2D & p_transform = Transform2D(), const Color & p_modulate = Color(1, 1, 1), RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_multimesh(RID p_item, RID p_mesh, RID p_texture = = RID(), RID p_normal_map = = RID()) = 0 : void
{abstract} +canvas_item_add_particles(RID p_item, RID p_particles, RID p_texture, RID p_normal_map) = 0 : void
{abstract} +canvas_item_add_set_transform(RID p_item, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_item_add_clip_ignore(RID p_item, bool p_ignore) = 0 : void
{abstract} +canvas_item_set_sort_children_by_y(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_z_index(RID p_item, int p_z) = 0 : void
{abstract} +canvas_item_set_z_as_relative_to_parent(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_item_set_copy_to_backbuffer(RID p_item, bool p_enable, const Rect2 & p_rect) = 0 : void
{abstract} +canvas_item_attach_skeleton(RID p_item, RID p_skeleton) = 0 : void
{abstract} +canvas_item_clear(RID p_item) = 0 : void
{abstract} +canvas_item_set_draw_index(RID p_item, int p_index) = 0 : void
{abstract} +canvas_item_set_material(RID p_item, RID p_material) = 0 : void
{abstract} +canvas_item_set_use_parent_material(RID p_item, bool p_enable) = 0 : void
{abstract} +canvas_light_create() = 0 : RID
{abstract} +canvas_light_attach_to_canvas(RID p_light, RID p_canvas) = 0 : void
{abstract} +canvas_light_set_enabled(RID p_light, bool p_enabled) = 0 : void
{abstract} +canvas_light_set_scale(RID p_light, float p_scale) = 0 : void
{abstract} +canvas_light_set_transform(RID p_light, const Transform2D & p_transform) = 0 : void
{abstract} +canvas_light_set_texture(RID p_light, RID p_texture) = 0 : void
{abstract} +canvas_light_set_texture_offset(RID p_light, const Vector2 & p_offset) = 0 : void
{abstract} +canvas_light_set_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +canvas_light_set_height(RID p_light, float p_height) = 0 : void
{abstract} +canvas_light_set_energy(RID p_light, float p_energy) = 0 : void
{abstract} +canvas_light_set_z_range(RID p_light, int p_min_z, int p_max_z) = 0 : void
{abstract} +canvas_light_set_layer_range(RID p_light, int p_min_layer, int p_max_layer) = 0 : void
{abstract} +canvas_light_set_item_cull_mask(RID p_light, int p_mask) = 0 : void
{abstract} +canvas_light_set_item_shadow_cull_mask(RID p_light, int p_mask) = 0 : void
{abstract} +canvas_light_set_mode(RID p_light, VisualServer::CanvasLightMode p_mode) = 0 : void
{abstract} +canvas_light_set_shadow_enabled(RID p_light, bool p_enabled) = 0 : void
{abstract} +canvas_light_set_shadow_buffer_size(RID p_light, int p_size) = 0 : void
{abstract} +canvas_light_set_shadow_gradient_length(RID p_light, float p_length) = 0 : void
{abstract} +canvas_light_set_shadow_filter(RID p_light, VisualServer::CanvasLightShadowFilter p_filter) = 0 : void
{abstract} +canvas_light_set_shadow_color(RID p_light, const Color & p_color) = 0 : void
{abstract} +canvas_light_set_shadow_smooth(RID p_light, float p_smooth) = 0 : void
{abstract} +canvas_light_occluder_create() = 0 : RID
{abstract} +canvas_light_occluder_attach_to_canvas(RID p_occluder, RID p_canvas) = 0 : void
{abstract} +canvas_light_occluder_set_enabled(RID p_occluder, bool p_enabled) = 0 : void
{abstract} +canvas_light_occluder_set_polygon(RID p_occluder, RID p_polygon) = 0 : void
{abstract} +canvas_light_occluder_set_transform(RID p_occluder, const Transform2D & p_xform) = 0 : void
{abstract} +canvas_light_occluder_set_light_mask(RID p_occluder, int p_mask) = 0 : void
{abstract} +canvas_occluder_polygon_create() = 0 : RID
{abstract} +canvas_occluder_polygon_set_shape(RID p_occluder_polygon, const PoolVector<Vector2> & p_shape, bool p_closed) = 0 : void
{abstract} +canvas_occluder_polygon_set_shape_as_lines(RID p_occluder_polygon, const PoolVector<Vector2> & p_shape) = 0 : void
{abstract} +canvas_occluder_polygon_set_cull_mode(RID p_occluder_polygon, VisualServer::CanvasOccluderPolygonCullMode p_mode) = 0 : void
{abstract} +black_bars_set_margins(int p_left, int p_top, int p_right, int p_bottom) = 0 : void
{abstract} +black_bars_set_images(RID p_left, RID p_top, RID p_right, RID p_bottom) = 0 : void
{abstract} +free(RID p_rid) = 0 : void
{abstract} +request_frame_drawn_callback(Object * p_where, const StringName & p_method, const Variant & p_userdata) = 0 : void
{abstract} +draw(bool p_swap_buffers = true, double frame_step = 0.0) = 0 : void
{abstract} +sync() = 0 : void
{abstract} +has_changed() const = 0 : bool
{abstract} +init() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +get_render_info(VisualServer::RenderInfo p_info) = 0 : uint64_t
{abstract} +get_video_adapter_name() const = 0 : String
{abstract} +get_video_adapter_vendor() const = 0 : String
{abstract} +get_test_cube() = 0 : RID
+get_test_texture() : RID
+get_white_texture() : RID
+make_sphere_mesh(int p_lats, int p_lons, float p_radius) : RID
+mesh_add_surface_from_mesh_data(RID p_mesh, const Geometry::MeshData & p_mesh_data) : void
+mesh_add_surface_from_planes(RID p_mesh, const PoolVector<Plane> & p_planes) : void
{abstract} +set_boot_image(const Ref<Image> & p_image, const Color & p_color, bool p_scale, bool p_use_filter = true) = 0 : void
{abstract} +set_default_clear_color(const Color & p_color) = 0 : void
{abstract} +set_shader_time_scale(float p_scale) = 0 : void
{abstract} +has_feature(VisualServer::Features p_feature) const = 0 : bool
{abstract} +has_os_feature(const String & p_feature) const = 0 : bool
{abstract} +set_debug_generate_wireframes(bool p_generate) = 0 : void
{abstract} +call_set_use_vsync(bool p_enable) = 0 : void
{abstract} +is_low_end() const = 0 : bool
+is_render_loop_enabled() const : bool
+set_render_loop_enabled(bool p_enabled) : void
+VisualServer() : void
+~VisualServer() : void
+NO_INDEX_ARRAY : enum
+ARRAY_WEIGHTS_SIZE : enum
+CANVAS_ITEM_Z_MIN : enum
+CANVAS_ITEM_Z_MAX : enum
+MAX_GLOW_LEVELS : enum
+MAX_CURSORS : enum
+MATERIAL_RENDER_PRIORITY_MIN : enum
+MATERIAL_RENDER_PRIORITY_MAX : enum
}
abstract "PhysicsDirectBodyState" as C_0001559146041463814963
abstract C_0001559146041463814963 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L39{PhysicsDirectBodyState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +get_total_gravity() const = 0 : Vector3
{abstract} +get_total_angular_damp() const = 0 : float
{abstract} +get_total_linear_damp() const = 0 : float
{abstract} +get_center_of_mass() const = 0 : Vector3
{abstract} +get_principal_inertia_axes() const = 0 : Basis
{abstract} +get_inverse_mass() const = 0 : float
{abstract} +get_inverse_inertia() const = 0 : Vector3
{abstract} +get_inverse_inertia_tensor() const = 0 : Basis
{abstract} +set_linear_velocity(const Vector3 & p_velocity) = 0 : void
{abstract} +get_linear_velocity() const = 0 : Vector3
{abstract} +set_angular_velocity(const Vector3 & p_velocity) = 0 : void
{abstract} +get_angular_velocity() const = 0 : Vector3
{abstract} +set_transform(const Transform & p_transform) = 0 : void
{abstract} +get_transform() const = 0 : Transform
{abstract} +add_central_force(const Vector3 & p_force) = 0 : void
{abstract} +add_force(const Vector3 & p_force, const Vector3 & p_pos) = 0 : void
{abstract} +add_torque(const Vector3 & p_torque) = 0 : void
{abstract} +apply_central_impulse(const Vector3 & p_j) = 0 : void
{abstract} +apply_impulse(const Vector3 & p_pos, const Vector3 & p_j) = 0 : void
{abstract} +apply_torque_impulse(const Vector3 & p_j) = 0 : void
{abstract} +set_sleep_state(bool p_enable) = 0 : void
{abstract} +is_sleeping() const = 0 : bool
{abstract} +get_contact_count() const = 0 : int
{abstract} +get_contact_local_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_local_normal(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_impulse(int p_contact_idx) const = 0 : float
{abstract} +get_contact_local_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider(int p_contact_idx) const = 0 : RID
{abstract} +get_contact_collider_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID
+get_contact_collider_object(int p_contact_idx) const : Object *
{abstract} +get_contact_collider_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector3
{abstract} +get_step() const = 0 : real_t
+integrate_forces() : void
{abstract} +get_space_state() = 0 : PhysicsDirectSpaceState *
+PhysicsDirectBodyState() : void
}
abstract "PhysicsDirectSpaceState" as C_0000503002593685351124
abstract C_0000503002593685351124 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L143{PhysicsDirectSpaceState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +intersect_point(const Vector3 & p_point, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +intersect_ray(const Vector3 & p_from, const Vector3 & p_to, PhysicsDirectSpaceState::RayResult & r_result, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_ray = false) = 0 : bool
{abstract} +intersect_shape(const RID & p_shape, const Transform & p_xform, float p_margin, PhysicsDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +cast_motion(const RID & p_shape, const Transform & p_xform, const Vector3 & p_motion, float p_margin, float & p_closest_safe, float & p_closest_unsafe, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, PhysicsDirectSpaceState::ShapeRestInfo * r_info = __null) = 0 : bool
{abstract} +collide_shape(RID p_shape, const Transform & p_shape_xform, float p_margin, Vector3 * r_results, int p_result_max, int & r_result_count, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +rest_info(RID p_shape, const Transform & p_shape_xform, float p_margin, PhysicsDirectSpaceState::ShapeRestInfo * r_info, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_mask = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +get_closest_point_to_object_volume(RID p_object, const Vector3 p_point) const = 0 : Vector3
+PhysicsDirectSpaceState() : void
}
class "PhysicsDirectSpaceState::ShapeResult" as C_0000493041171271776846
class C_0000493041171271776846 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L158{PhysicsDirectSpaceState##ShapeResult}]] {
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L160{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L161{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L162{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L163{shape}]]]
}
class "PhysicsDirectSpaceState::RayResult" as C_0000461609734144368587
class C_0000461609734144368587 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L168{PhysicsDirectSpaceState##RayResult}]] {
+position : Vector3 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L170{position}]]]
+normal : Vector3 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L171{normal}]]]
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L172{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L173{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L174{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L175{shape}]]]
}
abstract "PhysicsServer" as C_0001034902024938599899
abstract C_0001034902024938599899 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_server.h#L224{PhysicsServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : PhysicsServer *
{abstract} +shape_create(PhysicsServer::ShapeType p_shape) = 0 : RID
{abstract} +shape_set_data(RID p_shape, const Variant & p_data) = 0 : void
{abstract} +shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void
{abstract} +shape_get_type(RID p_shape) const = 0 : PhysicsServer::ShapeType
{abstract} +shape_get_data(RID p_shape) const = 0 : Variant
{abstract} +shape_set_margin(RID p_shape, real_t p_margin) = 0 : void
{abstract} +shape_get_margin(RID p_shape) const = 0 : real_t
{abstract} +shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t
{abstract} +space_create() = 0 : RID
{abstract} +space_set_active(RID p_space, bool p_active) = 0 : void
{abstract} +space_is_active(RID p_space) const = 0 : bool
{abstract} +space_set_param(RID p_space, PhysicsServer::SpaceParameter p_param, real_t p_value) = 0 : void
{abstract} +space_get_param(RID p_space, PhysicsServer::SpaceParameter p_param) const = 0 : real_t
{abstract} +space_get_direct_state(RID p_space) = 0 : PhysicsDirectSpaceState *
{abstract} +space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void
{abstract} +space_get_contacts(RID p_space) const = 0 : Vector<Vector3>
{abstract} +space_get_contact_count(RID p_space) const = 0 : int
{abstract} +area_create() = 0 : RID
{abstract} +area_set_space(RID p_area, RID p_space) = 0 : void
{abstract} +area_get_space(RID p_area) const = 0 : RID
{abstract} +area_set_space_override_mode(RID p_area, PhysicsServer::AreaSpaceOverrideMode p_mode) = 0 : void
{abstract} +area_get_space_override_mode(RID p_area) const = 0 : PhysicsServer::AreaSpaceOverrideMode
{abstract} +area_add_shape(RID p_area, RID p_shape, const Transform & p_transform = Transform(), bool p_disabled = false) = 0 : void
{abstract} +area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +area_set_shape_transform(RID p_area, int p_shape_idx, const Transform & p_transform) = 0 : void
{abstract} +area_get_shape_count(RID p_area) const = 0 : int
{abstract} +area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID
{abstract} +area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform
{abstract} +area_remove_shape(RID p_area, int p_shape_idx) = 0 : void
{abstract} +area_clear_shapes(RID p_area) = 0 : void
{abstract} +area_set_shape_disabled(RID p_area, int p_shape_idx, bool p_disabled) = 0 : void
{abstract} +area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_object_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_set_param(RID p_area, PhysicsServer::AreaParameter p_param, const Variant & p_value) = 0 : void
{abstract} +area_set_transform(RID p_area, const Transform & p_transform) = 0 : void
{abstract} +area_get_param(RID p_parea, PhysicsServer::AreaParameter p_param) const = 0 : Variant
{abstract} +area_get_transform(RID p_area) const = 0 : Transform
{abstract} +area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void
{abstract} +area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void
{abstract} +area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void
{abstract} +area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_ray_pickable(RID p_area, bool p_enable) = 0 : void
{abstract} +area_is_ray_pickable(RID p_area) const = 0 : bool
{abstract} +body_create(PhysicsServer::BodyMode p_mode = BODY_MODE_RIGID, bool p_init_sleeping = false) = 0 : RID
{abstract} +body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +body_get_space(RID p_body) const = 0 : RID
{abstract} +body_set_mode(RID p_body, PhysicsServer::BodyMode p_mode) = 0 : void
{abstract} +body_get_mode(RID p_body) const = 0 : PhysicsServer::BodyMode
{abstract} +body_add_shape(RID p_body, RID p_shape, const Transform & p_transform = Transform(), bool p_disabled = false) = 0 : void
{abstract} +body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +body_set_shape_transform(RID p_body, int p_shape_idx, const Transform & p_transform) = 0 : void
{abstract} +body_get_shape_count(RID p_body) const = 0 : int
{abstract} +body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID
{abstract} +body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform
{abstract} +body_remove_shape(RID p_body, int p_shape_idx) = 0 : void
{abstract} +body_clear_shapes(RID p_body) = 0 : void
{abstract} +body_set_shape_disabled(RID p_body, int p_shape_idx, bool p_disabled) = 0 : void
{abstract} +body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_object_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_set_enable_continuous_collision_detection(RID p_body, bool p_enable) = 0 : void
{abstract} +body_is_continuous_collision_detection_enabled(RID p_body) const = 0 : bool
{abstract} +body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +body_set_user_flags(RID p_body, uint32_t p_flags) = 0 : void
{abstract} +body_get_user_flags(RID p_body) const = 0 : uint32_t
{abstract} +body_set_param(RID p_body, PhysicsServer::BodyParameter p_param, float p_value) = 0 : void
{abstract} +body_get_param(RID p_body, PhysicsServer::BodyParameter p_param) const = 0 : float
{abstract} +body_set_kinematic_safe_margin(RID p_body, real_t p_margin) = 0 : void
{abstract} +body_get_kinematic_safe_margin(RID p_body) const = 0 : real_t
{abstract} +body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant
{abstract} +body_set_applied_force(RID p_body, const Vector3 & p_force) = 0 : void
{abstract} +body_get_applied_force(RID p_body) const = 0 : Vector3
{abstract} +body_set_applied_torque(RID p_body, const Vector3 & p_torque) = 0 : void
{abstract} +body_get_applied_torque(RID p_body) const = 0 : Vector3
{abstract} +body_add_central_force(RID p_body, const Vector3 & p_force) = 0 : void
{abstract} +body_add_force(RID p_body, const Vector3 & p_force, const Vector3 & p_pos) = 0 : void
{abstract} +body_add_torque(RID p_body, const Vector3 & p_torque) = 0 : void
{abstract} +body_apply_central_impulse(RID p_body, const Vector3 & p_impulse) = 0 : void
{abstract} +body_apply_impulse(RID p_body, const Vector3 & p_pos, const Vector3 & p_impulse) = 0 : void
{abstract} +body_apply_torque_impulse(RID p_body, const Vector3 & p_impulse) = 0 : void
{abstract} +body_set_axis_velocity(RID p_body, const Vector3 & p_axis_velocity) = 0 : void
{abstract} +body_set_axis_lock(RID p_body, PhysicsServer::BodyAxis p_axis, bool p_lock) = 0 : void
{abstract} +body_is_axis_locked(RID p_body, PhysicsServer::BodyAxis p_axis) const = 0 : bool
{abstract} +body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void
{abstract} +body_get_max_contacts_reported(RID p_body) const = 0 : int
{abstract} +body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void
{abstract} +body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float
{abstract} +body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void
{abstract} +body_is_omitting_force_integration(RID p_body) const = 0 : bool
{abstract} +body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName & p_method, const Variant & p_udata = Variant()) = 0 : void
{abstract} +body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void
{abstract} +body_is_ray_pickable(RID p_body) const = 0 : bool
{abstract} +body_get_direct_state(RID p_body) = 0 : PhysicsDirectBodyState *
{abstract} +body_test_motion(RID p_body, const Transform & p_from, const Vector3 & p_motion, bool p_infinite_inertia, PhysicsServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool
{abstract} +body_test_ray_separation(RID p_body, const Transform & p_transform, bool p_infinite_inertia, Vector3 & r_recover_motion, PhysicsServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int
{abstract} +soft_body_create(bool p_init_sleeping = false) = 0 : RID
{abstract} +soft_body_update_visual_server(RID p_body, class SoftBodyVisualServerHandler * p_visual_server_handler) = 0 : void
{abstract} +soft_body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +soft_body_get_space(RID p_body) const = 0 : RID
{abstract} +soft_body_set_mesh(RID p_body, const REF & p_mesh) = 0 : void
{abstract} +soft_body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +soft_body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +soft_body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +soft_body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +soft_body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +soft_body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +soft_body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +soft_body_set_state(RID p_body, PhysicsServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +soft_body_get_state(RID p_body, PhysicsServer::BodyState p_state) const = 0 : Variant
{abstract} +soft_body_set_transform(RID p_body, const Transform & p_transform) = 0 : void
{abstract} +soft_body_get_vertex_position(RID p_body, int vertex_index) const = 0 : Vector3
{abstract} +soft_body_set_ray_pickable(RID p_body, bool p_enable) = 0 : void
{abstract} +soft_body_is_ray_pickable(RID p_body) const = 0 : bool
{abstract} +soft_body_set_simulation_precision(RID p_body, int p_simulation_precision) = 0 : void
{abstract} +soft_body_get_simulation_precision(RID p_body) = 0 : int
{abstract} +soft_body_set_total_mass(RID p_body, real_t p_total_mass) = 0 : void
{abstract} +soft_body_get_total_mass(RID p_body) = 0 : real_t
{abstract} +soft_body_set_linear_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_linear_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_areaAngular_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_areaAngular_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_volume_stiffness(RID p_body, real_t p_stiffness) = 0 : void
{abstract} +soft_body_get_volume_stiffness(RID p_body) = 0 : real_t
{abstract} +soft_body_set_pressure_coefficient(RID p_body, real_t p_pressure_coefficient) = 0 : void
{abstract} +soft_body_get_pressure_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_pose_matching_coefficient(RID p_body, real_t p_pose_matching_coefficient) = 0 : void
{abstract} +soft_body_get_pose_matching_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_damping_coefficient(RID p_body, real_t p_damping_coefficient) = 0 : void
{abstract} +soft_body_get_damping_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_set_drag_coefficient(RID p_body, real_t p_drag_coefficient) = 0 : void
{abstract} +soft_body_get_drag_coefficient(RID p_body) = 0 : real_t
{abstract} +soft_body_move_point(RID p_body, int p_point_index, const Vector3 & p_global_position) = 0 : void
{abstract} +soft_body_get_point_global_position(RID p_body, int p_point_index) = 0 : Vector3
{abstract} +soft_body_get_point_offset(RID p_body, int p_point_index) const = 0 : Vector3
{abstract} +soft_body_remove_all_pinned_points(RID p_body) = 0 : void
{abstract} +soft_body_pin_point(RID p_body, int p_point_index, bool p_pin) = 0 : void
{abstract} +soft_body_is_point_pinned(RID p_body, int p_point_index) = 0 : bool
{abstract} +joint_get_type(RID p_joint) const = 0 : PhysicsServer::JointType
{abstract} +joint_set_solver_priority(RID p_joint, int p_priority) = 0 : void
{abstract} +joint_get_solver_priority(RID p_joint) const = 0 : int
{abstract} +joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void
{abstract} +joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool
{abstract} +joint_create_pin(RID p_body_A, const Vector3 & p_local_A, RID p_body_B, const Vector3 & p_local_B) = 0 : RID
{abstract} +pin_joint_set_param(RID p_joint, PhysicsServer::PinJointParam p_param, float p_value) = 0 : void
{abstract} +pin_joint_get_param(RID p_joint, PhysicsServer::PinJointParam p_param) const = 0 : float
{abstract} +pin_joint_set_local_a(RID p_joint, const Vector3 & p_A) = 0 : void
{abstract} +pin_joint_get_local_a(RID p_joint) const = 0 : Vector3
{abstract} +pin_joint_set_local_b(RID p_joint, const Vector3 & p_B) = 0 : void
{abstract} +pin_joint_get_local_b(RID p_joint) const = 0 : Vector3
{abstract} +joint_create_hinge(RID p_body_A, const Transform & p_hinge_A, RID p_body_B, const Transform & p_hinge_B) = 0 : RID
{abstract} +joint_create_hinge_simple(RID p_body_A, const Vector3 & p_pivot_A, const Vector3 & p_axis_A, RID p_body_B, const Vector3 & p_pivot_B, const Vector3 & p_axis_B) = 0 : RID
{abstract} +hinge_joint_set_param(RID p_joint, PhysicsServer::HingeJointParam p_param, float p_value) = 0 : void
{abstract} +hinge_joint_get_param(RID p_joint, PhysicsServer::HingeJointParam p_param) const = 0 : float
{abstract} +hinge_joint_set_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag, bool p_value) = 0 : void
{abstract} +hinge_joint_get_flag(RID p_joint, PhysicsServer::HingeJointFlag p_flag) const = 0 : bool
{abstract} +joint_create_slider(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +slider_joint_set_param(RID p_joint, PhysicsServer::SliderJointParam p_param, float p_value) = 0 : void
{abstract} +slider_joint_get_param(RID p_joint, PhysicsServer::SliderJointParam p_param) const = 0 : float
{abstract} +joint_create_cone_twist(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +cone_twist_joint_set_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param, float p_value) = 0 : void
{abstract} +cone_twist_joint_get_param(RID p_joint, PhysicsServer::ConeTwistJointParam p_param) const = 0 : float
{abstract} +joint_create_generic_6dof(RID p_body_A, const Transform & p_local_frame_A, RID p_body_B, const Transform & p_local_frame_B) = 0 : RID
{abstract} +generic_6dof_joint_set_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param, float p_value) = 0 : void
{abstract} +generic_6dof_joint_get_param(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisParam p_param) = 0 : float
{abstract} +generic_6dof_joint_set_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag, bool p_enable) = 0 : void
{abstract} +generic_6dof_joint_get_flag(RID p_joint, Vector3::Axis , PhysicsServer::G6DOFJointAxisFlag p_flag) = 0 : bool
{abstract} +free(RID p_rid) = 0 : void
{abstract} +set_active(bool p_active) = 0 : void
{abstract} +init() = 0 : void
{abstract} +step(float p_step) = 0 : void
{abstract} +flush_queries() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +is_flushing_queries() const = 0 : bool
{abstract} +get_process_info(PhysicsServer::ProcessInfo p_info) = 0 : int
+PhysicsServer() : void
+~PhysicsServer() : void
}
abstract "Physics2DDirectBodyState" as C_0002302096389852429221
abstract C_0002302096389852429221 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L40{Physics2DDirectBodyState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +get_total_gravity() const = 0 : Vector2
{abstract} +get_total_linear_damp() const = 0 : float
{abstract} +get_total_angular_damp() const = 0 : float
{abstract} +get_inverse_mass() const = 0 : float
{abstract} +get_inverse_inertia() const = 0 : real_t
{abstract} +set_linear_velocity(const Vector2 & p_velocity) = 0 : void
{abstract} +get_linear_velocity() const = 0 : Vector2
{abstract} +set_angular_velocity(real_t p_velocity) = 0 : void
{abstract} +get_angular_velocity() const = 0 : real_t
{abstract} +set_transform(const Transform2D & p_transform) = 0 : void
{abstract} +get_transform() const = 0 : Transform2D
{abstract} +add_central_force(const Vector2 & p_force) = 0 : void
{abstract} +add_force(const Vector2 & p_offset, const Vector2 & p_force) = 0 : void
{abstract} +add_torque(real_t p_torque) = 0 : void
{abstract} +apply_central_impulse(const Vector2 & p_impulse) = 0 : void
{abstract} +apply_torque_impulse(real_t p_torque) = 0 : void
{abstract} +apply_impulse(const Vector2 & p_offset, const Vector2 & p_impulse) = 0 : void
{abstract} +set_sleep_state(bool p_enable) = 0 : void
{abstract} +is_sleeping() const = 0 : bool
{abstract} +get_contact_count() const = 0 : int
{abstract} +get_contact_local_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_local_normal(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_local_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider(int p_contact_idx) const = 0 : RID
{abstract} +get_contact_collider_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_contact_collider_id(int p_contact_idx) const = 0 : ObjectID
+get_contact_collider_object(int p_contact_idx) const : Object *
{abstract} +get_contact_collider_shape(int p_contact_idx) const = 0 : int
{abstract} +get_contact_collider_shape_metadata(int p_contact_idx) const = 0 : Variant
{abstract} +get_contact_collider_velocity_at_position(int p_contact_idx) const = 0 : Vector2
{abstract} +get_step() const = 0 : real_t
+integrate_forces() : void
{abstract} +get_space_state() = 0 : Physics2DDirectSpaceState *
+Physics2DDirectBodyState() : void
}
abstract "Physics2DDirectSpaceState" as C_0000236996062289735257
abstract C_0000236996062289735257 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L145{Physics2DDirectSpaceState}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{abstract} +intersect_ray(const Vector2 & p_from, const Vector2 & p_to, Physics2DDirectSpaceState::RayResult & r_result, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +intersect_point(const Vector2 & p_point, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int
{abstract} +intersect_point_on_canvas(const Vector2 & p_point, ObjectID p_canvas_instance_id, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false, bool p_pick_point = false) = 0 : int
{abstract} +intersect_shape(const RID & p_shape, const Transform2D & p_xform, const Vector2 & p_motion, float p_margin, Physics2DDirectSpaceState::ShapeResult * r_results, int p_result_max, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : int
{abstract} +cast_motion(const RID & p_shape, const Transform2D & p_xform, const Vector2 & p_motion, float p_margin, float & p_closest_safe, float & p_closest_unsafe, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +collide_shape(RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, float p_margin, Vector2 * r_results, int p_result_max, int & r_result_count, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
{abstract} +rest_info(RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, float p_margin, Physics2DDirectSpaceState::ShapeRestInfo * r_info, const Set<RID> & p_exclude = Set<RID>(), uint32_t p_collision_layer = 0xFFFFFFFF, bool p_collide_with_bodies = true, bool p_collide_with_areas = false) = 0 : bool
+Physics2DDirectSpaceState() : void
}
class "Physics2DDirectSpaceState::RayResult" as C_0001801355352189289676
class C_0001801355352189289676 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L162{Physics2DDirectSpaceState##RayResult}]] {
+position : Vector2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L164{position}]]]
+normal : Vector2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L165{normal}]]]
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L166{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L167{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L168{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L169{shape}]]]
+metadata : Variant [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L170{metadata}]]]
}
class "Physics2DDirectSpaceState::ShapeResult" as C_0001771770302499309898
class C_0001771770302499309898 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L175{Physics2DDirectSpaceState##ShapeResult}]] {
+rid : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L177{rid}]]]
+collider_id : ObjectID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L178{collider_id}]]]
+collider : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L179{collider}]]]
+shape : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L180{shape}]]]
+metadata : Variant [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L181{metadata}]]]
}
abstract "Physics2DServer" as C_0001561529841391244418
abstract C_0001561529841391244418 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/physics_2d_server.h#L232{Physics2DServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : Physics2DServer *
{abstract} +line_shape_create() = 0 : RID
{abstract} +ray_shape_create() = 0 : RID
{abstract} +segment_shape_create() = 0 : RID
{abstract} +circle_shape_create() = 0 : RID
{abstract} +rectangle_shape_create() = 0 : RID
{abstract} +capsule_shape_create() = 0 : RID
{abstract} +convex_polygon_shape_create() = 0 : RID
{abstract} +concave_polygon_shape_create() = 0 : RID
{abstract} +shape_set_data(RID p_shape, const Variant & p_data) = 0 : void
{abstract} +shape_set_custom_solver_bias(RID p_shape, real_t p_bias) = 0 : void
{abstract} +shape_get_type(RID p_shape) const = 0 : Physics2DServer::ShapeType
{abstract} +shape_get_data(RID p_shape) const = 0 : Variant
{abstract} +shape_get_custom_solver_bias(RID p_shape) const = 0 : real_t
{abstract} +shape_collide(RID p_shape_A, const Transform2D & p_xform_A, const Vector2 & p_motion_A, RID p_shape_B, const Transform2D & p_xform_B, const Vector2 & p_motion_B, Vector2 * r_results, int p_result_max, int & r_result_count) = 0 : bool
{abstract} +space_create() = 0 : RID
{abstract} +space_set_active(RID p_space, bool p_active) = 0 : void
{abstract} +space_is_active(RID p_space) const = 0 : bool
{abstract} +space_set_param(RID p_space, Physics2DServer::SpaceParameter p_param, real_t p_value) = 0 : void
{abstract} +space_get_param(RID p_space, Physics2DServer::SpaceParameter p_param) const = 0 : real_t
{abstract} +space_get_direct_state(RID p_space) = 0 : Physics2DDirectSpaceState *
{abstract} +space_set_debug_contacts(RID p_space, int p_max_contacts) = 0 : void
{abstract} +space_get_contacts(RID p_space) const = 0 : Vector<Vector2>
{abstract} +space_get_contact_count(RID p_space) const = 0 : int
{abstract} +area_create() = 0 : RID
{abstract} +area_set_space(RID p_area, RID p_space) = 0 : void
{abstract} +area_get_space(RID p_area) const = 0 : RID
{abstract} +area_set_space_override_mode(RID p_area, Physics2DServer::AreaSpaceOverrideMode p_mode) = 0 : void
{abstract} +area_get_space_override_mode(RID p_area) const = 0 : Physics2DServer::AreaSpaceOverrideMode
{abstract} +area_add_shape(RID p_area, RID p_shape, const Transform2D & p_transform = Transform2D(), bool p_disabled = false) = 0 : void
{abstract} +area_set_shape(RID p_area, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +area_set_shape_transform(RID p_area, int p_shape_idx, const Transform2D & p_transform) = 0 : void
{abstract} +area_get_shape_count(RID p_area) const = 0 : int
{abstract} +area_get_shape(RID p_area, int p_shape_idx) const = 0 : RID
{abstract} +area_get_shape_transform(RID p_area, int p_shape_idx) const = 0 : Transform2D
{abstract} +area_remove_shape(RID p_area, int p_shape_idx) = 0 : void
{abstract} +area_clear_shapes(RID p_area) = 0 : void
{abstract} +area_set_shape_disabled(RID p_area, int p_shape, bool p_disabled) = 0 : void
{abstract} +area_attach_object_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_object_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_attach_canvas_instance_id(RID p_area, ObjectID p_id) = 0 : void
{abstract} +area_get_canvas_instance_id(RID p_area) const = 0 : ObjectID
{abstract} +area_set_param(RID p_area, Physics2DServer::AreaParameter p_param, const Variant & p_value) = 0 : void
{abstract} +area_set_transform(RID p_area, const Transform2D & p_transform) = 0 : void
{abstract} +area_get_param(RID p_parea, Physics2DServer::AreaParameter p_param) const = 0 : Variant
{abstract} +area_get_transform(RID p_area) const = 0 : Transform2D
{abstract} +area_set_collision_mask(RID p_area, uint32_t p_mask) = 0 : void
{abstract} +area_set_collision_layer(RID p_area, uint32_t p_layer) = 0 : void
{abstract} +area_set_monitorable(RID p_area, bool p_monitorable) = 0 : void
{abstract} +area_set_pickable(RID p_area, bool p_pickable) = 0 : void
{abstract} +area_set_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +area_set_area_monitor_callback(RID p_area, Object * p_receiver, const StringName & p_method) = 0 : void
{abstract} +body_create() = 0 : RID
{abstract} +body_set_space(RID p_body, RID p_space) = 0 : void
{abstract} +body_get_space(RID p_body) const = 0 : RID
{abstract} +body_set_mode(RID p_body, Physics2DServer::BodyMode p_mode) = 0 : void
{abstract} +body_get_mode(RID p_body) const = 0 : Physics2DServer::BodyMode
{abstract} +body_add_shape(RID p_body, RID p_shape, const Transform2D & p_transform = Transform2D(), bool p_disabled = false) = 0 : void
{abstract} +body_set_shape(RID p_body, int p_shape_idx, RID p_shape) = 0 : void
{abstract} +body_set_shape_transform(RID p_body, int p_shape_idx, const Transform2D & p_transform) = 0 : void
{abstract} +body_set_shape_metadata(RID p_body, int p_shape_idx, const Variant & p_metadata) = 0 : void
{abstract} +body_get_shape_count(RID p_body) const = 0 : int
{abstract} +body_get_shape(RID p_body, int p_shape_idx) const = 0 : RID
{abstract} +body_get_shape_transform(RID p_body, int p_shape_idx) const = 0 : Transform2D
{abstract} +body_get_shape_metadata(RID p_body, int p_shape_idx) const = 0 : Variant
{abstract} +body_set_shape_disabled(RID p_body, int p_shape, bool p_disabled) = 0 : void
{abstract} +body_set_shape_as_one_way_collision(RID p_body, int p_shape, bool p_enabled, float p_margin = 0) = 0 : void
{abstract} +body_remove_shape(RID p_body, int p_shape_idx) = 0 : void
{abstract} +body_clear_shapes(RID p_body) = 0 : void
{abstract} +body_attach_object_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_object_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_attach_canvas_instance_id(RID p_body, uint32_t p_id) = 0 : void
{abstract} +body_get_canvas_instance_id(RID p_body) const = 0 : uint32_t
{abstract} +body_set_continuous_collision_detection_mode(RID p_body, Physics2DServer::CCDMode p_mode) = 0 : void
{abstract} +body_get_continuous_collision_detection_mode(RID p_body) const = 0 : Physics2DServer::CCDMode
{abstract} +body_set_collision_layer(RID p_body, uint32_t p_layer) = 0 : void
{abstract} +body_get_collision_layer(RID p_body) const = 0 : uint32_t
{abstract} +body_set_collision_mask(RID p_body, uint32_t p_mask) = 0 : void
{abstract} +body_get_collision_mask(RID p_body) const = 0 : uint32_t
{abstract} +body_set_param(RID p_body, Physics2DServer::BodyParameter p_param, float p_value) = 0 : void
{abstract} +body_get_param(RID p_body, Physics2DServer::BodyParameter p_param) const = 0 : float
{abstract} +body_set_state(RID p_body, Physics2DServer::BodyState p_state, const Variant & p_variant) = 0 : void
{abstract} +body_get_state(RID p_body, Physics2DServer::BodyState p_state) const = 0 : Variant
{abstract} +body_set_applied_force(RID p_body, const Vector2 & p_force) = 0 : void
{abstract} +body_get_applied_force(RID p_body) const = 0 : Vector2
{abstract} +body_set_applied_torque(RID p_body, float p_torque) = 0 : void
{abstract} +body_get_applied_torque(RID p_body) const = 0 : float
{abstract} +body_add_central_force(RID p_body, const Vector2 & p_force) = 0 : void
{abstract} +body_add_force(RID p_body, const Vector2 & p_offset, const Vector2 & p_force) = 0 : void
{abstract} +body_add_torque(RID p_body, float p_torque) = 0 : void
{abstract} +body_apply_central_impulse(RID p_body, const Vector2 & p_impulse) = 0 : void
{abstract} +body_apply_torque_impulse(RID p_body, float p_torque) = 0 : void
{abstract} +body_apply_impulse(RID p_body, const Vector2 & p_offset, const Vector2 & p_impulse) = 0 : void
{abstract} +body_set_axis_velocity(RID p_body, const Vector2 & p_axis_velocity) = 0 : void
{abstract} +body_add_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_remove_collision_exception(RID p_body, RID p_body_b) = 0 : void
{abstract} +body_get_collision_exceptions(RID p_body, List<RID> * p_exceptions) = 0 : void
{abstract} +body_set_max_contacts_reported(RID p_body, int p_contacts) = 0 : void
{abstract} +body_get_max_contacts_reported(RID p_body) const = 0 : int
{abstract} +body_set_contacts_reported_depth_threshold(RID p_body, float p_threshold) = 0 : void
{abstract} +body_get_contacts_reported_depth_threshold(RID p_body) const = 0 : float
{abstract} +body_set_omit_force_integration(RID p_body, bool p_omit) = 0 : void
{abstract} +body_is_omitting_force_integration(RID p_body) const = 0 : bool
{abstract} +body_set_force_integration_callback(RID p_body, Object * p_receiver, const StringName & p_method, const Variant & p_udata = Variant()) = 0 : void
{abstract} +body_collide_shape(RID p_body, int p_body_shape, RID p_shape, const Transform2D & p_shape_xform, const Vector2 & p_motion, Vector2 * r_results, int p_result_max, int & r_result_count) = 0 : bool
{abstract} +body_set_pickable(RID p_body, bool p_pickable) = 0 : void
{abstract} +body_get_direct_state(RID p_body) = 0 : Physics2DDirectBodyState *
{abstract} +body_test_motion(RID p_body, const Transform2D & p_from, const Vector2 & p_motion, bool p_infinite_inertia, float p_margin = 0.001, Physics2DServer::MotionResult * r_result = __null, bool p_exclude_raycast_shapes = true) = 0 : bool
{abstract} +body_test_ray_separation(RID p_body, const Transform2D & p_transform, bool p_infinite_inertia, Vector2 & r_recover_motion, Physics2DServer::SeparationResult * r_results, int p_result_max, float p_margin = 0.001) = 0 : int
{abstract} +joint_set_param(RID p_joint, Physics2DServer::JointParam p_param, real_t p_value) = 0 : void
{abstract} +joint_get_param(RID p_joint, Physics2DServer::JointParam p_param) const = 0 : real_t
{abstract} +joint_disable_collisions_between_bodies(RID p_joint, const bool p_disable) = 0 : void
{abstract} +joint_is_disabled_collisions_between_bodies(RID p_joint) const = 0 : bool
{abstract} +pin_joint_create(const Vector2 & p_anchor, RID p_body_a, RID p_body_b = = RID()) = 0 : RID
{abstract} +groove_joint_create(const Vector2 & p_a_groove1, const Vector2 & p_a_groove2, const Vector2 & p_b_anchor, RID p_body_a, RID p_body_b) = 0 : RID
{abstract} +damped_spring_joint_create(const Vector2 & p_anchor_a, const Vector2 & p_anchor_b, RID p_body_a, RID p_body_b = = RID()) = 0 : RID
{abstract} +pin_joint_set_param(RID p_joint, Physics2DServer::PinJointParam p_param, real_t p_value) = 0 : void
{abstract} +pin_joint_get_param(RID p_joint, Physics2DServer::PinJointParam p_param) const = 0 : real_t
{abstract} +damped_string_joint_set_param(RID p_joint, Physics2DServer::DampedStringParam p_param, real_t p_value) = 0 : void
{abstract} +damped_string_joint_get_param(RID p_joint, Physics2DServer::DampedStringParam p_param) const = 0 : real_t
{abstract} +joint_get_type(RID p_joint) const = 0 : Physics2DServer::JointType
{abstract} +free(RID p_rid) = 0 : void
{abstract} +set_active(bool p_active) = 0 : void
{abstract} +init() = 0 : void
{abstract} +step(float p_step) = 0 : void
{abstract} +sync() = 0 : void
{abstract} +flush_queries() = 0 : void
{abstract} +end_sync() = 0 : void
{abstract} +finish() = 0 : void
{abstract} +is_flushing_queries() const = 0 : bool
{abstract} +get_process_info(Physics2DServer::ProcessInfo p_info) = 0 : int
+Physics2DServer() : void
+~Physics2DServer() : void
}
class "SceneTree" as C_0001872058027933416994
class C_0001872058027933416994 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/main/scene_tree.h#L69{SceneTree}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_root() const : Viewport *
+call_group_flags(uint32_t p_call_flags, const StringName & p_group, const StringName & p_function, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notify_group_flags(uint32_t p_call_flags, const StringName & p_group, int p_notification) : void
+set_group_flags(uint32_t p_call_flags, const StringName & p_group, const String & p_name, const Variant & p_value) : void
+call_group(const StringName & p_group, const StringName & p_function, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+notify_group(const StringName & p_group, int p_notification) : void
+set_group(const StringName & p_group, const String & p_name, const Variant & p_value) : void
+flush_transform_notifications() : void
+input_text(const String & p_text) : void
+input_event(const Ref<InputEvent> & p_event) : void
+init() : void
+iteration(float p_time) : bool
+idle(float p_time) : bool
+finish() : void
+set_auto_accept_quit(bool p_enable) : void
+set_quit_on_go_back(bool p_enable) : void
+quit(int p_exit_code = -1) : void
+set_input_as_handled() : void
+is_input_handled() : bool
+get_physics_process_time() const : float
+get_idle_process_time() const : float
+is_node_being_edited(const Node * p_node) const : bool
+set_pause(bool p_enabled) : void
+is_paused() const : bool
+set_camera(const RID & p_camera) : void
+get_camera() const : RID
+set_debug_collisions_hint(bool p_enabled) : void
+is_debugging_collisions_hint() const : bool
+set_debug_navigation_hint(bool p_enabled) : void
+is_debugging_navigation_hint() const : bool
+set_debug_collisions_color(const Color & p_color) : void
+get_debug_collisions_color() const : Color
+set_debug_collision_contact_color(const Color & p_color) : void
+get_debug_collision_contact_color() const : Color
+set_debug_navigation_color(const Color & p_color) : void
+get_debug_navigation_color() const : Color
+set_debug_navigation_disabled_color(const Color & p_color) : void
+get_debug_navigation_disabled_color() const : Color
+get_debug_navigation_material() : Ref<Material>
+get_debug_navigation_disabled_material() : Ref<Material>
+get_debug_collision_material() : Ref<Material>
+get_debug_contact_mesh() : Ref<ArrayMesh>
+get_collision_debug_contact_count() : int
+get_frame() const : int64_t
+get_event_count() const : int64_t
+get_node_count() const : int
+queue_delete(Object * p_object) : void
+get_nodes_in_group(const StringName & p_group, List<Node *> * p_list) : void
+has_group(const StringName & p_identifier) const : bool
+set_screen_stretch(SceneTree::StretchMode p_mode, SceneTree::StretchAspect p_aspect, const Size2 & p_minsize, real_t p_shrink = 1) : void
+set_use_font_oversampling(bool p_oversampling) : void
+is_using_font_oversampling() const : bool
+set_edited_scene_root(Node * p_node) : void
+get_edited_scene_root() const : Node *
+set_current_scene(Node * p_scene) : void
+get_current_scene() const : Node *
+change_scene(const String & p_path) : Error
+change_scene_to(const Ref<PackedScene> & p_scene) : Error
+reload_current_scene() : Error
+create_timer(float p_delay_sec, bool p_process_pause = true) : Ref<SceneTreeTimer>
+add_current_scene(Node * p_current) : void
{static} +get_singleton() : SceneTree *
+drop_files(const Vector<String> & p_files, int p_from_screen = 0) : void
+global_menu_action(const Variant & p_id, const Variant & p_meta) : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
+get_multiplayer() const : Ref<MultiplayerAPI>
+set_multiplayer_poll_enabled(bool p_enabled) : void
+is_multiplayer_poll_enabled() const : bool
+set_multiplayer(Ref<MultiplayerAPI> p_multiplayer) : void
+set_network_peer(const Ref<NetworkedMultiplayerPeer> & p_network_peer) : void
+get_network_peer() const : Ref<NetworkedMultiplayerPeer>
+is_network_server() const : bool
+has_network_peer() const : bool
+get_network_unique_id() const : int
+get_network_connected_peers() const : Vector<int>
+get_rpc_sender_id() const : int
+set_refuse_new_network_connections(bool p_refuse) : void
+is_refusing_new_network_connections() const : bool
{static} +add_idle_callback(SceneTree::IdleCallback p_callback) : void
+SceneTree() : void
+~SceneTree() : void
+NOTIFICATION_TRANSFORM_CHANGED : enum
}
class "_ArrayVariantSortCustom" as C_0000762417759113755306
class C_0000762417759113755306 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L298{_ArrayVariantSortCustom}]] {
+operator()(const Variant & p_l, const Variant & p_r) const : bool
+obj : Object * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L300{obj}]]]
+func : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/core/array.cpp#L301{func}]]]
}
class "InputMap" as C_0000314051240057057851
class C_0000314051240057057851 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L37{InputMap}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
{static} +get_singleton() : InputMap *
+has_action(const StringName & p_action) const : bool
+get_actions() const : List<StringName>
+add_action(const StringName & p_action, float p_deadzone = 0.5) : void
+erase_action(const StringName & p_action) : void
+action_get_deadzone(const StringName & p_action) : float
+action_set_deadzone(const StringName & p_action, float p_deadzone) : void
+action_add_event(const StringName & p_action, const Ref<InputEvent> & p_event) : void
+action_has_event(const StringName & p_action, const Ref<InputEvent> & p_event) : bool
+action_erase_event(const StringName & p_action, const Ref<InputEvent> & p_event) : void
+action_erase_events(const StringName & p_action) : void
+get_action_list(const StringName & p_action) : const List<Ref<InputEvent>> *
+event_is_action(const Ref<InputEvent> & p_event, const StringName & p_action) const : bool
+event_get_action_status(const Ref<InputEvent> & p_event, const StringName & p_action, bool * p_pressed = __null, float * p_strength = __null) const : bool
+get_action_map() const : const Map<StringName,InputMap::Action> &
+load_from_globals() : void
+load_default() : void
+InputMap() : void
{static} +ALL_DEVICES : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/input_map.h#L45{A special value used to signify that a given Action can be triggered by any device}]]]
}
abstract "Input" as C_0000535376932101028371
abstract C_0000535376932101028371 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/os/input.h#L38{Input}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+set_mouse_mode(Input::MouseMode p_mode) : void
+get_mouse_mode() const : Input::MouseMode
{static} +get_singleton() : Input *
{abstract} +is_key_pressed(int p_scancode) const = 0 : bool
{abstract} +is_mouse_button_pressed(int p_button) const = 0 : bool
{abstract} +is_joy_button_pressed(int p_device, int p_button) const = 0 : bool
{abstract} +is_action_pressed(const StringName & p_action) const = 0 : bool
{abstract} +is_action_just_pressed(const StringName & p_action) const = 0 : bool
{abstract} +is_action_just_released(const StringName & p_action) const = 0 : bool
{abstract} +get_action_strength(const StringName & p_action) const = 0 : float
{abstract} +get_joy_axis(int p_device, int p_axis) const = 0 : float
{abstract} +get_joy_name(int p_idx) = 0 : String
{abstract} +get_connected_joypads() = 0 : Array
{abstract} +joy_connection_changed(int p_idx, bool p_connected, String p_name, String p_guid) = 0 : void
{abstract} +add_joy_mapping(String p_mapping, bool p_update_existing = false) = 0 : void
{abstract} +remove_joy_mapping(String p_guid) = 0 : void
{abstract} +is_joy_known(int p_device) = 0 : bool
{abstract} +get_joy_guid(int p_device) const = 0 : String
{abstract} +get_joy_vibration_strength(int p_device) = 0 : Vector2
{abstract} +get_joy_vibration_duration(int p_device) = 0 : float
{abstract} +get_joy_vibration_timestamp(int p_device) = 0 : uint64_t
{abstract} +start_joy_vibration(int p_device, float p_weak_magnitude, float p_strong_magnitude, float p_duration = 0) = 0 : void
{abstract} +stop_joy_vibration(int p_device) = 0 : void
{abstract} +vibrate_handheld(int p_duration_ms = 500) = 0 : void
{abstract} +get_mouse_position() const = 0 : Point2
{abstract} +get_last_mouse_speed() const = 0 : Point2
{abstract} +get_mouse_button_mask() const = 0 : int
{abstract} +warp_mouse_position(const Vector2 & p_to) = 0 : void
{abstract} +warp_mouse_motion(const Ref<InputEventMouseMotion> & p_motion, const Rect2 & p_rect) = 0 : Point2i
{abstract} +get_gravity() const = 0 : Vector3
{abstract} +get_accelerometer() const = 0 : Vector3
{abstract} +get_magnetometer() const = 0 : Vector3
{abstract} +get_gyroscope() const = 0 : Vector3
{abstract} +action_press(const StringName & p_action, float p_strength = 1.f) = 0 : void
{abstract} +action_release(const StringName & p_action) = 0 : void
+get_argument_options(const StringName & p_function, int p_idx, List<String> * r_options) const : void
{abstract} +is_emulating_touch_from_mouse() const = 0 : bool
{abstract} +is_emulating_mouse_from_touch() const = 0 : bool
{abstract} +get_default_cursor_shape() const = 0 : Input::CursorShape
{abstract} +set_default_cursor_shape(Input::CursorShape p_shape) = 0 : void
{abstract} +get_current_cursor_shape() const = 0 : Input::CursorShape
{abstract} +set_custom_mouse_cursor(const RES & p_cursor, Input::CursorShape p_shape = CURSOR_ARROW, const Vector2 & p_hotspot = Vector2()) = 0 : void
{abstract} +get_joy_button_string(int p_button) = 0 : String
{abstract} +get_joy_axis_string(int p_axis) = 0 : String
{abstract} +get_joy_button_index_from_string(String p_button) = 0 : int
{abstract} +get_joy_axis_index_from_string(String p_axis) = 0 : int
{abstract} +parse_input_event(const Ref<InputEvent> & p_event) = 0 : void
{abstract} +accumulate_input_event(const Ref<InputEvent> & p_event) = 0 : void
{abstract} +flush_accumulated_events() = 0 : void
{abstract} +set_use_accumulated_input(bool p_enable) = 0 : void
+Input() : void
}
class "AudioServer" as C_0001370497546359815893
class C_0001370497546359815893 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./servers/audio_server.h#L148{AudioServer}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_channel_count() const : int
+thread_has_channel_mix_buffer(int p_bus, int p_buffer) const : bool
+thread_get_channel_mix_buffer(int p_bus, int p_buffer) : AudioFrame *
+thread_get_mix_buffer_size() const : int
+thread_find_bus_index(const StringName & p_name) : int
+set_bus_count(int p_count) : void
+get_bus_count() const : int
+remove_bus(int p_index) : void
+add_bus(int p_at_pos = -1) : void
+move_bus(int p_bus, int p_to_pos) : void
+set_bus_name(int p_bus, const String & p_name) : void
+get_bus_name(int p_bus) const : String
+get_bus_index(const StringName & p_bus_name) const : int
+get_bus_channels(int p_bus) const : int
+set_bus_volume_db(int p_bus, float p_volume_db) : void
+get_bus_volume_db(int p_bus) const : float
+set_bus_send(int p_bus, const StringName & p_send) : void
+get_bus_send(int p_bus) const : StringName
+set_bus_solo(int p_bus, bool p_enable) : void
+is_bus_solo(int p_bus) const : bool
+set_bus_mute(int p_bus, bool p_enable) : void
+is_bus_mute(int p_bus) const : bool
+set_bus_bypass_effects(int p_bus, bool p_enable) : void
+is_bus_bypassing_effects(int p_bus) const : bool
+add_bus_effect(int p_bus, const Ref<AudioEffect> & p_effect, int p_at_pos = -1) : void
+remove_bus_effect(int p_bus, int p_effect) : void
+get_bus_effect_count(int p_bus) : int
+get_bus_effect(int p_bus, int p_effect) : Ref<AudioEffect>
+get_bus_effect_instance(int p_bus, int p_effect, int p_channel = 0) : Ref<AudioEffectInstance>
+swap_bus_effects(int p_bus, int p_effect, int p_by_effect) : void
+set_bus_effect_enabled(int p_bus, int p_effect, bool p_enabled) : void
+is_bus_effect_enabled(int p_bus, int p_effect) const : bool
+get_bus_peak_volume_left_db(int p_bus, int p_channel) const : float
+get_bus_peak_volume_right_db(int p_bus, int p_channel) const : float
+is_bus_channel_active(int p_bus, int p_channel) const : bool
+set_global_rate_scale(float p_scale) : void
+get_global_rate_scale() const : float
+init() : void
+finish() : void
+update() : void
+load_default_bus_layout() : void
+lock() : void
+unlock() : void
+get_speaker_mode() const : AudioServer::SpeakerMode
+get_mix_rate() const : float
+read_output_peak_db() const : float
{static} +get_singleton() : AudioServer *
+get_output_latency() const : double
+get_time_to_next_mix() const : double
+get_time_since_last_mix() const : double
+audio_data_alloc(uint32_t p_data_len, const uint8_t * p_from_data = __null) : void *
+audio_data_free(void * p_data) : void
+audio_data_get_total_memory_usage() const : size_t
+audio_data_get_max_memory_usage() const : size_t
+add_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+remove_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+add_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+remove_update_callback(AudioServer::AudioCallback p_callback, void * p_userdata) : void
+set_bus_layout(const Ref<AudioBusLayout> & p_bus_layout) : void
+generate_bus_layout() const : Ref<AudioBusLayout>
+get_device_list() : Array
+get_device() : String
+set_device(String device) : void
+capture_get_device_list() : Array
+capture_get_device() : String
+capture_set_device(const String & p_name) : void
+AudioServer() : void
+~AudioServer() : void
+AUDIO_DATA_INVALID_ID : enum
}
class "UndoRedo" as C_0000096380574950611570
class C_0000096380574950611570 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/undo_redo.h#L37{UndoRedo}]] {
+get_class() const : String
+_get_class_namev() const : const StringName *
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_parent_class_static() : String
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_category_static() : String
{static} +inherits_static() : String
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
{static} +initialize_class() : void
+get_save_class() const : String
+_add_do_method(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+_add_undo_method(const Variant ** p_args, int p_argcount, Variant::CallError & r_error) : Variant
+create_action(const String & p_name = "", UndoRedo::MergeMode p_mode = MERGE_DISABLE) : void
+add_do_method(Object * p_object, const String & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+add_undo_method(Object * p_object, const String & p_method, const Variant & p_arg1 = Variant(), const Variant & p_arg2 = Variant(), const Variant & p_arg3 = Variant(), const Variant & p_arg4 = Variant(), const Variant & p_arg5 = Variant()) : void
+add_do_property(Object * p_object, const String & p_property, const Variant & p_value) : void
+add_undo_property(Object * p_object, const String & p_property, const Variant & p_value) : void
+add_do_reference(Object * p_object) : void
+add_undo_reference(Object * p_object) : void
+is_committing_action() const : bool
+commit_action() : void
+redo() : bool
+undo() : bool
+get_current_action_name() const : String
+clear_history(bool p_increase_version = true) : void
+has_undo() : bool
+has_redo() : bool
+get_version() const : uint64_t
+set_commit_notify_callback(UndoRedo::CommitNotifyCallback p_callback, void * p_ud) : void
+set_method_notify_callback(UndoRedo::MethodNotifyCallback p_method_callback, void * p_ud) : void
+set_property_notify_callback(UndoRedo::PropertyNotifyCallback p_property_callback, void * p_ud) : void
+UndoRedo() : void
+~UndoRedo() : void
}
C_0000699772808699382057 o- - C_0001357046052919104842 : -count
C_0000945411446247634027 - -> C_0000945411446247634027 : +invalid_node_name_characters
C_0002153970433534458832 o- - C_0000945411446247634027 : +name
C_0002153970433534458832 o- - C_0001858199404643284193 : +class_name
C_0002153970433534458832 o- - C_0000945411446247634027 : +hint_string
C_0000774532299576474923 o- - C_0000945411446247634027 : +name
C_0000774532299576474923 o- - C_0002153970433534458832 : +return_val
C_0000774532299576474923 o- - C_0000788782266645010446 : +arguments
C_0000774532299576474923 o- - C_0000367042517371617856 : +default_arguments
C_0001531814603945772616 o- - C_0001578539238208480863 : -signal_map
C_0001531814603945772616 o- - C_0000751300156436098886 : -connections
C_0001531814603945772616 o- - C_0000699772808699382057 : -_lock_index
C_0001531814603945772616 o- - C_0000051860595756965531 : -change_receptors
C_0001531814603945772616 - -> C_0000933379568804427881 : -_rc
C_0001531814603945772616 o- - C_0001682405743486361214 : -editor_section_folding
C_0001531814603945772616 - -> C_0001735438654351294549 : -script_instance
C_0001531814603945772616 o- - C_0002025812040042972946 : -script
C_0001531814603945772616 o- - C_0001299121424291583786 : -metadata
C_0001531814603945772616 o- - C_0001858199404643284193 : -_class_name
C_0001531814603945772616 - -> C_0001858199404643284193 : -_class_ptr
C_0001531814603945772616 o- - C_0001357046052919104842 : -instance_binding_count
C_0001531814603945772616 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <.. C_0001778859257025660860 : +<<friend>>
C_0001531814603945772616 <.. C_0000132048052014479231 : +<<friend>>
C_0000219886141561409828 - -+ C_0001531814603945772616
C_0001267214583673362755 - -+ C_0001531814603945772616
C_0001267214583673362755 - -> C_0001531814603945772616 : +source
C_0001267214583673362755 o- - C_0001858199404643284193 : +signal
C_0001267214583673362755 - -> C_0001531814603945772616 : +target
C_0001267214583673362755 o- - C_0001858199404643284193 : +method
C_0001267214583673362755 o- - C_0000367042517371617856 : +binds
C_0000250357724807605097 - -+ C_0001531814603945772616
C_0000250357724807605097 o- - C_0000774532299576474923 : +user
C_0002064336919270342687 - -> C_0001531814603945772616 : -instances
C_0002064336919270342687 - -> C_0001531814603945772616 : -instance_checks
C_0002064336919270342687 <.. C_0001531814603945772616 : +<<friend>>
C_0001040552259499621557 - -+ C_0002064336919270342687
C_0001725595510223069271 o- - C_0001858199404643284193 : -name
C_0001725595510223069271 o- - C_0000367042517371617856 : -default_arguments
C_0001725595510223069271 o- - C_0001169846630986447699 : #arg_names
C_0000626842387047507019 o- - C_0000774532299576474923 : #arguments
C_0001725595510223069271 <|- - C_0000626842387047507019
C_0002161264899189627575 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0002161264899189627575
C_0000514530488699023626 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000514530488699023626
C_0001500902353747816170 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001500902353747816170
C_0001463339540638256927 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001463339540638256927
C_0001770130608234301442 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001770130608234301442
C_0001227602006568872099 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001227602006568872099
C_0000721345300172868993 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000721345300172868993
C_0000779559418824132960 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000779559418824132960
C_0001326581917102107425 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001326581917102107425
C_0000845455246171879191 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000845455246171879191
C_0000081704011730798793 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000081704011730798793
C_0002027329212022555569 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0002027329212022555569
C_0000512545424965820103 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000512545424965820103
C_0002087322448002339587 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0002087322448002339587
C_0000031906668996487033 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000031906668996487033
C_0001134043413451695381 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001134043413451695381
C_0001212767095252394753 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001212767095252394753
C_0001038624653636336005 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001038624653636336005
C_0000375613860790632263 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000375613860790632263
C_0001053911039767528095 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001053911039767528095
C_0000462780498821063561 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000462780498821063561
C_0000803203155573352820 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000803203155573352820
C_0001728875246190146863 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0001728875246190146863
C_0000319868049196089894 o- - C_0001858199404643284193 : +type_name
C_0001725595510223069271 <|- - C_0000319868049196089894
C_0000104564426296396960 - -> C_0001858199404643284193 : +classes
C_0000104564426296396960 - -> C_0001858199404643284193 : +resource_base_extensions
C_0000104564426296396960 - -> C_0001858199404643284193 : +compat_classes
C_0000104564426296396960 - -> C_0001858199404643284193 : +default_values
C_0000104564426296396960 - -> C_0000210234563198599367 : +default_values
C_0000104564426296396960 - -> C_0001858199404643284193 : +default_values_cached
C_0001778859257025660860 o- - C_0001858199404643284193 : -_class_name
C_0001778859257025660860 o- - C_0000699772808699382057 : -refcount
C_0001778859257025660860 o- - C_0000699772808699382057 : -refcount_init
C_0001778859257025660860 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001778859257025660860
C_0001213123647052694419 o- - C_0001858199404643284193 : -_class_name
C_0001213123647052694419 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001213123647052694419
C_0001699661383862634192 o- - C_0001858199404643284193 : -_class_name
C_0001699661383862634192 o- - C_0001858199404643284193 : -function
C_0001699661383862634192 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001699661383862634192
C_0000218299049716973303 o- - C_0001858199404643284193 : -_class_name
C_0000218299049716973303 <.. C_0001872058027933416994 : +<<friend>>
C_0000218299049716973303 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000218299049716973303
C_0000933379568804427881 - -> C_0001531814603945772616 : -_ptr
C_0000825523737350882091 - -> C_0000825523737350882091 : -singleton
C_0001951177692366602790 o- - C_0001858199404643284193 : -_class_name
C_0001951177692366602790 o- - C_0000945411446247634027 : -name
C_0001951177692366602790 o- - C_0000945411446247634027 : -path_cache
C_0001951177692366602790 o- - C_0000945411446247634027 : -import_path
C_0001951177692366602790 - -> C_0000218299049716973303 : -local_scene
C_0001951177692366602790 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001951177692366602790
C_0001608678623693693822 o- - C_0001858199404643284193 : -_class_name
C_0001608678623693693822 <.. C_0001649884439586022807 : +<<friend>>
C_0001608678623693693822 <.. C_0000104564426296396960 : +<<friend>>
C_0001951177692366602790 <|- - C_0001608678623693693822
C_0001649884439586022807 - -> C_0001531814603945772616 : -owner
C_0001649884439586022807 o- - C_0000788782266645010446 : -properties
C_0001649884439586022807 - -> C_0002110837736536862228 : -language
C_0001735438654351294549 <|- - C_0001649884439586022807
C_0000970940027123558604 o- - C_0001858199404643284193 : -_class_name
C_0000970940027123558604 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000970940027123558604
C_0001823345232236209470 o- - C_0001858199404643284193 : +name
C_0001823345232236209470 - -> C_0001531814603945772616 : +ptr
C_0000361490529588572420 o- - C_0000945411446247634027 : -_execpath
C_0000361490529588572420 o- - C_0002063845175027013341 : -_cmdline
C_0000361490529588572420 o- - C_0000945411446247634027 : -_local_clipboard
C_0000361490529588572420 o- - C_0002063845175027013341 : -restart_commandline
C_0000361490529588572420 - -> C_0000361490529588572420 : -singleton
C_0001485048025194488343 o- - C_0001858199404643284193 : -_class_name
C_0001485048025194488343 o- - C_0000945411446247634027 : -locale
C_0001485048025194488343 o- - C_0000945411446247634027 : -fallback
C_0001485048025194488343 - -> C_0001485048025194488343 : -singleton
C_0001485048025194488343 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001485048025194488343
C_0000132048052014479231 - -> C_0001531814603945772616 : +obj
C_0000115801560197752094 o- - C_0001858199404643284193 : +signal
C_0000115801560197752094 - -> C_0001531814603945772616 : +target
C_0000115801560197752094 o- - C_0001858199404643284193 : +method
C_0000066148521405667716 o- - C_0001858199404643284193 : -_class_name
C_0000066148521405667716 o- - C_0000945411446247634027 : #resource_path
C_0000066148521405667716 o- - C_0002063845175027013341 : #input_presets
C_0000066148521405667716 o- - C_0001682405743486361214 : #custom_features
C_0000066148521405667716 - -> C_0000066148521405667716 : #singleton
C_0000066148521405667716 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000066148521405667716
C_0001191393512042218074 o- - C_0001858199404643284193 : -_class_name
C_0001191393512042218074 - -> C_0001191393512042218074 : #singleton
C_0001191393512042218074 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001191393512042218074
C_0000425668537377496256 o- - C_0001858199404643284193 : -_class_name
C_0000425668537377496256 o- - C_0000945411446247634027 : -expression
C_0000425668537377496256 o- - C_0000945411446247634027 : -error_str
C_0000425668537377496256 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0000425668537377496256
C_0001197720528033242618 o- - C_0001858199404643284193 : -_class_name
C_0001197720528033242618 - -> C_0001197720528033242618 : #singleton
C_0001197720528033242618 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001197720528033242618
C_0001130773750498288283 o- - C_0001858199404643284193 : -_class_name
C_0001130773750498288283 - -> C_0001130773750498288283 : #singleton
C_0001130773750498288283 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001130773750498288283
C_0000790752023609648644 o- - C_0001858199404643284193 : -_class_name
C_0000790752023609648644 - -> C_0000790752023609648644 : #singleton
C_0000790752023609648644 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000790752023609648644
C_0000897221634691489964 o- - C_0001858199404643284193 : -_class_name
C_0000897221634691489964 - -> C_0000897221634691489964 : -singleton
C_0000897221634691489964 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000897221634691489964
C_0000135188690773659020 o- - C_0001858199404643284193 : -_class_name
C_0000135188690773659020 - -> C_0000135188690773659020 : -singleton
C_0000135188690773659020 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000135188690773659020
C_0001150621116588802549 o- - C_0001858199404643284193 : -_class_name
C_0001150621116588802549 o- - C_0000210234563198599367 : #ret
C_0001150621116588802549 o- - C_0000210234563198599367 : #userdata
C_0001150621116588802549 - -> C_0001531814603945772616 : #target_instance
C_0001150621116588802549 o- - C_0001858199404643284193 : #target_method
C_0001150621116588802549 <.. C_0000104564426296396960 : +<<friend>>
C_0001778859257025660860 <|- - C_0001150621116588802549
C_0001186331261774827872 o- - C_0001858199404643284193 : -_class_name
C_0001186331261774827872 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001186331261774827872
C_0001895218672297528471 o- - C_0001858199404643284193 : -_class_name
C_0001895218672297528471 - -> C_0001895218672297528471 : #singleton
C_0001895218672297528471 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001895218672297528471
C_0000979065355535690103 o- - C_0001858199404643284193 : -_class_name
C_0000979065355535690103 - -> C_0000979065355535690103 : #singleton
C_0000979065355535690103 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000979065355535690103
C_0001701907280759632930 o- - C_0001858199404643284193 : -_class_name
C_0001701907280759632930 - -> C_0001701907280759632930 : #singleton
C_0001701907280759632930 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001701907280759632930
C_0001589464385186808769 o- - C_0001858199404643284193 : -_class_name
C_0001589464385186808769 - -> C_0001589464385186808769 : -singleton
C_0001589464385186808769 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001589464385186808769
C_0001559146041463814963 o- - C_0001858199404643284193 : -_class_name
C_0001559146041463814963 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001559146041463814963
C_0000503002593685351124 o- - C_0001858199404643284193 : -_class_name
C_0000503002593685351124 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000503002593685351124
C_0000493041171271776846 - -+ C_0000503002593685351124
C_0000493041171271776846 - -> C_0001531814603945772616 : +collider
C_0000461609734144368587 - -+ C_0000503002593685351124
C_0000461609734144368587 - -> C_0001531814603945772616 : +collider
C_0001034902024938599899 o- - C_0001858199404643284193 : -_class_name
C_0001034902024938599899 - -> C_0001034902024938599899 : -singleton
C_0001034902024938599899 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001034902024938599899
C_0002302096389852429221 o- - C_0001858199404643284193 : -_class_name
C_0002302096389852429221 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0002302096389852429221
C_0000236996062289735257 o- - C_0001858199404643284193 : -_class_name
C_0000236996062289735257 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000236996062289735257
C_0001801355352189289676 - -+ C_0000236996062289735257
C_0001801355352189289676 - -> C_0001531814603945772616 : +collider
C_0001801355352189289676 o- - C_0000210234563198599367 : +metadata
C_0001771770302499309898 - -+ C_0000236996062289735257
C_0001771770302499309898 - -> C_0001531814603945772616 : +collider
C_0001771770302499309898 o- - C_0000210234563198599367 : +metadata
C_0001561529841391244418 o- - C_0001858199404643284193 : -_class_name
C_0001561529841391244418 - -> C_0001561529841391244418 : -singleton
C_0001561529841391244418 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001561529841391244418
C_0001872058027933416994 o- - C_0001858199404643284193 : -_class_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -tree_changed_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -node_added_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -node_removed_name
C_0001872058027933416994 o- - C_0001858199404643284193 : -node_renamed_name
C_0001872058027933416994 - -> C_0000218299049716973303 : -edited_scene_root
C_0001872058027933416994 - -> C_0000218299049716973303 : -current_scene
C_0001872058027933416994 o- - C_0001768230974934037264 : -live_edit_root
C_0001872058027933416994 o- - C_0000945411446247634027 : -live_edit_scene
C_0001872058027933416994 - -> C_0001872058027933416994 : -singleton
C_0001872058027933416994 <.. C_0000218299049716973303 : +<<friend>>
C_0001872058027933416994 <.. C_0000104564426296396960 : +<<friend>>
C_0000970940027123558604 <|- - C_0001872058027933416994
C_0000762417759113755306 - -> C_0001531814603945772616 : +obj
C_0000762417759113755306 o- - C_0001858199404643284193 : +func
C_0000314051240057057851 o- - C_0001858199404643284193 : -_class_name
C_0000314051240057057851 - -> C_0000314051240057057851 : -singleton
C_0000314051240057057851 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000314051240057057851
C_0000535376932101028371 o- - C_0001858199404643284193 : -_class_name
C_0000535376932101028371 - -> C_0000535376932101028371 : -singleton
C_0000535376932101028371 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000535376932101028371
C_0001370497546359815893 o- - C_0001858199404643284193 : -_class_name
C_0001370497546359815893 - -> C_0001370497546359815893 : -singleton
C_0001370497546359815893 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0001370497546359815893
C_0000096380574950611570 o- - C_0001858199404643284193 : -_class_name
C_0000096380574950611570 <.. C_0000104564426296396960 : +<<friend>>
C_0001531814603945772616 <|- - C_0000096380574950611570
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>