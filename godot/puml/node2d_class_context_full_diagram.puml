@startuml
title Godot Node2D class context
left to right direction
class "Vector2" as C_0000053309527800613276
class C_0000053309527800613276 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L39{Vector2}]] {
+Vector2(real_t p_x, real_t p_y) : void
+Vector2() : void
..
+operator!=(const Vector2 & p_vec2) const : bool
+operator*(const Vector2 & p_v1) const : Vector2
+operator*(const real_t & rvalue) const : Vector2
+operator*=(const real_t & rvalue) : void
+operator*=(const Vector2 & rvalue) : void
+operator+(const Vector2 & p_v) const : Vector2
+operator+=(const Vector2 & p_v) : void
+operator-(const Vector2 & p_v) const : Vector2
+operator-() const : Vector2
+operator-=(const Vector2 & p_v) : void
+operator/(const Vector2 & p_v1) const : Vector2
+operator/(const real_t & rvalue) const : Vector2
+operator/=(const real_t & rvalue) : void
+operator/=(const Vector2 & rvalue) : void
+operator<(const Vector2 & p_vec2) const : bool
+operator<=(const Vector2 & p_vec2) const : bool
+operator==(const Vector2 & p_vec2) const : bool
+operator>(const Vector2 & p_vec2) const : bool
+operator>=(const Vector2 & p_vec2) const : bool
+operator[](int p_idx) const : const real_t &
+operator[](int p_idx) : real_t &
..
+abs() const : Vector2
+angle() const : real_t
+angle_to(const Vector2 & p_vector2) const : real_t
+angle_to_point(const Vector2 & p_vector2) const : real_t
+aspect() const : real_t
+bounce(const Vector2 & p_normal) const : Vector2
+ceil() const : Vector2
+clamped(real_t p_len) const : Vector2
+cross(const Vector2 & p_other) const : real_t
+cubic_interpolate(const Vector2 & p_b, const Vector2 & p_pre_a, const Vector2 & p_post_b, real_t p_weight) const : Vector2
+direction_to(const Vector2 & p_to) const : Vector2
+distance_squared_to(const Vector2 & p_vector2) const : real_t
+distance_to(const Vector2 & p_vector2) const : real_t
+dot(const Vector2 & p_other) const : real_t
+floor() const : Vector2
+is_equal_approx(const Vector2 & p_v) const : bool
+is_normalized() const : bool
+length() const : real_t
+length_squared() const : real_t
{static} +linear_interpolate(const Vector2 & p_a, const Vector2 & p_b, real_t p_weight) : Vector2
+linear_interpolate(const Vector2 & p_to, real_t p_weight) const : Vector2
+move_toward(const Vector2 & p_to, const real_t p_delta) const : Vector2
+normalize() : void
+normalized() const : Vector2
+operator String() const : String
+plane_project(real_t p_d, const Vector2 & p_vec) const : Vector2
+posmod(const real_t p_mod) const : Vector2
+posmodv(const Vector2 & p_modv) const : Vector2
+project(const Vector2 & p_to) const : Vector2
+reflect(const Vector2 & p_normal) const : Vector2
+rotated(real_t p_by) const : Vector2
+round() const : Vector2
+set_rotation(real_t p_radians) : void
+sign() const : Vector2
+slerp(const Vector2 & p_to, real_t p_weight) const : Vector2
+slide(const Vector2 & p_normal) const : Vector2
+snapped(const Vector2 & p_by) const : Vector2
+tangent() const : Vector2
__
+ : Vector2::(anonymous_506200) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L46{}]]]
+ : Vector2::(anonymous_506305) [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/vector2.h#L50{}]]]
}
class "Transform2D" as C_0001296138246691404804
class C_0001296138246691404804 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L37{Transform2D}]] {
+Transform2D(real_t xx, real_t xy, real_t yx, real_t yy, real_t ox, real_t oy) : void
+Transform2D(real_t p_rot, const Vector2 & p_pos) : void
+Transform2D() : void
..
+operator!=(const Transform2D & p_transform) const : bool
+operator*(const Transform2D & p_transform) const : Transform2D
+operator*=(const Transform2D & p_transform) : void
+operator==(const Transform2D & p_transform) const : bool
+operator[](int p_idx) const : const Vector2 &
+operator[](int p_idx) : Vector2 &
..
+affine_inverse() const : Transform2D
+affine_invert() : void
+basis_determinant() const : real_t
+basis_scaled(const Size2 & p_scale) const : Transform2D
+basis_xform(const Vector2 & p_vec) const : Vector2
+basis_xform_inv(const Vector2 & p_vec) const : Vector2
+get_axis(int p_axis) const : Vector2
+get_origin() const : const Vector2 &
+get_rotation() const : real_t
+get_scale() const : Size2
+interpolate_with(const Transform2D & p_transform, real_t p_c) const : Transform2D
+inverse() const : Transform2D
+invert() : void
+is_equal_approx(const Transform2D & p_transform) const : bool
+operator String() const : String
+orthonormalize() : void
+orthonormalized() const : Transform2D
+rotate(real_t p_phi) : void
+rotated(real_t p_phi) const : Transform2D
+scale(const Size2 & p_scale) : void
+scale_basis(const Size2 & p_scale) : void
+scaled(const Size2 & p_scale) const : Transform2D
+set_axis(int p_axis, const Vector2 & p_vec) : void
+set_origin(const Vector2 & p_origin) : void
+set_rotation(real_t p_rot) : void
+set_rotation_and_scale(real_t p_rot, const Size2 & p_scale) : void
+set_scale(const Size2 & p_scale) : void
+tdotx(const Vector2 & v) const : real_t
+tdoty(const Vector2 & v) const : real_t
+translate(real_t p_tx, real_t p_ty) : void
+translate(const Vector2 & p_translation) : void
+translated(const Vector2 & p_offset) const : Transform2D
+untranslated() const : Transform2D
+xform(const Vector2 & p_vec) const : Vector2
+xform(const Rect2 & p_rect) const : Rect2
+xform(const PoolVector<Vector2> & p_array) const : PoolVector<Vector2>
+xform_inv(const Vector2 & p_vec) const : Vector2
+xform_inv(const Rect2 & p_rect) const : Rect2
+xform_inv(const PoolVector<Vector2> & p_array) const : PoolVector<Vector2>
__
+elements : Vector2[3] [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/math/transform_2d.h#L49{elements}]]]
}
class "StringName" as C_0001858199404643284193
class C_0001858199404643284193 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L44{StringName}]] {
-StringName(StringName::_Data * p_data) : void
+StringName(const char * p_name) : void
+StringName(const StringName & p_name) : void
+StringName(const String & p_name) : void
+StringName(const StaticCString & p_static_string) : void
+StringName() : void
+~StringName() : void
..
+operator=(const StringName & p_name) : void
..
+operator!=(const String & p_name) const : bool
+operator!=(const StringName & p_name) const : bool
+operator<(const StringName & p_name) const : bool
+operator==(const String & p_name) const : bool
+operator==(const char * p_name) const : bool
+operator==(const StringName & p_name) const : bool
..
{static} -cleanup() : void
+data_unique_pointer() const : const void *
+hash() const : uint32_t
+operator String() const : String
+operator const void *() const : const void *
{static} +search(const char * p_name) : StringName
{static} +search(const CharType * p_name) : StringName
{static} +search(const String & p_name) : StringName
{static} -setup() : void
-unref() : void
__
-STRING_TABLE_BITS : enum
-STRING_TABLE_LEN : enum
-STRING_TABLE_MASK : enum
-_data : StringName::_Data * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L73{_data}]]]
{static} -_table : StringName::_Data *[4096] [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L71{_table}]]]
{static} -configured : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L88{configured}]]]
{static} -lock : Mutex [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/string_name.h#L85{lock}]]]
}
class "ClassDB" as C_0000104564426296396960
class C_0000104564426296396960 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L94{ClassDB}]] {
{static} +_add_class<T>() : void
{static} +_add_class2(const StringName & p_class, const StringName & p_inherits) : void
{static} +_create_ptr_func<T>() : class Object *
{static} -_get_parent_class(const StringName & p_class) : StringName
{static} -_is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +add_compatibility_class(const StringName & p_class, const StringName & p_fallback) : void
{static} +add_property(StringName p_class, const PropertyInfo & p_pinfo, const StringName & p_setter, const StringName & p_getter, int p_index = -1) : void
{static} +add_property_group(StringName p_class, const String & p_name, const String & p_prefix = "") : void
{static} +add_resource_base_extension(const StringName & p_extension, const StringName & p_class) : void
{static} +add_signal(StringName p_class, const MethodInfo & p_signal) : void
{static} +add_virtual_method(const StringName & p_class, const MethodInfo & p_method, bool p_virtual = true) : void
{static} +bind_integer_constant(const StringName & p_class, const StringName & p_enum, const StringName & p_name, int p_constant) : void
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7) : class MethodBind *
{static} +bind_method<N,M>(N p_method_name, M p_method, const Variant & p_def1, const Variant & p_def2, const Variant & p_def3, const Variant & p_def4, const Variant & p_def5, const Variant & p_def6, const Variant & p_def7, const Variant & p_def8) : class MethodBind *
{static} +bind_methodfi(uint32_t p_flags, MethodBind * p_bind, const MethodDefinition & method_name, const Variant ** p_defs, int p_defcount) : MethodBind *
{static} +bind_vararg_method<M>(uint32_t p_flags, StringName p_name, M p_method, const MethodInfo & p_info = MethodInfo(), const Vector<Variant> & p_default_args = Vector<Variant>(), bool p_return_nil_is_variant = true) : class MethodBind *
{static} +can_instance(const StringName & p_class) : bool
{static} +class_exists(const StringName & p_class) : bool
{static} +class_get_default_property_value(const StringName & p_class, const StringName & p_property, bool * r_valid = __null) : Variant
{static} +cleanup() : void
{static} +cleanup_defaults() : void
{static} +creator<T>() : class Object *
{static} +get_api_hash(ClassDB::APIType p_api) : uint64_t
{static} +get_api_type(const StringName & p_class) : ClassDB::APIType
{static} +get_category(const StringName & p_node) : StringName
{static} +get_class_list(List<StringName> * p_classes) : void
{static} +get_current_api() : ClassDB::APIType
{static} +get_direct_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_enum_constants(const StringName & p_class, const StringName & p_enum, List<StringName> * p_constants, bool p_no_inheritance = false) : void
{static} +get_enum_list(const StringName & p_class, List<StringName> * p_enums, bool p_no_inheritance = false) : void
{static} +get_extensions_for_type(const StringName & p_class, List<String> * p_extensions) : void
{static} +get_inheriters_from_class(const StringName & p_class, List<StringName> * p_classes) : void
{static} +get_integer_constant(const StringName & p_class, const StringName & p_name, bool * p_success = __null) : int
{static} +get_integer_constant_enum(const StringName & p_class, const StringName & p_name, bool p_no_inheritance = false) : StringName
{static} +get_integer_constant_list(const StringName & p_class, List<String> * p_constants, bool p_no_inheritance = false) : void
{static} +get_method(StringName p_class, StringName p_name) : MethodBind *
{static} +get_method_list(StringName p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false, bool p_exclude_from_properties = false) : void
{static} +get_parent_class(const StringName & p_class) : StringName
{static} +get_parent_class_nocheck(const StringName & p_class) : StringName
{static} +get_property(Object * p_object, const StringName & p_property, Variant & r_value) : bool
{static} +get_property_getter(StringName p_class, const StringName & p_property) : StringName
{static} +get_property_index(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : int
{static} +get_property_list(StringName p_class, List<PropertyInfo> * p_list, bool p_no_inheritance = false, const Object * p_validator = __null) : void
{static} +get_property_setter(StringName p_class, const StringName & p_property) : StringName
{static} +get_property_type(const StringName & p_class, const StringName & p_property, bool * r_is_valid = __null) : Variant::Type
{static} +get_resource_base_extensions(List<String> * p_extensions) : void
{static} +get_signal(StringName p_class, StringName p_signal, MethodInfo * r_signal) : bool
{static} +get_signal_list(StringName p_class, List<MethodInfo> * p_signals, bool p_no_inheritance = false) : void
{static} +get_virtual_methods(const StringName & p_class, List<MethodInfo> * p_methods, bool p_no_inheritance = false) : void
{static} +has_method(StringName p_class, StringName p_method, bool p_no_inheritance = false) : bool
{static} +has_property(const StringName & p_class, const StringName & p_property, bool p_no_inheritance = false) : bool
{static} +has_signal(StringName p_class, StringName p_signal) : bool
{static} +instance(const StringName & p_class) : Object *
{static} +is_class_enabled(StringName p_class) : bool
{static} +is_class_exposed(StringName p_class) : bool
{static} +is_parent_class(const StringName & p_class, const StringName & p_inherits) : bool
{static} +register_class<T>() : void
{static} +register_custom_instance_class<T>() : void
{static} +register_virtual_class<T>() : void
{static} +set_class_enabled(StringName p_class, bool p_enable) : void
{static} +set_current_api(ClassDB::APIType p_api) : void
{static} +set_method_flags(StringName p_class, StringName p_method, int p_flags) : void
{static} +set_property(Object * p_object, const StringName & p_property, const Variant & p_value, bool * r_valid = __null) : bool
{static} +set_property_default_value(StringName p_class, const StringName & p_name, const Variant & p_default) : void
__
{static} +classes : HashMap<StringName,ClassDB::ClassInfo> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L147{classes}]]]
{static} +compat_classes : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L149{compat_classes}]]]
{static} +current_api : ClassDB::APIType [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L157{current_api}]]]
{static} +default_values : HashMap<StringName,HashMap<StringName,Variant>> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L161{default_values}]]]
{static} +default_values_cached : Set<StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L162{default_values_cached}]]]
{static} +lock : RWLock [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L146{lock}]]]
{static} +resource_base_extensions : HashMap<StringName,StringName> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./core/class_db.h#L148{resource_base_extensions}]]]
}
abstract "CanvasItem" as C_0002074383603489565895
abstract C_0002074383603489565895 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L165{CanvasItem}]] {
+CanvasItem() : void
+~CanvasItem() : void
..
-operator=(const CanvasItem & p_rval) : void
..
{static} #_bind_methods() : void
+_edit_get_minimum_size() const : Size2
+_edit_get_pivot() const : Point2
{abstract} +_edit_get_position() const = 0 : Point2
+_edit_get_rect() const : Rect2
+_edit_get_rotation() const : float
{abstract} +_edit_get_scale() const = 0 : Size2
+_edit_get_state() const : Dictionary
+_edit_get_transform() const : Transform2D
+_edit_is_selected_on_click(const Point2 & p_point, double p_tolerance) const : bool
+_edit_set_pivot(const Point2 & p_pivot) : void
{abstract} +_edit_set_position(const Point2 & p_position) = 0 : void
+_edit_set_rect(const Rect2 & p_rect) : void
+_edit_set_rotation(float p_rotation) : void
{abstract} +_edit_set_scale(const Size2 & p_scale) = 0 : void
+_edit_set_state(const Dictionary & p_state) : void
+_edit_use_pivot() const : bool
+_edit_use_rect() const : bool
+_edit_use_rotation() const : bool
-_enter_canvas() : void
-_exit_canvas() : void
{static} #_get_bind_methods() : void (*)()
+_get_class_namev() const : const StringName *
#_get_get() const : bool (Object::*)(const StringName &,Variant &) const
#_get_get_property_list() const : void (Object::*)(List<PropertyInfo> *) const
#_get_notification() const : void (Object::*)(int)
#_get_property_listv(List<PropertyInfo> * p_list, bool p_reversed) const : void
#_get_set() const : bool (Object::*)(const StringName &,const Variant &)
#_getv(const StringName & p_name, Variant & r_ret) const : bool
#_initialize_classv() : void
-_is_on_top() const : bool
#_notification(int p_what) : void
#_notificationv(int p_notification, bool p_reversed) : void
-_notify_transform(CanvasItem * p_node) : void
#_notify_transform() : void
-_propagate_visibility_changed(bool p_visible) : void
-_set_on_top(bool p_on_top) : void
#_setv(const StringName & p_name, const Variant & p_property) : bool
-_toplevel_raise_self() : void
-_update_callback() : void
+draw_arc(const Vector2 & p_center, float p_radius, float p_start_angle, float p_end_angle, int p_point_count, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_char(const Ref<Font> & p_font, const Point2 & p_pos, const String & p_char, const String & p_next = "", const Color & p_modulate = Color(1, 1, 1)) : float
+draw_circle(const Point2 & p_pos, float p_radius, const Color & p_color) : void
+draw_colored_polygon(const Vector<Point2> & p_points, const Color & p_color, const Vector<Point2> & p_uvs = Vector<Point2>(), Ref<Texture> p_texture = = Ref<Texture>(), const Ref<Texture> & p_normal_map = Ref<Texture>(), bool p_antialiased = false) : void
+draw_line(const Point2 & p_from, const Point2 & p_to, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_mesh(const Ref<Mesh> & p_mesh, const Ref<Texture> & p_texture, const Ref<Texture> & p_normal_map, const Transform2D & p_transform = Transform2D(), const Color & p_modulate = Color(1, 1, 1)) : void
+draw_multiline(const Vector<Point2> & p_points, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_multiline_colors(const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) : void
+draw_multimesh(const Ref<MultiMesh> & p_multimesh, const Ref<Texture> & p_texture, const Ref<Texture> & p_normal_map) : void
+draw_polygon(const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs = Vector<Point2>(), Ref<Texture> p_texture = = Ref<Texture>(), const Ref<Texture> & p_normal_map = Ref<Texture>(), bool p_antialiased = false) : void
+draw_polyline(const Vector<Point2> & p_points, const Color & p_color, float p_width = 1.0, bool p_antialiased = false) : void
+draw_polyline_colors(const Vector<Point2> & p_points, const Vector<Color> & p_colors, float p_width = 1.0, bool p_antialiased = false) : void
+draw_primitive(const Vector<Point2> & p_points, const Vector<Color> & p_colors, const Vector<Point2> & p_uvs, Ref<Texture> p_texture = = Ref<Texture>(), float p_width = 1, const Ref<Texture> & p_normal_map = Ref<Texture>()) : void
+draw_rect(const Rect2 & p_rect, const Color & p_color, bool p_filled = true, float p_width = 1.0, bool p_antialiased = false) : void
+draw_set_transform(const Point2 & p_offset, float p_rot, const Size2 & p_scale) : void
+draw_set_transform_matrix(const Transform2D & p_matrix) : void
+draw_string(const Ref<Font> & p_font, const Point2 & p_pos, const String & p_text, const Color & p_modulate = Color(1, 1, 1), int p_clip_w = -1) : void
+draw_style_box(const Ref<StyleBox> & p_style_box, const Rect2 & p_rect) : void
+draw_texture(const Ref<Texture> & p_texture, const Point2 & p_pos, const Color & p_modulate = Color(1, 1, 1, 1), const Ref<Texture> & p_normal_map = Ref<Texture>()) : void
+draw_texture_rect(const Ref<Texture> & p_texture, const Rect2 & p_rect, bool p_tile = false, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, const Ref<Texture> & p_normal_map = Ref<Texture>()) : void
+draw_texture_rect_region(const Ref<Texture> & p_texture, const Rect2 & p_rect, const Rect2 & p_src_rect, const Color & p_modulate = Color(1, 1, 1), bool p_transpose = false, const Ref<Texture> & p_normal_map = Ref<Texture>(), bool p_clip_uv = false) : void
+force_update_transform() : void
+get_anchorable_rect() const : Rect2
+get_canvas() const : RID
+get_canvas_item() const : RID
+get_canvas_layer() const : int
+get_canvas_layer_instance_id() const : ObjectID
+get_canvas_transform() const : Transform2D
{static} +get_category_static() : String
+get_class() const : String
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
{static} +get_current_item_drawn() : CanvasItem *
+get_global_mouse_position() const : Vector2
+get_global_transform() const : Transform2D
+get_global_transform_with_canvas() const : Transform2D
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
+get_light_mask() const : int
+get_local_mouse_position() const : Vector2
+get_material() const : Ref<Material>
+get_modulate() const : Color
{static} +get_parent_class_static() : String
+get_parent_item() const : CanvasItem *
+get_self_modulate() const : Color
+get_toplevel() const : CanvasItem *
{abstract} +get_transform() const = 0 : Transform2D
+get_use_parent_material() const : bool
{static} +get_valid_parents_static(List<String> * p_parents) : void
+get_viewport_rect() const : Rect2
+get_viewport_rid() const : RID
+get_viewport_transform() const : Transform2D
+get_world_2d() const : Ref<World2D>
+hide() : void
{static} +inherits_static() : String
{static} +initialize_class() : void
+is_block_transform_notify_enabled() const : bool
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
+is_draw_behind_parent_enabled() const : bool
+is_local_transform_notification_enabled() const : bool
+is_set_as_toplevel() const : bool
+is_transform_notification_enabled() const : bool
+is_visible() const : bool
+is_visible_in_tree() const : bool
#item_rect_changed(bool p_size_changed = true) : void
+make_canvas_position_local(const Vector2 & screen_point) const : Vector2
+make_input_local(const Ref<InputEvent> & p_event) const : Ref<InputEvent>
+set_as_toplevel(bool p_toplevel) : void
+set_block_transform_notify(bool p_enable) : void
+set_draw_behind_parent(bool p_enable) : void
+set_light_mask(int p_light_mask) : void
+set_material(const Ref<Material> & p_material) : void
+set_modulate(const Color & p_modulate) : void
+set_notify_local_transform(bool p_enable) : void
+set_notify_transform(bool p_enable) : void
+set_self_modulate(const Color & p_self_modulate) : void
+set_use_parent_material(bool p_use_parent_material) : void
+set_visible(bool p_visible) : void
+show() : void
+update() : void
__
-C : List<CanvasItem *>::Element * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L192{C}]]]
+NOTIFICATION_DRAW : enum
+NOTIFICATION_ENTER_CANVAS : enum
+NOTIFICATION_EXIT_CANVAS : enum
+NOTIFICATION_LOCAL_TRANSFORM_CHANGED : enum
+NOTIFICATION_TRANSFORM_CHANGED : enum
+NOTIFICATION_VISIBILITY_CHANGED : enum
+NOTIFICATION_WORLD_2D_CHANGED : enum
-_class_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L167{_class_name}]]]
-behind : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L202{behind}]]]
-block_transform_notify : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L201{block_transform_notify}]]]
-canvas_item : RID [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L183{canvas_item}]]]
-canvas_layer : CanvasLayer * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L186{canvas_layer}]]]
-children_items : List<CanvasItem *> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L191{children_items}]]]
{static} -current_item_drawn : CanvasItem * [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L226{current_item_drawn}]]]
-drawing : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L200{drawing}]]]
-first_draw : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L196{first_draw}]]]
-global_invalid : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L210{global_invalid}]]]
-global_transform : Transform2D [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L209{global_transform}]]]
-group : String [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L184{group}]]]
-light_mask : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L194{light_mask}]]]
-material : Ref<Material> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L207{material}]]]
-modulate : Color [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L188{modulate}]]]
-notify_local_transform : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L204{notify_local_transform}]]]
-notify_transform : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L205{notify_transform}]]]
-pending_update : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L198{pending_update}]]]
-self_modulate : Color [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L189{self_modulate}]]]
-toplevel : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L199{toplevel}]]]
-use_parent_material : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L203{use_parent_material}]]]
-visible : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L197{visible}]]]
-xform_change : SelfList<Node> [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/./scene/2d/canvas_item.h#L181{xform_change}]]]
}
class "Node2D" as C_0002289363354048605759
class C_0002289363354048605759 [[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L36{Node2D}]] {
+Node2D() : void
..
-operator=(const Node2D & p_rval) : void
..
{static} #_bind_methods() : void
+_edit_get_position() const : Point2
+_edit_get_rotation() const : float
+_edit_get_scale() const : Size2
+_edit_get_state() const : Dictionary
+_edit_set_position(const Point2 & p_position) : void
+_edit_set_rect(const Rect2 & p_edit_rect) : void
+_edit_set_rotation(float p_rotation) : void
+_edit_set_scale(const Size2 & p_scale) : void
+_edit_set_state(const Dictionary & p_state) : void
+_edit_use_rotation() const : bool
{static} #_get_bind_methods() : void (*)()
+_get_class_namev() const : const StringName *
#_get_get() const : bool (Object::*)(const StringName &,Variant &) const
#_get_get_property_list() const : void (Object::*)(List<PropertyInfo> *) const
#_get_notification() const : void (Object::*)(int)
#_get_property_listv(List<PropertyInfo> * p_list, bool p_reversed) const : void
#_get_set() const : bool (Object::*)(const StringName &,const Variant &)
#_getv(const StringName & p_name, Variant & r_ret) const : bool
#_initialize_classv() : void
#_notificationv(int p_notification, bool p_reversed) : void
#_setv(const StringName & p_name, const Variant & p_property) : bool
-_update_transform() : void
-_update_xform_values() : void
+apply_scale(const Size2 & p_amount) : void
+get_angle_to(const Vector2 & p_pos) const : float
{static} +get_category_static() : String
+get_class() const : String
{static} +get_class_ptr_static() : void *
{static} +get_class_static() : String
+get_global_position() const : Point2
+get_global_rotation() const : float
+get_global_rotation_degrees() const : float
+get_global_scale() const : Size2
{static} +get_inheritance_list_static(List<String> * p_inheritance_list) : void
{static} +get_parent_class_static() : String
+get_position() const : Point2
+get_relative_transform_to_parent(const Node * p_parent) const : Transform2D
+get_rotation() const : float
+get_rotation_degrees() const : float
+get_scale() const : Size2
+get_transform() const : Transform2D
{static} +get_valid_parents_static(List<String> * p_parents) : void
+get_z_index() const : int
+global_translate(const Vector2 & p_amount) : void
{static} +inherits_static() : String
{static} +initialize_class() : void
+is_class(const String & p_class) const : bool
+is_class_ptr(void * p_ptr) const : bool
+is_z_relative() const : bool
+look_at(const Vector2 & p_pos) : void
+move_x(float p_delta, bool p_scaled = false) : void
+move_y(float p_delta, bool p_scaled = false) : void
+rotate(float p_radians) : void
+set_global_position(const Point2 & p_pos) : void
+set_global_rotation(float p_radians) : void
+set_global_rotation_degrees(float p_degrees) : void
+set_global_scale(const Size2 & p_scale) : void
+set_global_transform(const Transform2D & p_transform) : void
+set_position(const Point2 & p_pos) : void
+set_rotation(float p_radians) : void
+set_rotation_degrees(float p_degrees) : void
+set_scale(const Size2 & p_scale) : void
+set_transform(const Transform2D & p_transform) : void
+set_z_as_relative(bool p_enabled) : void
+set_z_index(int p_z) : void
+to_global(Point2 p_local) const : Point2
+to_local(Point2 p_global) const : Point2
+translate(const Vector2 & p_amount) : void
__
-_class_name : StringName [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L38{_class_name}]]]
-_mat : Transform2D [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L46{_mat}]]]
-_scale : Size2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L42{_scale}]]]
-_xform_dirty : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L48{_xform_dirty}]]]
-angle : float [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L41{angle}]]]
-pos : Point2 [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L40{pos}]]]
-z_index : int [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L43{z_index}]]]
-z_relative : bool [[[https://github.com/godotengine/godot/blob/faf3f883d1a25ec8a2b7a31ecc9e3363613b2478/scene/2d/node_2d.h#L44{z_relative}]]]
}
C_0001296138246691404804 o-- C_0000053309527800613276 : +elements
C_0000104564426296396960 --> C_0001858199404643284193 : +classes
C_0000104564426296396960 --> C_0001858199404643284193 : +resource_base_extensions
C_0000104564426296396960 --> C_0001858199404643284193 : +compat_classes
C_0000104564426296396960 --> C_0001858199404643284193 : +default_values
C_0000104564426296396960 --> C_0001858199404643284193 : +default_values_cached
C_0002074383603489565895 o-- C_0001858199404643284193 : -_class_name
C_0002074383603489565895 o-- C_0001296138246691404804 : -global_transform
C_0002074383603489565895 --> C_0002074383603489565895 : -current_item_drawn
C_0002074383603489565895 <.. C_0000104564426296396960 : +<<friend>>
C_0002289363354048605759 o-- C_0001858199404643284193 : -_class_name
C_0002289363354048605759 o-- C_0000053309527800613276 : -pos
C_0002289363354048605759 o-- C_0000053309527800613276 : -_scale
C_0002289363354048605759 o-- C_0001296138246691404804 : -_mat
C_0002289363354048605759 <.. C_0000104564426296396960 : +<<friend>>
C_0002074383603489565895 <|-- C_0002289363354048605759

'Generated with clang-uml, version 0.3.6-29-g238bfb0
'LLVM version Ubuntu clang version 15.0.6
@enduml
