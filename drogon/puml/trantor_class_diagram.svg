<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5346px" preserveAspectRatio="none" style="width:8272px;height:5346px;" version="1.1" viewBox="0 0 8272 5346" width="8272px" zoomAndPan="magnify"><defs><filter height="300%" id="f1jmo8n5np4l73" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="6228.5" y="53"/><ellipse cx="6243.5" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6246.4688,74.6406 Q6245.8906,74.9375 6245.25,75.0781 Q6244.6094,75.2344 6243.9063,75.2344 Q6241.4063,75.2344 6240.0781,73.5938 Q6238.7656,71.9375 6238.7656,68.8125 Q6238.7656,65.6875 6240.0781,64.0313 Q6241.4063,62.375 6243.9063,62.375 Q6244.6094,62.375 6245.25,62.5313 Q6245.9063,62.6875 6246.4688,62.9844 L6246.4688,65.7031 Q6245.8438,65.125 6245.25,64.8594 Q6244.6563,64.5781 6244.0313,64.5781 Q6242.6875,64.5781 6242,65.6563 Q6241.3125,66.7188 6241.3125,68.8125 Q6241.3125,70.9063 6242,71.9844 Q6242.6875,73.0469 6244.0313,73.0469 Q6244.6563,73.0469 6245.25,72.7813 Q6245.8438,72.5 6246.4688,71.9219 L6246.4688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="6257.5" y="73.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6229.5" x2="6341.5" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6229.5" x2="6341.5" y1="93" y2="93"/><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="547.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="3820.5" y="2630"/><ellipse cx="3943.25" cy="2646" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3946.2188,2651.6406 Q3945.6406,2651.9375 3945,2652.0781 Q3944.3594,2652.2344 3943.6563,2652.2344 Q3941.1563,2652.2344 3939.8281,2650.5938 Q3938.5156,2648.9375 3938.5156,2645.8125 Q3938.5156,2642.6875 3939.8281,2641.0313 Q3941.1563,2639.375 3943.6563,2639.375 Q3944.3594,2639.375 3945,2639.5313 Q3945.6563,2639.6875 3946.2188,2639.9844 L3946.2188,2642.7031 Q3945.5938,2642.125 3945,2641.8594 Q3944.4063,2641.5781 3943.7813,2641.5781 Q3942.4375,2641.5781 3941.75,2642.6563 Q3941.0625,2643.7188 3941.0625,2645.8125 Q3941.0625,2647.9063 3941.75,2648.9844 Q3942.4375,2650.0469 3943.7813,2650.0469 Q3944.4063,2650.0469 3945,2649.7813 Q3945.5938,2649.5 3946.2188,2648.9219 L3946.2188,2651.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="3963.75" y="2650.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3821.5" x2="4135.5" y1="2662" y2="2662"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3821.5" x2="4135.5" y1="2670" y2="2670"/><ellipse cx="3831.5" cy="2681" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="3840.5" y="2684.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><ellipse cx="3831.5" cy="2693.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3840.5" y="2697.0151">peek() const : const char *</text><ellipse cx="3831.5" cy="2706.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="3840.5" y="2709.8198">beginWrite() const : const char *</text><ellipse cx="3831.5" cy="2719.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="3840.5" y="2722.6245">beginWrite() : char *</text><ellipse cx="3831.5" cy="2732.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="3840.5" y="2735.4292">peekInt8() const : uint8_t</text><ellipse cx="3831.5" cy="2745.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3840.5" y="2748.2339">peekInt16() const : uint16_t</text><ellipse cx="3831.5" cy="2757.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3840.5" y="2761.0386">peekInt32() const : uint32_t</text><ellipse cx="3831.5" cy="2770.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3840.5" y="2773.8433">peekInt64() const : uint64_t</text><ellipse cx="3831.5" cy="2783.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3840.5" y="2786.6479">read(size_t len) : std::string</text><ellipse cx="3831.5" cy="2796.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="3840.5" y="2799.4526">readInt8() : uint8_t</text><ellipse cx="3831.5" cy="2809.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3840.5" y="2812.2573">readInt16() : uint16_t</text><ellipse cx="3831.5" cy="2821.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3840.5" y="2825.062">readInt32() : uint32_t</text><ellipse cx="3831.5" cy="2834.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3840.5" y="2837.8667">readInt64() : uint64_t</text><ellipse cx="3831.5" cy="2847.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3840.5" y="2850.6714">swap(MsgBuffer &amp; buf) : void</text><ellipse cx="3831.5" cy="2860.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3840.5" y="2863.4761">readableBytes() const : size_t</text><ellipse cx="3831.5" cy="2873.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3840.5" y="2876.2808">writableBytes() const : size_t</text><ellipse cx="3831.5" cy="2885.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="3840.5" y="2889.0854">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="3831.5" cy="2898.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="3840.5" y="2901.8901">append(const char * buf, size_t len) : void</text><ellipse cx="3831.5" cy="2911.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="3840.5" y="2914.6948">append(const std::string &amp; buf) : void</text><ellipse cx="3831.5" cy="2924.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="3840.5" y="2927.4995">appendInt8(const uint8_t b) : void</text><ellipse cx="3831.5" cy="2937.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="3840.5" y="2940.3042">appendInt16(const uint16_t s) : void</text><ellipse cx="3831.5" cy="2949.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3840.5" y="2953.1089">appendInt32(const uint32_t i) : void</text><ellipse cx="3831.5" cy="2962.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3840.5" y="2965.9136">appendInt64(const uint64_t l) : void</text><ellipse cx="3831.5" cy="2975.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3840.5" y="2978.7183">addInFront(const char * buf, size_t len) : void</text><ellipse cx="3831.5" cy="2988.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3840.5" y="2991.5229">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="3831.5" cy="3001.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="3840.5" y="3004.3276">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="3831.5" cy="3013.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3840.5" y="3017.1323">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="3831.5" cy="3026.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3840.5" y="3029.937">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="3831.5" cy="3039.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="3840.5" y="3042.7417">retrieveAll() : void</text><ellipse cx="3831.5" cy="3052.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3840.5" y="3055.5464">retrieve(size_t len) : void</text><ellipse cx="3831.5" cy="3065.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3840.5" y="3068.3511">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="3831.5" cy="3077.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="3840.5" y="3081.1558">retrieveUntil(const char * end) : void</text><ellipse cx="3831.5" cy="3090.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="3840.5" y="3093.9604">findCRLF() const : const char *</text><ellipse cx="3831.5" cy="3103.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="3840.5" y="3106.7651">ensureWritableBytes(size_t len) : void</text><ellipse cx="3831.5" cy="3116.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3840.5" y="3119.5698">hasWritten(size_t len) : void</text><ellipse cx="3831.5" cy="3129.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3840.5" y="3132.3745">unwrite(size_t offset) : void</text><ellipse cx="3831.5" cy="3141.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="3840.5" y="3145.1792">operator[](size_t offset) const : const char &amp;</text><ellipse cx="3831.5" cy="3154.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="3840.5" y="3157.9839">operator[](size_t offset) : char &amp;</text><ellipse cx="3831.5" cy="3167.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="3840.5" y="3170.7886">append(const char (&amp;)[N] buf) : void</text><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="112.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="1142.5" y="303"/><ellipse cx="1296.25" cy="319" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1296.3594,314.3438 L1295.2031,319.4219 L1297.5313,319.4219 L1296.3594,314.3438 Z M1294.875,312.1094 L1297.8594,312.1094 L1301.2188,324.5 L1298.7656,324.5 L1298,321.4375 L1294.7188,321.4375 L1293.9688,324.5 L1291.5313,324.5 L1294.875,312.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="1316.75" y="323.1543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1143.5" x2="1525.5" y1="335" y2="335"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1143.5" x2="1525.5" y1="343" y2="343"/><ellipse cx="1153.5" cy="354" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="1162.5" y="357.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="1153.5" cy="366.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="1162.5" y="370.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="1153.5" cy="379.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1162.5" y="382.8198">getName() const : std::string</text><ellipse cx="1153.5" cy="392.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="1162.5" y="395.6245">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="1153.5" cy="405.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1162.5" y="408.4292">~TaskQueue() : void</text><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="432.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="5621.5" y="4170"/><ellipse cx="6111.25" cy="4186" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6114.2188,4191.6406 Q6113.6406,4191.9375 6113,4192.0781 Q6112.3594,4192.2344 6111.6563,4192.2344 Q6109.1563,4192.2344 6107.8281,4190.5938 Q6106.5156,4188.9375 6106.5156,4185.8125 Q6106.5156,4182.6875 6107.8281,4181.0313 Q6109.1563,4179.375 6111.6563,4179.375 Q6112.3594,4179.375 6113,4179.5313 Q6113.6563,4179.6875 6114.2188,4179.9844 L6114.2188,4182.7031 Q6113.5938,4182.125 6113,4181.8594 Q6112.4063,4181.5781 6111.7813,4181.5781 Q6110.4375,4181.5781 6109.75,4182.6563 Q6109.0625,4183.7188 6109.0625,4185.8125 Q6109.0625,4187.9063 6109.75,4188.9844 Q6110.4375,4190.0469 6111.7813,4190.0469 Q6112.4063,4190.0469 6113,4189.7813 Q6113.5938,4189.5 6114.2188,4188.9219 L6114.2188,4191.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="6131.75" y="4190.1543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5622.5" x2="6638.5" y1="4202" y2="4202"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5622.5" x2="6638.5" y1="4210" y2="4210"/><ellipse cx="5632.5" cy="4221" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="5641.5" y="4224.2104">Date() : void</text><ellipse cx="5632.5" cy="4233.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="5641.5" y="4237.0151">Date(int64_t microSec) : void</text><ellipse cx="5632.5" cy="4246.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="5641.5" y="4249.8198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="5632.5" cy="4259.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="5641.5" y="4262.6245">date() : const Date</text><ellipse cx="5632.5" cy="4272.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="5641.5" y="4275.4292">now() : const Date</text><ellipse cx="5632.5" cy="4285.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="5641.5" y="4288.2339">timezoneOffset() : int64_t</text><ellipse cx="5632.5" cy="4297.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="5641.5" y="4301.0386">after(double second) const : const Date</text><ellipse cx="5632.5" cy="4310.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="5641.5" y="4313.8433">roundSecond() const : const Date</text><ellipse cx="5632.5" cy="4323.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="5641.5" y="4326.6479">roundDay() const : const Date</text><ellipse cx="5632.5" cy="4336.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5641.5" y="4339.4526">~Date() : void</text><ellipse cx="5632.5" cy="4349.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="5641.5" y="4352.2573">operator==(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4361.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="5641.5" y="4365.062">operator!=(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4374.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="5641.5" y="4377.8667">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4387.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="5641.5" y="4390.6714">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4400.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="5641.5" y="4403.4761">operator&gt;=(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4413.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="5641.5" y="4416.2808">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4425.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="5641.5" y="4429.0854">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="5632.5" cy="4438.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="5641.5" y="4441.8901">secondsSinceEpoch() const : int64_t</text><ellipse cx="5632.5" cy="4451.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="5641.5" y="4454.6948">tmStruct() const : struct tm</text><ellipse cx="5632.5" cy="4464.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="5641.5" y="4467.4995">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="5632.5" cy="4477.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="5641.5" y="4480.3042">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="5632.5" cy="4489.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="5641.5" y="4493.1089">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><ellipse cx="5632.5" cy="4502.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="5641.5" y="4505.9136">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="5632.5" cy="4515.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="5641.5" y="4518.7183">toDbStringLocal() const : std::string</text><ellipse cx="5632.5" cy="4528.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5641.5" y="4531.5229">toDbString() const : std::string</text><ellipse cx="5632.5" cy="4541.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="5641.5" y="4544.3276">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="5632.5" cy="4553.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="5641.5" y="4557.1323">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="5632.5" cy="4566.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="5641.5" y="4569.937">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="5632.5" cy="4579.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="5641.5" y="4582.7417">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="5632.5" cy="4592.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="5641.5" y="4595.5464">swap(Date &amp; that) : void</text><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="124.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="7924.5" y="4826"/><ellipse cx="7981.25" cy="4842" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7984.2188,4847.6406 Q7983.6406,4847.9375 7983,4848.0781 Q7982.3594,4848.2344 7981.6563,4848.2344 Q7979.1563,4848.2344 7977.8281,4846.5938 Q7976.5156,4844.9375 7976.5156,4841.8125 Q7976.5156,4838.6875 7977.8281,4837.0313 Q7979.1563,4835.375 7981.6563,4835.375 Q7982.3594,4835.375 7983,4835.5313 Q7983.6563,4835.6875 7984.2188,4835.9844 L7984.2188,4838.7031 Q7983.5938,4838.125 7983,4837.8594 Q7982.4063,4837.5781 7981.7813,4837.5781 Q7980.4375,4837.5781 7979.75,4838.6563 Q7979.0625,4839.7188 7979.0625,4841.8125 Q7979.0625,4843.9063 7979.75,4844.9844 Q7980.4375,4846.0469 7981.7813,4846.0469 Q7982.4063,4846.0469 7983,4845.7813 Q7983.5938,4845.5 7984.2188,4844.9219 L7984.2188,4847.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="8001.75" y="4846.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="8124.5" y="4823"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="8125.5" y="4835.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7925.5" x2="8129.5" y1="4858" y2="4858"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7925.5" x2="8129.5" y1="4866" y2="4866"/><ellipse cx="7935.5" cy="4877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="7944.5" y="4880.2104">MpscQueue&lt;T&gt;() : void</text><ellipse cx="7935.5" cy="4889.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7944.5" y="4893.0151">~MpscQueue&lt;T&gt;() : void</text><ellipse cx="7935.5" cy="4902.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="7944.5" y="4905.8198">enqueue(T &amp;&amp; input) : void</text><ellipse cx="7935.5" cy="4915.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="7944.5" y="4918.6245">enqueue(const T &amp; input) : void</text><ellipse cx="7935.5" cy="4928.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="7944.5" y="4931.4292">dequeue(T &amp; output) : bool</text><ellipse cx="7935.5" cy="4941.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="7944.5" y="4944.2339">empty() : bool</text><!--MD5=[9e2b872a1cb524987dcee0b8ea8bcdce]
class C_0000223701637084171141--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="112.0234" id="C_0000223701637084171141" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="7995.5" y="4330"/><ellipse cx="8028.95" cy="4346" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8031.9188,4351.6406 Q8031.3406,4351.9375 8030.7,4352.0781 Q8030.0594,4352.2344 8029.3563,4352.2344 Q8026.8563,4352.2344 8025.5281,4350.5938 Q8024.2156,4348.9375 8024.2156,4345.8125 Q8024.2156,4342.6875 8025.5281,4341.0313 Q8026.8563,4339.375 8029.3563,4339.375 Q8030.0594,4339.375 8030.7,4339.5313 Q8031.3563,4339.6875 8031.9188,4339.9844 L8031.9188,4342.7031 Q8031.2938,4342.125 8030.7,4341.8594 Q8030.1063,4341.5781 8029.4813,4341.5781 Q8028.1375,4341.5781 8027.45,4342.6563 Q8026.7625,4343.7188 8026.7625,4345.8125 Q8026.7625,4347.9063 8027.45,4348.9844 Q8028.1375,4350.0469 8029.4813,4350.0469 Q8030.1063,4350.0469 8030.7,4349.7813 Q8031.2938,4349.5 8031.9188,4348.9219 L8031.9188,4351.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="8047.05" y="4350.1543">MpscQueue::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7996.5" x2="8218.5" y1="4362" y2="4362"/><ellipse cx="8006.5" cy="4373" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="8015.5" y="4376.2104">dataPtr_ : T *</text><ellipse cx="8006.5" cy="4385.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="8015.5" y="4389.0151">next_ : std::atomic&lt;BufferNode *&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7996.5" x2="8218.5" y1="4395.6094" y2="4395.6094"/><ellipse cx="8006.5" cy="4406.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="8015.5" y="4409.8198">BufferNode() = default : void</text><ellipse cx="8006.5" cy="4419.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="8015.5" y="4422.6245">BufferNode(const T &amp; data) : void</text><ellipse cx="8006.5" cy="4432.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="8015.5" y="4435.4292">BufferNode(T &amp;&amp; data) : void</text><!--MD5=[805f636b45cd5c652037ed8df0735b6e]
class C_0000913287266699074255--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="48" id="C_0000913287266699074255" style="stroke: #A80036; stroke-width: 1.5;" width="207" x="4393" y="4362"/><ellipse cx="4408" cy="4378" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4410.9688,4383.6406 Q4410.3906,4383.9375 4409.75,4384.0781 Q4409.1094,4384.2344 4408.4063,4384.2344 Q4405.9063,4384.2344 4404.5781,4382.5938 Q4403.2656,4380.9375 4403.2656,4377.8125 Q4403.2656,4374.6875 4404.5781,4373.0313 Q4405.9063,4371.375 4408.4063,4371.375 Q4409.1094,4371.375 4409.75,4371.5313 Q4410.4063,4371.6875 4410.9688,4371.9844 L4410.9688,4374.7031 Q4410.3438,4374.125 4409.75,4373.8594 Q4409.1563,4373.5781 4408.5313,4373.5781 Q4407.1875,4373.5781 4406.5,4374.6563 Q4405.8125,4375.7188 4405.8125,4377.8125 Q4405.8125,4379.9063 4406.5,4380.9844 Q4407.1875,4382.0469 4408.5313,4382.0469 Q4409.1563,4382.0469 4409.75,4381.7813 Q4410.3438,4381.5 4410.9688,4380.9219 L4410.9688,4383.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="4422" y="4382.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="100" x="4503" y="4359"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="4504" y="4371.1387">std::function&lt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4394" x2="4599" y1="4394" y2="4394"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4394" x2="4599" y1="4402" y2="4402"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="457.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="3269.5" y="3635"/><ellipse cx="3487.75" cy="3651" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3490.7188,3656.6406 Q3490.1406,3656.9375 3489.5,3657.0781 Q3488.8594,3657.2344 3488.1563,3657.2344 Q3485.6563,3657.2344 3484.3281,3655.5938 Q3483.0156,3653.9375 3483.0156,3650.8125 Q3483.0156,3647.6875 3484.3281,3646.0313 Q3485.6563,3644.375 3488.1563,3644.375 Q3488.8594,3644.375 3489.5,3644.5313 Q3490.1563,3644.6875 3490.7188,3644.9844 L3490.7188,3647.7031 Q3490.0938,3647.125 3489.5,3646.8594 Q3488.9063,3646.5781 3488.2813,3646.5781 Q3486.9375,3646.5781 3486.25,3647.6563 Q3485.5625,3648.7188 3485.5625,3650.8125 Q3485.5625,3652.9063 3486.25,3653.9844 Q3486.9375,3655.0469 3488.2813,3655.0469 Q3488.9063,3655.0469 3489.5,3654.7813 Q3490.0938,3654.5 3490.7188,3653.9219 L3490.7188,3656.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="3508.25" y="3655.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3270.5" x2="3778.5" y1="3667" y2="3667"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3270.5" x2="3778.5" y1="3675" y2="3675"/><ellipse cx="3280.5" cy="3686" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3289.5" y="3689.2104">EventLoop() : void</text><ellipse cx="3280.5" cy="3698.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3289.5" y="3702.0151">~EventLoop() : void</text><ellipse cx="3280.5" cy="3711.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3289.5" y="3714.8198">loop() : void</text><ellipse cx="3280.5" cy="3724.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="3289.5" y="3727.6245">quit() : void</text><ellipse cx="3280.5" cy="3737.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3289.5" y="3740.4292">assertInLoopThread() : void</text><ellipse cx="3280.5" cy="3750.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3289.5" y="3753.2339">resetTimerQueue() : void</text><ellipse cx="3280.5" cy="3762.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3289.5" y="3766.0386">resetAfterFork() : void</text><ellipse cx="3280.5" cy="3775.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3289.5" y="3778.8433">isInLoopThread() const : bool</text><ellipse cx="3280.5" cy="3788.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="3289.5" y="3791.6479">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="3280.5" cy="3801.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="3289.5" y="3804.4526">queueInLoop(const Func &amp; f) : void</text><ellipse cx="3280.5" cy="3814.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="3289.5" y="3817.2573">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="3280.5" cy="3826.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="3289.5" y="3830.062">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3839.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="3289.5" y="3842.8667">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3852.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="3289.5" y="3855.6714">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3865.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3289.5" y="3868.4761">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3878.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="3289.5" y="3881.2808">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3890.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="3289.5" y="3894.0854">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3903.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="3289.5" y="3906.8901">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3916.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="3289.5" y="3919.6948">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3929.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="3289.5" y="3932.4995">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3942.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="3289.5" y="3945.3042">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="3280.5" cy="3954.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="3289.5" y="3958.1089">invalidateTimer(TimerId id) : void</text><ellipse cx="3280.5" cy="3967.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3289.5" y="3970.9136">moveToCurrentThread() : void</text><ellipse cx="3280.5" cy="3980.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="3289.5" y="3983.7183">updateChannel(Channel * chl) : void</text><ellipse cx="3280.5" cy="3993.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3289.5" y="3996.5229">removeChannel(Channel * chl) : void</text><ellipse cx="3280.5" cy="4006.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3289.5" y="4009.3276">index() : size_t</text><ellipse cx="3280.5" cy="4018.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3289.5" y="4022.1323">setIndex(size_t index) : void</text><ellipse cx="3280.5" cy="4031.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3289.5" y="4034.937">isRunning() : bool</text><ellipse cx="3280.5" cy="4044.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3289.5" y="4047.7417">isCallingFunctions() : bool</text><ellipse cx="3280.5" cy="4057.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3289.5" y="4060.5464">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="3280.5" cy="4070.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="3289.5" y="4073.3511">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="3280.5" cy="4082.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="3289.5" y="4086.1558">runInLoop(Functor &amp;&amp; f) : void</text><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="112.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="906.5" y="3350"/><ellipse cx="1084.75" cy="3366" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1087.7188,3371.6406 Q1087.1406,3371.9375 1086.5,3372.0781 Q1085.8594,3372.2344 1085.1563,3372.2344 Q1082.6563,3372.2344 1081.3281,3370.5938 Q1080.0156,3368.9375 1080.0156,3365.8125 Q1080.0156,3362.6875 1081.3281,3361.0313 Q1082.6563,3359.375 1085.1563,3359.375 Q1085.8594,3359.375 1086.5,3359.5313 Q1087.1563,3359.6875 1087.7188,3359.9844 L1087.7188,3362.7031 Q1087.0938,3362.125 1086.5,3361.8594 Q1085.9063,3361.5781 1085.2813,3361.5781 Q1083.9375,3361.5781 1083.25,3362.6563 Q1082.5625,3363.7188 1082.5625,3365.8125 Q1082.5625,3367.9063 1083.25,3368.9844 Q1083.9375,3370.0469 1085.2813,3370.0469 Q1085.9063,3370.0469 1086.5,3369.7813 Q1087.0938,3369.5 1087.7188,3368.9219 L1087.7188,3371.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="1105.25" y="3370.1543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="907.5" x2="1379.5" y1="3382" y2="3382"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="907.5" x2="1379.5" y1="3390" y2="3390"/><ellipse cx="917.5" cy="3401" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="926.5" y="3404.2104">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="917.5" cy="3413.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="926.5" y="3417.0151">~EventLoopThread() : void</text><ellipse cx="917.5" cy="3426.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="926.5" y="3429.8198">wait() : void</text><ellipse cx="917.5" cy="3439.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="926.5" y="3442.6245">getLoop() const : EventLoop *</text><ellipse cx="917.5" cy="3452.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="926.5" y="3455.4292">run() : void</text><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="176.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="998" y="2056"/><ellipse cx="1122.75" cy="2072" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1125.7188,2077.6406 Q1125.1406,2077.9375 1124.5,2078.0781 Q1123.8594,2078.2344 1123.1563,2078.2344 Q1120.6563,2078.2344 1119.3281,2076.5938 Q1118.0156,2074.9375 1118.0156,2071.8125 Q1118.0156,2068.6875 1119.3281,2067.0313 Q1120.6563,2065.375 1123.1563,2065.375 Q1123.8594,2065.375 1124.5,2065.5313 Q1125.1563,2065.6875 1125.7188,2065.9844 L1125.7188,2068.7031 Q1125.0938,2068.125 1124.5,2067.8594 Q1123.9063,2067.5781 1123.2813,2067.5781 Q1121.9375,2067.5781 1121.25,2068.6563 Q1120.5625,2069.7188 1120.5625,2071.8125 Q1120.5625,2073.9063 1121.25,2074.9844 Q1121.9375,2076.0469 1123.2813,2076.0469 Q1123.9063,2076.0469 1124.5,2075.7813 Q1125.0938,2075.5 1125.7188,2074.9219 L1125.7188,2077.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="1143.25" y="2076.1543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="999" x2="1360" y1="2088" y2="2088"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="999" x2="1360" y1="2096" y2="2096"/><ellipse cx="1009" cy="2107" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="1018" y="2110.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="1009" cy="2119.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="1018" y="2123.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="1009" cy="2132.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1018" y="2135.8198">getName() const : std::string</text><ellipse cx="1009" cy="2145.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="1018" y="2148.6245">waitAllTasksFinished() : void</text><ellipse cx="1009" cy="2158.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1018" y="2161.4292">SerialTaskQueue() : void</text><ellipse cx="1009" cy="2171.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="1018" y="2174.2339">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="1009" cy="2183.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1018" y="2187.0386">~SerialTaskQueue() : void</text><ellipse cx="1009" cy="2196.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1018" y="2199.8433">isRuningTask() : bool</text><ellipse cx="1009" cy="2209.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1018" y="2212.6479">getTaskCount() : size_t</text><ellipse cx="1009" cy="2222.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1018" y="2225.4526">stop() : void</text><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="214.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="6914" y="2796.5"/><ellipse cx="6960.25" cy="2812.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6963.2188,2818.1406 Q6962.6406,2818.4375 6962,2818.5781 Q6961.3594,2818.7344 6960.6563,2818.7344 Q6958.1563,2818.7344 6956.8281,2817.0938 Q6955.5156,2815.4375 6955.5156,2812.3125 Q6955.5156,2809.1875 6956.8281,2807.5313 Q6958.1563,2805.875 6960.6563,2805.875 Q6961.3594,2805.875 6962,2806.0313 Q6962.6563,2806.1875 6963.2188,2806.4844 L6963.2188,2809.2031 Q6962.5938,2808.625 6962,2808.3594 Q6961.4063,2808.0781 6960.7813,2808.0781 Q6959.4375,2808.0781 6958.75,2809.1563 Q6958.0625,2810.2188 6958.0625,2812.3125 Q6958.0625,2814.4063 6958.75,2815.4844 Q6959.4375,2816.5469 6960.7813,2816.5469 Q6961.4063,2816.5469 6962,2816.2813 Q6962.5938,2816 6963.2188,2815.4219 L6963.2188,2818.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="6980.75" y="2816.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="7132" y="2793.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="7133" y="2805.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6915" x2="7178" y1="2828.5" y2="2828.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6915" x2="7178" y1="2836.5" y2="2836.5"/><ellipse cx="6925" cy="2847.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6934" y="2850.7104">FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="6925" cy="2860.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6934" y="2863.5151">~FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="6925" cy="2873.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="6934" y="2876.3198">append(const char * buf, size_t len) : bool</text><ellipse cx="6925" cy="2885.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="6934" y="2889.1245">data() const : const char *</text><ellipse cx="6925" cy="2898.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6934" y="2901.9292">length() const : int</text><ellipse cx="6925" cy="2911.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="6934" y="2914.7339">current() : char *</text><ellipse cx="6925" cy="2924.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="6934" y="2927.5386">avail() const : int</text><ellipse cx="6925" cy="2937.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="6934" y="2940.3433">add(size_t len) : void</text><ellipse cx="6925" cy="2949.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6934" y="2953.1479">reset() : void</text><ellipse cx="6925" cy="2962.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6934" y="2965.9526">zeroBuffer() : void</text><ellipse cx="6925" cy="2975.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6934" y="2978.7573">debugString() : const char *</text><ellipse cx="6925" cy="2988.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="6934" y="2991.562">setCookie(void (*)() cookie) : void</text><ellipse cx="6925" cy="3001.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6934" y="3004.3667">toString() const : std::string</text><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="6888.5" y="2383.5"/><ellipse cx="6903.5" cy="2399.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6906.4688,2405.1406 Q6905.8906,2405.4375 6905.25,2405.5781 Q6904.6094,2405.7344 6903.9063,2405.7344 Q6901.4063,2405.7344 6900.0781,2404.0938 Q6898.7656,2402.4375 6898.7656,2399.3125 Q6898.7656,2396.1875 6900.0781,2394.5313 Q6901.4063,2392.875 6903.9063,2392.875 Q6904.6094,2392.875 6905.25,2393.0313 Q6905.9063,2393.1875 6906.4688,2393.4844 L6906.4688,2396.2031 Q6905.8438,2395.625 6905.25,2395.3594 Q6904.6563,2395.0781 6904.0313,2395.0781 Q6902.6875,2395.0781 6902,2396.1563 Q6901.3125,2397.2188 6901.3125,2399.3125 Q6901.3125,2401.4063 6902,2402.4844 Q6902.6875,2403.5469 6904.0313,2403.5469 Q6904.6563,2403.5469 6905.25,2403.2813 Q6905.8438,2403 6906.4688,2402.4219 L6906.4688,2405.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="6917.5" y="2403.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="7037.5" y="2380.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="7038.5" y="2392.6387">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6889.5" x2="7155.5" y1="2415.5" y2="2415.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6889.5" x2="7155.5" y1="2423.5" y2="2423.5"/><!--MD5=[b047dbb6ab394137f12e64415ed8bac3]
class C_0001822694677530159303--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="214.4609" id="C_0001822694677530159303" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="7996" y="252"/><ellipse cx="8068.25" cy="268" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8071.2188,273.6406 Q8070.6406,273.9375 8070,274.0781 Q8069.3594,274.2344 8068.6563,274.2344 Q8066.1563,274.2344 8064.8281,272.5938 Q8063.5156,270.9375 8063.5156,267.8125 Q8063.5156,264.6875 8064.8281,263.0313 Q8066.1563,261.375 8068.6563,261.375 Q8069.3594,261.375 8070,261.5313 Q8070.6563,261.6875 8071.2188,261.9844 L8071.2188,264.7031 Q8070.5938,264.125 8070,263.8594 Q8069.4063,263.5781 8068.7813,263.5781 Q8067.4375,263.5781 8066.75,264.6563 Q8066.0625,265.7188 8066.0625,267.8125 Q8066.0625,269.9063 8066.75,270.9844 Q8067.4375,272.0469 8068.7813,272.0469 Q8069.4063,272.0469 8070,271.7813 Q8070.5938,271.5 8071.2188,270.9219 L8071.2188,273.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="8088.75" y="272.1543">detail::FixedBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7997" x2="8260" y1="284" y2="284"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7997" x2="8260" y1="292" y2="292"/><ellipse cx="8007" cy="303" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="8016" y="306.2104">FixedBuffer() : void</text><ellipse cx="8007" cy="315.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="8016" y="319.0151">~FixedBuffer() : void</text><ellipse cx="8007" cy="328.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="8016" y="331.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="8007" cy="341.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="8016" y="344.6245">data() const : const char *</text><ellipse cx="8007" cy="354.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="8016" y="357.4292">length() const : int</text><ellipse cx="8007" cy="367.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="8016" y="370.2339">current() : char *</text><ellipse cx="8007" cy="379.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="8016" y="383.0386">avail() const : int</text><ellipse cx="8007" cy="392.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="8016" y="395.8433">add(size_t len) : void</text><ellipse cx="8007" cy="405.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8016" y="408.6479">reset() : void</text><ellipse cx="8007" cy="418.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="8016" y="421.4526">zeroBuffer() : void</text><ellipse cx="8007" cy="431.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="8016" y="434.2573">debugString() : const char *</text><ellipse cx="8007" cy="443.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="8016" y="447.062">setCookie(void (*)() cookie) : void</text><ellipse cx="8007" cy="456.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="8016" y="459.8667">toString() const : std::string</text><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="214.4609" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="7299" y="541"/><ellipse cx="7353.25" cy="557" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7356.2188,562.6406 Q7355.6406,562.9375 7355,563.0781 Q7354.3594,563.2344 7353.6563,563.2344 Q7351.1563,563.2344 7349.8281,561.5938 Q7348.5156,559.9375 7348.5156,556.8125 Q7348.5156,553.6875 7349.8281,552.0313 Q7351.1563,550.375 7353.6563,550.375 Q7354.3594,550.375 7355,550.5313 Q7355.6563,550.6875 7356.2188,550.9844 L7356.2188,553.7031 Q7355.5938,553.125 7355,552.8594 Q7354.4063,552.5781 7353.7813,552.5781 Q7352.4375,552.5781 7351.75,553.6563 Q7351.0625,554.7188 7351.0625,556.8125 Q7351.0625,558.9063 7351.75,559.9844 Q7352.4375,561.0469 7353.7813,561.0469 Q7354.4063,561.0469 7355,560.7813 Q7355.5938,560.5 7356.2188,559.9219 L7356.2188,562.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="7373.75" y="561.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="7533" y="538"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="7534" y="550.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7300" x2="7563" y1="573" y2="573"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7300" x2="7563" y1="581" y2="581"/><ellipse cx="7310" cy="592" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="7319" y="595.2104">FixedBuffer() : void</text><ellipse cx="7310" cy="604.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="7319" y="608.0151">~FixedBuffer() : void</text><ellipse cx="7310" cy="617.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="7319" y="620.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="7310" cy="630.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="7319" y="633.6245">data() const : const char *</text><ellipse cx="7310" cy="643.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="7319" y="646.4292">length() const : int</text><ellipse cx="7310" cy="656.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="7319" y="659.2339">current() : char *</text><ellipse cx="7310" cy="668.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="7319" y="672.0386">avail() const : int</text><ellipse cx="7310" cy="681.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="7319" y="684.8433">add(size_t len) : void</text><ellipse cx="7310" cy="694.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="7319" y="697.6479">reset() : void</text><ellipse cx="7310" cy="707.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="7319" y="710.4526">zeroBuffer() : void</text><ellipse cx="7310" cy="720.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7319" y="723.2573">debugString() : const char *</text><ellipse cx="7310" cy="732.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="7319" y="736.062">setCookie(void (*)() cookie) : void</text><ellipse cx="7310" cy="745.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7319" y="748.8667">toString() const : std::string</text><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="214.4609" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="7370" y="1324"/><ellipse cx="7412.45" cy="1340" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7415.4188,1345.6406 Q7414.8406,1345.9375 7414.2,1346.0781 Q7413.5594,1346.2344 7412.8563,1346.2344 Q7410.3563,1346.2344 7409.0281,1344.5938 Q7407.7156,1342.9375 7407.7156,1339.8125 Q7407.7156,1336.6875 7409.0281,1335.0313 Q7410.3563,1333.375 7412.8563,1333.375 Q7413.5594,1333.375 7414.2,1333.5313 Q7414.8563,1333.6875 7415.4188,1333.9844 L7415.4188,1336.7031 Q7414.7938,1336.125 7414.2,1335.8594 Q7413.6063,1335.5781 7412.9813,1335.5781 Q7411.6375,1335.5781 7410.95,1336.6563 Q7410.2625,1337.7188 7410.2625,1339.8125 Q7410.2625,1341.9063 7410.95,1342.9844 Q7411.6375,1344.0469 7412.9813,1344.0469 Q7413.6063,1344.0469 7414.2,1343.7813 Q7414.7938,1343.5 7415.4188,1342.9219 L7415.4188,1345.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="7432.55" y="1344.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="7580" y="1321"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="7581" y="1333.1387">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7371" x2="7634" y1="1356" y2="1356"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7371" x2="7634" y1="1364" y2="1364"/><ellipse cx="7381" cy="1375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="7390" y="1378.2104">FixedBuffer() : void</text><ellipse cx="7381" cy="1387.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="7390" y="1391.0151">~FixedBuffer() : void</text><ellipse cx="7381" cy="1400.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="7390" y="1403.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="7381" cy="1413.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="7390" y="1416.6245">data() const : const char *</text><ellipse cx="7381" cy="1426.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="7390" y="1429.4292">length() const : int</text><ellipse cx="7381" cy="1439.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="7390" y="1442.2339">current() : char *</text><ellipse cx="7381" cy="1451.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="7390" y="1455.0386">avail() const : int</text><ellipse cx="7381" cy="1464.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="7390" y="1467.8433">add(size_t len) : void</text><ellipse cx="7381" cy="1477.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="7390" y="1480.6479">reset() : void</text><ellipse cx="7381" cy="1490.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="7390" y="1493.4526">zeroBuffer() : void</text><ellipse cx="7381" cy="1503.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7390" y="1506.2573">debugString() : const char *</text><ellipse cx="7381" cy="1515.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="7390" y="1519.062">setCookie(void (*)() cookie) : void</text><ellipse cx="7381" cy="1528.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7390" y="1531.8667">toString() const : std::string</text><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="342.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="379" x="6791" y="1625.5"/><ellipse cx="6942.75" cy="1641.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6945.7188,1647.1406 Q6945.1406,1647.4375 6944.5,1647.5781 Q6943.8594,1647.7344 6943.1563,1647.7344 Q6940.6563,1647.7344 6939.3281,1646.0938 Q6938.0156,1644.4375 6938.0156,1641.3125 Q6938.0156,1638.1875 6939.3281,1636.5313 Q6940.6563,1634.875 6943.1563,1634.875 Q6943.8594,1634.875 6944.5,1635.0313 Q6945.1563,1635.1875 6945.7188,1635.4844 L6945.7188,1638.2031 Q6945.0938,1637.625 6944.5,1637.3594 Q6943.9063,1637.0781 6943.2813,1637.0781 Q6941.9375,1637.0781 6941.25,1638.1563 Q6940.5625,1639.2188 6940.5625,1641.3125 Q6940.5625,1643.4063 6941.25,1644.4844 Q6941.9375,1645.5469 6943.2813,1645.5469 Q6943.9063,1645.5469 6944.5,1645.2813 Q6945.0938,1645 6945.7188,1644.4219 L6945.7188,1647.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="6963.25" y="1645.6543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6792" x2="7169" y1="1657.5" y2="1657.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6792" x2="7169" y1="1665.5" y2="1665.5"/><ellipse cx="6802" cy="1676.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="6811" y="1679.7104">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="6802" cy="1689.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="6811" y="1692.5151">operator&lt;&lt;(short ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1702.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="6811" y="1705.3198">operator&lt;&lt;(unsigned short ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1714.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="6811" y="1718.1245">operator&lt;&lt;(int ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1727.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="6811" y="1730.9292">operator&lt;&lt;(unsigned int ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1740.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="6811" y="1743.7339">operator&lt;&lt;(long ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1753.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="6811" y="1756.5386">operator&lt;&lt;(unsigned long ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1766.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="6811" y="1769.3433">operator&lt;&lt;(const long long &amp; ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1778.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="6811" y="1782.1479">operator&lt;&lt;(const unsigned long long &amp; ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1791.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="6811" y="1794.9526">operator&lt;&lt;(const void * ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1804.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6811" y="1807.7573">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="6802" cy="1817.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="6811" y="1820.562">operator&lt;&lt;(const double &amp; ) : LogStream::self &amp;</text><ellipse cx="6802" cy="1830.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="6811" y="1833.3667">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="6802" cy="1842.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="6811" y="1846.1714">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="6802" cy="1855.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="6811" y="1858.9761">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="6802" cy="1868.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="6811" y="1871.7808">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="6802" cy="1881.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="6811" y="1884.5854">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="6802" cy="1894.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="6811" y="1897.3901">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="6802" cy="1906.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="6811" y="1910.1948">append(const char * data, size_t len) : void</text><ellipse cx="6802" cy="1919.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6811" y="1922.9995">bufferData() const : const char *</text><ellipse cx="6802" cy="1932.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6811" y="1935.8042">bufferLength() const : size_t</text><ellipse cx="6802" cy="1945.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="6811" y="1948.6089">resetBuffer() : void</text><ellipse cx="6802" cy="1958.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="6811" y="1961.4136">operator&lt;&lt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="86.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="29.5" y="34"/><ellipse cx="122.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M125.7188,55.6406 Q125.1406,55.9375 124.5,56.0781 Q123.8594,56.2344 123.1563,56.2344 Q120.6563,56.2344 119.3281,54.5938 Q118.0156,52.9375 118.0156,49.8125 Q118.0156,46.6875 119.3281,45.0313 Q120.6563,43.375 123.1563,43.375 Q123.8594,43.375 124.5,43.5313 Q125.1563,43.6875 125.7188,43.9844 L125.7188,46.7031 Q125.0938,46.125 124.5,45.8594 Q123.9063,45.5781 123.2813,45.5781 Q121.9375,45.5781 121.25,46.6563 Q120.5625,47.7188 120.5625,49.8125 Q120.5625,51.9063 121.25,52.9844 Q121.9375,54.0469 123.2813,54.0469 Q123.9063,54.0469 124.5,53.7813 Q125.0938,53.5 125.7188,52.9219 L125.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="143.25" y="54.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30.5" x2="246.5" y1="66" y2="66"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30.5" x2="246.5" y1="74" y2="74"/><ellipse cx="40.5" cy="85" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="49.5" y="88.2104">data() const : const char *</text><ellipse cx="40.5" cy="97.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="49.5" y="101.0151">length() const : int</text><ellipse cx="40.5" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="49.5" y="113.8198">Fmt(const char * fmt, T val) : void</text><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="176.0469" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="6673.5" y="271"/><ellipse cx="7042.75" cy="287" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7045.7188,292.6406 Q7045.1406,292.9375 7044.5,293.0781 Q7043.8594,293.2344 7043.1563,293.2344 Q7040.6563,293.2344 7039.3281,291.5938 Q7038.0156,289.9375 7038.0156,286.8125 Q7038.0156,283.6875 7039.3281,282.0313 Q7040.6563,280.375 7043.1563,280.375 Q7043.8594,280.375 7044.5,280.5313 Q7045.1563,280.6875 7045.7188,280.9844 L7045.7188,283.7031 Q7045.0938,283.125 7044.5,282.8594 Q7043.9063,282.5781 7043.2813,282.5781 Q7041.9375,282.5781 7041.25,283.6563 Q7040.5625,284.7188 7040.5625,286.8125 Q7040.5625,288.9063 7041.25,289.9844 Q7041.9375,291.0469 7043.2813,291.0469 Q7043.9063,291.0469 7044.5,290.7813 Q7045.0938,290.5 7045.7188,289.9219 L7045.7188,292.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="7063.25" y="291.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6674.5" x2="7462.5" y1="303" y2="303"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6674.5" x2="7462.5" y1="311" y2="311"/><ellipse cx="6684.5" cy="322" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="6693.5" y="325.2104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="6684.5" cy="334.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="6693.5" y="338.0151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="6684.5" cy="347.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="6693.5" y="350.8198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="6684.5" cy="360.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="6693.5" y="363.6245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="6684.5" cy="373.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6693.5" y="376.4292">~Logger() : void</text><ellipse cx="6684.5" cy="386.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6693.5" y="389.2339">setIndex(int index) : Logger &amp;</text><ellipse cx="6684.5" cy="398.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6693.5" y="402.0386">stream() : LogStream &amp;</text><ellipse cx="6684.5" cy="411.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="6693.5" y="414.8433">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="6684.5" cy="424.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="6693.5" y="427.6479">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="6684.5" cy="437.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="6693.5" y="440.4526">logLevel() : Logger::LogLevel</text><!--MD5=[a2beb77350952d649324ef19949173b2]
class C_0002131283840621188296--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="137.6328" id="C_0002131283840621188296" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="7485.5" y="8"/><ellipse cx="7500.5" cy="24" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7504.6094,30 L7496.8906,30 L7496.8906,17.6094 L7504.6094,17.6094 L7504.6094,19.7656 L7499.3438,19.7656 L7499.3438,22.4375 L7504.1094,22.4375 L7504.1094,24.5938 L7499.3438,24.5938 L7499.3438,27.8438 L7504.6094,27.8438 L7504.6094,30 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="7514.5" y="28.1543">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7486.5" x2="7620.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="7491.5" y="54.2104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="7491.5" y="67.0151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="7491.5" y="79.8198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="7491.5" y="92.6245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7491.5" y="105.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="7491.5" y="118.2339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7491.5" y="131.0386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7486.5" x2="7620.5" y1="137.6328" y2="137.6328"/><!--MD5=[80f13d7cbf12b8f5b3c51061955ccb60]
class C_0000979080797342806546--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="99.2188" id="C_0000979080797342806546" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="7657" y="27.5"/><ellipse cx="7720.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7723.2188,49.1406 Q7722.6406,49.4375 7722,49.5781 Q7721.3594,49.7344 7720.6563,49.7344 Q7718.1563,49.7344 7716.8281,48.0938 Q7715.5156,46.4375 7715.5156,43.3125 Q7715.5156,40.1875 7716.8281,38.5313 Q7718.1563,36.875 7720.6563,36.875 Q7721.3594,36.875 7722,37.0313 Q7722.6563,37.1875 7723.2188,37.4844 L7723.2188,40.2031 Q7722.5938,39.625 7722,39.3594 Q7721.4063,39.0781 7720.7813,39.0781 Q7719.4375,39.0781 7718.75,40.1563 Q7718.0625,41.2188 7718.0625,43.3125 Q7718.0625,45.4063 7718.75,46.4844 Q7719.4375,47.5469 7720.7813,47.5469 Q7721.4063,47.5469 7722,47.2813 Q7722.5938,47 7723.2188,46.4219 L7723.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="7740.75" y="47.6543">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7658" x2="7907" y1="59.5" y2="59.5"/><ellipse cx="7668" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="7677" y="73.7104">data_ : const char *</text><ellipse cx="7668" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="7677" y="86.5151">size_ : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7658" x2="7907" y1="93.1094" y2="93.1094"/><ellipse cx="7668" cy="104.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="7677" y="107.3198">SourceFile(const char * filename) : void</text><ellipse cx="7668" cy="116.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="7677" y="120.1245">SourceFile(const char (&amp;)[N] arr) : void</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="86.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="6846.5" y="996.5"/><ellipse cx="6917.25" cy="1012.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6920.2188,1018.1406 Q6919.6406,1018.4375 6919,1018.5781 Q6918.3594,1018.7344 6917.6563,1018.7344 Q6915.1563,1018.7344 6913.8281,1017.0938 Q6912.5156,1015.4375 6912.5156,1012.3125 Q6912.5156,1009.1875 6913.8281,1007.5313 Q6915.1563,1005.875 6917.6563,1005.875 Q6918.3594,1005.875 6919,1006.0313 Q6919.6563,1006.1875 6920.2188,1006.4844 L6920.2188,1009.2031 Q6919.5938,1008.625 6919,1008.3594 Q6918.4063,1008.0781 6917.7813,1008.0781 Q6916.4375,1008.0781 6915.75,1009.1563 Q6915.0625,1010.2188 6915.0625,1012.3125 Q6915.0625,1014.4063 6915.75,1015.4844 Q6916.4375,1016.5469 6917.7813,1016.5469 Q6918.4063,1016.5469 6919,1016.2813 Q6919.5938,1016 6920.2188,1015.4219 L6920.2188,1018.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="6937.75" y="1016.6543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6847.5" x2="7063.5" y1="1028.5" y2="1028.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6847.5" x2="7063.5" y1="1036.5" y2="1036.5"/><ellipse cx="6857.5" cy="1047.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6866.5" y="1050.7104">~RawLogger() : void</text><ellipse cx="6857.5" cy="1060.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6866.5" y="1063.5151">setIndex(int index) : RawLogger &amp;</text><ellipse cx="6857.5" cy="1073.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6866.5" y="1076.3198">stream() : LogStream &amp;</text><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="150.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="3411" y="4311"/><ellipse cx="3571.25" cy="4327" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3571.3594,4322.3438 L3570.2031,4327.4219 L3572.5313,4327.4219 L3571.3594,4322.3438 Z M3569.875,4320.1094 L3572.8594,4320.1094 L3576.2188,4332.5 L3573.7656,4332.5 L3573,4329.4375 L3569.7188,4329.4375 L3568.9688,4332.5 L3566.5313,4332.5 L3569.875,4320.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="3591.75" y="4331.1543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3412" x2="3773" y1="4343" y2="4343"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3412" x2="3773" y1="4351" y2="4351"/><ellipse cx="3422" cy="4362" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3431" y="4365.2104">Poller(EventLoop * loop) : void</text><ellipse cx="3422" cy="4374.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3431" y="4378.0151">~Poller() : void</text><ellipse cx="3422" cy="4387.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3431" y="4390.8198">assertInLoopThread() : void</text><ellipse cx="3422" cy="4400.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="3431" y="4403.6245">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="3422" cy="4413.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="3431" y="4416.4292">updateChannel(Channel * channel) = 0 : void</text><ellipse cx="3422" cy="4426.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="3431" y="4429.2339">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="3422" cy="4438.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3431" y="4442.0386">resetAfterFork() : void</text><ellipse cx="3422" cy="4451.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="3431" y="4454.8433">newPoller(EventLoop * loop) : Poller *</text><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="137.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="2330" y="4317"/><ellipse cx="2592.75" cy="4333" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2595.7188,4338.6406 Q2595.1406,4338.9375 2594.5,4339.0781 Q2593.8594,4339.2344 2593.1563,4339.2344 Q2590.6563,4339.2344 2589.3281,4337.5938 Q2588.0156,4335.9375 2588.0156,4332.8125 Q2588.0156,4329.6875 2589.3281,4328.0313 Q2590.6563,4326.375 2593.1563,4326.375 Q2593.8594,4326.375 2594.5,4326.5313 Q2595.1563,4326.6875 2595.7188,4326.9844 L2595.7188,4329.7031 Q2595.0938,4329.125 2594.5,4328.8594 Q2593.9063,4328.5781 2593.2813,4328.5781 Q2591.9375,4328.5781 2591.25,4329.6563 Q2590.5625,4330.7188 2590.5625,4332.8125 Q2590.5625,4334.9063 2591.25,4335.9844 Q2591.9375,4337.0469 2593.2813,4337.0469 Q2593.9063,4337.0469 2594.5,4336.7813 Q2595.0938,4336.5 2595.7188,4335.9219 L2595.7188,4338.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="2613.25" y="4337.1543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2331" x2="2938" y1="4349" y2="4349"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2331" x2="2938" y1="4357" y2="4357"/><ellipse cx="2341" cy="4368" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2350" y="4371.2104">TimerQueue(EventLoop * loop) : void</text><ellipse cx="2341" cy="4380.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="2350" y="4384.0151">~TimerQueue() : void</text><ellipse cx="2341" cy="4393.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="2350" y="4396.8198">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="2341" cy="4406.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="2350" y="4409.6245">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="2341" cy="4419.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2350" y="4422.4292">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="2341" cy="4432.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="2350" y="4435.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="2341" cy="4444.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="2350" y="4448.0386">reset() : void</text><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="419.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="3803.5" y="4679"/><ellipse cx="3955.75" cy="4695" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3958.7188,4700.6406 Q3958.1406,4700.9375 3957.5,4701.0781 Q3956.8594,4701.2344 3956.1563,4701.2344 Q3953.6563,4701.2344 3952.3281,4699.5938 Q3951.0156,4697.9375 3951.0156,4694.8125 Q3951.0156,4691.6875 3952.3281,4690.0313 Q3953.6563,4688.375 3956.1563,4688.375 Q3956.8594,4688.375 3957.5,4688.5313 Q3958.1563,4688.6875 3958.7188,4688.9844 L3958.7188,4691.7031 Q3958.0938,4691.125 3957.5,4690.8594 Q3956.9063,4690.5781 3956.2813,4690.5781 Q3954.9375,4690.5781 3954.25,4691.6563 Q3953.5625,4692.7188 3953.5625,4694.8125 Q3953.5625,4696.9063 3954.25,4697.9844 Q3954.9375,4699.0469 3956.2813,4699.0469 Q3956.9063,4699.0469 3957.5,4698.7813 Q3958.0938,4698.5 3958.7188,4697.9219 L3958.7188,4700.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="3976.25" y="4699.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3804.5" x2="4166.5" y1="4711" y2="4711"/><ellipse cx="3814.5" cy="4722" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="3823.5" y="4725.2104">kNoneEvent : const int</text><ellipse cx="3814.5" cy="4734.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="3823.5" y="4738.0151">kReadEvent : const int</text><ellipse cx="3814.5" cy="4747.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="3823.5" y="4750.8198">kWriteEvent : const int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3804.5" x2="4166.5" y1="4757.4141" y2="4757.4141"/><ellipse cx="3814.5" cy="4768.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="3823.5" y="4771.6245">Channel(EventLoop * loop, int fd) : void</text><ellipse cx="3814.5" cy="4781.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="3823.5" y="4784.4292">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="3814.5" cy="4794.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="3823.5" y="4797.2339">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="3814.5" cy="4806.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="3823.5" y="4810.0386">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="3814.5" cy="4819.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="3823.5" y="4822.8433">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="3814.5" cy="4832.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="3823.5" y="4835.6479">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="3814.5" cy="4845.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="3823.5" y="4848.4526">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="3814.5" cy="4858.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="3823.5" y="4861.2573">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="3814.5" cy="4870.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="3823.5" y="4874.062">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="3814.5" cy="4883.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="3823.5" y="4886.8667">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="3814.5" cy="4896.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="3823.5" y="4899.6714">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="3814.5" cy="4909.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="3823.5" y="4912.4761">fd() const : int</text><ellipse cx="3814.5" cy="4922.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3823.5" y="4925.2808">events() const : int</text><ellipse cx="3814.5" cy="4934.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="3823.5" y="4938.0854">revents() const : int</text><ellipse cx="3814.5" cy="4947.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3823.5" y="4950.8901">isNoneEvent() const : bool</text><ellipse cx="3814.5" cy="4960.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3823.5" y="4963.6948">disableAll() : void</text><ellipse cx="3814.5" cy="4973.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3823.5" y="4976.4995">remove() : void</text><ellipse cx="3814.5" cy="4986.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="3823.5" y="4989.3042">ownerLoop() : EventLoop *</text><ellipse cx="3814.5" cy="4998.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3823.5" y="5002.1089">enableReading() : void</text><ellipse cx="3814.5" cy="5011.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="3823.5" y="5014.9136">disableReading() : void</text><ellipse cx="3814.5" cy="5024.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3823.5" y="5027.7183">enableWriting() : void</text><ellipse cx="3814.5" cy="5037.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3823.5" y="5040.5229">disableWriting() : void</text><ellipse cx="3814.5" cy="5050.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3823.5" y="5053.3276">isWriting() const : bool</text><ellipse cx="3814.5" cy="5062.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3823.5" y="5066.1323">isReading() const : bool</text><ellipse cx="3814.5" cy="5075.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="3823.5" y="5078.937">updateEvents(int events) : void</text><ellipse cx="3814.5" cy="5088.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3823.5" y="5091.7417">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="137.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="834" y="970.5"/><ellipse cx="983.25" cy="986.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M986.2188,992.1406 Q985.6406,992.4375 985,992.5781 Q984.3594,992.7344 983.6563,992.7344 Q981.1563,992.7344 979.8281,991.0938 Q978.5156,989.4375 978.5156,986.3125 Q978.5156,983.1875 979.8281,981.5313 Q981.1563,979.875 983.6563,979.875 Q984.3594,979.875 985,980.0313 Q985.6563,980.1875 986.2188,980.4844 L986.2188,983.2031 Q985.5938,982.625 985,982.3594 Q984.4063,982.0781 983.7813,982.0781 Q982.4375,982.0781 981.75,983.1563 Q981.0625,984.2188 981.0625,986.3125 Q981.0625,988.4063 981.75,989.4844 Q982.4375,990.5469 983.7813,990.5469 Q984.4063,990.5469 985,990.2813 Q985.5938,990 986.2188,989.4219 L986.2188,992.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="1003.75" y="990.6543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="835" x2="1280" y1="1002.5" y2="1002.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="835" x2="1280" y1="1010.5" y2="1010.5"/><ellipse cx="845" cy="1021.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="854" y="1024.7104">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="845" cy="1034.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="854" y="1037.5151">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="845" cy="1047.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="854" y="1050.3198">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="845" cy="1059.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="854" y="1063.1245">getName() const : std::string</text><ellipse cx="845" cy="1072.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="854" y="1075.9292">getTaskCount() : size_t</text><ellipse cx="845" cy="1085.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="854" y="1088.7339">stop() : void</text><ellipse cx="845" cy="1098.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="854" y="1101.5386">~ConcurrentTaskQueue() : void</text><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="278.4844" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="4616" y="3725"/><ellipse cx="4820.75" cy="3741" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4823.7188,3746.6406 Q4823.1406,3746.9375 4822.5,3747.0781 Q4821.8594,3747.2344 4821.1563,3747.2344 Q4818.6563,3747.2344 4817.3281,3745.5938 Q4816.0156,3743.9375 4816.0156,3740.8125 Q4816.0156,3737.6875 4817.3281,3736.0313 Q4818.6563,3734.375 4821.1563,3734.375 Q4821.8594,3734.375 4822.5,3734.5313 Q4823.1563,3734.6875 4823.7188,3734.9844 L4823.7188,3737.7031 Q4823.0938,3737.125 4822.5,3736.8594 Q4821.9063,3736.5781 4821.2813,3736.5781 Q4819.9375,3736.5781 4819.25,3737.6563 Q4818.5625,3738.7188 4818.5625,3740.8125 Q4818.5625,3742.9063 4819.25,3743.9844 Q4819.9375,3745.0469 4821.2813,3745.0469 Q4821.9063,3745.0469 4822.5,3744.7813 Q4823.0938,3744.5 4823.7188,3743.9219 L4823.7188,3746.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="4841.25" y="3745.1543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4617" x2="5108" y1="3757" y2="3757"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4617" x2="5108" y1="3765" y2="3765"/><ellipse cx="4627" cy="3776" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="4636" y="3779.2104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="4627" cy="3788.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="4636" y="3792.0151">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="4627" cy="3801.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="4636" y="3804.8198">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="4627" cy="3814.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4636" y="3817.6245">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><ellipse cx="4627" cy="3827.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4636" y="3830.4292">family() const : sa_family_t</text><ellipse cx="4627" cy="3840.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4636" y="3843.2339">toIp() const : std::string</text><ellipse cx="4627" cy="3852.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4636" y="3856.0386">toIpPort() const : std::string</text><ellipse cx="4627" cy="3865.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4636" y="3868.8433">toPort() const : uint16_t</text><ellipse cx="4627" cy="3878.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="4636" y="3881.6479">isIpV6() const : bool</text><ellipse cx="4627" cy="3891.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4636" y="3894.4526">isIntranetIp() const : bool</text><ellipse cx="4627" cy="3904.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4636" y="3907.2573">isLoopbackIp() const : bool</text><ellipse cx="4627" cy="3916.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4636" y="3920.062">getSockAddr() const : const struct sockaddr *</text><ellipse cx="4627" cy="3929.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="4636" y="3932.8667">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="4627" cy="3942.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4636" y="3945.6714">ipNetEndian() const : uint32_t</text><ellipse cx="4627" cy="3955.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4636" y="3958.4761">ip6NetEndian() const : const uint32_t *</text><ellipse cx="4627" cy="3968.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4636" y="3971.2808">portNetEndian() const : uint16_t</text><ellipse cx="4627" cy="3980.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4636" y="3984.0854">setPortNetEndian(uint16_t port) : void</text><ellipse cx="4627" cy="3993.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4636" y="3996.8901">isUnspecified() const : bool</text><!--MD5=[fc18972faf1c61d69feddadc1f33c92d]
class C_0000673025168912921705--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="73.6094" id="C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="4778" y="4349"/><ellipse cx="4821.8" cy="4365" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4824.7688,4370.6406 Q4824.1906,4370.9375 4823.55,4371.0781 Q4822.9094,4371.2344 4822.2063,4371.2344 Q4819.7063,4371.2344 4818.3781,4369.5938 Q4817.0656,4367.9375 4817.0656,4364.8125 Q4817.0656,4361.6875 4818.3781,4360.0313 Q4819.7063,4358.375 4822.2063,4358.375 Q4822.9094,4358.375 4823.55,4358.5313 Q4824.2063,4358.6875 4824.7688,4358.9844 L4824.7688,4361.7031 Q4824.1438,4361.125 4823.55,4360.8594 Q4822.9563,4360.5781 4822.3313,4360.5781 Q4820.9875,4360.5781 4820.3,4361.6563 Q4819.6125,4362.7188 4819.6125,4364.8125 Q4819.6125,4366.9063 4820.3,4367.9844 Q4820.9875,4369.0469 4822.3313,4369.0469 Q4822.9563,4369.0469 4823.55,4368.7813 Q4824.1438,4368.5 4824.7688,4367.9219 L4824.7688,4370.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="4842.2" y="4369.1543">InetAddress::()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4779" x2="4966" y1="4381" y2="4381"/><ellipse cx="4789" cy="4392" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4798" y="4395.2104">addr_ : struct sockaddr_in</text><ellipse cx="4789" cy="4404.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4798" y="4408.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4779" x2="4966" y1="4414.6094" y2="4414.6094"/><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="73.6094" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="1992.5" y="2370.5"/><ellipse cx="2029.55" cy="2386.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2033.6594,2392.5 L2025.9406,2392.5 L2025.9406,2380.1094 L2033.6594,2380.1094 L2033.6594,2382.2656 L2028.3938,2382.2656 L2028.3938,2384.9375 L2033.1594,2384.9375 L2033.1594,2387.0938 L2028.3938,2387.0938 L2028.3938,2390.3438 L2033.6594,2390.3438 L2033.6594,2392.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="2048.45" y="2390.6543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1993.5" x2="2125.5" y1="2402.5" y2="2402.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1998.5" y="2416.7104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1998.5" y="2429.5151">kSSLInvalidCertificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1993.5" x2="2125.5" y1="2436.1094" y2="2436.1094"/><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="508.9688" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1177" x="2658" y="785"/><ellipse cx="3195.75" cy="801" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3195.8594,796.3438 L3194.7031,801.4219 L3197.0313,801.4219 L3195.8594,796.3438 Z M3194.375,794.1094 L3197.3594,794.1094 L3200.7188,806.5 L3198.2656,806.5 L3197.5,803.4375 L3194.2188,803.4375 L3193.4688,806.5 L3191.0313,806.5 L3194.375,794.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="3216.25" y="805.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2659" x2="3834" y1="817" y2="817"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2659" x2="3834" y1="825" y2="825"/><ellipse cx="2669" cy="836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2678" y="839.2104">TcpConnection() = default : void</text><ellipse cx="2669" cy="848.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2678" y="852.0151">~TcpConnection() : void</text><ellipse cx="2669" cy="861.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="2678" y="864.8198">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="2669" cy="874.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="2678" y="877.6245">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="2669" cy="887.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="2678" y="890.4292">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="2669" cy="900.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="2678" y="903.2339">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="2669" cy="912.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="2678" y="916.0386">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="2669" cy="925.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="2678" y="928.8433">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="2669" cy="938.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="2678" y="941.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="2669" cy="951.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="2678" y="954.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="2669" cy="964.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="2678" y="967.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="2669" cy="976.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="2678" y="980.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="2669" cy="989.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="2678" y="992.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="2669" cy="1002.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="2678" y="1005.6714">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="2669" cy="1015.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="2678" y="1018.4761">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="2669" cy="1028.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="2678" y="1031.2808">connected() const = 0 : bool</text><ellipse cx="2669" cy="1040.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="2678" y="1044.0854">disconnected() const = 0 : bool</text><ellipse cx="2669" cy="1053.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="2678" y="1056.8901">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="2669" cy="1066.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="2678" y="1069.6948">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="2669" cy="1079.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="2678" y="1082.4995">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="2669" cy="1092.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="2678" y="1095.3042">shutdown() = 0 : void</text><ellipse cx="2669" cy="1104.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="2678" y="1108.1089">forceClose() = 0 : void</text><ellipse cx="2669" cy="1117.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="2678" y="1120.9136">getLoop() = 0 : EventLoop *</text><ellipse cx="2669" cy="1130.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="2678" y="1133.7183">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="2669" cy="1143.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="2678" y="1146.5229">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="2669" cy="1156.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2678" y="1159.3276">hasContext() const : bool</text><ellipse cx="2669" cy="1168.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2678" y="1172.1323">clearContext() : void</text><ellipse cx="2669" cy="1181.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="2678" y="1184.937">keepAlive() = 0 : void</text><ellipse cx="2669" cy="1194.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="2678" y="1197.7417">isKeepAlive() = 0 : bool</text><ellipse cx="2669" cy="1207.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="2678" y="1210.5464">bytesSent() const = 0 : size_t</text><ellipse cx="2669" cy="1220.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="2678" y="1223.3511">bytesReceived() const = 0 : size_t</text><ellipse cx="2669" cy="1232.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="2678" y="1236.1558">isSSLConnection() const = 0 : bool</text><ellipse cx="2669" cy="1245.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1151" x="2678" y="1248.9604">startClientEncryption(std::function&lt;void ()&gt; callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2678" y="1261.7651">{}) = 0 : void</text><ellipse cx="2669" cy="1271.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="609" x="2678" y="1274.5698">startServerEncryption(const std::shared_ptr&lt;SSLContext&gt; &amp; ctx, std::function&lt;void ()&gt; callback) = 0 : void</text><ellipse cx="2669" cy="1284.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="2678" y="1287.3745">getContext() : std::shared_ptr&lt;T&gt;</text><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="304.0938" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="1713" x="2148" y="207"/><ellipse cx="2971.75" cy="223" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2974.7188,228.6406 Q2974.1406,228.9375 2973.5,229.0781 Q2972.8594,229.2344 2972.1563,229.2344 Q2969.6563,229.2344 2968.3281,227.5938 Q2967.0156,225.9375 2967.0156,222.8125 Q2967.0156,219.6875 2968.3281,218.0313 Q2969.6563,216.375 2972.1563,216.375 Q2972.8594,216.375 2973.5,216.5313 Q2974.1563,216.6875 2974.7188,216.9844 L2974.7188,219.7031 Q2974.0938,219.125 2973.5,218.8594 Q2972.9063,218.5781 2972.2813,218.5781 Q2970.9375,218.5781 2970.25,219.6563 Q2969.5625,220.7188 2969.5625,222.8125 Q2969.5625,224.9063 2970.25,225.9844 Q2970.9375,227.0469 2972.2813,227.0469 Q2972.9063,227.0469 2973.5,226.7813 Q2974.0938,226.5 2974.7188,225.9219 L2974.7188,228.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="2992.25" y="227.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2149" x2="3860" y1="239" y2="239"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2149" x2="3860" y1="247" y2="247"/><ellipse cx="2159" cy="258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="2168" y="261.2104">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="2159" cy="270.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2168" y="274.0151">~TcpClient() : void</text><ellipse cx="2159" cy="283.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2168" y="286.8198">connect() : void</text><ellipse cx="2159" cy="296.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2168" y="299.6245">disconnect() : void</text><ellipse cx="2159" cy="309.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2168" y="312.4292">stop() : void</text><ellipse cx="2159" cy="322.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2168" y="325.2339">connection() const : TcpConnectionPtr</text><ellipse cx="2159" cy="334.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2168" y="338.0386">getLoop() const : EventLoop *</text><ellipse cx="2159" cy="347.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="2168" y="350.8433">retry() const : bool</text><ellipse cx="2159" cy="360.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2168" y="363.6479">enableRetry() : void</text><ellipse cx="2159" cy="373.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2168" y="376.4526">name() const : const std::string &amp;</text><ellipse cx="2159" cy="386.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="2168" y="389.2573">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="2159" cy="398.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="2168" y="402.062">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="2159" cy="411.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="2168" y="414.8667">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="2159" cy="424.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="2168" y="427.6714">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="2159" cy="437.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="2168" y="440.4761">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="2159" cy="450.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2168" y="453.2808">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="2159" cy="462.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2168" y="466.0854">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="2159" cy="475.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="2168" y="478.8901">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="2159" cy="488.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2168" y="491.6948">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="2159" cy="501.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="2168" y="504.4995">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="756" x="2655" y="504.4995">, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = = {}, const std::string &amp; certPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="3418" y="504.4995">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3599" y="504.4995">, const std::string &amp; caPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="3816" y="504.4995">) : void</text><!--MD5=[36897566f721d8b8c541721979fa9001]
class C_0001278908569830571044--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="60.8047" id="C_0001278908569830571044" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="577" y="46.5"/><ellipse cx="592" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M594.9688,68.1406 Q594.3906,68.4375 593.75,68.5781 Q593.1094,68.7344 592.4063,68.7344 Q589.9063,68.7344 588.5781,67.0938 Q587.2656,65.4375 587.2656,62.3125 Q587.2656,59.1875 588.5781,57.5313 Q589.9063,55.875 592.4063,55.875 Q593.1094,55.875 593.75,56.0313 Q594.4063,56.1875 594.9688,56.4844 L594.9688,59.2031 Q594.3438,58.625 593.75,58.3594 Q593.1563,58.0781 592.5313,58.0781 Q591.1875,58.0781 590.5,59.1563 Q589.8125,60.2188 589.8125,62.3125 Q589.8125,64.4063 590.5,65.4844 Q591.1875,66.5469 592.5313,66.5469 Q593.1563,66.5469 593.75,66.2813 Q594.3438,66 594.9688,65.4219 L594.9688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="606" y="66.6543">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="578" x2="759" y1="78.5" y2="78.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="578" x2="759" y1="86.5" y2="86.5"/><ellipse cx="588" cy="97.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="597" y="100.7104">IgnoreSigPipe() : void</text><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="176.0469" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="5326" y="3318"/><ellipse cx="5532.75" cy="3334" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5535.7188,3339.6406 Q5535.1406,3339.9375 5534.5,3340.0781 Q5533.8594,3340.2344 5533.1563,3340.2344 Q5530.6563,3340.2344 5529.3281,3338.5938 Q5528.0156,3336.9375 5528.0156,3333.8125 Q5528.0156,3330.6875 5529.3281,3329.0313 Q5530.6563,3327.375 5533.1563,3327.375 Q5533.8594,3327.375 5534.5,3327.5313 Q5535.1563,3327.6875 5535.7188,3327.9844 L5535.7188,3330.7031 Q5535.0938,3330.125 5534.5,3329.8594 Q5533.9063,3329.5781 5533.2813,3329.5781 Q5531.9375,3329.5781 5531.25,3330.6563 Q5530.5625,3331.7188 5530.5625,3333.8125 Q5530.5625,3335.9063 5531.25,3336.9844 Q5531.9375,3338.0469 5533.2813,3338.0469 Q5533.9063,3338.0469 5534.5,3337.7813 Q5535.0938,3337.5 5535.7188,3336.9219 L5535.7188,3339.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5553.25" y="3338.1543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5327" x2="5812" y1="3350" y2="3350"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5327" x2="5812" y1="3358" y2="3358"/><ellipse cx="5337" cy="3369" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="5346" y="3372.2104">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="5337" cy="3381.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="5346" y="3385.0151">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="5337" cy="3394.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="5346" y="3397.8198">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="5337" cy="3407.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="5346" y="3410.6245">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5337" cy="3420.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="5346" y="3423.4292">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="5337" cy="3433.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="5346" y="3436.2339">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="5337" cy="3445.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5346" y="3449.0386">serverAddress() const : const InetAddress &amp;</text><ellipse cx="5337" cy="3458.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5346" y="3461.8433">start() : void</text><ellipse cx="5337" cy="3471.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="5346" y="3474.6479">restart() : void</text><ellipse cx="5337" cy="3484.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5346" y="3487.4526">stop() : void</text><!--MD5=[e79edad503674c7fc854de75a75b6c70]
class C_0000000982196670174162--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="86.4141" id="C_0000000982196670174162" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="5286.5" y="2860.5"/><ellipse cx="5301.5" cy="2876.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5305.6094,2882.5 L5297.8906,2882.5 L5297.8906,2870.1094 L5305.6094,2870.1094 L5305.6094,2872.2656 L5300.3438,2872.2656 L5300.3438,2874.9375 L5305.1094,2874.9375 L5305.1094,2877.0938 L5300.3438,2877.0938 L5300.3438,2880.3438 L5305.6094,2880.3438 L5305.6094,2882.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="5315.5" y="2880.6543">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5287.5" x2="5431.5" y1="2892.5" y2="2892.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5292.5" y="2906.7104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="5292.5" y="2919.5151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="5292.5" y="2932.3198">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5287.5" x2="5431.5" y1="2938.9141" y2="2938.9141"/><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="112.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="2760.5" y="2847.5"/><ellipse cx="3064.25" cy="2863.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3067.2188,2869.1406 Q3066.6406,2869.4375 3066,2869.5781 Q3065.3594,2869.7344 3064.6563,2869.7344 Q3062.1563,2869.7344 3060.8281,2868.0938 Q3059.5156,2866.4375 3059.5156,2863.3125 Q3059.5156,2860.1875 3060.8281,2858.5313 Q3062.1563,2856.875 3064.6563,2856.875 Q3065.3594,2856.875 3066,2857.0313 Q3066.6563,2857.1875 3067.2188,2857.4844 L3067.2188,2860.2031 Q3066.5938,2859.625 3066,2859.3594 Q3065.4063,2859.0781 3064.7813,2859.0781 Q3063.4375,2859.0781 3062.75,2860.1563 Q3062.0625,2861.2188 3062.0625,2863.3125 Q3062.0625,2865.4063 3062.75,2866.4844 Q3063.4375,2867.5469 3064.7813,2867.5469 Q3065.4063,2867.5469 3066,2867.2813 Q3066.5938,2867 3067.2188,2866.4219 L3067.2188,2869.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="3084.75" y="2867.6543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2761.5" x2="3453.5" y1="2879.5" y2="2879.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2761.5" x2="3453.5" y1="2887.5" y2="2887.5"/><ellipse cx="2771.5" cy="2898.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="2780.5" y="2901.7104">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="2771.5" cy="2911.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2780.5" y="2914.5151">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="2771.5" cy="2924.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="2780.5" y="2927.3198">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="2771.5" cy="2936.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="2780.5" y="2940.1245">getLoop() : EventLoop *</text><ellipse cx="2771.5" cy="2949.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2780.5" y="2952.9292">~TimingWheel() : void</text><!--MD5=[1a78d5db763eaae95321a32dcf46614d]
class C_0002013739811805694444--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="73.6094" id="C_0002013739811805694444" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="1529.5" y="2370.5"/><ellipse cx="1583.25" cy="2386.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1586.2188,2392.1406 Q1585.6406,2392.4375 1585,2392.5781 Q1584.3594,2392.7344 1583.6563,2392.7344 Q1581.1563,2392.7344 1579.8281,2391.0938 Q1578.5156,2389.4375 1578.5156,2386.3125 Q1578.5156,2383.1875 1579.8281,2381.5313 Q1581.1563,2379.875 1583.6563,2379.875 Q1584.3594,2379.875 1585,2380.0313 Q1585.6563,2380.1875 1586.2188,2380.4844 L1586.2188,2383.2031 Q1585.5938,2382.625 1585,2382.3594 Q1584.4063,2382.0781 1583.7813,2382.0781 Q1582.4375,2382.0781 1581.75,2383.1563 Q1581.0625,2384.2188 1581.0625,2386.3125 Q1581.0625,2388.4063 1581.75,2389.4844 Q1582.4375,2390.5469 1583.7813,2390.5469 Q1584.4063,2390.5469 1585,2390.2813 Q1585.5938,2390 1586.2188,2389.4219 L1586.2188,2392.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="1603.75" y="2390.6543">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1530.5" x2="1814.5" y1="2402.5" y2="2402.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1530.5" x2="1814.5" y1="2410.5" y2="2410.5"/><ellipse cx="1540.5" cy="2421.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1549.5" y="2424.7104">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="1540.5" cy="2434.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1549.5" y="2437.5151">~CallbackEntry() : void</text><!--MD5=[4fb8d7b5f3060c88eb88b17d74e59049]
class C_0001515554933771522998--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="112.0234" id="C_0001515554933771522998" style="stroke: #A80036; stroke-width: 1.5;" width="95" x="5424" y="1741"/><ellipse cx="5439" cy="1757" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5443.1094,1763 L5435.3906,1763 L5435.3906,1750.6094 L5443.1094,1750.6094 L5443.1094,1752.7656 L5437.8438,1752.7656 L5437.8438,1755.4375 L5442.6094,1755.4375 L5442.6094,1757.5938 L5437.8438,1757.5938 L5437.8438,1760.8438 L5443.1094,1760.8438 L5443.1094,1763 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="63" x="5453" y="1761.1543">SSLStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5425" x2="5518" y1="1773" y2="1773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="5430" y="1787.2104">Handshaking</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="5430" y="1800.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="5430" y="1812.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="5430" y="1825.6245">DisConnecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="5430" y="1838.4292">DisConnected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5425" x2="5518" y1="1845.0234" y2="1845.0234"/><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="457.75" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1444" x="3229.5" y="1568"/><ellipse cx="3888.25" cy="1584" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3891.2188,1589.6406 Q3890.6406,1589.9375 3890,1590.0781 Q3889.3594,1590.2344 3888.6563,1590.2344 Q3886.1563,1590.2344 3884.8281,1588.5938 Q3883.5156,1586.9375 3883.5156,1583.8125 Q3883.5156,1580.6875 3884.8281,1579.0313 Q3886.1563,1577.375 3888.6563,1577.375 Q3889.3594,1577.375 3890,1577.5313 Q3890.6563,1577.6875 3891.2188,1577.9844 L3891.2188,1580.7031 Q3890.5938,1580.125 3890,1579.8594 Q3889.4063,1579.5781 3888.7813,1579.5781 Q3887.4375,1579.5781 3886.75,1580.6563 Q3886.0625,1581.7188 3886.0625,1583.8125 Q3886.0625,1585.9063 3886.75,1586.9844 Q3887.4375,1588.0469 3888.7813,1588.0469 Q3889.4063,1588.0469 3890,1587.7813 Q3890.5938,1587.5 3891.2188,1586.9219 L3891.2188,1589.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="3908.75" y="1588.1543">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3230.5" x2="4672.5" y1="1600" y2="1600"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3230.5" x2="4672.5" y1="1608" y2="1608"/><ellipse cx="3240.5" cy="1619" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="682" x="3249.5" y="1622.2104">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr) : void</text><ellipse cx="3240.5" cy="1631.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1418" x="3249.5" y="1635.0151">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, const std::shared_ptr&lt;SSLContext&gt; &amp; ctxPtr, bool isServer = true, bool validateCert = true, const std::string &amp; hostname = "") : void</text><ellipse cx="3240.5" cy="1644.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="3249.5" y="1647.8198">~TcpConnectionImpl() : void</text><ellipse cx="3240.5" cy="1657.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="3249.5" y="1660.6245">send(const char * msg, size_t len) : void</text><ellipse cx="3240.5" cy="1670.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="3249.5" y="1673.4292">send(const void * msg, size_t len) : void</text><ellipse cx="3240.5" cy="1683.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3249.5" y="1686.2339">send(const std::string &amp; msg) : void</text><ellipse cx="3240.5" cy="1695.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="3249.5" y="1699.0386">send(std::string &amp;&amp; msg) : void</text><ellipse cx="3240.5" cy="1708.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="3249.5" y="1711.8433">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="3240.5" cy="1721.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="3249.5" y="1724.6479">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="3240.5" cy="1734.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="3249.5" y="1737.4526">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="3240.5" cy="1747.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="3249.5" y="1750.2573">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="3240.5" cy="1759.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3249.5" y="1763.062">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="3240.5" cy="1772.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="3249.5" y="1775.8667">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="3240.5" cy="1785.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="3249.5" y="1788.6714">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="3240.5" cy="1798.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3249.5" y="1801.4761">localAddr() const : const InetAddress &amp;</text><ellipse cx="3240.5" cy="1811.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3249.5" y="1814.2808">peerAddr() const : const InetAddress &amp;</text><ellipse cx="3240.5" cy="1823.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="3249.5" y="1827.0854">connected() const : bool</text><ellipse cx="3240.5" cy="1836.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3249.5" y="1839.8901">disconnected() const : bool</text><ellipse cx="3240.5" cy="1849.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3249.5" y="1852.6948">getRecvBuffer() : MsgBuffer *</text><ellipse cx="3240.5" cy="1862.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="3249.5" y="1865.4995">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="3240.5" cy="1875.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="3249.5" y="1878.3042">keepAlive() : void</text><ellipse cx="3240.5" cy="1887.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3249.5" y="1891.1089">isKeepAlive() : bool</text><ellipse cx="3240.5" cy="1900.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3249.5" y="1903.9136">setTcpNoDelay(bool on) : void</text><ellipse cx="3240.5" cy="1913.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3249.5" y="1916.7183">shutdown() : void</text><ellipse cx="3240.5" cy="1926.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3249.5" y="1929.5229">forceClose() : void</text><ellipse cx="3240.5" cy="1939.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3249.5" y="1942.3276">getLoop() : EventLoop *</text><ellipse cx="3240.5" cy="1951.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3249.5" y="1955.1323">bytesSent() const : size_t</text><ellipse cx="3240.5" cy="1964.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3249.5" y="1967.937">bytesReceived() const : size_t</text><ellipse cx="3240.5" cy="1977.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1166" x="3249.5" y="1980.7417">startClientEncryption(std::function&lt;void ()&gt; callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="3249.5" y="1993.5464">{}) : void</text><ellipse cx="3240.5" cy="2003.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="588" x="3249.5" y="2006.3511">startServerEncryption(const std::shared_ptr&lt;SSLContext&gt; &amp; ctx, std::function&lt;void ()&gt; callback) : void</text><ellipse cx="3240.5" cy="2015.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3249.5" y="2019.1558">isSSLConnection() const : bool</text><!--MD5=[fd31fd44dd4b53895283cc4ebf0192ff]
class C_0002266895444343633259--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="86.4141" id="C_0002266895444343633259" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="4005" y="316"/><ellipse cx="4098.25" cy="332" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4101.2188,337.6406 Q4100.6406,337.9375 4100,338.0781 Q4099.3594,338.2344 4098.6563,338.2344 Q4096.1563,338.2344 4094.8281,336.5938 Q4093.5156,334.9375 4093.5156,331.8125 Q4093.5156,328.6875 4094.8281,327.0313 Q4096.1563,325.375 4098.6563,325.375 Q4099.3594,325.375 4100,325.5313 Q4100.6563,325.6875 4101.2188,325.9844 L4101.2188,328.7031 Q4100.5938,328.125 4100,327.8594 Q4099.4063,327.5781 4098.7813,327.5781 Q4097.4375,327.5781 4096.75,328.6563 Q4096.0625,329.7188 4096.0625,331.8125 Q4096.0625,333.9063 4096.75,334.9844 Q4097.4375,336.0469 4098.7813,336.0469 Q4099.4063,336.0469 4100,335.7813 Q4100.5938,335.5 4101.2188,334.9219 L4101.2188,337.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="4118.75" y="336.1543">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4006" x2="4397" y1="348" y2="348"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4006" x2="4397" y1="356" y2="356"/><ellipse cx="4016" cy="367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="4025" y="370.2104">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="4016" cy="379.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4025" y="383.0151">reset() : void</text><ellipse cx="4016" cy="392.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4025" y="395.8198">~KickoffEntry() : void</text><!--MD5=[87de1d9bdb2486f0ceeb68ee204e5830]
class C_0001029063960859366412--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="150.4375" id="C_0001029063960859366412" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="4575.5" y="964.5"/><ellipse cx="4667.25" cy="980.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4670.2188,986.1406 Q4669.6406,986.4375 4669,986.5781 Q4668.3594,986.7344 4667.6563,986.7344 Q4665.1563,986.7344 4663.8281,985.0938 Q4662.5156,983.4375 4662.5156,980.3125 Q4662.5156,977.1875 4663.8281,975.5313 Q4665.1563,973.875 4667.6563,973.875 Q4668.3594,973.875 4669,974.0313 Q4669.6563,974.1875 4670.2188,974.4844 L4670.2188,977.2031 Q4669.5938,976.625 4669,976.3594 Q4668.4063,976.0781 4667.7813,976.0781 Q4666.4375,976.0781 4665.75,977.1563 Q4665.0625,978.2188 4665.0625,980.3125 Q4665.0625,982.4063 4665.75,983.4844 Q4666.4375,984.5469 4667.7813,984.5469 Q4668.4063,984.5469 4669,984.2813 Q4669.5938,984 4670.2188,983.4219 L4670.2188,986.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="4687.75" y="984.6543">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4576.5" x2="4962.5" y1="996.5" y2="996.5"/><ellipse cx="4586.5" cy="1007.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="4595.5" y="1010.7104">sendFd_ : int</text><ellipse cx="4586.5" cy="1020.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4595.5" y="1023.5151">offset_ : off_t</text><ellipse cx="4586.5" cy="1033.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4595.5" y="1036.3198">fileBytesToSend_ : ssize_t</text><ellipse cx="4586.5" cy="1045.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4595.5" y="1049.1245">nDataWritten_ : std::size_t</text><ellipse cx="4586.5" cy="1058.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4595.5" y="1061.9292">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4576.5" x2="4962.5" y1="1068.5234" y2="1068.5234"/><ellipse cx="4586.5" cy="1079.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4595.5" y="1082.7339">isFile() const : bool</text><ellipse cx="4586.5" cy="1092.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="4595.5" y="1095.5386">~BufferNode() : void</text><ellipse cx="4586.5" cy="1105.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="4595.5" y="1108.3433">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[8afb725b5f97df604240a26bac5b9bd6]
class C_0001727349338344491225--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="99.2188" id="C_0001727349338344491225" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="4096" y="990"/><ellipse cx="4111" cy="1006" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4115.1094,1012 L4107.3906,1012 L4107.3906,999.6094 L4115.1094,999.6094 L4115.1094,1001.7656 L4109.8438,1001.7656 L4109.8438,1004.4375 L4114.6094,1004.4375 L4114.6094,1006.5938 L4109.8438,1006.5938 L4109.8438,1009.8438 L4115.1094,1009.8438 L4115.1094,1012 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="4125" y="1010.1543">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4097" x2="4326" y1="1022" y2="1022"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4102" y="1036.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4102" y="1049.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4102" y="1061.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4102" y="1074.6245">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4097" x2="4326" y1="1081.2188" y2="1081.2188"/><!--MD5=[0f63f2f8e965adadf9c398c93c7fab6c]
class C_0000469308227546933692--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="150.4375" id="C_0000469308227546933692" style="stroke: #A80036; stroke-width: 1.5;" width="358" x="5282.5" y="964.5"/><ellipse cx="5350.25" cy="980.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5353.2188,986.1406 Q5352.6406,986.4375 5352,986.5781 Q5351.3594,986.7344 5350.6563,986.7344 Q5348.1563,986.7344 5346.8281,985.0938 Q5345.5156,983.4375 5345.5156,980.3125 Q5345.5156,977.1875 5346.8281,975.5313 Q5348.1563,973.875 5350.6563,973.875 Q5351.3594,973.875 5352,974.0313 Q5352.6563,974.1875 5353.2188,974.4844 L5353.2188,977.2031 Q5352.5938,976.625 5352,976.3594 Q5351.4063,976.0781 5350.7813,976.0781 Q5349.4375,976.0781 5348.75,977.1563 Q5348.0625,978.2188 5348.0625,980.3125 Q5348.0625,982.4063 5348.75,983.4844 Q5349.4375,984.5469 5350.7813,984.5469 Q5351.4063,984.5469 5352,984.2813 Q5352.5938,984 5353.2188,983.4219 L5353.2188,986.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="214" x="5370.75" y="984.6543">TcpConnectionImpl::SSLEncryption</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5283.5" x2="5639.5" y1="996.5" y2="996.5"/><ellipse cx="5293.5" cy="1007.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5302.5" y="1010.7104">statusOfSSL_ : SSLStatus</text><ellipse cx="5293.5" cy="1020.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="5302.5" y="1023.5151">sslCtxPtr_ : std::shared_ptr&lt;SSLContext&gt;</text><ellipse cx="5293.5" cy="1033.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="5302.5" y="1036.3198">sslPtr_ : std::unique_ptr&lt;SSLConn&gt;</text><ellipse cx="5293.5" cy="1045.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="5302.5" y="1049.1245">sendBufferPtr_ : std::unique_ptr&lt;std::array&lt;char,8192&gt;&gt;</text><ellipse cx="5293.5" cy="1058.7188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="5302.5" y="1061.9292">isServer_ : bool</text><ellipse cx="5293.5" cy="1071.5234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="5302.5" y="1074.7339">isUpgrade_ : bool</text><ellipse cx="5293.5" cy="1084.3281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="5302.5" y="1087.5386">hostname_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5283.5" x2="5639.5" y1="1094.1328" y2="1094.1328"/><ellipse cx="5293.5" cy="1105.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="5302.5" y="1108.3433">upgradeCallback_ : std::function&lt;void ()&gt;</text><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="304.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="4905.5" y="3254"/><ellipse cx="5036.75" cy="3270" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5039.7188,3275.6406 Q5039.1406,3275.9375 5038.5,3276.0781 Q5037.8594,3276.2344 5037.1563,3276.2344 Q5034.6563,3276.2344 5033.3281,3274.5938 Q5032.0156,3272.9375 5032.0156,3269.8125 Q5032.0156,3266.6875 5033.3281,3265.0313 Q5034.6563,3263.375 5037.1563,3263.375 Q5037.8594,3263.375 5038.5,3263.5313 Q5039.1563,3263.6875 5039.7188,3263.9844 L5039.7188,3266.7031 Q5039.0938,3266.125 5038.5,3265.8594 Q5037.9063,3265.5781 5037.2813,3265.5781 Q5035.9375,3265.5781 5035.25,3266.6563 Q5034.5625,3267.7188 5034.5625,3269.8125 Q5034.5625,3271.9063 5035.25,3272.9844 Q5035.9375,3274.0469 5037.2813,3274.0469 Q5037.9063,3274.0469 5038.5,3273.7813 Q5039.0938,3273.5 5039.7188,3272.9219 L5039.7188,3275.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="5057.25" y="3274.1543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4906.5" x2="5218.5" y1="3286" y2="3286"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4906.5" x2="5218.5" y1="3294" y2="3294"/><ellipse cx="4916.5" cy="3305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="4925.5" y="3308.2104">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="4916.5" cy="3317.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="4925.5" y="3321.0151">getSocketError(int sockfd) : int</text><ellipse cx="4916.5" cy="3330.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="4925.5" y="3333.8198">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="4916.5" cy="3343.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="4925.5" y="3346.6245">isSelfConnect(int sockfd) : bool</text><ellipse cx="4916.5" cy="3356.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4925.5" y="3359.4292">Socket(int sockfd) : void</text><ellipse cx="4916.5" cy="3369.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="4925.5" y="3372.2339">~Socket() : void</text><ellipse cx="4916.5" cy="3381.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="4925.5" y="3385.0386">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="4916.5" cy="3394.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4925.5" y="3397.8433">listen() : void</text><ellipse cx="4916.5" cy="3407.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="4925.5" y="3410.6479">accept(InetAddress * peeraddr) : int</text><ellipse cx="4916.5" cy="3420.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4925.5" y="3423.4526">closeWrite() : void</text><ellipse cx="4916.5" cy="3433.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4925.5" y="3436.2573">read(char * buffer, uint64_t len) : int</text><ellipse cx="4916.5" cy="3445.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="4925.5" y="3449.062">fd() : int</text><ellipse cx="4916.5" cy="3458.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="4925.5" y="3461.8667">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="4916.5" cy="3471.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="4925.5" y="3474.6714">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="4916.5" cy="3484.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4925.5" y="3487.4761">setTcpNoDelay(bool on) : void</text><ellipse cx="4916.5" cy="3497.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4925.5" y="3500.2808">setReuseAddr(bool on) : void</text><ellipse cx="4916.5" cy="3509.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="4925.5" y="3513.0854">setReusePort(bool on) : void</text><ellipse cx="4916.5" cy="3522.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4925.5" y="3525.8901">setKeepAlive(bool on) : void</text><ellipse cx="4916.5" cy="3535.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4925.5" y="3538.6948">getSocketError() : int</text><ellipse cx="4916.5" cy="3548.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="4925.5" y="3551.4995">setNonBlockAndCloseOnExec(int sockfd) : void</text><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="5538.5" y="2879.5"/><ellipse cx="5553.5" cy="2895.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5556.4688,2901.1406 Q5555.8906,2901.4375 5555.25,2901.5781 Q5554.6094,2901.7344 5553.9063,2901.7344 Q5551.4063,2901.7344 5550.0781,2900.0938 Q5548.7656,2898.4375 5548.7656,2895.3125 Q5548.7656,2892.1875 5550.0781,2890.5313 Q5551.4063,2888.875 5553.9063,2888.875 Q5554.6094,2888.875 5555.25,2889.0313 Q5555.9063,2889.1875 5556.4688,2889.4844 L5556.4688,2892.2031 Q5555.8438,2891.625 5555.25,2891.3594 Q5554.6563,2891.0781 5554.0313,2891.0781 Q5552.6875,2891.0781 5552,2892.1563 Q5551.3125,2893.2188 5551.3125,2895.3125 Q5551.3125,2897.4063 5552,2898.4844 Q5552.6875,2899.5469 5554.0313,2899.5469 Q5554.6563,2899.5469 5555.25,2899.2813 Q5555.8438,2899 5556.4688,2898.4219 L5556.4688,2901.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="5567.5" y="2899.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5539.5" x2="5639.5" y1="2911.5" y2="2911.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5539.5" x2="5639.5" y1="2919.5" y2="2919.5"/><!--MD5=[d2d942cd4386751444b16de75468ea85]
class C_0001248784923817560723--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="48" id="C_0001248784923817560723" style="stroke: #A80036; stroke-width: 1.5;" width="86" x="5554.5" y="1773"/><ellipse cx="5569.5" cy="1789" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5572.4688,1794.6406 Q5571.8906,1794.9375 5571.25,1795.0781 Q5570.6094,1795.2344 5569.9063,1795.2344 Q5567.4063,1795.2344 5566.0781,1793.5938 Q5564.7656,1791.9375 5564.7656,1788.8125 Q5564.7656,1785.6875 5566.0781,1784.0313 Q5567.4063,1782.375 5569.9063,1782.375 Q5570.6094,1782.375 5571.25,1782.5313 Q5571.9063,1782.6875 5572.4688,1782.9844 L5572.4688,1785.7031 Q5571.8438,1785.125 5571.25,1784.8594 Q5570.6563,1784.5781 5570.0313,1784.5781 Q5568.6875,1784.5781 5568,1785.6563 Q5567.3125,1786.7188 5567.3125,1788.8125 Q5567.3125,1790.9063 5568,1791.9844 Q5568.6875,1793.0469 5570.0313,1793.0469 Q5570.6563,1793.0469 5571.25,1792.7813 Q5571.8438,1792.5 5572.4688,1791.9219 L5572.4688,1794.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="5583.5" y="1793.1543">SSLConn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5555.5" x2="5639.5" y1="1805" y2="1805"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5555.5" x2="5639.5" y1="1813" y2="1813"/><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="291.2891" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="1227" x="2161" y="2262"/><ellipse cx="2739.25" cy="2278" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2742.2188,2283.6406 Q2741.6406,2283.9375 2741,2284.0781 Q2740.3594,2284.2344 2739.6563,2284.2344 Q2737.1563,2284.2344 2735.8281,2282.5938 Q2734.5156,2280.9375 2734.5156,2277.8125 Q2734.5156,2274.6875 2735.8281,2273.0313 Q2737.1563,2271.375 2739.6563,2271.375 Q2740.3594,2271.375 2741,2271.5313 Q2741.6563,2271.6875 2742.2188,2271.9844 L2742.2188,2274.7031 Q2741.5938,2274.125 2741,2273.8594 Q2740.4063,2273.5781 2739.7813,2273.5781 Q2738.4375,2273.5781 2737.75,2274.6563 Q2737.0625,2275.7188 2737.0625,2277.8125 Q2737.0625,2279.9063 2737.75,2280.9844 Q2738.4375,2282.0469 2739.7813,2282.0469 Q2740.4063,2282.0469 2741,2281.7813 Q2741.5938,2281.5 2742.2188,2280.9219 L2742.2188,2283.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="2759.75" y="2282.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2162" x2="3387" y1="2294" y2="2294"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2162" x2="3387" y1="2302" y2="2302"/><ellipse cx="2172" cy="2313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="794" x="2181" y="2316.2104">TcpServer(EventLoop * loop, const InetAddress &amp; address, const std::string &amp; name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="2172" cy="2325.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2181" y="2329.0151">~TcpServer() : void</text><ellipse cx="2172" cy="2338.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2181" y="2341.8198">start() : void</text><ellipse cx="2172" cy="2351.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2181" y="2354.6245">stop() : void</text><ellipse cx="2172" cy="2364.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2181" y="2367.4292">setIoLoopNum(size_t num) : void</text><ellipse cx="2172" cy="2377.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="2181" y="2380.2339">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="2172" cy="2389.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="2181" y="2393.0386">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="2172" cy="2402.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="2181" y="2405.8433">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="2172" cy="2415.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="2181" y="2418.6479">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="2172" cy="2428.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="2181" y="2431.4526">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="2172" cy="2441.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="2181" y="2444.2573">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="2172" cy="2453.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2181" y="2457.062">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="2172" cy="2466.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2181" y="2469.8667">name() const : const std::string &amp;</text><ellipse cx="2172" cy="2479.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2181" y="2482.6714">ipPort() const : const std::string</text><ellipse cx="2172" cy="2492.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2181" y="2495.4761">address() const : const InetAddress &amp;</text><ellipse cx="2172" cy="2505.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2181" y="2508.2808">getLoop() const : EventLoop *</text><ellipse cx="2172" cy="2517.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="2181" y="2521.0854">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="2172" cy="2530.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="2181" y="2533.8901">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="2172" cy="2543.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1201" x="2181" y="2546.6948">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = = {}, const std::string &amp; caPath = "") : void</text><!--MD5=[2ed36b844a8e87b8a3c7bb092fd96de2]
class C_0000810201796859309531--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="73.6094" id="C_0000810201796859309531" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="283" y="40"/><ellipse cx="298" cy="56" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M300.9688,61.6406 Q300.3906,61.9375 299.75,62.0781 Q299.1094,62.2344 298.4063,62.2344 Q295.9063,62.2344 294.5781,60.5938 Q293.2656,58.9375 293.2656,55.8125 Q293.2656,52.6875 294.5781,51.0313 Q295.9063,49.375 298.4063,49.375 Q299.1094,49.375 299.75,49.5313 Q300.4063,49.6875 300.9688,49.9844 L300.9688,52.7031 Q300.3438,52.125 299.75,51.8594 Q299.1563,51.5781 298.5313,51.5781 Q297.1875,51.5781 296.5,52.6563 Q295.8125,53.7188 295.8125,55.8125 Q295.8125,57.9063 296.5,58.9844 Q297.1875,60.0469 298.5313,60.0469 Q299.1563,60.0469 299.75,59.7813 Q300.3438,59.5 300.9688,58.9219 L300.9688,61.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="312" y="60.1543">InetAddress::(anonymous_2030836)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="284" x2="541" y1="72" y2="72"/><ellipse cx="294" cy="83" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="303" y="86.2104">addr_ : struct sockaddr_in</text><ellipse cx="294" cy="95.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="303" y="99.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="284" x2="541" y1="105.6094" y2="105.6094"/><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="112.0234" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="4392.5" y="2847.5"/><ellipse cx="4679.25" cy="2863.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4682.2188,2869.1406 Q4681.6406,2869.4375 4681,2869.5781 Q4680.3594,2869.7344 4679.6563,2869.7344 Q4677.1563,2869.7344 4675.8281,2868.0938 Q4674.5156,2866.4375 4674.5156,2863.3125 Q4674.5156,2860.1875 4675.8281,2858.5313 Q4677.1563,2856.875 4679.6563,2856.875 Q4680.3594,2856.875 4681,2857.0313 Q4681.6563,2857.1875 4682.2188,2857.4844 L4682.2188,2860.2031 Q4681.5938,2859.625 4681,2859.3594 Q4680.4063,2859.0781 4679.7813,2859.0781 Q4678.4375,2859.0781 4677.75,2860.1563 Q4677.0625,2861.2188 4677.0625,2863.3125 Q4677.0625,2865.4063 4677.75,2866.4844 Q4678.4375,2867.5469 4679.7813,2867.5469 Q4680.4063,2867.5469 4681,2867.2813 Q4681.5938,2867 4682.2188,2866.4219 L4682.2188,2869.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="4699.75" y="2867.6543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4393.5" x2="5029.5" y1="2879.5" y2="2879.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4393.5" x2="5029.5" y1="2887.5" y2="2887.5"/><ellipse cx="4403.5" cy="2898.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="4412.5" y="2901.7104">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="4403.5" cy="2911.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4412.5" y="2914.5151">~Acceptor() : void</text><ellipse cx="4403.5" cy="2924.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4412.5" y="2927.3198">addr() const : const InetAddress &amp;</text><ellipse cx="4403.5" cy="2936.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="4412.5" y="2940.1245">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><ellipse cx="4403.5" cy="2949.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4412.5" y="2952.9292">listen() : void</text><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="150.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="1531" y="2828.5"/><ellipse cx="1754.25" cy="2844.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1757.2188,2850.1406 Q1756.6406,2850.4375 1756,2850.5781 Q1755.3594,2850.7344 1754.6563,2850.7344 Q1752.1563,2850.7344 1750.8281,2849.0938 Q1749.5156,2847.4375 1749.5156,2844.3125 Q1749.5156,2841.1875 1750.8281,2839.5313 Q1752.1563,2837.875 1754.6563,2837.875 Q1755.3594,2837.875 1756,2838.0313 Q1756.6563,2838.1875 1757.2188,2838.4844 L1757.2188,2841.2031 Q1756.5938,2840.625 1756,2840.3594 Q1755.4063,2840.0781 1754.7813,2840.0781 Q1753.4375,2840.0781 1752.75,2841.1563 Q1752.0625,2842.2188 1752.0625,2844.3125 Q1752.0625,2846.4063 1752.75,2847.4844 Q1753.4375,2848.5469 1754.7813,2848.5469 Q1755.4063,2848.5469 1756,2848.2813 Q1756.5938,2848 1757.2188,2847.4219 L1757.2188,2850.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="1774.75" y="2848.6543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1532" x2="2121" y1="2860.5" y2="2860.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1532" x2="2121" y1="2868.5" y2="2868.5"/><ellipse cx="1542" cy="2879.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1551" y="2882.7104">EventLoopThreadPool() : void</text><ellipse cx="1542" cy="2892.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="1551" y="2895.5151">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><ellipse cx="1542" cy="2905.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1551" y="2908.3198">start() : void</text><ellipse cx="1542" cy="2917.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1551" y="2921.1245">wait() : void</text><ellipse cx="1542" cy="2930.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="1551" y="2933.9292">size() : size_t</text><ellipse cx="1542" cy="2943.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1551" y="2946.7339">getNextLoop() : EventLoop *</text><ellipse cx="1542" cy="2956.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1551" y="2959.5386">getLoop(size_t id) : EventLoop *</text><ellipse cx="1542" cy="2969.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1551" y="2972.3433">getLoops() const : std::vector&lt;EventLoop *&gt;</text><!--MD5=[094a28402c24830a9b549b01e4879f1e]
class C_0001489562721151066050--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="60.8047" id="C_0001489562721151066050" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="3006.5" y="1766.5"/><ellipse cx="3021.5" cy="1782.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3024.4688,1788.1406 Q3023.8906,1788.4375 3023.25,1788.5781 Q3022.6094,1788.7344 3021.9063,1788.7344 Q3019.4063,1788.7344 3018.0781,1787.0938 Q3016.7656,1785.4375 3016.7656,1782.3125 Q3016.7656,1779.1875 3018.0781,1777.5313 Q3019.4063,1775.875 3021.9063,1775.875 Q3022.6094,1775.875 3023.25,1776.0313 Q3023.9063,1776.1875 3024.4688,1776.4844 L3024.4688,1779.2031 Q3023.8438,1778.625 3023.25,1778.3594 Q3022.6563,1778.0781 3022.0313,1778.0781 Q3020.6875,1778.0781 3020,1779.1563 Q3019.3125,1780.2188 3019.3125,1782.3125 Q3019.3125,1784.4063 3020,1785.4844 Q3020.6875,1786.5469 3022.0313,1786.5469 Q3022.6563,1786.5469 3023.25,1786.2813 Q3023.8438,1786 3024.4688,1785.4219 L3024.4688,1788.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="3035.5" y="1786.6543">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3007.5" x2="3193.5" y1="1798.5" y2="1798.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3007.5" x2="3193.5" y1="1806.5" y2="1806.5"/><ellipse cx="3017.5" cy="1817.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="3026.5" y="1820.7104">IgnoreSigPipe() : void</text><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="6" y="316"/><ellipse cx="130.75" cy="332" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M133.7188,337.6406 Q133.1406,337.9375 132.5,338.0781 Q131.8594,338.2344 131.1563,338.2344 Q128.6563,338.2344 127.3281,336.5938 Q126.0156,334.9375 126.0156,331.8125 Q126.0156,328.6875 127.3281,327.0313 Q128.6563,325.375 131.1563,325.375 Q131.8594,325.375 132.5,325.5313 Q133.1563,325.6875 133.7188,325.9844 L133.7188,328.7031 Q133.0938,328.125 132.5,327.8594 Q131.9063,327.5781 131.2813,327.5781 Q129.9375,327.5781 129.25,328.6563 Q128.5625,329.7188 128.5625,331.8125 Q128.5625,333.9063 129.25,334.9844 Q129.9375,336.0469 131.2813,336.0469 Q131.9063,336.0469 132.5,335.7813 Q133.0938,335.5 133.7188,334.9219 L133.7188,337.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="151.25" y="336.1543">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="270" y1="348" y2="348"/><ellipse cx="17" cy="359" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="26" y="362.2104">str_ : const char *</text><ellipse cx="17" cy="371.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="375.0151">len_ : const unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="270" y1="381.6094" y2="381.6094"/><ellipse cx="17" cy="392.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="395.8198">T(const char * str, unsigned int len) : void</text><!--MD5=[82dd93387422f59a3fbe0fb698fac81f]
class C_0001079750728717860293--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="73.6094" id="C_0001079750728717860293" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="306" y="322"/><ellipse cx="321" cy="338" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M323.9688,343.6406 Q323.3906,343.9375 322.75,344.0781 Q322.1094,344.2344 321.4063,344.2344 Q318.9063,344.2344 317.5781,342.5938 Q316.2656,340.9375 316.2656,337.8125 Q316.2656,334.6875 317.5781,333.0313 Q318.9063,331.375 321.4063,331.375 Q322.1094,331.375 322.75,331.5313 Q323.4063,331.6875 323.9688,331.9844 L323.9688,334.7031 Q323.3438,334.125 322.75,333.8594 Q322.1563,333.5781 321.5313,333.5781 Q320.1875,333.5781 319.5,334.6563 Q318.8125,335.7188 318.8125,337.8125 Q318.8125,339.9063 319.5,340.9844 Q320.1875,342.0469 321.5313,342.0469 Q322.1563,342.0469 322.75,341.7813 Q323.3438,341.5 323.9688,340.9219 L323.9688,343.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="335" y="342.1543">InetAddress::(anonymous_1188166)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="307" x2="564" y1="354" y2="354"/><ellipse cx="317" cy="365" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="326" y="368.2104">addr_ : struct sockaddr_in</text><ellipse cx="317" cy="377.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="326" y="381.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="307" x2="564" y1="387.6094" y2="387.6094"/><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="176.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="2502.5" y="5159"/><ellipse cx="2765.25" cy="5175" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2768.2188,5180.6406 Q2767.6406,5180.9375 2767,5181.0781 Q2766.3594,5181.2344 2765.6563,5181.2344 Q2763.1563,5181.2344 2761.8281,5179.5938 Q2760.5156,5177.9375 2760.5156,5174.8125 Q2760.5156,5171.6875 2761.8281,5170.0313 Q2763.1563,5168.375 2765.6563,5168.375 Q2766.3594,5168.375 2767,5168.5313 Q2767.6563,5168.6875 2768.2188,5168.9844 L2768.2188,5171.7031 Q2767.5938,5171.125 2767,5170.8594 Q2766.4063,5170.5781 2765.7813,5170.5781 Q2764.4375,5170.5781 2763.75,5171.6563 Q2763.0625,5172.7188 2763.0625,5174.8125 Q2763.0625,5176.9063 2763.75,5177.9844 Q2764.4375,5179.0469 2765.7813,5179.0469 Q2766.4063,5179.0469 2767,5178.7813 Q2767.5938,5178.5 2768.2188,5177.9219 L2768.2188,5180.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="2785.75" y="5179.1543">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2503.5" x2="3069.5" y1="5191" y2="5191"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2503.5" x2="3069.5" y1="5199" y2="5199"/><ellipse cx="2513.5" cy="5210" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="2522.5" y="5213.2104">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="2513.5" cy="5222.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="2522.5" y="5226.0151">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="2513.5" cy="5235.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="2522.5" y="5238.8198">~Timer() : void</text><ellipse cx="2513.5" cy="5248.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2522.5" y="5251.6245">run() const : void</text><ellipse cx="2513.5" cy="5261.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="2522.5" y="5264.4292">restart(const TimePoint &amp; now) : void</text><ellipse cx="2513.5" cy="5274.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2522.5" y="5277.2339">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="2513.5" cy="5286.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2522.5" y="5290.0386">operator&gt;(const Timer &amp; t) const : bool</text><ellipse cx="2513.5" cy="5299.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2522.5" y="5302.8433">when() const : const TimePoint &amp;</text><ellipse cx="2513.5" cy="5312.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2522.5" y="5315.6479">isRepeat() : bool</text><ellipse cx="2513.5" cy="5325.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="2522.5" y="5328.4526">id() : TimerId</text><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="2738.5" y="4858"/><ellipse cx="2870.75" cy="4874" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2873.7188,4879.6406 Q2873.1406,4879.9375 2872.5,4880.0781 Q2871.8594,4880.2344 2871.1563,4880.2344 Q2868.6563,4880.2344 2867.3281,4878.5938 Q2866.0156,4876.9375 2866.0156,4873.8125 Q2866.0156,4870.6875 2867.3281,4869.0313 Q2868.6563,4867.375 2871.1563,4867.375 Q2871.8594,4867.375 2872.5,4867.5313 Q2873.1563,4867.6875 2873.7188,4867.9844 L2873.7188,4870.7031 Q2873.0938,4870.125 2872.5,4869.8594 Q2871.9063,4869.5781 2871.2813,4869.5781 Q2869.9375,4869.5781 2869.25,4870.6563 Q2868.5625,4871.7188 2868.5625,4873.8125 Q2868.5625,4875.9063 2869.25,4876.9844 Q2869.9375,4878.0469 2871.2813,4878.0469 Q2871.9063,4878.0469 2872.5,4877.7813 Q2873.0938,4877.5 2873.7188,4876.9219 L2873.7188,4879.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="2891.25" y="4878.1543">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2739.5" x2="3123.5" y1="4890" y2="4890"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2739.5" x2="3123.5" y1="4898" y2="4898"/><ellipse cx="2749.5" cy="4909" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="2758.5" y="4912.2104">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="137.6328" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="6030.5" y="970.5"/><ellipse cx="6331.25" cy="986.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6334.2188,992.1406 Q6333.6406,992.4375 6333,992.5781 Q6332.3594,992.7344 6331.6563,992.7344 Q6329.1563,992.7344 6327.8281,991.0938 Q6326.5156,989.4375 6326.5156,986.3125 Q6326.5156,983.1875 6327.8281,981.5313 Q6329.1563,979.875 6331.6563,979.875 Q6332.3594,979.875 6333,980.0313 Q6333.6563,980.1875 6334.2188,980.4844 L6334.2188,983.2031 Q6333.5938,982.625 6333,982.3594 Q6332.4063,982.0781 6331.7813,982.0781 Q6330.4375,982.0781 6329.75,983.1563 Q6329.0625,984.2188 6329.0625,986.3125 Q6329.0625,988.4063 6329.75,989.4844 Q6330.4375,990.5469 6331.7813,990.5469 Q6332.4063,990.5469 6333,990.2813 Q6333.5938,990 6334.2188,989.4219 L6334.2188,992.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="6351.75" y="990.6543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6031.5" x2="6739.5" y1="1002.5" y2="1002.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6031.5" x2="6739.5" y1="1010.5" y2="1010.5"/><ellipse cx="6041.5" cy="1021.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="6050.5" y="1024.7104">output(const char * msg, const uint64_t len) : void</text><ellipse cx="6041.5" cy="1034.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="6050.5" y="1037.5151">flush() : void</text><ellipse cx="6041.5" cy="1047.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6050.5" y="1050.3198">startLogging() : void</text><ellipse cx="6041.5" cy="1059.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6050.5" y="1063.1245">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="6041.5" cy="1072.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="6050.5" y="1075.9292">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="6041.5" cy="1085.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6050.5" y="1088.7339">~AsyncFileLogger() : void</text><ellipse cx="6041.5" cy="1098.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6050.5" y="1101.5386">AsyncFileLogger() : void</text><!--MD5=[d6dc5f302a37b6f3cec78b5e6a6182c8]
class C_0001453238540802541239--><rect fill="#FEFECE" filter="url(#f1jmo8n5np4l73)" height="124.8281" id="C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="5759" y="296.5"/><ellipse cx="6002.25" cy="312.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6005.2188,318.1406 Q6004.6406,318.4375 6004,318.5781 Q6003.3594,318.7344 6002.6563,318.7344 Q6000.1563,318.7344 5998.8281,317.0938 Q5997.5156,315.4375 5997.5156,312.3125 Q5997.5156,309.1875 5998.8281,307.5313 Q6000.1563,305.875 6002.6563,305.875 Q6003.3594,305.875 6004,306.0313 Q6004.6563,306.1875 6005.2188,306.4844 L6005.2188,309.2031 Q6004.5938,308.625 6004,308.3594 Q6003.4063,308.0781 6002.7813,308.0781 Q6001.4375,308.0781 6000.75,309.1563 Q6000.0625,310.2188 6000.0625,312.3125 Q6000.0625,314.4063 6000.75,315.4844 Q6001.4375,316.5469 6002.7813,316.5469 Q6003.4063,316.5469 6004,316.2813 Q6004.5938,316 6005.2188,315.4219 L6005.2188,318.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="6022.75" y="316.6543">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5760" x2="6425" y1="328.5" y2="328.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5760" x2="6425" y1="336.5" y2="336.5"/><ellipse cx="5770" cy="347.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="5779" y="350.7104">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName) : void</text><ellipse cx="5770" cy="360.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5779" y="363.5151">~LoggerFile() : void</text><ellipse cx="5770" cy="373.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5779" y="376.3198">writeLog(const StringPtr buf) : void</text><ellipse cx="5770" cy="385.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5779" y="389.1245">getLength() : uint64_t</text><ellipse cx="5770" cy="398.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="5779" y="401.9292">operator bool() const : bool</text><ellipse cx="5770" cy="411.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5779" y="414.7339">flush() : void</text><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M6207.83,78.75 C5710.26,83.81 2964.39,115.53 2130.5,207 C1922.34,229.83 1687.09,277.18 1526.65,312.8 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.12,71.75,6228.19,78.55,6208.26,85.75,6208.12,71.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M6362.8,82.39 C6683.14,100.64 7890.03,169.77 7897.5,176 C7961.52,229.33 7942.5,274.68 7942.5,358 C7942.5,358 7942.5,358 7942.5,4387 C7942.5,4546.97 7985.23,4731.69 8010.09,4825.65 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.15,89.37,6342.58,81.24,6362.94,75.39,6362.15,89.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ffc230e37c5c4ce1f573c198139c7155]
link C_0000223701637084171141 to C_0000912667184903365399--><path d="M8098.63,4442.47 C8084.3,4532.17 8056,4709.22 8039.75,4810.88 " fill="none" id="C_0000223701637084171141-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="8038.6057" cy="4818.0208" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8039.8714" x2="8037.34" y1="4810.1215" y2="4825.92"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8046.5049" x2="8030.7065" y1="4819.2865" y2="4816.7551"/><!--MD5=[a9618021460bcc1d44c7377ab2184a4a]
link C_0000913287266699074255 to C_0000912667184903365399--><path d="M4515.82,4410.07 C4555.92,4456.08 4653.41,4558.57 4760.5,4602 C5347.37,4840.03 7381.4,4879.96 7904.22,4886.34 " fill="none" id="C_0000913287266699074255-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="7904.44,4879.34,7924.36,4886.58,7904.27,4893.34,7904.44,4879.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M3779.53,3940.06 C3953.75,3989.15 4190.55,4051.62 4402.5,4093 C4658.59,4143 4726.85,4128.82 4984.5,4170 C5191.78,4203.13 5419.16,4244.7 5616.36,4282.43 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5621.3,4283.38,5613.2179,4277.7515,5616.3901,4282.4352,5611.7063,4285.6074,5621.3,4283.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M3746.71,4093.41 C3763.72,4118.06 3779.08,4143.76 3791.5,4170 C3883.88,4365.07 3806.54,4443.17 3871.5,4649 C3874.07,4657.15 3876.88,4665.39 3879.86,4673.64 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3881.74,4678.78,3882.3876,4668.9525,3880.0141,4674.0873,3874.8793,4671.7139,3881.74,4678.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M3779.52,3900.43 C3933.36,3937.7 4111.92,4013.99 4177.5,4170 C4251.91,4347 4233.51,4418.35 4177.5,4602 C4170.03,4626.51 4159.67,4650.81 4147.6,4674.3 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4145.16,4678.99,4152.8735,4672.8661,4147.4758,4674.5586,4145.7833,4669.1609,4145.16,4678.99" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4230.5" y="4383.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="4240.5" y="4390.5669">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M3269.3,3961.59 C3178.77,4009.67 3086.71,4077.7 3035.5,4170 C2942.35,4337.89 2920.93,4447.93 3035.5,4602 C3081.87,4664.35 3534.99,4780.68 3798.33,4843.89 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3803.35,4845.1,3795.5387,4839.1014,3798.4894,4843.9277,3793.663,4846.8784,3803.35,4845.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3038.5" y="4383.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="3048.5" y="4390.5669">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M3286.88,4104.35 C3274.12,4125.47 3263.05,4147.44 3254.5,4170 C3220.47,4259.77 3200.36,4522.73 3254.5,4602 C3376.78,4781.03 3629.48,4847.8 3803.22,4872.7 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3293.92,4093.04,3287.3522,4096.0172,3287.5742,4103.2249,3294.1421,4100.2477,3293.92,4093.04" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3257.5" y="4383.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="3267.5" y="4390.5669">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M3953.01,4678.77 C3921.47,4483.18 3874.89,4214.4 3850.5,4170 C3832.2,4136.68 3808.94,4104.93 3783.3,4075.38 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3779.83,4071.41,3782.7639,4080.8117,3783.1296,4075.1667,3788.7746,4075.5324,3779.83,4071.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M4009.74,4678.73 C4017.41,4528.24 4006.91,4325.16 3921.5,4170 C3888.36,4109.8 3837.82,4057.69 3783.8,4014.42 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3779.57,4011.05,3784.1224,4019.7836,3783.4827,4014.163,3789.1033,4013.5233,3779.57,4011.05" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4015.5" y="4383.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4025.5" y="4390.5669">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M4051.35,4673.63 C4056.73,4649.66 4061.32,4625.43 4064.5,4602 C4077.42,4506.87 4112.89,4252.91 4064.5,4170 C4002.29,4063.41 3887.53,3991.13 3779.74,3943.79 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4050.18,4678.74,4056.0811,4670.8548,4051.2918,4673.8652,4048.2814,4669.0759,4050.18,4678.74" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4095.5" cy="4386.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4102.5" y="4390.5669">«friend»</text><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M3567.24,4106.29 C3568.02,4111.91 3568.78,4117.48 3569.5,4123 C3577.77,4186.16 3583.85,4258.28 3587.68,4310.85 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3565.36,4093.1,3562.2437,4099.603,3567.0478,4104.9807,3570.1641,4098.4777,3565.36,4093.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3574.5" y="4129.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="3584.5" y="4136.0669">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M3619.17,4310.74 C3634.54,4258.12 3648.47,4185.98 3635.5,4123 C3633.81,4114.79 3631.85,4106.53 3629.65,4098.24 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3628.26,4093.08,3626.7641,4102.8146,3629.5732,4097.9045,3634.4833,4100.7135,3628.26,4093.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M3544.7,4310.89 C3517.34,4263.97 3485.71,4200.86 3471.5,4140 C3468.32,4126.4 3466.53,4112.39 3465.84,4098.23 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3465.64,4093.01,3462.004,4102.1631,3465.8404,4098.006,3469.9975,4101.8424,3465.64,4093.01" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3474.5" y="4129.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="3484.5" y="4136.0669">ownerLoop_</text><!--MD5=[de23fe49c03c04d6a6596b8aabb0600a]
reverse link C_0001390130774830223499 to C_0000913287266699074255--><path d="M3791.9,3972.79 C3898.42,4013.53 4022.76,4058.36 4137.5,4093 C4193.44,4109.88 4210.31,4103.8 4265.5,4123 C4311.88,4139.14 4328.95,4137.2 4365.5,4170 C4427.95,4226.06 4470.41,4318.97 4487.74,4361.92 " fill="none" id="C_0001390130774830223499&lt;-C_0000913287266699074255" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3779.67,3968.1,3783.8374,3973.985,3790.8725,3972.4016,3786.7051,3966.5166,3779.67,3968.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4320.5" y="4129.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4330.5" y="4136.0669">funcs_</text><!--MD5=[de23fe49c03c04d6a6596b8aabb0600a]
reverse link C_0001390130774830223499 to C_0000913287266699074255--><path d="M3791.97,3979.93 C3897.85,4021.32 4021.73,4064.73 4137.5,4093 C4190.36,4105.9 4336.81,4090.58 4380.5,4123 C4460.59,4182.44 4486.38,4309.48 4493.8,4361.78 " fill="none" id="C_0001390130774830223499&lt;-C_0000913287266699074255-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3779.81,3975.16,3783.9364,3981.0738,3790.9824,3979.5393,3786.8559,3973.6255,3779.81,3975.16" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4401.5" y="4129.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4411.5" y="4136.0669">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M3256.41,3925.15 C3119,3965.24 2954.52,4028.34 2828.5,4123 C2759.37,4174.92 2703.67,4258.16 2669.98,4316.86 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3269.2,3921.46,3262.3273,3919.2767,3257.6687,3924.781,3264.5414,3926.9643,3269.2,3921.46" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2831.5" y="4129.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="2841.5" y="4136.0669">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M2715.21,4316.84 C2783.71,4260.84 2885.97,4181.5 2982.5,4123 C3071.46,4069.09 3173.45,4018 3264.78,3975.72 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3269.39,3973.59,3259.5424,3973.7474,3264.854,3975.6935,3262.9079,3981.005,3269.39,3973.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M2648.94,4316.75 C2664.79,4257.77 2695.88,4174.19 2752.5,4123 C2893.66,3995.38 3099.93,3930.63 3263.75,3897.93 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3269.07,3896.87,3259.464,3894.6966,3264.1655,3897.8423,3261.0197,3902.5438,3269.07,3896.87" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2758.5,4127.0664,2762.5,4131.0664,2758.5,4135.0664,2754.5,4131.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2765.5" y="4136.0669">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M3779.97,3825.45 C3801.26,3833.75 3814.5,3846.6 3814.5,3864 C3814.5,3880.04 3803.25,3892.22 3784.81,3900.52 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3779.97,3902.55,3789.8164,3902.77,3784.5833,3900.6219,3786.7314,3895.3887,3779.97,3902.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822.5" y="3861.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="3832.5" y="3868.5669">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M6208.16,78.59 C5748.75,82.28 3331.7,104.45 1360.5,176 C1060.27,186.9 709.5,57.57 709.5,358 C709.5,358 709.5,358 709.5,3407 C709.5,3612.97 924.86,3574.15 1128.5,3605 C1904.63,3722.56 2830.12,3806.38 3269.13,3842.78 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.19,71.59,6228.24,78.43,6208.3,85.59,6208.19,71.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M1127.21,3462.1 C1117.8,3506.41 1113.8,3567.3 1148.5,3605 C1289.85,3758.58 2676.95,3830.13 3264.1,3853.71 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3269.26,3853.92,3260.4271,3849.5635,3264.264,3853.7202,3260.1073,3857.5571,3269.26,3853.92" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1151.5" y="3594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="1161.5" y="3601.0669">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M1158.14,3475.1 C1171.4,3519.45 1195.65,3574.54 1238.5,3605 C1401.45,3720.82 2707.83,3813.29 3269.4,3848.09 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1154.53,3462.31,1152.3105,3469.171,1157.79,3473.8587,1160.0096,3466.9977,1154.53,3462.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1241.5" y="3594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="1251.5" y="3601.0669">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M6208.35,78.13 C5604.12,79.35 1641.48,91.77 1124.5,207 C961.53,243.33 780.5,191.03 780.5,358 C780.5,358 780.5,358 780.5,2904.5 C780.5,3097.71 959.96,3266.66 1066.52,3349.94 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.4,71.13,6228.41,78.09,6208.43,85.13,6208.4,71.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M1176.63,2245.28 C1169.41,2498.08 1150.64,3155.11 1145.08,3349.84 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1177.01,2232.1,1172.8403,2237.9833,1176.6673,2244.0951,1180.837,2238.2118,1177.01,2232.1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1173.5,2587.0664,1177.5,2591.0664,1173.5,2595.0664,1169.5,2591.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="1180.5" y="2596.0669">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M1334.17,435.15 C1332.9,594.02 1326.88,975.54 1298.5,1294 C1273.56,1573.82 1220.71,1902.55 1194.66,2055.95 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1327.17,435.08,1334.31,415.13,1341.17,435.18,1327.17,435.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M6208.18,84.77 C6072.12,98.45 5798.84,134.47 5741.5,207 C5657.71,312.99 5719.09,377.76 5741.5,511 C5906.7,1493.43 6683.45,2478.13 6953.61,2796.33 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6207.81,77.77,6228.39,82.8,6209.16,91.7,6207.81,77.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M7023.63,2431.66 C7026.56,2492.14 7034.63,2658.28 7040.35,2776.01 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="7047.36,2775.98,7041.34,2796.3,7033.38,2776.66,7047.36,2775.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[abe0688fc6d69744d19ae8d92b501edc]
reverse link C_0001159823987743494688 to C_0001822694677530159303--><path d="M6363.25,82.48 C6693.88,101.52 7966.21,174.88 7968.5,176 C8003.85,193.25 8034.73,222.18 8059.67,251.95 " fill="none" id="C_0001159823987743494688&lt;-C_0001822694677530159303" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.42,89.44,6342.86,81.3,6363.23,75.46,6362.42,89.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M7396.49,755.04 C7350.5,904.02 7275.5,1184.57 7275.5,1430 C7275.5,1430 7275.5,1430 7275.5,2408.5 C7275.5,2544.49 7203.18,2683.65 7139.82,2779.46 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="7145.5,2783.56,7128.53,2796.24,7133.89,2775.74,7145.5,2783.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M6362.88,80.48 C6615.73,89.37 7405.67,123.65 7480.5,207 C7561.12,296.79 7524.42,441.94 7483.99,540.77 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.6,87.47,6342.86,79.79,6363.09,73.48,6362.6,87.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M7508.8,1538.37 C7516.56,1755.42 7508,2257.69 7294.5,2600 C7282.55,2619.16 7269.61,2614.18 7253.5,2630 C7207.61,2675.07 7163.52,2730.76 7127.9,2780.02 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="7133.48,2784.25,7116.16,2796.45,7122.09,2776.11,7133.48,2784.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M6363.04,79.75 C6623.98,86.47 7457.9,115.04 7530.5,207 C7665.3,377.76 7566.41,1058.5 7521.53,1323.58 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.6,86.74,6342.78,79.24,6362.95,72.74,6362.6,86.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M6993.19,1981.82 C7003.28,2127.97 7016.41,2318.34 7020.91,2383.48 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6992.28,1968.72,6988.7049,1974.9825,6993.1106,1980.6912,6996.6857,1974.4287,6992.28,1968.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7013.5" y="2141.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="7023.5" y="2148.5669">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M6361.07,106.35 C6407.44,127.43 6464.45,160.61 6499.5,207 C6652.61,409.63 6483.31,574.03 6661.5,755 C6692.86,786.85 6728.59,750.9 6757.5,785 C6831.36,872.11 6803.99,1182.46 6828.5,1294 C6853.08,1405.84 6890.18,1528.93 6921.58,1625.24 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6358.15,112.72,6342.6,98.32,6363.73,99.88,6358.15,112.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M7097.27,459.81 C7103.57,486 7109.31,514.37 7112.5,541 C7143.12,796.57 7116.7,1290.59 7068.5,1538 C7062.91,1566.68 7054.9,1596.54 7045.96,1625.34 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7094.13,447.15,7091.6847,453.9339,7097.0063,458.8002,7099.4515,452.0163,7094.13,447.15" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7132.5,1035.0664,7136.5,1039.0664,7132.5,1043.0664,7128.5,1039.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="7139.5" y="1044.0669">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M7113.89,459.56 C7150.2,544.21 7198.81,669.98 7222.5,785 C7412.83,1709.14 7374.5,1958.97 7374.5,2902.5 C7374.5,2902.5 7374.5,2902.5 7374.5,3865 C7374.5,4033.03 6983.28,4176.13 6639.62,4269.42 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7108.63,447.38,7107.3323,454.4734,7113.3809,458.3995,7114.6786,451.3061,7108.63,447.38" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7382.5,2587.0664,7386.5,2591.0664,7382.5,2595.0664,7378.5,2591.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="7389.5" y="2596.0669">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M7053.09,452.55 C7028.29,601.42 6980.52,888.29 6962.56,996.13 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7053.96,447.31,7048.5464,455.5376,7053.145,452.2431,7056.4394,456.8417,7053.96,447.31" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7044.5" cy="648.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="7051.5" y="652.5669">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M6362.22,95.47 C6435.96,113.05 6550.11,142.32 6646.5,176 C6725.12,203.47 6809.78,238.79 6882.48,271 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6360.39,102.23,6342.54,90.83,6363.61,88.61,6360.39,102.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2546ce8b172ab3415fe98599ef34be58]
link C_0002131283840621188296 to C_0002053752992472264214--><path d="M7485.3,117.38 C7419.97,155.09 7318.85,213.47 7232.57,263.28 " fill="none" id="C_0002131283840621188296-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7226.3376" cy="266.8789" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7233.2652" x2="7219.41" y1="262.8778" y2="270.88"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7230.3387" x2="7222.3365" y1="273.8065" y2="259.9513"/><!--MD5=[93922583ef61aedd7e4cac59826dbbbd]
link C_0000979080797342806546 to C_0002053752992472264214--><path d="M7683.39,126.51 C7668.77,133.27 7653.81,139.96 7639.5,146 C7540.16,187.97 7429.35,230.14 7331.97,265.7 " fill="none" id="C_0000979080797342806546-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7325.2148" cy="268.1463" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7332.7296" x2="7317.7" y1="265.4025" y2="270.89"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7327.9585" x2="7322.471" y1="275.661" y2="260.6315"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M6957.33,1095.74 C6960.97,1205.67 6969.24,1455.79 6974.85,1625.35 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6956.9,1082.74,6953.0999,1088.8685,6957.2954,1094.7335,6961.0955,1088.6049,6956.9,1082.74" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6975.5" y="1428.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="6985.5" y="1435.5669">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M6362.46,83.73 C6428.3,92.78 6520.84,116.09 6575.5,176 C6678.68,289.08 6597.74,369.24 6655.5,511 C6709.05,642.44 6749.49,661.55 6819.5,785 C6861.26,858.64 6907.34,945.89 6933.71,996.45 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6361.54,90.67,6342.53,81.31,6363.23,76.77,6361.54,90.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M3650.7,4461.12 C3695.1,4517.66 3758.6,4598.53 3818.39,4674.67 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3821.59,4678.76,3819.155,4669.2169,3818.4927,4674.8349,3812.8748,4674.1726,3821.59,4678.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M6362.72,81.54 C6630.78,94.1 7511.39,137.86 7632.5,176 C7719.93,203.53 7729.5,266.34 7729.5,358 C7729.5,358 7729.5,358 7729.5,1432 C7729.5,2221.14 7899.38,2564.74 7401.5,3177 C6769.33,3954.4 6318.67,3871.37 5341.5,4093 C5106.49,4146.3 4497.68,4103.33 4257.5,4123 C4103.71,4135.6 4057.76,4115.21 3913.5,4170 C3827.12,4202.81 3740.76,4262.56 3679.41,4310.76 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.33,88.53,6342.68,80.6,6362.98,74.54,6362.33,88.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6fae28fa9ff5d7f68f4068664152934]
link C_0000607400095182694101 to C_0002026475275429760163--><path d="M2617.78,4455.24 C2589.24,4583.49 2539.64,4868.27 2598.5,5098 C2604.01,5119.51 2615.42,5138.49 2630.02,5155.06 " fill="none" id="C_0000607400095182694101-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2633.38,5158.78,2630.3126,5149.421,2630.0273,5155.0706,2624.3776,5154.7853,2633.38,5158.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M2630.52,4468.22 C2623.7,4629.76 2614.43,4985.52 2658.5,5098 C2666.99,5119.67 2680.1,5140.33 2694.75,5158.99 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2631.09,4455.06,2626.8301,4460.8784,2630.5625,4467.0484,2634.8224,4461.23,2631.09,4455.06" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2664.5,4884.0664,2668.5,4888.0664,2664.5,4892.0664,2660.5,4888.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="2671.5" y="4893.0669">timers_</text><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M2668.93,4455.22 C2704.19,4517.21 2765.15,4605.43 2845.5,4649 C2903.62,4680.52 3076.36,4667.71 3141.5,4679 C3369.94,4718.59 3628.12,4785.74 3798.09,4833.12 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3803.09,4834.52,3795.4956,4828.249,3798.2738,4833.1766,3793.3462,4835.9548,3803.09,4834.52" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2851.5,4636.0664,2855.5,4640.0664,2851.5,4644.0664,2847.5,4640.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="2858.5" y="4645.0669">timerfdChannelPtr_</text><!--MD5=[94ff915feb725d4dab9cf4cca4f2b7b9]
reverse link C_0000607400095182694101 to C_0000157340721173102239--><path d="M2658.54,4467.56 C2676.22,4520.97 2702.96,4591.53 2736.5,4649 C2784.62,4731.45 2860.44,4814.88 2901.94,4857.83 " fill="none" id="C_0000607400095182694101&lt;-C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2654.47,4455.06,2652.534,4462.0064,2658.2014,4466.4651,2660.1374,4459.5188,2654.47,4455.06" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2742.5,4636.0664,2746.5,4640.0664,2742.5,4644.0664,2738.5,4640.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="2749.5" y="4645.0669">timers_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M6362.79,79.32 C6631.74,84.74 7514.47,109.85 7590.5,207 C7682.39,324.4 7613.18,392.15 7621.5,541 C7640.93,888.52 7633.17,975.95 7636.5,1324 C7637.41,1419.11 7645.43,1443.31 7636.5,1538 C7591.41,2016.34 7691.15,2193.83 7434.5,2600 C7422.44,2619.09 7407.03,2611.92 7393.5,2630 C7238.69,2836.89 7383.93,2999.13 7196.5,3177 C6719.29,3629.86 6426.68,3486.86 5779.5,3605 C5682.65,3622.68 5418.56,3579.13 5337.5,3635 C5152.96,3762.18 5313.61,3969.63 5126.5,4093 C5074.49,4127.29 4067.76,4120.74 4005.5,4123 C3840.99,4128.98 3799.95,4132.63 3635.5,4140 C3559.28,4143.42 3021.89,4145.91 2949.5,4170 C2857.78,4200.53 2768.22,4266.17 2708.19,4316.94 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.54,86.31,6342.68,78.93,6362.82,72.32,6362.54,86.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M6362.85,80.31 C6614.66,88.35 7409.07,117.79 7658.5,176 C7694.03,184.29 7708.39,181.53 7734.5,207 C7786.93,258.14 7800.5,284.76 7800.5,358 C7800.5,358 7800.5,358 7800.5,4387 C7800.5,4758.05 4926.72,4862.04 4167.58,4883.03 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.35,87.3,6342.58,79.68,6362.79,73.31,6362.35,87.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M1304.25,434.1 C1250.14,566.64 1137.55,842.41 1085.28,970.45 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1297.91,431.11,1311.95,415.24,1310.87,436.4,1297.91,431.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[71937ae761f89ce4d5c0645a62fc4977]
reverse link C_0001897340460211641725 to C_0000673025168912921705--><path d="M4865.41,4016.47 C4867.63,4131.57 4870.5,4281.26 4871.81,4348.95 " fill="none" id="C_0001897340460211641725&lt;-C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4865.16,4003.33,4861.2728,4009.4037,4865.3841,4015.3279,4869.2714,4009.2542,4865.16,4003.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M3835.06,1291.56 C3838.21,1292.39 3841.36,1293.2 3844.5,1294 C3911.15,1310.95 4100.86,1278.58 4152.5,1324 C4225.77,1388.44 4127.09,1474.88 4201.5,1538 C4284.52,1608.43 4615.91,1488.69 4690.5,1568 C4829.96,1716.28 4754.25,1832.69 4690.5,2026 C4599.24,2302.72 4522.32,2364.06 4300.5,2553 C4278.41,2571.82 4267.87,2568.91 4242.5,2583 C4206.78,2602.84 4193.24,2601.99 4163.5,2630 C4155.63,2637.41 4147.91,2645.22 4140.37,2653.31 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4136.68,2657.31,4145.7218,2653.4055,4140.0696,2653.6343,4139.8408,2647.9821,4136.68,2657.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fb33c8d241a2fef006600e262be5e63]
link C_0002230624932100089526 to C_0000626107303889580949--><path d="M3835.05,1291.62 C3838.2,1292.43 3841.35,1293.22 3844.5,1294 C3997.77,1331.95 4045.45,1285.18 4198.5,1324 C4460.87,1390.54 4562.11,1379.65 4756.5,1568 C4928.97,1735.11 4903.75,1831.3 4988.5,2056 C5077.22,2291.22 4949.17,2440.5 5143.5,2600 C5206.92,2652.06 5448.05,2577.98 5511.5,2630 C5585.79,2690.9 5592.14,2817.36 5590.96,2874 " fill="none" id="C_0002230624932100089526-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5590.83,2879.25,5595.0607,2870.3561,5590.9589,2874.2517,5587.0633,2870.1499,5590.83,2879.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M2147.98,398.01 C1918.63,424.21 1710.22,468.02 1623.5,541 C1447.1,689.46 1476.5,807.94 1476.5,1038.5 C1476.5,1038.5 1476.5,1038.5 1476.5,2408.5 C1476.5,2750.45 1312.34,2900.48 1513.5,3177 C1593.58,3287.08 2531.79,3563.69 2661.5,3605 C2863.19,3669.23 3092.86,3737.66 3264.54,3787.9 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3269.35,3789.31,3261.83,3782.95,3264.55,3787.91,3259.59,3790.63,3269.35,3789.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M2147.79,438.85 C1814.19,473.66 1504.57,512.96 1478.5,541 C1376.97,650.22 1352.07,3081.96 1397.5,3224 C1453.03,3397.61 1480.67,3461.81 1635.5,3558 C1903.14,3724.26 2811.33,3811.59 3263.84,3845.68 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3269.14,3846.08,3260.462,3841.4224,3264.1538,3845.7085,3259.8677,3849.4003,3269.14,3846.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1380.5" y="2405.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="1390.5" y="2412.0669">loop_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M3861.27,494.2 C3903.92,500.07 3946.18,505.71 3987.5,511 C4360.53,558.78 5405.32,506.01 5657.5,785 C5691.08,822.15 5788.19,2533.03 5791.5,2583 C5805.85,2799.36 5972.62,3394.22 5830.5,3558 C5750.91,3649.72 5404.92,3597.27 5289.5,3635 C5222.22,3656.99 5152.99,3689.19 5090.37,3722.51 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5085.88,3724.91,5095.7032,3724.1992,5090.2906,3722.5548,5091.9349,3717.1422,5085.88,3724.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M2992.08,511.1 C2991.03,586.56 2997.7,677.96 3026.5,755 C3029.68,763.49 3033.2,771.94 3037.03,780.31 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3039.18,784.95,3038.9971,775.1028,3037.0648,780.4194,3031.7482,778.4872,3039.18,784.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M3022.28,511.01 C3034.79,612.57 3050.81,731.96 3059.5,755 C3062.66,763.38 3066.1,771.76 3069.79,780.12 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3071.86,784.76,3071.8657,774.9111,3069.832,780.1898,3064.5533,778.156,3071.86,784.76" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3062.5" y="645.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="3072.5" y="652.5669">connectionCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M3189.87,511.22 C3196.47,520.8 3202.41,530.74 3207.5,541 C3228.7,583.75 3238.88,681.82 3243.59,779.69 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3243.84,784.94,3247.4236,775.7663,3243.611,779.9452,3239.432,776.1326,3243.84,784.94" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3245.5" y="645.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="3255.5" y="652.5669">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M3358.26,511.04 C3366.39,520.44 3373.85,530.42 3380.5,541 C3425.53,612.66 3418.97,699.3 3392.81,780.07 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3391.22,784.89,3397.8213,777.5809,3392.7754,780.1381,3390.2182,775.0922,3391.22,784.89" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3416.5" y="645.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="3426.5" y="652.5669">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M2899.1,523.65 C2897.01,529.41 2895.14,535.21 2893.5,541 C2867.67,632.54 2852.38,669.24 2893.5,755 C2898.38,765.19 2903.83,775.13 2909.77,784.81 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2903.97,511.08,2898.0706,515.2269,2899.6296,522.2675,2905.529,518.1206,2903.97,511.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2896.5" y="645.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="2906.5" y="652.5669">connection_</text><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M2147.92,446.3 C1960.66,473.49 1808.46,505.73 1777.5,541 C1342.06,1037.03 1663.13,1373.18 1760.5,2026 C1776.68,2134.46 1803.71,2156.19 1832.5,2262 C1873.06,2411.06 1793.06,2503.26 1913.5,2600 C1986.54,2658.66 3510.59,2600.48 3599.5,2630 C3677.58,2655.93 3753.34,2704.14 3816.33,2752.9 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3820.46,2756.11,3815.8181,2747.4236,3816.5155,2753.0373,3810.9019,2753.7348,3820.46,2756.11" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M2147.99,446.31 C2053.27,470.49 1977.32,501.43 1939.5,541 C1710.67,780.44 1763.29,1698.47 1812.5,2026 C1812.78,2027.89 1972.99,2551.82 1974.5,2553 C2117.09,2664.09 3428.67,2570.93 3599.5,2630 C3677.26,2656.89 3752.94,2705.3 3815.98,2753.95 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3820.11,2757.15,3815.4333,2748.4823,3816.1533,2754.0932,3810.5424,2754.8131,3820.11,2757.15" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815.5" y="1794.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="1825.5" y="1801.5669">messageCallback_</text><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M2147.86,472.45 C2096.83,491.81 2057.02,514.48 2034.5,541 C1791.27,827.44 2003.2,1857.53 2034.5,2232 C2038.33,2277.78 2046.26,2329.88 2052.17,2365.13 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2053.03,2370.21,2055.4825,2360.6714,2052.2011,2365.2792,2047.5933,2361.9977,2053.03,2370.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M2790.96,511.06 C2571.07,680.53 2240.44,977.52 2093.5,1324 C2011.86,1516.52 2046.42,2191.71 2056.89,2365.47 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2057.19,2370.47,2060.6438,2361.2466,2056.8905,2365.479,2052.6582,2361.7257,2057.19,2370.47" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2096.5" y="1428.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="2106.5" y="1435.5669">sslErrorCallback_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M3874.67,493.33 C4037.43,518.79 4158.94,538.43 4163.5,541 C4271.77,602.02 4231.87,700.37 4343.5,755 C4420.8,792.83 5051.9,729.29 5117.5,785 C5252.88,899.95 5254.19,1391.94 5277.5,1568 C5287.2,1641.28 5277.93,2170.21 5318.5,2232 C5334.65,2256.59 5354.91,2243.15 5377.5,2262 C5535.3,2393.67 5591.84,2435.26 5657.5,2630 C5735.18,2860.37 5702.02,2938 5657.5,3177 C5648.53,3225.18 5629.74,3276.29 5611.81,3317.89 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3861.35,491.24,3866.6577,496.1214,3873.2051,493.0994,3867.8973,488.218,3861.35,491.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5321.5" y="2141.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="5331.5" y="2148.5669">connector_</text><!--MD5=[9d36523b26b5126cf640c54811b76fac]
link C_0001156367011091191681 to C_0000626107303889580949--><path d="M3861.08,484.42 C3910.76,500.98 3959.27,519.74 4005.5,541 C4142.42,603.95 4127.6,701.55 4268.5,755 C4342.53,783.08 4920.99,732.77 4980.5,785 C5401.29,1154.28 5070.03,1480.62 5196.5,2026 C5218.04,2118.89 5219.92,2143.93 5256.5,2232 C5318.99,2382.46 5335.18,2423.1 5433.5,2553 C5462.9,2591.84 5486.65,2588.1 5511.5,2630 C5559.43,2710.82 5579.25,2822.67 5586.23,2874.31 " fill="none" id="C_0001156367011091191681-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5586.91,2879.41,5589.6926,2869.9624,5586.2529,2874.4534,5581.762,2871.0137,5586.91,2879.41" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5199.5" y="1794.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="5209.5" y="1801.5669">sslCtxPtr_</text><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M6208.43,79.23 C5917.13,84.52 4855.73,109.75 3987.5,207 C3946.1,211.64 3903.78,216.74 3861.07,222.18 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.33,72.23,6228.45,78.87,6208.58,86.23,6208.33,72.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c243407103ec46e8c5ed77bbb7514164]
link C_0001278908569830571044 to C_0001156367011091191681--><path d="M760.07,88.98 C988.64,116.37 1603.87,190.12 2132.51,253.48 " fill="none" id="C_0001278908569830571044-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2139.7869" cy="254.3471" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2131.8439" x2="2147.73" y1="253.3943" y2="255.3"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2140.7398" x2="2138.8341" y1="246.4041" y2="262.2902"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M5406.72,3494.13 C5353.82,3518.79 5293.92,3542.98 5236.5,3558 C5086.31,3597.29 5043.1,3573.86 4888.5,3588 C4672.39,3607.76 4616.18,3597.17 4402.5,3635 C4192.02,3672.27 3957.92,3734.11 3784.41,3783.99 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3779.56,3785.39,3789.3115,3786.7713,3784.3687,3784.0202,3787.1198,3779.0773,3779.56,3785.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M5405.27,3494.04 C5352.67,3518.46 5293.31,3542.54 5236.5,3558 C4877.32,3655.75 4769.67,3573.74 4402.5,3635 C4191.85,3670.15 3958.01,3732.03 3784.65,3782.47 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3779.8,3783.88,3789.56,3785.2,3784.6,3782.48,3787.32,3777.52,3779.8,3783.88" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5102.5" y="3594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5112.5" y="3601.0669">loop_</text><!--MD5=[33283569ac1ba65b658e3f0b917458cb]
link C_0001706043459252151324 to C_0001897340460211641725--><path d="M5532.28,3494.18 C5511.01,3533.88 5480.51,3577.93 5440.5,3605 C5383.83,3643.34 5353.93,3611.97 5289.5,3635 C5224.62,3658.19 5157.5,3689.91 5096.23,3722.32 " fill="none" id="C_0001706043459252151324-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5091.45,3724.86,5101.2749,3724.1739,5095.8665,3722.516,5097.5245,3717.1075,5091.45,3724.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M5445.03,3501.82 C5399.59,3535.39 5347.36,3572.8 5298.5,3605 C5236.9,3645.59 5168.86,3687.28 5105.22,3724.99 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5455.52,3494.05,5448.3176,3494.4041,5445.8743,3501.1886,5453.0767,3500.8346,5455.52,3494.05" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5324.5" y="3594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="5334.5" y="3601.0669">serverAddr_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M5552.4,3494.28 C5504.55,3714.89 5348.21,4298.77 4984.5,4602 C4750.64,4796.97 4390.86,4858.96 4172.88,4878.56 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4167.76,4879.01,4177.0794,4882.1957,4172.7403,4878.5664,4176.3696,4874.2272,4167.76,4879.01" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5339.5" y="4129.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="5349.5" y="4136.0669">channelPtr_</text><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M6208.21,82.23 C6061.02,92.17 5749.87,122.89 5691.5,207 C5544.87,418.29 5706.41,528.14 5719.5,785 C5753.71,1456.35 5816.63,2790.7 5707.5,3177 C5693.32,3227.2 5664.86,3277.41 5637.45,3317.88 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6207.86,75.24,6228.27,80.94,6208.77,89.21,6207.86,75.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[255bb85fd16b3df7cc9a8a0088a159be]
link C_0000000982196670174162 to C_0001706043459252151324--><path d="M5373.5,2946.54 C5391.79,3000.5 5425.5,3096.72 5459.5,3177 C5477.4,3219.26 5499,3264.99 5518.31,3304.32 " fill="none" id="C_0000000982196670174162-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5521.4859" cy="3310.7779" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5517.9417" x2="5525.03" y1="3303.6058" y2="3317.95"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5528.658" x2="5514.3138" y1="3307.2338" y2="3314.322"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M3131.57,2959.83 C3186.99,3087.21 3326.26,3407.34 3423.15,3630.04 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3425.29,3634.96,3425.3585,3625.1114,3423.2912,3630.3769,3418.0256,3628.3095,3425.29,3634.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M3104.17,2959.77 C3099.51,3077.11 3101.2,3356.85 3205.5,3558 C3221.8,3589.44 3242.62,3619.48 3265.79,3647.58 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3269.23,3651.72,3266.562,3642.2394,3266.0375,3647.8719,3260.405,3647.3474,3269.23,3651.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3208.5" y="3403.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3218.5" y="3410.5669">loop_</text><!--MD5=[64866fe38d904675f00d2ad62d2d950e]
link C_0002013739811805694444 to C_0000964465843177067305--><path d="M1692.93,2444.79 C1720.46,2489.84 1774.02,2564.98 1842.5,2600 C1960.62,2660.41 2009.15,2605.26 2139.5,2630 C2420.49,2683.32 2738.24,2779.99 2930.65,2842.69 " fill="none" id="C_0002013739811805694444-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2937.5354" cy="2844.9359" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2929.9309" x2="2945.14" y1="2842.4519" y2="2847.42"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2940.0195" x2="2935.0514" y1="2837.3314" y2="2852.5405"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M3857.34,2026.03 C3854.18,2036.09 3851.21,2046.12 3848.5,2056 C3783.84,2292.01 3922.43,2413.92 3763.5,2600 C3735.29,2633.02 3698.09,2596.46 3670.5,2630 C3654.76,2649.14 3586.24,3277.55 3548.93,3629.65 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3548.38,3634.81,3553.2849,3626.2694,3548.8945,3629.8365,3545.3273,3625.4462,3548.38,3634.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M3833.41,2026.28 C3829.52,2036.23 3825.86,2046.17 3822.5,2056 C3802.6,2114.3 3759.53,2556.91 3715.5,2600 C3660.04,2654.28 3593.89,2570.99 3543.5,2630 C3480.41,2703.88 3497.24,3292.9 3512.37,3629.39 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3512.61,3634.82,3516.1948,3625.6467,3512.3817,3629.8252,3508.2032,3626.0121,3512.61,3634.82" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3549.5,2899.0664,3553.5,2903.0664,3549.5,2907.0664,3545.5,2903.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3556.5" y="2908.0669">loop_</text><!--MD5=[cb9f027c3142c905f1a5f676e638bcfe]
link C_0000920759514274339356 to C_0001897340460211641725--><path d="M4517.65,2026.08 C4525.41,2035.65 4532.72,2045.62 4539.5,2056 C4605.61,2157.21 4616.96,2507.19 4539.5,2600 C4491.74,2657.22 4422.26,2572.78 4374.5,2630 C4218.73,2816.65 4336.13,2936.94 4374.5,3177 C4402.63,3352.98 4406.98,3405.68 4499.5,3558 C4514.67,3582.98 4521.82,3587.86 4545.5,3605 C4569.97,3622.72 4581.43,3618.13 4606.5,3635 C4644.37,3660.49 4682.54,3691.17 4717.41,3721.65 " fill="none" id="C_0000920759514274339356-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4721.21,3724.98,4717.0684,3716.0443,4717.4462,3721.6885,4711.802,3722.0663,4721.21,3724.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M4637.4,2035.66 C4643.96,2042.25 4650.33,2049.03 4656.5,2056 C4675.28,2077.22 4751.82,2532.61 4771.5,2553 C4807.29,2590.08 4834.51,2567.02 4883.5,2583 C4903.43,2589.5 4907.29,2594.41 4927.5,2600 C5003.14,2620.91 5046.37,2574.15 5101.5,2630 C5274.43,2805.19 5102.34,2946.4 5188.5,3177 C5202.61,3214.78 5225.41,3215.23 5236.5,3254 C5273.67,3383.9 5294.46,3435.95 5236.5,3558 C5205.5,3623.28 5152.94,3679.19 5096.86,3724.64 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4627.66,2026.12,4629.151,2033.1753,4636.237,2034.5126,4634.746,2027.4573,4627.66,2026.12" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5194.5,2899.0664,5198.5,2903.0664,5194.5,2907.0664,5190.5,2903.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="5201.5" y="2908.0669">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M4216.17,2036.31 C4221.44,2042.83 4226.56,2049.4 4231.5,2056 C4387.95,2265.13 4432.17,2328.65 4491.5,2583 C4493.22,2590.36 4496.55,2594.38 4491.5,2600 C4449.2,2647.02 4253.1,2585.16 4208.5,2630 C4122.35,2716.62 4195.06,3062.12 4153.5,3177 C4139.45,3215.83 4113.58,3214.51 4101.5,3254 C4061.96,3383.2 4013.46,3455.51 4101.5,3558 C4249.45,3730.22 4401.03,3538.41 4606.5,3635 C4653.36,3657.03 4697.93,3690.42 4736.37,3724.9 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4207.76,2026.09,4208.4919,2033.2639,4215.3954,2035.3475,4214.6635,2028.1736,4207.76,2026.09" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4214.5,2899.0664,4218.5,2903.0664,4214.5,2907.0664,4210.5,2903.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="4221.5" y="2908.0669">peerAddr_</text><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M4673.79,2001.35 C4698.96,2018.15 4722.99,2036.32 4745.5,2056 C4930.03,2217.32 4826.58,2365.55 4984.5,2553 C5007.7,2580.54 5016.57,2587.93 5050.5,2600 C5147.22,2634.42 5431.58,2565.57 5511.5,2630 C5586.28,2690.29 5592.37,2817.07 5591.05,2873.89 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5590.9,2879.17,5595.1554,2870.2879,5591.0428,2874.172,5587.1587,2870.0594,5590.9,2879.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4144.25,2026.25 C4191.69,2097.16 4234.82,2178.7 4255.5,2262 C4286.66,2387.52 4321.09,2441.53 4255.5,2553 C4241.58,2576.66 4222.52,2565.33 4201.5,2583 C4179.84,2601.21 4159.3,2621.99 4140.1,2644.03 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4136.79,2647.87,4145.7011,2643.6757,4140.0592,2644.0868,4139.6481,2638.445,4136.79,2647.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M3957.4,2039.41 C3961.66,2213.61 3967.41,2449.02 3971.84,2629.97 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3957.08,2026.18,3953.2263,2032.275,3957.3703,2038.1765,3961.224,2032.0815,3957.08,2026.18" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3976.5,2403.0664,3980.5,2407.0664,3976.5,2411.0664,3972.5,2407.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="3983.5" y="2412.0669">readBuffer_</text><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4019.71,2026.05 C4038.84,2100.55 4057,2184.15 4066.5,2262 C4082.17,2390.38 4082.41,2424.65 4066.5,2553 C4063.59,2576.48 4059.62,2600.65 4054.97,2624.79 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4053.96,2629.94,4059.6068,2621.8707,4054.9159,2625.0322,4051.7544,2620.3413,4053.96,2629.94" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4084.5,2403.0664,4088.5,2407.0664,4084.5,2411.0664,4080.5,2407.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="4091.5" y="2412.0669">recvMsgCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M3288.69,1567.96 C3280.52,1558.38 3272.78,1548.4 3265.5,1538 C3217.7,1469.72 3205.79,1382.21 3208.55,1299.69 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3208.75,1294.26,3204.4187,1303.1053,3208.5644,1299.2566,3212.4132,1303.4023,3208.75,1294.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M3304.65,1567.66 C3296.16,1558.17 3288.1,1548.29 3280.5,1538 C3265.28,1517.39 3256.87,1409.47 3252.22,1299.39 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3252,1294.15,3248.389,1303.313,3252.2141,1299.1454,3256.3817,1302.9705,3252,1294.15" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3286.5,1426.5664,3290.5,1430.5664,3286.5,1434.5664,3282.5,1430.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="3293.5" y="1435.5669">recvMsgCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M3471.68,1567.79 C3463.13,1558.24 3455.05,1548.31 3447.5,1538 C3390.51,1460.19 3444.29,1414.7 3411.5,1324 C3408.48,1315.64 3405.21,1307.25 3401.74,1298.85 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3399.79,1294.19,3399.5809,1304.0366,3401.7232,1298.8011,3406.9587,1300.9435,3399.79,1294.19" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3453.5,1426.5664,3457.5,1430.5664,3453.5,1434.5664,3449.5,1430.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="3460.5" y="1435.5669">connectionCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M3650.93,1567.76 C3643.96,1558.09 3637.45,1548.16 3631.5,1538 C3582.79,1454.76 3644.06,1407.33 3595.5,1324 C3590.53,1315.46 3585.19,1307.08 3579.54,1298.85 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3576.37,1294.3,3578.2339,1303.9709,3579.2287,1298.4022,3584.7974,1299.397,3576.37,1294.3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3637.5,1426.5664,3641.5,1430.5664,3637.5,1434.5664,3633.5,1430.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="3644.5" y="1435.5669">closeCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M3791.49,1567.66 C3786.8,1557.8 3782.44,1547.9 3778.5,1538 C3742.84,1448.39 3797.68,1403.1 3742.5,1324 C3736.34,1315.17 3729.82,1306.59 3722.96,1298.23 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3719.57,1294.15,3722.238,1303.6306,3722.7625,1297.9981,3728.395,1298.5226,3719.57,1294.15" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3784.5,1426.5664,3788.5,1430.5664,3784.5,1434.5664,3780.5,1430.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="3791.5" y="1435.5669">writeCompleteCallback_</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M3973.48,1567.9 C3978.44,1467.84 3975.72,1364.08 3948.5,1324 C3918.99,1280.55 3881.58,1243.76 3839.47,1212.6 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-5" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3835.38,1209.61,3840.2682,1218.1601,3839.4107,1212.5687,3845.0021,1211.7111,3835.38,1209.61" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3981.5,1426.5664,3985.5,1430.5664,3981.5,1434.5664,3977.5,1430.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="3988.5" y="1435.5669">highWaterMarkCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M3174.78,1314.56 C3172.35,1392.62 3185.56,1473.8 3230.5,1538 C3237.78,1548.4 3245.52,1558.38 3253.69,1567.96 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3167.8,1313.9,3175.76,1294.26,3181.78,1314.57,3167.8,1313.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M3723.25,2026.24 C3717.22,2036.01 3711.6,2045.95 3706.5,2056 C3604.97,2256.21 3746.16,2369.75 3616.5,2553 C3576.6,2609.39 3539.5,2592.49 3481.5,2630 C3374.68,2699.08 3256.91,2786.96 3182.61,2843.95 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3178.23,2847.32,3187.8069,2845.0214,3182.199,2844.279,3182.9413,2838.6711,3178.23,2847.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M3691.12,2026.35 C3680.38,2036.31 3669.8,2046.22 3659.5,2056 C3566.51,2144.29 3516.28,2148.04 3457.5,2262 C3397.27,2378.76 3461.63,2434.21 3405.5,2553 C3350.03,2670.4 3244.55,2779.85 3175.13,2843.97 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3171.44,2847.37,3180.7679,2844.2092,3175.1157,2843.9804,3175.3445,2838.3282,3171.44,2847.37" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3460.5" y="2405.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="3470.5" y="2412.0669">timingWheelWeakPtr_</text><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M3229.46,2022.92 C3223.45,2023.98 3217.47,2025.01 3211.5,2026 C3156.67,2035.1 2257.5,2024.81 2211.5,2056 C2106.15,2127.42 2073.33,2288.71 2063.5,2365.01 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2062.83,2370.35,2067.9304,2361.9247,2063.459,2365.3897,2059.9939,2360.9183,2062.83,2370.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M3229.34,2022.28 C3223.37,2023.55 3217.43,2024.79 3211.5,2026 C3086.28,2051.6 3051.22,2032.99 2925.5,2056 C2571.96,2120.71 2429.43,2044.23 2143.5,2262 C2109.07,2288.23 2086.24,2332.95 2073.19,2365.71 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2071.33,2370.45,2078.3241,2363.5159,2073.145,2365.7911,2070.8698,2360.6119,2071.33,2370.45" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2931.5,2139.5664,2935.5,2143.5664,2931.5,2147.5664,2927.5,2143.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="2938.5" y="2148.5669">sslErrorCallback_</text><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M4677.33,2035.22 C4684.25,2041.95 4690.98,2048.88 4697.5,2056 C4751.95,2115.47 4706.46,2159.38 4741.5,2232 C4748.8,2247.13 4756.65,2247.15 4764.5,2262 C4828.16,2382.4 4763.76,2457.14 4860.5,2553 C4884.86,2577.14 4973.81,2593.57 5007.5,2600 C5055.85,2609.23 5413.64,2596.28 5449.5,2630 C5628.08,2797.95 5357.34,2994.03 5520.5,3177 C5614.98,3282.96 5729.33,3154.41 5830.5,3254 C5959.44,3380.92 6054.19,3878.78 6099.9,4169.93 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4667.78,2026.15,4669.3806,2033.1812,4676.4866,2034.4081,4674.886,2027.3768,4667.78,2026.15" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5789.5" y="3213.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="5799.5" y="3220.0669">lastTimingWheelUpdateTime_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M3942.27,2039.46 C3930.69,2190.48 3904.85,2387.14 3847.5,2553 C3834.55,2590.46 3814.5,2592.22 3802.5,2630 C3718.22,2895.3 3760.51,2975.89 3748.5,3254 C3742.67,3388.99 3670.24,3447.86 3748.5,3558 C3808.75,3642.79 3881.76,3579.14 3969.5,3635 C4209.17,3787.6 4174.81,3942.03 4415.5,4093 C4496.89,4144.05 4564.31,4089.99 4617.5,4170 C4670.65,4249.94 4669.57,4521.35 4617.5,4602 C4518.98,4754.61 4317.07,4826.5 4167.85,4859.81 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3943.25,2026.37,3938.8189,2032.059,3942.366,2038.3374,3946.7971,2032.6484,3943.25,2026.37" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3754.5,3401.5664,3758.5,3405.5664,3754.5,3409.5664,3750.5,3405.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="3761.5" y="3410.5669">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M4592.77,2035.75 C4598.88,2042.32 4604.8,2049.07 4610.5,2056 C4681.81,2142.68 4632.45,2463.74 4700.5,2553 C4729.79,2591.42 4752.12,2586.49 4798.5,2600 C4852.01,2615.59 5010.12,2588.66 5047.5,2630 C5127.32,2718.28 5104,3054.53 5081.96,3253.96 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4583.69,2026.26,4584.9556,2033.3592,4591.9954,2034.9214,4590.7298,2027.8222,4583.69,2026.26" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4804.5,2587.0664,4808.5,2591.0664,4804.5,2595.0664,4800.5,2591.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="4811.5" y="2596.0669">socketPtr_</text><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M4145.7,1563.05 C4189.75,1481.95 4208.98,1393.86 4152.5,1324 C4112.49,1274.51 4059.55,1336.85 4012.5,1294 C3837.17,1134.34 3979.59,985.21 3852.5,785 C3766.7,649.83 3726.23,620.91 3587.5,541 C3569.25,530.49 3550.32,520.51 3530.92,511.06 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4143.04,1567.89,4150.8844,1561.9347,4145.4512,1563.5098,4143.8761,1558.0767,4143.04,1567.89" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4018.5" cy="1040.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4025.5" y="1044.0669">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M3420.2,2028.49 C3401.67,2037.62 3383.38,2046.8 3365.5,2056 C3243.37,2118.81 3111.56,2196.01 3003.48,2261.96 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3424.92,2026.17,3415.0791,2026.5669,3420.4365,2028.3832,3418.6203,2033.7405,3424.92,2026.17" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3371.5" cy="2144.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="3378.5" y="2148.5669">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M6208.03,79.42 C5872.44,85.91 4558.38,115.15 4496.5,176 C4388.26,282.45 4470.37,1410.79 4387.5,1538 C4380.78,1548.32 4373.49,1558.28 4365.71,1567.89 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.12,72.41,6228.25,79.03,6208.38,86.41,6208.12,72.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c532aab217e61acf8b6b084ec7b46eb]
link C_0002266895444343633259 to C_0000920759514274339356--><path d="M4222.4,402.04 C4299.07,562.72 4548.89,1148.52 4322.5,1538 C4319.17,1543.72 4315.66,1549.35 4311.98,1554.88 " fill="none" id="C_0002266895444343633259-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4307.679" cy="1561.0401" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4312.258" x2="4303.1" y1="1554.4801" y2="1567.6"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4314.2389" x2="4301.1191" y1="1565.6191" y2="1556.4611"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M4213.53,402.11 C4233.65,482.45 4263.52,658.19 4172.5,755 C4138.55,791.11 3999.64,773.22 3951.5,785 C3914.92,793.95 3877.61,804.12 3840.18,815.12 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3835.14,816.61,3844.9036,817.9032,3839.9361,815.1969,3842.6425,810.2294,3835.14,816.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M4142.12,402.19 C4036.29,477.38 3807.38,640.01 3607.48,782.03 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3603.36,784.96,3613.0112,782.9966,3607.4325,782.0592,3608.3699,776.4806,3603.36,784.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3948.5" y="645.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="3958.5" y="652.5669">conn_</text><!--MD5=[a2e7476096c2077970c9b111225cac20]
link C_0001029063960859366412 to C_0000920759514274339356--><path d="M4741.98,1114.91 C4699.56,1220.87 4609.09,1415.89 4477.5,1538 C4470.05,1544.91 4462.38,1551.68 4454.51,1558.3 " fill="none" id="C_0001029063960859366412-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4449.035" cy="1562.8138" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4455.21" x2="4442.86" y1="1557.7276" y2="1567.9"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4454.1212" x2="4443.9488" y1="1568.9888" y2="1556.6388"/><!--MD5=[803a46c0407296c3d5232650b81b89e3]
link C_0001029063960859366412 to C_0001289495020269537351--><path d="M4798.61,1114.87 C4892.92,1369.59 5159.45,2212.53 4721.5,2600 C4675,2641.14 4217.57,2599.47 4163.5,2630 C4155.62,2634.45 4148.01,2639.39 4140.67,2644.74 " fill="none" id="C_0001029063960859366412-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4136.61,2647.75,4146.215,2645.572,4140.6169,2644.7592,4141.4297,2639.161,4136.61,2647.75" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4967.5" cy="2144.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="4974.5" y="2148.5669">msgBuffer_</text><!--MD5=[78f71baf9803b06041c9b46669fccd94]
link C_0001727349338344491225 to C_0000920759514274339356--><path d="M4235.69,1089.28 C4277.92,1181.82 4353.95,1387.07 4280.5,1538 C4277.69,1543.78 4274.67,1549.47 4271.48,1555.07 " fill="none" id="C_0001727349338344491225-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4267.8361" cy="1561.1222" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4271.9722" x2="4263.7" y1="1554.2744" y2="1567.97"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4274.6839" x2="4260.9883" y1="1565.2583" y2="1556.9861"/><!--MD5=[66c9d52764b2ca2960c6a7ade7c1c906]
link C_0000469308227546933692 to C_0000920759514274339356--><path d="M5342.49,1114.55 C5176.25,1216.47 4863.48,1402.71 4584.5,1538 C4568.26,1545.88 4551.71,1553.73 4534.95,1561.53 " fill="none" id="C_0000469308227546933692-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4528.399" cy="1564.5574" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4535.658" x2="4521.14" y1="1561.1948" y2="1567.92"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4531.7616" x2="4525.0364" y1="1571.8164" y2="1557.2984"/><!--MD5=[f59507c003f4b193c86e46acc800e70c]
reverse link C_0000469308227546933692 to C_0001515554933771522998--><path d="M5458.56,1127.96 C5455.69,1227.33 5452.33,1394.37 5456.5,1538 C5458.53,1607.96 5463.66,1688.46 5467.35,1740.68 " fill="none" id="C_0000469308227546933692&lt;-C_0001515554933771522998" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5458.95,1114.69,5454.7736,1120.5686,5458.5937,1126.6847,5462.7701,1120.8061,5458.95,1114.69" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5462.5" cy="1431.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="5469.5" y="1435.5669">statusOfSSL_</text><!--MD5=[e116eaa37ae44dbd892ab46d0358055b]
link C_0000469308227546933692 to C_0000626107303889580949--><path d="M5451.32,1114.56 C5437.88,1216.45 5414.94,1405.7 5406.5,1568 C5395.93,1771.28 5385.59,1823.52 5406.5,2026 C5441.52,2365.05 5550.8,2766.32 5581.44,2874.49 " fill="none" id="C_0000469308227546933692-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5582.84,2879.41,5584.248,2869.6623,5581.4834,2874.5976,5576.5481,2871.8329,5582.84,2879.41" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5441.5" cy="2144.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="5448.5" y="2148.5669">sslCtxPtr_</text><!--MD5=[2c5d13d5021e43291988d4de577aaba9]
reverse link C_0000469308227546933692 to C_0001248784923817560723--><path d="M5498.14,1126.73 C5520.01,1182.08 5546.22,1256.05 5560.5,1324 C5596.08,1493.33 5598.16,1703.32 5597.78,1772.62 " fill="none" id="C_0000469308227546933692&lt;-C_0001248784923817560723" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5493.26,1114.51,5491.7744,1121.5664,5497.7167,1125.6517,5499.2023,1118.5953,5493.26,1114.51" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5595.5" cy="1431.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5602.5" y="1435.5669">sslPtr_</text><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M5006.86,3558.1 C5000.53,3574.02 4994.01,3589.89 4987.5,3605 C4971.23,3642.78 4952.44,3683.05 4934.45,3720.27 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4932.26,3724.8,4939.7902,3718.452,4934.4445,3720.3025,4932.5941,3714.9568,4932.26,3724.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M6208.18,84.77 C6072.12,98.45 5798.84,134.47 5741.5,207 C5661.81,307.8 5751.38,656.65 5757.5,785 C5782.85,1316.42 6013.33,2781.49 5657.5,3177 C5551.26,3295.09 5455.78,3194.52 5308.5,3254 C5278.65,3266.06 5248.28,3281.57 5219.54,3298.05 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6207.81,77.77,6228.39,82.8,6209.16,91.7,6207.81,77.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M2691.19,2553.09 C2687.42,2563.02 2684.13,2573.04 2681.5,2583 C2565.41,3022.14 2403.3,3245.94 2681.5,3605 C2753.7,3698.18 3044.22,3772.64 3264.2,3817.16 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3269.38,3818.21,3261.3456,3812.5136,3264.4782,3817.2239,3259.7679,3820.3565,3269.38,3818.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M2733.98,2553 C2697.06,2712.16 2659.75,2972.62 2742.5,3177 C2840.51,3419.08 3077.33,3606.56 3264.85,3723.89 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3269.27,3726.65,3263.7457,3718.4964,3265.026,3724.0064,3259.5159,3725.2868,3269.27,3726.65" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2763.5" y="3213.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2773.5" y="3220.0669">loop_</text><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M3245.67,2553.11 C3305.63,2569.8 3366.34,2585.88 3424.5,2600 C3493.11,2616.66 3525.94,2585.19 3580.5,2630 C3783.25,2796.53 3675.07,2947.66 3802.5,3177 C3823.05,3213.99 3835.74,3218.33 3858.5,3254 C3954.49,3404.44 3902.38,3510.07 4053.5,3605 C4150.76,3666.1 4461.99,3594.57 4569.5,3635 C4621.91,3654.71 4672.5,3687.3 4716.46,3721.76 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4720.42,3724.88,4715.8326,3716.1648,4716.4949,3721.7827,4710.8769,3722.445,4720.42,3724.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M2497.11,2553.05 C2325.62,2642.41 2112.4,2753.52 1973.04,2826.14 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1968.52,2828.49,1978.3507,2827.8917,1972.9573,2826.1855,1974.6635,2820.7921,1968.52,2828.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M2374.83,2553.04 C2353.55,2562.73 2332.65,2572.73 2312.5,2583 C2173.33,2653.93 2024.88,2755.81 1929.19,2825.33 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1924.96,2828.41,1934.5952,2826.3696,1929.0092,2825.4768,1929.9021,2819.8909,1924.96,2828.41" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2315.5" y="2589.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="2325.5" y="2596.0669">loopPoolPtr_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M2453.23,2261.94 C2444.59,2252.55 2436.62,2242.58 2429.5,2232 C2373.17,2148.3 2368.19,1404.12 2429.5,1324 C2487.32,1248.45 2566.57,1192.93 2653.1,1152.15 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2657.75,1149.98,2647.9028,1150.1629,2653.2194,1152.0952,2651.2872,1157.4118,2657.75,1149.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M2589.04,2251.69 C2583.61,2245.22 2578.41,2238.65 2573.5,2232 C2396.59,1992.35 2429.62,1861.14 2482.5,1568 C2503.05,1454.1 2493.38,1407.53 2573.5,1324 C2599.06,1297.35 2627.52,1273.1 2657.88,1251.03 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2597.76,2261.78,2596.8607,2254.6252,2589.9104,2252.7035,2590.8097,2259.8583,2597.76,2261.78" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2485.5" y="1794.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="2495.5" y="1801.5669">connSet_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M2703.53,2261.63 C2673.34,2192.14 2641.63,2106.64 2626.5,2026 C2588.96,1825.94 2564.19,1761.78 2626.5,1568 C2660.41,1462.54 2731.67,1372.22 2814.24,1297.64 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2818.18,1294.1,2808.8145,1297.1475,2814.4635,1297.4448,2814.1662,1303.0939,2818.18,1294.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2629.5" y="1794.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="2639.5" y="1801.5669">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M2782.14,2261.98 C2794.59,2039.21 2820.29,1630.93 2844.5,1568 C2881.36,1472.19 2941.3,1379.14 3003.78,1298.54 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3007.13,1294.22,2998.4541,1298.8815,3004.0662,1298.1714,3004.7764,1303.7835,3007.13,1294.22" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2847.5" y="1794.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="2857.5" y="1801.5669">connectionCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M2219.38,2261.88 C2204.79,2252.33 2193.24,2242.36 2185.5,2232 C2008.8,1995.36 2114.03,1846.79 2211.5,1568 C2255.46,1442.27 2278.25,1402.98 2385.5,1324 C2465.49,1265.1 2558.38,1218.01 2652.95,1180.49 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2657.74,1178.59,2647.8996,1178.1821,2653.0908,1180.4297,2650.8432,1185.6209,2657.74,1178.59" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2214.5" y="1794.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="2224.5" y="1801.5669">writeCompleteCallback_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M3292.69,2553.01 C3366.43,2570.58 3441.62,2586.91 3513.5,2600 C3575.07,2611.21 3739.84,2597.8 3793.5,2630 C3801.36,2634.72 3808.96,2639.91 3816.3,2645.51 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3820.36,2648.66,3815.6985,2639.9841,3816.4086,2645.5962,3810.7965,2646.3064,3820.36,2648.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M3388,2547.3 C3396.89,2549.22 3405.73,2551.12 3414.5,2553 C3582.56,2589.04 3650.43,2534.74 3793.5,2630 C3801.33,2635.21 3808.92,2640.88 3816.26,2646.93 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3820.32,2650.32,3815.9829,2641.4775,3816.4847,2647.1121,3810.8502,2647.6139,3820.32,2650.32" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3740.5" y="2589.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="3750.5" y="2596.0669">recvMessageCallback_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M3401.35,2551.09 C3405.75,2551.74 3410.13,2552.38 3414.5,2553 C3803.17,2608.43 3925.59,2495.66 4294.5,2630 C4432.24,2680.16 4570.39,2783.36 4648.02,2847.37 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3388.12,2549.09,3393.4603,2553.9358,3399.9872,2550.8701,3394.647,2546.0243,3388.12,2549.09" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4194.5" y="2589.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="4204.5" y="2596.0669">acceptorPtr_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M2879.21,2563.84 C2944.49,2660.68 3024.54,2779.43 3070.42,2847.49 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2871.94,2553.05,2871.9773,2560.261,2878.648,2563,2878.6107,2555.789,2871.94,2553.05" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2904.5" y="2589.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="2914.5" y="2596.0669">timingWheelMap_</text><!--MD5=[439a59fd46d4733c0760632f943ec316]
link C_0001423170502760786790 to C_0000626107303889580949--><path d="M3388.08,2549.43 C3396.93,2550.68 3405.74,2551.87 3414.5,2553 C3802.63,2602.98 3903.46,2567.75 4294.5,2583 C4466.54,2589.71 4509.48,2592.86 4681.5,2600 C4724.16,2601.77 5413.5,2607.04 5449.5,2630 C5537.65,2686.21 5572.97,2816.76 5584.62,2874.35 " fill="none" id="C_0001423170502760786790-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5585.61,2879.36,5587.7888,2869.7552,5584.6404,2874.4549,5579.9406,2871.3065,5585.61,2879.36" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4684.5" y="2589.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="4694.5" y="2596.0669">sslCtxPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M6208.18,80.7 C5955.28,90.03 5163.02,123.19 5061.5,176 C4749.82,338.14 4676.54,454.45 4557.5,785 C4480.85,997.84 4506.82,1073.53 4557.5,1294 C4587.83,1425.93 4660.17,1436.07 4690.5,1568 C4736.1,1766.38 4820.87,1869.68 4690.5,2026 C4503.43,2250.31 3683.51,2202.76 3397.5,2262 C3394.37,2262.65 3391.24,2263.3 3388.1,2263.95 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6207.96,73.71,6228.21,79.97,6208.47,87.7,6207.96,73.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M4640.52,2959.55 C4571.2,3016.01 4465.98,3109.19 4394.5,3207 C4292.12,3347.11 4348.75,3437.89 4223.5,3558 C4101.9,3674.61 3928.5,3750.65 3784.83,3797.64 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3779.73,3799.3,3789.5259,3800.3197,3784.4847,3797.7533,3787.0512,3792.7121,3779.73,3799.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M4628.96,2959.62 C4545.21,3015.26 4411.6,3103.27 4294.5,3177 C4238.64,3212.17 4219.6,3213.47 4167.5,3254 C4015.44,3372.29 3998.32,3425.47 3858.5,3558 C3833.38,3581.81 3807,3606.47 3780.55,3630.97 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3776.65,3634.59,3785.9712,3631.4096,3780.3185,3631.1927,3780.5355,3625.54,3776.65,3634.59" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4173.5,3401.5664,4177.5,3405.5664,4173.5,3409.5664,4169.5,3405.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4180.5" y="3410.5669">loop_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M4729.98,2959.79 C4752.05,3028.1 4788.36,3148.27 4807.5,3254 C4836.08,3411.9 4850.09,3595.65 4856.76,3719.68 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4857.04,3724.8,4860.5463,3715.5964,4856.769,3719.8074,4852.558,3716.0301,4857.04,3724.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M4665.13,2970.9 C4587.08,3091.47 4446.32,3352.88 4535.5,3558 C4563.2,3621.72 4611.5,3678.16 4662.61,3724.63 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4672.48,2959.68,4665.8475,2962.5102,4665.9091,2969.7211,4672.5416,2966.8908,4672.48,2959.68" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4541.5,3401.5664,4545.5,3405.5664,4541.5,3409.5664,4537.5,3405.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="4548.5" y="3410.5669">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M4688.43,2959.51 C4643.83,3074.05 4556.27,3345.19 4628.5,3558 C4648.43,3616.7 4684.7,3672.96 4722.83,3720.82 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4726.05,3724.84,4723.5385,3715.3168,4722.9213,3720.9398,4717.2982,3720.3227,4726.05,3724.84" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4634.5,3401.5664,4638.5,3405.5664,4634.5,3409.5664,4630.5,3405.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="4641.5" y="3410.5669">newConnectionCallback_</text><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M4757.9,2970.66 C4808.22,3042.41 4890.23,3159.35 4956.48,3253.82 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4750.4,2959.97,4750.5671,2967.1792,4757.286,2969.7977,4757.1189,2962.5885,4750.4,2959.97" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4935.5,3211.0664,4939.5,3215.0664,4935.5,3219.0664,4931.5,3215.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="4942.5" y="3220.0669">sock_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M4657.83,2969.92 C4606.57,3036.72 4532.39,3145.72 4499.5,3254 C4450.23,3416.18 4486.28,3465.54 4482.5,3635 C4477.96,3838.5 4350.93,3937.68 4482.5,4093 C4534.92,4154.88 4600.18,4071.1 4662.5,4123 C4699.11,4153.49 4802.54,4476.61 4679.5,4649 C4564.04,4810.77 4331.59,4863.95 4167.6,4880.81 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4665.85,2959.56,4659.0114,2961.8476,4658.4928,2969.04,4665.3314,2966.7524,4665.85,2959.56" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4488.5,3859.5664,4492.5,3863.5664,4488.5,3867.5664,4484.5,3863.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="4495.5" y="3868.5669">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M6208.19,78.83 C6039.13,82.1 5643.31,98.09 5538.5,176 C5300.3,353.06 5347.31,499.99 5264.5,785 C5173.86,1096.96 5148.35,1920.39 5056.5,2232 C4984.51,2476.23 4822.76,2736.39 4749.2,2847.29 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.24,71.83,6228.36,78.48,6208.48,85.83,6208.24,71.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M1714.61,2986.49 C1574.66,3089.04 1338.87,3261.84 1218.74,3349.87 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1725.35,2978.62,1718.146,2978.9409,1715.6715,2985.7141,1722.8754,2985.3932,1725.35,2978.62" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1407.5" y="3213.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="1417.5" y="3220.0669">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M6208.24,77.85 C6003.21,79.02 5451.93,92.95 5318.5,207 C4933.92,535.73 5131.14,811.02 4980.5,1294 C4879,1619.42 4929.52,1735.29 4751.5,2026 C4576.7,2311.45 4513.01,2403.57 4213.5,2553 C4088.8,2615.21 4042.31,2587.73 3903.5,2600 C3646.42,2622.72 2997.39,2589.52 2742.5,2630 C2487.49,2670.5 2204.01,2762.46 2020.92,2828.35 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6208.36,70.85,6228.39,77.77,6208.42,84.85,6208.36,70.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70ff9873eb8ad20d6f04092c12d73f6d]
link C_0001489562721151066050 to C_0001423170502760786790--><path d="M3084.9,1827.55 C3061.9,1871.05 3017.54,1954.87 2979.5,2026 C2940.44,2099.05 2896.95,2179.85 2860.11,2248.13 " fill="none" id="C_0001489562721151066050-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2856.6314" cy="2254.5809" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2860.4329" x2="2852.83" y1="2247.5418" y2="2261.62"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2863.6705" x2="2849.5923" y1="2258.3823" y2="2250.7795"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M6362.95,81.25 C6617.82,92.28 7428.78,130.19 7686.5,176 C7735.25,184.67 7755.25,175.56 7793.5,207 C7851.85,254.96 7871.5,282.46 7871.5,358 C7871.5,358 7871.5,358 7871.5,4889.5 C7871.5,5132.04 4141.66,5220.63 3070.79,5241.06 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6362.48,88.24,6342.8,80.38,6363.08,74.25,6362.48,88.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M2919.39,4919.28 C2898.64,4970.29 2855.5,5076.36 2823.98,5153.85 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2821.92,5158.91,2829.0127,5152.0767,2823.8015,5154.2775,2821.6007,5149.0663,2821.92,5158.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M6349.8,111.7 C6384.47,133.72 6424.04,166 6443.5,207 C6566.56,466.35 6464.08,823.05 6411.7,970.5 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6345.77,117.45,6332.24,101.14,6352.99,105.46,6345.77,117.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f292eacf5c00648cb4d50d7f5f818066]
link C_0001453238540802541239 to C_0000630185754256426097--><path d="M6119.15,421.71 C6172.08,544.29 6290.48,818.46 6349.96,956.21 " fill="none" id="C_0001453238540802541239-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6352.8738" cy="962.9675" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6349.6977" x2="6356.05" y1="955.625" y2="970.31"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6360.2163" x2="6345.5314" y1="959.7914" y2="966.1437"/><!--MD5=[96ea509b2ad1947f9d7bb54a63b044ef]
reverse link C_0001453238540802541239 to C_0002032009232244826154--><path d="M6071.49,434.28 C6038.31,558.35 5977.5,816.08 5977.5,1038.5 C5977.5,1038.5 5977.5,1038.5 5977.5,2408.5 C5977.5,3173.15 6074.13,3359.76 6120.5,4123 C6121.42,4138.22 6122.28,4153.94 6123.06,4169.78 " fill="none" id="C_0001453238540802541239&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6074.91,421.62,6069.486,426.3718,6071.7861,433.2062,6077.2101,428.4544,6074.91,421.62" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5986.5,2587.0664,5990.5,2591.0664,5986.5,2595.0664,5982.5,2591.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="5993.5" y="2596.0669">creationDate_</text><!--MD5=[ab1296281abef24fab0757a8cbe429c3]
reverse link C_0001159823987743494688 to C_0001453238540802541239--><path d="M6258.01,117.88 C6225.93,164.43 6172.5,241.94 6135.05,296.27 " fill="none" id="C_0001159823987743494688&lt;-C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6252.26,113.89,6269.38,101.39,6263.79,121.83,6252.26,113.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a28ad321f66778d0cb95198f69ad603d]
link C_0002131890502232898697 to C_0000810201796859309531--><!--MD5=[be05b10a18d8aebecad8b04466eb8ac9]
link C_0002131890502232898697 to C_0000394452884449343416--><!--MD5=[27e7ce628aa241b9cf409c6c0b2ff817]
link C_0000394452884449343416 to C_0001079750728717860293--><!--MD5=[1dccfcf9e142f99dfcae01d76130d7ff]
@startuml
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
+peek() const : const char *
+beginWrite() const : const char *
+beginWrite() : char *
+peekInt8() const : uint8_t
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+read(size_t len) : std::string
+readInt8() : uint8_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+swap(MsgBuffer & buf) : void
+readableBytes() const : size_t
+writableBytes() const : size_t
+append(const MsgBuffer & buf) : void
+append(const char * buf, size_t len) : void
+append(const std::string & buf) : void
+appendInt8(const uint8_t b) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+addInFront(const char * buf, size_t len) : void
+addInFrontInt8(const uint8_t b) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+retrieveAll() : void
+retrieve(size_t len) : void
+readFd(int fd, int * retErrno) : ssize_t
+retrieveUntil(const char * end) : void
+findCRLF() const : const char *
+ensureWritableBytes(size_t len) : void
+hasWritten(size_t len) : void
+unwrite(size_t offset) : void
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
+append(const char (&)[N] buf) : void
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+getName() const : std::string
+syncTaskInQueue(const std::function<void ()> & task) : void
+~TaskQueue() : void
}
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
{static} +date() : const Date
{static} +now() : const Date
{static} +timezoneOffset() : int64_t
+after(double second) const : const Date
+roundSecond() const : const Date
+roundDay() const : const Date
+~Date() : void
+operator==(const Date & date) const : bool
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
+secondsSinceEpoch() const : int64_t
+tmStruct() const : struct tm
+toFormattedString(bool showMicroseconds) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbStringLocal() const : std::string
+toDbString() const : std::string
{static} +fromDbStringLocal(const std::string & datetime) : Date
{static} +fromDbString(const std::string & datetime) : Date
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+isSameSecond(const Date & date) const : bool
+swap(Date & that) : void
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue<T>() : void
+~MpscQueue<T>() : void
+enqueue(T && input) : void
+enqueue(const T & input) : void
+dequeue(T & output) : bool
+empty() : bool
}
class "MpscQueue::BufferNode" as C_0000223701637084171141
class C_0000223701637084171141 {
+BufferNode() = default : void
+BufferNode(const T & data) : void
+BufferNode(T && data) : void
+dataPtr_ : T *
+next_ : std::atomic<BufferNode *>
}
class "MpscQueue<std::function<>>" as C_0000913287266699074255
class C_0000913287266699074255 {
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
+loop() : void
+quit() : void
+assertInLoopThread() : void
+resetTimerQueue() : void
+resetAfterFork() : void
+isInLoopThread() const : bool
{static} +getEventLoopOfCurrentThread() : EventLoop *
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+runAt(const Date & time, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+invalidateTimer(TimerId id) : void
+moveToCurrentThread() : void
+updateChannel(Channel * chl) : void
+removeChannel(Channel * chl) : void
+index() : size_t
+setIndex(size_t index) : void
+isRunning() : bool
+isCallingFunctions() : bool
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+runInLoop(Functor && f) : void
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
+wait() : void
+getLoop() const : EventLoop *
+run() : void
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+waitAllTasksFinished() : void
+SerialTaskQueue() : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
+isRuningTask() : bool
+getTaskCount() : size_t
+stop() : void
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer<SIZE>() : void
+~FixedBuffer<SIZE>() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
}
class "detail::FixedBuffer" as C_0001822694677530159303
class C_0001822694677530159303 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(bool v) : LogStream::self &
+operator<<(short ) : LogStream::self &
+operator<<(unsigned short ) : LogStream::self &
+operator<<(int ) : LogStream::self &
+operator<<(unsigned int ) : LogStream::self &
+operator<<(long ) : LogStream::self &
+operator<<(unsigned long ) : LogStream::self &
+operator<<(const long long & ) : LogStream::self &
+operator<<(const unsigned long long & ) : LogStream::self &
+operator<<(const void * ) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(const double & ) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
+operator<<(const char (&)[N] buf) : LogStream::self &
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+data() const : const char *
+length() const : int
+Fmt(const char * fmt, T val) : void
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+~Logger() : void
+setIndex(int index) : Logger &
+stream() : LogStream &
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +logLevel() : Logger::LogLevel
}
enum "Logger::LogLevel" as C_0002131283840621188296
enum C_0002131283840621188296 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0000979080797342806546
class C_0000979080797342806546 {
+SourceFile(const char * filename) : void
+SourceFile(const char (&)[N] arr) : void
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
+setIndex(int index) : RawLogger &
+stream() : LogStream &
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
+assertInLoopThread() : void
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +updateChannel(Channel * channel) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{static} +newPoller(EventLoop * loop) : Poller *
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setCloseCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+fd() const : int
+events() const : int
+revents() const : int
+isNoneEvent() const : bool
+disableAll() : void
+remove() : void
+ownerLoop() : EventLoop *
+enableReading() : void
+disableReading() : void
+enableWriting() : void
+disableWriting() : void
+isWriting() const : bool
+isReading() const : bool
+updateEvents(int events) : void
+tie(const std::shared_ptr<void> & obj) : void
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+getTaskCount() : size_t
+stop() : void
+~ConcurrentTaskQueue() : void
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
+family() const : sa_family_t
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
+isIpV6() const : bool
+isIntranetIp() const : bool
+isLoopbackIp() const : bool
+getSockAddr() const : const struct sockaddr *
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+ipNetEndian() const : uint32_t
+ip6NetEndian() const : const uint32_t *
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+isUnspecified() const : bool
}
class "InetAddress::()" as C_0000673025168912921705
class C_0000673025168912921705 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
{abstract} +shutdown() = 0 : void
{abstract} +forceClose() = 0 : void
{abstract} +getLoop() = 0 : EventLoop *
+setContext(const std::shared_ptr<void> & context) : void
+setContext(std::shared_ptr<void> && context) : void
+hasContext() const : bool
+clearContext() : void
{abstract} +keepAlive() = 0 : void
{abstract} +isKeepAlive() = 0 : bool
{abstract} +bytesSent() const = 0 : size_t
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +startClientEncryption(std::function<void ()> callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) = 0 : void
{abstract} +startServerEncryption(const std::shared_ptr<SSLContext> & ctx, std::function<void ()> callback) = 0 : void
+getContext() : std::shared_ptr<T>
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
+connect() : void
+disconnect() : void
+stop() : void
+connection() const : TcpConnectionPtr
+getLoop() const : EventLoop *
+retry() const : bool
+enableRetry() : void
+name() const : const std::string &
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = = {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
}
class "TcpClient::IgnoreSigPipe" as C_0001278908569830571044
class C_0001278908569830571044 {
+IgnoreSigPipe() : void
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+serverAddress() const : const InetAddress &
+start() : void
+restart() : void
+stop() : void
}
enum "Connector::Status" as C_0000000982196670174162
enum C_0000000982196670174162 {
Disconnected
Connecting
Connected
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
+getLoop() : EventLoop *
+~TimingWheel() : void
}
class "TimingWheel::CallbackEntry" as C_0002013739811805694444
class C_0002013739811805694444 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
}
enum "SSLStatus" as C_0001515554933771522998
enum C_0001515554933771522998 {
Handshaking
Connecting
Connected
DisConnecting
DisConnected
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr) : void
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, const std::shared_ptr<SSLContext> & ctxPtr, bool isServer = true, bool validateCert = true, const std::string & hostname = "") : void
+~TcpConnectionImpl() : void
+send(const char * msg, size_t len) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+connected() const : bool
+disconnected() const : bool
+getRecvBuffer() : MsgBuffer *
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+keepAlive() : void
+isKeepAlive() : bool
+setTcpNoDelay(bool on) : void
+shutdown() : void
+forceClose() : void
+getLoop() : EventLoop *
+bytesSent() const : size_t
+bytesReceived() const : size_t
+startClientEncryption(std::function<void ()> callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
+startServerEncryption(const std::shared_ptr<SSLContext> & ctx, std::function<void ()> callback) : void
+isSSLConnection() const : bool
}
class "TcpConnectionImpl::KickoffEntry" as C_0002266895444343633259
class C_0002266895444343633259 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
}
class "TcpConnectionImpl::BufferNode" as C_0001029063960859366412
class C_0001029063960859366412 {
+isFile() const : bool
+~BufferNode() : void
+sendFd_ : int
+offset_ : off_t
+fileBytesToSend_ : ssize_t
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
+nDataWritten_ : std::size_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
}
enum "TcpConnectionImpl::ConnStatus" as C_0001727349338344491225
enum C_0001727349338344491225 {
Disconnected
Connecting
Connected
Disconnecting
}
class "TcpConnectionImpl::SSLEncryption" as C_0000469308227546933692
class C_0000469308227546933692 {
+statusOfSSL_ : SSLStatus
+sslCtxPtr_ : std::shared_ptr<SSLContext>
+sslPtr_ : std::unique_ptr<SSLConn>
+sendBufferPtr_ : std::unique_ptr<std::array<char,8192>>
+isServer_ : bool
+isUpgrade_ : bool
+upgradeCallback_ : std::function<void ()>
+hostname_ : std::string
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
{static} +createNonblockingSocketOrDie(int family) : int
{static} +getSocketError(int sockfd) : int
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +isSelfConnect(int sockfd) : bool
+Socket(int sockfd) : void
+~Socket() : void
+bindAddress(const InetAddress & localaddr) : void
+listen() : void
+accept(InetAddress * peeraddr) : int
+closeWrite() : void
+read(char * buffer, uint64_t len) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
+setTcpNoDelay(bool on) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setKeepAlive(bool on) : void
+getSocketError() : int
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
}
class "SSLConn" as C_0001248784923817560723
class C_0001248784923817560723 {
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, const std::string & name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
+start() : void
+stop() : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+name() const : const std::string &
+ipPort() const : const std::string
+address() const : const InetAddress &
+getLoop() const : EventLoop *
+getIoLoops() const : std::vector<EventLoop *>
+kickoffIdleConnections(size_t timeout) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = = {}, const std::string & caPath = "") : void
}
class "InetAddress::(anonymous_2030836)" as C_0000810201796859309531
class C_0000810201796859309531 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
+addr() const : const InetAddress &
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
+listen() : void
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
+start() : void
+wait() : void
+size() : size_t
+getNextLoop() : EventLoop *
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
}
class "TcpServer::IgnoreSigPipe" as C_0001489562721151066050
class C_0001489562721151066050 {
+IgnoreSigPipe() : void
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
+str_ : const char *
+len_ : const unsigned int
}
class "InetAddress::(anonymous_1188166)" as C_0001079750728717860293
class C_0001079750728717860293 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
+run() const : void
+restart(const TimePoint & now) : void
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
+when() const : const TimePoint &
+isRepeat() : bool
+id() : TimerId
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+output(const char * msg, const uint64_t len) : void
+flush() : void
+startLogging() : void
+setFileSizeLimit(uint64_t limit) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+~AsyncFileLogger() : void
+AsyncFileLogger() : void
}
class "AsyncFileLogger::LoggerFile" as C_0001453238540802541239
class C_0001453238540802541239 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName) : void
+~LoggerFile() : void
+writeLog(const StringPtr buf) : void
+getLength() : uint64_t
+operator bool() const : bool
+flush() : void
}
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000223701637084171141 - -+ C_0000912667184903365399
C_0000913287266699074255 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 ..> C_0000764690828649606524
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0000913287266699074255 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0000913287266699074255 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001822694677530159303
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0002131283840621188296 - -+ C_0002053752992472264214
C_0000979080797342806546 - -+ C_0002053752992472264214
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0000300034150397884642 ..> C_0001390130774830223499
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 ..> C_0001390130774830223499
C_0000607400095182694101 ..> C_0002026475275429760163
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0000607400095182694101 o- - C_0000157340721173102239 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0000764690828649606524 ..> C_0001390130774830223499
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001897340460211641725 o- - C_0000673025168912921705
C_0002230624932100089526 ..> C_0001289495020269537351
C_0002230624932100089526 ..> C_0000626107303889580949
C_0001156367011091191681 ..> C_0001390130774830223499
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 ..> C_0002230624932100089526
C_0001156367011091191681 ..> C_0001289495020269537351
C_0001156367011091191681 ..> C_0000434245188016003403
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 - -> C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 ..> C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 - -> C_0000626107303889580949 : -sslCtxPtr_
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0001278908569830571044 - -+ C_0001156367011091191681
C_0001706043459252151324 ..> C_0001390130774830223499
C_0001706043459252151324 ..> C_0001897340460211641725
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0000000982196670174162 - -+ C_0001706043459252151324
C_0000964465843177067305 ..> C_0001390130774830223499
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0002013739811805694444 - -+ C_0000964465843177067305
C_0000920759514274339356 ..> C_0001390130774830223499
C_0000920759514274339356 ..> C_0001897340460211641725
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001289495020269537351
C_0000920759514274339356 ..> C_0002230624932100089526
C_0000920759514274339356 ..> C_0000964465843177067305
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0000920759514274339356 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #connectionCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #closeCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #writeCompleteCallback_
C_0000920759514274339356 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0000920759514274339356 ..> C_0000434245188016003403 : #sslErrorCallback_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0002266895444343633259 - -+ C_0000920759514274339356
C_0002266895444343633259 ..> C_0002230624932100089526
C_0002266895444343633259 - -> C_0002230624932100089526 : -conn_
C_0001029063960859366412 - -+ C_0000920759514274339356
C_0001029063960859366412 - -> C_0001289495020269537351 : +msgBuffer_
C_0001727349338344491225 - -+ C_0000920759514274339356
C_0000469308227546933692 - -+ C_0000920759514274339356
C_0000469308227546933692 o- - C_0001515554933771522998 : +statusOfSSL_
C_0000469308227546933692 - -> C_0000626107303889580949 : +sslCtxPtr_
C_0000469308227546933692 o- - C_0001248784923817560723 : +sslPtr_
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0001423170502760786790 ..> C_0001390130774830223499
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 ..> C_0002061035340998974559
C_0001423170502760786790 ..> C_0002230624932100089526
C_0001423170502760786790 ..> C_0001289495020269537351
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 - -> C_0000626107303889580949 : -sslCtxPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0000184886692180276257 ..> C_0001390130774830223499
C_0000184886692180276257 ..> C_0001897340460211641725
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0001489562721151066050 - -+ C_0001423170502760786790
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0001453238540802541239 - -+ C_0000630185754256426097
C_0001453238540802541239 o- - C_0002032009232244826154 : #creationDate_
C_0001159823987743494688 <|- - C_0001453238540802541239
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.16+8-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>