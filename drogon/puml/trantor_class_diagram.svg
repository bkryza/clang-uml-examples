<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5001px" preserveAspectRatio="none" style="width:10011px;height:5001px;" version="1.1" viewBox="0 0 10011 5001" width="10011px" zoomAndPan="magnify"><defs><filter height="300%" id="fblc25xww8nfx" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="432.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="1937.5" y="4062"/><ellipse cx="2427.25" cy="4078" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2430.2188,4083.6406 Q2429.6406,4083.9375 2429,4084.0781 Q2428.3594,4084.2344 2427.6563,4084.2344 Q2425.1563,4084.2344 2423.8281,4082.5938 Q2422.5156,4080.9375 2422.5156,4077.8125 Q2422.5156,4074.6875 2423.8281,4073.0313 Q2425.1563,4071.375 2427.6563,4071.375 Q2428.3594,4071.375 2429,4071.5313 Q2429.6563,4071.6875 2430.2188,4071.9844 L2430.2188,4074.7031 Q2429.5938,4074.125 2429,4073.8594 Q2428.4063,4073.5781 2427.7813,4073.5781 Q2426.4375,4073.5781 2425.75,4074.6563 Q2425.0625,4075.7188 2425.0625,4077.8125 Q2425.0625,4079.9063 2425.75,4080.9844 Q2426.4375,4082.0469 2427.7813,4082.0469 Q2428.4063,4082.0469 2429,4081.7813 Q2429.5938,4081.5 2430.2188,4080.9219 L2430.2188,4083.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="2447.75" y="4082.1543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1938.5" x2="2954.5" y1="4094" y2="4094"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1938.5" x2="2954.5" y1="4102" y2="4102"/><ellipse cx="1948.5" cy="4113" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1957.5" y="4116.2104">Date() : void</text><ellipse cx="1948.5" cy="4125.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1957.5" y="4129.0151">Date(int64_t microSec) : void</text><ellipse cx="1948.5" cy="4138.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="1957.5" y="4141.8198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="1948.5" cy="4151.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="1957.5" y="4154.6245">date() : const Date</text><ellipse cx="1948.5" cy="4164.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="1957.5" y="4167.4292">now() : const Date</text><ellipse cx="1948.5" cy="4177.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="1957.5" y="4180.2339">timezoneOffset() : int64_t</text><ellipse cx="1948.5" cy="4189.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1957.5" y="4193.0386">after(double second) const : const Date</text><ellipse cx="1948.5" cy="4202.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1957.5" y="4205.8433">roundSecond() const : const Date</text><ellipse cx="1948.5" cy="4215.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1957.5" y="4218.6479">roundDay() const : const Date</text><ellipse cx="1948.5" cy="4228.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1957.5" y="4231.4526">~Date() : void</text><ellipse cx="1948.5" cy="4241.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1957.5" y="4244.2573">operator==(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4253.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="1957.5" y="4257.062">operator!=(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4266.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1957.5" y="4269.8667">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4279.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1957.5" y="4282.6714">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4292.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1957.5" y="4295.4761">operator&gt;=(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4305.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1957.5" y="4308.2808">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4317.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1957.5" y="4321.0854">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="1948.5" cy="4330.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1957.5" y="4333.8901">secondsSinceEpoch() const : int64_t</text><ellipse cx="1948.5" cy="4343.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="1957.5" y="4346.6948">tmStruct() const : struct tm</text><ellipse cx="1948.5" cy="4356.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1957.5" y="4359.4995">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="1948.5" cy="4369.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="1957.5" y="4372.3042">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1948.5" cy="4381.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="1957.5" y="4385.1089">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><ellipse cx="1948.5" cy="4394.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="1957.5" y="4397.9136">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="1948.5" cy="4407.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1957.5" y="4410.7183">toDbStringLocal() const : std::string</text><ellipse cx="1948.5" cy="4420.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1957.5" y="4423.5229">toDbString() const : std::string</text><ellipse cx="1948.5" cy="4433.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="1957.5" y="4436.3276">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="1948.5" cy="4445.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="1957.5" y="4449.1323">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="1948.5" cy="4458.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="1957.5" y="4461.937">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="1948.5" cy="4471.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="1957.5" y="4474.7417">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="1948.5" cy="4484.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1957.5" y="4487.5464">swap(Date &amp; that) : void</text><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="278.4844" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="7250" y="3617"/><ellipse cx="7454.75" cy="3633" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7457.7188,3638.6406 Q7457.1406,3638.9375 7456.5,3639.0781 Q7455.8594,3639.2344 7455.1563,3639.2344 Q7452.6563,3639.2344 7451.3281,3637.5938 Q7450.0156,3635.9375 7450.0156,3632.8125 Q7450.0156,3629.6875 7451.3281,3628.0313 Q7452.6563,3626.375 7455.1563,3626.375 Q7455.8594,3626.375 7456.5,3626.5313 Q7457.1563,3626.6875 7457.7188,3626.9844 L7457.7188,3629.7031 Q7457.0938,3629.125 7456.5,3628.8594 Q7455.9063,3628.5781 7455.2813,3628.5781 Q7453.9375,3628.5781 7453.25,3629.6563 Q7452.5625,3630.7188 7452.5625,3632.8125 Q7452.5625,3634.9063 7453.25,3635.9844 Q7453.9375,3637.0469 7455.2813,3637.0469 Q7455.9063,3637.0469 7456.5,3636.7813 Q7457.0938,3636.5 7457.7188,3635.9219 L7457.7188,3638.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="7475.25" y="3637.1543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7251" x2="7742" y1="3649" y2="3649"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7251" x2="7742" y1="3657" y2="3657"/><ellipse cx="7261" cy="3668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="7270" y="3671.2104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="7261" cy="3680.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="7270" y="3684.0151">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="7261" cy="3693.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="7270" y="3696.8198">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="7261" cy="3706.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="7270" y="3709.6245">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><ellipse cx="7261" cy="3719.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="7270" y="3722.4292">family() const : sa_family_t</text><ellipse cx="7261" cy="3732.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7270" y="3735.2339">toIp() const : std::string</text><ellipse cx="7261" cy="3744.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="7270" y="3748.0386">toIpPort() const : std::string</text><ellipse cx="7261" cy="3757.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="7270" y="3760.8433">toPort() const : uint16_t</text><ellipse cx="7261" cy="3770.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="7270" y="3773.6479">isIpV6() const : bool</text><ellipse cx="7261" cy="3783.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7270" y="3786.4526">isIntranetIp() const : bool</text><ellipse cx="7261" cy="3796.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="7270" y="3799.2573">isLoopbackIp() const : bool</text><ellipse cx="7261" cy="3808.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="7270" y="3812.062">getSockAddr() const : const struct sockaddr *</text><ellipse cx="7261" cy="3821.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="7270" y="3824.8667">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="7261" cy="3834.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="7270" y="3837.6714">ipNetEndian() const : uint32_t</text><ellipse cx="7261" cy="3847.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="7270" y="3850.4761">ip6NetEndian() const : const uint32_t *</text><ellipse cx="7261" cy="3860.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="7270" y="3863.2808">portNetEndian() const : uint16_t</text><ellipse cx="7261" cy="3872.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7270" y="3876.0854">setPortNetEndian(uint16_t port) : void</text><ellipse cx="7261" cy="3885.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="7270" y="3888.8901">isUnspecified() const : bool</text><!--MD5=[fc18972faf1c61d69feddadc1f33c92d]
class C_0000673025168912921705--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="73.6094" id="C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="7402" y="4241"/><ellipse cx="7445.8" cy="4257" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7448.7688,4262.6406 Q7448.1906,4262.9375 7447.55,4263.0781 Q7446.9094,4263.2344 7446.2063,4263.2344 Q7443.7063,4263.2344 7442.3781,4261.5938 Q7441.0656,4259.9375 7441.0656,4256.8125 Q7441.0656,4253.6875 7442.3781,4252.0313 Q7443.7063,4250.375 7446.2063,4250.375 Q7446.9094,4250.375 7447.55,4250.5313 Q7448.2063,4250.6875 7448.7688,4250.9844 L7448.7688,4253.7031 Q7448.1438,4253.125 7447.55,4252.8594 Q7446.9563,4252.5781 7446.3313,4252.5781 Q7444.9875,4252.5781 7444.3,4253.6563 Q7443.6125,4254.7188 7443.6125,4256.8125 Q7443.6125,4258.9063 7444.3,4259.9844 Q7444.9875,4261.0469 7446.3313,4261.0469 Q7446.9563,4261.0469 7447.55,4260.7813 Q7448.1438,4260.5 7448.7688,4259.9219 L7448.7688,4262.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="7466.2" y="4261.1543">InetAddress::()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7403" x2="7590" y1="4273" y2="4273"/><ellipse cx="7413" cy="4284" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7422" y="4287.2104">addr_ : struct sockaddr_in</text><ellipse cx="7413" cy="4296.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7422" y="4300.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7403" x2="7590" y1="4306.6094" y2="4306.6094"/><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="7284.5" y="53"/><ellipse cx="7299.5" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7302.4688,74.6406 Q7301.8906,74.9375 7301.25,75.0781 Q7300.6094,75.2344 7299.9063,75.2344 Q7297.4063,75.2344 7296.0781,73.5938 Q7294.7656,71.9375 7294.7656,68.8125 Q7294.7656,65.6875 7296.0781,64.0313 Q7297.4063,62.375 7299.9063,62.375 Q7300.6094,62.375 7301.25,62.5313 Q7301.9063,62.6875 7302.4688,62.9844 L7302.4688,65.7031 Q7301.8438,65.125 7301.25,64.8594 Q7300.6563,64.5781 7300.0313,64.5781 Q7298.6875,64.5781 7298,65.6563 Q7297.3125,66.7188 7297.3125,68.8125 Q7297.3125,70.9063 7298,71.9844 Q7298.6875,73.0469 7300.0313,73.0469 Q7300.6563,73.0469 7301.25,72.7813 Q7301.8438,72.5 7302.4688,71.9219 L7302.4688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="7313.5" y="73.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7285.5" x2="7397.5" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7285.5" x2="7397.5" y1="93" y2="93"/><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="214.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1308" y="3069.5"/><ellipse cx="1354.25" cy="3085.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1357.2188,3091.1406 Q1356.6406,3091.4375 1356,3091.5781 Q1355.3594,3091.7344 1354.6563,3091.7344 Q1352.1563,3091.7344 1350.8281,3090.0938 Q1349.5156,3088.4375 1349.5156,3085.3125 Q1349.5156,3082.1875 1350.8281,3080.5313 Q1352.1563,3078.875 1354.6563,3078.875 Q1355.3594,3078.875 1356,3079.0313 Q1356.6563,3079.1875 1357.2188,3079.4844 L1357.2188,3082.2031 Q1356.5938,3081.625 1356,3081.3594 Q1355.4063,3081.0781 1354.7813,3081.0781 Q1353.4375,3081.0781 1352.75,3082.1563 Q1352.0625,3083.2188 1352.0625,3085.3125 Q1352.0625,3087.4063 1352.75,3088.4844 Q1353.4375,3089.5469 1354.7813,3089.5469 Q1355.4063,3089.5469 1356,3089.2813 Q1356.5938,3089 1357.2188,3088.4219 L1357.2188,3091.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1374.75" y="3089.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="1526" y="3066.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="1527" y="3078.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1309" x2="1572" y1="3101.5" y2="3101.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1309" x2="1572" y1="3109.5" y2="3109.5"/><ellipse cx="1319" cy="3120.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1328" y="3123.7104">FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="1319" cy="3133.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1328" y="3136.5151">~FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="1319" cy="3146.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1328" y="3149.3198">append(const char * buf, size_t len) : bool</text><ellipse cx="1319" cy="3158.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1328" y="3162.1245">data() const : const char *</text><ellipse cx="1319" cy="3171.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1328" y="3174.9292">length() const : int</text><ellipse cx="1319" cy="3184.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1328" y="3187.7339">current() : char *</text><ellipse cx="1319" cy="3197.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1328" y="3200.5386">avail() const : int</text><ellipse cx="1319" cy="3210.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1328" y="3213.3433">add(size_t len) : void</text><ellipse cx="1319" cy="3222.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1328" y="3226.1479">reset() : void</text><ellipse cx="1319" cy="3235.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1328" y="3238.9526">zeroBuffer() : void</text><ellipse cx="1319" cy="3248.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1328" y="3251.7573">debugString() : const char *</text><ellipse cx="1319" cy="3261.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1328" y="3264.562">setCookie(void (*)() cookie) : void</text><ellipse cx="1319" cy="3274.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1328" y="3277.3667">toString() const : std::string</text><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="1235.5" y="2637"/><ellipse cx="1250.5" cy="2653" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1253.4688,2658.6406 Q1252.8906,2658.9375 1252.25,2659.0781 Q1251.6094,2659.2344 1250.9063,2659.2344 Q1248.4063,2659.2344 1247.0781,2657.5938 Q1245.7656,2655.9375 1245.7656,2652.8125 Q1245.7656,2649.6875 1247.0781,2648.0313 Q1248.4063,2646.375 1250.9063,2646.375 Q1251.6094,2646.375 1252.25,2646.5313 Q1252.9063,2646.6875 1253.4688,2646.9844 L1253.4688,2649.7031 Q1252.8438,2649.125 1252.25,2648.8594 Q1251.6563,2648.5781 1251.0313,2648.5781 Q1249.6875,2648.5781 1249,2649.6563 Q1248.3125,2650.7188 1248.3125,2652.8125 Q1248.3125,2654.9063 1249,2655.9844 Q1249.6875,2657.0469 1251.0313,2657.0469 Q1251.6563,2657.0469 1252.25,2656.7813 Q1252.8438,2656.5 1253.4688,2655.9219 L1253.4688,2658.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1264.5" y="2657.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="1384.5" y="2634"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="1385.5" y="2646.1387">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1236.5" x2="1502.5" y1="2669" y2="2669"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1236.5" x2="1502.5" y1="2677" y2="2677"/><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="214.4609" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1632" y="583"/><ellipse cx="1686.25" cy="599" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1689.2188,604.6406 Q1688.6406,604.9375 1688,605.0781 Q1687.3594,605.2344 1686.6563,605.2344 Q1684.1563,605.2344 1682.8281,603.5938 Q1681.5156,601.9375 1681.5156,598.8125 Q1681.5156,595.6875 1682.8281,594.0313 Q1684.1563,592.375 1686.6563,592.375 Q1687.3594,592.375 1688,592.5313 Q1688.6563,592.6875 1689.2188,592.9844 L1689.2188,595.7031 Q1688.5938,595.125 1688,594.8594 Q1687.4063,594.5781 1686.7813,594.5781 Q1685.4375,594.5781 1684.75,595.6563 Q1684.0625,596.7188 1684.0625,598.8125 Q1684.0625,600.9063 1684.75,601.9844 Q1685.4375,603.0469 1686.7813,603.0469 Q1687.4063,603.0469 1688,602.7813 Q1688.5938,602.5 1689.2188,601.9219 L1689.2188,604.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1706.75" y="603.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="1866" y="580"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="1867" y="592.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1633" x2="1896" y1="615" y2="615"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1633" x2="1896" y1="623" y2="623"/><ellipse cx="1643" cy="634" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1652" y="637.2104">FixedBuffer() : void</text><ellipse cx="1643" cy="646.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1652" y="650.0151">~FixedBuffer() : void</text><ellipse cx="1643" cy="659.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1652" y="662.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="1643" cy="672.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1652" y="675.6245">data() const : const char *</text><ellipse cx="1643" cy="685.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1652" y="688.4292">length() const : int</text><ellipse cx="1643" cy="698.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1652" y="701.2339">current() : char *</text><ellipse cx="1643" cy="710.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1652" y="714.0386">avail() const : int</text><ellipse cx="1643" cy="723.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1652" y="726.8433">add(size_t len) : void</text><ellipse cx="1643" cy="736.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1652" y="739.6479">reset() : void</text><ellipse cx="1643" cy="749.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1652" y="752.4526">zeroBuffer() : void</text><ellipse cx="1643" cy="762.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1652" y="765.2573">debugString() : const char *</text><ellipse cx="1643" cy="774.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1652" y="778.062">setCookie(void (*)() cookie) : void</text><ellipse cx="1643" cy="787.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1652" y="790.8667">toString() const : std::string</text><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="214.4609" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1703" y="1584"/><ellipse cx="1745.45" cy="1600" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1748.4188,1605.6406 Q1747.8406,1605.9375 1747.2,1606.0781 Q1746.5594,1606.2344 1745.8563,1606.2344 Q1743.3563,1606.2344 1742.0281,1604.5938 Q1740.7156,1602.9375 1740.7156,1599.8125 Q1740.7156,1596.6875 1742.0281,1595.0313 Q1743.3563,1593.375 1745.8563,1593.375 Q1746.5594,1593.375 1747.2,1593.5313 Q1747.8563,1593.6875 1748.4188,1593.9844 L1748.4188,1596.7031 Q1747.7938,1596.125 1747.2,1595.8594 Q1746.6063,1595.5781 1745.9813,1595.5781 Q1744.6375,1595.5781 1743.95,1596.6563 Q1743.2625,1597.7188 1743.2625,1599.8125 Q1743.2625,1601.9063 1743.95,1602.9844 Q1744.6375,1604.0469 1745.9813,1604.0469 Q1746.6063,1604.0469 1747.2,1603.7813 Q1747.7938,1603.5 1748.4188,1602.9219 L1748.4188,1605.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1765.55" y="1604.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="1913" y="1581"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="1914" y="1593.1387">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1704" x2="1967" y1="1616" y2="1616"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1704" x2="1967" y1="1624" y2="1624"/><ellipse cx="1714" cy="1635" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1723" y="1638.2104">FixedBuffer() : void</text><ellipse cx="1714" cy="1647.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1723" y="1651.0151">~FixedBuffer() : void</text><ellipse cx="1714" cy="1660.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1723" y="1663.8198">append(const char * buf, size_t len) : bool</text><ellipse cx="1714" cy="1673.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1723" y="1676.6245">data() const : const char *</text><ellipse cx="1714" cy="1686.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1723" y="1689.4292">length() const : int</text><ellipse cx="1714" cy="1699.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1723" y="1702.2339">current() : char *</text><ellipse cx="1714" cy="1711.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1723" y="1715.0386">avail() const : int</text><ellipse cx="1714" cy="1724.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1723" y="1727.8433">add(size_t len) : void</text><ellipse cx="1714" cy="1737.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1723" y="1740.6479">reset() : void</text><ellipse cx="1714" cy="1750.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1723" y="1753.4526">zeroBuffer() : void</text><ellipse cx="1714" cy="1763.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1723" y="1766.2573">debugString() : const char *</text><ellipse cx="1714" cy="1775.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1723" y="1779.062">setCookie(void (*)() cookie) : void</text><ellipse cx="1714" cy="1788.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1723" y="1791.8667">toString() const : std::string</text><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="342.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="1145.5" y="1904.5"/><ellipse cx="1298.75" cy="1920.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1301.7188,1926.1406 Q1301.1406,1926.4375 1300.5,1926.5781 Q1299.8594,1926.7344 1299.1563,1926.7344 Q1296.6563,1926.7344 1295.3281,1925.0938 Q1294.0156,1923.4375 1294.0156,1920.3125 Q1294.0156,1917.1875 1295.3281,1915.5313 Q1296.6563,1913.875 1299.1563,1913.875 Q1299.8594,1913.875 1300.5,1914.0313 Q1301.1563,1914.1875 1301.7188,1914.4844 L1301.7188,1917.2031 Q1301.0938,1916.625 1300.5,1916.3594 Q1299.9063,1916.0781 1299.2813,1916.0781 Q1297.9375,1916.0781 1297.25,1917.1563 Q1296.5625,1918.2188 1296.5625,1920.3125 Q1296.5625,1922.4063 1297.25,1923.4844 Q1297.9375,1924.5469 1299.2813,1924.5469 Q1299.9063,1924.5469 1300.5,1924.2813 Q1301.0938,1924 1301.7188,1923.4219 L1301.7188,1926.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1319.25" y="1924.6543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1146.5" x2="1526.5" y1="1936.5" y2="1936.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1146.5" x2="1526.5" y1="1944.5" y2="1944.5"/><ellipse cx="1156.5" cy="1955.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1165.5" y="1958.7104">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="1968.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1165.5" y="1971.5151">operator&lt;&lt;(short ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="1981.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1165.5" y="1984.3198">operator&lt;&lt;(unsigned short ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="1993.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1165.5" y="1997.1245">operator&lt;&lt;(int ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2006.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="1165.5" y="2009.9292">operator&lt;&lt;(unsigned int ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2019.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1165.5" y="2022.7339">operator&lt;&lt;(long ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2032.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1165.5" y="2035.5386">operator&lt;&lt;(unsigned long ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2045.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="1165.5" y="2048.3433">operator&lt;&lt;(const long long &amp; ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2057.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1165.5" y="2061.1479">operator&lt;&lt;(const unsigned long long &amp; ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2070.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="1165.5" y="2073.9526">operator&lt;&lt;(const void * ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2083.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1165.5" y="2086.7573">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2096.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1165.5" y="2099.562">operator&lt;&lt;(const double &amp; ) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2109.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="1165.5" y="2112.3667">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2121.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1165.5" y="2125.1714">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2134.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1165.5" y="2137.9761">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2147.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1165.5" y="2150.7808">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2160.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="1165.5" y="2163.5854">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2173.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1165.5" y="2176.3901">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="1156.5" cy="2185.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1165.5" y="2189.1948">append(const char * data, size_t len) : void</text><ellipse cx="1156.5" cy="2198.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1165.5" y="2201.9995">bufferData() const : const char *</text><ellipse cx="1156.5" cy="2211.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1165.5" y="2214.8042">bufferLength() const : size_t</text><ellipse cx="1156.5" cy="2224.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1165.5" y="2227.6089">resetBuffer() : void</text><ellipse cx="1156.5" cy="2237.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1165.5" y="2240.4136">operator&lt;&lt;&lt;int N&gt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="14" y="34"/><ellipse cx="119.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M122.7188,55.6406 Q122.1406,55.9375 121.5,56.0781 Q120.8594,56.2344 120.1563,56.2344 Q117.6563,56.2344 116.3281,54.5938 Q115.0156,52.9375 115.0156,49.8125 Q115.0156,46.6875 116.3281,45.0313 Q117.6563,43.375 120.1563,43.375 Q120.8594,43.375 121.5,43.5313 Q122.1563,43.6875 122.7188,43.9844 L122.7188,46.7031 Q122.0938,46.125 121.5,45.8594 Q120.9063,45.5781 120.2813,45.5781 Q118.9375,45.5781 118.25,46.6563 Q117.5625,47.7188 117.5625,49.8125 Q117.5625,51.9063 118.25,52.9844 Q118.9375,54.0469 120.2813,54.0469 Q120.9063,54.0469 121.5,53.7813 Q122.0938,53.5 122.7188,52.9219 L122.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="140.25" y="54.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="15" x2="256" y1="66" y2="66"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="15" x2="256" y1="74" y2="74"/><ellipse cx="25" cy="85" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="34" y="88.2104">data() const : const char *</text><ellipse cx="25" cy="97.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="34" y="101.0151">length() const : int</text><ellipse cx="25" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="34" y="113.8198">Fmt&lt;T&gt;(const char * fmt, T val) : void</text><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="240.0703" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="748.5" y="268"/><ellipse cx="1117.75" cy="284" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1120.7188,289.6406 Q1120.1406,289.9375 1119.5,290.0781 Q1118.8594,290.2344 1118.1563,290.2344 Q1115.6563,290.2344 1114.3281,288.5938 Q1113.0156,286.9375 1113.0156,283.8125 Q1113.0156,280.6875 1114.3281,279.0313 Q1115.6563,277.375 1118.1563,277.375 Q1118.8594,277.375 1119.5,277.5313 Q1120.1563,277.6875 1120.7188,277.9844 L1120.7188,280.7031 Q1120.0938,280.125 1119.5,279.8594 Q1118.9063,279.5781 1118.2813,279.5781 Q1116.9375,279.5781 1116.25,280.6563 Q1115.5625,281.7188 1115.5625,283.8125 Q1115.5625,285.9063 1116.25,286.9844 Q1116.9375,288.0469 1118.2813,288.0469 Q1118.9063,288.0469 1119.5,287.7813 Q1120.0938,287.5 1120.7188,286.9219 L1120.7188,289.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1138.25" y="288.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="749.5" x2="1537.5" y1="300" y2="300"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="749.5" x2="1537.5" y1="308" y2="308"/><ellipse cx="759.5" cy="319" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="768.5" y="322.2104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="759.5" cy="331.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="768.5" y="335.0151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="759.5" cy="344.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="768.5" y="347.8198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="759.5" cy="357.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="768.5" y="360.6245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="759.5" cy="370.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="768.5" y="373.4292">Logger() : void</text><ellipse cx="759.5" cy="383.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="768.5" y="386.2339">Logger(Logger::LogLevel level) : void</text><ellipse cx="759.5" cy="395.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="768.5" y="399.0386">Logger(bool isSysErr) : void</text><ellipse cx="759.5" cy="408.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="768.5" y="411.8433">~Logger() : void</text><ellipse cx="759.5" cy="421.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="768.5" y="424.6479">setIndex(int index) : Logger &amp;</text><ellipse cx="759.5" cy="434.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="768.5" y="437.4526">stream() : LogStream &amp;</text><ellipse cx="759.5" cy="447.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="768.5" y="450.2573">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="759.5" cy="459.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="768.5" y="463.062">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="759.5" cy="472.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="768.5" y="475.8667">logLevel() : Logger::LogLevel</text><ellipse cx="759.5" cy="485.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="768.5" y="488.6714">displayLocalTime() : bool</text><ellipse cx="759.5" cy="498.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="768.5" y="501.4761">setDisplayLocalTime(bool showLocalTime) : void</text><!--MD5=[a2beb77350952d649324ef19949173b2]
class C_0002131283840621188296--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="137.6328" id="C_0002131283840621188296" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="7656.5" y="8"/><ellipse cx="7671.5" cy="24" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7675.6094,30 L7667.8906,30 L7667.8906,17.6094 L7675.6094,17.6094 L7675.6094,19.7656 L7670.3438,19.7656 L7670.3438,22.4375 L7675.1094,22.4375 L7675.1094,24.5938 L7670.3438,24.5938 L7670.3438,27.8438 L7675.6094,27.8438 L7675.6094,30 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="7685.5" y="28.1543">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7657.5" x2="7791.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="7662.5" y="54.2104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="7662.5" y="67.0151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="7662.5" y="79.8198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="7662.5" y="92.6245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7662.5" y="105.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="7662.5" y="118.2339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7662.5" y="131.0386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7657.5" x2="7791.5" y1="137.6328" y2="137.6328"/><!--MD5=[80f13d7cbf12b8f5b3c51061955ccb60]
class C_0000979080797342806546--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="99.2188" id="C_0000979080797342806546" style="stroke: #A80036; stroke-width: 1.5;" width="304" x="7827.5" y="27.5"/><ellipse cx="7917.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7920.2188,49.1406 Q7919.6406,49.4375 7919,49.5781 Q7918.3594,49.7344 7917.6563,49.7344 Q7915.1563,49.7344 7913.8281,48.0938 Q7912.5156,46.4375 7912.5156,43.3125 Q7912.5156,40.1875 7913.8281,38.5313 Q7915.1563,36.875 7917.6563,36.875 Q7918.3594,36.875 7919,37.0313 Q7919.6563,37.1875 7920.2188,37.4844 L7920.2188,40.2031 Q7919.5938,39.625 7919,39.3594 Q7918.4063,39.0781 7917.7813,39.0781 Q7916.4375,39.0781 7915.75,40.1563 Q7915.0625,41.2188 7915.0625,43.3125 Q7915.0625,45.4063 7915.75,46.4844 Q7916.4375,47.5469 7917.7813,47.5469 Q7918.4063,47.5469 7919,47.2813 Q7919.5938,47 7920.2188,46.4219 L7920.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="7937.75" y="47.6543">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7828.5" x2="8130.5" y1="59.5" y2="59.5"/><ellipse cx="7838.5" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="7847.5" y="73.7104">data_ : const char *</text><ellipse cx="7838.5" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="7847.5" y="86.5151">size_ : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7828.5" x2="8130.5" y1="93.1094" y2="93.1094"/><ellipse cx="7838.5" cy="104.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="7847.5" y="107.3198">SourceFile(const char * filename = nullptr) : void</text><ellipse cx="7838.5" cy="116.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="7847.5" y="120.1245">SourceFile&lt;int N&gt;(const char (&amp;)[N] arr) : void</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="1266.5" y="1147.5"/><ellipse cx="1337.25" cy="1163.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1340.2188,1169.1406 Q1339.6406,1169.4375 1339,1169.5781 Q1338.3594,1169.7344 1337.6563,1169.7344 Q1335.1563,1169.7344 1333.8281,1168.0938 Q1332.5156,1166.4375 1332.5156,1163.3125 Q1332.5156,1160.1875 1333.8281,1158.5313 Q1335.1563,1156.875 1337.6563,1156.875 Q1338.3594,1156.875 1339,1157.0313 Q1339.6563,1157.1875 1340.2188,1157.4844 L1340.2188,1160.2031 Q1339.5938,1159.625 1339,1159.3594 Q1338.4063,1159.0781 1337.7813,1159.0781 Q1336.4375,1159.0781 1335.75,1160.1563 Q1335.0625,1161.2188 1335.0625,1163.3125 Q1335.0625,1165.4063 1335.75,1166.4844 Q1336.4375,1167.5469 1337.7813,1167.5469 Q1338.4063,1167.5469 1339,1167.2813 Q1339.5938,1167 1340.2188,1166.4219 L1340.2188,1169.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1357.75" y="1167.6543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1267.5" x2="1483.5" y1="1179.5" y2="1179.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1267.5" x2="1483.5" y1="1187.5" y2="1187.5"/><ellipse cx="1277.5" cy="1198.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1286.5" y="1201.7104">~RawLogger() : void</text><ellipse cx="1277.5" cy="1211.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1286.5" y="1214.5151">setIndex(int index) : RawLogger &amp;</text><ellipse cx="1277.5" cy="1224.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1286.5" y="1227.3198">stream() : LogStream &amp;</text><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="124.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="1687.5" y="4718"/><ellipse cx="1744.25" cy="4734" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1747.2188,4739.6406 Q1746.6406,4739.9375 1746,4740.0781 Q1745.3594,4740.2344 1744.6563,4740.2344 Q1742.1563,4740.2344 1740.8281,4738.5938 Q1739.5156,4736.9375 1739.5156,4733.8125 Q1739.5156,4730.6875 1740.8281,4729.0313 Q1742.1563,4727.375 1744.6563,4727.375 Q1745.3594,4727.375 1746,4727.5313 Q1746.6563,4727.6875 1747.2188,4727.9844 L1747.2188,4730.7031 Q1746.5938,4730.125 1746,4729.8594 Q1745.4063,4729.5781 1744.7813,4729.5781 Q1743.4375,4729.5781 1742.75,4730.6563 Q1742.0625,4731.7188 1742.0625,4733.8125 Q1742.0625,4735.9063 1742.75,4736.9844 Q1743.4375,4738.0469 1744.7813,4738.0469 Q1745.4063,4738.0469 1746,4737.7813 Q1746.5938,4737.5 1747.2188,4736.9219 L1747.2188,4739.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="1764.75" y="4738.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="1887.5" y="4715"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="1888.5" y="4727.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1688.5" x2="1892.5" y1="4750" y2="4750"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1688.5" x2="1892.5" y1="4758" y2="4758"/><ellipse cx="1698.5" cy="4769" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1707.5" y="4772.2104">MpscQueue&lt;T&gt;() : void</text><ellipse cx="1698.5" cy="4781.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1707.5" y="4785.0151">~MpscQueue&lt;T&gt;() : void</text><ellipse cx="1698.5" cy="4794.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1707.5" y="4797.8198">enqueue(T &amp;&amp; input) : void</text><ellipse cx="1698.5" cy="4807.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1707.5" y="4810.6245">enqueue(const T &amp; input) : void</text><ellipse cx="1698.5" cy="4820.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="1707.5" y="4823.4292">dequeue(T &amp; output) : bool</text><ellipse cx="1698.5" cy="4833.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1707.5" y="4836.2339">empty() : bool</text><!--MD5=[9e2b872a1cb524987dcee0b8ea8bcdce]
class C_0000223701637084171141--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="112.0234" id="C_0000223701637084171141" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="1678.5" y="4222"/><ellipse cx="1711.95" cy="4238" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1714.9188,4243.6406 Q1714.3406,4243.9375 1713.7,4244.0781 Q1713.0594,4244.2344 1712.3563,4244.2344 Q1709.8563,4244.2344 1708.5281,4242.5938 Q1707.2156,4240.9375 1707.2156,4237.8125 Q1707.2156,4234.6875 1708.5281,4233.0313 Q1709.8563,4231.375 1712.3563,4231.375 Q1713.0594,4231.375 1713.7,4231.5313 Q1714.3563,4231.6875 1714.9188,4231.9844 L1714.9188,4234.7031 Q1714.2938,4234.125 1713.7,4233.8594 Q1713.1063,4233.5781 1712.4813,4233.5781 Q1711.1375,4233.5781 1710.45,4234.6563 Q1709.7625,4235.7188 1709.7625,4237.8125 Q1709.7625,4239.9063 1710.45,4240.9844 Q1711.1375,4242.0469 1712.4813,4242.0469 Q1713.1063,4242.0469 1713.7,4241.7813 Q1714.2938,4241.5 1714.9188,4240.9219 L1714.9188,4243.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="1730.05" y="4242.1543">MpscQueue::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1679.5" x2="1901.5" y1="4254" y2="4254"/><ellipse cx="1689.5" cy="4265" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1698.5" y="4268.2104">dataPtr_ : T *</text><ellipse cx="1689.5" cy="4277.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1698.5" y="4281.0151">next_ : std::atomic&lt;BufferNode *&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1679.5" x2="1901.5" y1="4287.6094" y2="4287.6094"/><ellipse cx="1689.5" cy="4298.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1698.5" y="4301.8198">BufferNode() = default : void</text><ellipse cx="1689.5" cy="4311.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1698.5" y="4314.6245">BufferNode(const T &amp; data) : void</text><ellipse cx="1689.5" cy="4324.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1698.5" y="4327.4292">BufferNode(T &amp;&amp; data) : void</text><!--MD5=[dad06bf4fbec639e9a802a58181f4e4a]
class C_0002185746167032660910--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="48" id="C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="3061.5" y="4254"/><ellipse cx="3076.5" cy="4270" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3079.4688,4275.6406 Q3078.8906,4275.9375 3078.25,4276.0781 Q3077.6094,4276.2344 3076.9063,4276.2344 Q3074.4063,4276.2344 3073.0781,4274.5938 Q3071.7656,4272.9375 3071.7656,4269.8125 Q3071.7656,4266.6875 3073.0781,4265.0313 Q3074.4063,4263.375 3076.9063,4263.375 Q3077.6094,4263.375 3078.25,4263.5313 Q3078.9063,4263.6875 3079.4688,4263.9844 L3079.4688,4266.7031 Q3078.8438,4266.125 3078.25,4265.8594 Q3077.6563,4265.5781 3077.0313,4265.5781 Q3075.6875,4265.5781 3075,4266.6563 Q3074.3125,4267.7188 3074.3125,4269.8125 Q3074.3125,4271.9063 3075,4272.9844 Q3075.6875,4274.0469 3077.0313,4274.0469 Q3077.6563,4274.0469 3078.25,4273.7813 Q3078.8438,4273.5 3079.4688,4272.9219 L3079.4688,4275.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="3090.5" y="4274.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="135" x="3171.5" y="4251"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="3172.5" y="4263.1387">std::function&lt;void()&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3062.5" x2="3302.5" y1="4286" y2="4286"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3062.5" x2="3302.5" y1="4294" y2="4294"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="457.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="5630.5" y="3527"/><ellipse cx="5848.75" cy="3543" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5851.7188,3548.6406 Q5851.1406,3548.9375 5850.5,3549.0781 Q5849.8594,3549.2344 5849.1563,3549.2344 Q5846.6563,3549.2344 5845.3281,3547.5938 Q5844.0156,3545.9375 5844.0156,3542.8125 Q5844.0156,3539.6875 5845.3281,3538.0313 Q5846.6563,3536.375 5849.1563,3536.375 Q5849.8594,3536.375 5850.5,3536.5313 Q5851.1563,3536.6875 5851.7188,3536.9844 L5851.7188,3539.7031 Q5851.0938,3539.125 5850.5,3538.8594 Q5849.9063,3538.5781 5849.2813,3538.5781 Q5847.9375,3538.5781 5847.25,3539.6563 Q5846.5625,3540.7188 5846.5625,3542.8125 Q5846.5625,3544.9063 5847.25,3545.9844 Q5847.9375,3547.0469 5849.2813,3547.0469 Q5849.9063,3547.0469 5850.5,3546.7813 Q5851.0938,3546.5 5851.7188,3545.9219 L5851.7188,3548.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5869.25" y="3547.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5631.5" x2="6139.5" y1="3559" y2="3559"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5631.5" x2="6139.5" y1="3567" y2="3567"/><ellipse cx="5641.5" cy="3578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5650.5" y="3581.2104">EventLoop() : void</text><ellipse cx="5641.5" cy="3590.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5650.5" y="3594.0151">~EventLoop() : void</text><ellipse cx="5641.5" cy="3603.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="5650.5" y="3606.8198">loop() : void</text><ellipse cx="5641.5" cy="3616.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="5650.5" y="3619.6245">quit() : void</text><ellipse cx="5641.5" cy="3629.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5650.5" y="3632.4292">assertInLoopThread() : void</text><ellipse cx="5641.5" cy="3642.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5650.5" y="3645.2339">resetTimerQueue() : void</text><ellipse cx="5641.5" cy="3654.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5650.5" y="3658.0386">resetAfterFork() : void</text><ellipse cx="5641.5" cy="3667.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="5650.5" y="3670.8433">isInLoopThread() const : bool</text><ellipse cx="5641.5" cy="3680.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="5650.5" y="3683.6479">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="5641.5" cy="3693.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5650.5" y="3696.4526">queueInLoop(const Func &amp; f) : void</text><ellipse cx="5641.5" cy="3706.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="5650.5" y="3709.2573">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="5641.5" cy="3718.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5650.5" y="3722.062">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3731.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5650.5" y="3734.8667">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3744.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5650.5" y="3747.6714">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3757.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5650.5" y="3760.4761">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3770.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="5650.5" y="3773.2808">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3782.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="5650.5" y="3786.0854">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3795.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="5650.5" y="3798.8901">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3808.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5650.5" y="3811.6948">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3821.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="5650.5" y="3824.4995">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3834.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="5650.5" y="3837.3042">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="5641.5" cy="3846.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="5650.5" y="3850.1089">invalidateTimer(TimerId id) : void</text><ellipse cx="5641.5" cy="3859.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5650.5" y="3862.9136">moveToCurrentThread() : void</text><ellipse cx="5641.5" cy="3872.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="5650.5" y="3875.7183">updateChannel(Channel * chl) : void</text><ellipse cx="5641.5" cy="3885.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5650.5" y="3888.5229">removeChannel(Channel * chl) : void</text><ellipse cx="5641.5" cy="3898.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="5650.5" y="3901.3276">index() : size_t</text><ellipse cx="5641.5" cy="3910.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5650.5" y="3914.1323">setIndex(size_t index) : void</text><ellipse cx="5641.5" cy="3923.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="5650.5" y="3926.937">isRunning() : bool</text><ellipse cx="5641.5" cy="3936.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5650.5" y="3939.7417">isCallingFunctions() : bool</text><ellipse cx="5641.5" cy="3949.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5650.5" y="3952.5464">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="5641.5" cy="3962.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5650.5" y="3965.3511">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="5641.5" cy="3974.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="5650.5" y="3978.1558">runInLoop&lt;Functor&gt;(Functor &amp;&amp; f) : void</text><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="112.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="2232.5" y="2354"/><ellipse cx="2410.75" cy="2370" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2413.7188,2375.6406 Q2413.1406,2375.9375 2412.5,2376.0781 Q2411.8594,2376.2344 2411.1563,2376.2344 Q2408.6563,2376.2344 2407.3281,2374.5938 Q2406.0156,2372.9375 2406.0156,2369.8125 Q2406.0156,2366.6875 2407.3281,2365.0313 Q2408.6563,2363.375 2411.1563,2363.375 Q2411.8594,2363.375 2412.5,2363.5313 Q2413.1563,2363.6875 2413.7188,2363.9844 L2413.7188,2366.7031 Q2413.0938,2366.125 2412.5,2365.8594 Q2411.9063,2365.5781 2411.2813,2365.5781 Q2409.9375,2365.5781 2409.25,2366.6563 Q2408.5625,2367.7188 2408.5625,2369.8125 Q2408.5625,2371.9063 2409.25,2372.9844 Q2409.9375,2374.0469 2411.2813,2374.0469 Q2411.9063,2374.0469 2412.5,2373.7813 Q2413.0938,2373.5 2413.7188,2372.9219 L2413.7188,2375.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="2431.25" y="2374.1543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2233.5" x2="2705.5" y1="2386" y2="2386"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2233.5" x2="2705.5" y1="2394" y2="2394"/><ellipse cx="2243.5" cy="2405" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="2252.5" y="2408.2104">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="2243.5" cy="2417.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2252.5" y="2421.0151">~EventLoopThread() : void</text><ellipse cx="2243.5" cy="2430.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2252.5" y="2433.8198">wait() : void</text><ellipse cx="2243.5" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2252.5" y="2446.6245">getLoop() const : EventLoop *</text><ellipse cx="2243.5" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2252.5" y="2459.4292">run() : void</text><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="150.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="2186" y="1115.5"/><ellipse cx="2409.25" cy="1131.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2412.2188,1137.1406 Q2411.6406,1137.4375 2411,1137.5781 Q2410.3594,1137.7344 2409.6563,1137.7344 Q2407.1563,1137.7344 2405.8281,1136.0938 Q2404.5156,1134.4375 2404.5156,1131.3125 Q2404.5156,1128.1875 2405.8281,1126.5313 Q2407.1563,1124.875 2409.6563,1124.875 Q2410.3594,1124.875 2411,1125.0313 Q2411.6563,1125.1875 2412.2188,1125.4844 L2412.2188,1128.2031 Q2411.5938,1127.625 2411,1127.3594 Q2410.4063,1127.0781 2409.7813,1127.0781 Q2408.4375,1127.0781 2407.75,1128.1563 Q2407.0625,1129.2188 2407.0625,1131.3125 Q2407.0625,1133.4063 2407.75,1134.4844 Q2408.4375,1135.5469 2409.7813,1135.5469 Q2410.4063,1135.5469 2411,1135.2813 Q2411.5938,1135 2412.2188,1134.4219 L2412.2188,1137.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="2429.75" y="1135.6543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2187" x2="2776" y1="1147.5" y2="1147.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2187" x2="2776" y1="1155.5" y2="1155.5"/><ellipse cx="2197" cy="1166.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2206" y="1169.7104">EventLoopThreadPool() : void</text><ellipse cx="2197" cy="1179.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="2206" y="1182.5151">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><ellipse cx="2197" cy="1192.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2206" y="1195.3198">start() : void</text><ellipse cx="2197" cy="1204.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2206" y="1208.1245">wait() : void</text><ellipse cx="2197" cy="1217.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2206" y="1220.9292">size() : size_t</text><ellipse cx="2197" cy="1230.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2206" y="1233.7339">getNextLoop() : EventLoop *</text><ellipse cx="2197" cy="1243.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2206" y="1246.5386">getLoop(size_t id) : EventLoop *</text><ellipse cx="2197" cy="1256.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2206" y="1259.3433">getLoops() const : std::vector&lt;EventLoop *&gt;</text><!--MD5=[30a24a86207ab2bd070e7504d6a3d0fc]
class C_0001189407896771082466--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="73.6094" id="C_0001189407896771082466" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="292" y="40"/><ellipse cx="307" cy="56" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M309.9688,61.6406 Q309.3906,61.9375 308.75,62.0781 Q308.1094,62.2344 307.4063,62.2344 Q304.9063,62.2344 303.5781,60.5938 Q302.2656,58.9375 302.2656,55.8125 Q302.2656,52.6875 303.5781,51.0313 Q304.9063,49.375 307.4063,49.375 Q308.1094,49.375 308.75,49.5313 Q309.4063,49.6875 309.9688,49.9844 L309.9688,52.7031 Q309.3438,52.125 308.75,51.8594 Q308.1563,51.5781 307.5313,51.5781 Q306.1875,51.5781 305.5,52.6563 Q304.8125,53.7188 304.8125,55.8125 Q304.8125,57.9063 305.5,58.9844 Q306.1875,60.0469 307.5313,60.0469 Q308.1563,60.0469 308.75,59.7813 Q309.3438,59.5 309.9688,58.9219 L309.9688,61.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="321" y="60.1543">InetAddress::(anonymous_2577662)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="293" x2="550" y1="72" y2="72"/><ellipse cx="303" cy="83" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="312" y="86.2104">addr_ : struct sockaddr_in</text><ellipse cx="303" cy="95.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="312" y="99.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="293" x2="550" y1="105.6094" y2="105.6094"/><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="547.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="4495.5" y="2903"/><ellipse cx="4618.25" cy="2919" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4621.2188,2924.6406 Q4620.6406,2924.9375 4620,2925.0781 Q4619.3594,2925.2344 4618.6563,2925.2344 Q4616.1563,2925.2344 4614.8281,2923.5938 Q4613.5156,2921.9375 4613.5156,2918.8125 Q4613.5156,2915.6875 4614.8281,2914.0313 Q4616.1563,2912.375 4618.6563,2912.375 Q4619.3594,2912.375 4620,2912.5313 Q4620.6563,2912.6875 4621.2188,2912.9844 L4621.2188,2915.7031 Q4620.5938,2915.125 4620,2914.8594 Q4619.4063,2914.5781 4618.7813,2914.5781 Q4617.4375,2914.5781 4616.75,2915.6563 Q4616.0625,2916.7188 4616.0625,2918.8125 Q4616.0625,2920.9063 4616.75,2921.9844 Q4617.4375,2923.0469 4618.7813,2923.0469 Q4619.4063,2923.0469 4620,2922.7813 Q4620.5938,2922.5 4621.2188,2921.9219 L4621.2188,2924.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="4638.75" y="2923.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4496.5" x2="4810.5" y1="2935" y2="2935"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4496.5" x2="4810.5" y1="2943" y2="2943"/><ellipse cx="4506.5" cy="2954" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4515.5" y="2957.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><ellipse cx="4506.5" cy="2966.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="4515.5" y="2970.0151">peek() const : const char *</text><ellipse cx="4506.5" cy="2979.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4515.5" y="2982.8198">beginWrite() const : const char *</text><ellipse cx="4506.5" cy="2992.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4515.5" y="2995.6245">beginWrite() : char *</text><ellipse cx="4506.5" cy="3005.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="4515.5" y="3008.4292">peekInt8() const : uint8_t</text><ellipse cx="4506.5" cy="3018.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4515.5" y="3021.2339">peekInt16() const : uint16_t</text><ellipse cx="4506.5" cy="3030.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4515.5" y="3034.0386">peekInt32() const : uint32_t</text><ellipse cx="4506.5" cy="3043.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="4515.5" y="3046.8433">peekInt64() const : uint64_t</text><ellipse cx="4506.5" cy="3056.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4515.5" y="3059.6479">read(size_t len) : std::string</text><ellipse cx="4506.5" cy="3069.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4515.5" y="3072.4526">readInt8() : uint8_t</text><ellipse cx="4506.5" cy="3082.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4515.5" y="3085.2573">readInt16() : uint16_t</text><ellipse cx="4506.5" cy="3094.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4515.5" y="3098.062">readInt32() : uint32_t</text><ellipse cx="4506.5" cy="3107.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4515.5" y="3110.8667">readInt64() : uint64_t</text><ellipse cx="4506.5" cy="3120.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4515.5" y="3123.6714">swap(MsgBuffer &amp; buf) : void</text><ellipse cx="4506.5" cy="3133.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4515.5" y="3136.4761">readableBytes() const : size_t</text><ellipse cx="4506.5" cy="3146.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4515.5" y="3149.2808">writableBytes() const : size_t</text><ellipse cx="4506.5" cy="3158.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="4515.5" y="3162.0854">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="4506.5" cy="3171.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="4515.5" y="3174.8901">append(const char * buf, size_t len) : void</text><ellipse cx="4506.5" cy="3184.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4515.5" y="3187.6948">append(const std::string &amp; buf) : void</text><ellipse cx="4506.5" cy="3197.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4515.5" y="3200.4995">appendInt8(const uint8_t b) : void</text><ellipse cx="4506.5" cy="3210.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4515.5" y="3213.3042">appendInt16(const uint16_t s) : void</text><ellipse cx="4506.5" cy="3222.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4515.5" y="3226.1089">appendInt32(const uint32_t i) : void</text><ellipse cx="4506.5" cy="3235.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="4515.5" y="3238.9136">appendInt64(const uint64_t l) : void</text><ellipse cx="4506.5" cy="3248.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4515.5" y="3251.7183">addInFront(const char * buf, size_t len) : void</text><ellipse cx="4506.5" cy="3261.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4515.5" y="3264.5229">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="4506.5" cy="3274.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4515.5" y="3277.3276">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="4506.5" cy="3286.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4515.5" y="3290.1323">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="4506.5" cy="3299.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="4515.5" y="3302.937">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="4506.5" cy="3312.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4515.5" y="3315.7417">retrieveAll() : void</text><ellipse cx="4506.5" cy="3325.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4515.5" y="3328.5464">retrieve(size_t len) : void</text><ellipse cx="4506.5" cy="3338.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="4515.5" y="3341.3511">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="4506.5" cy="3350.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="4515.5" y="3354.1558">retrieveUntil(const char * end) : void</text><ellipse cx="4506.5" cy="3363.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4515.5" y="3366.9604">findCRLF() const : const char *</text><ellipse cx="4506.5" cy="3376.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4515.5" y="3379.7651">ensureWritableBytes(size_t len) : void</text><ellipse cx="4506.5" cy="3389.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4515.5" y="3392.5698">hasWritten(size_t len) : void</text><ellipse cx="4506.5" cy="3402.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4515.5" y="3405.3745">unwrite(size_t offset) : void</text><ellipse cx="4506.5" cy="3414.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="4515.5" y="3418.1792">operator[](size_t offset) const : const char &amp;</text><ellipse cx="4506.5" cy="3427.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4515.5" y="3430.9839">operator[](size_t offset) : char &amp;</text><ellipse cx="4506.5" cy="3440.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="4515.5" y="3443.7886">append&lt;int N&gt;(const char (&amp;)[N] buf) : void</text><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="6154.5" y="3133.5"/><ellipse cx="6191.55" cy="3149.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6195.6594,3155.5 L6187.9406,3155.5 L6187.9406,3143.1094 L6195.6594,3143.1094 L6195.6594,3145.2656 L6190.3938,3145.2656 L6190.3938,3147.9375 L6195.1594,3147.9375 L6195.1594,3150.0938 L6190.3938,3150.0938 L6190.3938,3153.3438 L6195.6594,3153.3438 L6195.6594,3155.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="6210.45" y="3153.6543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6155.5" x2="6287.5" y1="3165.5" y2="3165.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="6160.5" y="3179.7104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6160.5" y="3192.5151">kSSLInvalidCertificate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="6160.5" y="3205.3198">kSSLProtocolError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6155.5" x2="6287.5" y1="3211.9141" y2="3211.9141"/><!--MD5=[bc555c99f0e75025e1dcf95caffae609]
class C_0001660397537883119469--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="99.2188" id="C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="3933" y="3127"/><ellipse cx="4028.25" cy="3143" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4028.3594,3138.3438 L4027.2031,3143.4219 L4029.5313,3143.4219 L4028.3594,3138.3438 Z M4026.875,3136.1094 L4029.8594,3136.1094 L4033.2188,3148.5 L4030.7656,3148.5 L4030,3145.4375 L4026.7188,3145.4375 L4025.9688,3148.5 L4023.5313,3148.5 L4026.875,3136.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="4048.75" y="3147.1543">Certificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3934" x2="4195" y1="3159" y2="3159"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3934" x2="4195" y1="3167" y2="3167"/><ellipse cx="3944" cy="3178" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3953" y="3181.2104">~Certificate() = default : void</text><ellipse cx="3944" cy="3190.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="3953" y="3194.0151">sha1Fingerprint() const = 0 : std::string</text><ellipse cx="3944" cy="3203.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="3953" y="3206.8198">sha256Fingerprint() const = 0 : std::string</text><ellipse cx="3944" cy="3216.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="3953" y="3219.6245">pem() const = 0 : std::string</text><!--MD5=[5368604bbb4530f9ed0e170f7ad54dab]
class C_0002100370281243872283--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="355.3125" id="C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.5;" width="637" x="5293" y="2999"/><ellipse cx="5579.25" cy="3015" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5582.2188,3020.6406 Q5581.6406,3020.9375 5581,3021.0781 Q5580.3594,3021.2344 5579.6563,3021.2344 Q5577.1563,3021.2344 5575.8281,3019.5938 Q5574.5156,3017.9375 5574.5156,3014.8125 Q5574.5156,3011.6875 5575.8281,3010.0313 Q5577.1563,3008.375 5579.6563,3008.375 Q5580.3594,3008.375 5581,3008.5313 Q5581.6563,3008.6875 5582.2188,3008.9844 L5582.2188,3011.7031 Q5581.5938,3011.125 5581,3010.8594 Q5580.4063,3010.5781 5579.7813,3010.5781 Q5578.4375,3010.5781 5577.75,3011.6563 Q5577.0625,3012.7188 5577.0625,3014.8125 Q5577.0625,3016.9063 5577.75,3017.9844 Q5578.4375,3019.0469 5579.7813,3019.0469 Q5580.4063,3019.0469 5581,3018.7813 Q5581.5938,3018.5 5582.2188,3017.9219 L5582.2188,3020.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="5599.75" y="3019.1543">TLSPolicy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5294" x2="5929" y1="3031" y2="3031"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5294" x2="5929" y1="3039" y2="3039"/><ellipse cx="5304" cy="3050" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="560" x="5313" y="3053.2104">setConfCmds(const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3062.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="5313" y="3066.0151">setHostname(const std::string &amp; hostname) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3075.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="5313" y="3078.8198">setCertPath(const std::string &amp; certPath) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3088.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="5313" y="3091.6245">setKeyPath(const std::string &amp; keyPath) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3101.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="5313" y="3104.4292">setCaPath(const std::string &amp; caPath) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3114.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5313" y="3117.2339">setUseOldTLS(bool useOldTLS) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3126.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="5313" y="3130.0386">setAlpnProtocols(const std::vector&lt;std::string&gt; &amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3139.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="5313" y="3142.8433">setAlpnProtocols(std::vector&lt;std::string&gt; &amp;&amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3152.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5313" y="3155.6479">setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3165.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="5313" y="3168.4526">setValidate(bool enable) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3178.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="5313" y="3181.2573">setAllowBrokenChain(bool allow) : TLSPolicy &amp;</text><ellipse cx="5304" cy="3190.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="5313" y="3194.062">getConfCmds() const : const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp;</text><ellipse cx="5304" cy="3203.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="5313" y="3206.8667">getHostname() const : const std::string &amp;</text><ellipse cx="5304" cy="3216.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="5313" y="3219.6714">getCertPath() const : const std::string &amp;</text><ellipse cx="5304" cy="3229.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="5313" y="3232.4761">getKeyPath() const : const std::string &amp;</text><ellipse cx="5304" cy="3242.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="5313" y="3245.2808">getCaPath() const : const std::string &amp;</text><ellipse cx="5304" cy="3254.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="5313" y="3258.0854">getUseOldTLS() const : bool</text><ellipse cx="5304" cy="3267.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="5313" y="3270.8901">getValidate() const : bool</text><ellipse cx="5304" cy="3280.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="5313" y="3283.6948">getAllowBrokenChain() const : bool</text><ellipse cx="5304" cy="3293.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="5313" y="3296.4995">getAlpnProtocols() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="5304" cy="3306.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="5313" y="3309.3042">getAlpnProtocols() : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="5304" cy="3318.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5313" y="3322.1089">getUseSystemCertStore() const : bool</text><ellipse cx="5304" cy="3331.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="611" x="5313" y="3334.9136">defaultServerPolicy(const std::string &amp; certPath, const std::string &amp; keyPath) : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="5304" cy="3344.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="478" x="5313" y="3347.7183">defaultClientPolicy(const std::string &amp; hostname = "") : std::shared_ptr&lt;TLSPolicy&gt;</text><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="726.6484" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1413" x="4603" y="827"/><ellipse cx="5258.75" cy="843" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5258.8594,838.3438 L5257.7031,843.4219 L5260.0313,843.4219 L5258.8594,838.3438 Z M5257.375,836.1094 L5260.3594,836.1094 L5263.7188,848.5 L5261.2656,848.5 L5260.5,845.4375 L5257.2188,845.4375 L5256.4688,848.5 L5254.0313,848.5 L5257.375,836.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="5279.25" y="847.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4604" x2="6015" y1="859" y2="859"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4604" x2="6015" y1="867" y2="867"/><ellipse cx="4614" cy="878" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="4623" y="881.2104">TcpConnection() = default : void</text><ellipse cx="4614" cy="890.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="4623" y="894.0151">~TcpConnection() : void</text><ellipse cx="4614" cy="903.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="4623" y="906.8198">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="4614" cy="916.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="4623" y="919.6245">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="4614" cy="929.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="4623" y="932.4292">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="4614" cy="942.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="4623" y="945.2339">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="4614" cy="954.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="4623" y="958.0386">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="4614" cy="967.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="4623" y="970.8433">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="4614" cy="980.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4623" y="983.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4614" cy="993.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="4623" y="996.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="4614" cy="1006.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="4623" y="1009.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4614" cy="1018.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="4623" y="1022.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="4614" cy="1031.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="4623" y="1034.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="4614" cy="1044.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4623" y="1047.6714">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4614" cy="1057.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="4623" y="1060.4761">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="4614" cy="1070.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="4623" y="1073.2808">connected() const = 0 : bool</text><ellipse cx="4614" cy="1082.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4623" y="1086.0854">disconnected() const = 0 : bool</text><ellipse cx="4614" cy="1095.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="4623" y="1098.8901">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="4614" cy="1108.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4623" y="1111.6948">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="4614" cy="1121.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="4623" y="1124.4995">shutdown() = 0 : void</text><ellipse cx="4614" cy="1134.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="4623" y="1137.3042">forceClose() = 0 : void</text><ellipse cx="4614" cy="1146.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="4623" y="1150.1089">getLoop() = 0 : EventLoop *</text><ellipse cx="4614" cy="1159.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="4623" y="1162.9136">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="4614" cy="1172.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="4623" y="1175.7183">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="4614" cy="1185.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="242" x="4623" y="1188.5229">applicationProtocol() const = 0 : std::string</text><ellipse cx="4614" cy="1198.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4623" y="1201.3276">hasContext() const : bool</text><ellipse cx="4614" cy="1210.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="4623" y="1214.1323">clearContext() : void</text><ellipse cx="4614" cy="1223.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="4623" y="1226.937">keepAlive() = 0 : void</text><ellipse cx="4614" cy="1236.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="4623" y="1239.7417">isKeepAlive() = 0 : bool</text><ellipse cx="4614" cy="1249.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="4623" y="1252.5464">bytesSent() const = 0 : size_t</text><ellipse cx="4614" cy="1262.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="4623" y="1265.3511">bytesReceived() const = 0 : size_t</text><ellipse cx="4614" cy="1274.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="4623" y="1278.1558">isSSLConnection() const = 0 : bool</text><ellipse cx="4614" cy="1287.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="4623" y="1290.9604">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="4614" cy="1300.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="4623" y="1303.7651">peerCertificate() const = 0 : CertificatePtr</text><ellipse cx="4614" cy="1313.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="4623" y="1316.5698">sniName() const = 0 : std::string</text><ellipse cx="4614" cy="1326.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="772" x="4623" y="1329.3745">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) = 0 : void</text><ellipse cx="4614" cy="1338.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1387" x="4623" y="1342.1792">startClientEncryption(std::function&lt;void (const TcpConnectionPtr &amp;)&gt; &amp;&amp; callback, bool useOldTLS = false, bool validateCert = true, const std::string &amp; hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="4623" y="1354.9839">{}) : void</text><ellipse cx="4614" cy="1364.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="4623" y="1367.7886">setValidationPolicy(TLSPolicy &amp;&amp; policy) : void</text><ellipse cx="4614" cy="1377.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4623" y="1380.5933">setRecvMsgCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="4614" cy="1390.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4623" y="1393.3979">setRecvMsgCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="4614" cy="1402.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4623" y="1406.2026">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="4614" cy="1415.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4623" y="1419.0073">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4614" cy="1428.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="4623" y="1431.812">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="4614" cy="1441.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="4623" y="1444.6167">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="4614" cy="1454.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="4623" y="1457.4214">setCloseCallback(const CloseCallback &amp; cb) : void</text><ellipse cx="4614" cy="1467.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4623" y="1470.2261">setCloseCallback(CloseCallback &amp;&amp; cb) : void</text><ellipse cx="4614" cy="1479.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="4623" y="1483.0308">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="4614" cy="1492.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4623" y="1495.8354">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4614" cy="1505.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="4623" y="1508.6401">connectEstablished() = 0 : void</text><ellipse cx="4614" cy="1518.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="170" x="4623" y="1521.4448">connectDestroyed() = 0 : void</text><ellipse cx="4614" cy="1531.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="547" x="4623" y="1534.2495">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) = 0 : void</text><ellipse cx="4614" cy="1543.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4623" y="1547.0542">getContext&lt;T&gt;() : std::shared_ptr&lt;T&gt;</text><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="112.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="2995.5" y="2605"/><ellipse cx="3299.25" cy="2621" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3302.2188,2626.6406 Q3301.6406,2626.9375 3301,2627.0781 Q3300.3594,2627.2344 3299.6563,2627.2344 Q3297.1563,2627.2344 3295.8281,2625.5938 Q3294.5156,2623.9375 3294.5156,2620.8125 Q3294.5156,2617.6875 3295.8281,2616.0313 Q3297.1563,2614.375 3299.6563,2614.375 Q3300.3594,2614.375 3301,2614.5313 Q3301.6563,2614.6875 3302.2188,2614.9844 L3302.2188,2617.7031 Q3301.5938,2617.125 3301,2616.8594 Q3300.4063,2616.5781 3299.7813,2616.5781 Q3298.4375,2616.5781 3297.75,2617.6563 Q3297.0625,2618.7188 3297.0625,2620.8125 Q3297.0625,2622.9063 3297.75,2623.9844 Q3298.4375,2625.0469 3299.7813,2625.0469 Q3300.4063,2625.0469 3301,2624.7813 Q3301.5938,2624.5 3302.2188,2623.9219 L3302.2188,2626.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="3319.75" y="2625.1543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2996.5" x2="3688.5" y1="2637" y2="2637"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2996.5" x2="3688.5" y1="2645" y2="2645"/><ellipse cx="3006.5" cy="2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="3015.5" y="2659.2104">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="3006.5" cy="2668.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="3015.5" y="2672.0151">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="3006.5" cy="2681.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="3015.5" y="2684.8198">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="3006.5" cy="2694.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="3015.5" y="2697.6245">getLoop() : EventLoop *</text><ellipse cx="3006.5" cy="2707.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="3015.5" y="2710.4292">~TimingWheel() : void</text><!--MD5=[1a78d5db763eaae95321a32dcf46614d]
class C_0002013739811805694444--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="73.6094" id="C_0002013739811805694444" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="2995.5" y="2039"/><ellipse cx="3049.25" cy="2055" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3052.2188,2060.6406 Q3051.6406,2060.9375 3051,2061.0781 Q3050.3594,2061.2344 3049.6563,2061.2344 Q3047.1563,2061.2344 3045.8281,2059.5938 Q3044.5156,2057.9375 3044.5156,2054.8125 Q3044.5156,2051.6875 3045.8281,2050.0313 Q3047.1563,2048.375 3049.6563,2048.375 Q3050.3594,2048.375 3051,2048.5313 Q3051.6563,2048.6875 3052.2188,2048.9844 L3052.2188,2051.7031 Q3051.5938,2051.125 3051,2050.8594 Q3050.4063,2050.5781 3049.7813,2050.5781 Q3048.4375,2050.5781 3047.75,2051.6563 Q3047.0625,2052.7188 3047.0625,2054.8125 Q3047.0625,2056.9063 3047.75,2057.9844 Q3048.4375,2059.0469 3049.7813,2059.0469 Q3050.4063,2059.0469 3051,2058.7813 Q3051.5938,2058.5 3052.2188,2057.9219 L3052.2188,2060.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="3069.75" y="2059.1543">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2996.5" x2="3280.5" y1="2071" y2="2071"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2996.5" x2="3280.5" y1="2079" y2="2079"/><ellipse cx="3006.5" cy="2090" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="3015.5" y="2093.2104">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="3006.5" cy="2102.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="3015.5" y="2106.0151">~CallbackEntry() : void</text><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="329.7031" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="985" x="5008" y="223"/><ellipse cx="5465.25" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5468.2188,244.6406 Q5467.6406,244.9375 5467,245.0781 Q5466.3594,245.2344 5465.6563,245.2344 Q5463.1563,245.2344 5461.8281,243.5938 Q5460.5156,241.9375 5460.5156,238.8125 Q5460.5156,235.6875 5461.8281,234.0313 Q5463.1563,232.375 5465.6563,232.375 Q5466.3594,232.375 5467,232.5313 Q5467.6563,232.6875 5468.2188,232.9844 L5468.2188,235.7031 Q5467.5938,235.125 5467,234.8594 Q5466.4063,234.5781 5465.7813,234.5781 Q5464.4375,234.5781 5463.75,235.6563 Q5463.0625,236.7188 5463.0625,238.8125 Q5463.0625,240.9063 5463.75,241.9844 Q5464.4375,243.0469 5465.7813,243.0469 Q5466.4063,243.0469 5467,242.7813 Q5467.5938,242.5 5468.2188,241.9219 L5468.2188,244.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="5485.75" y="243.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5009" x2="5992" y1="255" y2="255"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5009" x2="5992" y1="263" y2="263"/><ellipse cx="5019" cy="274" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="745" x="5028" y="277.2104">TcpServer(EventLoop * loop, const InetAddress &amp; address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="5019" cy="286.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5028" y="290.0151">~TcpServer() : void</text><ellipse cx="5019" cy="299.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5028" y="302.8198">start() : void</text><ellipse cx="5019" cy="312.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5028" y="315.6245">stop() : void</text><ellipse cx="5019" cy="325.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5028" y="328.4292">setIoLoopNum(size_t num) : void</text><ellipse cx="5019" cy="338.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5028" y="341.2339">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="5019" cy="350.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5028" y="354.0386">setIoLoops(const std::vector&lt;EventLoop *&gt; &amp; ioLoops) : void</text><ellipse cx="5019" cy="363.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="5028" y="366.8433">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5019" cy="376.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="5028" y="379.6479">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5019" cy="389.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5028" y="392.4526">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5019" cy="402.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5028" y="405.2573">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5019" cy="414.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5028" y="418.062">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5019" cy="427.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5028" y="430.8667">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5019" cy="440.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5028" y="443.6714">name() const : const std::string &amp;</text><ellipse cx="5019" cy="453.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5028" y="456.4761">ipPort() const : std::string</text><ellipse cx="5019" cy="466.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5028" y="469.2808">address() const : const InetAddress &amp;</text><ellipse cx="5019" cy="478.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5028" y="482.0854">getLoop() const : EventLoop *</text><ellipse cx="5019" cy="491.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="5028" y="494.8901">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="5019" cy="504.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="5028" y="507.6948">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="5019" cy="517.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="959" x="5028" y="520.4995">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5028" y="533.3042">{}, const std::string &amp; caPath = "") : void</text><ellipse cx="5019" cy="542.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5028" y="546.1089">enableSSL(TLSPolicyPtr policy) : void</text><!--MD5=[094a28402c24830a9b549b01e4879f1e]
class C_0001489562721151066050--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="60.8047" id="C_0001489562721151066050" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="7433.5" y="46.5"/><ellipse cx="7448.5" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7451.4688,68.1406 Q7450.8906,68.4375 7450.25,68.5781 Q7449.6094,68.7344 7448.9063,68.7344 Q7446.4063,68.7344 7445.0781,67.0938 Q7443.7656,65.4375 7443.7656,62.3125 Q7443.7656,59.1875 7445.0781,57.5313 Q7446.4063,55.875 7448.9063,55.875 Q7449.6094,55.875 7450.25,56.0313 Q7450.9063,56.1875 7451.4688,56.4844 L7451.4688,59.2031 Q7450.8438,58.625 7450.25,58.3594 Q7449.6563,58.0781 7449.0313,58.0781 Q7447.6875,58.0781 7447,59.1563 Q7446.3125,60.2188 7446.3125,62.3125 Q7446.3125,64.4063 7447,65.4844 Q7447.6875,66.5469 7449.0313,66.5469 Q7449.6563,66.5469 7450.25,66.2813 Q7450.8438,66 7451.4688,65.4219 L7451.4688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="7462.5" y="66.6543">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7434.5" x2="7620.5" y1="78.5" y2="78.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7434.5" x2="7620.5" y1="86.5" y2="86.5"/><ellipse cx="7444.5" cy="97.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7453.5" y="100.7104">IgnoreSigPipe() : void</text><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="304.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="7655.5" y="3024.5"/><ellipse cx="7786.75" cy="3040.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7789.7188,3046.1406 Q7789.1406,3046.4375 7788.5,3046.5781 Q7787.8594,3046.7344 7787.1563,3046.7344 Q7784.6563,3046.7344 7783.3281,3045.0938 Q7782.0156,3043.4375 7782.0156,3040.3125 Q7782.0156,3037.1875 7783.3281,3035.5313 Q7784.6563,3033.875 7787.1563,3033.875 Q7787.8594,3033.875 7788.5,3034.0313 Q7789.1563,3034.1875 7789.7188,3034.4844 L7789.7188,3037.2031 Q7789.0938,3036.625 7788.5,3036.3594 Q7787.9063,3036.0781 7787.2813,3036.0781 Q7785.9375,3036.0781 7785.25,3037.1563 Q7784.5625,3038.2188 7784.5625,3040.3125 Q7784.5625,3042.4063 7785.25,3043.4844 Q7785.9375,3044.5469 7787.2813,3044.5469 Q7787.9063,3044.5469 7788.5,3044.2813 Q7789.0938,3044 7789.7188,3043.4219 L7789.7188,3046.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="7807.25" y="3044.6543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7656.5" x2="7968.5" y1="3056.5" y2="3056.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7656.5" x2="7968.5" y1="3064.5" y2="3064.5"/><ellipse cx="7666.5" cy="3075.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="7675.5" y="3078.7104">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="7666.5" cy="3088.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="7675.5" y="3091.5151">getSocketError(int sockfd) : int</text><ellipse cx="7666.5" cy="3101.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="7675.5" y="3104.3198">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="7666.5" cy="3113.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="7675.5" y="3117.1245">isSelfConnect(int sockfd) : bool</text><ellipse cx="7666.5" cy="3126.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="7675.5" y="3129.9292">Socket(int sockfd) : void</text><ellipse cx="7666.5" cy="3139.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7675.5" y="3142.7339">~Socket() : void</text><ellipse cx="7666.5" cy="3152.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7675.5" y="3155.5386">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="7666.5" cy="3165.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7675.5" y="3168.3433">listen() : void</text><ellipse cx="7666.5" cy="3177.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="7675.5" y="3181.1479">accept(InetAddress * peeraddr) : int</text><ellipse cx="7666.5" cy="3190.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7675.5" y="3193.9526">closeWrite() : void</text><ellipse cx="7666.5" cy="3203.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="7675.5" y="3206.7573">read(char * buffer, uint64_t len) : int</text><ellipse cx="7666.5" cy="3216.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="7675.5" y="3219.562">fd() : int</text><ellipse cx="7666.5" cy="3229.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="7675.5" y="3232.3667">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="7666.5" cy="3241.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="7675.5" y="3245.1714">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="7666.5" cy="3254.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="7675.5" y="3257.9761">setTcpNoDelay(bool on) : void</text><ellipse cx="7666.5" cy="3267.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="7675.5" y="3270.7808">setReuseAddr(bool on) : void</text><ellipse cx="7666.5" cy="3280.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="7675.5" y="3283.5854">setReusePort(bool on) : void</text><ellipse cx="7666.5" cy="3293.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="7675.5" y="3296.3901">setKeepAlive(bool on) : void</text><ellipse cx="7666.5" cy="3305.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="7675.5" y="3309.1948">getSocketError() : int</text><ellipse cx="7666.5" cy="3318.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="7675.5" y="3321.9995">setNonBlockAndCloseOnExec(int sockfd) : void</text><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="419.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="6028.5" y="4571"/><ellipse cx="6180.75" cy="4587" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6183.7188,4592.6406 Q6183.1406,4592.9375 6182.5,4593.0781 Q6181.8594,4593.2344 6181.1563,4593.2344 Q6178.6563,4593.2344 6177.3281,4591.5938 Q6176.0156,4589.9375 6176.0156,4586.8125 Q6176.0156,4583.6875 6177.3281,4582.0313 Q6178.6563,4580.375 6181.1563,4580.375 Q6181.8594,4580.375 6182.5,4580.5313 Q6183.1563,4580.6875 6183.7188,4580.9844 L6183.7188,4583.7031 Q6183.0938,4583.125 6182.5,4582.8594 Q6181.9063,4582.5781 6181.2813,4582.5781 Q6179.9375,4582.5781 6179.25,4583.6563 Q6178.5625,4584.7188 6178.5625,4586.8125 Q6178.5625,4588.9063 6179.25,4589.9844 Q6179.9375,4591.0469 6181.2813,4591.0469 Q6181.9063,4591.0469 6182.5,4590.7813 Q6183.0938,4590.5 6183.7188,4589.9219 L6183.7188,4592.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="6201.25" y="4591.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6029.5" x2="6391.5" y1="4603" y2="4603"/><ellipse cx="6039.5" cy="4614" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="6048.5" y="4617.2104">kNoneEvent : const int</text><ellipse cx="6039.5" cy="4626.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="6048.5" y="4630.0151">kReadEvent : const int</text><ellipse cx="6039.5" cy="4639.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="6048.5" y="4642.8198">kWriteEvent : const int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6029.5" x2="6391.5" y1="4649.4141" y2="4649.4141"/><ellipse cx="6039.5" cy="4660.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="6048.5" y="4663.6245">Channel(EventLoop * loop, int fd) : void</text><ellipse cx="6039.5" cy="4673.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="6048.5" y="4676.4292">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6039.5" cy="4686.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="6048.5" y="4689.2339">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6039.5" cy="4698.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="6048.5" y="4702.0386">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6039.5" cy="4711.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="6048.5" y="4714.8433">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6039.5" cy="4724.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="6048.5" y="4727.6479">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6039.5" cy="4737.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="6048.5" y="4740.4526">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6039.5" cy="4750.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="6048.5" y="4753.2573">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6039.5" cy="4762.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="6048.5" y="4766.062">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6039.5" cy="4775.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="6048.5" y="4778.8667">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="6039.5" cy="4788.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="6048.5" y="4791.6714">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="6039.5" cy="4801.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="6048.5" y="4804.4761">fd() const : int</text><ellipse cx="6039.5" cy="4814.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6048.5" y="4817.2808">events() const : int</text><ellipse cx="6039.5" cy="4826.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="6048.5" y="4830.0854">revents() const : int</text><ellipse cx="6039.5" cy="4839.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="6048.5" y="4842.8901">isNoneEvent() const : bool</text><ellipse cx="6039.5" cy="4852.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="6048.5" y="4855.6948">disableAll() : void</text><ellipse cx="6039.5" cy="4865.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="6048.5" y="4868.4995">remove() : void</text><ellipse cx="6039.5" cy="4878.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="6048.5" y="4881.3042">ownerLoop() : EventLoop *</text><ellipse cx="6039.5" cy="4890.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="6048.5" y="4894.1089">enableReading() : void</text><ellipse cx="6039.5" cy="4903.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="6048.5" y="4906.9136">disableReading() : void</text><ellipse cx="6039.5" cy="4916.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6048.5" y="4919.7183">enableWriting() : void</text><ellipse cx="6039.5" cy="4929.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6048.5" y="4932.5229">disableWriting() : void</text><ellipse cx="6039.5" cy="4942.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="6048.5" y="4945.3276">isWriting() const : bool</text><ellipse cx="6039.5" cy="4954.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6048.5" y="4958.1323">isReading() const : bool</text><ellipse cx="6039.5" cy="4967.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="6048.5" y="4970.937">updateEvents(int events) : void</text><ellipse cx="6039.5" cy="4980.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="6048.5" y="4983.7417">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="112.0234" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="7926.5" y="2605"/><ellipse cx="8213.25" cy="2621" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8216.2188,2626.6406 Q8215.6406,2626.9375 8215,2627.0781 Q8214.3594,2627.2344 8213.6563,2627.2344 Q8211.1563,2627.2344 8209.8281,2625.5938 Q8208.5156,2623.9375 8208.5156,2620.8125 Q8208.5156,2617.6875 8209.8281,2616.0313 Q8211.1563,2614.375 8213.6563,2614.375 Q8214.3594,2614.375 8215,2614.5313 Q8215.6563,2614.6875 8216.2188,2614.9844 L8216.2188,2617.7031 Q8215.5938,2617.125 8215,2616.8594 Q8214.4063,2616.5781 8213.7813,2616.5781 Q8212.4375,2616.5781 8211.75,2617.6563 Q8211.0625,2618.7188 8211.0625,2620.8125 Q8211.0625,2622.9063 8211.75,2623.9844 Q8212.4375,2625.0469 8213.7813,2625.0469 Q8214.4063,2625.0469 8215,2624.7813 Q8215.5938,2624.5 8216.2188,2623.9219 L8216.2188,2626.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="8233.75" y="2625.1543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7927.5" x2="8563.5" y1="2637" y2="2637"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7927.5" x2="8563.5" y1="2645" y2="2645"/><ellipse cx="7937.5" cy="2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="7946.5" y="2659.2104">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="7937.5" cy="2668.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7946.5" y="2672.0151">~Acceptor() : void</text><ellipse cx="7937.5" cy="2681.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7946.5" y="2684.8198">addr() const : const InetAddress &amp;</text><ellipse cx="7937.5" cy="2694.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="7946.5" y="2697.6245">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><ellipse cx="7937.5" cy="2707.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="7946.5" y="2710.4292">listen() : void</text><!--MD5=[bf31e704e42c877df2dec6bd5fd054fb]
class C_0000464040622375950341--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="278.4844" id="C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="4009" y="2522"/><ellipse cx="4210.25" cy="2538" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4210.3594,2533.3438 L4209.2031,2538.4219 L4211.5313,2538.4219 L4210.3594,2533.3438 Z M4208.875,2531.1094 L4211.8594,2531.1094 L4215.2188,2543.5 L4212.7656,2543.5 L4212,2540.4375 L4208.7188,2540.4375 L4207.9688,2543.5 L4205.5313,2543.5 L4208.875,2531.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="4230.75" y="2542.1543">TLSProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4010" x2="4491" y1="2554" y2="2554"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4010" x2="4491" y1="2562" y2="2562"/><ellipse cx="4020" cy="2573" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="4029" y="2576.2104">TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void</text><ellipse cx="4020" cy="2585.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4029" y="2589.0151">~TLSProvider() = default : void</text><ellipse cx="4020" cy="2598.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="224" x="4029" y="2601.8198">recvData(MsgBuffer * buffer) = 0 : void</text><ellipse cx="4020" cy="2611.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="290" x="4029" y="2614.6245">sendData(const char * ptr, size_t size) = 0 : ssize_t</text><ellipse cx="4020" cy="2624.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="4029" y="2627.4292">close() = 0 : void</text><ellipse cx="4020" cy="2637.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="4029" y="2640.2339">startEncryption() = 0 : void</text><ellipse cx="4020" cy="2649.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="4029" y="2653.0386">sendBufferedData() : bool</text><ellipse cx="4020" cy="2662.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="4029" y="2665.8433">getBufferedData() : MsgBuffer &amp;</text><ellipse cx="4020" cy="2675.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="4029" y="2678.6479">appendToWriteBuffer(const char * ptr, size_t size) : void</text><ellipse cx="4020" cy="2688.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="4029" y="2691.4526">setWriteCallback(TLSProvider::WriteCallback cb) : void</text><ellipse cx="4020" cy="2701.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4029" y="2704.2573">setErrorCallback(TLSProvider::ErrorCallback cb) : void</text><ellipse cx="4020" cy="2713.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="4029" y="2717.062">setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void</text><ellipse cx="4020" cy="2726.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="4029" y="2729.8667">setMessageCallback(TLSProvider::MessageCallback cb) : void</text><ellipse cx="4020" cy="2739.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4029" y="2742.6714">setCloseCallback(TLSProvider::CloseCallback cb) : void</text><ellipse cx="4020" cy="2752.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4029" y="2755.4761">getRecvBuffer() : MsgBuffer &amp;</text><ellipse cx="4020" cy="2765.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="4029" y="2768.2808">peerCertificate() const : const CertificatePtr &amp;</text><ellipse cx="4020" cy="2777.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="4029" y="2781.0854">applicationProtocol() const : const std::string &amp;</text><ellipse cx="4020" cy="2790.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4029" y="2793.8901">sniName() const : const std::string &amp;</text><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="496.1641" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1036" x="4163.5" y="1828"/><ellipse cx="4618.25" cy="1844" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4621.2188,1849.6406 Q4620.6406,1849.9375 4620,1850.0781 Q4619.3594,1850.2344 4618.6563,1850.2344 Q4616.1563,1850.2344 4614.8281,1848.5938 Q4613.5156,1846.9375 4613.5156,1843.8125 Q4613.5156,1840.6875 4614.8281,1839.0313 Q4616.1563,1837.375 4618.6563,1837.375 Q4619.3594,1837.375 4620,1837.5313 Q4620.6563,1837.6875 4621.2188,1837.9844 L4621.2188,1840.7031 Q4620.5938,1840.125 4620,1839.8594 Q4619.4063,1839.5781 4618.7813,1839.5781 Q4617.4375,1839.5781 4616.75,1840.6563 Q4616.0625,1841.7188 4616.0625,1843.8125 Q4616.0625,1845.9063 4616.75,1846.9844 Q4617.4375,1848.0469 4618.7813,1848.0469 Q4619.4063,1848.0469 4620,1847.7813 Q4620.5938,1847.5 4621.2188,1846.9219 L4621.2188,1849.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="4638.75" y="1848.1543">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4164.5" x2="5198.5" y1="1860" y2="1860"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4164.5" x2="5198.5" y1="1868" y2="1868"/><ellipse cx="4174.5" cy="1879" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1010" x="4183.5" y="1882.2104">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void</text><ellipse cx="4174.5" cy="1891.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="4183.5" y="1895.0151">~TcpConnectionImpl() : void</text><ellipse cx="4174.5" cy="1904.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4183.5" y="1907.8198">send(const char * msg, size_t len) : void</text><ellipse cx="4174.5" cy="1917.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="4183.5" y="1920.6245">send(const void * msg, size_t len) : void</text><ellipse cx="4174.5" cy="1930.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4183.5" y="1933.4292">send(const std::string &amp; msg) : void</text><ellipse cx="4174.5" cy="1943.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="4183.5" y="1946.2339">send(std::string &amp;&amp; msg) : void</text><ellipse cx="4174.5" cy="1955.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="4183.5" y="1959.0386">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="4174.5" cy="1968.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4183.5" y="1971.8433">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="4174.5" cy="1981.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="4183.5" y="1984.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="4174.5" cy="1994.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="4183.5" y="1997.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="4174.5" cy="2007.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="4183.5" y="2010.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="4174.5" cy="2019.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="4183.5" y="2023.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="4174.5" cy="2032.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="4183.5" y="2035.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="4174.5" cy="2045.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4183.5" y="2048.6714">localAddr() const : const InetAddress &amp;</text><ellipse cx="4174.5" cy="2058.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="4183.5" y="2061.4761">peerAddr() const : const InetAddress &amp;</text><ellipse cx="4174.5" cy="2071.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4183.5" y="2074.2808">connected() const : bool</text><ellipse cx="4174.5" cy="2083.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="4183.5" y="2087.0854">disconnected() const : bool</text><ellipse cx="4174.5" cy="2096.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="4183.5" y="2099.8901">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="4174.5" cy="2109.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="4183.5" y="2112.6948">keepAlive() : void</text><ellipse cx="4174.5" cy="2122.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4183.5" y="2125.4995">isKeepAlive() : bool</text><ellipse cx="4174.5" cy="2135.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4183.5" y="2138.3042">setTcpNoDelay(bool on) : void</text><ellipse cx="4174.5" cy="2147.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4183.5" y="2151.1089">shutdown() : void</text><ellipse cx="4174.5" cy="2160.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="4183.5" y="2163.9136">forceClose() : void</text><ellipse cx="4174.5" cy="2173.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="4183.5" y="2176.7183">getLoop() : EventLoop *</text><ellipse cx="4174.5" cy="2186.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="4183.5" y="2189.5229">bytesSent() const : size_t</text><ellipse cx="4174.5" cy="2199.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4183.5" y="2202.3276">bytesReceived() const : size_t</text><ellipse cx="4174.5" cy="2211.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="4183.5" y="2215.1323">isSSLConnection() const : bool</text><ellipse cx="4174.5" cy="2224.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4183.5" y="2227.937">connectEstablished() : void</text><ellipse cx="4174.5" cy="2237.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="4183.5" y="2240.7417">connectDestroyed() : void</text><ellipse cx="4174.5" cy="2250.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="4183.5" y="2253.5464">getRecvBuffer() : MsgBuffer *</text><ellipse cx="4174.5" cy="2263.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="4183.5" y="2266.3511">applicationProtocol() const : std::string</text><ellipse cx="4174.5" cy="2275.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="4183.5" y="2279.1558">peerCertificate() const : CertificatePtr</text><ellipse cx="4174.5" cy="2288.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4183.5" y="2291.9604">sniName() const : std::string</text><ellipse cx="4174.5" cy="2301.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="749" x="4183.5" y="2304.7651">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) : void</text><ellipse cx="4174.5" cy="2314.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="4183.5" y="2317.5698">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) : void</text><!--MD5=[fd31fd44dd4b53895283cc4ebf0192ff]
class C_0002266895444343633259--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0002266895444343633259" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="9400" y="345"/><ellipse cx="9493.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9496.2188,366.6406 Q9495.6406,366.9375 9495,367.0781 Q9494.3594,367.2344 9493.6563,367.2344 Q9491.1563,367.2344 9489.8281,365.5938 Q9488.5156,363.9375 9488.5156,360.8125 Q9488.5156,357.6875 9489.8281,356.0313 Q9491.1563,354.375 9493.6563,354.375 Q9494.3594,354.375 9495,354.5313 Q9495.6563,354.6875 9496.2188,354.9844 L9496.2188,357.7031 Q9495.5938,357.125 9495,356.8594 Q9494.4063,356.5781 9493.7813,356.5781 Q9492.4375,356.5781 9491.75,357.6563 Q9491.0625,358.7188 9491.0625,360.8125 Q9491.0625,362.9063 9491.75,363.9844 Q9492.4375,365.0469 9493.7813,365.0469 Q9494.4063,365.0469 9495,364.7813 Q9495.5938,364.5 9496.2188,363.9219 L9496.2188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="9513.75" y="365.1543">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9401" x2="9792" y1="377" y2="377"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="9401" x2="9792" y1="385" y2="385"/><ellipse cx="9411" cy="396" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="9420" y="399.2104">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="9411" cy="408.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="9420" y="412.0151">reset() : void</text><ellipse cx="9411" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="9420" y="424.8198">~KickoffEntry() : void</text><!--MD5=[87de1d9bdb2486f0ceeb68ee204e5830]
class C_0001029063960859366412--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="163.2422" id="C_0001029063960859366412" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="3634.5" y="1109"/><ellipse cx="3726.25" cy="1125" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3729.2188,1130.6406 Q3728.6406,1130.9375 3728,1131.0781 Q3727.3594,1131.2344 3726.6563,1131.2344 Q3724.1563,1131.2344 3722.8281,1129.5938 Q3721.5156,1127.9375 3721.5156,1124.8125 Q3721.5156,1121.6875 3722.8281,1120.0313 Q3724.1563,1118.375 3726.6563,1118.375 Q3727.3594,1118.375 3728,1118.5313 Q3728.6563,1118.6875 3729.2188,1118.9844 L3729.2188,1121.7031 Q3728.5938,1121.125 3728,1120.8594 Q3727.4063,1120.5781 3726.7813,1120.5781 Q3725.4375,1120.5781 3724.75,1121.6563 Q3724.0625,1122.7188 3724.0625,1124.8125 Q3724.0625,1126.9063 3724.75,1127.9844 Q3725.4375,1129.0469 3726.7813,1129.0469 Q3727.4063,1129.0469 3728,1128.7813 Q3728.5938,1128.5 3729.2188,1127.9219 L3729.2188,1130.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="3746.75" y="1129.1543">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3635.5" x2="4021.5" y1="1141" y2="1141"/><ellipse cx="3645.5" cy="1152" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3654.5" y="1155.2104">sendFd_ : int</text><ellipse cx="3645.5" cy="1164.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3654.5" y="1168.0151">offset_ : off_t</text><ellipse cx="3645.5" cy="1177.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3654.5" y="1180.8198">fileBytesToSend_ : ssize_t</text><ellipse cx="3645.5" cy="1190.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3654.5" y="1193.6245">nDataWritten_ : std::size_t</text><ellipse cx="3645.5" cy="1203.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3654.5" y="1206.4292">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><ellipse cx="3645.5" cy="1216.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3654.5" y="1219.2339">closeConnection_ : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3635.5" x2="4021.5" y1="1225.8281" y2="1225.8281"/><ellipse cx="3645.5" cy="1236.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="3654.5" y="1240.0386">isFile() const : bool</text><ellipse cx="3645.5" cy="1249.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3654.5" y="1252.8433">~BufferNode() : void</text><ellipse cx="3645.5" cy="1262.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3654.5" y="1265.6479">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[8afb725b5f97df604240a26bac5b9bd6]
class C_0001727349338344491225--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="99.2188" id="C_0001727349338344491225" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="4194" y="1141"/><ellipse cx="4209" cy="1157" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4213.1094,1163 L4205.3906,1163 L4205.3906,1150.6094 L4213.1094,1150.6094 L4213.1094,1152.7656 L4207.8438,1152.7656 L4207.8438,1155.4375 L4212.6094,1155.4375 L4212.6094,1157.5938 L4207.8438,1157.5938 L4207.8438,1160.8438 L4213.1094,1160.8438 L4213.1094,1163 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="4223" y="1161.1543">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4195" x2="4424" y1="1173" y2="1173"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4200" y="1187.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4200" y="1200.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4200" y="1212.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="4200" y="1225.6245">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4195" x2="4424" y1="1232.2188" y2="1232.2188"/><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="150.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="5382" y="4203"/><ellipse cx="5542.25" cy="4219" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5542.3594,4214.3438 L5541.2031,4219.4219 L5543.5313,4219.4219 L5542.3594,4214.3438 Z M5540.875,4212.1094 L5543.8594,4212.1094 L5547.2188,4224.5 L5544.7656,4224.5 L5544,4221.4375 L5540.7188,4221.4375 L5539.9688,4224.5 L5537.5313,4224.5 L5540.875,4212.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="5562.75" y="4223.1543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5383" x2="5744" y1="4235" y2="4235"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5383" x2="5744" y1="4243" y2="4243"/><ellipse cx="5393" cy="4254" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5402" y="4257.2104">Poller(EventLoop * loop) : void</text><ellipse cx="5393" cy="4266.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5402" y="4270.0151">~Poller() : void</text><ellipse cx="5393" cy="4279.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5402" y="4282.8198">assertInLoopThread() : void</text><ellipse cx="5393" cy="4292.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="5402" y="4295.6245">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="5393" cy="4305.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="5402" y="4308.4292">updateChannel(Channel * channel) = 0 : void</text><ellipse cx="5393" cy="4318.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="5402" y="4321.2339">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="5393" cy="4330.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5402" y="4334.0386">resetAfterFork() : void</text><ellipse cx="5393" cy="4343.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="5402" y="4346.8433">newPoller(EventLoop * loop) : Poller *</text><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="137.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="8124" y="4209"/><ellipse cx="8386.75" cy="4225" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8389.7188,4230.6406 Q8389.1406,4230.9375 8388.5,4231.0781 Q8387.8594,4231.2344 8387.1563,4231.2344 Q8384.6563,4231.2344 8383.3281,4229.5938 Q8382.0156,4227.9375 8382.0156,4224.8125 Q8382.0156,4221.6875 8383.3281,4220.0313 Q8384.6563,4218.375 8387.1563,4218.375 Q8387.8594,4218.375 8388.5,4218.5313 Q8389.1563,4218.6875 8389.7188,4218.9844 L8389.7188,4221.7031 Q8389.0938,4221.125 8388.5,4220.8594 Q8387.9063,4220.5781 8387.2813,4220.5781 Q8385.9375,4220.5781 8385.25,4221.6563 Q8384.5625,4222.7188 8384.5625,4224.8125 Q8384.5625,4226.9063 8385.25,4227.9844 Q8385.9375,4229.0469 8387.2813,4229.0469 Q8387.9063,4229.0469 8388.5,4228.7813 Q8389.0938,4228.5 8389.7188,4227.9219 L8389.7188,4230.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="8407.25" y="4229.1543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8125" x2="8732" y1="4241" y2="4241"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8125" x2="8732" y1="4249" y2="4249"/><ellipse cx="8135" cy="4260" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="8144" y="4263.2104">TimerQueue(EventLoop * loop) : void</text><ellipse cx="8135" cy="4272.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="8144" y="4276.0151">~TimerQueue() : void</text><ellipse cx="8135" cy="4285.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="8144" y="4288.8198">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="8135" cy="4298.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="8144" y="4301.6245">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="8135" cy="4311.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="8144" y="4314.4292">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="8135" cy="4324.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="8144" y="4327.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="8135" cy="4336.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8144" y="4340.0386">reset() : void</text><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="3795.5" y="3152.5"/><ellipse cx="3810.5" cy="3168.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3813.4688,3174.1406 Q3812.8906,3174.4375 3812.25,3174.5781 Q3811.6094,3174.7344 3810.9063,3174.7344 Q3808.4063,3174.7344 3807.0781,3173.0938 Q3805.7656,3171.4375 3805.7656,3168.3125 Q3805.7656,3165.1875 3807.0781,3163.5313 Q3808.4063,3161.875 3810.9063,3161.875 Q3811.6094,3161.875 3812.25,3162.0313 Q3812.9063,3162.1875 3813.4688,3162.4844 L3813.4688,3165.2031 Q3812.8438,3164.625 3812.25,3164.3594 Q3811.6563,3164.0781 3811.0313,3164.0781 Q3809.6875,3164.0781 3809,3165.1563 Q3808.3125,3166.2188 3808.3125,3168.3125 Q3808.3125,3170.4063 3809,3171.4844 Q3809.6875,3172.5469 3811.0313,3172.5469 Q3811.6563,3172.5469 3812.25,3172.2813 Q3812.8438,3172 3813.4688,3171.4219 L3813.4688,3174.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="3824.5" y="3172.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3796.5" x2="3896.5" y1="3184.5" y2="3184.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3796.5" x2="3896.5" y1="3192.5" y2="3192.5"/><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="586" y="34"/><ellipse cx="710.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M713.7188,55.6406 Q713.1406,55.9375 712.5,56.0781 Q711.8594,56.2344 711.1563,56.2344 Q708.6563,56.2344 707.3281,54.5938 Q706.0156,52.9375 706.0156,49.8125 Q706.0156,46.6875 707.3281,45.0313 Q708.6563,43.375 711.1563,43.375 Q711.8594,43.375 712.5,43.5313 Q713.1563,43.6875 713.7188,43.9844 L713.7188,46.7031 Q713.0938,46.125 712.5,45.8594 Q711.9063,45.5781 711.2813,45.5781 Q709.9375,45.5781 709.25,46.6563 Q708.5625,47.7188 708.5625,49.8125 Q708.5625,51.9063 709.25,52.9844 Q709.9375,54.0469 711.2813,54.0469 Q711.9063,54.0469 712.5,53.7813 Q713.0938,53.5 713.7188,52.9219 L713.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="731.25" y="54.1543">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="587" x2="850" y1="66" y2="66"/><ellipse cx="597" cy="77" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="606" y="80.2104">str_ : const char *</text><ellipse cx="597" cy="89.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="606" y="93.0151">len_ : const unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="587" x2="850" y1="99.6094" y2="99.6094"/><ellipse cx="597" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="606" y="113.8198">T(const char * str, unsigned int len) : void</text><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="176.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="8487.5" y="4692.5"/><ellipse cx="8750.25" cy="4708.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8753.2188,4714.1406 Q8752.6406,4714.4375 8752,4714.5781 Q8751.3594,4714.7344 8750.6563,4714.7344 Q8748.1563,4714.7344 8746.8281,4713.0938 Q8745.5156,4711.4375 8745.5156,4708.3125 Q8745.5156,4705.1875 8746.8281,4703.5313 Q8748.1563,4701.875 8750.6563,4701.875 Q8751.3594,4701.875 8752,4702.0313 Q8752.6563,4702.1875 8753.2188,4702.4844 L8753.2188,4705.2031 Q8752.5938,4704.625 8752,4704.3594 Q8751.4063,4704.0781 8750.7813,4704.0781 Q8749.4375,4704.0781 8748.75,4705.1563 Q8748.0625,4706.2188 8748.0625,4708.3125 Q8748.0625,4710.4063 8748.75,4711.4844 Q8749.4375,4712.5469 8750.7813,4712.5469 Q8751.4063,4712.5469 8752,4712.2813 Q8752.5938,4712 8753.2188,4711.4219 L8753.2188,4714.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="8770.75" y="4712.6543">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8488.5" x2="9054.5" y1="4724.5" y2="4724.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8488.5" x2="9054.5" y1="4732.5" y2="4732.5"/><ellipse cx="8498.5" cy="4743.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="8507.5" y="4746.7104">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="8498.5" cy="4756.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="8507.5" y="4759.5151">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="8498.5" cy="4769.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="8507.5" y="4772.3198">~Timer() : void</text><ellipse cx="8498.5" cy="4781.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="8507.5" y="4785.1245">run() const : void</text><ellipse cx="8498.5" cy="4794.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="8507.5" y="4797.9292">restart(const TimePoint &amp; now) : void</text><ellipse cx="8498.5" cy="4807.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8507.5" y="4810.7339">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="8498.5" cy="4820.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="8507.5" y="4823.5386">operator&gt;(const Timer &amp; t) const : bool</text><ellipse cx="8498.5" cy="4833.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="8507.5" y="4836.3433">when() const : const TimePoint &amp;</text><ellipse cx="8498.5" cy="4845.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="8507.5" y="4849.1479">isRepeat() : bool</text><ellipse cx="8498.5" cy="4858.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8507.5" y="4861.9526">id() : TimerId</text><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="8909.5" y="4247.5"/><ellipse cx="9041.75" cy="4263.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9044.7188,4269.1406 Q9044.1406,4269.4375 9043.5,4269.5781 Q9042.8594,4269.7344 9042.1563,4269.7344 Q9039.6563,4269.7344 9038.3281,4268.0938 Q9037.0156,4266.4375 9037.0156,4263.3125 Q9037.0156,4260.1875 9038.3281,4258.5313 Q9039.6563,4256.875 9042.1563,4256.875 Q9042.8594,4256.875 9043.5,4257.0313 Q9044.1563,4257.1875 9044.7188,4257.4844 L9044.7188,4260.2031 Q9044.0938,4259.625 9043.5,4259.3594 Q9042.9063,4259.0781 9042.2813,4259.0781 Q9040.9375,4259.0781 9040.25,4260.1563 Q9039.5625,4261.2188 9039.5625,4263.3125 Q9039.5625,4265.4063 9040.25,4266.4844 Q9040.9375,4267.5469 9042.2813,4267.5469 Q9042.9063,4267.5469 9043.5,4267.2813 Q9044.0938,4267 9044.7188,4266.4219 L9044.7188,4269.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="9062.25" y="4267.6543">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8910.5" x2="9294.5" y1="4279.5" y2="4279.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8910.5" x2="9294.5" y1="4287.5" y2="4287.5"/><ellipse cx="8920.5" cy="4298.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="8929.5" y="4301.7104">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><!--MD5=[126bacd0ed15124482552b070b9a279f]
class C_0000026148367911088234--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0000026148367911088234" style="stroke: #A80036; stroke-width: 1.5;" width="186" x="42.5" y="345"/><ellipse cx="95.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M98.2188,366.6406 Q97.6406,366.9375 97,367.0781 Q96.3594,367.2344 95.6563,367.2344 Q93.1563,367.2344 91.8281,365.5938 Q90.5156,363.9375 90.5156,360.8125 Q90.5156,357.6875 91.8281,356.0313 Q93.1563,354.375 95.6563,354.375 Q96.3594,354.375 97,354.5313 Q97.6563,354.6875 98.2188,354.9844 L98.2188,357.7031 Q97.5938,357.125 97,356.8594 Q96.4063,356.5781 95.7813,356.5781 Q94.4375,356.5781 93.75,357.6563 Q93.0625,358.7188 93.0625,360.8125 Q93.0625,362.9063 93.75,363.9844 Q94.4375,365.0469 95.7813,365.0469 Q96.4063,365.0469 97,364.7813 Q97.5938,364.5 98.2188,363.9219 L98.2188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="115.75" y="365.1543">ScopeExit</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="222.5" y="342"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="223.5" y="354.1387">F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43.5" x2="227.5" y1="377" y2="377"/><ellipse cx="53.5" cy="388" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="62.5" y="391.2104">f_ : F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="43.5" x2="227.5" y1="397.8047" y2="397.8047"/><ellipse cx="53.5" cy="408.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="62.5" y="412.0151">ScopeExit&lt;F&gt;(F &amp;&amp; f) : void</text><ellipse cx="53.5" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="62.5" y="424.8198">~ScopeExit&lt;F&gt;() : void</text><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="112.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="8767.5" y="332"/><ellipse cx="8921.25" cy="348" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8921.3594,343.3438 L8920.2031,348.4219 L8922.5313,348.4219 L8921.3594,343.3438 Z M8919.875,341.1094 L8922.8594,341.1094 L8926.2188,353.5 L8923.7656,353.5 L8923,350.4375 L8919.7188,350.4375 L8918.9688,353.5 L8916.5313,353.5 L8919.875,341.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="8941.75" y="352.1543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8768.5" x2="9150.5" y1="364" y2="364"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8768.5" x2="9150.5" y1="372" y2="372"/><ellipse cx="8778.5" cy="383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="8787.5" y="386.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="8778.5" cy="395.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="8787.5" y="399.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="8778.5" cy="408.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="8787.5" y="411.8198">getName() const : std::string</text><ellipse cx="8778.5" cy="421.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="8787.5" y="424.6245">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="8778.5" cy="434.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="8787.5" y="437.4292">~TaskQueue() : void</text><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="137.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="8854" y="1121.5"/><ellipse cx="9003.25" cy="1137.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9006.2188,1143.1406 Q9005.6406,1143.4375 9005,1143.5781 Q9004.3594,1143.7344 9003.6563,1143.7344 Q9001.1563,1143.7344 8999.8281,1142.0938 Q8998.5156,1140.4375 8998.5156,1137.3125 Q8998.5156,1134.1875 8999.8281,1132.5313 Q9001.1563,1130.875 9003.6563,1130.875 Q9004.3594,1130.875 9005,1131.0313 Q9005.6563,1131.1875 9006.2188,1131.4844 L9006.2188,1134.2031 Q9005.5938,1133.625 9005,1133.3594 Q9004.4063,1133.0781 9003.7813,1133.0781 Q9002.4375,1133.0781 9001.75,1134.1563 Q9001.0625,1135.2188 9001.0625,1137.3125 Q9001.0625,1139.4063 9001.75,1140.4844 Q9002.4375,1141.5469 9003.7813,1141.5469 Q9004.4063,1141.5469 9005,1141.2813 Q9005.5938,1141 9006.2188,1140.4219 L9006.2188,1143.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="9023.75" y="1141.6543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8855" x2="9300" y1="1153.5" y2="1153.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8855" x2="9300" y1="1161.5" y2="1161.5"/><ellipse cx="8865" cy="1172.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="8874" y="1175.7104">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="8865" cy="1185.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="8874" y="1188.5151">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="8865" cy="1198.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="8874" y="1201.3198">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="8865" cy="1210.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="8874" y="1214.1245">getName() const : std::string</text><ellipse cx="8865" cy="1223.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="8874" y="1226.9292">getTaskCount() : size_t</text><ellipse cx="8865" cy="1236.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="8874" y="1239.7339">stop() : void</text><ellipse cx="8865" cy="1249.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="8874" y="1252.5386">~ConcurrentTaskQueue() : void</text><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="150.4375" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="7966.5" y="1115.5"/><ellipse cx="8267.25" cy="1131.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8270.2188,1137.1406 Q8269.6406,1137.4375 8269,1137.5781 Q8268.3594,1137.7344 8267.6563,1137.7344 Q8265.1563,1137.7344 8263.8281,1136.0938 Q8262.5156,1134.4375 8262.5156,1131.3125 Q8262.5156,1128.1875 8263.8281,1126.5313 Q8265.1563,1124.875 8267.6563,1124.875 Q8268.3594,1124.875 8269,1125.0313 Q8269.6563,1125.1875 8270.2188,1125.4844 L8270.2188,1128.2031 Q8269.5938,1127.625 8269,1127.3594 Q8268.4063,1127.0781 8267.7813,1127.0781 Q8266.4375,1127.0781 8265.75,1128.1563 Q8265.0625,1129.2188 8265.0625,1131.3125 Q8265.0625,1133.4063 8265.75,1134.4844 Q8266.4375,1135.5469 8267.7813,1135.5469 Q8268.4063,1135.5469 8269,1135.2813 Q8269.5938,1135 8270.2188,1134.4219 L8270.2188,1137.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="8287.75" y="1135.6543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7967.5" x2="8675.5" y1="1147.5" y2="1147.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7967.5" x2="8675.5" y1="1155.5" y2="1155.5"/><ellipse cx="7977.5" cy="1166.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="7986.5" y="1169.7104">output(const char * msg, const uint64_t len) : void</text><ellipse cx="7977.5" cy="1179.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7986.5" y="1182.5151">flush() : void</text><ellipse cx="7977.5" cy="1192.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7986.5" y="1195.3198">startLogging() : void</text><ellipse cx="7977.5" cy="1204.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="7986.5" y="1208.1245">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="7977.5" cy="1217.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7986.5" y="1220.9292">setSwitchOnLimitOnly(bool flag = true) : void</text><ellipse cx="7977.5" cy="1230.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="7986.5" y="1233.7339">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="7977.5" cy="1243.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="7986.5" y="1246.5386">~AsyncFileLogger() : void</text><ellipse cx="7977.5" cy="1256.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="7986.5" y="1259.3433">AsyncFileLogger() : void</text><!--MD5=[d6dc5f302a37b6f3cec78b5e6a6182c8]
class C_0001453238540802541239--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="150.4375" id="C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.5;" width="852" x="7719.5" y="313"/><ellipse cx="8055.25" cy="329" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8058.2188,334.6406 Q8057.6406,334.9375 8057,335.0781 Q8056.3594,335.2344 8055.6563,335.2344 Q8053.1563,335.2344 8051.8281,333.5938 Q8050.5156,331.9375 8050.5156,328.8125 Q8050.5156,325.6875 8051.8281,324.0313 Q8053.1563,322.375 8055.6563,322.375 Q8056.3594,322.375 8057,322.5313 Q8057.6563,322.6875 8058.2188,322.9844 L8058.2188,325.7031 Q8057.5938,325.125 8057,324.8594 Q8056.4063,324.5781 8055.7813,324.5781 Q8054.4375,324.5781 8053.75,325.6563 Q8053.0625,326.7188 8053.0625,328.8125 Q8053.0625,330.9063 8053.75,331.9844 Q8054.4375,333.0469 8055.7813,333.0469 Q8056.4063,333.0469 8057,332.7813 Q8057.5938,332.5 8058.2188,331.9219 L8058.2188,334.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="8075.75" y="333.1543">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7720.5" x2="8570.5" y1="345" y2="345"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7720.5" x2="8570.5" y1="353" y2="353"/><ellipse cx="7730.5" cy="364" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="826" x="7739.5" y="367.2104">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName, bool switchOnLimitOnly = false) : void</text><ellipse cx="7730.5" cy="376.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="7739.5" y="380.0151">~LoggerFile() : void</text><ellipse cx="7730.5" cy="389.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="7739.5" y="392.8198">writeLog(const StringPtr buf) : void</text><ellipse cx="7730.5" cy="402.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7739.5" y="405.6245">open() : void</text><ellipse cx="7730.5" cy="415.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="7739.5" y="418.4292">switchLog(bool openNewOne) : void</text><ellipse cx="7730.5" cy="428.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7739.5" y="431.2339">getLength() : uint64_t</text><ellipse cx="7730.5" cy="440.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="7739.5" y="444.0386">operator bool() const : bool</text><ellipse cx="7730.5" cy="453.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7739.5" y="456.8433">flush() : void</text><!--MD5=[fed249d7874c77c08dcf893861b9a747]
class C_0001166594284895168875--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="60.8047" id="C_0001166594284895168875" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="263.5" y="357.5"/><ellipse cx="301" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M303.9688,379.1406 Q303.3906,379.4375 302.75,379.5781 Q302.1094,379.7344 301.4063,379.7344 Q298.9063,379.7344 297.5781,378.0938 Q296.2656,376.4375 296.2656,373.3125 Q296.2656,370.1875 297.5781,368.5313 Q298.9063,366.875 301.4063,366.875 Q302.1094,366.875 302.75,367.0313 Q303.4063,367.1875 303.9688,367.4844 L303.9688,370.2031 Q303.3438,369.625 302.75,369.3594 Q302.1563,369.0781 301.5313,369.0781 Q300.1875,369.0781 299.5,370.1563 Q298.8125,371.2188 298.8125,373.3125 Q298.8125,375.4063 299.5,376.4844 Q300.1875,377.5469 301.5313,377.5469 Q302.1563,377.5469 302.75,377.2813 Q303.3438,377 303.9688,376.4219 L303.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="320" y="377.6543">utils::Hash128</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="264.5" x2="434.5" y1="389.5" y2="389.5"/><ellipse cx="274.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="283.5" y="403.7104">bytes : unsigned char[16]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="264.5" x2="434.5" y1="410.3047" y2="410.3047"/><!--MD5=[021cb10fbb8ce3370cd11a9cd6334df8]
class C_0001016092423778930091--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="60.8047" id="C_0001016092423778930091" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="470.5" y="357.5"/><ellipse cx="508" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M510.9688,379.1406 Q510.3906,379.4375 509.75,379.5781 Q509.1094,379.7344 508.4063,379.7344 Q505.9063,379.7344 504.5781,378.0938 Q503.2656,376.4375 503.2656,373.3125 Q503.2656,370.1875 504.5781,368.5313 Q505.9063,366.875 508.4063,366.875 Q509.1094,366.875 509.75,367.0313 Q510.4063,367.1875 510.9688,367.4844 L510.9688,370.2031 Q510.3438,369.625 509.75,369.3594 Q509.1563,369.0781 508.5313,369.0781 Q507.1875,369.0781 506.5,370.1563 Q505.8125,371.2188 505.8125,373.3125 Q505.8125,375.4063 506.5,376.4844 Q507.1875,377.5469 508.5313,377.5469 Q509.1563,377.5469 509.75,377.2813 Q510.3438,377 510.9688,376.4219 L510.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="527" y="377.6543">utils::Hash160</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="471.5" x2="641.5" y1="389.5" y2="389.5"/><ellipse cx="481.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="490.5" y="403.7104">bytes : unsigned char[20]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="471.5" x2="641.5" y1="410.3047" y2="410.3047"/><!--MD5=[8c8e5215c80d1cd8a8ee6133aa829fcf]
class C_0000080756732781028581--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="60.8047" id="C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="9828.5" y="357.5"/><ellipse cx="9866" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9868.9688,379.1406 Q9868.3906,379.4375 9867.75,379.5781 Q9867.1094,379.7344 9866.4063,379.7344 Q9863.9063,379.7344 9862.5781,378.0938 Q9861.2656,376.4375 9861.2656,373.3125 Q9861.2656,370.1875 9862.5781,368.5313 Q9863.9063,366.875 9866.4063,366.875 Q9867.1094,366.875 9867.75,367.0313 Q9868.4063,367.1875 9868.9688,367.4844 L9868.9688,370.2031 Q9868.3438,369.625 9867.75,369.3594 Q9867.1563,369.0781 9866.5313,369.0781 Q9865.1875,369.0781 9864.5,370.1563 Q9863.8125,371.2188 9863.8125,373.3125 Q9863.8125,375.4063 9864.5,376.4844 Q9865.1875,377.5469 9866.5313,377.5469 Q9867.1563,377.5469 9867.75,377.2813 Q9868.3438,377 9868.9688,376.4219 L9868.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="9885" y="377.6543">utils::Hash256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9829.5" x2="9999.5" y1="389.5" y2="389.5"/><ellipse cx="9839.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="9848.5" y="403.7104">bytes : unsigned char[32]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9829.5" x2="9999.5" y1="410.3047" y2="410.3047"/><!--MD5=[a74ca64b85c4b088ee21340913b25922]
class C_0000195316585713148470--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="99.2188" id="C_0000195316585713148470" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="9836.5" y="27.5"/><ellipse cx="9865.9" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9868.8688,49.1406 Q9868.2906,49.4375 9867.65,49.5781 Q9867.0094,49.7344 9866.3063,49.7344 Q9863.8063,49.7344 9862.4781,48.0938 Q9861.1656,46.4375 9861.1656,43.3125 Q9861.1656,40.1875 9862.4781,38.5313 Q9863.8063,36.875 9866.3063,36.875 Q9867.0094,36.875 9867.65,37.0313 Q9868.3063,37.1875 9868.8688,37.4844 L9868.8688,40.2031 Q9868.2438,39.625 9867.65,39.3594 Q9867.0563,39.0781 9866.4313,39.0781 Q9865.0875,39.0781 9864.4,40.1563 Q9863.7125,41.2188 9863.7125,43.3125 Q9863.7125,45.4063 9864.4,46.4844 Q9865.0875,47.5469 9866.4313,47.5469 Q9867.0563,47.5469 9867.65,47.2813 Q9868.2438,47 9868.8688,46.4219 L9868.8688,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="9883.1" y="47.6543">utils::RngState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9837.5" x2="9991.5" y1="59.5" y2="59.5"/><ellipse cx="9847.5" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="9856.5" y="73.7104">secret : utils::Hash256</text><ellipse cx="9847.5" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="9856.5" y="86.5151">prev : utils::Hash256</text><ellipse cx="9847.5" cy="96.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="9856.5" y="99.3198">time : int64_t</text><ellipse cx="9847.5" cy="108.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="9856.5" y="112.1245">counter : uint64_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9837.5" x2="9991.5" y1="118.7188" y2="118.7188"/><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="176.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="3237" y="1102.5"/><ellipse cx="3361.75" cy="1118.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3364.7188,1124.1406 Q3364.1406,1124.4375 3363.5,1124.5781 Q3362.8594,1124.7344 3362.1563,1124.7344 Q3359.6563,1124.7344 3358.3281,1123.0938 Q3357.0156,1121.4375 3357.0156,1118.3125 Q3357.0156,1115.1875 3358.3281,1113.5313 Q3359.6563,1111.875 3362.1563,1111.875 Q3362.8594,1111.875 3363.5,1112.0313 Q3364.1563,1112.1875 3364.7188,1112.4844 L3364.7188,1115.2031 Q3364.0938,1114.625 3363.5,1114.3594 Q3362.9063,1114.0781 3362.2813,1114.0781 Q3360.9375,1114.0781 3360.25,1115.1563 Q3359.5625,1116.2188 3359.5625,1118.3125 Q3359.5625,1120.4063 3360.25,1121.4844 Q3360.9375,1122.5469 3362.2813,1122.5469 Q3362.9063,1122.5469 3363.5,1122.2813 Q3364.0938,1122 3364.7188,1121.4219 L3364.7188,1124.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="3382.25" y="1122.6543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3238" x2="3599" y1="1134.5" y2="1134.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3238" x2="3599" y1="1142.5" y2="1142.5"/><ellipse cx="3248" cy="1153.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="3257" y="1156.7104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="3248" cy="1166.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="3257" y="1169.5151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="3248" cy="1179.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3257" y="1182.3198">getName() const : std::string</text><ellipse cx="3248" cy="1191.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3257" y="1195.1245">waitAllTasksFinished() : void</text><ellipse cx="3248" cy="1204.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="3257" y="1207.9292">SerialTaskQueue() : void</text><ellipse cx="3248" cy="1217.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="3257" y="1220.7339">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="3248" cy="1230.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3257" y="1233.5386">~SerialTaskQueue() : void</text><ellipse cx="3248" cy="1243.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3257" y="1246.3433">isRuningTask() : bool</text><ellipse cx="3248" cy="1255.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3257" y="1259.1479">getTaskCount() : size_t</text><ellipse cx="3248" cy="1268.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3257" y="1271.9526">stop() : void</text><!--MD5=[76c042830f3e16645cab5271e28ba169]
class C_0000089957972753266749--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="73.6094" id="C_0000089957972753266749" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="6" y="1153.5"/><ellipse cx="21" cy="1169.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,1175.1406 Q23.3906,1175.4375 22.75,1175.5781 Q22.1094,1175.7344 21.4063,1175.7344 Q18.9063,1175.7344 17.5781,1174.0938 Q16.2656,1172.4375 16.2656,1169.3125 Q16.2656,1166.1875 17.5781,1164.5313 Q18.9063,1162.875 21.4063,1162.875 Q22.1094,1162.875 22.75,1163.0313 Q23.4063,1163.1875 23.9688,1163.4844 L23.9688,1166.2031 Q23.3438,1165.625 22.75,1165.3594 Q22.1563,1165.0781 21.5313,1165.0781 Q20.1875,1165.0781 19.5,1166.1563 Q18.8125,1167.2188 18.8125,1169.3125 Q18.8125,1171.4063 19.5,1172.4844 Q20.1875,1173.5469 21.5313,1173.5469 Q22.1563,1173.5469 22.75,1173.2813 Q23.3438,1173 23.9688,1172.4219 L23.9688,1175.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="35" y="1173.6543">InetAddress::(anonymous_2039330)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1185.5" y2="1185.5"/><ellipse cx="17" cy="1196.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="1199.7104">addr_ : struct sockaddr_in</text><ellipse cx="17" cy="1209.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="1212.5151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1219.1094" y2="1219.1094"/><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="329.7031" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="953" x="5612" y="2496"/><ellipse cx="6055.75" cy="2512" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6058.7188,2517.6406 Q6058.1406,2517.9375 6057.5,2518.0781 Q6056.8594,2518.2344 6056.1563,2518.2344 Q6053.6563,2518.2344 6052.3281,2516.5938 Q6051.0156,2514.9375 6051.0156,2511.8125 Q6051.0156,2508.6875 6052.3281,2507.0313 Q6053.6563,2505.375 6056.1563,2505.375 Q6056.8594,2505.375 6057.5,2505.5313 Q6058.1563,2505.6875 6058.7188,2505.9844 L6058.7188,2508.7031 Q6058.0938,2508.125 6057.5,2507.8594 Q6056.9063,2507.5781 6056.2813,2507.5781 Q6054.9375,2507.5781 6054.25,2508.6563 Q6053.5625,2509.7188 6053.5625,2511.8125 Q6053.5625,2513.9063 6054.25,2514.9844 Q6054.9375,2516.0469 6056.2813,2516.0469 Q6056.9063,2516.0469 6057.5,2515.7813 Q6058.0938,2515.5 6058.7188,2514.9219 L6058.7188,2517.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="6076.25" y="2516.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5613" x2="6564" y1="2528" y2="2528"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5613" x2="6564" y1="2536" y2="2536"/><ellipse cx="5623" cy="2547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="5632" y="2550.2104">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="5623" cy="2559.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5632" y="2563.0151">~TcpClient() : void</text><ellipse cx="5623" cy="2572.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="5632" y="2575.8198">connect() : void</text><ellipse cx="5623" cy="2585.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="5632" y="2588.6245">disconnect() : void</text><ellipse cx="5623" cy="2598.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5632" y="2601.4292">stop() : void</text><ellipse cx="5623" cy="2611.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="5632" y="2614.2339">connection() const : TcpConnectionPtr</text><ellipse cx="5623" cy="2623.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5632" y="2627.0386">getLoop() const : EventLoop *</text><ellipse cx="5623" cy="2636.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="5632" y="2639.8433">retry() const : bool</text><ellipse cx="5623" cy="2649.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5632" y="2652.6479">enableRetry() : void</text><ellipse cx="5623" cy="2662.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5632" y="2665.4526">name() const : const std::string &amp;</text><ellipse cx="5623" cy="2675.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5632" y="2678.2573">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5623" cy="2687.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5632" y="2691.062">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5623" cy="2700.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="5632" y="2703.8667">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="5623" cy="2713.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5632" y="2716.6714">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5623" cy="2726.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="5632" y="2729.4761">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5623" cy="2739.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5632" y="2742.2808">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5623" cy="2751.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5632" y="2755.0854">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5623" cy="2764.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="5632" y="2767.8901">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="5623" cy="2777.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="5632" y="2780.6948">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="5623" cy="2790.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="927" x="5632" y="2793.4995">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="5632" y="2806.3042">{}, const std::string &amp; certPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="5830" y="2806.3042">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="6054" y="2806.3042">, const std::string &amp; caPath = "") : void</text><ellipse cx="5623" cy="2815.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5632" y="2819.1089">enableSSL(TLSPolicyPtr policy) : void</text><!--MD5=[36897566f721d8b8c541721979fa9001]
class C_0001278908569830571044--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="60.8047" id="C_0001278908569830571044" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="6374" y="2045.5"/><ellipse cx="6389" cy="2061.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6391.9688,2067.1406 Q6391.3906,2067.4375 6390.75,2067.5781 Q6390.1094,2067.7344 6389.4063,2067.7344 Q6386.9063,2067.7344 6385.5781,2066.0938 Q6384.2656,2064.4375 6384.2656,2061.3125 Q6384.2656,2058.1875 6385.5781,2056.5313 Q6386.9063,2054.875 6389.4063,2054.875 Q6390.1094,2054.875 6390.75,2055.0313 Q6391.4063,2055.1875 6391.9688,2055.4844 L6391.9688,2058.2031 Q6391.3438,2057.625 6390.75,2057.3594 Q6390.1563,2057.0781 6389.5313,2057.0781 Q6388.1875,2057.0781 6387.5,2058.1563 Q6386.8125,2059.2188 6386.8125,2061.3125 Q6386.8125,2063.4063 6387.5,2064.4844 Q6388.1875,2065.5469 6389.5313,2065.5469 Q6390.1563,2065.5469 6390.75,2065.2813 Q6391.3438,2065 6391.9688,2064.4219 L6391.9688,2067.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="6403" y="2065.6543">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6375" x2="6556" y1="2077.5" y2="2077.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6375" x2="6556" y1="2085.5" y2="2085.5"/><ellipse cx="6385" cy="2096.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6394" y="2099.7104">IgnoreSigPipe() : void</text><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="188.8516" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="6707" y="3082"/><ellipse cx="6913.75" cy="3098" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6916.7188,3103.6406 Q6916.1406,3103.9375 6915.5,3104.0781 Q6914.8594,3104.2344 6914.1563,3104.2344 Q6911.6563,3104.2344 6910.3281,3102.5938 Q6909.0156,3100.9375 6909.0156,3097.8125 Q6909.0156,3094.6875 6910.3281,3093.0313 Q6911.6563,3091.375 6914.1563,3091.375 Q6914.8594,3091.375 6915.5,3091.5313 Q6916.1563,3091.6875 6916.7188,3091.9844 L6916.7188,3094.7031 Q6916.0938,3094.125 6915.5,3093.8594 Q6914.9063,3093.5781 6914.2813,3093.5781 Q6912.9375,3093.5781 6912.25,3094.6563 Q6911.5625,3095.7188 6911.5625,3097.8125 Q6911.5625,3099.9063 6912.25,3100.9844 Q6912.9375,3102.0469 6914.2813,3102.0469 Q6914.9063,3102.0469 6915.5,3101.7813 Q6916.0938,3101.5 6916.7188,3100.9219 L6916.7188,3103.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="6934.25" y="3102.1543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6708" x2="7193" y1="3114" y2="3114"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6708" x2="7193" y1="3122" y2="3122"/><ellipse cx="6718" cy="3133" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="6727" y="3136.2104">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="6718" cy="3145.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="6727" y="3149.0151">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="6718" cy="3158.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6727" y="3161.8198">~Connector() : void</text><ellipse cx="6718" cy="3171.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="6727" y="3174.6245">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="6718" cy="3184.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="6727" y="3187.4292">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="6718" cy="3197.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="6727" y="3200.2339">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="6718" cy="3209.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="6727" y="3213.0386">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="6718" cy="3222.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="6727" y="3225.8433">serverAddress() const : const InetAddress &amp;</text><ellipse cx="6718" cy="3235.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="6727" y="3238.6479">start() : void</text><ellipse cx="6718" cy="3248.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="6727" y="3251.4526">restart() : void</text><ellipse cx="6718" cy="3261.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="6727" y="3264.2573">stop() : void</text><!--MD5=[e79edad503674c7fc854de75a75b6c70]
class C_0000000982196670174162--><rect fill="#FEFECE" filter="url(#fblc25xww8nfx)" height="86.4141" id="C_0000000982196670174162" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="7097.5" y="2618"/><ellipse cx="7112.5" cy="2634" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7116.6094,2640 L7108.8906,2640 L7108.8906,2627.6094 L7116.6094,2627.6094 L7116.6094,2629.7656 L7111.3438,2629.7656 L7111.3438,2632.4375 L7116.1094,2632.4375 L7116.1094,2634.5938 L7111.3438,2634.5938 L7111.3438,2637.8438 L7116.6094,2637.8438 L7116.6094,2640 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="7126.5" y="2638.1543">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7098.5" x2="7242.5" y1="2650" y2="2650"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="7103.5" y="2664.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="7103.5" y="2677.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="7103.5" y="2689.8198">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7098.5" x2="7242.5" y1="2696.4141" y2="2696.4141"/><!--MD5=[71937ae761f89ce4d5c0645a62fc4977]
reverse link C_0001897340460211641725 to C_0000673025168912921705--><path d="M7496.5,3908.47 C7496.5,4023.57 7496.5,4173.26 7496.5,4240.95 " fill="none" id="C_0001897340460211641725&lt;-C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7496.5,3895.33,7492.5,3901.33,7496.5,3907.33,7500.5,3901.33,7496.5,3895.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M7263.99,78.03 C6757.22,78.48 3863.77,85.12 1508.5,176 C1335.42,182.68 861.8,110.04 730.5,223 C674,271.61 695.5,312.47 695.5,387 C695.5,387 695.5,387 695.5,2662 C695.5,2955.95 1093.55,3094.53 1307.74,3147.82 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.34,71.03,7284.34,78.01,7264.35,85.03,7264.34,71.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M1372.69,2685.06 C1381.39,2747.96 1406.01,2926.02 1423.05,3049.32 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1430.02,3048.61,1425.83,3069.38,1416.15,3050.53,1430.02,3048.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M1736.79,797.33 C1691.96,978.98 1608.5,1361.3 1608.5,1690 C1608.5,1690 1608.5,1690 1608.5,2662 C1608.5,2800.12 1552.92,2949.23 1505.7,3051 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1512.01,3054.02,1497.14,3069.12,1499.35,3048.05,1512.01,3054.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M7263.95,78.09 C6607.65,79.03 2004.63,88.7 1894.5,176 C1773.54,271.89 1755.36,462.85 1757.14,582.81 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.34,71.09,7284.35,78.06,7264.36,85.09,7264.34,71.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M1849.98,1798.11 C1873.6,2005.26 1903.99,2474.01 1754.5,2826 C1717.3,2913.59 1648.8,2993.93 1585.24,3055.44 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1589.82,3060.75,1570.5,3069.46,1580.17,3050.61,1589.82,3060.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M7263.83,77.98 C6611.43,77.97 2066.77,81.33 1965.5,176 C1939.7,200.12 1866.07,1243.7 1842.71,1583.96 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.12,70.98,7284.12,77.98,7264.12,84.98,7264.12,70.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M1346.9,2260.82 C1354.72,2398.82 1364.65,2574.28 1368.18,2636.68 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1346.16,2247.59,1342.5028,2253.8049,1346.8329,2259.5711,1350.4902,2253.3562,1346.16,2247.59" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1361.5" y="2407.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="1371.5" y="2414.5669">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M7264.16,78.62 C6618.99,83.85 2148.23,121.97 1871.5,176 C1814.47,187.13 1789.58,180.93 1749.5,223 C1633.26,345.01 1673.29,420.01 1630.5,583 C1519.95,1004.08 1566.83,1123.58 1501.5,1554 C1484.93,1663.19 1486.77,1692.38 1454.5,1798 C1443.81,1832.99 1430.14,1869.56 1415.93,1904.22 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.18,71.62,7284.23,78.45,7264.29,85.61,7264.18,71.62" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b07c5dc99de1fec75297894171ba3abd]
link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1112.05,508.35 C1052.43,757.94 943.76,1349.08 1117.5,1798 C1131.21,1833.43 1151.12,1867.94 1173.41,1899.89 " fill="none" id="C_0002053752992472264214-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1176.43,1904.18,1174.521,1894.5179,1173.5522,1900.0912,1167.9789,1899.1224,1176.43,1904.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1132.19,521.4 C1116.56,738.81 1096.96,1184.27 1160.5,1554 C1181.16,1674.2 1225.03,1804.18 1263.8,1904.24 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1133.14,508.36,1128.7089,514.049,1132.256,520.3274,1136.6871,514.6384,1133.14,508.36" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1166.5,1186.0664,1170.5,1190.0664,1166.5,1194.0664,1162.5,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1173.5" y="1195.0669">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M1286.34,517.68 C1365.08,598.05 1455.89,708.54 1501.5,827 C1664.86,1251.26 1696.5,2408.87 1696.5,2863.5 C1696.5,2863.5 1696.5,2863.5 1696.5,3757 C1696.5,3848.55 1849.33,3963.41 2017.02,4061.88 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1276.8,508.03,1278.1757,515.1087,1285.239,516.5613,1283.8633,509.4827,1276.8,508.03" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1702.5,2656.5664,1706.5,2660.5664,1702.5,2664.5664,1698.5,2660.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1709.5" y="2665.5669">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M1179.51,513.25 C1232.63,696.53 1329.36,1030.3 1363.32,1147.48 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1178.11,508.41,1176.7632,518.1663,1179.4968,513.2138,1184.4493,515.9474,1178.11,508.41" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1265.5" cy="690.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="1272.5" y="694.5669">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M7263.96,78.33 C6597.69,81.32 1855.27,104.99 1565.5,176 C1486.84,195.28 1405.99,231.14 1336.37,267.9 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.19,71.33,7284.22,78.24,7264.25,85.33,7264.19,71.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2546ce8b172ab3415fe98599ef34be58]
link C_0002131283840621188296 to C_0002053752992472264214--><path d="M7656.37,137.73 C7650.56,140.96 7644.58,143.79 7638.5,146 C7500.2,196.33 5137.58,217.73 4990.5,223 C3738.21,267.9 2257.21,334.98 1553.89,367.68 " fill="none" id="C_0002131283840621188296-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1546.7016" cy="368.0243" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1554.6933" x2="1538.71" y1="367.6586" y2="368.39"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1547.0673" x2="1546.336" y1="376.016" y2="360.0327"/><!--MD5=[93922583ef61aedd7e4cac59826dbbbd]
link C_0000979080797342806546 to C_0002053752992472264214--><path d="M7873.24,126.53 C7852.48,134.28 7830.6,141.29 7809.5,146 C7464.06,223.17 7368.21,179.93 7014.5,193 C6115.46,226.22 5889.78,197.17 4990.5,223 C3737.92,258.98 2257.06,330.2 1553.83,365.76 " fill="none" id="C_0000979080797342806546-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1546.6398" cy="366.1259" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1554.6296" x2="1538.65" y1="365.7219" y2="366.53"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1547.0439" x2="1546.2357" y1="374.1157" y2="358.1361"/><!--MD5=[1e053e636c9893712341ad3f59f5b138]
link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1372.67,1233.59 C1367.93,1305.43 1358.32,1456.32 1352.5,1584 C1347.74,1688.52 1343.86,1805.63 1341.12,1899.25 " fill="none" id="C_0000716430590791918928-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1340.98,1904.25,1345.2354,1895.3679,1341.1228,1899.252,1337.2387,1895.1394,1340.98,1904.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1373.19,1247.03 C1368.75,1353.77 1358.61,1595.01 1349.5,1798 C1347.96,1832.39 1346.26,1869.17 1344.62,1904.34 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1373.75,1233.78,1369.5029,1239.6077,1373.2488,1245.7695,1377.4959,1239.9418,1373.75,1233.78" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1361.5" y="1688.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1371.5" y="1695.5669">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M7263.94,78 C6590.1,78.13 1750.39,82.35 1636.5,176 C1504.12,284.85 1596.84,386.68 1555.5,553 C1499.41,778.68 1419.43,1045.59 1388.45,1147.29 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.4,71,7284.4,77.99,7264.4,85,7264.4,71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M7264.46,78.35 C6718.76,80.97 3429.81,99.78 2433.5,176 C2276.13,188.04 2189.61,108 2081.5,223 C1961.33,350.83 1987.19,1623.45 1969.5,1798 C1939.31,2095.93 1921.59,2169.24 1881.5,2466 C1785.62,3175.65 1709.73,3347.59 1660.5,4062 C1647.3,4253.55 1619.79,4306.37 1660.5,4494 C1678.2,4575.57 1721.29,4661.79 1753.04,4717.86 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.47,71.35,7284.5,78.25,7264.53,85.34,7264.47,71.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ffc230e37c5c4ce1f573c198139c7155]
link C_0000223701637084171141 to C_0000912667184903365399--><path d="M1790.5,4334.47 C1790.5,4424.17 1790.5,4601.22 1790.5,4702.88 " fill="none" id="C_0000223701637084171141-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1790.5" cy="4709.92" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1790.5" x2="1790.5" y1="4701.92" y2="4717.92"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1798.5" x2="1782.5" y1="4709.92" y2="4709.92"/><!--MD5=[f80622055e9d57665d4031fadfdf3e69]
link C_0002185746167032660910 to C_0000912667184903365399--><path d="M3166.75,4302.26 C3135.33,4346.8 3060.26,4444.09 2972.5,4494 C2622.6,4692.99 2138.21,4753.94 1913.77,4772.09 " fill="none" id="C_0002185746167032660910-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="1914.01,4779.09,1893.53,4773.67,1912.92,4765.13,1914.01,4779.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M5630.27,3764.03 C5128.54,3782.3 3981.05,3846.14 3043.5,4062 C3016.23,4068.28 2988.49,4075.43 2960.64,4083.22 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2955.81,4084.57,2965.5577,4085.978,2960.6224,4083.2134,2963.3871,4078.2781,2955.81,4084.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6041.82,3985.31 C6055.23,4010.52 6067.48,4036.36 6077.5,4062 C6095.73,4108.64 6142.17,4371.32 6175.02,4565.42 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6175.89,4570.56,6178.3425,4561.0214,6175.0611,4565.6292,6170.4533,4562.3477,6175.89,4570.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6104.16,3985.42 C6120.2,4010.03 6134.41,4035.72 6145.5,4062 C6212.85,4221.58 6226.35,4418.47 6224.56,4565.61 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6224.49,4570.82,6228.5926,4561.8663,6224.5471,4565.8203,6220.5931,4561.7749,6224.49,4570.82" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6227.5" y="4275.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="6237.5" y="4282.5669">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6140.74,3863.39 C6222.83,3911.28 6304.4,3976.62 6350.5,4062 C6434.69,4217.91 6385.42,4417.15 6323.21,4566.1 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6321.18,4570.94,6328.3591,4564.1975,6323.1203,4566.3318,6320.986,4561.0931,6321.18,4570.94" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6398.5" y="4275.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="6408.5" y="4282.5669">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M6153.45,3804.83 C6300.79,3846.28 6471.48,3922.62 6561.5,4062 C6665.67,4223.28 6643.97,4320.61 6561.5,4494 C6525.48,4569.72 6458.47,4631.94 6392.58,4678.74 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6140.63,3801.29,6145.3498,3806.7419,6152.1977,3804.482,6147.4778,3799.0301,6140.63,3801.29" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6635.5" y="4275.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="6645.5" y="4282.5669">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6028.34,4707.01 C5944.43,4660.99 5859.59,4591.47 5842.5,4494 C5813.25,4327.13 5825.67,4136.09 5844.52,3990.34 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5845.2,3985.17,5840.0758,3993.5808,5844.557,3990.1285,5848.0093,3994.6097,5845.2,3985.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6028.44,4647.44 C5982.33,4604.12 5938.53,4552.02 5912.5,4494 C5873.46,4406.98 5870.72,4171.64 5875.24,3990.09 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5875.37,3985,5871.1393,3993.8939,5875.2411,3989.9983,5879.1367,3994.1001,5875.37,3985" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5915.5" y="4275.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5925.5" y="4282.5669">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M6038.1,4566.38 C6024.63,4542.89 6012.71,4518.56 6003.5,4494 C5935.83,4313.49 5997.45,4251.94 5964.5,4062 C5960.15,4036.94 5954.78,4010.92 5948.89,3985.12 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6040.63,4570.76,6039.5684,4560.9685,6038.1186,4566.4365,6032.6507,4564.9867,6040.63,4570.76" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6009.5" cy="4278.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6016.5" y="4282.5669">«friend»</text><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M5686.11,3996.41 C5682.11,4002.61 5678.24,4008.81 5674.5,4015 C5638.31,4074.95 5608.17,4148.84 5588.47,4202.85 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5693.41,3985.26,5686.7749,3988.0841,5686.8299,3995.295,5693.4649,3992.4709,5693.41,3985.26" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5677.5" y="4021.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5687.5" y="4028.0669">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5618.4,4202.8 C5653.03,4154.92 5697.97,4090.83 5734.5,4032 C5743.03,4018.27 5751.61,4004.02 5760.12,3989.57 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5762.75,3985.08,5754.7482,3990.8221,5760.2218,3989.3937,5761.6501,3994.8673,5762.75,3985.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5549.24,4202.8 C5542.41,4148.1 5540.99,4073.35 5569.5,4015 C5584.17,3984.98 5604.16,3957.26 5627.02,3932.01 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5630.42,3928.31,5621.3857,3932.232,5627.0375,3931.9922,5627.2773,3937.644,5630.42,3928.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5572.5" y="4021.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5582.5" y="4028.0669">ownerLoop_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M5617.12,3789.2 C5281.82,3831.42 4691.32,3912.33 4191.5,4015 C3840.26,4087.15 3428.34,4204.55 3260.04,4253.95 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5630.42,3787.53,5623.9698,3784.306,5618.5129,3789.02,5624.9631,3792.2441,5630.42,3787.53" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4194.5" y="4021.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4204.5" y="4028.0669">funcs_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M5617.27,3808.6 C5041.91,3919.29 3708.54,4175.8 3302.19,4253.97 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5630.3,3806.1,5623.6523,3803.3056,5618.5161,3808.3671,5625.1638,3811.1615,5630.3,3806.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4537.5" y="4021.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4547.5" y="4028.0669">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M6153.18,3827.63 C6321.79,3874.76 6542.84,3941.43 6733.5,4015 C6750.01,4021.37 6752.31,4027.82 6769.5,4032 C6950.78,4076.07 7423.92,4034.84 7608.5,4062 C7820.54,4093.2 8056.68,4158.47 8220.9,4208.96 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6140.63,3824.13,6145.3367,3829.5933,6152.1899,3827.3499,6147.4833,3821.8866,6140.63,3824.13" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6772.5" y="4021.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="6782.5" y="4028.0669">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M8219.14,4208.88 C8054.96,4158.71 7819.69,4093.88 7608.5,4062 C7303.23,4015.92 7216.71,4095.13 6914.5,4032 C6893.98,4027.71 6890.45,4021.44 6870.5,4015 C6627.67,3936.56 6345.5,3864.55 6145.57,3816.66 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6140.57,3815.46,6148.3813,3821.4586,6145.4306,3816.6323,6150.257,3813.6816,6140.57,3815.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M8221.35,4208.88 C8057.14,4158.26 7820.77,4092.85 7608.5,4062 C7403.66,4032.23 6877.52,4085.27 6677.5,4032 C6661.94,4027.86 6660.28,4021.39 6645.5,4015 C6482.74,3944.68 6294.02,3880.53 6145.35,3833.78 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.52,3832.26,6147.9061,3838.775,6145.2899,3833.7595,6150.3053,3831.1432,6140.52,3832.26" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6683.5,4019.0664,6687.5,4023.0664,6683.5,4027.0664,6679.5,4023.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6690.5" y="4028.0669">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M6140.97,3717.45 C6162.26,3725.75 6175.5,3738.6 6175.5,3756 C6175.5,3772.04 6164.25,3784.22 6145.81,3792.52 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.97,3794.55,6150.8164,3794.77,6145.5833,3792.6219,6147.7314,3787.3887,6140.97,3794.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6183.5" y="3753.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="6193.5" y="3760.5669">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M7264.18,78.86 C6631.09,86.04 2321.32,138.04 2220.5,223 C2011.41,399.2 2118.26,553.96 2103.5,827 C2079.52,1270.65 1980.86,2390.03 2066.5,2826 C2124.25,3119.98 2113.56,3234.32 2321.5,3450 C2550.35,3687.36 4852.31,3740.8 5630.22,3752.13 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.24,71.86,7284.32,78.63,7264.4,85.86,7264.24,71.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2502.42,2466.18 C2554.69,2555.5 2657.48,2738.39 2723.5,2903 C2828.01,3163.59 2680.09,3387.21 2938.5,3497 C3419.5,3701.36 4998.21,3743.85 5625.33,3752.68 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5630.37,3752.75,5621.4281,3748.6218,5625.3705,3752.6786,5621.3138,3756.621,5630.37,3752.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2417.36,2466.35 C2410.51,2475.73 2404.24,2485.77 2399.5,2496 C2331.16,2643.53 2349,2694.06 2334.5,2856 C2322.66,2988.26 2323.24,3341.3 2399.5,3450 C2426.55,3488.56 2449.07,3484.54 2494.5,3497 C3083.89,3658.65 4937.66,3727.58 5625.37,3748.03 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5630.4,3748.18,5621.5305,3743.8985,5625.4025,3748.0225,5621.2785,3751.8945,5630.4,3748.18" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2337.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2347.5" y="2869.0669">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M2458.68,2479.32 C2427.44,2686.74 2346.96,3303.96 2470.5,3450 C2673.77,3690.29 4872.11,3741.72 5630.24,3752.34 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2460.66,2466.26,2455.8084,2471.595,2458.867,2478.1253,2463.7186,2472.7903,2460.66,2466.26" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2417.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="2427.5" y="2869.0669">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M7264.12,78.4 C6666.98,81.76 2809.85,107.84 2595.5,223 C2048.22,517.01 2063.86,941.63 2168.5,1554 C2222.18,1868.12 2379.27,2220.27 2442.59,2353.74 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.32,71.4,7284.36,78.29,7264.4,85.4,7264.32,71.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41719d421dd9fac5f1bf843a27c4c912]
link C_0002061035340998974559 to C_0001390130774830223499--><path d="M2507.71,1265.53 C2534.63,1343.82 2576.2,1471.33 2602.5,1584 C2634.28,1720.12 2751.17,2695.99 2802.5,2826 C2925.27,3136.94 2954.56,3250.09 3222.5,3450 C3412.85,3592.02 4992.94,3701.48 5625.34,3740 " fill="none" id="C_0002061035340998974559-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5630.43,3740.31,5621.6857,3735.7782,5625.439,3740.0105,5621.2066,3743.7638,5630.43,3740.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M2476.62,1279 C2472.45,1358.52 2466.77,1479.09 2464.5,1584 C2458.22,1873.98 2465.01,2221.41 2468.11,2353.96 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2477.33,1265.62,2473.0192,1271.4007,2476.6972,1277.6033,2481.008,1271.8226,2477.33,1265.62" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2467.5" y="1688.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="2477.5" y="1695.5669">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M7264.34,80.29 C6674.7,98.56 2895.94,229.08 2552.5,583 C2413.24,726.51 2440.65,987.81 2464.73,1115.4 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7264.13,73.3,7284.34,79.68,7264.56,87.29,7264.13,73.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M4666.33,1554.11 C4516.93,1636.02 4357.89,1721.37 4208.5,1798 C4180.91,1812.15 4162.06,1801.78 4145.5,1828 C4027.81,2014.4 4035.95,2132.7 4145.5,2324 C4207.47,2432.22 4270.19,2423.69 4387.5,2466 C4465.44,2494.11 4513.05,2437.28 4571.5,2496 C4627.58,2552.34 4647.44,2735.4 4653.62,2897.33 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4653.82,2902.6,4657.4832,2893.4577,4653.6344,2897.6034,4649.4887,2893.7547,4653.82,2902.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M5299.22,1554.21 C5287.75,1830.59 5264.13,2186.33 5216.5,2324 C5128.84,2577.37 4948.18,2828.65 4815.04,2991.82 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4811.51,2996.14,4820.3076,2991.7126,4814.6785,2992.2721,4814.119,2986.643,4811.51,2996.14" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5208.5,2405.5664,5212.5,2409.5664,5208.5,2413.5664,5204.5,2409.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5215.5" y="2414.5669">recvMsgCallback_</text><!--MD5=[3427b8ada0e3011132406bbf51a19799]
link C_0002230624932100089526 to C_0001897340460211641725--><path d="M6016.12,1294.37 C6422.28,1364.23 6884.38,1465.33 7052.5,1584 C7553.87,1937.88 7565.22,2259.58 7547.5,2873 C7539.97,3133.75 7519.93,3437.32 7507.33,3611.73 " fill="none" id="C_0002230624932100089526-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7506.96,3616.85,7511.5928,3608.1588,7507.3173,3611.8628,7503.6133,3607.5872,7506.96,3616.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[475fc265529b86f5b89a981b424e962c]
link C_0002230624932100089526 to C_0001390130774830223499--><path d="M4602.75,1510.03 C4549.2,1527.04 4495.41,1542.02 4442.5,1554 C4376.53,1568.94 3886.76,1541.06 3834.5,1584 C3562,1807.93 3685.49,2003.93 3642.5,2354 C3636.43,2403.41 3615.8,2423.99 3642.5,2466 C3659.35,2492.51 3688.67,2470.13 3706.5,2496 C3947.75,2846.1 3487.47,3139.11 3777.5,3450 C3902.06,3583.52 5089.41,3692.58 5625.31,3735.43 " fill="none" id="C_0002230624932100089526-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5630.41,3735.84,5621.7598,3731.1311,5625.4261,3735.439,5621.1182,3739.1053,5630.41,3735.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cf3252f145f52c6ad0115ad3c523b41]
link C_0002230624932100089526 to C_0001660397537883119469--><path d="M4602.93,1510.83 C4549.33,1527.65 4495.49,1542.37 4442.5,1554 C4261.57,1593.7 3789.23,1539.19 3609.5,1584 C3398.5,1636.61 3377,1732.94 3169.5,1798 C3128.29,1810.92 3005.58,1795.19 2977.5,1828 C2905.4,1912.25 2902.37,2744.44 2977.5,2826 C3012.89,2864.42 3870.66,2874.6 3914.5,2903 C3992.03,2953.22 4032.92,3057.98 4051.52,3121.98 " fill="none" id="C_0002230624932100089526-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4052.93,3126.9,4054.3036,3117.1474,4051.5564,3122.0924,4046.6114,3119.3452,4052.93,3126.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[034c16a8c2edc6fa2a6ffe7ba8418e5f]
link C_0002230624932100089526 to C_0002100370281243872283--><path d="M5485.94,1554.1 C5489.01,1564.1 5491.88,1574.08 5494.5,1584 C5594.86,1964.1 5528.67,2074.24 5561.5,2466 C5574.92,2626.11 5503.44,2693.63 5594.5,2826 C5611.62,2850.89 5639.53,2830.35 5655.5,2856 C5680.84,2896.7 5684.31,2945.92 5677.69,2993.41 " fill="none" id="C_0002230624932100089526-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5676.93,2998.59,5682.1997,2990.2695,5677.6591,2993.6434,5674.2852,2989.1029,5676.93,2998.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d2ce2e8b37834b1fb03da04894a7c85]
reverse link C_0002230624932100089526 to C_0002100370281243872283--><path d="M5383.01,1566.94 C5398.01,1652.5 5412.54,1743.19 5423.5,1828 C5452.11,2049.43 5398.34,2653.02 5539.5,2826 C5562.2,2853.81 5594.37,2826.27 5614.5,2856 C5642.49,2897.34 5650.43,2949.1 5648.95,2998.85 " fill="none" id="C_0002230624932100089526&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5380.74,1554.08,5377.8427,1560.6835,5382.8239,1565.8977,5385.7212,1559.2942,5380.74,1554.08" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5452.5,2405.5664,5456.5,2409.5664,5452.5,2413.5664,5448.5,2409.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="5459.5" y="2414.5669">tlsPolicy_</text><!--MD5=[c68e74942c9e75d7a1d457e6ff6d95fd]
link C_0002230624932100089526 to C_0000434245188016003403--><path d="M6016.02,1312.27 C6359.32,1382.27 6726.46,1477.52 6861.5,1584 C6957.66,1659.82 6960.2,1709.1 6989.5,1828 C7042.23,2042.04 7070.13,2118.83 6989.5,2324 C6957.98,2404.2 6931.82,2422.4 6857.5,2466 C6808.97,2494.47 6777.93,2460.22 6734.5,2496 C6609.88,2598.69 6696.79,2711.93 6582.5,2826 C6524.37,2884.02 6477.73,2850.58 6414.5,2903 C6337.07,2967.18 6275.95,3069.52 6244.6,3128.82 " fill="none" id="C_0002230624932100089526-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6242.21,3133.36,6249.9471,3127.2659,6244.5429,3128.9376,6242.8712,3123.5334,6242.21,3133.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[910e29b2ccc32ba69f633ed34b5496c0]
reverse link C_0002230624932100089526 to C_0000434245188016003403--><path d="M6029.07,1296.06 C6402.13,1363.25 6808.52,1461.02 6948.5,1584 C7197.52,1802.78 7140.1,2007.53 7041.5,2324 C7018.69,2397.21 7007.2,2423.31 6943.5,2466 C6891.36,2500.94 6852.82,2454.77 6805.5,2496 C6687.72,2598.62 6797.87,2718.53 6684.5,2826 C6632.87,2874.94 6599.97,2853.72 6531.5,2873 C6479.83,2887.55 6458.72,2872.57 6414.5,2903 C6328.54,2962.16 6268.04,3072.85 6239.7,3133.35 " fill="none" id="C_0002230624932100089526&lt;-C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6016.09,1293.73,6021.288,1298.7281,6027.9008,1295.8523,6022.7028,1290.8542,6016.09,1293.73" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7038.5,2405.5664,7042.5,2409.5664,7038.5,2413.5664,7034.5,2409.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="7045.5" y="2414.5669">sslErrorCallback_</text><!--MD5=[e6b06091bb23409738e196d39773d40c]
link C_0002230624932100089526 to C_0000964465843177067305--><path d="M4602.88,1510.64 C4549.3,1527.5 4495.47,1542.29 4442.5,1554 C4401.02,1563.17 3709.74,1555.22 3678.5,1584 C3556.67,1696.25 3658.46,2173.84 3588.5,2324 C3580.8,2340.53 3572.04,2339.88 3560.5,2354 C3493.4,2436.14 3423.59,2537.38 3381.59,2600.32 " fill="none" id="C_0002230624932100089526-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3378.61,2604.79,3386.9305,2599.5203,3381.3835,2600.6297,3380.2741,2595.0827,3378.61,2604.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6029.24,1184.64 C6043.26,1186.31 6051,1188.27 6051,1190.5 C6051,1193.36 6038.32,1195.76 6016.01,1197.71 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6016.01,1183.29,6021.5747,1187.8763,6027.9485,1184.5036,6022.3838,1179.9173,6016.01,1183.29" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6062,1186.0664,6066,1190.0664,6062,1194.0664,6058,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6069" y="1195.0669">recvMsgCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6016.27,1166.63 C6118.47,1170.58 6188,1178.54 6188,1190.5 C6188,1202.26 6120.76,1210.15 6021.33,1214.17 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6016.27,1214.37,6025.4227,1218.0071,6021.266,1214.1702,6025.1029,1210.0135,6016.27,1214.37" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6199,1186.0664,6203,1190.0664,6199,1194.0664,6195,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6206" y="1195.0669">recvMsgCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6029.31,1151.53 C6197.74,1155.37 6325,1168.36 6325,1190.5 C6325,1213.22 6191.02,1226.3 6016.07,1229.75 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6016.07,1151.25,6021.9851,1155.3745,6028.0674,1151.5008,6022.1523,1147.3763,6016.07,1151.25" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6336,1186.0664,6340,1190.0664,6336,1194.0664,6332,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6343" y="1195.0669">connectionCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6029.37,1137.01 C6273.79,1138.32 6479,1156.15 6479,1190.5 C6479,1225.46 6266.38,1243.31 6016.21,1244.05 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6016.21,1136.95,6022.1924,1140.9763,6028.2099,1137.0027,6022.2275,1132.9764,6016.21,1136.95" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6490,1186.0664,6494,1190.0664,6490,1194.0664,6486,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="6497" y="1195.0669">closeCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6029.66,1123.64 C6328.22,1121.84 6596,1144.13 6596,1190.5 C6596,1237.56 6320.2,1259.82 6016.32,1257.27 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6016.32,1123.73,6022.3506,1127.6837,6028.3196,1123.6377,6022.2891,1119.684,6016.32,1123.73" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6607,1186.0664,6611,1190.0664,6607,1194.0664,6603,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6614" y="1195.0669">writeCompleteCallback_</text><!--MD5=[9c123832b8725dd7e7fc347f74e01822]
reverse link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6029.17,1111.44 C6404.58,1103.77 6772,1130.12 6772,1190.5 C6772,1251.58 6396,1277.84 6016.1,1269.28 " fill="none" id="C_0002230624932100089526&lt;-C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6016.1,1111.72,6022.1864,1115.5872,6028.0971,1111.4563,6022.0107,1107.5891,6016.1,1111.72" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6783,1186.0664,6787,1190.0664,6783,1194.0664,6779,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6790" y="1195.0669">highWaterMarkCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M6016.14,1100.78 C6468.44,1085.14 6951,1115.05 6951,1190.5 C6951,1265.66 6472.2,1295.63 6021.45,1280.4 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6016.14,1280.22,6024.9977,1284.526,6021.1371,1280.3913,6025.2718,1276.5307,6016.14,1280.22" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6962,1186.0664,6966,1190.0664,6962,1194.0664,6958,1190.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="6969" y="1195.0669">highWaterMarkCallback_</text><!--MD5=[f31d6af3df8ec0838da9d6a34fa975ae]
reverse link C_0002230624932100089526 to C_0001156367011091191681--><path d="M6020.97,1295.79 C6239.93,1353.78 6471.09,1443.93 6653.5,1584 C6754.1,1661.25 6767.35,1705.85 6801.5,1828 C6860.85,2040.3 6887.96,2121.22 6801.5,2324 C6765.75,2407.85 6731.32,2418.53 6653.5,2466 C6633.3,2478.32 6602.36,2492.41 6565.14,2507.25 " fill="none" id="C_0002230624932100089526&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6016.12,1294.51,6023.8093,1300.6643,6020.9561,1295.7797,6025.8407,1292.9265,6016.12,1294.51" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6863.5" cy="2076.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6870.5" y="2080.5669">«friend»</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6565.24,2503.22 C6574.39,2500.74 6583.48,2498.34 6592.5,2496 C6660,2478.51 6682.93,2494.66 6746.5,2466 C6840.99,2423.4 6885.66,2416.97 6931.5,2324 C7028.99,2126.28 7000.94,2037.22 6931.5,1828 C6888.89,1699.6 6861.31,1660.17 6749.5,1584 C6534.69,1437.66 6267.13,1345.74 6021.14,1288.06 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6016.06,1286.88,6023.9085,1292.8299,6020.9278,1288.022,6025.7357,1285.0414,6016.06,1286.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5798.34,2487.71 C5742.25,2441.43 5689.97,2386.56 5654.5,2324 C5491.1,2035.85 5678.72,1895.31 5565.5,1584 C5561.89,1574.06 5557.98,1564.12 5553.82,1554.2 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5808.48,2495.96,5806.3479,2489.0713,5799.1691,2488.3899,5801.3012,2495.2786,5808.48,2495.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5657.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5667.5" y="2080.5669">connectionCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6128.56,2482.8 C6130.71,2439.09 6126.01,2393.51 6107.5,2354 C6098.67,2335.14 6081.97,2342 6071.5,2324 C5958.9,2130.4 6050.61,2041.36 5982.5,1828 C5946.04,1713.79 5944.65,1675.76 5867.5,1584 C5859.02,1573.91 5850.22,1563.96 5841.15,1554.16 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6127.71,2495.99,6132.0906,2490.262,6128.4881,2484.0153,6124.1075,2489.7433,6127.71,2495.99" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6074.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="6084.5" y="2080.5669">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M5939.96,2495.99 C5901.29,2444.4 5864.16,2384.9 5841.5,2324 C5764.39,2116.75 5882.2,2034.26 5802.5,1828 C5766.06,1733.7 5710.85,1641.87 5650.4,1558.65 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5647.15,1554.19,5649.2126,1563.8204,5650.0926,1558.2324,5655.6806,1559.1124,5647.15,1554.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5844.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="5854.5" y="2080.5669">messageCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6430.71,2487.78 C6488.6,2442.69 6540.8,2388.27 6574.5,2324 C6625.69,2226.38 6621.93,1927.5 6574.5,1828 C6466.8,1602.05 6244.68,1455.15 6016.19,1360.16 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6420.22,2495.8,6427.4156,2495.3272,6429.7467,2488.5033,6422.5511,2488.9761,6420.22,2495.8" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6614.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6624.5" y="2080.5669">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6167.09,2483.6 C6232.44,2309.97 6301.06,2040.68 6208.5,1828 C6162.67,1722.68 6088.85,1631.74 6002.71,1554.24 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6162.39,2495.93,6168.2604,2491.7422,6166.6526,2484.7126,6160.7822,2488.9004,6162.39,2495.93" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6256.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="6266.5" y="2080.5669">connection_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M4846.58,1558.29 C4840.32,1566.76 4834.29,1575.33 4828.5,1584 C4780.02,1656.62 4747.11,1745.7 4724.95,1827.97 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4849.67,1554.14,4841.081,1558.9597,4846.6792,1558.1469,4847.492,1563.745,4849.67,1554.14" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4834.5" cy="1691.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4841.5" y="1695.5669">«friend»</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M4899.09,1827.64 C4905.18,1817.78 4911.01,1807.88 4916.5,1798 C4965.66,1709.5 4943.63,1671.52 4994.5,1584 C4999.38,1575.61 5004.44,1567.22 5009.67,1558.85 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5012.59,1554.21,5004.423,1559.7146,5009.9362,1558.4476,5011.2032,1563.9607,5012.59,1554.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93aa647024501110e16d2f873292016e]
reverse link C_0000920759514274339356 to C_0002230624932100089526--><path d="M4964.88,1817.46 C4970.23,1811 4975.44,1804.51 4980.5,1798 C4985.52,1791.53 5046.31,1679.88 5114.29,1554.11 " fill="none" id="C_0000920759514274339356&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4956.37,1827.59,4963.2912,1825.5657,4964.0846,1818.3984,4957.1634,1820.4227,4956.37,1827.59" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5098.5,1686.5664,5102.5,1690.5664,5098.5,1694.5664,5094.5,1690.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="5105.5" y="1695.5669">upgradeCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M4966.95,1571.42 C4964.42,1575.61 4961.94,1579.8 4959.5,1584 C4908.63,1671.52 4930.66,1709.5 4881.5,1798 C4876.01,1807.88 4870.18,1817.78 4864.1,1827.64 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4961.12,1567.54,4977.59,1554.21,4973.03,1574.9,4961.12,1567.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a625fde3388fdef88cf72768c6dd1b6]
reverse link C_0002230624932100089526 to C_0001423170502760786790--><path d="M5746.98,822.33 C5751.43,814.01 5755.61,805.56 5759.5,797 C5798.87,710.42 5802.06,668.06 5759.5,583 C5754.35,572.7 5748.36,562.81 5741.7,553.32 " fill="none" id="C_0002230624932100089526&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5744.49,826.95,5752.2811,820.9252,5746.8622,822.5486,5745.2388,817.1296,5744.49,826.95" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5796.5" cy="690.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5803.5" y="694.5669">«friend»</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5843.52,553.25 C5851.2,562.65 5858.24,572.56 5864.5,583 C5913.45,664.55 5908.22,712.53 5864.5,797 C5860.09,805.51 5855.41,813.88 5850.47,822.1 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5847.7,826.65,5855.7963,821.042,5850.2997,822.379,5848.9627,816.8824,5847.7,826.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M4995.68,516.68 C4949.08,537.03 4912.8,559.28 4895.5,583 C4838.59,661.02 4851.6,745.97 4898.15,826.92 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5007.74,511.54,5000.6531,510.2075,4996.6973,516.2368,5003.7843,517.5693,5007.74,511.54" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4898.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="4908.5" y="694.5669">connSet_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5024.42,563.03 C5019.17,569.44 5014.19,576.1 5009.5,583 C4956.01,661.65 4979.01,706.91 5009.5,797 C5012.9,807.05 5016.68,817.05 5020.78,826.98 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5032.86,553.13,5025.9217,555.0948,5025.0668,562.255,5032.0051,560.2902,5032.86,553.13" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5012.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5022.5" y="694.5669">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5226.48,553.33 C5219.44,562.77 5213.06,572.65 5207.5,583 C5183.74,627.23 5191.2,720.8 5210.15,821.5 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5211.12,826.6,5213.3474,817.0063,5210.1752,821.6901,5205.4915,818.5179,5211.12,826.6" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5210.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5220.5" y="694.5669">recvMessageCallback_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5411.3,565.85 C5409.24,571.59 5407.3,577.32 5405.5,583 C5403.31,589.94 5385.5,701.41 5365.81,826.94 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5415.98,553.26,5410.1404,557.4908,5411.7998,564.5084,5417.6393,560.2776,5415.98,553.26" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5408.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5418.5" y="694.5669">connectionCallback_</text><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5554.39,566.02 C5568.55,638.59 5574.68,722.81 5553.5,797 C5550.66,806.93 5547.5,816.86 5544.04,826.76 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5551.76,553.07,5549.0331,559.7456,5554.1463,564.8303,5556.8733,558.1547,5551.76,553.07" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5570.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="5580.5" y="694.5669">writeCompleteCallback_</text><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M3348.75,2717.03 C3369.3,2869.79 3449.52,3300.69 3716.5,3497 C4014.31,3715.98 5116.45,3751.06 5625.13,3755.34 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5630.34,3755.38,5621.3746,3751.303,5625.3402,3755.3371,5621.306,3759.3027,5630.34,3755.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M3319.53,2717.22 C3264.72,2858.84 3144.07,3238.64 3329.5,3450 C3479.34,3620.8 5004.2,3712.71 5624.84,3743.29 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5630.28,3743.55,5621.4973,3739.093,5625.2866,3743.2932,5621.0864,3747.0825,5630.28,3743.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3332.5" y="3174.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3342.5" y="3181.0669">loop_</text><!--MD5=[64866fe38d904675f00d2ad62d2d950e]
link C_0002013739811805694444 to C_0000964465843177067305--><path d="M3151.11,2113.03 C3184.32,2207.95 3274.67,2466.15 3318.29,2590.81 " fill="none" id="C_0002013739811805694444-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3320.6062" cy="2597.4295" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3317.9624" x2="3323.25" y1="2589.879" y2="2604.98"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3328.1567" x2="3313.0557" y1="2594.7857" y2="2600.0733"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5993.4,423.77 C6355.83,454.84 6814.33,507.23 6988.5,583 C7144.52,650.88 7211.05,673.05 7283.5,827 C7425.24,1128.17 7290.22,1996.18 7232.5,2324 C7221.13,2388.57 7242.84,2423.99 7192.5,2466 C7138.34,2511.2 6931.41,2451.72 6876.5,2496 C6756.7,2592.62 6882.76,2719.65 6771.5,2826 C6723.92,2871.48 6533.3,2857.75 6485.5,2903 C6299.63,3078.94 6456.35,3243.24 6305.5,3450 C6262.32,3509.18 6204.21,3561.54 6145,3605.43 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6140.74,3608.58,6150.3573,3606.4568,6144.7638,3605.6121,6145.6086,3600.0186,6140.74,3608.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5993.14,404.78 C6407.39,425.62 6961.93,473.56 7154.5,583 C7273.28,650.51 7297.11,697.78 7341.5,827 C7400.79,999.58 7383.53,2356.58 7237.5,2466 C7133.8,2543.7 7047.11,2413.12 6947.5,2496 C6829.99,2593.78 6960.19,2719.52 6850.5,2826 C6826.27,2849.52 6580.21,2878.95 6556.5,2903 C6380.7,3081.32 6572.59,3250.31 6421.5,3450 C6351.63,3542.35 6245.12,3611.11 6145.41,3659.72 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.67,3662.02,6150.5128,3661.6736,6145.1648,3659.8299,6147.0085,3654.4819,6140.67,3662.02" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7294.5" y="2407.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="7304.5" y="2414.5669">loop_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5993.21,418.46 C6479.96,451.47 7166.27,510.05 7268.5,583 C7366.08,652.64 7356.69,710.15 7383.5,827 C7464.96,1182.09 7601.85,2205.17 7347.5,2466 C7296.25,2518.56 7074.96,2449.07 7018.5,2496 C6901.32,2593.41 7034.42,2719.43 6925.5,2826 C6901.06,2849.92 6651.06,2878.21 6627.5,2903 C6456.55,3082.88 6667.83,3254.1 6515.5,3450 C6423.99,3567.68 6275.52,3642.61 6145.69,3688.74 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.69,3690.51,6150.5093,3691.2726,6145.4026,3688.8392,6147.836,3683.7325,6140.69,3690.51" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7421.5" y="2407.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="7431.5" y="2414.5669">timingWheelMap_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5993.19,415.54 C6503.46,447 7241.38,505.13 7349.5,583 C7446.17,652.63 7430.98,711.58 7460.5,827 C7505.69,1003.71 7677.33,2333.01 7552.5,2466 C7480.42,2542.79 7160.28,2428.41 7079.5,2496 C6963.67,2592.91 7105.1,2719.02 6998.5,2826 C6986.01,2838.53 6701.52,2890.01 6689.5,2903 C6522.07,3083.95 6741.9,3250.19 6597.5,3450 C6492.21,3595.69 6302.75,3672.4 6145.72,3712.43 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.62,3713.72,6150.3273,3715.3841,6145.4665,3712.4905,6148.3601,3707.6297,6140.62,3713.72" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7591.5" y="2407.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="7601.5" y="2414.5669">ioLoops_</text><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M5993.28,426.29 C6544.91,469.87 7369.79,541.32 7427.5,583 C7523.79,652.54 7503.37,712.94 7536.5,827 C7562.63,916.99 7773.7,2402.54 7780.5,2496 C7791.14,2642.28 7855.71,2700.08 7780.5,2826 C7743.49,2887.97 7678.86,2843.84 7637.5,2903 C7496.76,3104.31 7600.54,3207.99 7558.5,3450 C7549.3,3502.99 7537.87,3560.89 7527.35,3611.86 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7526.34,3616.77,7532.0859,3608.771,7527.3563,3611.8744,7524.2529,3607.1448,7526.34,3616.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M5007.87,402.56 C4314.84,425.24 3116.98,478.98 2945.5,583 C2849.75,641.08 2878.32,706.4 2812.5,797 C2729.63,911.06 2622.8,1034.01 2553.26,1111.32 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2549.57,1115.43,2558.5639,1111.4162,2552.9148,1111.7135,2552.6175,1106.0645,2549.57,1115.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M5007.97,394.76 C4256.36,407.79 2890.95,449.7 2711.5,583 C2541.7,709.13 2497.25,976.69 2485.62,1110.23 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2485.19,1115.31,2489.9482,1106.6868,2485.6194,1110.3285,2481.9778,1105.9997,2485.19,1115.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2714.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="2724.5" y="694.5669">loopPoolPtr_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M5007.81,409.69 C4403.28,446.95 3432.12,549.46 3219.5,827 C3121.25,955.25 3118.51,1427.9 3219.5,1554 C3257.65,1601.64 3300.3,1554.09 3353.5,1584 C3484.74,1657.79 3497.46,1708.08 3588.5,1828 C3743.18,2031.75 3694.29,2148.61 3880.5,2324 C3981.5,2419.13 4025.11,2427.82 4158.5,2466 C4233.76,2487.54 4451.74,2443.15 4509.5,2496 C4564.43,2546.26 4552.15,2753.14 4567.5,2826 C4572.4,2849.26 4577.74,2873.33 4583.29,2897.45 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4584.48,2902.59,4586.3455,2892.9194,4583.3515,2897.719,4578.552,2894.725,4584.48,2902.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M5007.74,432.02 C4624.85,465.35 4080.49,512.51 3603.5,553 C3563.51,556.4 3276.12,559.61 3243.5,583 C3147.41,651.9 3161.56,711.24 3137.5,827 C3104.63,985.18 3033.79,1430.13 3137.5,1554 C3186.19,1612.16 3251.17,1531.07 3305.5,1584 C3375.05,1651.76 3321.71,1704.96 3349.5,1798 C3372.35,1874.51 3556.3,2411.33 3614.5,2466 C3645.85,2495.45 3670.69,2472.19 3706.5,2496 C3867.87,2603.31 3822.04,2731.98 3991.5,2826 C4015.79,2839.48 4462.37,2887.63 4485.5,2903 C4487.39,2904.25 4489.26,2905.54 4491.11,2906.85 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4495.4,2909.96,4490.4579,2901.4409,4491.3508,2907.0268,4485.7648,2907.9196,4495.4,2909.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3543.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="3553.5" y="2080.5669">recvMessageCallback_</text><!--MD5=[e4cf3da0efa4c24e1326f4e1327196a8]
link C_0001423170502760786790 to C_0002100370281243872283--><path d="M5993.14,445.76 C6451.58,509.93 7086.29,631.68 7238.5,827 C7353.31,974.33 7168.18,2456.35 7158.5,2466 C7102.76,2521.59 6873.4,2456.16 6805.5,2496 C6652.83,2585.59 6735.79,2737.48 6582.5,2826 C6500.89,2873.12 6252.14,2838.72 6159.5,2856 C6089.57,2869.04 6070.52,2872 6006.5,2903 C5952.53,2929.13 5897.68,2962.11 5846.72,2996.02 " fill="none" id="C_0001423170502760786790-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5842.43,2998.89,5852.1373,2997.2259,5846.5903,2996.1165,5847.6997,2990.5695,5842.43,2998.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79d79e4b28f578896d460465838bfe49]
reverse link C_0001423170502760786790 to C_0002100370281243872283--><path d="M4995.45,490.79 C4825.04,554.79 4659.33,658.67 4585.5,827 C4455.72,1122.9 4500.38,1242.3 4585.5,1554 C4618.67,1675.47 4622.12,1732.23 4729.5,1798 C4821.96,1854.63 5133.94,1757.71 5216.5,1828 C5389.61,1975.38 5280.88,2665.1 5441.5,2826 C5484,2868.58 5533.25,2811.28 5573.5,2856 C5608.25,2894.61 5622.77,2947.34 5627.17,2998.82 " fill="none" id="C_0001423170502760786790&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5007.73,486.25,5000.7158,484.5762,4996.473,490.407,5003.4872,492.0808,5007.73,486.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5337.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="5347.5" y="2080.5669">policyPtr_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M6006.57,433.67 C6628.47,488.83 7603.11,576.25 7610.5,583 C7691.93,657.36 7638.72,718.01 7655.5,827 C7705.05,1148.79 7664.79,1238.59 7745.5,1554 C7853.61,1976.48 7899.16,2082.89 8107.5,2466 C8134.35,2515.38 8171.62,2567.05 8200.66,2604.63 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5993.32,432.5,5998.9453,437.0117,6005.2736,433.5543,5999.6482,429.0426,5993.32,432.5" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7814.5" y="1688.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="7824.5" y="1695.5669">acceptorPtr_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M4994.55,436.64 C4612.58,471.66 4075.39,518.89 3603.5,553 C3546.22,557.14 3126.91,541.23 3087.5,583 C2939.42,739.94 3050.34,1341.45 3087.5,1554 C3107.35,1667.56 3089.74,1720.96 3175.5,1798 C3217.36,1835.61 3262.59,1784.68 3298.5,1828 C3396.3,1945.97 3362.35,2438.57 3347.75,2604.88 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5007.51,435.45,5001.1701,432.0141,4995.56,436.5448,5001.8999,439.9807,5007.51,435.45" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3178.5" y="1688.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="3188.5" y="1695.5669">timingWheelMap_</text><!--MD5=[e097413d72e14ba218428e784ac5e60d]
reverse link C_0001423170502760786790 to C_0000626107303889580949--><path d="M4994.63,437.68 C4612.69,473.23 4075.52,520.67 3603.5,553 C3537.68,557.51 3060.55,540.01 3010.5,583 C2924.38,656.97 2816.95,1471.05 2805.5,1584 C2795.91,1678.63 2805.23,1702.89 2805.5,1798 C2806.17,2031.78 2782.67,2091.65 2808.5,2324 C2833.73,2551.01 2752.83,2668.77 2918.5,2826 C3071.08,2970.81 3187.8,2831.14 3385.5,2903 C3561.57,2967 3746.07,3099.07 3816.65,3152.41 " fill="none" id="C_0001423170502760786790&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5007.58,436.47,5001.2326,433.0479,4995.6325,437.5909,5001.9799,441.013,5007.58,436.47" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2811.5" y="2073.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="2821.5" y="2080.5669">sslContextPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M7264.37,90.95 C7050.54,126.84 6436.72,229.86 5993.25,304.3 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7263.5,83.99,7284.38,87.59,7265.82,97.8,7263.5,83.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70ff9873eb8ad20d6f04092c12d73f6d]
link C_0001489562721151066050 to C_0001423170502760786790--><path d="M7488.08,107.58 C7467.5,121.51 7441.28,137.01 7415.5,146 C7163.9,233.71 6485.88,305.45 6008.33,347.21 " fill="none" id="C_0001489562721151066050-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6001.1699" cy="347.8366" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6009.1398" x2="5993.2" y1="347.1433" y2="348.53"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6001.8633" x2="6000.4765" y1="355.8065" y2="339.8667"/><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M7729.68,3328.85 C7681.71,3416.51 7621.69,3526.21 7574.56,3612.35 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7572.04,3616.95,7579.8694,3610.9751,7574.4403,3612.5638,7572.8515,3607.1346,7572.04,3616.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M7334.42,121.01 C7321.7,214.72 7306.57,438.1 7427.5,553 C7503.19,624.92 7581.82,514.36 7660.5,583 C7745.16,656.85 7704.88,716.76 7726.5,827 C7789.16,1146.49 7706.74,1247.48 7816.5,1554 C7821.82,1568.86 7831.1,1568.84 7835.5,1584 C7861.99,1675.35 7835.82,1702.89 7835.5,1798 C7833.94,2254.9 7840.51,2369.26 7828.5,2826 C7826.79,2890.97 7823.72,2962.69 7820.72,3024.16 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7327.51,119.86,7337.36,101.1,7341.36,121.91,7327.51,119.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M7360.31,119.38 C7410.69,229.53 7547.49,523.51 7585.5,553 C7633.03,589.88 7673.02,542.49 7717.5,583 C7881.48,732.35 7844.16,1358.28 7948.5,1554 C8198.66,2023.26 8785.5,1877.23 8785.5,2409 C8785.5,2409 8785.5,2409 8785.5,4279 C8785.5,4375.81 8813.92,4420.85 8750.5,4494 C8704.74,4546.79 8668.95,4527.01 8600.5,4541 C7787.74,4707.07 6794.89,4759.06 6392.66,4773.99 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7353.88,122.16,7351.95,101.06,7366.62,116.35,7353.88,122.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M8190.89,2717.09 C8156.7,2753.95 8113.74,2804.91 8084.5,2856 C8018.04,2972.11 8083.22,3357.56 7986.5,3450 C7864.74,3566.37 7399.4,3504.38 7232.5,3527 C6853.14,3578.42 6416.69,3655.63 6145.94,3705.68 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6140.77,3706.63,6150.3433,3708.9433,6145.6882,3705.7293,6148.9022,3701.0741,6140.77,3706.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M8209.09,2717.42 C8179.88,2764.72 8140.42,2835.59 8119.5,2903 C8083.21,3019.94 8127.59,3352.52 8053.5,3450 C7932.19,3609.6 8079.83,3437.67 7232.5,3527 C6851.93,3567.12 6416.02,3647.24 6145.69,3700.99 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.53,3702.02,6150.136,3704.1934,6145.4345,3701.0477,6148.5803,3696.3462,6140.53,3702.02" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8125.5,3172.0664,8129.5,3176.0664,8125.5,3180.0664,8121.5,3176.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="8132.5" y="3181.0669">loop_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M8247.47,2717.24 C8252.21,2887.34 8256.08,3397.71 8136.5,3497 C8024.46,3590.03 7874.51,3652.88 7747.92,3693.24 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7743.05,3694.79,7752.8393,3695.8717,7747.8144,3693.2734,7750.4127,3688.2486,7743.05,3694.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M8265.64,2730.22 C8303.97,2874.28 8372.28,3215.49 8238.5,3450 C8139.46,3623.6 7918.31,3698.41 7743.06,3730.64 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8262.14,2717.32,8259.8491,2724.1575,8265.2795,2728.902,8267.5704,2722.0645,8262.14,2717.32" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8323.5,3172.0664,8327.5,3176.0664,8323.5,3180.0664,8319.5,3176.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="8330.5" y="3181.0669">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M8285.56,2717.12 C8316.96,2763.95 8358.16,2834.32 8375.5,2903 C8405.26,3020.86 8445.97,3350.96 8375.5,3450 C8337.5,3503.41 7994.3,3611.71 7748.21,3683.82 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7743.14,3685.3,7752.9,3686.62,7747.94,3683.9,7750.66,3678.94,7743.14,3685.3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8421.5,3172.0664,8425.5,3176.0664,8421.5,3180.0664,8417.5,3176.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="8428.5" y="3181.0669">newConnectionCallback_</text><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M8115.66,2723.57 C8057.73,2756.28 7992.35,2801.14 7946.5,2856 C7905.9,2904.58 7876.04,2967.21 7854.94,3024.14 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8127.14,2717.19,8119.9523,2716.6095,8116.652,2723.0211,8123.8397,2723.6015,8127.14,2717.19" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7952.5,2860.0664,7956.5,2864.0664,7952.5,2868.0664,7948.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="7959.5" y="2869.0669">sock_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M8393.71,2723.33 C8468.4,2762.75 8551.96,2821.92 8594.5,2903 C8707.46,3118.28 8684.32,3224.09 8594.5,3450 C8535.55,3598.27 7747.93,4416.43 7608.5,4494 C7213.58,4713.72 6671.54,4765.27 6392.64,4776.75 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8381.81,2717.17,8385.3044,2723.4779,8392.471,2722.6784,8388.9766,2716.3705,8381.81,2717.17" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8552.5,3751.5664,8556.5,3755.5664,8552.5,3759.5664,8548.5,3755.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="8559.5" y="3760.5669">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M7374.96,115.67 C7386.75,126.93 7400.76,138.31 7415.5,146 C7469.99,174.43 7503.66,136.2 7550.5,176 C7688.06,292.86 7563.09,437.15 7701.5,553 C7751.96,595.24 7802.33,534.21 7846.5,583 C7992.11,743.85 7908.91,1340.68 7948.5,1554 C8024.6,1964.02 8175.38,2444.62 8227.37,2604.89 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7369.84,120.45,7360.87,101.25,7379.85,110.66,7369.84,120.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M4008.8,2561.75 C3969.86,2535.99 3934.02,2504.36 3908.5,2466 C3799.92,2302.76 3784.37,1715.81 3929.5,1584 C3971.77,1545.61 4386.87,1566.86 4442.5,1554 C4493.8,1542.14 4545.94,1527.51 4597.9,1510.99 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4602.92,1509.39,4593.1317,1508.2999,4598.1542,1510.9025,4595.5516,1515.9251,4602.92,1509.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M4092.59,2521.81 C4040.47,2466.21 3988.86,2397.76 3961.5,2324 C3884.84,2117.31 3843.5,2014.21 3961.5,1828 C4002.62,1763.11 4295.57,1621.49 4597.91,1488.28 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4602.81,1486.12,4592.9612,1486.0772,4598.2322,1488.1308,4596.1786,1493.4018,4602.81,1486.12" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3967.5,2071.5664,3971.5,2075.5664,3967.5,2079.5664,3963.5,2075.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="3974.5" y="2080.5669">conn_</text><!--MD5=[66a28d60dde9122b674256fe47a8607b]
link C_0000464040622375950341 to C_0002100370281243872283--><path d="M4492.25,2753.21 C4713.77,2836.79 5043.43,2961.17 5287.66,3053.32 " fill="none" id="C_0000464040622375950341-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5292.69,3055.21,5285.686,3048.2858,5288.0131,3053.4419,5282.857,3055.769,5292.69,3055.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[875d972240b01517ed889bd22efa83e7]
reverse link C_0000464040622375950341 to C_0002100370281243872283--><path d="M4504.47,2746.13 C4602.1,2779.28 4714.36,2818.37 4815.5,2856 C4973.73,2914.88 5147.93,2984.27 5292.92,3043.31 " fill="none" id="C_0000464040622375950341&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4492.02,2741.91,4496.4135,2747.6281,4503.3816,2745.7719,4498.9881,2740.0537,4492.02,2741.91" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4865.5,2860.0664,4869.5,2864.0664,4865.5,2868.0664,4861.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="4872.5" y="2869.0669">policyPtr_</text><!--MD5=[b652be82a647abba4b5fd8692aa6554f]
link C_0000464040622375950341 to C_0000626107303889580949--><path d="M4034.81,2800.02 C3981.21,2838.02 3933.79,2876.12 3915.5,2903 C3862.94,2980.23 3850.4,3094.33 3847.42,3146.97 " fill="none" id="C_0000464040622375950341-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3847.15,3152.18,3851.632,3143.4101,3847.421,3147.1874,3843.6437,3142.9764,3847.15,3152.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80034138ff2d0c3e947014f89ce57bda]
reverse link C_0000464040622375950341 to C_0000626107303889580949--><path d="M3996.91,2784.38 C3916.69,2823.09 3848.5,2856 3848.5,2856 C3788.33,2951.18 3822.33,3096.31 3838.98,3152.33 " fill="none" id="C_0000464040622375950341&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4008.83,2778.63,4001.6885,2777.6302,3998.0189,2783.8378,4005.1604,2784.8376,4008.83,2778.63" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3854.5,2860.0664,3858.5,2864.0664,3854.5,2868.0664,3850.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="3861.5" y="2869.0669">contextPtr_</text><!--MD5=[cbe65aa9ba09230aac132495b612a111]
link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4296.16,2800.03 C4307.24,2825.3 4320.36,2850.7 4335.5,2873 C4378.46,2936.25 4436.6,2996.39 4491.42,3046.14 " fill="none" id="C_0000464040622375950341-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4495.36,3049.7,4491.3653,3040.6976,4491.6506,3046.3473,4486.001,3046.6326,4495.36,3049.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4328.05,2811.54 C4340.75,2832.7 4354.4,2853.78 4368.5,2873 C4406.16,2924.35 4451.72,2976.24 4495.26,3022.2 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4321.29,2800.13,4320.9076,2807.331,4327.4076,2810.4535,4327.79,2803.2525,4321.29,2800.13" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4374.5,2860.0664,4378.5,2864.0664,4374.5,2868.0664,4370.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="4381.5" y="2869.0669">recvBuffer_</text><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M4417.14,2809.47 C4431.68,2824.67 4445.71,2840.31 4458.5,2856 C4471.03,2871.36 4483.33,2887.6 4495.3,2904.28 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4408.02,2800.07,4409.3187,2807.1632,4416.3657,2808.6926,4415.0671,2801.5994,4408.02,2800.07" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4477.5,2860.0664,4481.5,2864.0664,4477.5,2868.0664,4473.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="4484.5" y="2869.0669">writeBuffer_</text><!--MD5=[33ce3cc340c214aeadfebc02526d05f3]
link C_0000464040622375950341 to C_0001660397537883119469--><path d="M4201.58,2800.26 C4192.94,2824.52 4183.99,2849.51 4175.5,2873 C4143.98,2960.25 4106.72,3061.41 4084.38,3121.83 " fill="none" id="C_0000464040622375950341-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4082.53,3126.83,4089.4096,3119.7822,4084.2684,3122.1419,4081.9087,3117.0008,4082.53,3126.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ec1a6f5f84e6ef233285776a59af2fe]
reverse link C_0000464040622375950341 to C_0001660397537883119469--><path d="M4077.56,2810.84 C4067.69,2825.17 4059.11,2840.27 4052.5,2856 C4014.82,2945.68 4034.35,3062.31 4050.42,3126.96 " fill="none" id="C_0000464040622375950341&lt;-C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4085.36,2800.02,4078.6082,2802.5525,4078.349,2809.7589,4085.1008,2807.2264,4085.36,2800.02" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4058.5,2860.0664,4062.5,2864.0664,4058.5,2868.0664,4054.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="4065.5" y="2869.0669">peerCertificate_</text><!--MD5=[59b32ea62ecf6e8b0ce93ada6106a262]
link C_0000464040622375950341 to C_0001390130774830223499--><path d="M4240.26,2800.07 C4235.3,2976.32 4255.44,3278.85 4429.5,3450 C4595.9,3613.62 5252.96,3698.22 5625,3733.83 " fill="none" id="C_0000464040622375950341-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5630.19,3734.33,5621.6203,3729.4762,5625.2136,3733.8452,5620.8446,3737.4385,5630.19,3734.33" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4435.5,3172.0664,4439.5,3176.0664,4435.5,3180.0664,4431.5,3176.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4442.5" y="3181.0669">loop_</text><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M4812.73,2324.03 C4836.73,2379.24 4858.57,2438.5 4872.5,2496 C4912,2659.03 4859.81,2708.09 4890.5,2873 C4943.96,3160.26 4890.48,3290.79 5097.5,3497 C5237.63,3636.58 5454.32,3700.65 5625.03,3730.06 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5630.07,3730.92,5621.8731,3725.4601,5625.1415,3730.0772,5620.5245,3733.3457,5630.07,3730.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M4855.43,2324.34 C4861.03,2334.25 4866.41,2344.16 4871.5,2354 C5109.94,2815.16 4929.23,3063.2 5275.5,3450 C5368.48,3553.87 5504.97,3626.71 5625.28,3675.1 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5630.27,3677.1,5623.3993,3670.0436,5625.6276,3675.243,5620.4281,3677.4714,5630.27,3677.1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5029.5,2860.0664,5033.5,2864.0664,5029.5,2868.0664,5025.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5036.5" y="2869.0669">loop_</text><!--MD5=[cb9f027c3142c905f1a5f676e638bcfe]
link C_0000920759514274339356 to C_0001897340460211641725--><path d="M5199.82,2298.96 C5232.53,2308.56 5265.26,2317.04 5297.5,2324 C5372.19,2340.11 5922.32,2309.6 5984.5,2354 C6028.03,2385.08 5984.66,2435.37 6028.5,2466 C6087.45,2507.18 7269.46,2447.45 7322.5,2496 C7405.05,2571.57 7415.17,3386.77 7434.5,3497 C7441.07,3534.45 7449.85,3574.58 7458.73,3611.76 " fill="none" id="C_0000920759514274339356-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7459.93,3616.75,7461.7084,3607.063,7458.7577,3611.8894,7453.9314,3608.9387,7459.93,3616.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M5212.45,2302.7 C5240.94,2310.78 5269.41,2317.98 5297.5,2324 C5376.66,2340.98 5959.56,2307.04 6025.5,2354 C6069.06,2385.02 6025.65,2435.38 6069.5,2466 C6129.32,2507.78 7328.05,2447.43 7382.5,2496 C7464.9,2569.51 7488.2,3305.51 7494.39,3616.96 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5199.8,2299.06,5204.4586,2304.5643,5211.3313,2302.381,5206.6727,2296.8767,5199.8,2299.06" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7465.5,2860.0664,7469.5,2864.0664,7465.5,2868.0664,7461.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7472.5" y="2869.0669">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M5212.38,2301.24 C5240.92,2309.71 5269.41,2317.39 5297.5,2324 C5458.53,2361.88 5506.68,2319.65 5668.5,2354 C5815.49,2385.2 5839.68,2439.01 5987.5,2466 C6057.09,2478.71 7208.15,2448.42 7260.5,2496 C7322.93,2552.75 7294.42,2789.36 7305.5,2873 C7339.53,3129.9 7327.65,3198.34 7389.5,3450 C7403.13,3505.45 7422.82,3565 7441.61,3616.64 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5199.71,2297.42,5204.2994,2302.9822,5211.1988,2300.8851,5206.6094,2295.3229,5199.71,2297.42" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7311.5,2860.0664,7315.5,2864.0664,7311.5,2868.0664,7307.5,2864.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7318.5" y="2869.0669">peerAddr_</text><!--MD5=[76f47a1576e50ad875a2ac1674af8c7c]
link C_0000920759514274339356 to C_0002100370281243872283--><path d="M5089.02,2324.22 C5098.27,2333.89 5107.12,2343.82 5115.5,2354 C5149.48,2395.3 5138.86,2416.66 5159.5,2466 C5227.08,2627.52 5219.2,2682.49 5319.5,2826 C5330.48,2841.72 5337.52,2841.89 5350.5,2856 C5390.69,2899.72 5432.23,2948.64 5470.03,2994.8 " fill="none" id="C_0000920759514274339356-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5473.21,2998.69,5470.5838,2989.1977,5470.0345,2994.8279,5464.4043,2994.2786,5473.21,2998.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M4163.14,2240.72 C4104.99,2272.49 4049.77,2309.95 4002.5,2354 C3766.76,2573.64 3822.53,3029.93 3841.53,3147.42 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3842.36,3152.44,3844.8394,3142.9083,3841.545,3147.5069,3836.9464,3144.2124,3842.36,3152.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4711.62,2324.08 C4726.14,2481.53 4736.68,2689.67 4717.5,2873 C4716.66,2881.07 4715.69,2889.24 4714.61,2897.47 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4713.93,2902.6,4719.078,2894.2037,4714.5871,2897.6434,4711.1474,2893.1524,4713.93,2902.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M4743.1,2337.35 C4743.95,2342.94 4744.75,2348.5 4745.5,2354 C4776.46,2582.58 4794.85,2647.89 4744.5,2873 C4742.32,2882.77 4739.98,2892.68 4737.53,2902.67 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4741.01,2324.25,4738.0022,2330.8039,4742.8951,2336.101,4745.9029,2329.5471,4741.01,2324.25" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4782.5,2656.5664,4786.5,2660.5664,4782.5,2664.5664,4778.5,2660.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="4789.5" y="2665.5669">readBuffer_</text><!--MD5=[757c398b52da5470305d11307157893e]
link C_0000920759514274339356 to C_0001660397537883119469--><path d="M4163.33,2306.28 C4094.54,2358.71 4033.42,2421.49 3991.5,2496 C3875.15,2702.78 3985.12,3001.15 4038.83,3121.83 " fill="none" id="C_0000920759514274339356-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4041.03,3126.74,4040.9985,3116.8912,4038.9847,3122.1775,4033.6985,3120.1636,4041.03,3126.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M4163.36,2279.36 C4106.96,2296.55 4049.92,2311.94 3994.5,2324 C3916.27,2341.02 3704.86,2314.02 3635.5,2354 C3582.95,2384.29 3597.61,2420.5 3557.5,2466 C3514.09,2515.24 3459.04,2564.71 3415.51,2601.38 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3411.6,2604.66,3421.0589,2601.9159,3415.4223,2601.4367,3415.9016,2595.8002,3411.6,2604.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M4163.05,2278 C4106.71,2295.45 4049.77,2311.27 3994.5,2324 C3873.4,2351.89 3826.15,2295.51 3716.5,2354 C3659.16,2384.59 3670.52,2422.22 3622.5,2466 C3566.06,2517.45 3495.32,2566.36 3439.06,2602.2 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3434.69,2604.97,3444.4317,2603.5213,3438.9107,2602.2893,3440.1426,2596.7682,3434.69,2604.97" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3719.5" y="2407.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="3729.5" y="2414.5669">timingWheelWeakPtr_</text><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M5199.54,2259.57 C5246.48,2287.23 5291.09,2318.58 5330.5,2354 C5419.89,2434.33 5493.4,2761.03 5594.5,2826 C5663.34,2870.24 5880.83,2842.28 5961.5,2856 C6043.01,2869.86 6082.16,2845.42 6141.5,2903 C6203.19,2962.86 6217.96,3067.58 6221.1,3128.29 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6221.34,3133.3,6224.9236,3124.1263,6221.111,3128.3052,6216.932,3124.4926,6221.34,3133.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M4150.73,2292.36 C4107.49,2304.76 4064.06,2315.58 4021.5,2324 C3819.74,2363.9 3297.03,2308.34 3096.5,2354 C2943.99,2388.73 2883.18,2383.52 2774.5,2496 C2561.09,2716.88 2482.38,3637.96 2457.07,4061.82 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4163.23,2288.73,4156.3521,2286.5633,4151.7068,2292.0789,4158.5847,2294.2455,4163.23,2288.73" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2604.5" y="3174.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="2614.5" y="3181.0669">lastTimingWheelUpdateTime_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M4150.85,2290.76 C4107.53,2303.55 4064.06,2314.89 4021.5,2324 C3815.95,2367.98 3757.23,2321.88 3549.5,2354 C3290.64,2394.02 3138.87,2289.67 2977.5,2496 C2957.85,2521.13 2949.94,4395.61 3043.5,4494 C3250.05,4711.22 5385.62,4765.36 6028.43,4776.78 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4163.36,2287.03,4156.465,2284.9184,4151.8639,2290.4709,4158.7589,2292.5825,4163.36,2287.03" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2974.5,3484.0664,2978.5,3488.0664,2974.5,3492.0664,2970.5,3488.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="2981.5" y="3493.0669">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M5212.43,2302.79 C5240.93,2310.85 5269.4,2318.01 5297.5,2324 C5466.28,2359.97 5901.48,2340.22 6073.5,2354 C6483.65,2386.86 6582.79,2428.05 6992.5,2466 C7044.83,2470.85 7420.56,2467.18 7464.5,2496 C7647.37,2615.94 7739.07,2863.54 7781.16,3024.42 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5199.78,2299.15,5204.4386,2304.6543,5211.3113,2302.471,5206.6527,2296.9667,5199.78,2299.15" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7720.5,2656.5664,7724.5,2660.5664,7720.5,2664.5664,7716.5,2660.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="7727.5" y="2665.5669">socketPtr_</text><!--MD5=[b5fd39cbf5d90566dc2e46b01562db6a]
reverse link C_0000920759514274339356 to C_0000464040622375950341--><path d="M4601.96,2336.22 C4581.28,2382.06 4556.01,2427.4 4525.5,2466 C4509.83,2485.82 4491.6,2504.49 4472.14,2521.82 " fill="none" id="C_0000920759514274339356&lt;-C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4607.26,2324.25,4601.1748,2328.1192,4602.4059,2335.2244,4608.4911,2331.3552,4607.26,2324.25" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4597.5,2405.5664,4601.5,2409.5664,4597.5,2413.5664,4593.5,2409.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="4604.5" y="2414.5669">tlsProviderPtr_</text><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M5204.76,2296.96 C5235.88,2306.87 5266.95,2315.99 5297.5,2324 C5395.94,2349.81 5438.92,2298.93 5524.5,2354 C5573.86,2385.77 5549.35,2428.49 5594.5,2466 C5607.08,2476.45 5620.29,2486.39 5633.98,2495.82 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5199.76,2295.36,5207.1049,2301.9215,5204.5203,2296.8896,5209.5522,2294.305,5199.76,2295.36" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5600.5" cy="2410.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="5607.5" y="2414.5669">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M4313.26,1824.11 C4230.84,1747.96 4154.78,1656.82 4110.5,1554 C4046.6,1405.62 4030.42,967.31 4110.5,827 C4216.17,641.83 4324.33,659.06 4523.5,583 C4676.47,524.58 4849.94,482.83 5007.81,453.42 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4317.19,1827.72,4313.268,1818.6857,4313.5078,1824.3375,4307.856,1824.5773,4317.19,1827.72" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4116.5" cy="1191.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4123.5" y="1195.0669">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M7374.96,115.67 C7386.75,126.93 7400.76,138.31 7415.5,146 C7469.99,174.43 7512.04,128.06 7550.5,176 C7655.34,306.7 7660.17,426.32 7550.5,553 C7302.72,839.22 6241.75,765.39 5864.5,797 C5829.09,799.97 4610.33,801.58 4585.5,827 C4451.59,964.09 4547.77,1504.67 4620.55,1827.69 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7369.84,120.45,7360.87,101.25,7379.85,110.66,7369.84,120.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c532aab217e61acf8b6b084ec7b46eb]
link C_0002266895444343633259 to C_0000920759514274339356--><path d="M9602.26,431.28 C9623.19,604.51 9676.36,1264.46 9318.5,1554 C9264.41,1597.76 8131.32,1558.71 8066.5,1584 C7932.12,1636.43 7957.19,1746.39 7822.5,1798 C7691.5,1848.2 5435.08,1800.59 5297.5,1828 C5269.95,1833.49 5242.07,1840.17 5214.16,1847.77 " fill="none" id="C_0002266895444343633259-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5207.2678" cy="1849.6777" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5214.9756" x2="5199.56" y1="1847.5353" y2="1851.82"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5209.4101" x2="5205.1255" y1="1857.3855" y2="1841.9699"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M9515.26,431.04 C9342.49,518.06 8923.52,716.5 8546.5,797 C8286.25,852.57 8213.45,802.2 7948.5,827 C7293.29,888.32 6551.11,993.47 6021.09,1074.78 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6016.03,1075.56,6025.5319,1078.1512,6020.9724,1074.8029,6024.3206,1070.2434,6016.03,1075.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M9511.28,431.08 C9426.63,470.58 9291.99,527.33 9168.5,553 C8871.45,614.75 8786.33,536.58 8486.5,583 C8125.32,638.92 8049.7,719.65 7692.5,797 C7134.93,917.74 6496.88,1021.01 6021.42,1091.27 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6016.18,1092.05,6025.6671,1094.6948,6021.1266,1091.3209,6024.5005,1086.7803,6016.18,1092.05" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8489.5" y="687.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="8499.5" y="694.5669">conn_</text><!--MD5=[a2e7476096c2077970c9b111225cac20]
link C_0001029063960859366412 to C_0000920759514274339356--><path d="M3851.68,1272.22 C3895.08,1418.65 3991.01,1720.14 4066.5,1798 C4090.06,1822.3 4105.53,1814.35 4136.5,1828 C4140.82,1829.9 4145.15,1831.82 4149.5,1833.74 " fill="none" id="C_0001029063960859366412-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4156.1348" cy="1836.6715" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4148.8196" x2="4163.45" y1="1833.433" y2="1839.91"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4159.3733" x2="4152.8963" y1="1829.3563" y2="1843.9867"/><!--MD5=[803a46c0407296c3d5232650b81b89e3]
link C_0001029063960859366412 to C_0001289495020269537351--><path d="M3822.36,1272.11 C3817.17,1398.58 3825.51,1644.93 3950.5,1798 C3972.17,1824.53 3999.22,1801.98 4021.5,1828 C4169.27,2000.62 4003.19,2146.85 4145.5,2324 C4234.13,2434.33 4295.43,2423.76 4430.5,2466 C4474.86,2479.87 4605.55,2462.24 4637.5,2496 C4691.71,2553.29 4693.67,2736.02 4683.16,2897.57 " fill="none" id="C_0001029063960859366412-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4682.82,2902.82,4687.4032,2894.1025,4683.1488,2897.8308,4679.4205,2893.5764,4682.82,2902.82" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4436.5" cy="2410.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="4443.5" y="2414.5669">msgBuffer_</text><!--MD5=[78f71baf9803b06041c9b46669fccd94]
link C_0001727349338344491225 to C_0000920759514274339356--><path d="M4313.4,1240.04 C4323.51,1346.31 4356.82,1605.45 4452.5,1798 C4455.31,1803.66 4458.26,1809.3 4461.33,1814.92 " fill="none" id="C_0001727349338344491225-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4464.7671" cy="1821.0335" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4460.8341" x2="4468.7" y1="1814.067" y2="1828"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4471.7335" x2="4457.8006" y1="1817.1006" y2="1824.9665"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M5610.34,4353.21 C5648.66,4409.71 5706.91,4486.74 5771.5,4541 C5846.71,4604.18 5941.28,4658.14 6023.37,4698.66 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6028.26,4701.07,6021.9603,4693.4995,6023.7765,4698.8568,6018.4191,4700.6731,6028.26,4701.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M7276.2,109.77 C7086.4,200.23 6516.22,458.71 6010.5,553 C5757,600.26 5107.38,560.55 4850.5,583 C4120.33,646.82 3826.44,416.09 3219.5,827 C2909.58,1036.83 3056.44,1286.67 2794.5,1554 C2776.63,1572.24 2764.95,1567.45 2745.5,1584 C2649.97,1665.29 2650.26,1709.37 2561.5,1798 C2547,1812.48 2538.49,1811.39 2526.5,1828 C2387.07,2021.12 2497.98,2161.85 2323.5,2324 C2292,2353.28 2256.76,2319.19 2231.5,2354 C2221.3,2368.05 2239.31,3334.58 2321.5,3450 C2686.22,3962.21 4752.77,4199.55 5381.82,4260.59 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7273.33,103.39,7294.39,101.06,7279.38,116.01,7273.33,103.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6fae28fa9ff5d7f68f4068664152934]
link C_0000607400095182694101 to C_0002026475275429760163--><path d="M8475.12,4347.02 C8535.58,4435.25 8641.27,4589.47 8708.74,4687.93 " fill="none" id="C_0000607400095182694101-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8711.73,4692.28,8709.9274,4682.5975,8708.8974,4688.1598,8703.3351,4687.1297,8711.73,4692.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M8450.25,4359.68 C8467.07,4413.74 8493.73,4485 8530.5,4541 C8567.25,4596.97 8618.92,4650.29 8665,4692.27 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8446.39,4347.02,8444.3119,4353.9252,8449.8866,4358.4993,8451.9647,4351.5941,8446.39,4347.02" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8536.5,4528.0664,8540.5,4532.0664,8536.5,4536.0664,8532.5,4532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="8543.5" y="4537.0669">timers_</text><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M8364.99,4347.14 C8303.08,4408.84 8203.08,4496.65 8097.5,4541 C7792.99,4668.9 6812.17,4742.54 6397.92,4768.63 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6392.77,4768.95,6402.0038,4772.3759,6397.7601,4768.6354,6401.5005,4764.3917,6392.77,4768.95" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8134.5,4528.0664,8138.5,4532.0664,8134.5,4536.0664,8130.5,4532.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="8141.5" y="4537.0669">timerfdChannelPtr_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M7373.55,116.28 C7385.45,127.89 7399.89,139.32 7415.5,146 C7535.58,197.39 8491.35,135.69 8588.5,223 C8689.83,314.07 8680.89,691.35 8693.5,827 C8758.59,1527.15 8714.5,1705.83 8714.5,2409 C8714.5,2409 8714.5,2409 8714.5,3757 C8714.5,3860.2 8714.58,3891.69 8670.5,3985 C8629.65,4071.47 8557.25,4153.82 8502.25,4208.89 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7368.07,120.68,7359.48,101.31,7378.28,111.09,7368.07,120.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M7372.76,115.96 C7384.77,127.81 7399.48,139.48 7415.5,146 C7517.84,187.67 8299.65,164.09 8409.5,176 C8521.9,188.19 8581.16,141.49 8659.5,223 C8757.23,324.68 8856.5,1770.74 8856.5,2409 C8856.5,2409 8856.5,2409 8856.5,4279 C8856.5,4425.53 8820.65,4592.82 8795.52,4692.11 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7367.56,120.65,7359.09,101.22,7377.82,111.12,7367.56,120.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M9082.79,4308.81 C9034.42,4381.95 8908.29,4572.66 8832.25,4687.64 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8829.35,4692.03,8837.6496,4686.7274,8832.107,4687.8588,8830.9756,4682.3162,8829.35,4692.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M7372.73,116.02 C7384.74,127.88 7399.45,139.54 7415.5,146 C7552.1,201.02 8604.56,119.37 8740.5,176 C8817.26,207.98 8882.46,280.47 8921.28,331.53 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7367.52,120.7,7359.07,101.27,7377.79,111.19,7367.52,120.7" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M8970.57,464.1 C8993.42,619.11 9045.5,972.39 9067.45,1121.3 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8963.6,464.83,8967.61,444.02,8977.45,462.79,8963.6,464.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M7372.73,116.03 C7384.74,127.89 7399.45,139.54 7415.5,146 C7485.92,174.34 8705.79,170.58 8781.5,176 C8954.32,188.36 9053.61,93.31 9168.5,223 C9265.76,332.78 9234.03,421.79 9168.5,553 C9148.04,593.96 8646.96,956.3 8425.31,1115.27 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7367.52,120.71,7359.07,101.28,7377.79,111.2,7367.52,120.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f292eacf5c00648cb4d50d7f5f818066]
link C_0001453238540802541239 to C_0000630185754256426097--><path d="M8161.82,463.23 C8194.31,610.98 8266.93,941.32 8301.92,1100.45 " fill="none" id="C_0001453238540802541239-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="8303.4747" cy="1107.496" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8301.7595" x2="8305.19" y1="1099.6821" y2="1115.31"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8311.2887" x2="8295.6608" y1="1105.7808" y2="1109.2113"/><!--MD5=[96ea509b2ad1947f9d7bb54a63b044ef]
reverse link C_0001453238540802541239 to C_0002032009232244826154--><path d="M7706.31,429.29 C7274.96,467.32 6598,522.86 6010.5,553 C5388.11,584.93 3735.56,477.62 3219.5,827 C2909.58,1036.83 3056.44,1286.67 2794.5,1554 C2776.63,1572.24 2765.75,1568.45 2745.5,1584 C2636.04,1668.05 2626.91,1710.12 2520.5,1798 C2502.81,1812.61 2494.27,1811.34 2478.5,1828 C2268.16,2050.11 2109.5,2103.1 2109.5,2409 C2109.5,2409 2109.5,2409 2109.5,3757 C2109.5,3868.34 2164.58,3974.65 2230.21,4061.8 " fill="none" id="C_0001453238540802541239&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7719.31,428.14,7712.9814,424.6833,7707.3565,429.1955,7713.6851,432.6522,7719.31,428.14" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2115.5,2656.5664,2119.5,2660.5664,2115.5,2664.5664,2111.5,2660.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="2122.5" y="2665.5669">creationDate_</text><!--MD5=[ab1296281abef24fab0757a8cbe429c3]
reverse link C_0001159823987743494688 to C_0001453238540802541239--><path d="M7373.71,115.9 C7385.63,127.48 7400.03,138.99 7415.5,146 C7528.29,197.12 7573.22,142.74 7692.5,176 C7806.58,207.8 7927.79,265.68 8016.1,312.78 " fill="none" id="C_0001159823987743494688&lt;-C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7368.29,120.35,7359.61,101.02,7378.45,110.72,7368.29,120.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M9878.18,138.36 C9872.52,150.44 9867.55,163.32 9864.5,176 C9848.97,240.61 9878.62,316.42 9898.54,357.28 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9884.02,126.59,9877.7678,130.1831,9878.6798,137.3363,9884.932,133.7432,9884.02,126.59" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9870.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="9877.5" y="189.0669">secret</text><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M9920.32,139.82 C9921.23,151.81 9922.02,164.29 9922.5,176 C9925.13,240.65 9920.33,316.45 9917.1,357.3 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="9919.25,126.55,9915.7442,132.8516,9920.2127,138.5113,9923.7185,132.2098,9919.25,126.55" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9928.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="9935.5" y="189.0669">prev</text><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M3271.09,1286.12 C3163.22,1359.58 3017.17,1468.15 2907.5,1584 C2653.75,1852.05 2711.17,2002.13 2530.5,2324 C2524.9,2333.98 2518.36,2344.19 2511.68,2353.92 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3282.06,1278.68,3274.8491,1278.7393,3272.1305,1285.4183,3279.3414,1285.359,3282.06,1278.68" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2913.5,1686.5664,2917.5,1690.5664,2913.5,1694.5664,2909.5,1690.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="2920.5" y="1695.5669">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M8844.62,453.53 C8773.27,490.07 8678.34,532.47 8588.5,553 C8392.55,597.79 7884.93,567.92 7684.5,583 C6872.33,644.12 6677.23,743.94 5864.5,797 C5802.18,801.07 3670,794.78 3616.5,827 C3517.29,886.75 3464.46,1015.38 3438.97,1102.21 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8841.72,447.15,8862.69,444.14,8848.17,459.57,8841.72,447.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M6045.37,2826.16 C6039.29,2851.79 6033.44,2878.05 6028.5,2903 C5980.76,3144.08 5989.99,3207.94 5947.5,3450 C5943.42,3473.23 5938.93,3497.4 5934.29,3521.52 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5933.3,3526.67,5938.9285,3518.5879,5934.2448,3521.7601,5931.0726,3517.0763,5933.3,3526.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M6087.63,2826.32 C6083.38,2987.46 6067.68,3238.98 6014.5,3450 C6008.51,3473.78 6000.93,3498.1 5992.46,3522.13 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5990.76,3526.93,5997.5567,3519.8023,5992.4435,3522.2219,5990.0238,3517.1087,5990.76,3526.93" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6088.5" y="3174.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6098.5" y="3181.0669">loop_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M6565.09,2738.1 C6849.91,2788.07 7165.31,2853.16 7211.5,2903 C7392.62,3098.41 7188.18,3251.83 7292.5,3497 C7309.74,3537.52 7335.11,3577.04 7362.14,3612.48 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7365.44,3616.78,7363.1248,3607.2071,7362.3921,3612.8163,7356.7829,3612.0837,7365.44,3616.78" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5611.56,2789.14 C5539.16,2810.33 5465.59,2832.96 5396.5,2856 C5341.77,2874.25 5328.82,2880.98 5275.5,2903 C5118.56,2967.82 4941.34,3045.96 4816.33,3101.91 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4811.53,3104.05,4821.3788,3104.03,4816.0949,3102.01,4818.1149,3096.7261,4811.53,3104.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M5611.9,2812 C5540.9,2833.17 5468.43,2854.13 5399.5,2873 C5344.81,2887.97 5329.23,2884.89 5275.5,2903 C5115.57,2956.92 4939.99,3035.75 4816.29,3094.77 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4811.54,3097.03,4821.3851,3096.7587,4816.0514,3094.8742,4817.9359,3089.5405,4811.54,3097.03" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5459.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="5469.5" y="2869.0669">messageCallback_</text><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M6131.04,2826.24 C6158.22,2931.2 6191.57,3059.96 6209.21,3128.05 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6210.55,3133.24,6212.1603,3123.5237,6209.2937,3128.4004,6204.417,3125.5338,6210.55,3133.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e8fa56f4be30a17bd0f0cd39eb9b8c23]
reverse link C_0001156367011091191681 to C_0000434245188016003403--><path d="M6162.35,2838.86 C6164.17,2844.62 6165.89,2850.34 6167.5,2856 C6195.2,2953.4 6210.64,3071.79 6217.37,3133.49 " fill="none" id="C_0001156367011091191681&lt;-C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6158.24,2826.24,6156.2967,2833.1843,6161.9595,2837.649,6163.9027,2830.7047,6158.24,2826.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6175.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="6185.5" y="2869.0669">sslErrorCallback_</text><!--MD5=[3f61ba6780eb7bfc931522a20294fda2]
link C_0001156367011091191681 to C_0002100370281243872283--><path d="M5833.24,2826.03 C5822.49,2835.75 5812.18,2845.75 5802.5,2856 C5764.06,2896.71 5729.76,2946.45 5701.21,2994.46 " fill="none" id="C_0001156367011091191681-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5698.64,2998.8,5706.6782,2993.109,5701.1957,2994.5025,5699.8022,2989.02,5698.64,2998.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b307344d3c58e3733026c6c7a02db5d]
reverse link C_0001156367011091191681 to C_0002100370281243872283--><path d="M5883.77,2835.43 C5876.84,2842.28 5870.06,2849.15 5863.5,2856 C5821.24,2900.14 5778.77,2950.93 5741.06,2998.84 " fill="none" id="C_0001156367011091191681&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5893.31,2826.11,5886.2229,2827.4417,5884.7264,2834.4958,5891.8135,2833.1641,5893.31,2826.11" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5866.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5876.5" y="2869.0669">tlsPolicyPtr_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M6375.18,2832.78 C6514.61,2915.84 6676.81,3012.46 6793.38,3081.9 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6363.91,2826.06,6367.0166,2832.5676,6374.2185,2832.2029,6371.1119,2825.6953,6363.91,2826.06" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6445.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="6455.5" y="2869.0669">connector_</text><!--MD5=[f423207d0e32839dd54b5872c5e0f583]
reverse link C_0001156367011091191681 to C_0000626107303889580949--><path d="M5598.86,2770.34 C5480.06,2797.49 5353.57,2827.13 5236.5,2856 C5207.93,2863.05 5201.64,2868.84 5172.5,2873 C5103.35,2882.87 3970.11,2859.44 3915.5,2903 C3838.43,2964.47 3840.03,3098.6 3844.13,3152.45 " fill="none" id="C_0001156367011091191681&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5611.81,2767.38,5605.0688,2764.8194,5600.1124,2770.0571,5606.8536,2772.6177,5611.81,2767.38" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5239.5" y="2862.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="5249.5" y="2869.0669">sslContextPtr_</text><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M7372.73,116.03 C7384.74,127.89 7399.45,139.54 7415.5,146 C7485.92,174.34 8705.79,170.58 8781.5,176 C8954.32,188.36 9038.87,108.04 9168.5,223 C9281.49,323.2 9213.06,406.44 9249.5,553 C9357.1,985.77 9628.6,1233.53 9318.5,1554 C9283.25,1590.43 8455.69,1571.72 8406.5,1584 C8197.06,1636.27 8177.21,1735.83 7970.5,1798 C7870.51,1828.07 7826.72,1773.77 7737.5,1828 C7494.34,1975.78 7506.54,2103 7372.5,2354 C7347.31,2401.18 7371.19,2433.78 7328.5,2466 C7273.25,2507.69 7087.08,2486.65 7018.5,2496 C6870.67,2516.16 6710.43,2542.7 6565.28,2568.55 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7367.52,120.71,7359.07,101.28,7377.79,111.2,7367.52,120.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c243407103ec46e8c5ed77bbb7514164]
link C_0001278908569830571044 to C_0001156367011091191681--><path d="M6454.68,2106.57 C6429.22,2174.03 6361.02,2342.95 6273.5,2466 C6269.3,2471.91 6264.92,2477.82 6260.4,2483.71 " fill="none" id="C_0001278908569830571044-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6255.8879" cy="2489.4658" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6260.8257" x2="6250.95" y1="2483.1715" y2="2495.76"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6262.1821" x2="6249.5936" y1="2494.4036" y2="2484.5279"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M6892.24,3271.01 C6843.44,3342.25 6767.69,3437.85 6679.5,3497 C6518.59,3604.92 6309.23,3670.48 6145.9,3708.49 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6140.6,3709.72,6150.2706,3711.5855,6145.471,3708.5915,6148.465,3703.792,6140.6,3709.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M6903.18,3271.1 C6862.52,3342.62 6797.52,3438.57 6715.5,3497 C6546.49,3617.4 6319.55,3682.9 6145.69,3717.73 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6140.56,3718.76,6150.1648,3720.9388,6145.4651,3717.7904,6148.6135,3713.0906,6140.56,3718.76" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6735.5" y="3486.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6745.5" y="3493.0669">loop_</text><!--MD5=[33283569ac1ba65b658e3f0b917458cb]
link C_0001706043459252151324 to C_0001897340460211641725--><path d="M6968.02,3271.2 C6984.69,3339.77 7015.5,3431.82 7069.5,3497 C7117.19,3554.56 7181.26,3602.63 7245.24,3641.07 " fill="none" id="C_0001706043459252151324-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7249.84,3643.82,7244.1805,3635.7596,7245.5525,3641.2475,7240.0646,3642.6195,7249.84,3643.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M6995.43,3283.38 C7026.88,3349.54 7073.43,3433.86 7130.5,3497 C7170.12,3540.83 7218.47,3581.38 7266.88,3616.73 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6989.73,3271.24,6988.6634,3278.3718,6994.8364,3282.0993,6995.903,3274.9675,6989.73,3271.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7133.5" y="3486.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="7143.5" y="3493.0669">serverAddr_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M6967.48,3271.35 C7004.18,3504.94 7065.99,4120.46 6779.5,4494 C6685.45,4616.63 6524.39,4690.47 6397.58,4732.24 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6392.7,4733.83,6402.4978,4734.8318,6397.4519,4732.2746,6400.0091,4727.2287,6392.7,4733.83" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6975.5" y="4021.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="6985.5" y="4028.0669">channelPtr_</text><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M7372.72,116.06 C7384.73,127.92 7399.44,139.57 7415.5,146 C7496.27,178.37 8894.93,167.22 8981.5,176 C9095.72,187.58 9150.05,146.33 9235.5,223 C9339.79,316.58 9396.17,688.36 9416.5,827 C9463.37,1146.69 9584.06,1277.73 9416.5,1554 C8961.67,2303.91 8490.52,2165.63 7666.5,2466 C7608.75,2487.05 7577.74,2455.5 7531.5,2496 C7397.27,2613.56 7503.08,2732.18 7393.5,2873 C7326.15,2959.54 7227.04,3030.47 7139.63,3081.84 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7367.51,120.73,7359.06,101.3,7377.78,111.22,7367.51,120.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[255bb85fd16b3df7cc9a8a0088a159be]
link C_0000000982196670174162 to C_0001706043459252151324--><path d="M7152.5,2704.02 C7118.76,2782.78 7045.05,2954.81 6996.62,3067.84 " fill="none" id="C_0000000982196670174162-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6993.8541" cy="3074.318" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6997.0082" x2="6990.7" y1="3066.966" y2="3081.67"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7001.2061" x2="6986.5021" y1="3077.4721" y2="3071.1639"/><!--MD5=[d22c1faad4bb12ef7d278fc06caaf1fc]
link C_0002131890502232898697 to C_0001189407896771082466--><!--MD5=[7472b64d3d15154068f18b5db4215155]
link C_0001189407896771082466 to C_0000394452884449343416--><!--MD5=[f4eddc478ce7a73432f25ec782c6220c]
link C_0002131890502232898697 to C_0000026148367911088234--><!--MD5=[5c3eea4b4e7d98e2452cb31c6c061d73]
link C_0000026148367911088234 to C_0001166594284895168875--><!--MD5=[afcd30e82584d6dad1d68d23a951a309]
link C_0001166594284895168875 to C_0001016092423778930091--><!--MD5=[6d1a4a9ada3993cb3e52a4628aee3aaa]
link C_0000026148367911088234 to C_0000089957972753266749--><!--MD5=[3df554ec0fb0e9e92fc69ccff8a074ac]
@startuml
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
{static} +date() : const Date
{static} +now() : const Date
{static} +timezoneOffset() : int64_t
+after(double second) const : const Date
+roundSecond() const : const Date
+roundDay() const : const Date
+~Date() : void
+operator==(const Date & date) const : bool
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
+secondsSinceEpoch() const : int64_t
+tmStruct() const : struct tm
+toFormattedString(bool showMicroseconds) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbStringLocal() const : std::string
+toDbString() const : std::string
{static} +fromDbStringLocal(const std::string & datetime) : Date
{static} +fromDbString(const std::string & datetime) : Date
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+isSameSecond(const Date & date) const : bool
+swap(Date & that) : void
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
+family() const : sa_family_t
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
+isIpV6() const : bool
+isIntranetIp() const : bool
+isLoopbackIp() const : bool
+getSockAddr() const : const struct sockaddr *
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+ipNetEndian() const : uint32_t
+ip6NetEndian() const : const uint32_t *
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+isUnspecified() const : bool
}
class "InetAddress::()" as C_0000673025168912921705
class C_0000673025168912921705 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer<SIZE>() : void
+~FixedBuffer<SIZE>() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(bool v) : LogStream::self &
+operator<<(short ) : LogStream::self &
+operator<<(unsigned short ) : LogStream::self &
+operator<<(int ) : LogStream::self &
+operator<<(unsigned int ) : LogStream::self &
+operator<<(long ) : LogStream::self &
+operator<<(unsigned long ) : LogStream::self &
+operator<<(const long long & ) : LogStream::self &
+operator<<(const unsigned long long & ) : LogStream::self &
+operator<<(const void * ) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(const double & ) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
+operator<<<int N>(const char (&)[N] buf) : LogStream::self &
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+data() const : const char *
+length() const : int
+Fmt<T>(const char * fmt, T val) : void
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+Logger() : void
+Logger(Logger::LogLevel level) : void
+Logger(bool isSysErr) : void
+~Logger() : void
+setIndex(int index) : Logger &
+stream() : LogStream &
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +logLevel() : Logger::LogLevel
{static} +displayLocalTime() : bool
{static} +setDisplayLocalTime(bool showLocalTime) : void
}
enum "Logger::LogLevel" as C_0002131283840621188296
enum C_0002131283840621188296 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0000979080797342806546
class C_0000979080797342806546 {
+SourceFile(const char * filename = nullptr) : void
+SourceFile<int N>(const char (&)[N] arr) : void
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
+setIndex(int index) : RawLogger &
+stream() : LogStream &
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue<T>() : void
+~MpscQueue<T>() : void
+enqueue(T && input) : void
+enqueue(const T & input) : void
+dequeue(T & output) : bool
+empty() : bool
}
class "MpscQueue::BufferNode" as C_0000223701637084171141
class C_0000223701637084171141 {
+BufferNode() = default : void
+BufferNode(const T & data) : void
+BufferNode(T && data) : void
+dataPtr_ : T *
+next_ : std::atomic<BufferNode *>
}
class "MpscQueue<std::function<void()>>" as C_0002185746167032660910
class C_0002185746167032660910 {
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
+loop() : void
+quit() : void
+assertInLoopThread() : void
+resetTimerQueue() : void
+resetAfterFork() : void
+isInLoopThread() const : bool
{static} +getEventLoopOfCurrentThread() : EventLoop *
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+runAt(const Date & time, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+invalidateTimer(TimerId id) : void
+moveToCurrentThread() : void
+updateChannel(Channel * chl) : void
+removeChannel(Channel * chl) : void
+index() : size_t
+setIndex(size_t index) : void
+isRunning() : bool
+isCallingFunctions() : bool
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+runInLoop<Functor>(Functor && f) : void
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
+wait() : void
+getLoop() const : EventLoop *
+run() : void
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
+start() : void
+wait() : void
+size() : size_t
+getNextLoop() : EventLoop *
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
}
class "InetAddress::(anonymous_2577662)" as C_0001189407896771082466
class C_0001189407896771082466 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
+peek() const : const char *
+beginWrite() const : const char *
+beginWrite() : char *
+peekInt8() const : uint8_t
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+read(size_t len) : std::string
+readInt8() : uint8_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+swap(MsgBuffer & buf) : void
+readableBytes() const : size_t
+writableBytes() const : size_t
+append(const MsgBuffer & buf) : void
+append(const char * buf, size_t len) : void
+append(const std::string & buf) : void
+appendInt8(const uint8_t b) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+addInFront(const char * buf, size_t len) : void
+addInFrontInt8(const uint8_t b) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+retrieveAll() : void
+retrieve(size_t len) : void
+readFd(int fd, int * retErrno) : ssize_t
+retrieveUntil(const char * end) : void
+findCRLF() const : const char *
+ensureWritableBytes(size_t len) : void
+hasWritten(size_t len) : void
+unwrite(size_t offset) : void
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
+append<int N>(const char (&)[N] buf) : void
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
kSSLProtocolError
}
abstract "Certificate" as C_0001660397537883119469
abstract C_0001660397537883119469 {
+~Certificate() = default : void
{abstract} +sha1Fingerprint() const = 0 : std::string
{abstract} +sha256Fingerprint() const = 0 : std::string
{abstract} +pem() const = 0 : std::string
}
class "TLSPolicy" as C_0002100370281243872283
class C_0002100370281243872283 {
+setConfCmds(const std::vector<std::pair<std::string,std::string>> & sslConfCmds) : TLSPolicy &
+setHostname(const std::string & hostname) : TLSPolicy &
+setCertPath(const std::string & certPath) : TLSPolicy &
+setKeyPath(const std::string & keyPath) : TLSPolicy &
+setCaPath(const std::string & caPath) : TLSPolicy &
+setUseOldTLS(bool useOldTLS) : TLSPolicy &
+setAlpnProtocols(const std::vector<std::string> & alpnProtocols) : TLSPolicy &
+setAlpnProtocols(std::vector<std::string> && alpnProtocols) : TLSPolicy &
+setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &
+setValidate(bool enable) : TLSPolicy &
+setAllowBrokenChain(bool allow) : TLSPolicy &
+getConfCmds() const : const std::vector<std::pair<std::string,std::string>> &
+getHostname() const : const std::string &
+getCertPath() const : const std::string &
+getKeyPath() const : const std::string &
+getCaPath() const : const std::string &
+getUseOldTLS() const : bool
+getValidate() const : bool
+getAllowBrokenChain() const : bool
+getAlpnProtocols() const : const std::vector<std::string> &
+getAlpnProtocols() : const std::vector<std::string> &
+getUseSystemCertStore() const : bool
{static} +defaultServerPolicy(const std::string & certPath, const std::string & keyPath) : std::shared_ptr<TLSPolicy>
{static} +defaultClientPolicy(const std::string & hostname = "") : std::shared_ptr<TLSPolicy>
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
{abstract} +shutdown() = 0 : void
{abstract} +forceClose() = 0 : void
{abstract} +getLoop() = 0 : EventLoop *
+setContext(const std::shared_ptr<void> & context) : void
+setContext(std::shared_ptr<void> && context) : void
{abstract} +applicationProtocol() const = 0 : std::string
+hasContext() const : bool
+clearContext() : void
{abstract} +keepAlive() = 0 : void
{abstract} +isKeepAlive() = 0 : bool
{abstract} +bytesSent() const = 0 : size_t
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
{abstract} +peerCertificate() const = 0 : CertificatePtr
{abstract} +sniName() const = 0 : std::string
{abstract} +startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) = 0 : void
+startClientEncryption(std::function<void (const TcpConnectionPtr &)> && callback, bool useOldTLS = false, bool validateCert = true, const std::string & hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
+setValidationPolicy(TLSPolicy && policy) : void
+setRecvMsgCallback(const RecvMessageCallback & cb) : void
+setRecvMsgCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setCloseCallback(const CloseCallback & cb) : void
+setCloseCallback(CloseCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
{abstract} +connectEstablished() = 0 : void
{abstract} +connectDestroyed() = 0 : void
{abstract} +enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) = 0 : void
+getContext<T>() : std::shared_ptr<T>
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
+getLoop() : EventLoop *
+~TimingWheel() : void
}
class "TimingWheel::CallbackEntry" as C_0002013739811805694444
class C_0002013739811805694444 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
+start() : void
+stop() : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setIoLoops(const std::vector<EventLoop *> & ioLoops) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+name() const : const std::string &
+ipPort() const : std::string
+address() const : const InetAddress &
+getLoop() const : EventLoop *
+getIoLoops() const : std::vector<EventLoop *>
+kickoffIdleConnections(size_t timeout) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & caPath = "") : void
+enableSSL(TLSPolicyPtr policy) : void
}
class "TcpServer::IgnoreSigPipe" as C_0001489562721151066050
class C_0001489562721151066050 {
+IgnoreSigPipe() : void
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
{static} +createNonblockingSocketOrDie(int family) : int
{static} +getSocketError(int sockfd) : int
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +isSelfConnect(int sockfd) : bool
+Socket(int sockfd) : void
+~Socket() : void
+bindAddress(const InetAddress & localaddr) : void
+listen() : void
+accept(InetAddress * peeraddr) : int
+closeWrite() : void
+read(char * buffer, uint64_t len) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
+setTcpNoDelay(bool on) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setKeepAlive(bool on) : void
+getSocketError() : int
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setCloseCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+fd() const : int
+events() const : int
+revents() const : int
+isNoneEvent() const : bool
+disableAll() : void
+remove() : void
+ownerLoop() : EventLoop *
+enableReading() : void
+disableReading() : void
+enableWriting() : void
+disableWriting() : void
+isWriting() const : bool
+isReading() const : bool
+updateEvents(int events) : void
+tie(const std::shared_ptr<void> & obj) : void
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
+addr() const : const InetAddress &
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
+listen() : void
}
abstract "TLSProvider" as C_0000464040622375950341
abstract C_0000464040622375950341 {
+TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void
+~TLSProvider() = default : void
{abstract} +recvData(MsgBuffer * buffer) = 0 : void
{abstract} +sendData(const char * ptr, size_t size) = 0 : ssize_t
{abstract} +close() = 0 : void
{abstract} +startEncryption() = 0 : void
+sendBufferedData() : bool
+getBufferedData() : MsgBuffer &
+appendToWriteBuffer(const char * ptr, size_t size) : void
+setWriteCallback(TLSProvider::WriteCallback cb) : void
+setErrorCallback(TLSProvider::ErrorCallback cb) : void
+setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void
+setMessageCallback(TLSProvider::MessageCallback cb) : void
+setCloseCallback(TLSProvider::CloseCallback cb) : void
+getRecvBuffer() : MsgBuffer &
+peerCertificate() const : const CertificatePtr &
+applicationProtocol() const : const std::string &
+sniName() const : const std::string &
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void
+~TcpConnectionImpl() : void
+send(const char * msg, size_t len) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+connected() const : bool
+disconnected() const : bool
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+keepAlive() : void
+isKeepAlive() : bool
+setTcpNoDelay(bool on) : void
+shutdown() : void
+forceClose() : void
+getLoop() : EventLoop *
+bytesSent() const : size_t
+bytesReceived() const : size_t
+isSSLConnection() const : bool
+connectEstablished() : void
+connectDestroyed() : void
+getRecvBuffer() : MsgBuffer *
+applicationProtocol() const : std::string
+peerCertificate() const : CertificatePtr
+sniName() const : std::string
+startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) : void
+enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) : void
}
class "TcpConnectionImpl::KickoffEntry" as C_0002266895444343633259
class C_0002266895444343633259 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
}
class "TcpConnectionImpl::BufferNode" as C_0001029063960859366412
class C_0001029063960859366412 {
+isFile() const : bool
+~BufferNode() : void
+sendFd_ : int
+offset_ : off_t
+fileBytesToSend_ : ssize_t
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
+nDataWritten_ : std::size_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
+closeConnection_ : bool
}
enum "TcpConnectionImpl::ConnStatus" as C_0001727349338344491225
enum C_0001727349338344491225 {
Disconnected
Connecting
Connected
Disconnecting
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
+assertInLoopThread() : void
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +updateChannel(Channel * channel) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{static} +newPoller(EventLoop * loop) : Poller *
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
+str_ : const char *
+len_ : const unsigned int
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
+run() const : void
+restart(const TimePoint & now) : void
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
+when() const : const TimePoint &
+isRepeat() : bool
+id() : TimerId
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
}
class "ScopeExit<F>" as C_0000026148367911088234
class C_0000026148367911088234 {
+ScopeExit<F>(F && f) : void
+~ScopeExit<F>() : void
+f_ : F
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+getName() const : std::string
+syncTaskInQueue(const std::function<void ()> & task) : void
+~TaskQueue() : void
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+getTaskCount() : size_t
+stop() : void
+~ConcurrentTaskQueue() : void
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+output(const char * msg, const uint64_t len) : void
+flush() : void
+startLogging() : void
+setFileSizeLimit(uint64_t limit) : void
+setSwitchOnLimitOnly(bool flag = true) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+~AsyncFileLogger() : void
+AsyncFileLogger() : void
}
class "AsyncFileLogger::LoggerFile" as C_0001453238540802541239
class C_0001453238540802541239 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName, bool switchOnLimitOnly = false) : void
+~LoggerFile() : void
+writeLog(const StringPtr buf) : void
+open() : void
+switchLog(bool openNewOne) : void
+getLength() : uint64_t
+operator bool() const : bool
+flush() : void
}
class "utils::Hash128" as C_0001166594284895168875
class C_0001166594284895168875 {
+bytes : unsigned char[16]
}
class "utils::Hash160" as C_0001016092423778930091
class C_0001016092423778930091 {
+bytes : unsigned char[20]
}
class "utils::Hash256" as C_0000080756732781028581
class C_0000080756732781028581 {
+bytes : unsigned char[32]
}
class "utils::RngState" as C_0000195316585713148470
class C_0000195316585713148470 {
+secret : utils::Hash256
+prev : utils::Hash256
+time : int64_t
+counter : uint64_t
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+waitAllTasksFinished() : void
+SerialTaskQueue() : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
+isRuningTask() : bool
+getTaskCount() : size_t
+stop() : void
}
class "InetAddress::(anonymous_2039330)" as C_0000089957972753266749
class C_0000089957972753266749 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
+connect() : void
+disconnect() : void
+stop() : void
+connection() const : TcpConnectionPtr
+getLoop() const : EventLoop *
+retry() const : bool
+enableRetry() : void
+name() const : const std::string &
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
+enableSSL(TLSPolicyPtr policy) : void
}
class "TcpClient::IgnoreSigPipe" as C_0001278908569830571044
class C_0001278908569830571044 {
+IgnoreSigPipe() : void
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+~Connector() : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+serverAddress() const : const InetAddress &
+start() : void
+restart() : void
+stop() : void
}
enum "Connector::Status" as C_0000000982196670174162
enum C_0000000982196670174162 {
Disconnected
Connecting
Connected
}
C_0001897340460211641725 o- - C_0000673025168912921705
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 ..> C_0001930690020065325250
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0002131283840621188296 - -+ C_0002053752992472264214
C_0000979080797342806546 - -+ C_0002053752992472264214
C_0000716430590791918928 ..> C_0001930690020065325250
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000223701637084171141 - -+ C_0000912667184903365399
C_0002185746167032660910 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 ..> C_0000764690828649606524
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 ..> C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0002061035340998974559 ..> C_0001390130774830223499
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0002230624932100089526 ..> C_0001289495020269537351
C_0002230624932100089526 ..> C_0001897340460211641725
C_0002230624932100089526 ..> C_0001390130774830223499
C_0002230624932100089526 ..> C_0001660397537883119469
C_0002230624932100089526 ..> C_0002100370281243872283
C_0002230624932100089526 ..> C_0000434245188016003403
C_0002230624932100089526 ..> C_0000964465843177067305
C_0002230624932100089526 o- - C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #connectionCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #closeCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #writeCompleteCallback_
C_0002230624932100089526 o- - C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 o- - C_0000434245188016003403 : #sslErrorCallback_
C_0002230624932100089526 o- - C_0002100370281243872283 : #tlsPolicy_
C_0002230624932100089526 <.. C_0001156367011091191681 : +<<friend>>
C_0002230624932100089526 <.. C_0000920759514274339356 : +<<friend>>
C_0002230624932100089526 <.. C_0001423170502760786790 : +<<friend>>
C_0000964465843177067305 ..> C_0001390130774830223499
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0002013739811805694444 - -+ C_0000964465843177067305
C_0001423170502760786790 ..> C_0001390130774830223499
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 ..> C_0002061035340998974559
C_0001423170502760786790 ..> C_0002230624932100089526
C_0001423170502760786790 ..> C_0001289495020269537351
C_0001423170502760786790 ..> C_0002100370281243872283
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 o- - C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 o- - C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 - -> C_0001390130774830223499 : -timingWheelMap_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 - -> C_0001390130774830223499 : -ioLoops_
C_0001423170502760786790 o- - C_0002100370281243872283 : -policyPtr_
C_0001423170502760786790 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0001489562721151066050 - -+ C_0001423170502760786790
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0000764690828649606524 ..> C_0001390130774830223499
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0000184886692180276257 ..> C_0001390130774830223499
C_0000184886692180276257 ..> C_0001897340460211641725
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0000464040622375950341 ..> C_0002230624932100089526
C_0000464040622375950341 ..> C_0002100370281243872283
C_0000464040622375950341 ..> C_0000626107303889580949
C_0000464040622375950341 ..> C_0001289495020269537351
C_0000464040622375950341 ..> C_0001660397537883119469
C_0000464040622375950341 - -> C_0002230624932100089526 : #conn_
C_0000464040622375950341 o- - C_0002100370281243872283 : #policyPtr_
C_0000464040622375950341 o- - C_0000626107303889580949 : #contextPtr_
C_0000464040622375950341 o- - C_0001289495020269537351 : #recvBuffer_
C_0000464040622375950341 - -> C_0001390130774830223499 : #loop_
C_0000464040622375950341 o- - C_0001660397537883119469 : #peerCertificate_
C_0000464040622375950341 o- - C_0001289495020269537351 : #writeBuffer_
C_0000920759514274339356 ..> C_0001390130774830223499
C_0000920759514274339356 ..> C_0001897340460211641725
C_0000920759514274339356 ..> C_0002100370281243872283
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001289495020269537351
C_0000920759514274339356 ..> C_0002230624932100089526
C_0000920759514274339356 ..> C_0001660397537883119469
C_0000920759514274339356 ..> C_0000964465843177067305
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 o- - C_0000464040622375950341 : #tlsProviderPtr_
C_0000920759514274339356 o- - C_0002230624932100089526 : #upgradeCallback_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0002266895444343633259 - -+ C_0000920759514274339356
C_0002266895444343633259 ..> C_0002230624932100089526
C_0002266895444343633259 - -> C_0002230624932100089526 : -conn_
C_0001029063960859366412 - -+ C_0000920759514274339356
C_0001029063960859366412 - -> C_0001289495020269537351 : +msgBuffer_
C_0001727349338344491225 - -+ C_0000920759514274339356
C_0000300034150397884642 ..> C_0001390130774830223499
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 ..> C_0001390130774830223499
C_0000607400095182694101 ..> C_0002026475275429760163
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0001453238540802541239 - -+ C_0000630185754256426097
C_0001453238540802541239 o- - C_0002032009232244826154 : #creationDate_
C_0001159823987743494688 <|- - C_0001453238540802541239
C_0000195316585713148470 o- - C_0000080756732781028581 : +secret
C_0000195316585713148470 o- - C_0000080756732781028581 : +prev
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0001156367011091191681 ..> C_0001390130774830223499
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 ..> C_0002230624932100089526
C_0001156367011091191681 ..> C_0001289495020269537351
C_0001156367011091191681 ..> C_0000434245188016003403
C_0001156367011091191681 ..> C_0002100370281243872283
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 o- - C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 o- - C_0002100370281243872283 : -tlsPolicyPtr_
C_0001156367011091191681 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0001278908569830571044 - -+ C_0001156367011091191681
C_0001706043459252151324 ..> C_0001390130774830223499
C_0001706043459252151324 ..> C_0001897340460211641725
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0000000982196670174162 - -+ C_0001706043459252151324

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>