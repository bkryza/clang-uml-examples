<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5351px" preserveAspectRatio="none" style="width:9809px;height:5351px;" version="1.1" viewBox="0 0 9809 5351" width="9809px" zoomAndPan="magnify"><defs><filter height="300%" id="f185g535qk8xh5" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[fed249d7874c77c08dcf893861b9a747]
class C_0001166594284895168875--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="60.8047" id="C_0001166594284895168875" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="49.5" y="46.5"/><ellipse cx="87" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M89.9688,68.1406 Q89.3906,68.4375 88.75,68.5781 Q88.1094,68.7344 87.4063,68.7344 Q84.9063,68.7344 83.5781,67.0938 Q82.2656,65.4375 82.2656,62.3125 Q82.2656,59.1875 83.5781,57.5313 Q84.9063,55.875 87.4063,55.875 Q88.1094,55.875 88.75,56.0313 Q89.4063,56.1875 89.9688,56.4844 L89.9688,59.2031 Q89.3438,58.625 88.75,58.3594 Q88.1563,58.0781 87.5313,58.0781 Q86.1875,58.0781 85.5,59.1563 Q84.8125,60.2188 84.8125,62.3125 Q84.8125,64.4063 85.5,65.4844 Q86.1875,66.5469 87.5313,66.5469 Q88.1563,66.5469 88.75,66.2813 Q89.3438,66 89.9688,65.4219 L89.9688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="106" y="66.6543">utils::Hash128</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50.5" x2="220.5" y1="78.5" y2="78.5"/><ellipse cx="60.5" cy="89.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="69.5" y="92.7104">bytes : unsigned char[16]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50.5" x2="220.5" y1="99.3047" y2="99.3047"/><!--MD5=[021cb10fbb8ce3370cd11a9cd6334df8]
class C_0001016092423778930091--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="60.8047" id="C_0001016092423778930091" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="256.5" y="46.5"/><ellipse cx="294" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M296.9688,68.1406 Q296.3906,68.4375 295.75,68.5781 Q295.1094,68.7344 294.4063,68.7344 Q291.9063,68.7344 290.5781,67.0938 Q289.2656,65.4375 289.2656,62.3125 Q289.2656,59.1875 290.5781,57.5313 Q291.9063,55.875 294.4063,55.875 Q295.1094,55.875 295.75,56.0313 Q296.4063,56.1875 296.9688,56.4844 L296.9688,59.2031 Q296.3438,58.625 295.75,58.3594 Q295.1563,58.0781 294.5313,58.0781 Q293.1875,58.0781 292.5,59.1563 Q291.8125,60.2188 291.8125,62.3125 Q291.8125,64.4063 292.5,65.4844 Q293.1875,66.5469 294.5313,66.5469 Q295.1563,66.5469 295.75,66.2813 Q296.3438,66 296.9688,65.4219 L296.9688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="313" y="66.6543">utils::Hash160</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="257.5" x2="427.5" y1="78.5" y2="78.5"/><ellipse cx="267.5" cy="89.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="276.5" y="92.7104">bytes : unsigned char[20]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="257.5" x2="427.5" y1="99.3047" y2="99.3047"/><!--MD5=[8c8e5215c80d1cd8a8ee6133aa829fcf]
class C_0000080756732781028581--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="60.8047" id="C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="821.5" y="357.5"/><ellipse cx="859" cy="373.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M861.9688,379.1406 Q861.3906,379.4375 860.75,379.5781 Q860.1094,379.7344 859.4063,379.7344 Q856.9063,379.7344 855.5781,378.0938 Q854.2656,376.4375 854.2656,373.3125 Q854.2656,370.1875 855.5781,368.5313 Q856.9063,366.875 859.4063,366.875 Q860.1094,366.875 860.75,367.0313 Q861.4063,367.1875 861.9688,367.4844 L861.9688,370.2031 Q861.3438,369.625 860.75,369.3594 Q860.1563,369.0781 859.5313,369.0781 Q858.1875,369.0781 857.5,370.1563 Q856.8125,371.2188 856.8125,373.3125 Q856.8125,375.4063 857.5,376.4844 Q858.1875,377.5469 859.5313,377.5469 Q860.1563,377.5469 860.75,377.2813 Q861.3438,377 861.9688,376.4219 L861.9688,379.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="878" y="377.6543">utils::Hash256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="822.5" x2="992.5" y1="389.5" y2="389.5"/><ellipse cx="832.5" cy="400.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="841.5" y="403.7104">bytes : unsigned char[32]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="822.5" x2="992.5" y1="410.3047" y2="410.3047"/><!--MD5=[a74ca64b85c4b088ee21340913b25922]
class C_0000195316585713148470--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="99.2188" id="C_0000195316585713148470" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="833.5" y="27.5"/><ellipse cx="862.9" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M865.8688,49.1406 Q865.2906,49.4375 864.65,49.5781 Q864.0094,49.7344 863.3063,49.7344 Q860.8063,49.7344 859.4781,48.0938 Q858.1656,46.4375 858.1656,43.3125 Q858.1656,40.1875 859.4781,38.5313 Q860.8063,36.875 863.3063,36.875 Q864.0094,36.875 864.65,37.0313 Q865.3063,37.1875 865.8688,37.4844 L865.8688,40.2031 Q865.2438,39.625 864.65,39.3594 Q864.0563,39.0781 863.4313,39.0781 Q862.0875,39.0781 861.4,40.1563 Q860.7125,41.2188 860.7125,43.3125 Q860.7125,45.4063 861.4,46.4844 Q862.0875,47.5469 863.4313,47.5469 Q864.0563,47.5469 864.65,47.2813 Q865.2438,47 865.8688,46.4219 L865.8688,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="880.1" y="47.6543">utils::RngState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="834.5" x2="988.5" y1="59.5" y2="59.5"/><ellipse cx="844.5" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="853.5" y="73.7104">secret : utils::Hash256</text><ellipse cx="844.5" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="853.5" y="86.5151">prev : utils::Hash256</text><ellipse cx="844.5" cy="96.1094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="853.5" y="99.3198">time : int64_t</text><ellipse cx="844.5" cy="108.9141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="853.5" y="112.1245">counter : uint64_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="834.5" x2="988.5" y1="118.7188" y2="118.7188"/><!--MD5=[960e26dab4a717dc2283cad9ee4f0dc1]
class C_0001159823987743494688--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="48" id="C_0001159823987743494688" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="3677.5" y="53"/><ellipse cx="3692.5" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3695.4688,74.6406 Q3694.8906,74.9375 3694.25,75.0781 Q3693.6094,75.2344 3692.9063,75.2344 Q3690.4063,75.2344 3689.0781,73.5938 Q3687.7656,71.9375 3687.7656,68.8125 Q3687.7656,65.6875 3689.0781,64.0313 Q3690.4063,62.375 3692.9063,62.375 Q3693.6094,62.375 3694.25,62.5313 Q3694.9063,62.6875 3695.4688,62.9844 L3695.4688,65.7031 Q3694.8438,65.125 3694.25,64.8594 Q3693.6563,64.5781 3693.0313,64.5781 Q3691.6875,64.5781 3691,65.6563 Q3690.3125,66.7188 3690.3125,68.8125 Q3690.3125,70.9063 3691,71.9844 Q3691.6875,73.0469 3693.0313,73.0469 Q3693.6563,73.0469 3694.25,72.7813 Q3694.8438,72.5 3695.4688,71.9219 L3695.4688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="3706.5" y="73.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3678.5" x2="3790.5" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3678.5" x2="3790.5" y1="93" y2="93"/><!--MD5=[714f7dd97bf9905d46f0f594debdd7af]
class C_0002032009232244826154--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="432.1406" id="C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="2907.5" y="4175"/><ellipse cx="3397.25" cy="4191" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3400.2188,4196.6406 Q3399.6406,4196.9375 3399,4197.0781 Q3398.3594,4197.2344 3397.6563,4197.2344 Q3395.1563,4197.2344 3393.8281,4195.5938 Q3392.5156,4193.9375 3392.5156,4190.8125 Q3392.5156,4187.6875 3393.8281,4186.0313 Q3395.1563,4184.375 3397.6563,4184.375 Q3398.3594,4184.375 3399,4184.5313 Q3399.6563,4184.6875 3400.2188,4184.9844 L3400.2188,4187.7031 Q3399.5938,4187.125 3399,4186.8594 Q3398.4063,4186.5781 3397.7813,4186.5781 Q3396.4375,4186.5781 3395.75,4187.6563 Q3395.0625,4188.7188 3395.0625,4190.8125 Q3395.0625,4192.9063 3395.75,4193.9844 Q3396.4375,4195.0469 3397.7813,4195.0469 Q3398.4063,4195.0469 3399,4194.7813 Q3399.5938,4194.5 3400.2188,4193.9219 L3400.2188,4196.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="3417.75" y="4195.1543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2908.5" x2="3924.5" y1="4207" y2="4207"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2908.5" x2="3924.5" y1="4215" y2="4215"/><ellipse cx="2918.5" cy="4226" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="2927.5" y="4229.2104">Date() : void</text><ellipse cx="2918.5" cy="4238.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2927.5" y="4242.0151">Date(int64_t microSec) : void</text><ellipse cx="2918.5" cy="4251.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="2927.5" y="4254.8198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="2918.5" cy="4264.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="2927.5" y="4267.6245">date() : const Date</text><ellipse cx="2918.5" cy="4277.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="2927.5" y="4280.4292">now() : const Date</text><ellipse cx="2918.5" cy="4290.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="144" x="2927.5" y="4293.2339">timezoneOffset() : int64_t</text><ellipse cx="2918.5" cy="4302.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2927.5" y="4306.0386">after(double second) const : const Date</text><ellipse cx="2918.5" cy="4315.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="2927.5" y="4318.8433">roundSecond() const : const Date</text><ellipse cx="2918.5" cy="4328.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2927.5" y="4331.6479">roundDay() const : const Date</text><ellipse cx="2918.5" cy="4341.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="2927.5" y="4344.4526">~Date() : void</text><ellipse cx="2918.5" cy="4354.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="2927.5" y="4357.2573">operator==(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4366.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="2927.5" y="4370.062">operator!=(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4379.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2927.5" y="4382.8667">operator&lt;(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4392.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2927.5" y="4395.6714">operator&gt;(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4405.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="2927.5" y="4408.4761">operator&gt;=(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4418.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="2927.5" y="4421.2808">operator&lt;=(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4430.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2927.5" y="4434.0854">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="2918.5" cy="4443.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2927.5" y="4446.8901">secondsSinceEpoch() const : int64_t</text><ellipse cx="2918.5" cy="4456.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2927.5" y="4459.6948">tmStruct() const : struct tm</text><ellipse cx="2918.5" cy="4469.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="2927.5" y="4472.4995">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="2918.5" cy="4482.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="2927.5" y="4485.3042">toCustomedFormattedString(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="2918.5" cy="4494.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="2927.5" y="4498.1089">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><ellipse cx="2918.5" cy="4507.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="2927.5" y="4510.9136">toCustomedFormattedStringLocal(const std::string &amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="2918.5" cy="4520.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2927.5" y="4523.7183">toDbStringLocal() const : std::string</text><ellipse cx="2918.5" cy="4533.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2927.5" y="4536.5229">toDbString() const : std::string</text><ellipse cx="2918.5" cy="4546.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="313" x="2927.5" y="4549.3276">fromDbStringLocal(const std::string &amp; datetime) : Date</text><ellipse cx="2918.5" cy="4558.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="284" x="2927.5" y="4562.1323">fromDbString(const std::string &amp; datetime) : Date</text><ellipse cx="2918.5" cy="4571.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="511" x="2927.5" y="4574.937">toCustomedFormattedString(const std::string &amp; fmtStr, char * str, size_t len) const : void</text><ellipse cx="2918.5" cy="4584.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="2927.5" y="4587.7417">isSameSecond(const Date &amp; date) const : bool</text><ellipse cx="2918.5" cy="4597.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2927.5" y="4600.5464">swap(Date &amp; that) : void</text><!--MD5=[c6f5cf5e248df404940e26523f05521d]
class C_0000111393647775817392--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="214.4609" id="C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="1951" y="2801.5"/><ellipse cx="1997.25" cy="2817.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2000.2188,2823.1406 Q1999.6406,2823.4375 1999,2823.5781 Q1998.3594,2823.7344 1997.6563,2823.7344 Q1995.1563,2823.7344 1993.8281,2822.0938 Q1992.5156,2820.4375 1992.5156,2817.3125 Q1992.5156,2814.1875 1993.8281,2812.5313 Q1995.1563,2810.875 1997.6563,2810.875 Q1998.3594,2810.875 1999,2811.0313 Q1999.6563,2811.1875 2000.2188,2811.4844 L2000.2188,2814.2031 Q1999.5938,2813.625 1999,2813.3594 Q1998.4063,2813.0781 1997.7813,2813.0781 Q1996.4375,2813.0781 1995.75,2814.1563 Q1995.0625,2815.2188 1995.0625,2817.3125 Q1995.0625,2819.4063 1995.75,2820.4844 Q1996.4375,2821.5469 1997.7813,2821.5469 Q1998.4063,2821.5469 1999,2821.2813 Q1999.5938,2821 2000.2188,2820.4219 L2000.2188,2823.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="2017.75" y="2821.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="2169" y="2798.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="2170" y="2810.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1952" x2="2215" y1="2833.5" y2="2833.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1952" x2="2215" y1="2841.5" y2="2841.5"/><ellipse cx="1962" cy="2852.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1971" y="2855.7104">FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="1962" cy="2865.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1971" y="2868.5151">~FixedBuffer&lt;SIZE&gt;() : void</text><ellipse cx="1962" cy="2878.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1971" y="2881.3198">append(const char * buf, size_t len) : bool</text><ellipse cx="1962" cy="2890.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1971" y="2894.1245">data() const : const char *</text><ellipse cx="1962" cy="2903.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1971" y="2906.9292">length() const : int</text><ellipse cx="1962" cy="2916.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1971" y="2919.7339">current() : char *</text><ellipse cx="1962" cy="2929.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1971" y="2932.5386">avail() const : int</text><ellipse cx="1962" cy="2942.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1971" y="2945.3433">add(size_t len) : void</text><ellipse cx="1962" cy="2954.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1971" y="2958.1479">reset() : void</text><ellipse cx="1962" cy="2967.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1971" y="2970.9526">zeroBuffer() : void</text><ellipse cx="1962" cy="2980.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1971" y="2983.7573">debugString() : const char *</text><ellipse cx="1962" cy="2993.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="1971" y="2996.562">setCookie(void (*)() cookie) : void</text><ellipse cx="1962" cy="3006.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1971" y="3009.3667">toString() const : std::string</text><!--MD5=[f84955586738cf1964be273add2905f3]
class C_0000510041652600390686--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="48" id="C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="1727.5" y="2369"/><ellipse cx="1742.5" cy="2385" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1745.4688,2390.6406 Q1744.8906,2390.9375 1744.25,2391.0781 Q1743.6094,2391.2344 1742.9063,2391.2344 Q1740.4063,2391.2344 1739.0781,2389.5938 Q1737.7656,2387.9375 1737.7656,2384.8125 Q1737.7656,2381.6875 1739.0781,2380.0313 Q1740.4063,2378.375 1742.9063,2378.375 Q1743.6094,2378.375 1744.25,2378.5313 Q1744.9063,2378.6875 1745.4688,2378.9844 L1745.4688,2381.7031 Q1744.8438,2381.125 1744.25,2380.8594 Q1743.6563,2380.5781 1743.0313,2380.5781 Q1741.6875,2380.5781 1741,2381.6563 Q1740.3125,2382.7188 1740.3125,2384.8125 Q1740.3125,2386.9063 1741,2387.9844 Q1741.6875,2389.0469 1743.0313,2389.0469 Q1743.6563,2389.0469 1744.25,2388.7813 Q1744.8438,2388.5 1745.4688,2387.9219 L1745.4688,2390.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1756.5" y="2389.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="122" x="1876.5" y="2366"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="1877.5" y="2378.1387">detail::kSmallBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1728.5" x2="1994.5" y1="2401" y2="2401"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1728.5" x2="1994.5" y1="2409" y2="2409"/><!--MD5=[a31724e1f2693bbe78e4becec55f2e90]
class C_0001754247125147083756--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="48" id="C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.5;" width="180" x="2032.5" y="583"/><ellipse cx="2047.5" cy="599" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2050.4688,604.6406 Q2049.8906,604.9375 2049.25,605.0781 Q2048.6094,605.2344 2047.9063,605.2344 Q2045.4063,605.2344 2044.0781,603.5938 Q2042.7656,601.9375 2042.7656,598.8125 Q2042.7656,595.6875 2044.0781,594.0313 Q2045.4063,592.375 2047.9063,592.375 Q2048.6094,592.375 2049.25,592.5313 Q2049.9063,592.6875 2050.4688,592.9844 L2050.4688,595.7031 Q2049.8438,595.125 2049.25,594.8594 Q2048.6563,594.5781 2048.0313,594.5781 Q2046.6875,594.5781 2046,595.6563 Q2045.3125,596.7188 2045.3125,598.8125 Q2045.3125,600.9063 2046,601.9844 Q2046.6875,603.0469 2048.0313,603.0469 Q2048.6563,603.0469 2049.25,602.7813 Q2049.8438,602.5 2050.4688,601.9219 L2050.4688,604.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="2061.5" y="603.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="2181.5" y="580"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="2182.5" y="592.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2033.5" x2="2211.5" y1="615" y2="615"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2033.5" x2="2211.5" y1="623" y2="623"/><!--MD5=[faa9a41e3c08a126f9914f9889c089cd]
class C_0001042478360162272930--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="48" id="C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.5;" width="204" x="2103.5" y="1418"/><ellipse cx="2118.5" cy="1434" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2121.4688,1439.6406 Q2120.8906,1439.9375 2120.25,1440.0781 Q2119.6094,1440.2344 2118.9063,1440.2344 Q2116.4063,1440.2344 2115.0781,1438.5938 Q2113.7656,1436.9375 2113.7656,1433.8125 Q2113.7656,1430.6875 2115.0781,1429.0313 Q2116.4063,1427.375 2118.9063,1427.375 Q2119.6094,1427.375 2120.25,1427.5313 Q2120.9063,1427.6875 2121.4688,1427.9844 L2121.4688,1430.7031 Q2120.8438,1430.125 2120.25,1429.8594 Q2119.6563,1429.5781 2119.0313,1429.5781 Q2117.6875,1429.5781 2117,1430.6563 Q2116.3125,1431.7188 2116.3125,1433.8125 Q2116.3125,1435.9063 2117,1436.9844 Q2117.6875,1438.0469 2119.0313,1438.0469 Q2119.6563,1438.0469 2120.25,1437.7813 Q2120.8438,1437.5 2121.4688,1436.9219 L2121.4688,1439.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="2132.5" y="1438.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="58" x="2252.5" y="1415"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="2253.5" y="1427.1387">4000000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2104.5" x2="2306.5" y1="1450" y2="1450"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2104.5" x2="2306.5" y1="1458" y2="1458"/><!--MD5=[508e4c96361538c22cb77f899292ed27]
class C_0001930690020065325250--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="342.5078" id="C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.5;" width="382" x="1386.5" y="1572.5"/><ellipse cx="1539.75" cy="1588.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1542.7188,1594.1406 Q1542.1406,1594.4375 1541.5,1594.5781 Q1540.8594,1594.7344 1540.1563,1594.7344 Q1537.6563,1594.7344 1536.3281,1593.0938 Q1535.0156,1591.4375 1535.0156,1588.3125 Q1535.0156,1585.1875 1536.3281,1583.5313 Q1537.6563,1581.875 1540.1563,1581.875 Q1540.8594,1581.875 1541.5,1582.0313 Q1542.1563,1582.1875 1542.7188,1582.4844 L1542.7188,1585.2031 Q1542.0938,1584.625 1541.5,1584.3594 Q1540.9063,1584.0781 1540.2813,1584.0781 Q1538.9375,1584.0781 1538.25,1585.1563 Q1537.5625,1586.2188 1537.5625,1588.3125 Q1537.5625,1590.4063 1538.25,1591.4844 Q1538.9375,1592.5469 1540.2813,1592.5469 Q1540.9063,1592.5469 1541.5,1592.2813 Q1542.0938,1592 1542.7188,1591.4219 L1542.7188,1594.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1560.25" y="1592.6543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1387.5" x2="1767.5" y1="1604.5" y2="1604.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1387.5" x2="1767.5" y1="1612.5" y2="1612.5"/><ellipse cx="1397.5" cy="1623.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1406.5" y="1626.7104">operator&lt;&lt;(bool v) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1636.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1406.5" y="1639.5151">operator&lt;&lt;(short ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1649.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1406.5" y="1652.3198">operator&lt;&lt;(unsigned short ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1661.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="1406.5" y="1665.1245">operator&lt;&lt;(int ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1674.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="1406.5" y="1677.9292">operator&lt;&lt;(unsigned int ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1687.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1406.5" y="1690.7339">operator&lt;&lt;(long ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1700.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1406.5" y="1703.5386">operator&lt;&lt;(unsigned long ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1713.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="1406.5" y="1716.3433">operator&lt;&lt;(const long long &amp; ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1725.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="1406.5" y="1729.1479">operator&lt;&lt;(const unsigned long long &amp; ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1738.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="1406.5" y="1741.9526">operator&lt;&lt;(const void * ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1751.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="1406.5" y="1754.7573">operator&lt;&lt;(float &amp; v) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1764.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1406.5" y="1767.562">operator&lt;&lt;(const double &amp; ) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1777.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="1406.5" y="1780.3667">operator&lt;&lt;(const long double &amp; v) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1789.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1406.5" y="1793.1714">operator&lt;&lt;(char v) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1802.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1406.5" y="1805.9761">operator&lt;&lt;(char * str) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1815.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="1406.5" y="1818.7808">operator&lt;&lt;(const char * str) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1828.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="1406.5" y="1831.5854">operator&lt;&lt;(const unsigned char * str) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1841.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="1406.5" y="1844.3901">operator&lt;&lt;(const std::string &amp; v) : LogStream::self &amp;</text><ellipse cx="1397.5" cy="1853.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="1406.5" y="1857.1948">append(const char * data, size_t len) : void</text><ellipse cx="1397.5" cy="1866.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="1406.5" y="1869.9995">bufferData() const : const char *</text><ellipse cx="1397.5" cy="1879.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1406.5" y="1882.8042">bufferLength() const : size_t</text><ellipse cx="1397.5" cy="1892.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1406.5" y="1895.6089">resetBuffer() : void</text><ellipse cx="1397.5" cy="1905.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="1406.5" y="1908.4136">operator&lt;&lt;&lt;int N&gt;(const char (&amp;)[N] buf) : LogStream::self &amp;</text><!--MD5=[b90edfcdd231db613134b962a01f9ffc]
class C_0002131890502232898697--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0002131890502232898697" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="464" y="34"/><ellipse cx="569.75" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M572.7188,55.6406 Q572.1406,55.9375 571.5,56.0781 Q570.8594,56.2344 570.1563,56.2344 Q567.6563,56.2344 566.3281,54.5938 Q565.0156,52.9375 565.0156,49.8125 Q565.0156,46.6875 566.3281,45.0313 Q567.6563,43.375 570.1563,43.375 Q570.8594,43.375 571.5,43.5313 Q572.1563,43.6875 572.7188,43.9844 L572.7188,46.7031 Q572.0938,46.125 571.5,45.8594 Q570.9063,45.5781 570.2813,45.5781 Q568.9375,45.5781 568.25,46.6563 Q567.5625,47.7188 567.5625,49.8125 Q567.5625,51.9063 568.25,52.9844 Q568.9375,54.0469 570.2813,54.0469 Q570.9063,54.0469 571.5,53.7813 Q572.0938,53.5 572.7188,52.9219 L572.7188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="590.25" y="54.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="465" x2="706" y1="66" y2="66"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="465" x2="706" y1="74" y2="74"/><ellipse cx="475" cy="85" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="484" y="88.2104">data() const : const char *</text><ellipse cx="475" cy="97.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="484" y="101.0151">length() const : int</text><ellipse cx="475" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="484" y="113.8198">Fmt&lt;T&gt;(const char * fmt, T val) : void</text><!--MD5=[bf170ac668ae9e2187cdeab4952e3653]
class C_0002053752992472264214--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="240.0703" id="C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="1028.5" y="268"/><ellipse cx="1397.75" cy="284" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1400.7188,289.6406 Q1400.1406,289.9375 1399.5,290.0781 Q1398.8594,290.2344 1398.1563,290.2344 Q1395.6563,290.2344 1394.3281,288.5938 Q1393.0156,286.9375 1393.0156,283.8125 Q1393.0156,280.6875 1394.3281,279.0313 Q1395.6563,277.375 1398.1563,277.375 Q1398.8594,277.375 1399.5,277.5313 Q1400.1563,277.6875 1400.7188,277.9844 L1400.7188,280.7031 Q1400.0938,280.125 1399.5,279.8594 Q1398.9063,279.5781 1398.2813,279.5781 Q1396.9375,279.5781 1396.25,280.6563 Q1395.5625,281.7188 1395.5625,283.8125 Q1395.5625,285.9063 1396.25,286.9844 Q1396.9375,288.0469 1398.2813,288.0469 Q1398.9063,288.0469 1399.5,287.7813 Q1400.0938,287.5 1400.7188,286.9219 L1400.7188,289.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1418.25" y="288.1543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1029.5" x2="1817.5" y1="300" y2="300"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1029.5" x2="1817.5" y1="308" y2="308"/><ellipse cx="1039.5" cy="319" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="1048.5" y="322.2104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="1039.5" cy="331.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="1048.5" y="335.0151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="1039.5" cy="344.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="1048.5" y="347.8198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="1039.5" cy="357.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495" x="1048.5" y="360.6245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void</text><ellipse cx="1039.5" cy="370.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1048.5" y="373.4292">Logger() : void</text><ellipse cx="1039.5" cy="383.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1048.5" y="386.2339">Logger(Logger::LogLevel level) : void</text><ellipse cx="1039.5" cy="395.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1048.5" y="399.0386">Logger(bool isSysErr) : void</text><ellipse cx="1039.5" cy="408.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1048.5" y="411.8433">~Logger() : void</text><ellipse cx="1039.5" cy="421.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1048.5" y="424.6479">setIndex(int index) : Logger &amp;</text><ellipse cx="1039.5" cy="434.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1048.5" y="437.4526">stream() : LogStream &amp;</text><ellipse cx="1039.5" cy="447.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="764" x="1048.5" y="450.2573">setOutputFunction(std::function&lt;void (const char *,const uint64_t)&gt; outputFunc, std::function&lt;void ()&gt; flushFunc, int index = -1) : void</text><ellipse cx="1039.5" cy="459.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="1048.5" y="463.062">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="1039.5" cy="472.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="1048.5" y="475.8667">logLevel() : Logger::LogLevel</text><ellipse cx="1039.5" cy="485.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="141" x="1048.5" y="488.6714">displayLocalTime() : bool</text><ellipse cx="1039.5" cy="498.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="274" x="1048.5" y="501.4761">setDisplayLocalTime(bool showLocalTime) : void</text><!--MD5=[a2beb77350952d649324ef19949173b2]
class C_0002131283840621188296--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="137.6328" id="C_0002131283840621188296" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="1191.5" y="8"/><ellipse cx="1206.5" cy="24" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1210.6094,30 L1202.8906,30 L1202.8906,17.6094 L1210.6094,17.6094 L1210.6094,19.7656 L1205.3438,19.7656 L1205.3438,22.4375 L1210.1094,22.4375 L1210.1094,24.5938 L1205.3438,24.5938 L1205.3438,27.8438 L1210.6094,27.8438 L1210.6094,30 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="1220.5" y="28.1543">Logger::LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1192.5" x2="1326.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1197.5" y="54.2104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="1197.5" y="67.0151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="1197.5" y="79.8198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="1197.5" y="92.6245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1197.5" y="105.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1197.5" y="118.2339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1197.5" y="131.0386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1192.5" x2="1326.5" y1="137.6328" y2="137.6328"/><!--MD5=[80f13d7cbf12b8f5b3c51061955ccb60]
class C_0000979080797342806546--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="99.2188" id="C_0000979080797342806546" style="stroke: #A80036; stroke-width: 1.5;" width="304" x="1362.5" y="27.5"/><ellipse cx="1452.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1455.2188,49.1406 Q1454.6406,49.4375 1454,49.5781 Q1453.3594,49.7344 1452.6563,49.7344 Q1450.1563,49.7344 1448.8281,48.0938 Q1447.5156,46.4375 1447.5156,43.3125 Q1447.5156,40.1875 1448.8281,38.5313 Q1450.1563,36.875 1452.6563,36.875 Q1453.3594,36.875 1454,37.0313 Q1454.6563,37.1875 1455.2188,37.4844 L1455.2188,40.2031 Q1454.5938,39.625 1454,39.3594 Q1453.4063,39.0781 1452.7813,39.0781 Q1451.4375,39.0781 1450.75,40.1563 Q1450.0625,41.2188 1450.0625,43.3125 Q1450.0625,45.4063 1450.75,46.4844 Q1451.4375,47.5469 1452.7813,47.5469 Q1453.4063,47.5469 1454,47.2813 Q1454.5938,47 1455.2188,46.4219 L1455.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="116" x="1472.75" y="47.6543">Logger::SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1363.5" x2="1665.5" y1="59.5" y2="59.5"/><ellipse cx="1373.5" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1382.5" y="73.7104">data_ : const char *</text><ellipse cx="1373.5" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="1382.5" y="86.5151">size_ : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1363.5" x2="1665.5" y1="93.1094" y2="93.1094"/><ellipse cx="1373.5" cy="104.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1382.5" y="107.3198">SourceFile(const char * filename = nullptr) : void</text><ellipse cx="1373.5" cy="116.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="1382.5" y="120.1245">SourceFile&lt;int N&gt;(const char (&amp;)[N] arr) : void</text><!--MD5=[0d7c4854ead8d60a020307850229f39a]
class C_0000716430590791918928--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.5;" width="218" x="1601.5" y="981.5"/><ellipse cx="1672.25" cy="997.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1675.2188,1003.1406 Q1674.6406,1003.4375 1674,1003.5781 Q1673.3594,1003.7344 1672.6563,1003.7344 Q1670.1563,1003.7344 1668.8281,1002.0938 Q1667.5156,1000.4375 1667.5156,997.3125 Q1667.5156,994.1875 1668.8281,992.5313 Q1670.1563,990.875 1672.6563,990.875 Q1673.3594,990.875 1674,991.0313 Q1674.6563,991.1875 1675.2188,991.4844 L1675.2188,994.2031 Q1674.5938,993.625 1674,993.3594 Q1673.4063,993.0781 1672.7813,993.0781 Q1671.4375,993.0781 1670.75,994.1563 Q1670.0625,995.2188 1670.0625,997.3125 Q1670.0625,999.4063 1670.75,1000.4844 Q1671.4375,1001.5469 1672.7813,1001.5469 Q1673.4063,1001.5469 1674,1001.2813 Q1674.5938,1001 1675.2188,1000.4219 L1675.2188,1003.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1692.75" y="1001.6543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1602.5" x2="1818.5" y1="1013.5" y2="1013.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1602.5" x2="1818.5" y1="1021.5" y2="1021.5"/><ellipse cx="1612.5" cy="1032.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1621.5" y="1035.7104">~RawLogger() : void</text><ellipse cx="1612.5" cy="1045.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1621.5" y="1048.5151">setIndex(int index) : RawLogger &amp;</text><ellipse cx="1612.5" cy="1058.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1621.5" y="1061.3198">stream() : LogStream &amp;</text><!--MD5=[8fb98359051244e5083df4bcd14829d4]
class C_0001289495020269537351--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="547.3828" id="C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="8658.5" y="2635"/><ellipse cx="8781.25" cy="2651" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8784.2188,2656.6406 Q8783.6406,2656.9375 8783,2657.0781 Q8782.3594,2657.2344 8781.6563,2657.2344 Q8779.1563,2657.2344 8777.8281,2655.5938 Q8776.5156,2653.9375 8776.5156,2650.8125 Q8776.5156,2647.6875 8777.8281,2646.0313 Q8779.1563,2644.375 8781.6563,2644.375 Q8782.3594,2644.375 8783,2644.5313 Q8783.6563,2644.6875 8784.2188,2644.9844 L8784.2188,2647.7031 Q8783.5938,2647.125 8783,2646.8594 Q8782.4063,2646.5781 8781.7813,2646.5781 Q8780.4375,2646.5781 8779.75,2647.6563 Q8779.0625,2648.7188 8779.0625,2650.8125 Q8779.0625,2652.9063 8779.75,2653.9844 Q8780.4375,2655.0469 8781.7813,2655.0469 Q8782.4063,2655.0469 8783,2654.7813 Q8783.5938,2654.5 8784.2188,2653.9219 L8784.2188,2656.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="8801.75" y="2655.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8659.5" x2="8973.5" y1="2667" y2="2667"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8659.5" x2="8973.5" y1="2675" y2="2675"/><ellipse cx="8669.5" cy="2686" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="8678.5" y="2689.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><ellipse cx="8669.5" cy="2698.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="8678.5" y="2702.0151">peek() const : const char *</text><ellipse cx="8669.5" cy="2711.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="8678.5" y="2714.8198">beginWrite() const : const char *</text><ellipse cx="8669.5" cy="2724.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="8678.5" y="2727.6245">beginWrite() : char *</text><ellipse cx="8669.5" cy="2737.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="8678.5" y="2740.4292">peekInt8() const : uint8_t</text><ellipse cx="8669.5" cy="2750.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="8678.5" y="2753.2339">peekInt16() const : uint16_t</text><ellipse cx="8669.5" cy="2762.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="8678.5" y="2766.0386">peekInt32() const : uint32_t</text><ellipse cx="8669.5" cy="2775.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="8678.5" y="2778.8433">peekInt64() const : uint64_t</text><ellipse cx="8669.5" cy="2788.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="8678.5" y="2791.6479">read(size_t len) : std::string</text><ellipse cx="8669.5" cy="2801.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="8678.5" y="2804.4526">readInt8() : uint8_t</text><ellipse cx="8669.5" cy="2814.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="8678.5" y="2817.2573">readInt16() : uint16_t</text><ellipse cx="8669.5" cy="2826.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="8678.5" y="2830.062">readInt32() : uint32_t</text><ellipse cx="8669.5" cy="2839.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="8678.5" y="2842.8667">readInt64() : uint64_t</text><ellipse cx="8669.5" cy="2852.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="8678.5" y="2855.6714">swap(MsgBuffer &amp; buf) : void</text><ellipse cx="8669.5" cy="2865.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="8678.5" y="2868.4761">readableBytes() const : size_t</text><ellipse cx="8669.5" cy="2878.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="8678.5" y="2881.2808">writableBytes() const : size_t</text><ellipse cx="8669.5" cy="2890.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="8678.5" y="2894.0854">append(const MsgBuffer &amp; buf) : void</text><ellipse cx="8669.5" cy="2903.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="8678.5" y="2906.8901">append(const char * buf, size_t len) : void</text><ellipse cx="8669.5" cy="2916.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="8678.5" y="2919.6948">append(const std::string &amp; buf) : void</text><ellipse cx="8669.5" cy="2929.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="8678.5" y="2932.4995">appendInt8(const uint8_t b) : void</text><ellipse cx="8669.5" cy="2942.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="8678.5" y="2945.3042">appendInt16(const uint16_t s) : void</text><ellipse cx="8669.5" cy="2954.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="8678.5" y="2958.1089">appendInt32(const uint32_t i) : void</text><ellipse cx="8669.5" cy="2967.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="8678.5" y="2970.9136">appendInt64(const uint64_t l) : void</text><ellipse cx="8669.5" cy="2980.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="8678.5" y="2983.7183">addInFront(const char * buf, size_t len) : void</text><ellipse cx="8669.5" cy="2993.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="8678.5" y="2996.5229">addInFrontInt8(const uint8_t b) : void</text><ellipse cx="8669.5" cy="3006.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="8678.5" y="3009.3276">addInFrontInt16(const uint16_t s) : void</text><ellipse cx="8669.5" cy="3018.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="8678.5" y="3022.1323">addInFrontInt32(const uint32_t i) : void</text><ellipse cx="8669.5" cy="3031.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="8678.5" y="3034.937">addInFrontInt64(const uint64_t l) : void</text><ellipse cx="8669.5" cy="3044.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="8678.5" y="3047.7417">retrieveAll() : void</text><ellipse cx="8669.5" cy="3057.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="8678.5" y="3060.5464">retrieve(size_t len) : void</text><ellipse cx="8669.5" cy="3070.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="8678.5" y="3073.3511">readFd(int fd, int * retErrno) : ssize_t</text><ellipse cx="8669.5" cy="3082.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="8678.5" y="3086.1558">retrieveUntil(const char * end) : void</text><ellipse cx="8669.5" cy="3095.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="8678.5" y="3098.9604">findCRLF() const : const char *</text><ellipse cx="8669.5" cy="3108.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="8678.5" y="3111.7651">ensureWritableBytes(size_t len) : void</text><ellipse cx="8669.5" cy="3121.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="8678.5" y="3124.5698">hasWritten(size_t len) : void</text><ellipse cx="8669.5" cy="3134.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="8678.5" y="3137.3745">unwrite(size_t offset) : void</text><ellipse cx="8669.5" cy="3146.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="8678.5" y="3150.1792">operator[](size_t offset) const : const char &amp;</text><ellipse cx="8669.5" cy="3159.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="8678.5" y="3162.9839">operator[](size_t offset) : char &amp;</text><ellipse cx="8669.5" cy="3172.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="8678.5" y="3175.7886">append&lt;int N&gt;(const char (&amp;)[N] buf) : void</text><!--MD5=[3eca8c168317aac07a5f320754f24f02]
class C_0000684873245997977544--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="112.0234" id="C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.5;" width="384" x="2339.5" y="332"/><ellipse cx="2493.25" cy="348" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2493.3594,343.3438 L2492.2031,348.4219 L2494.5313,348.4219 L2493.3594,343.3438 Z M2491.875,341.1094 L2494.8594,341.1094 L2498.2188,353.5 L2495.7656,353.5 L2495,350.4375 L2491.7188,350.4375 L2490.9688,353.5 L2488.5313,353.5 L2491.875,341.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="2513.75" y="352.1543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2722.5" y1="364" y2="364"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2340.5" x2="2722.5" y1="372" y2="372"/><ellipse cx="2350.5" cy="383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="358" x="2359.5" y="386.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) = 0 : void</text><ellipse cx="2350.5" cy="395.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="333" x="2359.5" y="399.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) = 0 : void</text><ellipse cx="2350.5" cy="408.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2359.5" y="411.8198">getName() const : std::string</text><ellipse cx="2350.5" cy="421.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2359.5" y="424.6245">syncTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2350.5" cy="434.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2359.5" y="437.4292">~TaskQueue() : void</text><!--MD5=[cad86694860d53f8c52bf489f7f4fac4]
class C_0000912667184903365399--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="124.8281" id="C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="2586.5" y="4831"/><ellipse cx="2643.25" cy="4847" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2646.2188,4852.6406 Q2645.6406,4852.9375 2645,4853.0781 Q2644.3594,4853.2344 2643.6563,4853.2344 Q2641.1563,4853.2344 2639.8281,4851.5938 Q2638.5156,4849.9375 2638.5156,4846.8125 Q2638.5156,4843.6875 2639.8281,4842.0313 Q2641.1563,4840.375 2643.6563,4840.375 Q2644.3594,4840.375 2645,4840.5313 Q2645.6563,4840.6875 2646.2188,4840.9844 L2646.2188,4843.7031 Q2645.5938,4843.125 2645,4842.8594 Q2644.4063,4842.5781 2643.7813,4842.5781 Q2642.4375,4842.5781 2641.75,4843.6563 Q2641.0625,4844.7188 2641.0625,4846.8125 Q2641.0625,4848.9063 2641.75,4849.9844 Q2642.4375,4851.0469 2643.7813,4851.0469 Q2644.4063,4851.0469 2645,4850.7813 Q2645.5938,4850.5 2646.2188,4849.9219 L2646.2188,4852.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="2663.75" y="4851.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="2786.5" y="4828"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="2787.5" y="4840.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2587.5" x2="2791.5" y1="4863" y2="4863"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2587.5" x2="2791.5" y1="4871" y2="4871"/><ellipse cx="2597.5" cy="4882" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2606.5" y="4885.2104">MpscQueue&lt;T&gt;() : void</text><ellipse cx="2597.5" cy="4894.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2606.5" y="4898.0151">~MpscQueue&lt;T&gt;() : void</text><ellipse cx="2597.5" cy="4907.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2606.5" y="4910.8198">enqueue(T &amp;&amp; input) : void</text><ellipse cx="2597.5" cy="4920.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2606.5" y="4923.6245">enqueue(const T &amp; input) : void</text><ellipse cx="2597.5" cy="4933.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2606.5" y="4936.4292">dequeue(T &amp; output) : bool</text><ellipse cx="2597.5" cy="4946.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="2606.5" y="4949.2339">empty() : bool</text><!--MD5=[9e2b872a1cb524987dcee0b8ea8bcdce]
class C_0000223701637084171141--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="112.0234" id="C_0000223701637084171141" style="stroke: #A80036; stroke-width: 1.5;" width="224" x="2577.5" y="4335"/><ellipse cx="2610.95" cy="4351" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2613.9188,4356.6406 Q2613.3406,4356.9375 2612.7,4357.0781 Q2612.0594,4357.2344 2611.3563,4357.2344 Q2608.8563,4357.2344 2607.5281,4355.5938 Q2606.2156,4353.9375 2606.2156,4350.8125 Q2606.2156,4347.6875 2607.5281,4346.0313 Q2608.8563,4344.375 2611.3563,4344.375 Q2612.0594,4344.375 2612.7,4344.5313 Q2613.3563,4344.6875 2613.9188,4344.9844 L2613.9188,4347.7031 Q2613.2938,4347.125 2612.7,4346.8594 Q2612.1063,4346.5781 2611.4813,4346.5781 Q2610.1375,4346.5781 2609.45,4347.6563 Q2608.7625,4348.7188 2608.7625,4350.8125 Q2608.7625,4352.9063 2609.45,4353.9844 Q2610.1375,4355.0469 2611.4813,4355.0469 Q2612.1063,4355.0469 2612.7,4354.7813 Q2613.2938,4354.5 2613.9188,4353.9219 L2613.9188,4356.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="2629.05" y="4355.1543">MpscQueue::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2578.5" x2="2800.5" y1="4367" y2="4367"/><ellipse cx="2588.5" cy="4378" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="2597.5" y="4381.2104">dataPtr_ : T *</text><ellipse cx="2588.5" cy="4390.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2597.5" y="4394.0151">next_ : std::atomic&lt;BufferNode *&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2578.5" x2="2800.5" y1="4400.6094" y2="4400.6094"/><ellipse cx="2588.5" cy="4411.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2597.5" y="4414.8198">BufferNode() = default : void</text><ellipse cx="2588.5" cy="4424.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2597.5" y="4427.6245">BufferNode(const T &amp; data) : void</text><ellipse cx="2588.5" cy="4437.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2597.5" y="4440.4292">BufferNode(T &amp;&amp; data) : void</text><!--MD5=[dad06bf4fbec639e9a802a58181f4e4a]
class C_0002185746167032660910--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="48" id="C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="4126.5" y="4367"/><ellipse cx="4141.5" cy="4383" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4144.4688,4388.6406 Q4143.8906,4388.9375 4143.25,4389.0781 Q4142.6094,4389.2344 4141.9063,4389.2344 Q4139.4063,4389.2344 4138.0781,4387.5938 Q4136.7656,4385.9375 4136.7656,4382.8125 Q4136.7656,4379.6875 4138.0781,4378.0313 Q4139.4063,4376.375 4141.9063,4376.375 Q4142.6094,4376.375 4143.25,4376.5313 Q4143.9063,4376.6875 4144.4688,4376.9844 L4144.4688,4379.7031 Q4143.8438,4379.125 4143.25,4378.8594 Q4142.6563,4378.5781 4142.0313,4378.5781 Q4140.6875,4378.5781 4140,4379.6563 Q4139.3125,4380.7188 4139.3125,4382.8125 Q4139.3125,4384.9063 4140,4385.9844 Q4140.6875,4387.0469 4142.0313,4387.0469 Q4142.6563,4387.0469 4143.25,4386.7813 Q4143.8438,4386.5 4144.4688,4385.9219 L4144.4688,4388.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="4155.5" y="4387.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="135" x="4236.5" y="4364"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="4237.5" y="4376.1387">std::function&lt;void()&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4127.5" x2="4367.5" y1="4399" y2="4399"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4127.5" x2="4367.5" y1="4407" y2="4407"/><!--MD5=[6785cfd7bdf96bc510b25190072b3422]
class C_0001390130774830223499--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="457.75" id="C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.5;" width="510" x="4765.5" y="3640"/><ellipse cx="4983.75" cy="3656" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4986.7188,3661.6406 Q4986.1406,3661.9375 4985.5,3662.0781 Q4984.8594,3662.2344 4984.1563,3662.2344 Q4981.6563,3662.2344 4980.3281,3660.5938 Q4979.0156,3658.9375 4979.0156,3655.8125 Q4979.0156,3652.6875 4980.3281,3651.0313 Q4981.6563,3649.375 4984.1563,3649.375 Q4984.8594,3649.375 4985.5,3649.5313 Q4986.1563,3649.6875 4986.7188,3649.9844 L4986.7188,3652.7031 Q4986.0938,3652.125 4985.5,3651.8594 Q4984.9063,3651.5781 4984.2813,3651.5781 Q4982.9375,3651.5781 4982.25,3652.6563 Q4981.5625,3653.7188 4981.5625,3655.8125 Q4981.5625,3657.9063 4982.25,3658.9844 Q4982.9375,3660.0469 4984.2813,3660.0469 Q4984.9063,3660.0469 4985.5,3659.7813 Q4986.0938,3659.5 4986.7188,3658.9219 L4986.7188,3661.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5004.25" y="3660.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4766.5" x2="5274.5" y1="3672" y2="3672"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4766.5" x2="5274.5" y1="3680" y2="3680"/><ellipse cx="4776.5" cy="3691" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="4785.5" y="3694.2104">EventLoop() : void</text><ellipse cx="4776.5" cy="3703.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4785.5" y="3707.0151">~EventLoop() : void</text><ellipse cx="4776.5" cy="3716.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4785.5" y="3719.8198">loop() : void</text><ellipse cx="4776.5" cy="3729.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4785.5" y="3732.6245">quit() : void</text><ellipse cx="4776.5" cy="3742.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4785.5" y="3745.4292">assertInLoopThread() : void</text><ellipse cx="4776.5" cy="3755.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="4785.5" y="3758.2339">resetTimerQueue() : void</text><ellipse cx="4776.5" cy="3767.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="4785.5" y="3771.0386">resetAfterFork() : void</text><ellipse cx="4776.5" cy="3780.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4785.5" y="3783.8433">isInLoopThread() const : bool</text><ellipse cx="4776.5" cy="3793.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="4785.5" y="3796.6479">getEventLoopOfCurrentThread() : EventLoop *</text><ellipse cx="4776.5" cy="3806.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="4785.5" y="3809.4526">queueInLoop(const Func &amp; f) : void</text><ellipse cx="4776.5" cy="3819.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4785.5" y="3822.2573">queueInLoop(Func &amp;&amp; f) : void</text><ellipse cx="4776.5" cy="3831.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4785.5" y="3835.062">runAt(const Date &amp; time, const Func &amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3844.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4785.5" y="3847.8667">runAt(const Date &amp; time, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3857.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="4785.5" y="3860.6714">runAfter(double delay, const Func &amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3870.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4785.5" y="3873.4761">runAfter(double delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3883.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="468" x="4785.5" y="3886.2808">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, const Func &amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3895.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="4785.5" y="3899.0854">runAfter(const std::chrono::duration&lt;double&gt; &amp; delay, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3908.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="4785.5" y="3911.8901">runEvery(double interval, const Func &amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3921.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="4785.5" y="3924.6948">runEvery(double interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3934.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="484" x="4785.5" y="3937.4995">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, const Func &amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3947.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="459" x="4785.5" y="3950.3042">runEvery(const std::chrono::duration&lt;double&gt; &amp; interval, Func &amp;&amp; cb) : TimerId</text><ellipse cx="4776.5" cy="3959.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4785.5" y="3963.1089">invalidateTimer(TimerId id) : void</text><ellipse cx="4776.5" cy="3972.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4785.5" y="3975.9136">moveToCurrentThread() : void</text><ellipse cx="4776.5" cy="3985.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4785.5" y="3988.7183">updateChannel(Channel * chl) : void</text><ellipse cx="4776.5" cy="3998.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="4785.5" y="4001.5229">removeChannel(Channel * chl) : void</text><ellipse cx="4776.5" cy="4011.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4785.5" y="4014.3276">index() : size_t</text><ellipse cx="4776.5" cy="4023.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4785.5" y="4027.1323">setIndex(size_t index) : void</text><ellipse cx="4776.5" cy="4036.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4785.5" y="4039.937">isRunning() : bool</text><ellipse cx="4776.5" cy="4049.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4785.5" y="4052.7417">isCallingFunctions() : bool</text><ellipse cx="4776.5" cy="4062.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4785.5" y="4065.5464">runOnQuit(Func &amp;&amp; cb) : void</text><ellipse cx="4776.5" cy="4075.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4785.5" y="4078.3511">runOnQuit(const Func &amp; cb) : void</text><ellipse cx="4776.5" cy="4087.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="4785.5" y="4091.1558">runInLoop&lt;Functor&gt;(Functor &amp;&amp; f) : void</text><!--MD5=[3a0372dcc7daad4e5babd4386f35e9ff]
class C_0001280612521485369958--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="112.0234" id="C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.5;" width="474" x="3513.5" y="3355"/><ellipse cx="3691.75" cy="3371" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3694.7188,3376.6406 Q3694.1406,3376.9375 3693.5,3377.0781 Q3692.8594,3377.2344 3692.1563,3377.2344 Q3689.6563,3377.2344 3688.3281,3375.5938 Q3687.0156,3373.9375 3687.0156,3370.8125 Q3687.0156,3367.6875 3688.3281,3366.0313 Q3689.6563,3364.375 3692.1563,3364.375 Q3692.8594,3364.375 3693.5,3364.5313 Q3694.1563,3364.6875 3694.7188,3364.9844 L3694.7188,3367.7031 Q3694.0938,3367.125 3693.5,3366.8594 Q3692.9063,3366.5781 3692.2813,3366.5781 Q3690.9375,3366.5781 3690.25,3367.6563 Q3689.5625,3368.7188 3689.5625,3370.8125 Q3689.5625,3372.9063 3690.25,3373.9844 Q3690.9375,3375.0469 3692.2813,3375.0469 Q3692.9063,3375.0469 3693.5,3374.7813 Q3694.0938,3374.5 3694.7188,3373.9219 L3694.7188,3376.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="3712.25" y="3375.1543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3514.5" x2="3986.5" y1="3387" y2="3387"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3514.5" x2="3986.5" y1="3395" y2="3395"/><ellipse cx="3524.5" cy="3406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="3533.5" y="3409.2104">EventLoopThread(const std::string &amp; threadName = "EventLoopThread") : void</text><ellipse cx="3524.5" cy="3418.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="3533.5" y="3422.0151">~EventLoopThread() : void</text><ellipse cx="3524.5" cy="3431.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="3533.5" y="3434.8198">wait() : void</text><ellipse cx="3524.5" cy="3444.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3533.5" y="3447.6245">getLoop() const : EventLoop *</text><ellipse cx="3524.5" cy="3457.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="3533.5" y="3460.4292">run() : void</text><!--MD5=[735a61920964f7ae0741e66270da6f3c]
class C_0000634031134969193198--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="176.0469" id="C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="2391" y="2022"/><ellipse cx="2515.75" cy="2038" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2518.7188,2043.6406 Q2518.1406,2043.9375 2517.5,2044.0781 Q2516.8594,2044.2344 2516.1563,2044.2344 Q2513.6563,2044.2344 2512.3281,2042.5938 Q2511.0156,2040.9375 2511.0156,2037.8125 Q2511.0156,2034.6875 2512.3281,2033.0313 Q2513.6563,2031.375 2516.1563,2031.375 Q2516.8594,2031.375 2517.5,2031.5313 Q2518.1563,2031.6875 2518.7188,2031.9844 L2518.7188,2034.7031 Q2518.0938,2034.125 2517.5,2033.8594 Q2516.9063,2033.5781 2516.2813,2033.5781 Q2514.9375,2033.5781 2514.25,2034.6563 Q2513.5625,2035.7188 2513.5625,2037.8125 Q2513.5625,2039.9063 2514.25,2040.9844 Q2514.9375,2042.0469 2516.2813,2042.0469 Q2516.9063,2042.0469 2517.5,2041.7813 Q2518.0938,2041.5 2518.7188,2040.9219 L2518.7188,2043.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="2536.25" y="2042.1543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2392" x2="2753" y1="2054" y2="2054"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2392" x2="2753" y1="2062" y2="2062"/><ellipse cx="2402" cy="2073" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2411" y="2076.2104">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2402" cy="2085.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2411" y="2089.0151">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="2402" cy="2098.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2411" y="2101.8198">getName() const : std::string</text><ellipse cx="2402" cy="2111.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="2411" y="2114.6245">waitAllTasksFinished() : void</text><ellipse cx="2402" cy="2124.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2411" y="2127.4292">SerialTaskQueue() : void</text><ellipse cx="2402" cy="2137.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2411" y="2140.2339">SerialTaskQueue(const std::string &amp; name) : void</text><ellipse cx="2402" cy="2149.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2411" y="2153.0386">~SerialTaskQueue() : void</text><ellipse cx="2402" cy="2162.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2411" y="2165.8433">isRuningTask() : bool</text><ellipse cx="2402" cy="2175.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2411" y="2178.6479">getTaskCount() : size_t</text><ellipse cx="2402" cy="2188.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2411" y="2191.4526">stop() : void</text><!--MD5=[dbf0297dd86f3f169a21d5217e610f72]
class C_0000300034150397884642--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="150.4375" id="C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="5027" y="4316"/><ellipse cx="5187.25" cy="4332" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5187.3594,4327.3438 L5186.2031,4332.4219 L5188.5313,4332.4219 L5187.3594,4327.3438 Z M5185.875,4325.1094 L5188.8594,4325.1094 L5192.2188,4337.5 L5189.7656,4337.5 L5189,4334.4375 L5185.7188,4334.4375 L5184.9688,4337.5 L5182.5313,4337.5 L5185.875,4325.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="5207.75" y="4336.1543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5028" x2="5389" y1="4348" y2="4348"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5028" x2="5389" y1="4356" y2="4356"/><ellipse cx="5038" cy="4367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5047" y="4370.2104">Poller(EventLoop * loop) : void</text><ellipse cx="5038" cy="4379.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="5047" y="4383.0151">~Poller() : void</text><ellipse cx="5038" cy="4392.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5047" y="4395.8198">assertInLoopThread() : void</text><ellipse cx="5038" cy="4405.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="337" x="5047" y="4408.6245">poll(int timeoutMs, ChannelList * activeChannels) = 0 : void</text><ellipse cx="5038" cy="4418.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="257" x="5047" y="4421.4292">updateChannel(Channel * channel) = 0 : void</text><ellipse cx="5038" cy="4431.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="262" x="5047" y="4434.2339">removeChannel(Channel * channel) = 0 : void</text><ellipse cx="5038" cy="4443.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="5047" y="4447.0386">resetAfterFork() : void</text><ellipse cx="5038" cy="4456.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="213" x="5047" y="4459.8433">newPoller(EventLoop * loop) : Poller *</text><!--MD5=[06ec815e3b2a594d82b83438b26f5ea9]
class C_0000607400095182694101--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="137.6328" id="C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.5;" width="609" x="6578" y="4322"/><ellipse cx="6840.75" cy="4338" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6843.7188,4343.6406 Q6843.1406,4343.9375 6842.5,4344.0781 Q6841.8594,4344.2344 6841.1563,4344.2344 Q6838.6563,4344.2344 6837.3281,4342.5938 Q6836.0156,4340.9375 6836.0156,4337.8125 Q6836.0156,4334.6875 6837.3281,4333.0313 Q6838.6563,4331.375 6841.1563,4331.375 Q6841.8594,4331.375 6842.5,4331.5313 Q6843.1563,4331.6875 6843.7188,4331.9844 L6843.7188,4334.7031 Q6843.0938,4334.125 6842.5,4333.8594 Q6841.9063,4333.5781 6841.2813,4333.5781 Q6839.9375,4333.5781 6839.25,4334.6563 Q6838.5625,4335.7188 6838.5625,4337.8125 Q6838.5625,4339.9063 6839.25,4340.9844 Q6839.9375,4342.0469 6841.2813,4342.0469 Q6841.9063,4342.0469 6842.5,4341.7813 Q6843.0938,4341.5 6843.7188,4340.9219 L6843.7188,4343.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="6861.25" y="4342.1543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6579" x2="7186" y1="4354" y2="4354"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6579" x2="7186" y1="4362" y2="4362"/><ellipse cx="6589" cy="4373" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6598" y="4376.2104">TimerQueue(EventLoop * loop) : void</text><ellipse cx="6589" cy="4385.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="6598" y="4389.0151">~TimerQueue() : void</text><ellipse cx="6589" cy="4398.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="583" x="6598" y="4401.8198">addTimer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="6589" cy="4411.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="558" x="6598" y="4414.6245">addTimer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : TimerId</text><ellipse cx="6589" cy="4424.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="6598" y="4427.4292">addTimerInLoop(const TimerPtr &amp; timer) : void</text><ellipse cx="6589" cy="4437.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="6598" y="4440.2339">invalidateTimer(TimerId id) : void</text><ellipse cx="6589" cy="4449.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6598" y="4453.0386">reset() : void</text><!--MD5=[4f6edc13f3c74c5d4b7bf3442d258cb1]
class C_0000764690828649606524--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="419.3359" id="C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.5;" width="364" x="4651.5" y="4684"/><ellipse cx="4803.75" cy="4700" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4806.7188,4705.6406 Q4806.1406,4705.9375 4805.5,4706.0781 Q4804.8594,4706.2344 4804.1563,4706.2344 Q4801.6563,4706.2344 4800.3281,4704.5938 Q4799.0156,4702.9375 4799.0156,4699.8125 Q4799.0156,4696.6875 4800.3281,4695.0313 Q4801.6563,4693.375 4804.1563,4693.375 Q4804.8594,4693.375 4805.5,4693.5313 Q4806.1563,4693.6875 4806.7188,4693.9844 L4806.7188,4696.7031 Q4806.0938,4696.125 4805.5,4695.8594 Q4804.9063,4695.5781 4804.2813,4695.5781 Q4802.9375,4695.5781 4802.25,4696.6563 Q4801.5625,4697.7188 4801.5625,4699.8125 Q4801.5625,4701.9063 4802.25,4702.9844 Q4802.9375,4704.0469 4804.2813,4704.0469 Q4804.9063,4704.0469 4805.5,4703.7813 Q4806.0938,4703.5 4806.7188,4702.9219 L4806.7188,4705.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="4824.25" y="4704.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4652.5" x2="5014.5" y1="4716" y2="4716"/><ellipse cx="4662.5" cy="4727" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="4671.5" y="4730.2104">kNoneEvent : const int</text><ellipse cx="4662.5" cy="4739.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="4671.5" y="4743.0151">kReadEvent : const int</text><ellipse cx="4662.5" cy="4752.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="4671.5" y="4755.8198">kWriteEvent : const int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4652.5" x2="5014.5" y1="4762.4141" y2="4762.4141"/><ellipse cx="4662.5" cy="4773.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="4671.5" y="4776.6245">Channel(EventLoop * loop, int fd) : void</text><ellipse cx="4662.5" cy="4786.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="4671.5" y="4789.4292">setReadCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4662.5" cy="4799.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="4671.5" y="4802.2339">setReadCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4662.5" cy="4811.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="4671.5" y="4815.0386">setWriteCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4662.5" cy="4824.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="4671.5" y="4827.8433">setWriteCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4662.5" cy="4837.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="338" x="4671.5" y="4840.6479">setCloseCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4662.5" cy="4850.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4671.5" y="4853.4526">setCloseCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4662.5" cy="4863.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="4671.5" y="4866.2573">setErrorCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4662.5" cy="4875.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="4671.5" y="4879.062">setErrorCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4662.5" cy="4888.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="4671.5" y="4891.8667">setEventCallback(const Channel::EventCallback &amp; cb) : void</text><ellipse cx="4662.5" cy="4901.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="4671.5" y="4904.6714">setEventCallback(Channel::EventCallback &amp;&amp; cb) : void</text><ellipse cx="4662.5" cy="4914.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="4671.5" y="4917.4761">fd() const : int</text><ellipse cx="4662.5" cy="4927.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4671.5" y="4930.2808">events() const : int</text><ellipse cx="4662.5" cy="4939.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="4671.5" y="4943.0854">revents() const : int</text><ellipse cx="4662.5" cy="4952.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="4671.5" y="4955.8901">isNoneEvent() const : bool</text><ellipse cx="4662.5" cy="4965.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4671.5" y="4968.6948">disableAll() : void</text><ellipse cx="4662.5" cy="4978.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4671.5" y="4981.4995">remove() : void</text><ellipse cx="4662.5" cy="4991.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4671.5" y="4994.3042">ownerLoop() : EventLoop *</text><ellipse cx="4662.5" cy="5003.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4671.5" y="5007.1089">enableReading() : void</text><ellipse cx="4662.5" cy="5016.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="4671.5" y="5019.9136">disableReading() : void</text><ellipse cx="4662.5" cy="5029.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="4671.5" y="5032.7183">enableWriting() : void</text><ellipse cx="4662.5" cy="5042.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4671.5" y="5045.5229">disableWriting() : void</text><ellipse cx="4662.5" cy="5055.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="4671.5" y="5058.3276">isWriting() const : bool</text><ellipse cx="4662.5" cy="5067.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="4671.5" y="5071.1323">isReading() const : bool</text><ellipse cx="4662.5" cy="5080.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4671.5" y="5083.937">updateEvents(int events) : void</text><ellipse cx="4662.5" cy="5093.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4671.5" y="5096.7417">tie(const std::shared_ptr&lt;void&gt; &amp; obj) : void</text><!--MD5=[a43b1ebcde6cbbd3b54c3ea03c2a4603]
class C_0000295101274428145462--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="137.6328" id="C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.5;" width="447" x="2205" y="955.5"/><ellipse cx="2354.25" cy="971.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2357.2188,977.1406 Q2356.6406,977.4375 2356,977.5781 Q2355.3594,977.7344 2354.6563,977.7344 Q2352.1563,977.7344 2350.8281,976.0938 Q2349.5156,974.4375 2349.5156,971.3125 Q2349.5156,968.1875 2350.8281,966.5313 Q2352.1563,964.875 2354.6563,964.875 Q2355.3594,964.875 2356,965.0313 Q2356.6563,965.1875 2357.2188,965.4844 L2357.2188,968.2031 Q2356.5938,967.625 2356,967.3594 Q2355.4063,967.0781 2354.7813,967.0781 Q2353.4375,967.0781 2352.75,968.1563 Q2352.0625,969.2188 2352.0625,971.3125 Q2352.0625,973.4063 2352.75,974.4844 Q2353.4375,975.5469 2354.7813,975.5469 Q2355.4063,975.5469 2356,975.2813 Q2356.5938,975 2357.2188,974.4219 L2357.2188,977.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="2374.75" y="975.6543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2206" x2="2651" y1="987.5" y2="987.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2206" x2="2651" y1="995.5" y2="995.5"/><ellipse cx="2216" cy="1006.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="2225" y="1009.7104">ConcurrentTaskQueue(size_t threadNum, const std::string &amp; name) : void</text><ellipse cx="2216" cy="1019.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2225" y="1022.5151">runTaskInQueue(const std::function&lt;void ()&gt; &amp; task) : void</text><ellipse cx="2216" cy="1032.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="2225" y="1035.3198">runTaskInQueue(std::function&lt;void ()&gt; &amp;&amp; task) : void</text><ellipse cx="2216" cy="1044.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2225" y="1048.1245">getName() const : std::string</text><ellipse cx="2216" cy="1057.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2225" y="1060.9292">getTaskCount() : size_t</text><ellipse cx="2216" cy="1070.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2225" y="1073.7339">stop() : void</text><ellipse cx="2216" cy="1083.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2225" y="1086.5386">~ConcurrentTaskQueue() : void</text><!--MD5=[cbb2323b73f7a7327b02185a18d9a785]
class C_0001897340460211641725--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="278.4844" id="C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="6962" y="3730"/><ellipse cx="7166.75" cy="3746" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7169.7188,3751.6406 Q7169.1406,3751.9375 7168.5,3752.0781 Q7167.8594,3752.2344 7167.1563,3752.2344 Q7164.6563,3752.2344 7163.3281,3750.5938 Q7162.0156,3748.9375 7162.0156,3745.8125 Q7162.0156,3742.6875 7163.3281,3741.0313 Q7164.6563,3739.375 7167.1563,3739.375 Q7167.8594,3739.375 7168.5,3739.5313 Q7169.1563,3739.6875 7169.7188,3739.9844 L7169.7188,3742.7031 Q7169.0938,3742.125 7168.5,3741.8594 Q7167.9063,3741.5781 7167.2813,3741.5781 Q7165.9375,3741.5781 7165.25,3742.6563 Q7164.5625,3743.7188 7164.5625,3745.8125 Q7164.5625,3747.9063 7165.25,3748.9844 Q7165.9375,3750.0469 7167.2813,3750.0469 Q7167.9063,3750.0469 7168.5,3749.7813 Q7169.0938,3749.5 7169.7188,3748.9219 L7169.7188,3751.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="7187.25" y="3750.1543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6963" x2="7454" y1="3762" y2="3762"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6963" x2="7454" y1="3770" y2="3770"/><ellipse cx="6973" cy="3781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="6982" y="3784.2104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="6973" cy="3793.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="6982" y="3797.0151">InetAddress(const std::string &amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="6973" cy="3806.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="6982" y="3809.8198">InetAddress(const struct sockaddr_in &amp; addr) : void</text><ellipse cx="6973" cy="3819.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="6982" y="3822.6245">InetAddress(const struct sockaddr_in6 &amp; addr) : void</text><ellipse cx="6973" cy="3832.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6982" y="3835.4292">family() const : sa_family_t</text><ellipse cx="6973" cy="3845.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6982" y="3848.2339">toIp() const : std::string</text><ellipse cx="6973" cy="3857.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="6982" y="3861.0386">toIpPort() const : std::string</text><ellipse cx="6973" cy="3870.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6982" y="3873.8433">toPort() const : uint16_t</text><ellipse cx="6973" cy="3883.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6982" y="3886.6479">isIpV6() const : bool</text><ellipse cx="6973" cy="3896.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6982" y="3899.4526">isIntranetIp() const : bool</text><ellipse cx="6973" cy="3909.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6982" y="3912.2573">isLoopbackIp() const : bool</text><ellipse cx="6973" cy="3921.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="6982" y="3925.062">getSockAddr() const : const struct sockaddr *</text><ellipse cx="6973" cy="3934.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="6982" y="3937.8667">setSockAddrInet6(const struct sockaddr_in6 &amp; addr6) : void</text><ellipse cx="6973" cy="3947.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="6982" y="3950.6714">ipNetEndian() const : uint32_t</text><ellipse cx="6973" cy="3960.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6982" y="3963.4761">ip6NetEndian() const : const uint32_t *</text><ellipse cx="6973" cy="3973.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="6982" y="3976.2808">portNetEndian() const : uint16_t</text><ellipse cx="6973" cy="3985.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6982" y="3989.0854">setPortNetEndian(uint16_t port) : void</text><ellipse cx="6973" cy="3998.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6982" y="4001.8901">isUnspecified() const : bool</text><!--MD5=[fc18972faf1c61d69feddadc1f33c92d]
class C_0000673025168912921705--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="73.6094" id="C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="7222" y="4354"/><ellipse cx="7265.8" cy="4370" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7268.7688,4375.6406 Q7268.1906,4375.9375 7267.55,4376.0781 Q7266.9094,4376.2344 7266.2063,4376.2344 Q7263.7063,4376.2344 7262.3781,4374.5938 Q7261.0656,4372.9375 7261.0656,4369.8125 Q7261.0656,4366.6875 7262.3781,4365.0313 Q7263.7063,4363.375 7266.2063,4363.375 Q7266.9094,4363.375 7267.55,4363.5313 Q7268.2063,4363.6875 7268.7688,4363.9844 L7268.7688,4366.7031 Q7268.1438,4366.125 7267.55,4365.8594 Q7266.9563,4365.5781 7266.3313,4365.5781 Q7264.9875,4365.5781 7264.3,4366.6563 Q7263.6125,4367.7188 7263.6125,4369.8125 Q7263.6125,4371.9063 7264.3,4372.9844 Q7264.9875,4374.0469 7266.3313,4374.0469 Q7266.9563,4374.0469 7267.55,4373.7813 Q7268.1438,4373.5 7268.7688,4372.9219 L7268.7688,4375.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="7286.2" y="4374.1543">InetAddress::()</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7223" x2="7410" y1="4386" y2="4386"/><ellipse cx="7233" cy="4397" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="7242" y="4400.2104">addr_ : struct sockaddr_in</text><ellipse cx="7233" cy="4409.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="7242" y="4413.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7223" x2="7410" y1="4419.6094" y2="4419.6094"/><!--MD5=[66332cb9060bc949ea74225be1104b68]
class C_0000434245188016003403--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="8638.5" y="2350"/><ellipse cx="8675.55" cy="2366" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8679.6594,2372 L8671.9406,2372 L8671.9406,2359.6094 L8679.6594,2359.6094 L8679.6594,2361.7656 L8674.3938,2361.7656 L8674.3938,2364.4375 L8679.1594,2364.4375 L8679.1594,2366.5938 L8674.3938,2366.5938 L8674.3938,2369.8438 L8679.6594,2369.8438 L8679.6594,2372 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="8694.45" y="2370.1543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8639.5" x2="8771.5" y1="2382" y2="2382"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="8644.5" y="2396.2104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="8644.5" y="2409.0151">kSSLInvalidCertificate</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="8644.5" y="2421.8198">kSSLProtocolError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8639.5" x2="8771.5" y1="2428.4141" y2="2428.4141"/><!--MD5=[bc555c99f0e75025e1dcf95caffae609]
class C_0001660397537883119469--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="99.2188" id="C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="7616" y="2859"/><ellipse cx="7711.25" cy="2875" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7711.3594,2870.3438 L7710.2031,2875.4219 L7712.5313,2875.4219 L7711.3594,2870.3438 Z M7709.875,2868.1094 L7712.8594,2868.1094 L7716.2188,2880.5 L7713.7656,2880.5 L7713,2877.4375 L7709.7188,2877.4375 L7708.9688,2880.5 L7706.5313,2880.5 L7709.875,2868.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="7731.75" y="2879.1543">Certificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7617" x2="7878" y1="2891" y2="2891"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7617" x2="7878" y1="2899" y2="2899"/><ellipse cx="7627" cy="2910" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="7636" y="2913.2104">~Certificate() = default : void</text><ellipse cx="7627" cy="2922.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="7636" y="2926.0151">sha1Fingerprint() const = 0 : std::string</text><ellipse cx="7627" cy="2935.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="7636" y="2938.8198">sha256Fingerprint() const = 0 : std::string</text><ellipse cx="7627" cy="2948.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="7636" y="2951.6245">pem() const = 0 : std::string</text><!--MD5=[5368604bbb4530f9ed0e170f7ad54dab]
class C_0002100370281243872283--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="355.3125" id="C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.5;" width="637" x="7986" y="2731"/><ellipse cx="8272.25" cy="2747" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8275.2188,2752.6406 Q8274.6406,2752.9375 8274,2753.0781 Q8273.3594,2753.2344 8272.6563,2753.2344 Q8270.1563,2753.2344 8268.8281,2751.5938 Q8267.5156,2749.9375 8267.5156,2746.8125 Q8267.5156,2743.6875 8268.8281,2742.0313 Q8270.1563,2740.375 8272.6563,2740.375 Q8273.3594,2740.375 8274,2740.5313 Q8274.6563,2740.6875 8275.2188,2740.9844 L8275.2188,2743.7031 Q8274.5938,2743.125 8274,2742.8594 Q8273.4063,2742.5781 8272.7813,2742.5781 Q8271.4375,2742.5781 8270.75,2743.6563 Q8270.0625,2744.7188 8270.0625,2746.8125 Q8270.0625,2748.9063 8270.75,2749.9844 Q8271.4375,2751.0469 8272.7813,2751.0469 Q8273.4063,2751.0469 8274,2750.7813 Q8274.5938,2750.5 8275.2188,2749.9219 L8275.2188,2752.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="8292.75" y="2751.1543">TLSPolicy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7987" x2="8622" y1="2763" y2="2763"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7987" x2="8622" y1="2771" y2="2771"/><ellipse cx="7997" cy="2782" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="560" x="8006" y="2785.2104">setConfCmds(const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2794.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="8006" y="2798.0151">setHostname(const std::string &amp; hostname) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2807.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="8006" y="2810.8198">setCertPath(const std::string &amp; certPath) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2820.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="8006" y="2823.6245">setKeyPath(const std::string &amp; keyPath) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2833.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="8006" y="2836.4292">setCaPath(const std::string &amp; caPath) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2846.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="8006" y="2849.2339">setUseOldTLS(bool useOldTLS) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2858.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="450" x="8006" y="2862.0386">setAlpnProtocols(const std::vector&lt;std::string&gt; &amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2871.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="8006" y="2874.8433">setAlpnProtocols(std::vector&lt;std::string&gt; &amp;&amp; alpnProtocols) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2884.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="8006" y="2887.6479">setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2897.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="8006" y="2900.4526">setValidate(bool enable) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2910.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="8006" y="2913.2573">setAllowBrokenChain(bool allow) : TLSPolicy &amp;</text><ellipse cx="7997" cy="2922.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="8006" y="2926.062">getConfCmds() const : const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp;</text><ellipse cx="7997" cy="2935.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="8006" y="2938.8667">getHostname() const : const std::string &amp;</text><ellipse cx="7997" cy="2948.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="8006" y="2951.6714">getCertPath() const : const std::string &amp;</text><ellipse cx="7997" cy="2961.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="8006" y="2964.4761">getKeyPath() const : const std::string &amp;</text><ellipse cx="7997" cy="2974.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="8006" y="2977.2808">getCaPath() const : const std::string &amp;</text><ellipse cx="7997" cy="2986.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="8006" y="2990.0854">getUseOldTLS() const : bool</text><ellipse cx="7997" cy="2999.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="8006" y="3002.8901">getValidate() const : bool</text><ellipse cx="7997" cy="3012.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="8006" y="3015.6948">getAllowBrokenChain() const : bool</text><ellipse cx="7997" cy="3025.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="8006" y="3028.4995">getAlpnProtocols() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="7997" cy="3038.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="8006" y="3041.3042">getAlpnProtocols() : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="7997" cy="3050.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="8006" y="3054.1089">getUseSystemCertStore() const : bool</text><ellipse cx="7997" cy="3063.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="611" x="8006" y="3066.9136">defaultServerPolicy(const std::string &amp; certPath, const std::string &amp; keyPath) : std::shared_ptr&lt;TLSPolicy&gt;</text><ellipse cx="7997" cy="3076.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="478" x="8006" y="3079.7183">defaultClientPolicy(const std::string &amp; hostname = "") : std::shared_ptr&lt;TLSPolicy&gt;</text><!--MD5=[14e69a44dc88e71a437bd89b027a061c]
class C_0002230624932100089526--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="726.6484" id="C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.5;" width="1413" x="6173" y="661"/><ellipse cx="6828.75" cy="677" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6828.8594,672.3438 L6827.7031,677.4219 L6830.0313,677.4219 L6828.8594,672.3438 Z M6827.375,670.1094 L6830.3594,670.1094 L6833.7188,682.5 L6831.2656,682.5 L6830.5,679.4375 L6827.2188,679.4375 L6826.4688,682.5 L6824.0313,682.5 L6827.375,670.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="6849.25" y="681.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6174" x2="7585" y1="693" y2="693"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6174" x2="7585" y1="701" y2="701"/><ellipse cx="6184" cy="712" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="6193" y="715.2104">TcpConnection() = default : void</text><ellipse cx="6184" cy="724.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6193" y="728.0151">~TcpConnection() : void</text><ellipse cx="6184" cy="737.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="6193" y="740.8198">send(const char * msg, size_t len) = 0 : void</text><ellipse cx="6184" cy="750.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="6193" y="753.6245">send(const void * msg, size_t len) = 0 : void</text><ellipse cx="6184" cy="763.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="227" x="6193" y="766.4292">send(const std::string &amp; msg) = 0 : void</text><ellipse cx="6184" cy="776.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="6193" y="779.2339">send(std::string &amp;&amp; msg) = 0 : void</text><ellipse cx="6184" cy="788.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="6193" y="792.0386">send(const MsgBuffer &amp; buffer) = 0 : void</text><ellipse cx="6184" cy="801.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="212" x="6193" y="804.8433">send(MsgBuffer &amp;&amp; buffer) = 0 : void</text><ellipse cx="6184" cy="814.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="6193" y="817.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="6184" cy="827.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="347" x="6193" y="830.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) = 0 : void</text><ellipse cx="6184" cy="840.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="440" x="6193" y="843.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="6184" cy="852.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="459" x="6193" y="856.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="6184" cy="865.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="438" x="6193" y="868.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="6184" cy="878.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="6193" y="881.6714">localAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="6184" cy="891.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="6193" y="894.4761">peerAddr() const = 0 : const InetAddress &amp;</text><ellipse cx="6184" cy="904.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="6193" y="907.2808">connected() const = 0 : bool</text><ellipse cx="6184" cy="916.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="6193" y="920.0854">disconnected() const = 0 : bool</text><ellipse cx="6184" cy="929.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="508" x="6193" y="932.8901">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) = 0 : void</text><ellipse cx="6184" cy="942.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="6193" y="945.6948">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="6184" cy="955.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="6193" y="958.4995">shutdown() = 0 : void</text><ellipse cx="6184" cy="968.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="6193" y="971.3042">forceClose() = 0 : void</text><ellipse cx="6184" cy="980.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="6193" y="984.1089">getLoop() = 0 : EventLoop *</text><ellipse cx="6184" cy="993.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="6193" y="996.9136">setContext(const std::shared_ptr&lt;void&gt; &amp; context) : void</text><ellipse cx="6184" cy="1006.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="6193" y="1009.7183">setContext(std::shared_ptr&lt;void&gt; &amp;&amp; context) : void</text><ellipse cx="6184" cy="1019.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="242" x="6193" y="1022.5229">applicationProtocol() const = 0 : std::string</text><ellipse cx="6184" cy="1032.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6193" y="1035.3276">hasContext() const : bool</text><ellipse cx="6184" cy="1044.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6193" y="1048.1323">clearContext() : void</text><ellipse cx="6184" cy="1057.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="6193" y="1060.937">keepAlive() = 0 : void</text><ellipse cx="6184" cy="1070.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="6193" y="1073.7417">isKeepAlive() = 0 : bool</text><ellipse cx="6184" cy="1083.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="6193" y="1086.5464">bytesSent() const = 0 : size_t</text><ellipse cx="6184" cy="1096.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="6193" y="1099.3511">bytesReceived() const = 0 : size_t</text><ellipse cx="6184" cy="1108.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="6193" y="1112.1558">isSSLConnection() const = 0 : bool</text><ellipse cx="6184" cy="1121.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="192" x="6193" y="1124.9604">getRecvBuffer() = 0 : MsgBuffer *</text><ellipse cx="6184" cy="1134.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="6193" y="1137.7651">peerCertificate() const = 0 : CertificatePtr</text><ellipse cx="6184" cy="1147.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="6193" y="1150.5698">sniName() const = 0 : std::string</text><ellipse cx="6184" cy="1160.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="772" x="6193" y="1163.3745">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) = 0 : void</text><ellipse cx="6184" cy="1172.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1387" x="6193" y="1176.1792">startClientEncryption(std::function&lt;void (const TcpConnectionPtr &amp;)&gt; &amp;&amp; callback, bool useOldTLS = false, bool validateCert = true, const std::string &amp; hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="6193" y="1188.9839">{}) : void</text><ellipse cx="6184" cy="1198.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="6193" y="1201.7886">setValidationPolicy(TLSPolicy &amp;&amp; policy) : void</text><ellipse cx="6184" cy="1211.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="6193" y="1214.5933">setRecvMsgCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="6184" cy="1224.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="6193" y="1227.3979">setRecvMsgCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="6184" cy="1236.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="6193" y="1240.2026">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="6184" cy="1249.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="6193" y="1253.0073">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="6184" cy="1262.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="6193" y="1265.812">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="6184" cy="1275.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="6193" y="1278.6167">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="6184" cy="1288.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="6193" y="1291.4214">setCloseCallback(const CloseCallback &amp; cb) : void</text><ellipse cx="6184" cy="1301.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="6193" y="1304.2261">setCloseCallback(CloseCallback &amp;&amp; cb) : void</text><ellipse cx="6184" cy="1313.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="6193" y="1317.0308">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="6184" cy="1326.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6193" y="1329.8354">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="6184" cy="1339.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="6193" y="1342.6401">connectEstablished() = 0 : void</text><ellipse cx="6184" cy="1352.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="170" x="6193" y="1355.4448">connectDestroyed() = 0 : void</text><ellipse cx="6184" cy="1365.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="547" x="6193" y="1368.2495">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) = 0 : void</text><ellipse cx="6184" cy="1377.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6193" y="1381.0542">getContext&lt;T&gt;() : std::shared_ptr&lt;T&gt;</text><!--MD5=[72fa5b3c2de7848a9f14c3e903d66f4b]
class C_0001156367011091191681--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="329.7031" id="C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.5;" width="953" x="6897" y="223"/><ellipse cx="7340.75" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7343.7188,244.6406 Q7343.1406,244.9375 7342.5,245.0781 Q7341.8594,245.2344 7341.1563,245.2344 Q7338.6563,245.2344 7337.3281,243.5938 Q7336.0156,241.9375 7336.0156,238.8125 Q7336.0156,235.6875 7337.3281,234.0313 Q7338.6563,232.375 7341.1563,232.375 Q7341.8594,232.375 7342.5,232.5313 Q7343.1563,232.6875 7343.7188,232.9844 L7343.7188,235.7031 Q7343.0938,235.125 7342.5,234.8594 Q7341.9063,234.5781 7341.2813,234.5781 Q7339.9375,234.5781 7339.25,235.6563 Q7338.5625,236.7188 7338.5625,238.8125 Q7338.5625,240.9063 7339.25,241.9844 Q7339.9375,243.0469 7341.2813,243.0469 Q7341.9063,243.0469 7342.5,242.7813 Q7343.0938,242.5 7343.7188,241.9219 L7343.7188,244.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="7361.25" y="243.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6898" x2="7849" y1="255" y2="255"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6898" x2="7849" y1="263" y2="263"/><ellipse cx="6908" cy="274" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="6917" y="277.2104">TcpClient(EventLoop * loop, const InetAddress &amp; serverAddr, const std::string &amp; nameArg) : void</text><ellipse cx="6908" cy="286.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6917" y="290.0151">~TcpClient() : void</text><ellipse cx="6908" cy="299.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="6917" y="302.8198">connect() : void</text><ellipse cx="6908" cy="312.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6917" y="315.6245">disconnect() : void</text><ellipse cx="6908" cy="325.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="6917" y="328.4292">stop() : void</text><ellipse cx="6908" cy="338.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="6917" y="341.2339">connection() const : TcpConnectionPtr</text><ellipse cx="6908" cy="350.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6917" y="354.0386">getLoop() const : EventLoop *</text><ellipse cx="6908" cy="363.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="6917" y="366.8433">retry() const : bool</text><ellipse cx="6908" cy="376.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6917" y="379.6479">enableRetry() : void</text><ellipse cx="6908" cy="389.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="6917" y="392.4526">name() const : const std::string &amp;</text><ellipse cx="6908" cy="402.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="6917" y="405.2573">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="6908" cy="414.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="6917" y="418.062">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="6908" cy="427.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="6917" y="430.8667">setConnectionErrorCallback(const ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="6908" cy="440.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="6917" y="443.6714">setMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="6908" cy="453.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="6917" y="456.4761">setMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="6908" cy="466.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="6917" y="469.2808">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="6908" cy="478.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="6917" y="482.0854">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="6908" cy="491.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="6917" y="494.8901">setSSLErrorCallback(const SSLErrorCallback &amp; cb) : void</text><ellipse cx="6908" cy="504.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="6917" y="507.6948">setSSLErrorCallback(SSLErrorCallback &amp;&amp; cb) : void</text><ellipse cx="6908" cy="517.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="927" x="6917" y="520.4995">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="6917" y="533.3042">{}, const std::string &amp; certPath =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="7115" y="533.3042">, const std::string &amp; keyPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="7339" y="533.3042">, const std::string &amp; caPath = "") : void</text><ellipse cx="6908" cy="542.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6917" y="546.1089">enableSSL(TLSPolicyPtr policy) : void</text><!--MD5=[36897566f721d8b8c541721979fa9001]
class C_0001278908569830571044--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="60.8047" id="C_0001278908569830571044" style="stroke: #A80036; stroke-width: 1.5;" width="183" x="7282" y="46.5"/><ellipse cx="7297" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7299.9688,68.1406 Q7299.3906,68.4375 7298.75,68.5781 Q7298.1094,68.7344 7297.4063,68.7344 Q7294.9063,68.7344 7293.5781,67.0938 Q7292.2656,65.4375 7292.2656,62.3125 Q7292.2656,59.1875 7293.5781,57.5313 Q7294.9063,55.875 7297.4063,55.875 Q7298.1094,55.875 7298.75,56.0313 Q7299.4063,56.1875 7299.9688,56.4844 L7299.9688,59.2031 Q7299.3438,58.625 7298.75,58.3594 Q7298.1563,58.0781 7297.5313,58.0781 Q7296.1875,58.0781 7295.5,59.1563 Q7294.8125,60.2188 7294.8125,62.3125 Q7294.8125,64.4063 7295.5,65.4844 Q7296.1875,66.5469 7297.5313,66.5469 Q7298.1563,66.5469 7298.75,66.2813 Q7299.3438,66 7299.9688,65.4219 L7299.9688,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="7311" y="66.6543">TcpClient::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7283" x2="7464" y1="78.5" y2="78.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7283" x2="7464" y1="86.5" y2="86.5"/><ellipse cx="7293" cy="97.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7302" y="100.7104">IgnoreSigPipe() : void</text><!--MD5=[bf31e704e42c877df2dec6bd5fd054fb]
class C_0000464040622375950341--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="278.4844" id="C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="7607" y="2254"/><ellipse cx="7808.25" cy="2270" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7808.3594,2265.3438 L7807.2031,2270.4219 L7809.5313,2270.4219 L7808.3594,2265.3438 Z M7806.875,2263.1094 L7809.8594,2263.1094 L7813.2188,2275.5 L7810.7656,2275.5 L7810,2272.4375 L7806.7188,2272.4375 L7805.9688,2275.5 L7803.5313,2275.5 L7806.875,2263.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="7828.75" y="2274.1543">TLSProvider</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7608" x2="8089" y1="2286" y2="2286"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7608" x2="8089" y1="2294" y2="2294"/><ellipse cx="7618" cy="2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="7627" y="2308.2104">TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void</text><ellipse cx="7618" cy="2317.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="7627" y="2321.0151">~TLSProvider() = default : void</text><ellipse cx="7618" cy="2330.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="224" x="7627" y="2333.8198">recvData(MsgBuffer * buffer) = 0 : void</text><ellipse cx="7618" cy="2343.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="290" x="7627" y="2346.6245">sendData(const char * ptr, size_t size) = 0 : ssize_t</text><ellipse cx="7618" cy="2356.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="7627" y="2359.4292">close() = 0 : void</text><ellipse cx="7618" cy="2369.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="7627" y="2372.2339">startEncryption() = 0 : void</text><ellipse cx="7618" cy="2381.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="7627" y="2385.0386">sendBufferedData() : bool</text><ellipse cx="7618" cy="2394.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="7627" y="2397.8433">getBufferedData() : MsgBuffer &amp;</text><ellipse cx="7618" cy="2407.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="7627" y="2410.6479">appendToWriteBuffer(const char * ptr, size_t size) : void</text><ellipse cx="7618" cy="2420.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="7627" y="2423.4526">setWriteCallback(TLSProvider::WriteCallback cb) : void</text><ellipse cx="7618" cy="2433.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="7627" y="2436.2573">setErrorCallback(TLSProvider::ErrorCallback cb) : void</text><ellipse cx="7618" cy="2445.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="374" x="7627" y="2449.062">setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void</text><ellipse cx="7618" cy="2458.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="7627" y="2461.8667">setMessageCallback(TLSProvider::MessageCallback cb) : void</text><ellipse cx="7618" cy="2471.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="7627" y="2474.6714">setCloseCallback(TLSProvider::CloseCallback cb) : void</text><ellipse cx="7618" cy="2484.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="7627" y="2487.4761">getRecvBuffer() : MsgBuffer &amp;</text><ellipse cx="7618" cy="2497.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="7627" y="2500.2808">peerCertificate() const : const CertificatePtr &amp;</text><ellipse cx="7618" cy="2509.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="7627" y="2513.0854">applicationProtocol() const : const std::string &amp;</text><ellipse cx="7618" cy="2522.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="7627" y="2525.8901">sniName() const : const std::string &amp;</text><!--MD5=[35d84190a7c61cc84b3bcd69161ea2bf]
class C_0001706043459252151324--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="188.8516" id="C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.5;" width="487" x="4307" y="3316.5"/><ellipse cx="4513.75" cy="3332.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4516.7188,3338.1406 Q4516.1406,3338.4375 4515.5,3338.5781 Q4514.8594,3338.7344 4514.1563,3338.7344 Q4511.6563,3338.7344 4510.3281,3337.0938 Q4509.0156,3335.4375 4509.0156,3332.3125 Q4509.0156,3329.1875 4510.3281,3327.5313 Q4511.6563,3325.875 4514.1563,3325.875 Q4514.8594,3325.875 4515.5,3326.0313 Q4516.1563,3326.1875 4516.7188,3326.4844 L4516.7188,3329.2031 Q4516.0938,3328.625 4515.5,3328.3594 Q4514.9063,3328.0781 4514.2813,3328.0781 Q4512.9375,3328.0781 4512.25,3329.1563 Q4511.5625,3330.2188 4511.5625,3332.3125 Q4511.5625,3334.4063 4512.25,3335.4844 Q4512.9375,3336.5469 4514.2813,3336.5469 Q4514.9063,3336.5469 4515.5,3336.2813 Q4516.0938,3336 4516.7188,3335.4219 L4516.7188,3338.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="4534.25" y="3336.6543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4308" x2="4793" y1="3348.5" y2="3348.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4308" x2="4793" y1="3356.5" y2="3356.5"/><ellipse cx="4318" cy="3367.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="4327" y="3370.7104">Connector(EventLoop * loop, const InetAddress &amp; addr, bool retry = true) : void</text><ellipse cx="4318" cy="3380.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="430" x="4327" y="3383.5151">Connector(EventLoop * loop, InetAddress &amp;&amp; addr, bool retry = true) : void</text><ellipse cx="4318" cy="3393.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4327" y="3396.3198">~Connector() : void</text><ellipse cx="4318" cy="3405.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="4327" y="3409.1245">setNewConnectionCallback(const Connector::NewConnectionCallback &amp; cb) : void</text><ellipse cx="4318" cy="3418.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="4327" y="3421.9292">setNewConnectionCallback(Connector::NewConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="4318" cy="3431.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="408" x="4327" y="3434.7339">setErrorCallback(const Connector::ConnectionErrorCallback &amp; cb) : void</text><ellipse cx="4318" cy="3444.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="4327" y="3447.5386">setErrorCallback(Connector::ConnectionErrorCallback &amp;&amp; cb) : void</text><ellipse cx="4318" cy="3457.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4327" y="3460.3433">serverAddress() const : const InetAddress &amp;</text><ellipse cx="4318" cy="3469.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4327" y="3473.1479">start() : void</text><ellipse cx="4318" cy="3482.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="4327" y="3485.9526">restart() : void</text><ellipse cx="4318" cy="3495.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="4327" y="3498.7573">stop() : void</text><!--MD5=[e79edad503674c7fc854de75a75b6c70]
class C_0000000982196670174162--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0000000982196670174162" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="4142.5" y="2865.5"/><ellipse cx="4157.5" cy="2881.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4161.6094,2887.5 L4153.8906,2887.5 L4153.8906,2875.1094 L4161.6094,2875.1094 L4161.6094,2877.2656 L4156.3438,2877.2656 L4156.3438,2879.9375 L4161.1094,2879.9375 L4161.1094,2882.0938 L4156.3438,2882.0938 L4156.3438,2885.3438 L4161.6094,2885.3438 L4161.6094,2887.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="4171.5" y="2885.6543">Connector::Status</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4143.5" x2="4287.5" y1="2897.5" y2="2897.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4148.5" y="2911.7104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="4148.5" y="2924.5151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4148.5" y="2937.3198">Connected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4143.5" x2="4287.5" y1="2943.9141" y2="2943.9141"/><!--MD5=[47cd452aeaca0720d5f83f180a5063ee]
class C_0000964465843177067305--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="112.0234" id="C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.5;" width="694" x="5161.5" y="2852.5"/><ellipse cx="5465.25" cy="2868.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5468.2188,2874.1406 Q5467.6406,2874.4375 5467,2874.5781 Q5466.3594,2874.7344 5465.6563,2874.7344 Q5463.1563,2874.7344 5461.8281,2873.0938 Q5460.5156,2871.4375 5460.5156,2868.3125 Q5460.5156,2865.1875 5461.8281,2863.5313 Q5463.1563,2861.875 5465.6563,2861.875 Q5466.3594,2861.875 5467,2862.0313 Q5467.6563,2862.1875 5468.2188,2862.4844 L5468.2188,2865.2031 Q5467.5938,2864.625 5467,2864.3594 Q5466.4063,2864.0781 5465.7813,2864.0781 Q5464.4375,2864.0781 5463.75,2865.1563 Q5463.0625,2866.2188 5463.0625,2868.3125 Q5463.0625,2870.4063 5463.75,2871.4844 Q5464.4375,2872.5469 5465.7813,2872.5469 Q5466.4063,2872.5469 5467,2872.2813 Q5467.5938,2872 5468.2188,2871.4219 L5468.2188,2874.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="5485.75" y="2872.6543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5162.5" x2="5854.5" y1="2884.5" y2="2884.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5162.5" x2="5854.5" y1="2892.5" y2="2892.5"/><ellipse cx="5172.5" cy="2903.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="668" x="5181.5" y="2906.7104">TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="5172.5" cy="2916.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5181.5" y="2919.5151">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5172.5" cy="2929.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="5181.5" y="2932.3198">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5172.5" cy="2941.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="5181.5" y="2945.1245">getLoop() : EventLoop *</text><ellipse cx="5172.5" cy="2954.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5181.5" y="2957.9292">~TimingWheel() : void</text><!--MD5=[1a78d5db763eaae95321a32dcf46614d]
class C_0002013739811805694444--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="73.6094" id="C_0002013739811805694444" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="4743.5" y="2356"/><ellipse cx="4797.25" cy="2372" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4800.2188,2377.6406 Q4799.6406,2377.9375 4799,2378.0781 Q4798.3594,2378.2344 4797.6563,2378.2344 Q4795.1563,2378.2344 4793.8281,2376.5938 Q4792.5156,2374.9375 4792.5156,2371.8125 Q4792.5156,2368.6875 4793.8281,2367.0313 Q4795.1563,2365.375 4797.6563,2365.375 Q4798.3594,2365.375 4799,2365.5313 Q4799.6563,2365.6875 4800.2188,2365.9844 L4800.2188,2368.7031 Q4799.5938,2368.125 4799,2367.8594 Q4798.4063,2367.5781 4797.7813,2367.5781 Q4796.4375,2367.5781 4795.75,2368.6563 Q4795.0625,2369.7188 4795.0625,2371.8125 Q4795.0625,2373.9063 4795.75,2374.9844 Q4796.4375,2376.0469 4797.7813,2376.0469 Q4798.4063,2376.0469 4799,2375.7813 Q4799.5938,2375.5 4800.2188,2374.9219 L4800.2188,2377.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="170" x="4817.75" y="2376.1543">TimingWheel::CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4744.5" x2="5028.5" y1="2388" y2="2388"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4744.5" x2="5028.5" y1="2396" y2="2396"/><ellipse cx="4754.5" cy="2407" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="4763.5" y="2410.2104">CallbackEntry(std::function&lt;void ()&gt; cb) : void</text><ellipse cx="4754.5" cy="2419.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="4763.5" y="2423.0151">~CallbackEntry() : void</text><!--MD5=[1b4f4149a08dea6136d45cf217e15ae5]
class C_0000920759514274339356--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="496.1641" id="C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.5;" width="1036" x="6634.5" y="1496"/><ellipse cx="7089.25" cy="1512" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7092.2188,1517.6406 Q7091.6406,1517.9375 7091,1518.0781 Q7090.3594,1518.2344 7089.6563,1518.2344 Q7087.1563,1518.2344 7085.8281,1516.5938 Q7084.5156,1514.9375 7084.5156,1511.8125 Q7084.5156,1508.6875 7085.8281,1507.0313 Q7087.1563,1505.375 7089.6563,1505.375 Q7090.3594,1505.375 7091,1505.5313 Q7091.6563,1505.6875 7092.2188,1505.9844 L7092.2188,1508.7031 Q7091.5938,1508.125 7091,1507.8594 Q7090.4063,1507.5781 7089.7813,1507.5781 Q7088.4375,1507.5781 7087.75,1508.6563 Q7087.0625,1509.7188 7087.0625,1511.8125 Q7087.0625,1513.9063 7087.75,1514.9844 Q7088.4375,1516.0469 7089.7813,1516.0469 Q7090.4063,1516.0469 7091,1515.7813 Q7091.5938,1515.5 7092.2188,1514.9219 L7092.2188,1517.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="118" x="7109.75" y="1516.1543">TcpConnectionImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6635.5" x2="7669.5" y1="1528" y2="1528"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6635.5" x2="7669.5" y1="1536" y2="1536"/><ellipse cx="6645.5" cy="1547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1010" x="6654.5" y="1550.2104">TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress &amp; localAddr, const InetAddress &amp; peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void</text><ellipse cx="6645.5" cy="1559.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6654.5" y="1563.0151">~TcpConnectionImpl() : void</text><ellipse cx="6645.5" cy="1572.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="6654.5" y="1575.8198">send(const char * msg, size_t len) : void</text><ellipse cx="6645.5" cy="1585.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="6654.5" y="1588.6245">send(const void * msg, size_t len) : void</text><ellipse cx="6645.5" cy="1598.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6654.5" y="1601.4292">send(const std::string &amp; msg) : void</text><ellipse cx="6645.5" cy="1611.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="6654.5" y="1614.2339">send(std::string &amp;&amp; msg) : void</text><ellipse cx="6645.5" cy="1623.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="6654.5" y="1627.0386">send(const MsgBuffer &amp; buffer) : void</text><ellipse cx="6645.5" cy="1636.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="6654.5" y="1639.8433">send(MsgBuffer &amp;&amp; buffer) : void</text><ellipse cx="6645.5" cy="1649.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="6654.5" y="1652.6479">send(const std::shared_ptr&lt;std::string&gt; &amp; msgPtr) : void</text><ellipse cx="6645.5" cy="1662.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="6654.5" y="1665.4526">send(const std::shared_ptr&lt;MsgBuffer&gt; &amp; msgPtr) : void</text><ellipse cx="6645.5" cy="1675.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="6654.5" y="1678.2573">sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="6645.5" cy="1687.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="437" x="6654.5" y="1691.062">sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void</text><ellipse cx="6645.5" cy="1700.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="6654.5" y="1703.8667">sendStream(std::function&lt;std::size_t (char *,std::size_t)&gt; callback) : void</text><ellipse cx="6645.5" cy="1713.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="6654.5" y="1716.6714">localAddr() const : const InetAddress &amp;</text><ellipse cx="6645.5" cy="1726.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="6654.5" y="1729.4761">peerAddr() const : const InetAddress &amp;</text><ellipse cx="6645.5" cy="1739.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6654.5" y="1742.2808">connected() const : bool</text><ellipse cx="6645.5" cy="1751.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="6654.5" y="1755.0854">disconnected() const : bool</text><ellipse cx="6645.5" cy="1764.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482" x="6654.5" y="1767.8901">setHighWaterMarkCallback(const HighWaterMarkCallback &amp; cb, size_t markLen) : void</text><ellipse cx="6645.5" cy="1777.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="6654.5" y="1780.6948">keepAlive() : void</text><ellipse cx="6645.5" cy="1790.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="6654.5" y="1793.4995">isKeepAlive() : bool</text><ellipse cx="6645.5" cy="1803.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6654.5" y="1806.3042">setTcpNoDelay(bool on) : void</text><ellipse cx="6645.5" cy="1815.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6654.5" y="1819.1089">shutdown() : void</text><ellipse cx="6645.5" cy="1828.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6654.5" y="1831.9136">forceClose() : void</text><ellipse cx="6645.5" cy="1841.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6654.5" y="1844.7183">getLoop() : EventLoop *</text><ellipse cx="6645.5" cy="1854.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="6654.5" y="1857.5229">bytesSent() const : size_t</text><ellipse cx="6645.5" cy="1867.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6654.5" y="1870.3276">bytesReceived() const : size_t</text><ellipse cx="6645.5" cy="1879.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="6654.5" y="1883.1323">isSSLConnection() const : bool</text><ellipse cx="6645.5" cy="1892.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6654.5" y="1895.937">connectEstablished() : void</text><ellipse cx="6645.5" cy="1905.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="6654.5" y="1908.7417">connectDestroyed() : void</text><ellipse cx="6645.5" cy="1918.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="6654.5" y="1921.5464">getRecvBuffer() : MsgBuffer *</text><ellipse cx="6645.5" cy="1931.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="6654.5" y="1934.3511">applicationProtocol() const : std::string</text><ellipse cx="6645.5" cy="1943.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="6654.5" y="1947.1558">peerCertificate() const : CertificatePtr</text><ellipse cx="6645.5" cy="1956.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6654.5" y="1959.9604">sniName() const : std::string</text><ellipse cx="6645.5" cy="1969.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="749" x="6654.5" y="1972.7651">startEncryption(TLSPolicyPtr policy, bool isServer, std::function&lt;void (const TcpConnectionPtr &amp;)&gt; upgradeCallback = nullptr) : void</text><ellipse cx="6645.5" cy="1982.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="522" x="6654.5" y="1985.5698">enableKickingOff(size_t timeout, const std::shared_ptr&lt;TimingWheel&gt; &amp; timingWheel) : void</text><!--MD5=[fd31fd44dd4b53895283cc4ebf0192ff]
class C_0002266895444343633259--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0002266895444343633259" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="6469" y="345"/><ellipse cx="6562.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6565.2188,366.6406 Q6564.6406,366.9375 6564,367.0781 Q6563.3594,367.2344 6562.6563,367.2344 Q6560.1563,367.2344 6558.8281,365.5938 Q6557.5156,363.9375 6557.5156,360.8125 Q6557.5156,357.6875 6558.8281,356.0313 Q6560.1563,354.375 6562.6563,354.375 Q6563.3594,354.375 6564,354.5313 Q6564.6563,354.6875 6565.2188,354.9844 L6565.2188,357.7031 Q6564.5938,357.125 6564,356.8594 Q6563.4063,356.5781 6562.7813,356.5781 Q6561.4375,356.5781 6560.75,357.6563 Q6560.0625,358.7188 6560.0625,360.8125 Q6560.0625,362.9063 6560.75,363.9844 Q6561.4375,365.0469 6562.7813,365.0469 Q6563.4063,365.0469 6564,364.7813 Q6564.5938,364.5 6565.2188,363.9219 L6565.2188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="6582.75" y="365.1543">TcpConnectionImpl::KickoffEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6470" x2="6861" y1="377" y2="377"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6470" x2="6861" y1="385" y2="385"/><ellipse cx="6480" cy="396" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="6489" y="399.2104">KickoffEntry(const std::weak_ptr&lt;TcpConnection&gt; &amp; conn) : void</text><ellipse cx="6480" cy="408.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6489" y="412.0151">reset() : void</text><ellipse cx="6480" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="6489" y="424.8198">~KickoffEntry() : void</text><!--MD5=[87de1d9bdb2486f0ceeb68ee204e5830]
class C_0001029063960859366412--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="163.2422" id="C_0001029063960859366412" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="8752.5" y="943"/><ellipse cx="8844.25" cy="959" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8847.2188,964.6406 Q8846.6406,964.9375 8846,965.0781 Q8845.3594,965.2344 8844.6563,965.2344 Q8842.1563,965.2344 8840.8281,963.5938 Q8839.5156,961.9375 8839.5156,958.8125 Q8839.5156,955.6875 8840.8281,954.0313 Q8842.1563,952.375 8844.6563,952.375 Q8845.3594,952.375 8846,952.5313 Q8846.6563,952.6875 8847.2188,952.9844 L8847.2188,955.7031 Q8846.5938,955.125 8846,954.8594 Q8845.4063,954.5781 8844.7813,954.5781 Q8843.4375,954.5781 8842.75,955.6563 Q8842.0625,956.7188 8842.0625,958.8125 Q8842.0625,960.9063 8842.75,961.9844 Q8843.4375,963.0469 8844.7813,963.0469 Q8845.4063,963.0469 8846,962.7813 Q8846.5938,962.5 8847.2188,961.9219 L8847.2188,964.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="196" x="8864.75" y="963.1543">TcpConnectionImpl::BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8753.5" x2="9139.5" y1="975" y2="975"/><ellipse cx="8763.5" cy="986" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="8772.5" y="989.2104">sendFd_ : int</text><ellipse cx="8763.5" cy="998.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="8772.5" y="1002.0151">offset_ : off_t</text><ellipse cx="8763.5" cy="1011.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="8772.5" y="1014.8198">fileBytesToSend_ : ssize_t</text><ellipse cx="8763.5" cy="1024.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="8772.5" y="1027.6245">nDataWritten_ : std::size_t</text><ellipse cx="8763.5" cy="1037.2188" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="8772.5" y="1040.4292">msgBuffer_ : std::shared_ptr&lt;MsgBuffer&gt;</text><ellipse cx="8763.5" cy="1050.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="8772.5" y="1053.2339">closeConnection_ : bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8753.5" x2="9139.5" y1="1059.8281" y2="1059.8281"/><ellipse cx="8763.5" cy="1070.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="8772.5" y="1074.0386">isFile() const : bool</text><ellipse cx="8763.5" cy="1083.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="8772.5" y="1086.8433">~BufferNode() : void</text><ellipse cx="8763.5" cy="1096.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="8772.5" y="1099.6479">streamCallback_ : std::function&lt;std::size_t (char *,std::size_t)&gt;</text><!--MD5=[8afb725b5f97df604240a26bac5b9bd6]
class C_0001727349338344491225--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="99.2188" id="C_0001727349338344491225" style="stroke: #A80036; stroke-width: 1.5;" width="231" x="5907" y="975"/><ellipse cx="5922" cy="991" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5926.1094,997 L5918.3906,997 L5918.3906,984.6094 L5926.1094,984.6094 L5926.1094,986.7656 L5920.8438,986.7656 L5920.8438,989.4375 L5925.6094,989.4375 L5925.6094,991.5938 L5920.8438,991.5938 L5920.8438,994.8438 L5926.1094,994.8438 L5926.1094,997 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="199" x="5936" y="995.1543">TcpConnectionImpl::ConnStatus</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5908" x2="6137" y1="1007" y2="1007"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5913" y="1021.2104">Disconnected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="5913" y="1034.0151">Connecting</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="5913" y="1046.8198">Connected</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5913" y="1059.6245">Disconnecting</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5908" x2="6137" y1="1066.2188" y2="1066.2188"/><!--MD5=[d99aee9b992f460f1b1d42c26b506f4a]
class C_0000971024972307079851--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="304.0938" id="C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.5;" width="314" x="6669.5" y="3259"/><ellipse cx="6800.75" cy="3275" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6803.7188,3280.6406 Q6803.1406,3280.9375 6802.5,3281.0781 Q6801.8594,3281.2344 6801.1563,3281.2344 Q6798.6563,3281.2344 6797.3281,3279.5938 Q6796.0156,3277.9375 6796.0156,3274.8125 Q6796.0156,3271.6875 6797.3281,3270.0313 Q6798.6563,3268.375 6801.1563,3268.375 Q6801.8594,3268.375 6802.5,3268.5313 Q6803.1563,3268.6875 6803.7188,3268.9844 L6803.7188,3271.7031 Q6803.0938,3271.125 6802.5,3270.8594 Q6801.9063,3270.5781 6801.2813,3270.5781 Q6799.9375,3270.5781 6799.25,3271.6563 Q6798.5625,3272.7188 6798.5625,3274.8125 Q6798.5625,3276.9063 6799.25,3277.9844 Q6799.9375,3279.0469 6801.2813,3279.0469 Q6801.9063,3279.0469 6802.5,3278.7813 Q6803.0938,3278.5 6803.7188,3277.9219 L6803.7188,3280.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="6821.25" y="3279.1543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6670.5" x2="6982.5" y1="3291" y2="3291"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6670.5" x2="6982.5" y1="3299" y2="3299"/><ellipse cx="6680.5" cy="3310" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="6689.5" y="3313.2104">createNonblockingSocketOrDie(int family) : int</text><ellipse cx="6680.5" cy="3322.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="174" x="6689.5" y="3326.0151">getSocketError(int sockfd) : int</text><ellipse cx="6680.5" cy="3335.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288" x="6689.5" y="3338.8198">connect(int sockfd, const InetAddress &amp; addr) : int</text><ellipse cx="6680.5" cy="3348.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="6689.5" y="3351.6245">isSelfConnect(int sockfd) : bool</text><ellipse cx="6680.5" cy="3361.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6689.5" y="3364.4292">Socket(int sockfd) : void</text><ellipse cx="6680.5" cy="3374.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="6689.5" y="3377.2339">~Socket() : void</text><ellipse cx="6680.5" cy="3386.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="6689.5" y="3390.0386">bindAddress(const InetAddress &amp; localaddr) : void</text><ellipse cx="6680.5" cy="3399.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6689.5" y="3402.8433">listen() : void</text><ellipse cx="6680.5" cy="3412.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="6689.5" y="3415.6479">accept(InetAddress * peeraddr) : int</text><ellipse cx="6680.5" cy="3425.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6689.5" y="3428.4526">closeWrite() : void</text><ellipse cx="6680.5" cy="3438.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="6689.5" y="3441.2573">read(char * buffer, uint64_t len) : int</text><ellipse cx="6680.5" cy="3450.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="6689.5" y="3454.062">fd() : int</text><ellipse cx="6680.5" cy="3463.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="260" x="6689.5" y="3466.8667">getLocalAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="6680.5" cy="3476.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="257" x="6689.5" y="3479.6714">getPeerAddr(int sockfd) : struct sockaddr_in6</text><ellipse cx="6680.5" cy="3489.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6689.5" y="3492.4761">setTcpNoDelay(bool on) : void</text><ellipse cx="6680.5" cy="3502.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6689.5" y="3505.2808">setReuseAddr(bool on) : void</text><ellipse cx="6680.5" cy="3514.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="6689.5" y="3518.0854">setReusePort(bool on) : void</text><ellipse cx="6680.5" cy="3527.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="6689.5" y="3530.8901">setKeepAlive(bool on) : void</text><ellipse cx="6680.5" cy="3540.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6689.5" y="3543.6948">getSocketError() : int</text><ellipse cx="6680.5" cy="3553.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="263" x="6689.5" y="3556.4995">setNonBlockAndCloseOnExec(int sockfd) : void</text><!--MD5=[3238014cc46348091eca21f24043b8ec]
class C_0000626107303889580949--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="48" id="C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="7107.5" y="2884.5"/><ellipse cx="7122.5" cy="2900.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7125.4688,2906.1406 Q7124.8906,2906.4375 7124.25,2906.5781 Q7123.6094,2906.7344 7122.9063,2906.7344 Q7120.4063,2906.7344 7119.0781,2905.0938 Q7117.7656,2903.4375 7117.7656,2900.3125 Q7117.7656,2897.1875 7119.0781,2895.5313 Q7120.4063,2893.875 7122.9063,2893.875 Q7123.6094,2893.875 7124.25,2894.0313 Q7124.9063,2894.1875 7125.4688,2894.4844 L7125.4688,2897.2031 Q7124.8438,2896.625 7124.25,2896.3594 Q7123.6563,2896.0781 7123.0313,2896.0781 Q7121.6875,2896.0781 7121,2897.1563 Q7120.3125,2898.2188 7120.3125,2900.3125 Q7120.3125,2902.4063 7121,2903.4844 Q7121.6875,2904.5469 7123.0313,2904.5469 Q7123.6563,2904.5469 7124.25,2904.2813 Q7124.8438,2904 7125.4688,2903.4219 L7125.4688,2906.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="7136.5" y="2904.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7108.5" x2="7208.5" y1="2916.5" y2="2916.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7108.5" x2="7208.5" y1="2924.5" y2="2924.5"/><!--MD5=[52975ebd0d868c97f8c8486b47b8263a]
class C_0001423170502760786790--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="329.7031" id="C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.5;" width="985" x="5406" y="2228"/><ellipse cx="5863.25" cy="2244" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5866.2188,2249.6406 Q5865.6406,2249.9375 5865,2250.0781 Q5864.3594,2250.2344 5863.6563,2250.2344 Q5861.1563,2250.2344 5859.8281,2248.5938 Q5858.5156,2246.9375 5858.5156,2243.8125 Q5858.5156,2240.6875 5859.8281,2239.0313 Q5861.1563,2237.375 5863.6563,2237.375 Q5864.3594,2237.375 5865,2237.5313 Q5865.6563,2237.6875 5866.2188,2237.9844 L5866.2188,2240.7031 Q5865.5938,2240.125 5865,2239.8594 Q5864.4063,2239.5781 5863.7813,2239.5781 Q5862.4375,2239.5781 5861.75,2240.6563 Q5861.0625,2241.7188 5861.0625,2243.8125 Q5861.0625,2245.9063 5861.75,2246.9844 Q5862.4375,2248.0469 5863.7813,2248.0469 Q5864.4063,2248.0469 5865,2247.7813 Q5865.5938,2247.5 5866.2188,2246.9219 L5866.2188,2249.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="5883.75" y="2248.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5407" x2="6390" y1="2260" y2="2260"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5407" x2="6390" y1="2268" y2="2268"/><ellipse cx="5417" cy="2279" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="745" x="5426" y="2282.2104">TcpServer(EventLoop * loop, const InetAddress &amp; address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="5417" cy="2291.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="5426" y="2295.0151">~TcpServer() : void</text><ellipse cx="5417" cy="2304.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5426" y="2307.8198">start() : void</text><ellipse cx="5417" cy="2317.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5426" y="2320.6245">stop() : void</text><ellipse cx="5417" cy="2330.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5426" y="2333.4292">setIoLoopNum(size_t num) : void</text><ellipse cx="5417" cy="2343.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="5426" y="2346.2339">setIoLoopThreadPool(const std::shared_ptr&lt;EventLoopThreadPool&gt; &amp; pool) : void</text><ellipse cx="5417" cy="2355.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="5426" y="2359.0386">setIoLoops(const std::vector&lt;EventLoop *&gt; &amp; ioLoops) : void</text><ellipse cx="5417" cy="2368.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="5426" y="2371.8433">setRecvMessageCallback(const RecvMessageCallback &amp; cb) : void</text><ellipse cx="5417" cy="2381.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="5426" y="2384.6479">setRecvMessageCallback(RecvMessageCallback &amp;&amp; cb) : void</text><ellipse cx="5417" cy="2394.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="5426" y="2397.4526">setConnectionCallback(const ConnectionCallback &amp; cb) : void</text><ellipse cx="5417" cy="2407.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="5426" y="2410.2573">setConnectionCallback(ConnectionCallback &amp;&amp; cb) : void</text><ellipse cx="5417" cy="2419.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="5426" y="2423.062">setWriteCompleteCallback(const WriteCompleteCallback &amp; cb) : void</text><ellipse cx="5417" cy="2432.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="5426" y="2435.8667">setWriteCompleteCallback(WriteCompleteCallback &amp;&amp; cb) : void</text><ellipse cx="5417" cy="2445.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5426" y="2448.6714">name() const : const std::string &amp;</text><ellipse cx="5417" cy="2458.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5426" y="2461.4761">ipPort() const : std::string</text><ellipse cx="5417" cy="2471.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5426" y="2474.2808">address() const : const InetAddress &amp;</text><ellipse cx="5417" cy="2483.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5426" y="2487.0854">getLoop() const : EventLoop *</text><ellipse cx="5417" cy="2496.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="5426" y="2499.8901">getIoLoops() const : std::vector&lt;EventLoop *&gt;</text><ellipse cx="5417" cy="2509.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="5426" y="2512.6948">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="5417" cy="2522.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="959" x="5426" y="2525.4995">enableSSL(const std::string &amp; certPath, const std::string &amp; keyPath, bool useOldTLS = false, const std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; &amp; sslConfCmds = =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="5426" y="2538.3042">{}, const std::string &amp; caPath = "") : void</text><ellipse cx="5417" cy="2547.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="5426" y="2551.1089">enableSSL(TLSPolicyPtr policy) : void</text><!--MD5=[c46e7ecb948f37b05c381498f4a77efd]
class C_0002061035340998974559--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="150.4375" id="C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.5;" width="591" x="4394" y="2833.5"/><ellipse cx="4617.25" cy="2849.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4620.2188,2855.1406 Q4619.6406,2855.4375 4619,2855.5781 Q4618.3594,2855.7344 4617.6563,2855.7344 Q4615.1563,2855.7344 4613.8281,2854.0938 Q4612.5156,2852.4375 4612.5156,2849.3125 Q4612.5156,2846.1875 4613.8281,2844.5313 Q4615.1563,2842.875 4617.6563,2842.875 Q4618.3594,2842.875 4619,2843.0313 Q4619.6563,2843.1875 4620.2188,2843.4844 L4620.2188,2846.2031 Q4619.5938,2845.625 4619,2845.3594 Q4618.4063,2845.0781 4617.7813,2845.0781 Q4616.4375,2845.0781 4615.75,2846.1563 Q4615.0625,2847.2188 4615.0625,2849.3125 Q4615.0625,2851.4063 4615.75,2852.4844 Q4616.4375,2853.5469 4617.7813,2853.5469 Q4618.4063,2853.5469 4619,2853.2813 Q4619.5938,2853 4620.2188,2852.4219 L4620.2188,2855.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="4637.75" y="2853.6543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4395" x2="4984" y1="2865.5" y2="2865.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4395" x2="4984" y1="2873.5" y2="2873.5"/><ellipse cx="4405" cy="2884.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4414" y="2887.7104">EventLoopThreadPool() : void</text><ellipse cx="4405" cy="2897.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="4414" y="2900.5151">EventLoopThreadPool(size_t threadNum, const std::string &amp; name = "EventLoopThreadPool") : void</text><ellipse cx="4405" cy="2910.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="4414" y="2913.3198">start() : void</text><ellipse cx="4405" cy="2922.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="4414" y="2926.1245">wait() : void</text><ellipse cx="4405" cy="2935.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="4414" y="2938.9292">size() : size_t</text><ellipse cx="4405" cy="2948.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4414" y="2951.7339">getNextLoop() : EventLoop *</text><ellipse cx="4405" cy="2961.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4414" y="2964.5386">getLoop(size_t id) : EventLoop *</text><ellipse cx="4405" cy="2974.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="4414" y="2977.3433">getLoops() const : std::vector&lt;EventLoop *&gt;</text><!--MD5=[30a24a86207ab2bd070e7504d6a3d0fc]
class C_0001189407896771082466--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="73.6094" id="C_0001189407896771082466" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="6" y="351"/><ellipse cx="21" cy="367" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,372.6406 Q23.3906,372.9375 22.75,373.0781 Q22.1094,373.2344 21.4063,373.2344 Q18.9063,373.2344 17.5781,371.5938 Q16.2656,369.9375 16.2656,366.8125 Q16.2656,363.6875 17.5781,362.0313 Q18.9063,360.375 21.4063,360.375 Q22.1094,360.375 22.75,360.5313 Q23.4063,360.6875 23.9688,360.9844 L23.9688,363.7031 Q23.3438,363.125 22.75,362.8594 Q22.1563,362.5781 21.5313,362.5781 Q20.1875,362.5781 19.5,363.6563 Q18.8125,364.7188 18.8125,366.8125 Q18.8125,368.9063 19.5,369.9844 Q20.1875,371.0469 21.5313,371.0469 Q22.1563,371.0469 22.75,370.7813 Q23.3438,370.5 23.9688,369.9219 L23.9688,372.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="35" y="371.1543">InetAddress::(anonymous_2577662)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="383" y2="383"/><ellipse cx="17" cy="394" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="397.2104">addr_ : struct sockaddr_in</text><ellipse cx="17" cy="406.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="410.0151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="416.6094" y2="416.6094"/><!--MD5=[094a28402c24830a9b549b01e4879f1e]
class C_0001489562721151066050--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="60.8047" id="C_0001489562721151066050" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="5135.5" y="1713.5"/><ellipse cx="5150.5" cy="1729.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5153.4688,1735.1406 Q5152.8906,1735.4375 5152.25,1735.5781 Q5151.6094,1735.7344 5150.9063,1735.7344 Q5148.4063,1735.7344 5147.0781,1734.0938 Q5145.7656,1732.4375 5145.7656,1729.3125 Q5145.7656,1726.1875 5147.0781,1724.5313 Q5148.4063,1722.875 5150.9063,1722.875 Q5151.6094,1722.875 5152.25,1723.0313 Q5152.9063,1723.1875 5153.4688,1723.4844 L5153.4688,1726.2031 Q5152.8438,1725.625 5152.25,1725.3594 Q5151.6563,1725.0781 5151.0313,1725.0781 Q5149.6875,1725.0781 5149,1726.1563 Q5148.3125,1727.2188 5148.3125,1729.3125 Q5148.3125,1731.4063 5149,1732.4844 Q5149.6875,1733.5469 5151.0313,1733.5469 Q5151.6563,1733.5469 5152.25,1733.2813 Q5152.8438,1733 5153.4688,1732.4219 L5153.4688,1735.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="5164.5" y="1733.6543">TcpServer::IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5136.5" x2="5322.5" y1="1745.5" y2="1745.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5136.5" x2="5322.5" y1="1753.5" y2="1753.5"/><ellipse cx="5146.5" cy="1764.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5155.5" y="1767.7104">IgnoreSigPipe() : void</text><!--MD5=[fc3c05f6fd02a2981c800a087bcbf634]
class C_0000184886692180276257--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="112.0234" id="C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.5;" width="638" x="6150.5" y="2852.5"/><ellipse cx="6437.25" cy="2868.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6440.2188,2874.1406 Q6439.6406,2874.4375 6439,2874.5781 Q6438.3594,2874.7344 6437.6563,2874.7344 Q6435.1563,2874.7344 6433.8281,2873.0938 Q6432.5156,2871.4375 6432.5156,2868.3125 Q6432.5156,2865.1875 6433.8281,2863.5313 Q6435.1563,2861.875 6437.6563,2861.875 Q6438.3594,2861.875 6439,2862.0313 Q6439.6563,2862.1875 6440.2188,2862.4844 L6440.2188,2865.2031 Q6439.5938,2864.625 6439,2864.3594 Q6438.4063,2864.0781 6437.7813,2864.0781 Q6436.4375,2864.0781 6435.75,2865.1563 Q6435.0625,2866.2188 6435.0625,2868.3125 Q6435.0625,2870.4063 6435.75,2871.4844 Q6436.4375,2872.5469 6437.7813,2872.5469 Q6438.4063,2872.5469 6439,2872.2813 Q6439.5938,2872 6440.2188,2871.4219 L6440.2188,2874.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="6457.75" y="2872.6543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6151.5" x2="6787.5" y1="2884.5" y2="2884.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6151.5" x2="6787.5" y1="2892.5" y2="2892.5"/><ellipse cx="6161.5" cy="2903.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="6170.5" y="2906.7104">Acceptor(EventLoop * loop, const InetAddress &amp; addr, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="6161.5" cy="2916.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6170.5" y="2919.5151">~Acceptor() : void</text><ellipse cx="6161.5" cy="2929.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6170.5" y="2932.3198">addr() const : const InetAddress &amp;</text><ellipse cx="6161.5" cy="2941.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="6170.5" y="2945.1245">setNewConnectionCallback(const NewConnectionCallback &amp; cb) : void</text><ellipse cx="6161.5" cy="2954.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6170.5" y="2957.9292">listen() : void</text><!--MD5=[84a2834e6b7314d5d45eceb518e6ef19]
class C_0000394452884449343416--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0000394452884449343416" style="stroke: #A80036; stroke-width: 1.5;" width="265" x="300" y="345"/><ellipse cx="424.75" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M427.7188,366.6406 Q427.1406,366.9375 426.5,367.0781 Q425.8594,367.2344 425.1563,367.2344 Q422.6563,367.2344 421.3281,365.5938 Q420.0156,363.9375 420.0156,360.8125 Q420.0156,357.6875 421.3281,356.0313 Q422.6563,354.375 425.1563,354.375 Q425.8594,354.375 426.5,354.5313 Q427.1563,354.6875 427.7188,354.9844 L427.7188,357.7031 Q427.0938,357.125 426.5,356.8594 Q425.9063,356.5781 425.2813,356.5781 Q423.9375,356.5781 423.25,357.6563 Q422.5625,358.7188 422.5625,360.8125 Q422.5625,362.9063 423.25,363.9844 Q423.9375,365.0469 425.2813,365.0469 Q425.9063,365.0469 426.5,364.7813 Q427.0938,364.5 427.7188,363.9219 L427.7188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="7" x="445.25" y="365.1543">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="301" x2="564" y1="377" y2="377"/><ellipse cx="311" cy="388" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="320" y="391.2104">str_ : const char *</text><ellipse cx="311" cy="400.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="320" y="404.0151">len_ : const unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="301" x2="564" y1="410.6094" y2="410.6094"/><ellipse cx="311" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="320" y="424.8198">T(const char * str, unsigned int len) : void</text><!--MD5=[e5f6bdfebd8f426048fb51566a972630]
class C_0002026475275429760163--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="176.0469" id="C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="6725.5" y="5164"/><ellipse cx="6988.25" cy="5180" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6991.2188,5185.6406 Q6990.6406,5185.9375 6990,5186.0781 Q6989.3594,5186.2344 6988.6563,5186.2344 Q6986.1563,5186.2344 6984.8281,5184.5938 Q6983.5156,5182.9375 6983.5156,5179.8125 Q6983.5156,5176.6875 6984.8281,5175.0313 Q6986.1563,5173.375 6988.6563,5173.375 Q6989.3594,5173.375 6990,5173.5313 Q6990.6563,5173.6875 6991.2188,5173.9844 L6991.2188,5176.7031 Q6990.5938,5176.125 6990,5175.8594 Q6989.4063,5175.5781 6988.7813,5175.5781 Q6987.4375,5175.5781 6986.75,5176.6563 Q6986.0625,5177.7188 6986.0625,5179.8125 Q6986.0625,5181.9063 6986.75,5182.9844 Q6987.4375,5184.0469 6988.7813,5184.0469 Q6989.4063,5184.0469 6990,5183.7813 Q6990.5938,5183.5 6991.2188,5182.9219 L6991.2188,5185.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="7008.75" y="5184.1543">Timer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6726.5" x2="7292.5" y1="5196" y2="5196"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6726.5" x2="7292.5" y1="5204" y2="5204"/><ellipse cx="6736.5" cy="5215" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="6745.5" y="5218.2104">Timer(const TimerCallback &amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="6736.5" cy="5227.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="6745.5" y="5231.0151">Timer(TimerCallback &amp;&amp; cb, const TimePoint &amp; when, const TimeInterval &amp; interval) : void</text><ellipse cx="6736.5" cy="5240.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="6745.5" y="5243.8198">~Timer() : void</text><ellipse cx="6736.5" cy="5253.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="6745.5" y="5256.6245">run() const : void</text><ellipse cx="6736.5" cy="5266.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="6745.5" y="5269.4292">restart(const TimePoint &amp; now) : void</text><ellipse cx="6736.5" cy="5279.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="6745.5" y="5282.2339">operator&lt;(const Timer &amp; t) const : bool</text><ellipse cx="6736.5" cy="5291.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="6745.5" y="5295.0386">operator&gt;(const Timer &amp; t) const : bool</text><ellipse cx="6736.5" cy="5304.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="6745.5" y="5307.8433">when() const : const TimePoint &amp;</text><ellipse cx="6736.5" cy="5317.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="6745.5" y="5320.6479">isRepeat() : bool</text><ellipse cx="6736.5" cy="5330.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6745.5" y="5333.4526">id() : TimerId</text><!--MD5=[82d8423748ae2360b0b11ef7f33d0386]
class C_0000157340721173102239--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="60.8047" id="C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.5;" width="386" x="7023.5" y="4863"/><ellipse cx="7155.75" cy="4879" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7158.7188,4884.6406 Q7158.1406,4884.9375 7157.5,4885.0781 Q7156.8594,4885.2344 7156.1563,4885.2344 Q7153.6563,4885.2344 7152.3281,4883.5938 Q7151.0156,4881.9375 7151.0156,4878.8125 Q7151.0156,4875.6875 7152.3281,4874.0313 Q7153.6563,4872.375 7156.1563,4872.375 Q7156.8594,4872.375 7157.5,4872.5313 Q7158.1563,4872.6875 7158.7188,4872.9844 L7158.7188,4875.7031 Q7158.0938,4875.125 7157.5,4874.8594 Q7156.9063,4874.5781 7156.2813,4874.5781 Q7154.9375,4874.5781 7154.25,4875.6563 Q7153.5625,4876.7188 7153.5625,4878.8125 Q7153.5625,4880.9063 7154.25,4881.9844 Q7154.9375,4883.0469 7156.2813,4883.0469 Q7156.9063,4883.0469 7157.5,4882.7813 Q7158.0938,4882.5 7158.7188,4881.9219 L7158.7188,4884.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="7176.25" y="4883.1543">TimerPtrComparer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7024.5" x2="7408.5" y1="4895" y2="4895"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7024.5" x2="7408.5" y1="4903" y2="4903"/><ellipse cx="7034.5" cy="4914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="7043.5" y="4917.2104">operator()(const TimerPtr &amp; x, const TimerPtr &amp; y) const : bool</text><!--MD5=[126bacd0ed15124482552b070b9a279f]
class C_0000026148367911088234--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="86.4141" id="C_0000026148367911088234" style="stroke: #A80036; stroke-width: 1.5;" width="186" x="600.5" y="345"/><ellipse cx="653.25" cy="361" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M656.2188,366.6406 Q655.6406,366.9375 655,367.0781 Q654.3594,367.2344 653.6563,367.2344 Q651.1563,367.2344 649.8281,365.5938 Q648.5156,363.9375 648.5156,360.8125 Q648.5156,357.6875 649.8281,356.0313 Q651.1563,354.375 653.6563,354.375 Q654.3594,354.375 655,354.5313 Q655.6563,354.6875 656.2188,354.9844 L656.2188,357.7031 Q655.5938,357.125 655,356.8594 Q654.4063,356.5781 653.7813,356.5781 Q652.4375,356.5781 651.75,357.6563 Q651.0625,358.7188 651.0625,360.8125 Q651.0625,362.9063 651.75,363.9844 Q652.4375,365.0469 653.7813,365.0469 Q654.4063,365.0469 655,364.7813 Q655.5938,364.5 656.2188,363.9219 L656.2188,366.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="673.75" y="365.1543">ScopeExit</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="780.5" y="342"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="781.5" y="354.1387">F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="601.5" x2="785.5" y1="377" y2="377"/><ellipse cx="611.5" cy="388" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="620.5" y="391.2104">f_ : F</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="601.5" x2="785.5" y1="397.8047" y2="397.8047"/><ellipse cx="611.5" cy="408.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="620.5" y="412.0151">ScopeExit&lt;F&gt;(F &amp;&amp; f) : void</text><ellipse cx="611.5" cy="421.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="620.5" y="424.8198">~ScopeExit&lt;F&gt;() : void</text><!--MD5=[7fc680fc6c4ec330c49d43facfdda2ad]
class C_0001271167815253259069--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="73.6094" id="C_0001271167815253259069" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="6" y="987.5"/><ellipse cx="21" cy="1003.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M23.9688,1009.1406 Q23.3906,1009.4375 22.75,1009.5781 Q22.1094,1009.7344 21.4063,1009.7344 Q18.9063,1009.7344 17.5781,1008.0938 Q16.2656,1006.4375 16.2656,1003.3125 Q16.2656,1000.1875 17.5781,998.5313 Q18.9063,996.875 21.4063,996.875 Q22.1094,996.875 22.75,997.0313 Q23.4063,997.1875 23.9688,997.4844 L23.9688,1000.2031 Q23.3438,999.625 22.75,999.3594 Q22.1563,999.0781 21.5313,999.0781 Q20.1875,999.0781 19.5,1000.1563 Q18.8125,1001.2188 18.8125,1003.3125 Q18.8125,1005.4063 19.5,1006.4844 Q20.1875,1007.5469 21.5313,1007.5469 Q22.1563,1007.5469 22.75,1007.2813 Q23.3438,1007 23.9688,1006.4219 L23.9688,1009.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="227" x="35" y="1007.6543">InetAddress::(anonymous_1207950)</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1019.5" y2="1019.5"/><ellipse cx="17" cy="1030.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="1033.7104">addr_ : struct sockaddr_in</text><ellipse cx="17" cy="1043.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="1046.5151">addr6_ : struct sockaddr_in6</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="264" y1="1053.1094" y2="1053.1094"/><!--MD5=[444dfca0343d6713fbd9f41cda0280b0]
class C_0000630185754256426097--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="137.6328" id="C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="2971.5" y="955.5"/><ellipse cx="3272.25" cy="971.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3275.2188,977.1406 Q3274.6406,977.4375 3274,977.5781 Q3273.3594,977.7344 3272.6563,977.7344 Q3270.1563,977.7344 3268.8281,976.0938 Q3267.5156,974.4375 3267.5156,971.3125 Q3267.5156,968.1875 3268.8281,966.5313 Q3270.1563,964.875 3272.6563,964.875 Q3273.3594,964.875 3274,965.0313 Q3274.6563,965.1875 3275.2188,965.4844 L3275.2188,968.2031 Q3274.5938,967.625 3274,967.3594 Q3273.4063,967.0781 3272.7813,967.0781 Q3271.4375,967.0781 3270.75,968.1563 Q3270.0625,969.2188 3270.0625,971.3125 Q3270.0625,973.4063 3270.75,974.4844 Q3271.4375,975.5469 3272.7813,975.5469 Q3273.4063,975.5469 3274,975.2813 Q3274.5938,975 3275.2188,974.4219 L3275.2188,977.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="3292.75" y="975.6543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2972.5" x2="3680.5" y1="987.5" y2="987.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2972.5" x2="3680.5" y1="995.5" y2="995.5"/><ellipse cx="2982.5" cy="1006.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="287" x="2991.5" y="1009.7104">output(const char * msg, const uint64_t len) : void</text><ellipse cx="2982.5" cy="1019.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2991.5" y="1022.5151">flush() : void</text><ellipse cx="2982.5" cy="1032.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2991.5" y="1035.3198">startLogging() : void</text><ellipse cx="2982.5" cy="1044.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2991.5" y="1048.1245">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="2982.5" cy="1057.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="2991.5" y="1060.9292">setFileName(const std::string &amp; baseName, const std::string &amp; extName = ".log", const std::string &amp; path = "./") : void</text><ellipse cx="2982.5" cy="1070.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="2991.5" y="1073.7339">~AsyncFileLogger() : void</text><ellipse cx="2982.5" cy="1083.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2991.5" y="1086.5386">AsyncFileLogger() : void</text><!--MD5=[d6dc5f302a37b6f3cec78b5e6a6182c8]
class C_0001453238540802541239--><rect fill="#FEFECE" filter="url(#f185g535qk8xh5)" height="124.8281" id="C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.5;" width="667" x="2944" y="325.5"/><ellipse cx="3187.25" cy="341.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3190.2188,347.1406 Q3189.6406,347.4375 3189,347.5781 Q3188.3594,347.7344 3187.6563,347.7344 Q3185.1563,347.7344 3183.8281,346.0938 Q3182.5156,344.4375 3182.5156,341.3125 Q3182.5156,338.1875 3183.8281,336.5313 Q3185.1563,334.875 3187.6563,334.875 Q3188.3594,334.875 3189,335.0313 Q3189.6563,335.1875 3190.2188,335.4844 L3190.2188,338.2031 Q3189.5938,337.625 3189,337.3594 Q3188.4063,337.0781 3187.7813,337.0781 Q3186.4375,337.0781 3185.75,338.1563 Q3185.0625,339.2188 3185.0625,341.3125 Q3185.0625,343.4063 3185.75,344.4844 Q3186.4375,345.5469 3187.7813,345.5469 Q3188.4063,345.5469 3189,345.2813 Q3189.5938,345 3190.2188,344.4219 L3190.2188,347.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="3207.75" y="345.6543">AsyncFileLogger::LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2945" x2="3610" y1="357.5" y2="357.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2945" x2="3610" y1="365.5" y2="365.5"/><ellipse cx="2955" cy="376.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="641" x="2964" y="379.7104">LoggerFile(const std::string &amp; filePath, const std::string &amp; fileBaseName, const std::string &amp; fileExtName) : void</text><ellipse cx="2955" cy="389.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2964" y="392.5151">~LoggerFile() : void</text><ellipse cx="2955" cy="402.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2964" y="405.3198">writeLog(const StringPtr buf) : void</text><ellipse cx="2955" cy="414.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2964" y="418.1245">getLength() : uint64_t</text><ellipse cx="2955" cy="427.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2964" y="430.9292">operator bool() const : bool</text><ellipse cx="2955" cy="440.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2964" y="443.7339">flush() : void</text><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M872.2,138.3 C866.12,150.34 860.79,163.23 857.5,176 C840.94,240.35 870.98,316.27 891.24,357.21 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="878.47,126.57,872.1129,129.974,872.8099,137.1513,879.1671,133.7473,878.47,126.57" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="863.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="870.5" y="189.0669">secret</text><!--MD5=[e537509b92e0e7426cd6abf89c64e5b8]
reverse link C_0000195316585713148470 to C_0000080756732781028581--><path d="M914.41,139.85 C914.86,151.84 915.26,164.31 915.5,176 C916.82,240.69 912.52,316.48 909.72,357.31 " fill="none" id="C_0000195316585713148470&lt;-C_0000080756732781028581-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="913.88,126.59,910.1206,132.7436,914.3549,138.5806,918.1143,132.427,913.88,126.59" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="922.5" cy="185.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="929.5" y="189.0669">prev</text><!--MD5=[b2e76ea4b8c644702caa587b6d3ae354]
reverse link C_0001159823987743494688 to C_0000111393647775817392--><path d="M3656.86,78.54 C3383.87,81.11 2469.63,95.65 2189.5,176 C2147.26,188.12 2128.57,187.62 2102.5,223 C1993.31,371.17 2029.4,446.95 2031.5,631 C2041.05,1467.56 2070.35,2476.7 2080.22,2801.42 " fill="none" id="C_0001159823987743494688&lt;-C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.17,71.53,3677.23,78.36,3657.29,85.53,3657.17,71.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[da180db6577d3a84c756084a157c0416]
link C_0000510041652600390686 to C_0000111393647775817392--><path d="M1871.47,2417.06 C1898.78,2480.22 1976.28,2659.49 2029.61,2782.85 " fill="none" id="C_0000510041652600390686-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2036.11,2780.24,2037.62,2801.38,2023.26,2785.8,2036.11,2780.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e01f16a0f51527085adfe2276ef541eb]
link C_0001754247125147083756 to C_0000111393647775817392--><path d="M2118.86,631.16 C2117.56,640.42 2116.23,651.19 2115.5,661 C2090.54,996.57 2107.53,1081.54 2102.5,1418 C2094.94,1923.11 2087.86,2524.6 2084.92,2781.3 " fill="none" id="C_0001754247125147083756-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2091.92,2781.47,2084.69,2801.39,2077.92,2781.31,2091.92,2781.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d62837b6556dbd4f5c507a2c24c3b1b]
reverse link C_0001159823987743494688 to C_0001754247125147083756--><path d="M3657,77.57 C3361.86,76.65 2319.17,80.26 2209.5,176 C2087.14,282.81 2108.26,510.05 2118.73,582.97 " fill="none" id="C_0001159823987743494688&lt;-C_0001754247125147083756" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.36,70.57,3677.34,77.64,3657.31,84.57,3657.36,70.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[722fe75a43a103972c76f8b826b40c4b]
link C_0001042478360162272930 to C_0000111393647775817392--><path d="M2205.6,1466.05 C2205.83,1585.82 2203.65,2149.13 2145.5,2605 C2138.04,2663.48 2125.55,2727.54 2113.72,2781.6 " fill="none" id="C_0001042478360162272930-&gt;C_0000111393647775817392" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2120.49,2783.4,2109.32,2801.41,2106.83,2780.37,2120.49,2783.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d10e541fb6ff72b95dec7f1358ade57d]
reverse link C_0001159823987743494688 to C_0001042478360162272930--><path d="M3657.32,80.81 C3377.03,91.7 2423.97,134.96 2322.5,223 C2180.74,346.01 2301.43,465.18 2213.5,631 C2205.23,646.59 2193.67,644.47 2187.5,661 C2074.57,963.73 2134.84,1069.21 2187.5,1388 C2189.16,1398.07 2192.49,1408.79 2195.84,1417.94 " fill="none" id="C_0001159823987743494688&lt;-C_0001042478360162272930" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.2,73.81,3677.46,80.04,3657.74,87.8,3657.2,73.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[569e785739d040ad41a2d6baca0a0e75]
reverse link C_0001930690020065325250 to C_0000510041652600390686--><path d="M1657.86,1928.06 C1727.17,2085.98 1820.81,2299.29 1851.39,2368.96 " fill="none" id="C_0001930690020065325250&lt;-C_0000510041652600390686" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1652.49,1915.84,1651.2415,1922.9422,1657.3171,1926.8263,1658.5657,1919.7241,1652.49,1915.84" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1773.5" y="2107.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="44" x="1783.5" y="2114.5669">buffer_</text><!--MD5=[a812f701c2acb97255aa5aee9e1ad3ef]
reverse link C_0001159823987743494688 to C_0001930690020065325250--><path d="M3656.81,77.48 C3335.44,75.99 2120.34,77 1983.5,176 C1837.66,281.51 1960.81,423.77 1835.5,553 C1750.67,640.48 1650.86,559.46 1583.5,661 C1487.51,805.7 1527.03,1305.7 1556.4,1572.36 " fill="none" id="C_0001159823987743494688&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.13,70.48,3677.1,77.59,3657.06,84.48,3657.13,70.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b07c5dc99de1fec75297894171ba3abd]
link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1430.38,508.21 C1442.78,707.33 1472.37,1119.89 1522.5,1466 C1527.27,1498.95 1533.38,1533.91 1539.79,1567.5 " fill="none" id="C_0002053752992472264214-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1540.73,1572.45,1542.9894,1562.8638,1539.8017,1567.5369,1535.1285,1564.3492,1540.73,1572.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ad4d98db2210cb2d6b40154204a4f22b]
reverse link C_0002053752992472264214 to C_0001930690020065325250--><path d="M1377.68,520.84 C1364.55,564.85 1352.03,614.52 1345.5,661 C1300.53,980.97 1253.28,1078.33 1345.5,1388 C1364.78,1452.74 1400.04,1516.68 1437.35,1572.07 " fill="none" id="C_0002053752992472264214&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1381.49,508.28,1375.9216,512.8618,1378.0092,519.7641,1383.5776,515.1823,1381.49,508.28" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1351.5,1020.0664,1355.5,1024.0664,1351.5,1028.0664,1347.5,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1358.5" y="1029.0669">logStream_</text><!--MD5=[4aaf5dc1b52e23d6ae45586265848f09]
reverse link C_0002053752992472264214 to C_0002032009232244826154--><path d="M1699.67,515.76 C1754.54,554.29 1804.91,602.36 1836.5,661 C2117.3,1182.16 2010.29,1444.35 1785.5,1992 C1778.91,2008.06 1768.34,2006.52 1760.5,2022 C1717.89,2106.15 1720.92,2134.37 1709.5,2228 C1691.75,2373.59 1684.35,2413.51 1709.5,2558 C1760.03,2848.3 1763.27,2941.49 1933.5,3182 C2232.9,3605 2718.4,3961.2 3051.82,4174.84 " fill="none" id="C_0002053752992472264214&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1688.64,508.18,1691.3219,514.8738,1698.5323,514.9727,1695.8504,508.2789,1688.64,508.18" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1723.5,2592.0664,1727.5,2596.0664,1723.5,2600.0664,1719.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1730.5" y="2601.0669">date_</text><!--MD5=[28c6baa8f6664e220c32dfc2bda9d7fb]
reverse link C_0002053752992472264214 to C_0000716430590791918928--><path d="M1479.59,513.01 C1544.78,657.13 1648.85,887.2 1691.41,981.3 " fill="none" id="C_0002053752992472264214&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1477.48,508.34,1477.5371,518.1887,1479.5372,512.8972,1484.8287,514.8972,1477.48,508.34" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1539.5" cy="607.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="1546.5" y="611.5669">«friend»</text><!--MD5=[8071bc809083cbf96ba263c136745b01]
reverse link C_0001159823987743494688 to C_0002053752992472264214--><path d="M3657.07,77.81 C3347.16,77.68 2196.07,83.59 1845.5,176 C1768.27,196.36 1688.66,231.81 1619.68,267.92 " fill="none" id="C_0001159823987743494688&lt;-C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.09,70.81,3677.08,77.82,3657.07,84.81,3657.09,70.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2546ce8b172ab3415fe98599ef34be58]
link C_0002131283840621188296 to C_0002053752992472264214--><path d="M1295.69,146.19 C1312.58,178.01 1333.28,217.02 1353.07,254.29 " fill="none" id="C_0002131283840621188296-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1356.5536" cy="260.8668" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1352.7972" x2="1360.31" y1="253.8035" y2="267.93"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1363.6168" x2="1349.4904" y1="257.1104" y2="264.6232"/><!--MD5=[93922583ef61aedd7e4cac59826dbbbd]
link C_0000979080797342806546 to C_0002053752992472264214--><path d="M1500.18,126.62 C1490.13,160.74 1476.17,208.14 1462.92,253.16 " fill="none" id="C_0000979080797342806546-&gt;C_0002053752992472264214" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1460.901" cy="259.9962" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1463.1621" x2="1458.64" y1="252.3223" y2="267.67"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1468.5749" x2="1453.2272" y1="262.2572" y2="257.7351"/><!--MD5=[1e053e636c9893712341ad3f59f5b138]
link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1714.15,1067.74 C1719.87,1146.96 1727.29,1322.76 1695.5,1466 C1688.03,1499.68 1676.56,1534.41 1663.66,1567.4 " fill="none" id="C_0000716430590791918928-&gt;C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1661.75,1572.26,1668.7626,1565.3445,1663.5774,1567.6059,1661.316,1562.4207,1661.75,1572.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[25908ad88223befeff157200ca23ae17]
reverse link C_0000716430590791918928 to C_0001930690020065325250--><path d="M1691.23,1079.87 C1665.54,1154.88 1620.85,1294.82 1599.5,1418 C1590.88,1467.73 1585.6,1522.29 1582.37,1572.26 " fill="none" id="C_0000716430590791918928&lt;-C_0001930690020065325250" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1695.48,1067.52,1689.7466,1071.8936,1691.5787,1078.8681,1697.312,1074.4945,1695.48,1067.52" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1602.5" y="1439.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="1612.5" y="1446.5669">logStream_</text><!--MD5=[73207211bf18234307f8ec573e9589d7]
reverse link C_0001159823987743494688 to C_0000716430590791918928--><path d="M3656.86,78.54 C3383.87,81.11 2469.63,95.65 2189.5,176 C2147.26,188.12 2132.95,191.31 2102.5,223 C1986.31,343.93 1785.86,833.93 1727.12,981.35 " fill="none" id="C_0001159823987743494688&lt;-C_0000716430590791918928" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.17,71.53,3677.23,78.36,3657.29,85.53,3657.17,71.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8315b477dde77bfc6033f56cacdc3167]
reverse link C_0001159823987743494688 to C_0000684873245997977544--><path d="M3656.95,79.22 C3453.95,83.44 2911.54,101.55 2750.5,176 C2675.5,210.67 2610.35,281.81 2571.04,331.87 " fill="none" id="C_0001159823987743494688&lt;-C_0000684873245997977544" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.06,72.22,3677.2,78.82,3657.34,86.21,3657.06,72.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6b13bc5025dcbdb384c24a1947ba550]
reverse link C_0001159823987743494688 to C_0000912667184903365399--><path d="M3657.05,81.17 C3447.87,90.46 2883.09,120.46 2821.5,176 C2750.29,240.22 2776.5,291.11 2776.5,387 C2776.5,387 2776.5,387 2776.5,2111 C2776.5,3033.34 2608.57,3253.91 2560.5,4175 C2550.49,4366.74 2520.06,4419.31 2560.5,4607 C2578.05,4688.48 2620.82,4774.72 2652.32,4830.82 " fill="none" id="C_0001159823987743494688&lt;-C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657.02,74.17,3677.31,80.29,3657.63,88.16,3657.02,74.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ffc230e37c5c4ce1f573c198139c7155]
link C_0000223701637084171141 to C_0000912667184903365399--><path d="M2689.5,4447.47 C2689.5,4537.17 2689.5,4714.22 2689.5,4815.88 " fill="none" id="C_0000223701637084171141-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="2689.5" cy="4822.92" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2689.5" x2="2689.5" y1="4814.92" y2="4830.92"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="2697.5" x2="2681.5" y1="4822.92" y2="4822.92"/><!--MD5=[f80622055e9d57665d4031fadfdf3e69]
link C_0002185746167032660910 to C_0000912667184903365399--><path d="M4222.41,4415.07 C4172.96,4459.28 4057.73,4556.03 3943.5,4607 C3552.35,4781.54 3043.26,4854.81 2812.63,4880.58 " fill="none" id="C_0002185746167032660910-&gt;C_0000912667184903365399" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2813.16,4887.56,2792.52,4882.78,2811.64,4873.65,2813.16,4887.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8c02102d6511a7ace2a4c79fad06f181]
link C_0001390130774830223499 to C_0002032009232244826154--><path d="M4765.41,3928.76 C4569.33,3976.19 4292.75,4048.01 4055.5,4128 C4014.2,4141.92 3971.75,4157.18 3929.3,4173.1 " fill="none" id="C_0001390130774830223499-&gt;C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3924.39,4174.94,3934.2215,4175.5252,3929.0716,4173.1844,3931.4125,4168.0346,3924.39,4174.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4765.3,3970.69 C4687.55,4018.32 4618.28,4084.97 4602.5,4175 C4565.72,4384.82 4510.13,4471.2 4619.5,4654 C4628.31,4668.73 4638.11,4683.37 4648.52,4697.73 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4651.47,4701.77,4649.3852,4692.1443,4648.5181,4697.7344,4642.9281,4696.8673,4651.47,4701.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4765.28,4045.7 C4727.61,4083.7 4694.22,4127.07 4672.5,4175 C4593.23,4349.87 4623.75,4421.29 4672.5,4607 C4678.83,4631.12 4687.72,4655.35 4698.09,4678.95 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4700.19,4683.66,4700.1843,4673.8111,4698.1567,4679.0921,4692.8757,4677.0645,4700.19,4683.66" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4675.5" y="4388.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="4685.5" y="4395.5669">activeChannels_</text><!--MD5=[54cfe961900d0cb4f81e934e30c827d8]
link C_0001390130774830223499 to C_0000764690828649606524--><path d="M4879.14,4098.19 C4868.07,4123.42 4858.49,4149.3 4851.5,4175 C4806.66,4339.88 4804.69,4533.98 4812.53,4678.7 " fill="none" id="C_0001390130774830223499-&gt;C_0000764690828649606524-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4812.82,4683.83,4816.3263,4674.6264,4812.549,4678.8374,4808.338,4675.0601,4812.82,4683.83" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4854.5" y="4388.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="4864.5" y="4395.5669">currentActiveChannel_</text><!--MD5=[aee7cf1468d07b8484afb650b1f90233]
reverse link C_0001390130774830223499 to C_0000764690828649606524--><path d="M5286.09,4025.89 C5335.15,4067.72 5379.64,4117.58 5407.5,4175 C5491.3,4347.75 5508.61,4443.78 5407.5,4607 C5322.51,4744.19 5149.65,4817.56 5015.73,4855.4 " fill="none" id="C_0001390130774830223499&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5275.89,4017.36,5277.925,4024.278,5285.0935,4025.0604,5283.0585,4018.1423,5275.89,4017.36" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5479.5" y="4388.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="5489.5" y="4395.5669">wakeupChannelPtr_</text><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M5015.59,4883.96 C5203.13,4864.3 5486.72,4801.86 5623.5,4607 C5678.65,4528.42 5673.78,4256.78 5623.5,4175 C5548.35,4052.77 5407.38,3977.72 5280.63,3932.66 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5275.74,3930.94,5282.9042,3937.6983,5280.4571,3932.5981,5285.5572,3930.151,5275.74,3930.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8dd70dad05b496c04f8be08444697dd2]
link C_0000764690828649606524 to C_0001390130774830223499--><path d="M5015.89,4861.7 C5245.16,4818.15 5615.33,4729.95 5668.5,4607 C5753.37,4410.74 5799.29,4249.74 5623.5,4128 C5519.27,4055.82 5391.64,3997.62 5280.68,3954.89 " fill="none" id="C_0000764690828649606524-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.74,3953,5282.7185,3959.9499,5280.4104,3954.7853,5285.575,3952.4773,5275.74,3953" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5746.5" y="4388.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5756.5" y="4395.5669">loop_</text><!--MD5=[dcfdffb222016d6543dc2530ee2f8c1f]
reverse link C_0000764690828649606524 to C_0001390130774830223499--><path d="M4647.05,4789.57 C4581.88,4743.07 4516.13,4681.65 4480.5,4607 C4397.79,4433.73 4383.72,4340.82 4480.5,4175 C4542.71,4068.41 4657.47,3996.13 4765.26,3948.79 " fill="none" id="C_0000764690828649606524&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4651.34,4792.61,4646.2963,4784.1506,4647.256,4789.7255,4641.6811,4790.6851,4651.34,4792.61" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4486.5" cy="4391.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4493.5" y="4395.5669">«friend»</text><!--MD5=[e441aca191d0231cd421fed106ad821f]
reverse link C_0001390130774830223499 to C_0000300034150397884642--><path d="M5162.96,4110.35 C5165.27,4116.24 5167.45,4122.13 5169.5,4128 C5190.86,4189.22 5200.53,4262.48 5204.89,4315.95 " fill="none" id="C_0001390130774830223499&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5158.07,4098.25,5156.6118,4105.3121,5162.5699,4109.3743,5164.0281,4102.3122,5158.07,4098.25" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5176.5" y="4134.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="5186.5" y="4141.0669">poller_</text><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5143.32,4315.91 C5106.93,4269.98 5064.58,4207.9 5042.5,4145 C5037.8,4131.62 5033.9,4117.65 5030.66,4103.42 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5029.5,4098.16,5027.5476,4107.8134,5030.5847,4103.0409,5035.3571,4106.078,5029.5,4098.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b1d1e856daf51b0c53149f9bf166005]
link C_0000300034150397884642 to C_0001390130774830223499--><path d="M5158.59,4315.83 C5129.09,4268.75 5093.35,4205.5 5071.5,4145 C5066.61,4131.46 5062.17,4117.37 5058.14,4103.03 " fill="none" id="C_0000300034150397884642-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5056.78,4098.16,5055.3377,4107.9027,5058.1197,4102.9772,5063.0452,4105.7592,5056.78,4098.16" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5074.5" y="4134.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="5084.5" y="4141.0669">ownerLoop_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M4752.67,3939.41 C4532.49,3999.16 4251.51,4082.71 4218.5,4128 C4165.27,4201.04 4211.43,4317.32 4235.31,4366.65 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4765.42,3935.96,4758.5831,3933.6671,4753.8371,3939.0962,4760.6739,3941.3891,4765.42,3935.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4221.5" y="4134.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4231.5" y="4141.0669">funcs_</text><!--MD5=[6482784b4ef90209a4a2b72c0066bb44]
reverse link C_0001390130774830223499 to C_0002185746167032660910--><path d="M4752.34,3905.55 C4603.32,3938.92 4425.84,4003.43 4313.5,4128 C4251.14,4197.15 4245.81,4316.58 4246.56,4366.75 " fill="none" id="C_0001390130774830223499&lt;-C_0002185746167032660910-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4765.3,3902.71,4758.5823,3900.0884,4753.5787,3905.281,4760.2963,3907.9026,4765.3,3902.71" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4316.5" y="4134.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4326.5" y="4141.0669">funcsOnQuit_</text><!--MD5=[03ac716d75c7daea0b550fa656d96656]
reverse link C_0001390130774830223499 to C_0000607400095182694101--><path d="M5288.74,3944.91 C5650.65,4045.98 6290.05,4224.55 6638.85,4321.96 " fill="none" id="C_0001390130774830223499&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5275.99,3941.35,5280.6925,3946.8169,5287.5475,3944.5787,5282.845,3939.1119,5275.99,3941.35" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5954.5" y="4134.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="5964.5" y="4141.0669">timerQueue_</text><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M6680.33,4321.95 C6513.76,4266.82 6270.93,4188.64 6056.5,4128 C5793.93,4053.74 5490.74,3979.57 5280.49,3929.94 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5275.54,3928.77,5283.3885,3934.7199,5280.4078,3929.912,5285.2157,3926.9314,5275.54,3928.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d16c6d139b34373d9a8a173e0283a270]
link C_0000607400095182694101 to C_0001390130774830223499--><path d="M6696.14,4321.91 C6539.47,4265.95 6308.98,4186.63 6104.5,4128 C5825.67,4048.05 5501.58,3973.24 5280.92,3924.99 " fill="none" id="C_0000607400095182694101-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.72,3923.85,5283.6705,3929.6629,5280.6069,3924.9074,5285.3624,3921.8438,5275.72,3923.85" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6152.5,4132.0664,6156.5,4136.0664,6152.5,4140.0664,6148.5,4136.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6159.5" y="4141.0669">loop_</text><!--MD5=[497ff439d73338431b887735ed0067f3]
link C_0001390130774830223499 to C_0001390130774830223499--><path d="M5275.97,3830.45 C5297.26,3838.75 5310.5,3851.6 5310.5,3869 C5310.5,3885.04 5299.25,3897.22 5280.81,3905.52 " fill="none" id="C_0001390130774830223499-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.97,3907.55,5285.8164,3907.77,5280.5833,3905.6219,5282.7314,3900.3887,5275.97,3907.55" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5318.5" y="3866.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="5328.5" y="3873.5669">threadLocalLoopPtr_</text><!--MD5=[030600ef5dc3390cff7efad731cd8ea8]
reverse link C_0001159823987743494688 to C_0001390130774830223499--><path d="M3765.91,117.17 C3807.74,173.39 3876.5,281.82 3876.5,387 C3876.5,387 3876.5,387 3876.5,1443 C3876.5,1829.45 3675.64,2847.12 3868.5,3182 C3889.27,3218.07 3913.15,3208.73 3949.5,3229 C3974.16,3242.75 3988.82,3236.22 4005.5,3259 C4086.73,3369.9 3971.45,3460.01 4062.5,3563 C4110.42,3617.21 4498.17,3729.15 4765.42,3801.29 " fill="none" id="C_0001159823987743494688&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3760.24,121.28,3753.65,101.14,3771.36,112.77,3760.24,121.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3722.17,3467.09 C3703.8,3511.4 3689.2,3572.29 3724.5,3610 C3759.05,3646.91 4128.63,3631.69 4178.5,3640 C4376.72,3673.05 4595.67,3733.09 4760.6,3783.27 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4765.46,3784.75,4758.0153,3778.302,4760.6768,3783.2936,4755.6851,3785.9551,4765.46,3784.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6d2b32dd6b65fd4c72304c0367d3e03b]
link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3734.59,3467.08 C3725.41,3511.68 3721.8,3572.99 3757.5,3610 C3790.06,3643.75 4132.26,3632.17 4178.5,3640 C4376.63,3673.56 4595.58,3733.59 4760.54,3783.62 " fill="none" id="C_0001280612521485369958-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4765.41,3785.1,4757.9653,3778.652,4760.6268,3783.6436,4755.6351,3786.3051,4765.41,3785.1" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3760.5" y="3599.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3770.5" y="3606.0669">loop_</text><!--MD5=[45b8852572e72dfdaffedff2ffb6d4d8]
reverse link C_0001280612521485369958 to C_0001390130774830223499--><path d="M3764.71,3479.68 C3777.82,3524.3 3802.07,3579.86 3845.5,3610 C3906.54,3652.36 4105.36,3626.91 4178.5,3640 C4378.26,3675.76 4599.59,3736.55 4765.18,3786.38 " fill="none" id="C_0001280612521485369958&lt;-C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3761.22,3467.12,3758.9746,3473.9726,3764.4365,3478.6809,3766.6819,3471.8283,3761.22,3467.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3848.5" y="3599.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="3858.5" y="3606.0669">promiseForLoopPointer_</text><!--MD5=[2a8cb4ccf5ee7a3a9b30271845bdebd7]
reverse link C_0001159823987743494688 to C_0001280612521485369958--><path d="M3750.55,120.11 C3771.49,178.93 3805.5,289.48 3805.5,387 C3805.5,387 3805.5,387 3805.5,1443 C3805.5,1792.08 3789.56,1879.06 3779.5,2228 C3766.98,2662.22 3755.34,3186.28 3751.68,3354.91 " fill="none" id="C_0001159823987743494688&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3743.94,122.41,3743.64,101.23,3757.09,117.6,3743.94,122.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3d8ace9d75250684e78770d3f7e31c5e]
reverse link C_0000634031134969193198 to C_0001280612521485369958--><path d="M2668.98,2207.52 C2763.77,2302.99 2911.92,2453.84 3036.5,2588 C3288.65,2859.55 3349.66,2929.51 3589.5,3212 C3629.93,3259.62 3674.67,3314.85 3706.7,3354.86 " fill="none" id="C_0000634031134969193198&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2659.69,2198.17,2661.0767,2205.2465,2668.1423,2206.6882,2666.7555,2199.6117,2659.69,2198.17" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3055.5,2592.0664,3059.5,2596.0664,3055.5,2600.0664,3051.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="3062.5" y="2601.0669">loopThread_</text><!--MD5=[385a4c67cd7b36545277e121cac0d3df]
reverse link C_0000684873245997977544 to C_0000634031134969193198--><path d="M2579.94,461.09 C2612.38,513.91 2652.21,588.7 2669.5,661 C2790.08,1165.17 2654.18,1794.26 2596.18,2021.81 " fill="none" id="C_0000684873245997977544&lt;-C_0000634031134969193198" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2573.95,464.72,2569.26,444.06,2585.82,457.28,2573.95,464.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f5ea96e8c6fd0c463bb2ba9e6541207]
link C_0000300034150397884642 to C_0000764690828649606524--><path d="M5152.97,4466.12 C5110.6,4522.66 5050.01,4603.53 4992.96,4679.67 " fill="none" id="C_0000300034150397884642-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4989.9,4683.76,4998.5,4678.96,4992.9,4679.76,4992.1,4674.16,4989.9,4683.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[df65caa0db01fe1c00c9ad0bd4e7886a]
reverse link C_0001159823987743494688 to C_0000300034150397884642--><path d="M3733.51,121.37 C3729.71,286.32 3715.47,890.4 3699.5,1388 C3692.93,1592.59 3761.43,3071.65 3630.5,3229 C3591.46,3275.91 3534.65,3211.36 3496.5,3259 C3412.04,3364.46 3412.15,3457.46 3496.5,3563 C3555.67,3637.03 3610.74,3596.14 3704.5,3610 C3797.07,3623.68 4036.67,3607.72 4124.5,3640 C4447.4,3758.69 4439.63,3946.51 4748.5,4098 C4860.15,4152.76 4912.24,4108.77 5017.5,4175 C5074.76,4211.03 5124.92,4269.15 5159.44,4315.89 " fill="none" id="C_0001159823987743494688&lt;-C_0000300034150397884642" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3726.51,121.1,3733.97,101.26,3740.51,121.42,3726.51,121.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c6fae28fa9ff5d7f68f4068664152934]
link C_0000607400095182694101 to C_0002026475275429760163--><path d="M6871.6,4460.05 C6853.45,4588.29 6824.52,4873.46 6883.5,5103 C6888.69,5123.19 6898.71,5142.25 6910.92,5159.55 " fill="none" id="C_0000607400095182694101-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6914.07,5163.91,6912.0296,5154.2748,6911.1368,5159.8608,6905.5509,5158.9679,6914.07,5163.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ae0f529085bcded4ffc519094235bf7]
reverse link C_0000607400095182694101 to C_0002026475275429760163--><path d="M6886.25,4473.29 C6894.21,4633.75 6914.52,4985.8 6944.5,5103 C6949.68,5123.26 6957.35,5144.26 6965.62,5163.85 " fill="none" id="C_0000607400095182694101&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6885.61,4460.22,6881.9116,4466.4104,6886.2033,4472.2053,6889.9018,4466.0149,6885.61,4460.22" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6950.5,4889.0664,6954.5,4893.0664,6950.5,4897.0664,6946.5,4893.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="6957.5" y="4898.0669">timers_</text><!--MD5=[a963eb92d2e084432312c772061fe54a]
link C_0000607400095182694101 to C_0000764690828649606524--><path d="M6818.57,4460.14 C6756.55,4521.62 6656.64,4609.08 6551.5,4654 C6278.48,4770.64 5406.72,4849.1 5020.6,4878.99 " fill="none" id="C_0000607400095182694101-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5015.52,4879.38,5024.8017,4882.6739,5020.5051,4878.9943,5024.1847,4874.6977,5015.52,4879.38" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6587.5,4641.0664,6591.5,4645.0664,6587.5,4649.0664,6583.5,4645.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="6594.5" y="4650.0669">timerfdChannelPtr_</text><!--MD5=[94ff915feb725d4dab9cf4cca4f2b7b9]
reverse link C_0000607400095182694101 to C_0000157340721173102239--><path d="M6935.23,4471.02 C7010.76,4584.2 7146.2,4787.15 7196.75,4862.91 " fill="none" id="C_0000607400095182694101&lt;-C_0000157340721173102239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6927.89,4460.02,6927.8922,4467.2311,6934.5494,4470.0026,6934.5472,4462.7915,6927.89,4460.02" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7055.5,4641.0664,7059.5,4645.0664,7055.5,4649.0664,7051.5,4645.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="48" x="7062.5" y="4650.0669">timers_</text><!--MD5=[0d0eca32808ae85eeabfbc9a096e88cd]
reverse link C_0001159823987743494688 to C_0000607400095182694101--><path d="M3811.96,79.89 C4512.38,97.23 9726.5,231.53 9726.5,387 C9726.5,387 9726.5,387 9726.5,3870 C9726.5,4434.53 7733.92,3979.02 7204.5,4175 C7113.72,4208.6 7023.19,4272.43 6961.34,4321.85 " fill="none" id="C_0001159823987743494688&lt;-C_0000607400095182694101" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3811.7,86.89,3791.88,79.39,3812.05,72.89,3811.7,86.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e40199a876f7461fcfbffaf794d3f5b]
reverse link C_0001159823987743494688 to C_0000764690828649606524--><path d="M3657.44,82.99 C3478.46,95.93 3041.18,135.87 2926.5,223 C2862.08,271.94 2847.5,306.1 2847.5,387 C2847.5,387 2847.5,387 2847.5,3870 C2847.5,4034.06 2779.69,4486.03 2890.5,4607 C3008.89,4736.24 4190.65,4842.06 4651.16,4878.7 " fill="none" id="C_0001159823987743494688&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3657,76,3677.44,81.57,3657.99,89.96,3657,76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b6d636b367c7c8e45672c1799ad0e239]
reverse link C_0000684873245997977544 to C_0000295101274428145462--><path d="M2519.3,464.15 C2499.1,588.56 2459.03,835.44 2439.59,955.19 " fill="none" id="C_0000684873245997977544&lt;-C_0000295101274428145462" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2512.43,462.82,2522.54,444.2,2526.24,465.06,2512.43,462.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[71937ae761f89ce4d5c0645a62fc4977]
reverse link C_0001897340460211641725 to C_0000673025168912921705--><path d="M7239.89,4021.12 C7263.8,4136.27 7294.94,4286.19 7309.01,4353.95 " fill="none" id="C_0001897340460211641725&lt;-C_0000673025168912921705" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7237.23,4008.33,7234.5333,4015.0179,7239.6696,4020.0794,7242.3662,4013.3915,7237.23,4008.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M7586.22,1148 C7814.67,1217.58 8053.8,1326.31 8228.5,1496 C8418.32,1680.38 8417.1,1773.29 8507.5,2022 C8549.1,2136.45 8535.46,2471.83 8621.5,2558 C8666.46,2603.03 8717.43,2542.1 8761.5,2588 C8773.6,2600.6 8783.57,2614.84 8791.76,2630.14 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8794.24,2634.93,8793.6167,2625.1009,8791.9242,2630.4986,8786.5265,2628.8061,8794.24,2634.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6a425cf400968576d4dcd50935f0c914]
link C_0002230624932100089526 to C_0001289495020269537351--><path d="M7586.21,1188.27 C8038.78,1292.7 8546.18,1410.22 8571.5,1418 C8663.49,1446.28 8717.87,1417.47 8773.5,1496 C8837.15,1585.84 8832.64,2244.67 8824.29,2629.68 " fill="none" id="C_0002230624932100089526-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8824.18,2634.76,8828.3846,2625.8538,8824.2943,2629.7613,8820.3867,2625.6709,8824.18,2634.76" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8834.5,2105.5664,8838.5,2109.5664,8834.5,2113.5664,8830.5,2109.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="8841.5" y="2114.5669">recvMsgCallback_</text><!--MD5=[3427b8ada0e3011132406bbf51a19799]
link C_0002230624932100089526 to C_0001897340460211641725--><path d="M7586.17,1204.69 C7854.92,1268.63 8164.68,1337.31 8448.5,1388 C8620.08,1418.65 8703.25,1371.77 8825.5,1496 C9014.42,1687.99 9296.67,2324.29 9351.5,2588 C9531.43,3453.39 8064.31,3752.33 7460.44,3838.11 " fill="none" id="C_0002230624932100089526-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7455.14,3838.86,7464.6109,3841.5623,7460.0909,3838.1609,7463.4923,3833.6409,7455.14,3838.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[475fc265529b86f5b89a981b424e962c]
link C_0002230624932100089526 to C_0001390130774830223499--><path d="M6172.87,1383.37 C6167.08,1384.96 6161.28,1386.5 6155.5,1388 C5902.06,1453.51 5194.63,1342.63 4982.5,1496 C4659.86,1729.27 4120.69,2876.93 4376.5,3182 C4502.65,3332.45 4671.75,3121.1 4811.5,3259 C4909.41,3355.61 4825.7,3432.61 4869.5,3563 C4877.48,3586.76 4886.97,3611.02 4897.23,3634.96 " fill="none" id="C_0002230624932100089526-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4899.3,3639.75,4899.3943,3629.9016,4897.3132,3635.1617,4892.0531,3633.0805,4899.3,3639.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7cf3252f145f52c6ad0115ad3c523b41]
link C_0002230624932100089526 to C_0001660397537883119469--><path d="M7586.04,1363.98 C7625.69,1403.69 7660.65,1447.59 7688.5,1496 C7766.33,1631.3 7759.35,2074.04 7664.5,2198 C7642.68,2226.51 7614.29,2202.03 7589.5,2228 C7472.54,2350.5 7492.67,2420.99 7464.5,2588 C7463.24,2595.45 7459.83,2599.06 7464.5,2605 C7499.56,2649.56 7543.02,2601.14 7588.5,2635 C7662.9,2690.39 7708.44,2791.74 7730.75,2854 " fill="none" id="C_0002230624932100089526-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7732.45,2858.79,7733.2126,2848.9707,7730.7792,2854.0774,7725.6725,2851.644,7732.45,2858.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[034c16a8c2edc6fa2a6ffe7ba8418e5f]
link C_0002230624932100089526 to C_0002100370281243872283--><path d="M7586.29,1206.08 C7731.29,1274.42 7868.47,1368.05 7963.5,1496 C8240.69,1869.24 8295.48,2437.2 8304.44,2725.66 " fill="none" id="C_0002230624932100089526-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8304.6,2730.73,8308.3153,2721.6088,8304.4429,2725.7325,8300.3193,2721.8601,8304.6,2730.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7d2ce2e8b37834b1fb03da04894a7c85]
reverse link C_0002230624932100089526 to C_0002100370281243872283--><path d="M7598.56,1187.18 C7782.11,1257.02 7966.35,1356.07 8104.5,1496 C8346.32,1740.93 8190.71,1952.06 8431.5,2198 C8452.64,2219.59 8475.9,2202.76 8492.5,2228 C8580.54,2361.84 8506.5,2427.85 8510.5,2588 C8510.69,2595.55 8512.73,2597.78 8510.5,2605 C8497.07,2648.57 8474.99,2691.48 8450.16,2730.67 " fill="none" id="C_0002230624932100089526&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7586.19,1182.51,7590.3944,1188.3686,7597.4194,1186.7408,7593.215,1180.8823,7586.19,1182.51" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8437.5,2105.5664,8441.5,2109.5664,8437.5,2113.5664,8433.5,2109.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="8444.5" y="2114.5669">tlsPolicy_</text><!--MD5=[c68e74942c9e75d7a1d457e6ff6d95fd]
link C_0002230624932100089526 to C_0000434245188016003403--><path d="M7586.18,1159.89 C7987.72,1242.86 8423.19,1346.7 8487.5,1418 C8604.68,1547.92 8538.14,2032.37 8594.5,2198 C8594.84,2199 8645.98,2288.23 8678.72,2345.31 " fill="none" id="C_0002230624932100089526-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8681.24,2349.71,8680.2408,2339.912,8678.7562,2345.3705,8673.2977,2343.886,8681.24,2349.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c68e74942c9e75d7a1d457e6ff6d95fd]
link C_0002230624932100089526 to C_0000434245188016003403--><path d="M7586.26,1181.28 C8014.21,1277.72 8485.48,1388.59 8526.5,1418 C8559.77,1441.85 8561.37,1457.58 8575.5,1496 C8575.5,1496 8671.89,2160.34 8698.67,2344.93 " fill="none" id="C_0002230624932100089526-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8699.4,2349.99,8702.0755,2340.5115,8698.6869,2345.0411,8694.1573,2341.6525,8699.4,2349.99" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8652.5,1739.5664,8656.5,1743.5664,8652.5,1747.5664,8648.5,1743.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="8659.5" y="1748.5669">sslErrorCallback_</text><!--MD5=[e6b06091bb23409738e196d39773d40c]
link C_0002230624932100089526 to C_0000964465843177067305--><path d="M6172.87,1383.34 C6167.07,1384.95 6161.28,1386.5 6155.5,1388 C6009.53,1425.93 5614.17,1354.24 5477.5,1418 C5451.27,1430.24 5459.41,1453.1 5433.5,1466 C5370.55,1497.34 5165.81,1443.97 5118.5,1496 C4746.95,1904.62 5286.82,2636.16 5458.83,2848.32 " fill="none" id="C_0002230624932100089526-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5462.08,2852.32,5459.492,2842.8173,5458.92,2848.4451,5453.2922,2847.8732,5462.08,2852.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M7586.01,1016.11 C7608.32,1018.37 7621,1021.17 7621,1024.5 C7621,1027.57 7610.22,1030.19 7591.06,1032.35 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7586.01,1032.89,7595.3825,1035.916,7590.982,1032.3614,7594.5367,1027.9609,7586.01,1032.89" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7632,1020.0664,7636,1024.0664,7632,1028.0664,7628,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="7639" y="1029.0669">recvMsgCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M7586.27,996.7 C7688.47,1001.3 7758,1010.57 7758,1024.5 C7758,1038.2 7690.76,1047.39 7591.33,1052.07 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7586.27,1052.3,7595.4433,1055.8848,7591.2648,1052.0717,7595.0779,1047.8932,7586.27,1052.3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7769,1020.0664,7773,1024.0664,7769,1028.0664,7765,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="7776" y="1029.0669">connectionCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M7586.27,978.56 C7769.71,982.22 7912,997.54 7912,1024.5 C7912,1051.21 7772.34,1066.49 7591.37,1070.33 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7586.27,1070.44,7595.3484,1074.2587,7591.269,1070.3397,7595.188,1066.2603,7586.27,1070.44" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7923,1020.0664,7927,1024.0664,7923,1028.0664,7919,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="7930" y="1029.0669">closeCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M7586.15,962.17 C7826.94,963.57 8029,984.34 8029,1024.5 C8029,1064.36 7829.89,1085.13 7591.43,1086.79 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7586.15,1086.83,7595.1727,1090.7785,7591.1499,1086.8014,7595.127,1082.7786,7586.15,1086.83" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8040,1020.0664,8044,1024.0664,8040,1028.0664,8036,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="8047" y="1029.0669">writeCompleteCallback_</text><!--MD5=[d7544214aa2b1cf009e52f7e8b3bd7fe]
link C_0002230624932100089526 to C_0002230624932100089526--><path d="M7586.32,946.93 C7907.38,942.78 8205,968.64 8205,1024.5 C8205,1080.06 7910.57,1105.94 7591.49,1102.13 " fill="none" id="C_0002230624932100089526-&gt;C_0002230624932100089526-4" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7586.32,1102.07,7595.2619,1106.1982,7591.3195,1102.1414,7595.3762,1098.199,7586.32,1102.07" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8216,1020.0664,8220,1024.0664,8216,1028.0664,8212,1024.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="8223" y="1029.0669">highWaterMarkCallback_</text><!--MD5=[f31d6af3df8ec0838da9d6a34fa975ae]
reverse link C_0002230624932100089526 to C_0001156367011091191681--><path d="M6799.01,655.78 C6805.33,629.95 6815.77,605.33 6831.5,583 C6835.25,577.68 6859.94,566.48 6896.89,552.02 " fill="none" id="C_0002230624932100089526&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6797.8,660.96,6803.755,653.1154,6798.9452,656.0929,6795.9677,651.2831,6797.8,660.96" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6837.5" cy="607.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6844.5" y="611.5669">«friend»</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M6971.05,553.36 C6961.92,562.71 6953.37,572.58 6945.5,583 C6928.72,605.22 6915.35,629.9 6904.77,655.92 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6902.82,660.79,6909.8582,653.9006,6904.6646,656.1427,6902.4225,650.9492,6902.82,660.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M7005.34,553.07 C6995.77,562.53 6986.78,572.5 6978.5,583 C6960.89,605.33 6946.29,630.17 6934.19,656.38 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6932.12,660.94,6939.4857,654.4019,6934.189,656.3882,6932.2028,651.0915,6932.12,660.94" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6981.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="6991.5" y="611.5669">connectionCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M7189.01,553.14 C7179.81,563.02 7170.91,573 7162.5,583 C7154.21,592.86 7135.71,619.96 7111.93,656.18 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7109,660.64,7117.2785,655.3046,7111.7405,656.4579,7110.5872,650.9199,7109,660.64" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7165.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="7175.5" y="611.5669">messageCallback_</text><!--MD5=[7ee87810ef97a5ab5f46cf16c663f1f4]
link C_0001156367011091191681 to C_0002230624932100089526--><path d="M7336.07,553.25 C7326.36,580.31 7314.33,607.24 7299.5,631 C7294.11,639.64 7288.48,648.21 7282.64,656.72 " fill="none" id="C_0001156367011091191681-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7279.75,660.88,7288.157,655.7495,7282.5923,656.7665,7281.5754,651.2018,7279.75,660.88" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7324.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="7334.5" y="611.5669">writeCompleteCallback_</text><!--MD5=[c2c7a448d2894bf7c09cb675e79bd288]
reverse link C_0001156367011091191681 to C_0002230624932100089526--><path d="M7505.21,566.1 C7509.11,588.07 7506.94,610.14 7495.5,631 C7489.93,641.15 7483.98,651.07 7477.68,660.76 " fill="none" id="C_0001156367011091191681&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7502.23,553.18,7499.6838,559.9266,7504.9322,564.8718,7507.4784,558.1252,7502.23,553.18" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7509.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="7519.5" y="611.5669">connection_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M7015.75,1393.03 C7025.09,1417.74 7034.4,1442.24 7043.5,1466 C7047.24,1475.77 7051.07,1485.73 7054.96,1495.79 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7013.88,1388.08,7013.321,1397.913,7015.6481,1392.7569,7020.8042,1395.084,7013.88,1388.08" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7049.5" cy="1442.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="7056.5" y="1446.5669">«friend»</text><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M7151.75,1495.66 C7146.6,1469.09 7139.93,1442.74 7131.5,1418 C7128.64,1409.61 7125.58,1401.19 7122.35,1392.79 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7120.53,1388.12,7120.0698,1397.9581,7122.345,1392.7789,7127.5241,1395.0541,7120.53,1388.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[be8e8936da1cb94727351d4d52dda313]
link C_0000920759514274339356 to C_0002230624932100089526--><path d="M6903.59,1495.86 C6898.4,1486.08 6893.67,1476.12 6889.5,1466 C6879.93,1442.8 6872.65,1418.3 6867.23,1393.23 " fill="none" id="C_0000920759514274339356-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6866.17,1388.21,6864.1042,1397.8398,6867.1972,1393.1034,6871.9336,1396.1963,6866.17,1388.21" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6895.5,1437.5664,6899.5,1441.5664,6895.5,1445.5664,6891.5,1441.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="6902.5" y="1446.5669">upgradeCallback_</text><!--MD5=[a3c337b61530eee32f2155528e6cd466]
reverse link C_0002230624932100089526 to C_0000920759514274339356--><path d="M7092.74,1407.27 C7094.03,1410.85 7095.28,1414.42 7096.5,1418 C7104.93,1442.74 7111.6,1469.09 7116.95,1495.66 " fill="none" id="C_0002230624932100089526&lt;-C_0000920759514274339356-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7086.02,1409.3,7085.54,1388.12,7099.13,1404.37,7086.02,1409.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3a625fde3388fdef88cf72768c6dd1b6]
reverse link C_0002230624932100089526 to C_0001423170502760786790--><path d="M6169.04,1390.31 C6135.31,1423.06 6104.37,1458.25 6077.5,1496 C5995.33,1611.41 5940.68,2001.99 5915.15,2227.55 " fill="none" id="C_0002230624932100089526&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6172.74,1386.74,6163.4849,1390.1078,6169.1408,1390.2107,6169.0379,1395.8666,6172.74,1386.74" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6083.5" cy="1744.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6090.5" y="1748.5669">«friend»</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M6072.95,2227.84 C6174.3,2130.84 6285.06,2021.39 6300.5,1992 C6421.18,1762.26 6272.78,1639.8 6407.5,1418 C6412.79,1409.29 6418.34,1400.69 6424.13,1392.19 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6426.99,1388.02,6418.583,1393.1505,6424.1477,1392.1335,6425.1646,1397.6982,6426.99,1388.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a663b6db65873a3bf8ee224da2450fa9]
reverse link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5532.96,2218.9 C5525.52,2212.15 5518.35,2205.19 5511.5,2198 C5442.47,2125.52 5441.17,2089.93 5420.5,1992 C5374.98,1776.31 5308.71,1685.99 5420.5,1496 C5434.42,1472.34 5452.95,1483.01 5474.5,1466 C5497.22,1448.07 5492.29,1430.27 5518.5,1418 C5646.84,1357.9 6018.39,1423.83 6155.5,1388 C6161.28,1386.49 6167.07,1384.93 6172.86,1383.32 " fill="none" id="C_0001423170502760786790&lt;-C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5542.9,2227.63,5541.0329,2220.6648,5533.8854,2219.7093,5535.7525,2226.6745,5542.9,2227.63" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5423.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="5433.5" y="1748.5669">connSet_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5716.79,2227.54 C5656.25,2161.07 5596.19,2079.39 5564.5,1992 C5526.93,1888.38 5504.49,1588.45 5564.5,1496 C5610.86,1424.57 5656.9,1438.71 5739.5,1418 C5919.3,1372.92 5976.75,1437.1 6155.5,1388 C6159.64,1386.86 6163.79,1385.7 6167.93,1384.51 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6172.81,1383.11,6163.0585,1381.7287,6168.0013,1384.4798,6165.2502,1389.4227,6172.81,1383.11" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5567.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="5577.5" y="1748.5669">recvMessageCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M5846.29,2227.91 C5826.1,2156.27 5805.48,2070.79 5795.5,1992 C5767.79,1773.3 5663.91,1672.86 5795.5,1496 C5895.21,1361.98 6000.24,1449.62 6155.5,1388 C6159.61,1386.37 6163.73,1384.72 6167.85,1383.06 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6172.69,1381.11,6162.8468,1380.7752,6168.0546,1382.9842,6165.8456,1388.1919,6172.69,1381.11" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5798.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="130" x="5808.5" y="1748.5669">connectionCallback_</text><!--MD5=[3425fbd82fa675b585dfe8e417b5540d]
link C_0001423170502760786790 to C_0002230624932100089526--><path d="M6185.45,2227.92 C6196.66,2218.28 6207.41,2208.31 6217.5,2198 C6280.75,2133.4 6259.46,2089.6 6319.5,2022 C6334.26,2005.39 6347.78,2010.88 6359.5,1992 C6477.71,1801.49 6351.81,1696.82 6451.5,1496 C6469,1460.74 6489.93,1426.18 6512.99,1392.8 " fill="none" id="C_0001423170502760786790-&gt;C_0002230624932100089526-3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6516.11,1388.31,6507.6946,1393.4268,6513.261,1392.4189,6514.2689,1397.9852,6516.11,1388.31" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6454.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152" x="6464.5" y="1748.5669">writeCompleteCallback_</text><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M6896.95,549.92 C6891.11,551 6885.29,552.03 6879.5,553 C6806.76,565.18 4287.41,544.51 4224.5,583 C3976.58,734.69 3779.82,2932.26 3928.5,3182 C3964.43,3242.35 4018.18,3208.03 4066.5,3259 C4186.02,3385.07 4107.54,3495.85 4238.5,3610 C4384.29,3737.08 4594.37,3801.89 4760.08,3834.77 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4765.47,3835.83,4757.4165,3830.1606,4760.5649,3834.8604,4755.8652,3838.0088,4765.47,3835.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9ff6fc0d6cc2ee820b847f59cff749fb]
link C_0001156367011091191681 to C_0001390130774830223499--><path d="M6896.93,549.8 C6891.1,550.92 6885.29,551.99 6879.5,553 C6633.07,596.14 4831.65,512.25 4630.5,661 C3894.88,1205.01 4113.4,1722.53 4046.5,2635 C4028.72,2877.46 3934.23,2966.37 4046.5,3182 C4074.06,3234.93 4118.69,3212.83 4156.5,3259 C4249.95,3373.09 4184.33,3459.62 4289.5,3563 C4418.16,3689.48 4606.95,3766.43 4760.44,3811.39 " fill="none" id="C_0001156367011091191681-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4765.42,3812.85,4757.9,3806.49,4760.62,3811.45,4755.66,3814.17,4765.42,3812.85" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4064.5" y="2390.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4074.5" y="2397.5669">loop_</text><!--MD5=[52435df9b4fd9bea00472be8869d6af6]
link C_0001156367011091191681 to C_0001897340460211641725--><path d="M7850.24,398.33 C8377.11,414.72 9188.33,459.73 9468.5,583 C9663.18,668.66 9655.5,810.81 9655.5,1023.5 C9655.5,1023.5 9655.5,1023.5 9655.5,3412 C9655.5,3633.58 8084.77,3792.81 7460.21,3847.37 " fill="none" id="C_0001156367011091191681-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7455.18,3847.81,7464.4895,3851.0245,7460.1616,3847.3818,7463.8044,3843.0539,7455.18,3847.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M7850.11,403.18 C8420.69,424.86 9313.74,475.62 9424.5,583 C9650.05,801.67 9570.31,1679.36 9539.5,1992 C9512.26,2268.45 9585.72,2383.94 9417.5,2605 C9309.84,2746.48 9117.77,2826.65 8979.71,2868.41 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8974.82,2869.88,8984.5905,2871.1198,8979.6083,2868.4406,8982.2875,2863.4585,8974.82,2869.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a4101b8ff39ced7592fd2f3e1f6ef07]
link C_0001156367011091191681 to C_0001289495020269537351--><path d="M7850.16,416.84 C8293.13,447.09 8918.37,502.16 9150.5,583 C9362.67,656.89 9398.5,798.83 9398.5,1023.5 C9398.5,1023.5 9398.5,1023.5 9398.5,2394 C9398.5,2618.61 9151.75,2768.43 8979.58,2845.62 " fill="none" id="C_0001156367011091191681-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8974.77,2847.77,8984.6189,2847.7643,8979.3379,2845.7367,8981.3655,2840.4557,8974.77,2847.77" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9401.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="9411.5" y="1748.5669">messageCallback_</text><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M7850.14,429.29 C8350.11,476.55 9075.11,561.25 9158.5,661 C9262.12,784.95 9178.19,1227.65 9158.5,1388 C9158.5,1388 8956.5,2198 8956.5,2198 C8911.66,2266.65 8834.09,2321.06 8777.02,2354.58 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8772.6,2357.16,8782.3915,2356.0984,8776.9235,2354.6486,8778.3733,2349.1807,8772.6,2357.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f7f5f6a7e4b2f7ed8d98b35eac71ea28]
link C_0001156367011091191681 to C_0000434245188016003403--><path d="M7850.17,401.69 C8167.37,420.88 8545.16,468.05 8654.5,583 C8778.41,713.27 8614.69,1254.85 8735.5,1388 C8781.18,1438.35 8842.4,1365.42 8885.5,1418 C8896.22,1431.07 9044.24,1779.82 8881.5,2198 C8858.09,2258.15 8806.55,2311.23 8765.26,2346.59 " fill="none" id="C_0001156367011091191681-&gt;C_0000434245188016003403-1" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8761.29,2349.96,8770.7377,2347.1779,8765.0993,2346.7213,8765.5559,2341.0829,8761.29,2349.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8907.5" y="1439.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="8917.5" y="1446.5669">sslErrorCallback_</text><!--MD5=[3f61ba6780eb7bfc931522a20294fda2]
link C_0001156367011091191681 to C_0002100370281243872283--><path d="M7850.4,431.02 C8156.62,469.31 8513.63,539.1 8605.5,661 C8800.98,920.36 8518.78,1105.77 8679.5,1388 C8719.44,1458.14 8785.86,1425.69 8825.5,1496 C8979.11,1768.44 8910.27,1887.29 8874.5,2198 C8855.71,2361.22 8891.43,2428.36 8790.5,2558 C8744.71,2616.82 8703.91,2594.24 8641.5,2635 C8598.63,2663 8554.73,2695.37 8513.39,2727.8 " fill="none" id="C_0001156367011091191681-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8509.4,2730.94,8518.9431,2728.505,8513.3251,2727.8427,8513.9874,2722.2248,8509.4,2730.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3b307344d3c58e3733026c6c7a02db5d]
reverse link C_0001156367011091191681 to C_0002100370281243872283--><path d="M7863.28,424.76 C8280.83,459 8846.78,515.37 9063.5,583 C9133.73,604.92 9171.67,597.9 9209.5,661 C9385.53,954.61 9228.15,1878.39 9105.5,2198 C9035.8,2379.63 9003.44,2430.5 8856.5,2558 C8821.22,2588.61 8806.32,2588.84 8762.5,2605 C8710.52,2624.17 8691.11,2610.33 8641.5,2635 C8590.13,2660.55 8539.46,2695.05 8493.64,2730.91 " fill="none" id="C_0001156367011091191681&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7850.04,423.68,7855.6949,428.1547,7862.0003,424.6558,7856.3454,420.1812,7850.04,423.68" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="9261.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="9271.5" y="1748.5669">tlsPolicyPtr_</text><!--MD5=[250bd1f661dda8bf2c153c3d4eb2c41f]
reverse link C_0001156367011091191681 to C_0001706043459252151324--><path d="M6884.11,552.17 C6882.57,552.45 6881.04,552.73 6879.5,553 C6669.36,590.35 6128.1,537.84 5919.5,583 C5358.37,704.48 4917.46,1011.74 4547.5,1496 C4242.71,1894.96 4357.02,2095.16 4162.5,2558 C4147.79,2593 4133.93,2597.98 4125.5,2635 C4071.5,2872.04 3997.69,2975.2 4125.5,3182 C4165.73,3247.09 4211.84,3223.26 4279.5,3259 C4313.91,3277.18 4350.48,3297.12 4385.25,3316.39 " fill="none" id="C_0001156367011091191681&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6896.92,549.76,6890.282,546.9427,6885.1284,551.9866,6891.7664,554.8038,6896.92,549.76" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4311.5" y="2107.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="4321.5" y="2114.5669">connector_</text><!--MD5=[f423207d0e32839dd54b5872c5e0f583]
reverse link C_0001156367011091191681 to C_0000626107303889580949--><path d="M6884.08,551.99 C6882.55,552.33 6881.02,552.67 6879.5,553 C6663.27,600.13 6037.26,496.25 5889.5,661 C5673.77,901.54 5710.49,1119.01 5889.5,1388 C5958.37,1491.49 6068.88,1399.71 6147.5,1496 C6289.62,1670.06 6081.72,1838.15 6245.5,1992 C6319.03,2061.07 6378.09,1981.52 6470.5,2022 C6601.75,2079.49 6623.36,2120.86 6718.5,2228 C6823.13,2345.83 7082.08,2778.63 7144.7,2884.17 " fill="none" id="C_0001156367011091191681&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6896.79,549.12,6890.0577,546.5361,6885.0832,551.7567,6891.8155,554.3406,6896.79,549.12" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6248.5" y="1741.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="6258.5" y="1748.5669">sslContextPtr_</text><!--MD5=[85b9c9e20f0cfc051f44ea2c9a57c6e6]
reverse link C_0001159823987743494688 to C_0001156367011091191681--><path d="M3811.8,78.69 C4233.96,82.92 6264.27,108.95 6879.5,223 C6885.28,224.07 6891.08,225.19 6896.9,226.36 " fill="none" id="C_0001159823987743494688&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3811.46,85.69,3791.53,78.5,3811.6,71.69,3811.46,85.69" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c243407103ec46e8c5ed77bbb7514164]
link C_0001278908569830571044 to C_0001156367011091191681--><path d="M7373.5,107.63 C7373.5,132.01 7373.5,168.77 7373.5,207.69 " fill="none" id="C_0001278908569830571044-&gt;C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7373.5" cy="214.7" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7373.5" x2="7373.5" y1="206.7" y2="222.7"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7381.5" x2="7365.5" y1="214.7" y2="214.7"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M7850.99,2253.56 C7852.59,2017.11 7843.37,1548.34 7749.5,1418 C7706.18,1357.84 7651.42,1306.73 7590.56,1263.32 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7586.17,1260.21,7591.1997,1268.6777,7590.2493,1263.1013,7595.8257,1262.1509,7586.17,1260.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bd26ec2d3422f4d65de7090140a16fd7]
link C_0000464040622375950341 to C_0002230624932100089526--><path d="M7874.98,2253.96 C7903.49,2073.71 7933.51,1751.12 7842.5,1496 C7797.94,1371.09 7703.55,1279.27 7590.53,1211.78 " fill="none" id="C_0000464040622375950341-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="7586.16,1209.19,7591.851,1217.2282,7590.4575,1211.7457,7595.94,1210.3522,7586.16,1209.19" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7909.5,1739.5664,7913.5,1743.5664,7909.5,1747.5664,7905.5,1743.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="7916.5" y="1748.5669">conn_</text><!--MD5=[66a28d60dde9122b674256fe47a8607b]
link C_0000464040622375950341 to C_0002100370281243872283--><path d="M8047.24,2532.01 C8067.89,2549.8 8087.77,2568.61 8105.5,2588 C8143.38,2629.43 8178.25,2679.04 8207.86,2726.66 " fill="none" id="C_0000464040622375950341-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8210.52,2730.97,8209.1952,2721.2107,8207.8931,2726.7156,8202.3882,2725.4136,8210.52,2730.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[875d972240b01517ed889bd22efa83e7]
reverse link C_0000464040622375950341 to C_0002100370281243872283--><path d="M8088.69,2540.72 C8106.13,2555.64 8122.67,2571.45 8137.5,2588 C8174.88,2629.72 8206.54,2681.32 8231.9,2730.79 " fill="none" id="C_0000464040622375950341&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8078.32,2532.04,8080.355,2538.958,8087.5235,2539.7404,8085.4885,2532.8223,8078.32,2532.04" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8155.5,2592.0664,8159.5,2596.0664,8155.5,2600.0664,8151.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="8162.5" y="2601.0669">policyPtr_</text><!--MD5=[b652be82a647abba4b5fd8692aa6554f]
link C_0000464040622375950341 to C_0000626107303889580949--><path d="M7606.9,2463.27 C7505.54,2501.43 7391.89,2557.21 7307.5,2635 C7230.88,2705.63 7185.03,2824.93 7167.15,2879.15 " fill="none" id="C_0000464040622375950341-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7165.51,2884.19,7172.0914,2876.863,7167.0525,2879.4339,7164.4817,2874.395,7165.51,2884.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[80034138ff2d0c3e947014f89ce57bda]
reverse link C_0000464040622375950341 to C_0000626107303889580949--><path d="M7594.51,2507.53 C7523.64,2539.15 7446.59,2573.46 7375.5,2605 C7345.31,2618.4 7331.83,2612.65 7307.5,2635 C7228.28,2707.77 7182.04,2832.61 7165.49,2884.17 " fill="none" id="C_0000464040622375950341&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7606.74,2502.07,7599.6318,2500.8563,7595.7775,2506.951,7602.8858,2508.1647,7606.74,2502.07" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7406.5,2592.0664,7410.5,2596.0664,7406.5,2600.0664,7402.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="7413.5" y="2601.0669">contextPtr_</text><!--MD5=[cbe65aa9ba09230aac132495b612a111]
link C_0000464040622375950341 to C_0001289495020269537351--><path d="M8090.08,2518.09 C8122.72,2532.62 8156.12,2546.37 8188.5,2558 C8271.18,2587.69 8294.03,2589.49 8380.5,2605 C8437.75,2615.27 8591.1,2604.3 8640.5,2635 C8645.17,2637.9 8649.74,2640.98 8654.21,2644.21 " fill="none" id="C_0000464040622375950341-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8658.29,2647.23,8653.436,2638.6604,8654.2712,2644.2552,8648.6763,2645.0905,8658.29,2647.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M8102.5,2525.85 C8131.06,2537.86 8160.1,2548.9 8188.5,2558 C8195.83,2560.35 8453.91,2603.71 8461.5,2605 C8541.03,2618.51 8573.1,2590.68 8640.5,2635 C8646.62,2639.02 8652.57,2643.34 8658.35,2647.91 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8090.29,2520.65,8094.2396,2526.6833,8101.3279,2525.3579,8097.3783,2519.3247,8090.29,2520.65" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8467.5,2592.0664,8471.5,2596.0664,8467.5,2600.0664,8463.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="8474.5" y="2601.0669">recvBuffer_</text><!--MD5=[d2c7554312a476754dc8e3baba3422f4]
reverse link C_0000464040622375950341 to C_0001289495020269537351--><path d="M8102.57,2528.74 C8131.01,2540.13 8160.01,2550.24 8188.5,2558 C8385.12,2611.56 8490.23,2497.35 8640.5,2635 C8646.52,2640.52 8652.43,2646.28 8658.21,2652.25 " fill="none" id="C_0000464040622375950341&lt;-C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8090.42,2523.78,8094.4615,2529.7521,8101.5287,2528.3185,8097.4872,2522.3463,8090.42,2523.78" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8602.5,2592.0664,8606.5,2596.0664,8602.5,2600.0664,8598.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="8609.5" y="2601.0669">writeBuffer_</text><!--MD5=[33ce3cc340c214aeadfebc02526d05f3]
link C_0000464040622375950341 to C_0001660397537883119469--><path d="M7732.91,2532.18 C7722.59,2550.1 7713.71,2568.89 7707.5,2588 C7678.16,2678.29 7705.35,2789.39 7726.98,2853.96 " fill="none" id="C_0000464040622375950341-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7728.66,2858.91,7729.5733,2849.1036,7727.0617,2854.1723,7721.993,2851.6608,7728.66,2858.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ec1a6f5f84e6ef233285776a59af2fe]
reverse link C_0000464040622375950341 to C_0001660397537883119469--><path d="M7912.09,2545.21 C7914.68,2565.26 7914.37,2585.58 7909.5,2605 C7885.18,2701.93 7823.17,2801.72 7783.31,2859 " fill="none" id="C_0000464040622375950341&lt;-C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7909.99,2532.09,7906.9893,2538.6471,7911.8879,2543.939,7914.8886,2537.3818,7909.99,2532.09" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7917.5,2592.0664,7921.5,2596.0664,7917.5,2600.0664,7913.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="7924.5" y="2601.0669">peerCertificate_</text><!--MD5=[59b32ea62ecf6e8b0ce93ada6106a262]
link C_0000464040622375950341 to C_0001390130774830223499--><path d="M8003.11,2532.13 C8015.72,2549.68 8026.63,2568.41 8034.5,2588 C8037.32,2595.01 8038.59,2598.65 8034.5,2605 C8017.06,2632.09 7987.68,2609.11 7968.5,2635 C7822.55,2832.04 8037.21,2981.18 7896.5,3182 C7685.82,3482.7 7513.12,3450.87 7163.5,3563 C6506.91,3773.59 5690.64,3838.98 5280.88,3859.14 " fill="none" id="C_0000464040622375950341-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.78,3859.39,5284.9635,3862.9487,5280.7741,3859.1474,5284.5753,3854.9581,5275.78,3859.39" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7877.5,3216.0664,7881.5,3220.0664,7877.5,3224.0664,7873.5,3220.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="7884.5" y="3225.0669">loop_</text><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M4647.03,3505.65 C4686.43,3543.89 4733.91,3589.95 4781.61,3636.22 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4785.33,3639.84,4781.6461,3630.7061,4781.7377,3636.3622,4776.0816,3636.4538,4785.33,3639.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e34f322a2c33ec1521bf8e14aef50b04]
link C_0001706043459252151324 to C_0001390130774830223499--><path d="M4606.21,3505.69 C4628.94,3540.27 4656.84,3578.64 4686.5,3610 C4709.53,3634.36 4735,3658.25 4761.3,3681.06 " fill="none" id="C_0001706043459252151324-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4765.18,3684.42,4760.9857,3675.5089,4761.3968,3681.1508,4755.755,3681.5619,4765.18,3684.42" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4689.5" y="3599.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4699.5" y="3606.0669">loop_</text><!--MD5=[33283569ac1ba65b658e3f0b917458cb]
link C_0001706043459252151324 to C_0001897340460211641725--><path d="M4794.26,3498.51 C4914.05,3537.98 5061.38,3582.04 5196.5,3610 C5314.73,3634.46 5346.64,3625.5 5466.5,3640 C5997.39,3704.23 6618.18,3787.43 6956.72,3833.48 " fill="none" id="C_0001706043459252151324-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6961.68,3834.16,6953.2983,3828.9882,6956.7252,3833.4889,6952.2246,3836.9158,6961.68,3834.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[300ce94da7e34d414e04366f7f879adb]
reverse link C_0001706043459252151324 to C_0001897340460211641725--><path d="M4807.13,3464.99 C4955.44,3495.03 5145.72,3532.58 5315.5,3563 C5904.68,3668.58 6600.11,3776.32 6961.86,3831.09 " fill="none" id="C_0001706043459252151324&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4794.27,3462.39,4799.3547,3467.5033,4806.0303,3464.7763,4800.9456,3459.6631,4794.27,3462.39" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5574.5" y="3599.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="5584.5" y="3606.0669">serverAddr_</text><!--MD5=[c981f5fdcdd65c5bb69970310bf646b5]
link C_0001706043459252151324 to C_0000764690828649606524--><path d="M4473.38,3505.59 C4370.91,3635.94 4193.49,3883.73 4113.5,4128 C4089.12,4202.45 3985.2,4424.37 4109.5,4607 C4228.91,4782.45 4474.36,4850.08 4646.22,4876.15 " fill="none" id="C_0001706043459252151324-&gt;C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4651.28,4876.91,4642.9595,4871.6403,4646.3334,4876.1809,4641.7929,4879.5548,4651.28,4876.91" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4116.5" y="4134.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="75" x="4126.5" y="4141.0669">channelPtr_</text><!--MD5=[645bc51905bfdbc49f6682dee908faef]
reverse link C_0001159823987743494688 to C_0001706043459252151324--><path d="M3810.12,105.61 C3843.22,121.38 3879.64,144.41 3902.5,176 C3958.71,253.68 3947.5,291.11 3947.5,387 C3947.5,387 3947.5,387 3947.5,2597.5 C3947.5,2860.98 3888.8,2970.93 4046.5,3182 C4074.93,3220.06 4099.45,3208.92 4142.5,3229 C4163.06,3238.59 4250.21,3277.29 4338.72,3316.46 " fill="none" id="C_0001159823987743494688&lt;-C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3807.08,111.92,3791.67,97.38,3812.79,99.14,3807.08,111.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[255bb85fd16b3df7cc9a8a0088a159be]
link C_0000000982196670174162 to C_0001706043459252151324--><path d="M4224.77,2951.87 C4238.37,3007.86 4267.46,3108.05 4315.5,3182 C4344.74,3227.01 4384.39,3269.84 4422.78,3305.97 " fill="none" id="C_0000000982196670174162-&gt;C_0001706043459252151324" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="4428.2339" cy="3311.0305" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4422.3677" x2="4434.1" y1="3305.591" y2="3316.47"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="4433.6734" x2="4422.7943" y1="3305.1643" y2="3316.8966"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5508.33,2964.78 C5506.32,3079.82 5492.89,3351.85 5414.5,3563 C5389.07,3631.5 5337.52,3688.01 5279.86,3732.97 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5275.7,3736.19,5285.2581,3733.8148,5279.6445,3733.1173,5280.3419,3727.5036,5275.7,3736.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4e5199a2c254bfff063694ad37edcbf5]
link C_0000964465843177067305 to C_0001390130774830223499--><path d="M5477.74,2964.66 C5441.96,3031.86 5384.49,3149.97 5358.5,3259 C5340.38,3335.02 5372.2,3540.48 5336.5,3610 C5321.61,3639.01 5301.85,3665.92 5279.46,3690.56 " fill="none" id="C_0000964465843177067305-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.85,3694.5,5284.8843,3690.578,5279.2325,3690.8178,5278.9927,3685.166,5275.85,3694.5" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5361.5" y="3408.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5371.5" y="3415.5669">loop_</text><!--MD5=[64866fe38d904675f00d2ad62d2d950e]
link C_0002013739811805694444 to C_0000964465843177067305--><path d="M4918.53,2430.13 C4957.86,2473.64 5027.48,2547.98 5093.5,2605 C5197.09,2694.48 5325.7,2785.44 5412.06,2843.91 " fill="none" id="C_0002013739811805694444-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5418.1183" cy="2848.0055" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5411.4867" x2="5424.75" y1="2843.5311" y2="2852.48"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5422.5928" x2="5413.6439" y1="2841.3739" y2="2854.6372"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M6940.48,1992.41 C6934.48,2002.22 6928.8,2012.1 6923.5,2022 C6806.15,2241.32 6938.92,2382.65 6762.5,2558 C6736.22,2584.12 6638.99,2598.56 6602.5,2605 C6551.08,2614.08 6171.93,2599.64 6133.5,2635 C6043.07,2718.2 6075.77,3061.34 6052.5,3182 C6015.48,3374.01 6086.22,3469.21 5950.5,3610 C5858.11,3705.85 5522.08,3782.11 5280.49,3826.18 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5275.51,3827.08,5285.0756,3829.425,5280.4312,3826.1956,5283.6606,3821.5512,5275.51,3827.08" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a1a6d74802a644cd2300e98ace7261f]
link C_0000920759514274339356 to C_0001390130774830223499--><path d="M6885.61,1992.39 C6877.59,2002.19 6869.86,2012.07 6862.5,2022 C6801.42,2104.39 6788.81,2130.02 6758.5,2228 C6736.63,2298.68 6766.67,2505.54 6714.5,2558 C6687.76,2584.89 6414.19,2600.9 6376.5,2605 C6334.4,2609.59 6026.95,2605.57 5996.5,2635 C5908.54,2720.02 5972.09,3065.58 5934.5,3182 C5874.82,3366.82 5864.58,3432.77 5720.5,3563 C5595.98,3675.56 5423.38,3751.39 5280.73,3799.28 " fill="none" id="C_0000920759514274339356-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.67,3800.98,5285.4739,3801.9198,5280.412,3799.3946,5282.9372,3794.3326,5275.67,3800.98" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6002.5,2904.0664,6006.5,2908.0664,6002.5,2912.0664,5998.5,2908.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6009.5" y="2913.0669">loop_</text><!--MD5=[cb9f027c3142c905f1a5f676e638bcfe]
link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7149.54,1992.14 C7147.68,2160.16 7145.45,2387.49 7144.5,2588 C7144.46,2595.56 7140.16,2598.82 7144.5,2605 C7167.03,2637.11 7204.55,2603.19 7227.5,2635 C7352.11,2807.7 7249.72,3380.06 7252.5,3593 C7252.6,3600.55 7253.14,3602.47 7252.5,3610 C7249.33,3647.48 7243.6,3687.7 7237.31,3724.97 " fill="none" id="C_0000920759514274339356-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7236.46,3729.97,7241.8967,3721.7577,7237.2889,3725.0392,7234.0075,3720.4314,7236.46,3729.97" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7309,2004.37 C7311.29,2010.25 7313.46,2016.13 7315.5,2022 C7394.46,2249.15 7329.66,2325.08 7389.5,2558 C7395.07,2579.66 7395.17,2586.34 7407.5,2605 C7418.07,2621 7430.41,2617.62 7438.5,2635 C7550.12,2874.9 7513.01,2966.66 7478.5,3229 C7455.64,3402.8 7447.88,3449.89 7376.5,3610 C7358.33,3650.76 7334.13,3692.38 7309.78,3729.96 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7304.15,1992.3,7302.6817,1999.36,7308.634,2003.4308,7310.1022,1996.3707,7304.15,1992.3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7518.5,2904.0664,7522.5,2908.0664,7518.5,2912.0664,7514.5,2908.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7525.5" y="2913.0669">localAddr_</text><!--MD5=[5aafe6732907962a76871feeddca3bf3]
reverse link C_0000920759514274339356 to C_0001897340460211641725--><path d="M7198.57,2004.95 C7228.02,2181.95 7264.18,2421.88 7283.5,2635 C7307.35,2898.07 7309.03,2964.91 7303.5,3229 C7300.39,3377.54 7309.63,3415.8 7289.5,3563 C7286.59,3584.26 7283.75,3589.2 7278.5,3610 C7268.64,3649.04 7257.42,3691.24 7246.9,3729.99 " fill="none" id="C_0000920759514274339356&lt;-C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7196.42,1992.04,7193.4632,1998.617,7198.3971,2003.876,7201.3539,1997.299,7196.42,1992.04" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7311.5,2904.0664,7315.5,2908.0664,7311.5,2912.0664,7307.5,2908.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="7318.5" y="2913.0669">peerAddr_</text><!--MD5=[76f47a1576e50ad875a2ac1674af8c7c]
link C_0000920759514274339356 to C_0002100370281243872283--><path d="M7625.42,1992.19 C7637.49,2001.88 7649.22,2011.82 7660.5,2022 C7730.99,2085.58 7699.6,2150 7781.5,2198 C7844.26,2234.79 8052.37,2180.53 8107.5,2228 C8221.94,2326.55 8102.41,2433.92 8188.5,2558 C8201.99,2577.45 8219.19,2568.43 8232.5,2588 C8260.08,2628.58 8277.25,2678.1 8287.89,2725.92 " fill="none" id="C_0000920759514274339356-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8288.96,2730.84,8290.9393,2721.1921,8287.889,2725.9561,8283.125,2722.9057,8288.96,2730.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3e1a83c8472c25626ee0a649a7b91d39]
link C_0000920759514274339356 to C_0000626107303889580949--><path d="M7119.2,1992.3 C7100.74,2164.34 7084.92,2398.9 7103.5,2605 C7112.69,2706.97 7138.99,2825.96 7151.6,2879.22 " fill="none" id="C_0000920759514274339356-&gt;C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7152.77,2884.16,7154.5818,2874.4792,7151.6145,2879.2954,7146.7983,2876.3281,7152.77,2884.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2a0239bb3b5181f14dffece8cc36c4f]
link C_0000920759514274339356 to C_0001289495020269537351--><path d="M7670.63,1986.13 C7696.3,1998.23 7721.7,2010.23 7746.5,2022 C7936.88,2112.31 8024.91,2078.6 8173.5,2228 C8288.04,2343.16 8196.87,2465.68 8330.5,2558 C8397.09,2604.01 8628.72,2539.48 8693.5,2588 C8709.62,2600.07 8723.62,2614.54 8735.79,2630.57 " fill="none" id="C_0000920759514274339356-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8738.85,2634.68,8736.6884,2625.0713,8735.866,2630.668,8730.2693,2629.8457,8738.85,2634.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6af6f7182bc750881521d16d3fb8997c]
reverse link C_0000920759514274339356 to C_0001289495020269537351--><path d="M7683.19,1944.57 C7734.05,1961.47 7785.08,1977.58 7834.5,1992 C7893.09,2009.09 7912.39,1998 7968.5,2022 C8120.26,2086.9 8164.13,2108.04 8277.5,2228 C8394.35,2351.66 8328.98,2465.08 8471.5,2558 C8567.83,2620.81 8641.22,2513.12 8728.5,2588 C8744.11,2601.39 8757.08,2617.28 8767.83,2634.69 " fill="none" id="C_0000920759514274339356&lt;-C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7670.62,1940.38,7675.0452,1946.0736,7682.0029,1944.1787,7677.5777,1938.4851,7670.62,1940.38" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="8477.5,2388.5664,8481.5,2392.5664,8477.5,2396.5664,8473.5,2392.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="8484.5" y="2397.5669">readBuffer_</text><!--MD5=[757c398b52da5470305d11307157893e]
link C_0000920759514274339356 to C_0001660397537883119469--><path d="M7372.88,1992.11 C7377.88,2001.95 7382.45,2011.93 7386.5,2022 C7410.72,2082.22 7380.35,2556.51 7423.5,2605 C7473.05,2660.68 7527.46,2592.23 7588.5,2635 C7664.79,2688.46 7709.89,2791.15 7731.57,2854.07 " fill="none" id="C_0000920759514274339356-&gt;C_0001660397537883119469" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7733.22,2858.91,7734.0978,2849.1003,7731.6046,2854.1781,7726.5268,2851.685,7733.22,2858.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M6634.28,1989.56 C6631.35,1990.39 6628.42,1991.2 6625.5,1992 C6488.97,2029.25 6448.27,1999.83 6308.5,2022 C5894.66,2087.65 5650.43,1900.94 5388.5,2228 C5239.93,2413.51 5393.72,2719.6 5470.44,2847.95 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5473.14,2852.44,5471.9156,2842.6675,5470.557,2848.1588,5465.0657,2846.8003,5473.14,2852.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98d3d59390a1c3940025d8d459b8808f]
link C_0000920759514274339356 to C_0000964465843177067305--><path d="M6744.24,1992.2 C6732.64,2001.96 6721.36,2011.9 6710.5,2022 C6627.37,2099.3 6616.97,2130.1 6559.5,2228 C6477.85,2367.1 6531.5,2453.67 6408.5,2558 C6252.09,2690.67 6147.68,2568.98 5953.5,2635 C5810.32,2683.68 5664.65,2784.74 5580.62,2849.17 " fill="none" id="C_0000920759514274339356-&gt;C_0000964465843177067305-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5576.42,2852.4,5585.9929,2850.0848,5580.3837,2849.3521,5581.1163,2843.7429,5576.42,2852.4" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6562.5" y="2390.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="6572.5" y="2397.5669">timingWheelWeakPtr_</text><!--MD5=[528e1f6e6b68c310f69889560000a0aa]
link C_0000920759514274339356 to C_0000434245188016003403--><path d="M7670.73,1936.34 C7744.71,1958.18 7820.47,1977.7 7893.5,1992 C7943.87,2001.86 8315.09,1989.11 8354.5,2022 C8416.41,2073.66 8346.07,2136.75 8398.5,2198 C8420.78,2224.02 8439.5,2211.47 8469.5,2228 C8533.34,2263.17 8601.18,2311.61 8647.65,2346.72 " fill="none" id="C_0000920759514274339356-&gt;C_0000434245188016003403" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8651.8,2349.86,8647.0345,2341.2409,8647.812,2346.844,8642.2089,2347.6216,8651.8,2349.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ce9107b4923ca93a1169e4ed8a3364fb]
reverse link C_0000920759514274339356 to C_0002032009232244826154--><path d="M6621.23,1992.03 C6397.89,2018.94 4384.2,1971.86 4266.5,2022 C3874.95,2188.8 3597.4,2696.42 3434.5,3259 C3345.16,3567.53 3362.63,3943.5 3386.9,4174.79 " fill="none" id="C_0000920759514274339356&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6634.37,1989.91,6627.8091,1986.9176,6622.5234,1991.8229,6629.0843,1994.8153,6634.37,1989.91" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3448.5" y="3218.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="3458.5" y="3225.0669">lastTimingWheelUpdateTime_</text><!--MD5=[31e6096f3e7bf50fba063fa6a871dbc2]
reverse link C_0000920759514274339356 to C_0000764690828649606524--><path d="M7095.87,2005.41 C7095.03,2010.98 7094.24,2016.52 7093.5,2022 C7047.41,2361.94 7153.07,3255.25 7001.5,3563 C6923.34,3721.7 5952.67,4518.5 5799.5,4607 C5744.13,4639 5724.48,4634.72 5663.5,4654 C5441.93,4724.07 5184.39,4796.72 5015.67,4843.14 " fill="none" id="C_0000920759514274339356&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7097.89,1992.35,7093.0202,1997.6683,7096.0564,2004.2091,7100.9262,1998.8907,7097.89,1992.35" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7076.5,3406.5664,7080.5,3410.5664,7076.5,3414.5664,7072.5,3410.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="7083.5" y="3415.5669">ioChannelPtr_</text><!--MD5=[fd00b97cf8d317edfdc92b9954c8428d]
reverse link C_0000920759514274339356 to C_0000971024972307079851--><path d="M7096.85,2005.36 C7095.72,2010.96 7094.6,2016.51 7093.5,2022 C6986.42,2557.16 6978.03,2694.54 6867.5,3229 C6865.48,3238.78 6863.34,3248.85 6861.15,3258.99 " fill="none" id="C_0000920759514274339356&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7099.52,1992.24,7094.4067,1997.3247,7097.1337,2004.0003,7102.2469,1998.9156,7099.52,1992.24" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6992.5,2592.0664,6996.5,2596.0664,6992.5,2600.0664,6988.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="6999.5" y="2601.0669">socketPtr_</text><!--MD5=[b5fd39cbf5d90566dc2e46b01562db6a]
reverse link C_0000920759514274339356 to C_0000464040622375950341--><path d="M7441.7,2002.34 C7447.12,2008.86 7452.39,2015.42 7457.5,2022 C7511.73,2091.9 7490.85,2132.66 7550.5,2198 C7568.61,2217.83 7589.16,2236.53 7610.81,2253.9 " fill="none" id="C_0000920759514274339356&lt;-C_0000464040622375950341" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7433.08,1992.12,7433.8956,1999.2848,7440.823,2001.2876,7440.0074,1994.1228,7433.08,1992.12" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7556.5,2105.5664,7560.5,2109.5664,7556.5,2113.5664,7552.5,2109.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="7563.5" y="2114.5669">tlsProviderPtr_</text><!--MD5=[c1a39ca6e8db12211e684b8522ff65dd]
reverse link C_0000920759514274339356 to C_0001156367011091191681--><path d="M7675.42,1559.15 C7748.22,1536.36 7822.41,1514.58 7893.5,1496 C8140,1431.57 8294.2,1584.4 8456.5,1388 C8559.42,1263.47 8555.85,788.39 8456.5,661 C8379.42,562.16 8103.88,493.77 7850.04,450.29 " fill="none" id="C_0000920759514274339356&lt;-C_0001156367011091191681" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7670.63,1560.66,7680.4153,1561.7768,7675.3999,1559.1605,7678.0161,1554.145,7670.63,1560.66" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="8537.5" cy="1025.0664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="8544.5" y="1029.0669">«friend»</text><!--MD5=[775bd150b1606e49d35b94427aa17677]
reverse link C_0000920759514274339356 to C_0001423170502760786790--><path d="M6629.34,1985.02 C6622.04,1987.41 6614.75,1989.74 6607.5,1992 C6535.49,2014.4 6504.09,1981.47 6440.5,2022 C6359.81,2073.42 6389.94,2136.67 6316.5,2198 C6304.06,2208.38 6290.98,2218.34 6277.43,2227.87 " fill="none" id="C_0000920759514274339356&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6634.41,1983.35,6624.6122,1982.3482,6629.6581,1984.9054,6627.1009,1989.9513,6634.41,1983.35" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6446.5" cy="2110.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="6453.5" y="2114.5669">«friend»</text><!--MD5=[07af7eb0d6cb74986af3cd54dfa1a5ea]
reverse link C_0001159823987743494688 to C_0000920759514274339356--><path d="M3812.09,78.45 C4100.68,80.74 5101.37,94.54 5216.5,176 C5694.99,514.55 5321.13,974.43 5736.5,1388 C5799.44,1450.67 5833.85,1446.47 5920.5,1466 C6226.44,1534.97 6320.9,1421.33 6625.5,1496 C6628.44,1496.72 6631.39,1497.46 6634.34,1498.22 " fill="none" id="C_0001159823987743494688&lt;-C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3811.73,85.44,3791.79,78.3,3811.84,71.44,3811.73,85.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c532aab217e61acf8b6b084ec7b46eb]
link C_0002266895444343633259 to C_0000920759514274339356--><path d="M6468.77,397.17 C6284.99,416.52 6019.98,477.01 5889.5,661 C5702.6,924.57 5691.65,1132.55 5889.5,1388 C5988.3,1515.56 6451.12,1456.28 6607.5,1496 C6611.55,1497.03 6615.61,1498.09 6619.67,1499.17 " fill="none" id="C_0002266895444343633259-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6626.6852" cy="1501.1028" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6618.9705" x2="6634.4" y1="1498.9856" y2="1503.22"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6628.8024" x2="6624.5681" y1="1493.3881" y2="1508.8176"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M6680.87,431.28 C6695.04,470.52 6716.55,530.58 6734.5,583 C6742.63,606.74 6750.93,631.24 6759.24,655.94 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6760.9,660.89,6761.8043,651.0827,6759.2974,656.1538,6754.2264,653.6469,6760.9,660.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2174545eae4ac9cdd8fa5ba6c4a6e37b]
link C_0002266895444343633259 to C_0002230624932100089526--><path d="M6661.51,431.36 C6658.17,480.34 6656.45,562.93 6674.5,631 C6676.68,639.23 6679.06,647.48 6681.61,655.74 " fill="none" id="C_0002266895444343633259-&gt;C_0002230624932100089526-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6683.22,660.88,6684.3368,651.0947,6681.7205,656.1101,6676.705,653.4939,6683.22,660.88" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6677.5" y="604.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="6687.5" y="611.5669">conn_</text><!--MD5=[a2e7476096c2077970c9b111225cac20]
link C_0001029063960859366412 to C_0000920759514274339356--><path d="M8898.11,1106.37 C8830.37,1211.04 8696.49,1389.08 8528.5,1466 C8400.06,1524.81 8032.37,1470.09 7893.5,1496 C7825.21,1508.74 7754.57,1526.28 7685.27,1546.18 " fill="none" id="C_0001029063960859366412-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7678.1841" cy="1548.2341" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7685.8682" x2="7670.5" y1="1546.0081" y2="1550.46"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7680.41" x2="7675.9581" y1="1555.9181" y2="1540.55"/><!--MD5=[803a46c0407296c3d5232650b81b89e3]
link C_0001029063960859366412 to C_0001289495020269537351--><path d="M8979.39,1106.31 C9011.58,1193.77 9054.81,1337.93 9047.5,1466 C9019.68,1953.71 9021.57,2079.65 8922.5,2558 C8917.62,2581.57 8911.85,2605.84 8905.57,2630.08 " fill="none" id="C_0001029063960859366412-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8904.31,2634.93,8910.4486,2627.2282,8905.5698,2630.0913,8902.7066,2625.2125,8904.31,2634.93" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="9016.5" cy="2110.5664" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="9023.5" y="2114.5669">msgBuffer_</text><!--MD5=[78f71baf9803b06041c9b46669fccd94]
link C_0001727349338344491225 to C_0000920759514274339356--><path d="M6026.06,1074.03 C6034.49,1152.15 6062.57,1305.37 6155.5,1388 C6309.84,1525.25 6412.1,1429.06 6607.5,1496 C6611.65,1497.42 6615.8,1498.86 6619.97,1500.32 " fill="none" id="C_0001727349338344491225-&gt;C_0000920759514274339356" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6626.6307" cy="1502.6843" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6619.0915" x2="6634.17" y1="1500.0086" y2="1505.36"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6629.3064" x2="6623.955" y1="1495.145" y2="1510.2236"/><!--MD5=[9f93512b35f80f1a2f167b1f856ddeaf]
link C_0000971024972307079851 to C_0001897340460211641725--><path d="M6953.17,3563.21 C6997.09,3615.64 7046.15,3674.2 7089.44,3725.87 " fill="none" id="C_0000971024972307079851-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7092.81,3729.9,7090.0866,3720.4352,7089.595,3726.0706,7083.9596,3725.5791,7092.81,3729.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4383e7ca624d511b6ccdf6f495e41e50]
reverse link C_0001159823987743494688 to C_0000971024972307079851--><path d="M3811.67,80.93 C3937.41,88.76 4190.78,117.5 4373.5,223 C4992.85,580.6 4870.49,1019.64 5483.5,1388 C5593.86,1454.32 5636.84,1437.93 5762.5,1466 C5801.65,1474.75 5913.27,1466.54 5940.5,1496 C6015.61,1577.25 5905.47,1914.55 5984.5,1992 C6054.18,2060.29 6353.05,1953.48 6422.5,2022 C6507.58,2105.93 6388.99,2467.03 6466.5,2558 C6523.2,2624.54 6572.19,2585.92 6657.5,2605 C6723.42,2619.74 6763.04,2583.29 6806.5,2635 C6882.98,2725.99 6863.45,3060.34 6843.98,3258.93 " fill="none" id="C_0001159823987743494688&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3811.1,87.91,3791.53,79.79,3811.89,73.93,3811.1,87.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5928.11,2558.17 C5950.12,2723.37 5962.83,2981.67 5873.5,3182 C5757.73,3441.62 5486.02,3632.06 5280.13,3745.52 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5275.58,3748.02,5285.3921,3747.1704,5279.9568,3745.6027,5281.5245,3740.1674,5275.58,3748.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5405.74,2484.82 C5257.87,2523.25 5123.78,2573.53 5082.5,2635 C5008.47,2745.23 5017.19,3096.21 5017.5,3229 C5017.82,3363.45 5018.5,3513.82 5019.14,3634.89 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5019.17,3639.91,5023.1185,3630.8873,5019.1414,3634.9101,5015.1186,3630.933,5019.17,3639.91" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5020.5" y="3218.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5030.5" y="3225.0669">loop_</text><!--MD5=[eb01460c054e4f5a23a3f6fb9ff6d2b9]
link C_0001423170502760786790 to C_0001390130774830223499--><path d="M5405.66,2506.58 C5287.01,2543.38 5183.21,2587.21 5144.5,2635 C5136.7,2644.63 5075.83,3279.76 5042.37,3634.54 " fill="none" id="C_0001423170502760786790-&gt;C_0001390130774830223499-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5041.88,3639.75,5046.7118,3631.1678,5042.352,3634.7723,5038.7475,3630.4126,5041.88,3639.75" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5085.5" y="3218.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="5095.5" y="3225.0669">ioLoops_</text><!--MD5=[b07444704e48ca685978c93805246894]
link C_0001423170502760786790 to C_0001897340460211641725--><path d="M6391.16,2555.53 C6394.28,2556.36 6397.4,2557.19 6400.5,2558 C6503.53,2585.03 6530.82,2585.35 6635.5,2605 C6711.34,2619.23 6744.28,2589.37 6806.5,2635 C7027.39,2797 6931.6,2958.87 7090.5,3182 C7117.85,3220.41 7144.43,3215.87 7163.5,3259 C7229.25,3407.72 7232.36,3596.83 7224.3,3724.56 " fill="none" id="C_0001423170502760786790-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7223.96,3729.83,7228.5432,3721.1125,7224.2888,3724.8408,7220.5605,3720.5864,7223.96,3729.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M5405.83,2448.17 C5270.03,2476.88 5126.6,2520.81 5004.5,2588 C4896.61,2647.38 4801.84,2755.27 4745.13,2829.11 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4741.79,2833.48,4750.4282,2828.749,4744.8219,2829.5042,4744.0668,2823.8979,4741.79,2833.48" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2eb424d062d63a3383348c9c8dc2a56f]
link C_0001423170502760786790 to C_0002061035340998974559--><path d="M5405.92,2489.84 C5288.51,2512.43 5163.59,2536.26 5047.5,2558 C4974.24,2571.72 4943.86,2545.69 4882.5,2588 C4798.19,2646.13 4744.42,2754.24 4715.62,2828.48 " fill="none" id="C_0001423170502760786790-&gt;C_0002061035340998974559-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4713.76,2833.32,4720.7285,2826.3601,4715.5578,2828.6544,4713.2635,2823.4837,4713.76,2833.32" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4885.5" y="2594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="4895.5" y="2601.0669">loopPoolPtr_</text><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M6391.18,2540.17 C6424.27,2547.06 6457.26,2553.12 6489.5,2558 C6710.64,2591.48 7272.17,2576.01 7495.5,2588 C7592.99,2593.23 7617.02,2599.64 7714.5,2605 C7765.89,2607.83 8595.7,2609.65 8640.5,2635 C8645.1,2637.6 8649.59,2640.37 8653.99,2643.31 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8658.35,2646.29,8653.1997,2637.8951,8654.2298,2643.4574,8648.6675,2644.4874,8658.35,2646.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2d3a57f309005e3c5e7a003b9af1a6f3]
link C_0001423170502760786790 to C_0001289495020269537351--><path d="M6391.16,2540.3 C6424.26,2547.16 6457.25,2553.18 6489.5,2558 C6740.35,2595.52 7377.83,2565.76 7630.5,2588 C7681.09,2592.45 7692.92,2600.37 7743.5,2605 C7793.15,2609.55 8597.12,2610.43 8640.5,2635 C8645.09,2637.6 8649.59,2640.38 8653.98,2643.32 " fill="none" id="C_0001423170502760786790-&gt;C_0001289495020269537351-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="8658.34,2646.3,8653.1762,2637.9134,8654.2152,2643.474,8648.6546,2644.5131,8658.34,2646.3" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7746.5" y="2594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="7756.5" y="2601.0669">recvMessageCallback_</text><!--MD5=[e4cf3da0efa4c24e1326f4e1327196a8]
link C_0001423170502760786790 to C_0002100370281243872283--><path d="M6391.23,2539.82 C6424.31,2546.8 6457.28,2552.97 6489.5,2558 C6826.57,2610.63 6916.91,2555.46 7256.5,2588 C7306.18,2592.76 7317.86,2599.8 7367.5,2605 C7484.6,2617.26 7784.84,2597.65 7896.5,2635 C7960.67,2656.46 8024.29,2690.84 8081.54,2728.05 " fill="none" id="C_0001423170502760786790-&gt;C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="8086,2730.96,8080.6646,2722.6815,8081.8179,2728.2195,8076.2799,2729.3728,8086,2730.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[79d79e4b28f578896d460465838bfe49]
reverse link C_0001423170502760786790 to C_0002100370281243872283--><path d="M6404.11,2541.91 C6432.87,2547.95 6461.47,2553.38 6489.5,2558 C6724.92,2596.79 6787.77,2567.71 7025.5,2588 C7091.47,2593.63 7107.49,2599.85 7173.5,2605 C7333.82,2617.52 7743.62,2585.16 7896.5,2635 C7962.91,2656.65 8028.63,2692.39 8087.3,2730.97 " fill="none" id="C_0001423170502760786790&lt;-C_0002100370281243872283" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6391.34,2539.19,6396.3727,2544.3545,6403.0756,2541.6953,6398.0429,2536.5308,6391.34,2539.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7176.5" y="2594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="7186.5" y="2601.0669">policyPtr_</text><!--MD5=[e5c86d802f079d778b52f4045065e5cf]
reverse link C_0001423170502760786790 to C_0000184886692180276257--><path d="M6091.07,2567.18 C6201.51,2666.5 6332.78,2784.55 6408.09,2852.27 " fill="none" id="C_0001423170502760786790&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6081.13,2558.24,6082.9156,2565.2265,6090.0515,2566.2654,6088.2659,2559.2789,6081.13,2558.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6135.5" y="2594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="6145.5" y="2601.0669">acceptorPtr_</text><!--MD5=[62cc0d66805f038c6efb87fc9a2c0559]
reverse link C_0001423170502760786790 to C_0000964465843177067305--><path d="M5765.83,2568.68 C5690.64,2667.69 5601.62,2784.89 5550.44,2852.27 " fill="none" id="C_0001423170502760786790&lt;-C_0000964465843177067305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5773.76,2558.24,5766.9469,2560.6026,5766.5074,2567.8003,5773.3204,2565.4377,5773.76,2558.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5752.5" y="2594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="5762.5" y="2601.0669">timingWheelMap_</text><!--MD5=[e097413d72e14ba218428e784ac5e60d]
reverse link C_0001423170502760786790 to C_0000626107303889580949--><path d="M6403.89,2537.46 C6432.79,2544.66 6461.48,2551.56 6489.5,2558 C6602.67,2583.99 6632.02,2585.59 6746.5,2605 C6831.65,2619.44 6863.69,2591.84 6938.5,2635 C7044.88,2696.38 7120.36,2830.56 7147.46,2884.43 " fill="none" id="C_0001423170502760786790&lt;-C_0000626107303889580949" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6391.05,2534.24,6395.8979,2539.5784,6402.6902,2537.1566,6397.8423,2531.8183,6391.05,2534.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6749.5" y="2594.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="92" x="6759.5" y="2601.0669">sslContextPtr_</text><!--MD5=[8568a3e642e5ec6ac1e7b6fbf3363c4a]
reverse link C_0001159823987743494688 to C_0001423170502760786790--><path d="M3811.7,78.03 C3901.03,81.87 4048.4,100.42 4146.5,176 C4960.14,802.84 4432.07,1597.71 5265.5,2198 C5308.29,2228.82 5356.07,2254.82 5405.67,2276.74 " fill="none" id="C_0001159823987743494688&lt;-C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3811.42,85.02,3791.66,77.37,3811.87,71.03,3811.42,85.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[41719d421dd9fac5f1bf843a27c4c912]
link C_0002061035340998974559 to C_0001390130774830223499--><path d="M4735.5,2983.67 C4776.64,3052.75 4836.05,3159.71 4873.5,3259 C4919.08,3379.83 4954,3519.58 4978.35,3634.71 " fill="none" id="C_0002061035340998974559-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4979.43,3639.83,4981.4958,3630.2002,4978.4028,3634.9366,4973.6664,3631.8437,4979.43,3639.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e7b4e24b37d0abebf8be96c96a629838]
reverse link C_0002061035340998974559 to C_0001280612521485369958--><path d="M4590.65,2991.76 C4516.14,3050.72 4409.5,3128.79 4306.5,3182 C4214.09,3229.74 4182.12,3220.48 4085.5,3259 C4011.57,3288.47 3930.15,3325.08 3866.08,3354.87 " fill="none" id="C_0002061035340998974559&lt;-C_0001280612521485369958" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4600.94,2983.57,4593.7537,2984.1676,4591.5413,2991.0309,4598.7276,2990.4333,4600.94,2983.57" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4238.5" y="3218.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="4248.5" y="3225.0669">loopThreadVector_</text><!--MD5=[d6b6b59fa13d60a29127a6e27e9507ad]
reverse link C_0001159823987743494688 to C_0002061035340998974559--><path d="M3811.31,89.93 C3864.72,102.31 3933.29,127.07 3973.5,176 C4038.78,255.44 4303.77,1892.72 4330.5,1992 C4355.68,2085.51 4367.5,2107.32 4401.5,2198 C4489.25,2432.01 4603.44,2704.96 4657.91,2833.45 " fill="none" id="C_0001159823987743494688&lt;-C_0002061035340998974559" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3809.79,96.76,3791.68,85.77,3812.69,83.07,3809.79,96.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[70ff9873eb8ad20d6f04092c12d73f6d]
link C_0001489562721151066050 to C_0001423170502760786790--><path d="M5229.86,1774.57 C5232.44,1853.98 5250.35,2074.27 5367.5,2198 C5376.02,2206.99 5384.98,2215.57 5394.33,2223.75 " fill="none" id="C_0001489562721151066050-&gt;C_0001423170502760786790" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5399.8137" cy="2228.3834" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5393.6973" x2="5405.93" y1="2223.2268" y2="2233.54"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5404.9703" x2="5394.6571" y1="2222.2671" y2="2234.4997"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M6386.52,2964.62 C6309.99,3019.28 6198.03,3109.51 6128.5,3212 C6025.66,3363.58 6150.94,3480.4 6021.5,3610 C5918.25,3713.38 5541.35,3789.63 5280.7,3831.44 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="5275.72,3832.23,5285.2446,3834.7363,5280.6554,3831.4289,5283.9628,3826.8397,5275.72,3832.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[86e4afc6c8824a9fc6213e13e32aa04b]
link C_0000184886692180276257 to C_0001390130774830223499--><path d="M6413.49,2964.72 C6350.61,3029.68 6249.67,3143.41 6190.5,3259 C6114.19,3408.06 6201.27,3531.21 6053.5,3610 C5809.33,3740.19 5497.5,3806.34 5280.63,3838.83 " fill="none" id="C_0000184886692180276257-&gt;C_0001390130774830223499-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5275.52,3839.59,5285.006,3842.2388,5280.4669,3838.8629,5283.8427,3834.3238,5275.52,3839.59" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6196.5,3406.5664,6200.5,3410.5664,6196.5,3414.5664,6192.5,3410.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="6203.5" y="3415.5669">loop_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M6468.35,2964.76 C6466.47,3113.72 6469.8,3518.52 6558.5,3610 C6664.58,3719.4 6822.89,3783.54 6956.71,3820.51 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6961.86,3821.92,6954.2436,3815.6757,6957.0392,3820.5936,6952.1213,3823.3891,6961.86,3821.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c784de78d9952d7865b5a70c424b4fdd]
reverse link C_0000184886692180276257 to C_0001897340460211641725--><path d="M6479.98,2978.01 C6504.64,3136.11 6566.97,3516.52 6602.5,3563 C6691.11,3678.92 6835.85,3754.07 6961.66,3800.76 " fill="none" id="C_0000184886692180276257&lt;-C_0001897340460211641725" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6477.92,2964.76,6474.8909,2971.304,6479.7665,2976.6171,6482.7956,2970.073,6477.92,2964.76" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6608.5,3406.5664,6612.5,3410.5664,6608.5,3414.5664,6604.5,3410.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="6615.5" y="3415.5669">addr_</text><!--MD5=[b639857e5475f81f4ff1548e6e9231a5]
link C_0000184886692180276257 to C_0001897340460211641725--><path d="M6426.96,2964.53 C6339.81,3084.44 6160.2,3373.7 6296.5,3563 C6374.98,3671.99 6715.05,3764.46 6956.9,3818.12 " fill="none" id="C_0000184886692180276257-&gt;C_0001897340460211641725-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6961.88,3819.22,6953.9457,3813.385,6956.9961,3818.149,6952.2321,3821.1993,6961.88,3819.22" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6302.5,3406.5664,6306.5,3410.5664,6302.5,3414.5664,6298.5,3410.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="157" x="6309.5" y="3415.5669">newConnectionCallback_</text><!--MD5=[e8fe61c41339d09dde9ef6337f1ee4da]
reverse link C_0000184886692180276257 to C_0000971024972307079851--><path d="M6516.69,2975.66 C6567.87,3047.41 6651.28,3164.35 6718.67,3258.82 " fill="none" id="C_0000184886692180276257&lt;-C_0000971024972307079851" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6509.07,2964.97,6509.2942,2972.1776,6516.0336,2974.7428,6515.8094,2967.5352,6509.07,2964.97" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6695.5,3216.0664,6699.5,3220.0664,6695.5,3224.0664,6691.5,3220.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="6702.5" y="3225.0669">sock_</text><!--MD5=[8c1b38c7aff077663d06c14a34e64308]
reverse link C_0000184886692180276257 to C_0000764690828649606524--><path d="M6398.04,2973.43 C6319.59,3039.22 6186.84,3138.12 6052.5,3182 C5675.13,3305.27 5557.12,3211.72 5160.5,3229 C5112.13,3231.11 4332.49,3236.72 4289.5,3259 C4286.55,3260.53 4001.56,3636.85 4000.5,3640 C3931.93,3843.86 3925.8,4425.69 4041.5,4607 C4170.74,4809.53 4460.53,4869.68 4651.42,4886.79 " fill="none" id="C_0000184886692180276257&lt;-C_0000764690828649606524" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6408.27,2964.78,6401.1064,2965.6067,6399.1144,2972.5372,6406.2779,2971.7105,6408.27,2964.78" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4006.5,3864.5664,4010.5,3868.5664,4006.5,3872.5664,4002.5,3868.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="102" x="4013.5" y="3873.5669">acceptChannel_</text><!--MD5=[1b591d8061dde3298aee3c1cc4062114]
reverse link C_0001159823987743494688 to C_0000184886692180276257--><path d="M3811.39,89.78 C3887.1,105.8 3999.3,142.34 4055.5,223 C4176.55,396.74 4640.01,1820.7 4764.5,1992 C4860.78,2124.48 4925.68,2118.54 5047.5,2228 C5204.37,2368.97 5198.87,2465.7 5388.5,2558 C5526.06,2624.96 5577.52,2587.48 5729.5,2605 C5872.72,2621.51 5916.38,2587.5 6052.5,2635 C6191.31,2683.44 6329.65,2787.71 6406.94,2852.3 " fill="none" id="C_0001159823987743494688&lt;-C_0000184886692180276257" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3809.83,96.61,3791.56,85.88,3812.54,82.87,3809.83,96.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[866f584d0c7c542edfe640427d21421e]
reverse link C_0001159823987743494688 to C_0002026475275429760163--><path d="M3811.8,79.39 C4419.3,90.38 8416.41,164.6 8948.5,223 C9330.52,264.93 9797.5,2.69 9797.5,387 C9797.5,387 9797.5,387 9797.5,4894.5 C9797.5,5145 8003.69,5223.01 7293.79,5244.07 " fill="none" id="C_0001159823987743494688&lt;-C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3811.5,86.38,3791.63,79.02,3811.75,72.38,3811.5,86.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[23bf54152e2b5929b2cc6ad88b255e18]
link C_0000157340721173102239 to C_0002026475275429760163--><path d="M7199.21,4924.28 C7169.53,4975.39 7107.76,5081.78 7062.74,5159.32 " fill="none" id="C_0000157340721173102239-&gt;C_0002026475275429760163" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7060.07,5163.91,7068.0493,5158.1367,7062.5814,5159.5865,7061.1316,5154.1185,7060.07,5163.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[bbe4805b6a3200e131be787a1ce0da64]
reverse link C_0001159823987743494688 to C_0000630185754256426097--><path d="M3722.65,120.79 C3718.04,137.91 3712.83,157.84 3708.5,176 C3668.75,342.61 3693.6,394.57 3628.5,553 C3564.86,707.87 3449.87,867.66 3381.62,955.42 " fill="none" id="C_0001159823987743494688&lt;-C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3715.95,118.73,3727.97,101.28,3729.46,122.42,3715.95,118.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f292eacf5c00648cb4d50d7f5f818066]
link C_0001453238540802541239 to C_0000630185754256426097--><path d="M3282.27,450.7 C3291.12,565.32 3310.1,811.13 3320.07,940.3 " fill="none" id="C_0001453238540802541239-&gt;C_0000630185754256426097" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3320.6323" cy="947.4739" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3320.0147" x2="3321.25" y1="939.4978" y2="955.45"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3328.6085" x2="3312.6562" y1="946.8562" y2="948.0915"/><!--MD5=[96ea509b2ad1947f9d7bb54a63b044ef]
reverse link C_0001453238540802541239 to C_0002032009232244826154--><path d="M3151.96,457.63 C3079.94,504.52 2995.84,573.91 2954.5,661 C2861.85,856.15 2895.54,2390.92 2924.5,2605 C3002.99,3185.16 3218.82,3843.27 3336.84,4174.79 " fill="none" id="C_0001453238540802541239&lt;-C_0002032009232244826154" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3162.95,450.59,3155.7401,450.4603,3152.8473,457.0658,3160.0572,457.1954,3162.95,450.59" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2930.5,2592.0664,2934.5,2596.0664,2930.5,2600.0664,2926.5,2596.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="2937.5" y="2601.0669">creationDate_</text><!--MD5=[ab1296281abef24fab0757a8cbe429c3]
reverse link C_0001159823987743494688 to C_0001453238540802541239--><path d="M3683.21,112.68 C3607.1,164.14 3463.09,261.51 3368.72,325.32 " fill="none" id="C_0001159823987743494688&lt;-C_0001453238540802541239" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3679.66,106.63,3700.15,101.23,3687.5,118.23,3679.66,106.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afcd30e82584d6dad1d68d23a951a309]
link C_0001166594284895168875 to C_0001016092423778930091--><!--MD5=[0d0106a0d39a3bad9af96b9857a9e617]
link C_0001016092423778930091 to C_0002131890502232898697--><!--MD5=[6e6969087e7c4b4ba205f131a1355bc4]
link C_0001166594284895168875 to C_0001189407896771082466--><!--MD5=[7472b64d3d15154068f18b5db4215155]
link C_0001189407896771082466 to C_0000394452884449343416--><!--MD5=[ba89d62a9ec011d2780a8d90bc6b1586]
link C_0000394452884449343416 to C_0000026148367911088234--><!--MD5=[6734e8af993b5af102485ea654dc41a5]
link C_0001189407896771082466 to C_0001271167815253259069--><!--MD5=[2e4446f6895758fcb710ff316c53293e]
@startuml
class "utils::Hash128" as C_0001166594284895168875
class C_0001166594284895168875 {
+bytes : unsigned char[16]
}
class "utils::Hash160" as C_0001016092423778930091
class C_0001016092423778930091 {
+bytes : unsigned char[20]
}
class "utils::Hash256" as C_0000080756732781028581
class C_0000080756732781028581 {
+bytes : unsigned char[32]
}
class "utils::RngState" as C_0000195316585713148470
class C_0000195316585713148470 {
+secret : utils::Hash256
+prev : utils::Hash256
+time : int64_t
+counter : uint64_t
}
class "NonCopyable" as C_0001159823987743494688
class C_0001159823987743494688 {
}
class "Date" as C_0002032009232244826154
class C_0002032009232244826154 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
{static} +date() : const Date
{static} +now() : const Date
{static} +timezoneOffset() : int64_t
+after(double second) const : const Date
+roundSecond() const : const Date
+roundDay() const : const Date
+~Date() : void
+operator==(const Date & date) const : bool
+operator!=(const Date & date) const : bool
+operator<(const Date & date) const : bool
+operator>(const Date & date) const : bool
+operator>=(const Date & date) const : bool
+operator<=(const Date & date) const : bool
+microSecondsSinceEpoch() const : int64_t
+secondsSinceEpoch() const : int64_t
+tmStruct() const : struct tm
+toFormattedString(bool showMicroseconds) const : std::string
+toCustomedFormattedString(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
+toCustomedFormattedStringLocal(const std::string & fmtStr, bool showMicroseconds = false) const : std::string
+toDbStringLocal() const : std::string
+toDbString() const : std::string
{static} +fromDbStringLocal(const std::string & datetime) : Date
{static} +fromDbString(const std::string & datetime) : Date
+toCustomedFormattedString(const std::string & fmtStr, char * str, size_t len) const : void
+isSameSecond(const Date & date) const : bool
+swap(Date & that) : void
}
class "detail::FixedBuffer<int SIZE>" as C_0000111393647775817392
class C_0000111393647775817392 {
+FixedBuffer<SIZE>() : void
+~FixedBuffer<SIZE>() : void
+append(const char * buf, size_t len) : bool
+data() const : const char *
+length() const : int
+current() : char *
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : const char *
+setCookie(void (*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<detail::kSmallBuffer>" as C_0000510041652600390686
class C_0000510041652600390686 {
}
class "detail::FixedBuffer<4000>" as C_0001754247125147083756
class C_0001754247125147083756 {
}
class "detail::FixedBuffer<4000000>" as C_0001042478360162272930
class C_0001042478360162272930 {
}
class "LogStream" as C_0001930690020065325250
class C_0001930690020065325250 {
+operator<<(bool v) : LogStream::self &
+operator<<(short ) : LogStream::self &
+operator<<(unsigned short ) : LogStream::self &
+operator<<(int ) : LogStream::self &
+operator<<(unsigned int ) : LogStream::self &
+operator<<(long ) : LogStream::self &
+operator<<(unsigned long ) : LogStream::self &
+operator<<(const long long & ) : LogStream::self &
+operator<<(const unsigned long long & ) : LogStream::self &
+operator<<(const void * ) : LogStream::self &
+operator<<(float & v) : LogStream::self &
+operator<<(const double & ) : LogStream::self &
+operator<<(const long double & v) : LogStream::self &
+operator<<(char v) : LogStream::self &
+operator<<(char * str) : LogStream::self &
+operator<<(const char * str) : LogStream::self &
+operator<<(const unsigned char * str) : LogStream::self &
+operator<<(const std::string & v) : LogStream::self &
+append(const char * data, size_t len) : void
+bufferData() const : const char *
+bufferLength() const : size_t
+resetBuffer() : void
+operator<<<int N>(const char (&)[N] buf) : LogStream::self &
}
class "Fmt" as C_0002131890502232898697
class C_0002131890502232898697 {
+data() const : const char *
+length() const : int
+Fmt<T>(const char * fmt, T val) : void
}
class "Logger" as C_0002053752992472264214
class C_0002053752992472264214 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, const char * func) : void
+Logger() : void
+Logger(Logger::LogLevel level) : void
+Logger(bool isSysErr) : void
+~Logger() : void
+setIndex(int index) : Logger &
+stream() : LogStream &
{static} +setOutputFunction(std::function<void (const char *,const uint64_t)> outputFunc, std::function<void ()> flushFunc, int index = -1) : void
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +logLevel() : Logger::LogLevel
{static} +displayLocalTime() : bool
{static} +setDisplayLocalTime(bool showLocalTime) : void
}
enum "Logger::LogLevel" as C_0002131283840621188296
enum C_0002131283840621188296 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "Logger::SourceFile" as C_0000979080797342806546
class C_0000979080797342806546 {
+SourceFile(const char * filename = nullptr) : void
+SourceFile<int N>(const char (&)[N] arr) : void
+data_ : const char *
+size_ : int
}
class "RawLogger" as C_0000716430590791918928
class C_0000716430590791918928 {
+~RawLogger() : void
+setIndex(int index) : RawLogger &
+stream() : LogStream &
}
class "MsgBuffer" as C_0001289495020269537351
class C_0001289495020269537351 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
+peek() const : const char *
+beginWrite() const : const char *
+beginWrite() : char *
+peekInt8() const : uint8_t
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+read(size_t len) : std::string
+readInt8() : uint8_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+swap(MsgBuffer & buf) : void
+readableBytes() const : size_t
+writableBytes() const : size_t
+append(const MsgBuffer & buf) : void
+append(const char * buf, size_t len) : void
+append(const std::string & buf) : void
+appendInt8(const uint8_t b) : void
+appendInt16(const uint16_t s) : void
+appendInt32(const uint32_t i) : void
+appendInt64(const uint64_t l) : void
+addInFront(const char * buf, size_t len) : void
+addInFrontInt8(const uint8_t b) : void
+addInFrontInt16(const uint16_t s) : void
+addInFrontInt32(const uint32_t i) : void
+addInFrontInt64(const uint64_t l) : void
+retrieveAll() : void
+retrieve(size_t len) : void
+readFd(int fd, int * retErrno) : ssize_t
+retrieveUntil(const char * end) : void
+findCRLF() const : const char *
+ensureWritableBytes(size_t len) : void
+hasWritten(size_t len) : void
+unwrite(size_t offset) : void
+operator[](size_t offset) const : const char &
+operator[](size_t offset) : char &
+append<int N>(const char (&)[N] buf) : void
}
abstract "TaskQueue" as C_0000684873245997977544
abstract C_0000684873245997977544 {
{abstract} +runTaskInQueue(const std::function<void ()> & task) = 0 : void
{abstract} +runTaskInQueue(std::function<void ()> && task) = 0 : void
+getName() const : std::string
+syncTaskInQueue(const std::function<void ()> & task) : void
+~TaskQueue() : void
}
class "MpscQueue<T>" as C_0000912667184903365399
class C_0000912667184903365399 {
+MpscQueue<T>() : void
+~MpscQueue<T>() : void
+enqueue(T && input) : void
+enqueue(const T & input) : void
+dequeue(T & output) : bool
+empty() : bool
}
class "MpscQueue::BufferNode" as C_0000223701637084171141
class C_0000223701637084171141 {
+BufferNode() = default : void
+BufferNode(const T & data) : void
+BufferNode(T && data) : void
+dataPtr_ : T *
+next_ : std::atomic<BufferNode *>
}
class "MpscQueue<std::function<void()>>" as C_0002185746167032660910
class C_0002185746167032660910 {
}
class "EventLoop" as C_0001390130774830223499
class C_0001390130774830223499 {
+EventLoop() : void
+~EventLoop() : void
+loop() : void
+quit() : void
+assertInLoopThread() : void
+resetTimerQueue() : void
+resetAfterFork() : void
+isInLoopThread() const : bool
{static} +getEventLoopOfCurrentThread() : EventLoop *
+queueInLoop(const Func & f) : void
+queueInLoop(Func && f) : void
+runAt(const Date & time, const Func & cb) : TimerId
+runAt(const Date & time, Func && cb) : TimerId
+runAfter(double delay, const Func & cb) : TimerId
+runAfter(double delay, Func && cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, const Func & cb) : TimerId
+runAfter(const std::chrono::duration<double> & delay, Func && cb) : TimerId
+runEvery(double interval, const Func & cb) : TimerId
+runEvery(double interval, Func && cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, const Func & cb) : TimerId
+runEvery(const std::chrono::duration<double> & interval, Func && cb) : TimerId
+invalidateTimer(TimerId id) : void
+moveToCurrentThread() : void
+updateChannel(Channel * chl) : void
+removeChannel(Channel * chl) : void
+index() : size_t
+setIndex(size_t index) : void
+isRunning() : bool
+isCallingFunctions() : bool
+runOnQuit(Func && cb) : void
+runOnQuit(const Func & cb) : void
+runInLoop<Functor>(Functor && f) : void
}
class "EventLoopThread" as C_0001280612521485369958
class C_0001280612521485369958 {
+EventLoopThread(const std::string & threadName = "EventLoopThread") : void
+~EventLoopThread() : void
+wait() : void
+getLoop() const : EventLoop *
+run() : void
}
class "SerialTaskQueue" as C_0000634031134969193198
class C_0000634031134969193198 {
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+waitAllTasksFinished() : void
+SerialTaskQueue() : void
+SerialTaskQueue(const std::string & name) : void
+~SerialTaskQueue() : void
+isRuningTask() : bool
+getTaskCount() : size_t
+stop() : void
}
abstract "Poller" as C_0000300034150397884642
abstract C_0000300034150397884642 {
+Poller(EventLoop * loop) : void
+~Poller() : void
+assertInLoopThread() : void
{abstract} +poll(int timeoutMs, ChannelList * activeChannels) = 0 : void
{abstract} +updateChannel(Channel * channel) = 0 : void
{abstract} +removeChannel(Channel * channel) = 0 : void
+resetAfterFork() : void
{static} +newPoller(EventLoop * loop) : Poller *
}
class "TimerQueue" as C_0000607400095182694101
class C_0000607400095182694101 {
+TimerQueue(EventLoop * loop) : void
+~TimerQueue() : void
+addTimer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : TimerId
+addTimerInLoop(const TimerPtr & timer) : void
+invalidateTimer(TimerId id) : void
+reset() : void
}
class "Channel" as C_0000764690828649606524
class C_0000764690828649606524 {
+Channel(EventLoop * loop, int fd) : void
+setReadCallback(const Channel::EventCallback & cb) : void
+setReadCallback(Channel::EventCallback && cb) : void
+setWriteCallback(const Channel::EventCallback & cb) : void
+setWriteCallback(Channel::EventCallback && cb) : void
+setCloseCallback(const Channel::EventCallback & cb) : void
+setCloseCallback(Channel::EventCallback && cb) : void
+setErrorCallback(const Channel::EventCallback & cb) : void
+setErrorCallback(Channel::EventCallback && cb) : void
+setEventCallback(const Channel::EventCallback & cb) : void
+setEventCallback(Channel::EventCallback && cb) : void
+fd() const : int
+events() const : int
+revents() const : int
+isNoneEvent() const : bool
+disableAll() : void
+remove() : void
+ownerLoop() : EventLoop *
+enableReading() : void
+disableReading() : void
+enableWriting() : void
+disableWriting() : void
+isWriting() const : bool
+isReading() const : bool
+updateEvents(int events) : void
+tie(const std::shared_ptr<void> & obj) : void
{static} +kNoneEvent : const int
{static} +kReadEvent : const int
{static} +kWriteEvent : const int
}
class "ConcurrentTaskQueue" as C_0000295101274428145462
class C_0000295101274428145462 {
+ConcurrentTaskQueue(size_t threadNum, const std::string & name) : void
+runTaskInQueue(const std::function<void ()> & task) : void
+runTaskInQueue(std::function<void ()> && task) : void
+getName() const : std::string
+getTaskCount() : size_t
+stop() : void
+~ConcurrentTaskQueue() : void
}
class "InetAddress" as C_0001897340460211641725
class C_0001897340460211641725 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(const std::string & ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(const struct sockaddr_in & addr) : void
+InetAddress(const struct sockaddr_in6 & addr) : void
+family() const : sa_family_t
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
+isIpV6() const : bool
+isIntranetIp() const : bool
+isLoopbackIp() const : bool
+getSockAddr() const : const struct sockaddr *
+setSockAddrInet6(const struct sockaddr_in6 & addr6) : void
+ipNetEndian() const : uint32_t
+ip6NetEndian() const : const uint32_t *
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+isUnspecified() const : bool
}
class "InetAddress::()" as C_0000673025168912921705
class C_0000673025168912921705 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
enum "SSLError" as C_0000434245188016003403
enum C_0000434245188016003403 {
kSSLHandshakeError
kSSLInvalidCertificate
kSSLProtocolError
}
abstract "Certificate" as C_0001660397537883119469
abstract C_0001660397537883119469 {
+~Certificate() = default : void
{abstract} +sha1Fingerprint() const = 0 : std::string
{abstract} +sha256Fingerprint() const = 0 : std::string
{abstract} +pem() const = 0 : std::string
}
class "TLSPolicy" as C_0002100370281243872283
class C_0002100370281243872283 {
+setConfCmds(const std::vector<std::pair<std::string,std::string>> & sslConfCmds) : TLSPolicy &
+setHostname(const std::string & hostname) : TLSPolicy &
+setCertPath(const std::string & certPath) : TLSPolicy &
+setKeyPath(const std::string & keyPath) : TLSPolicy &
+setCaPath(const std::string & caPath) : TLSPolicy &
+setUseOldTLS(bool useOldTLS) : TLSPolicy &
+setAlpnProtocols(const std::vector<std::string> & alpnProtocols) : TLSPolicy &
+setAlpnProtocols(std::vector<std::string> && alpnProtocols) : TLSPolicy &
+setUseSystemCertStore(bool useSystemCertStore) : TLSPolicy &
+setValidate(bool enable) : TLSPolicy &
+setAllowBrokenChain(bool allow) : TLSPolicy &
+getConfCmds() const : const std::vector<std::pair<std::string,std::string>> &
+getHostname() const : const std::string &
+getCertPath() const : const std::string &
+getKeyPath() const : const std::string &
+getCaPath() const : const std::string &
+getUseOldTLS() const : bool
+getValidate() const : bool
+getAllowBrokenChain() const : bool
+getAlpnProtocols() const : const std::vector<std::string> &
+getAlpnProtocols() : const std::vector<std::string> &
+getUseSystemCertStore() const : bool
{static} +defaultServerPolicy(const std::string & certPath, const std::string & keyPath) : std::shared_ptr<TLSPolicy>
{static} +defaultClientPolicy(const std::string & hostname = "") : std::shared_ptr<TLSPolicy>
}
abstract "TcpConnection" as C_0002230624932100089526
abstract C_0002230624932100089526 {
+TcpConnection() = default : void
+~TcpConnection() : void
{abstract} +send(const char * msg, size_t len) = 0 : void
{abstract} +send(const void * msg, size_t len) = 0 : void
{abstract} +send(const std::string & msg) = 0 : void
{abstract} +send(std::string && msg) = 0 : void
{abstract} +send(const MsgBuffer & buffer) = 0 : void
{abstract} +send(MsgBuffer && buffer) = 0 : void
{abstract} +send(const std::shared_ptr<std::string> & msgPtr) = 0 : void
{abstract} +send(const std::shared_ptr<MsgBuffer> & msgPtr) = 0 : void
{abstract} +sendFile(const char * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t (char *,std::size_t)> callback) = 0 : void
{abstract} +localAddr() const = 0 : const InetAddress &
{abstract} +peerAddr() const = 0 : const InetAddress &
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) = 0 : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
{abstract} +shutdown() = 0 : void
{abstract} +forceClose() = 0 : void
{abstract} +getLoop() = 0 : EventLoop *
+setContext(const std::shared_ptr<void> & context) : void
+setContext(std::shared_ptr<void> && context) : void
{abstract} +applicationProtocol() const = 0 : std::string
+hasContext() const : bool
+clearContext() : void
{abstract} +keepAlive() = 0 : void
{abstract} +isKeepAlive() = 0 : bool
{abstract} +bytesSent() const = 0 : size_t
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +getRecvBuffer() = 0 : MsgBuffer *
{abstract} +peerCertificate() const = 0 : CertificatePtr
{abstract} +sniName() const = 0 : std::string
{abstract} +startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) = 0 : void
+startClientEncryption(std::function<void (const TcpConnectionPtr &)> && callback, bool useOldTLS = false, bool validateCert = true, const std::string & hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}) : void
+setValidationPolicy(TLSPolicy && policy) : void
+setRecvMsgCallback(const RecvMessageCallback & cb) : void
+setRecvMsgCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setCloseCallback(const CloseCallback & cb) : void
+setCloseCallback(CloseCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
{abstract} +connectEstablished() = 0 : void
{abstract} +connectDestroyed() = 0 : void
{abstract} +enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) = 0 : void
+getContext<T>() : std::shared_ptr<T>
}
class "TcpClient" as C_0001156367011091191681
class C_0001156367011091191681 {
+TcpClient(EventLoop * loop, const InetAddress & serverAddr, const std::string & nameArg) : void
+~TcpClient() : void
+connect() : void
+disconnect() : void
+stop() : void
+connection() const : TcpConnectionPtr
+getLoop() const : EventLoop *
+retry() const : bool
+enableRetry() : void
+name() const : const std::string &
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setConnectionErrorCallback(const ConnectionErrorCallback & cb) : void
+setMessageCallback(const RecvMessageCallback & cb) : void
+setMessageCallback(RecvMessageCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+setSSLErrorCallback(const SSLErrorCallback & cb) : void
+setSSLErrorCallback(SSLErrorCallback && cb) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & certPath = "", const std::string & keyPath = "", const std::string & caPath = "") : void
+enableSSL(TLSPolicyPtr policy) : void
}
class "TcpClient::IgnoreSigPipe" as C_0001278908569830571044
class C_0001278908569830571044 {
+IgnoreSigPipe() : void
}
abstract "TLSProvider" as C_0000464040622375950341
abstract C_0000464040622375950341 {
+TLSProvider(TcpConnection * conn, TLSPolicyPtr policy, SSLContextPtr ctx) : void
+~TLSProvider() = default : void
{abstract} +recvData(MsgBuffer * buffer) = 0 : void
{abstract} +sendData(const char * ptr, size_t size) = 0 : ssize_t
{abstract} +close() = 0 : void
{abstract} +startEncryption() = 0 : void
+sendBufferedData() : bool
+getBufferedData() : MsgBuffer &
+appendToWriteBuffer(const char * ptr, size_t size) : void
+setWriteCallback(TLSProvider::WriteCallback cb) : void
+setErrorCallback(TLSProvider::ErrorCallback cb) : void
+setHandshakeCallback(TLSProvider::HandshakeCallback cb) : void
+setMessageCallback(TLSProvider::MessageCallback cb) : void
+setCloseCallback(TLSProvider::CloseCallback cb) : void
+getRecvBuffer() : MsgBuffer &
+peerCertificate() const : const CertificatePtr &
+applicationProtocol() const : const std::string &
+sniName() const : const std::string &
}
class "Connector" as C_0001706043459252151324
class C_0001706043459252151324 {
+Connector(EventLoop * loop, const InetAddress & addr, bool retry = true) : void
+Connector(EventLoop * loop, InetAddress && addr, bool retry = true) : void
+~Connector() : void
+setNewConnectionCallback(const Connector::NewConnectionCallback & cb) : void
+setNewConnectionCallback(Connector::NewConnectionCallback && cb) : void
+setErrorCallback(const Connector::ConnectionErrorCallback & cb) : void
+setErrorCallback(Connector::ConnectionErrorCallback && cb) : void
+serverAddress() const : const InetAddress &
+start() : void
+restart() : void
+stop() : void
}
enum "Connector::Status" as C_0000000982196670174162
enum C_0000000982196670174162 {
Disconnected
Connecting
Connected
}
class "TimingWheel" as C_0000964465843177067305
class C_0000964465843177067305 {
+TimingWheel(EventLoop * loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
+getLoop() : EventLoop *
+~TimingWheel() : void
}
class "TimingWheel::CallbackEntry" as C_0002013739811805694444
class C_0002013739811805694444 {
+CallbackEntry(std::function<void ()> cb) : void
+~CallbackEntry() : void
}
class "TcpConnectionImpl" as C_0000920759514274339356
class C_0000920759514274339356 {
+TcpConnectionImpl(EventLoop * loop, int socketfd, const InetAddress & localAddr, const InetAddress & peerAddr, TLSPolicyPtr policy = nullptr, SSLContextPtr ctx = nullptr) : void
+~TcpConnectionImpl() : void
+send(const char * msg, size_t len) : void
+send(const void * msg, size_t len) : void
+send(const std::string & msg) : void
+send(std::string && msg) : void
+send(const MsgBuffer & buffer) : void
+send(MsgBuffer && buffer) : void
+send(const std::shared_ptr<std::string> & msgPtr) : void
+send(const std::shared_ptr<MsgBuffer> & msgPtr) : void
+sendFile(const char * fileName, size_t offset = 0, size_t length = 0) : void
+sendFile(const wchar_t * fileName, size_t offset = 0, size_t length = 0) : void
+sendStream(std::function<std::size_t (char *,std::size_t)> callback) : void
+localAddr() const : const InetAddress &
+peerAddr() const : const InetAddress &
+connected() const : bool
+disconnected() const : bool
+setHighWaterMarkCallback(const HighWaterMarkCallback & cb, size_t markLen) : void
+keepAlive() : void
+isKeepAlive() : bool
+setTcpNoDelay(bool on) : void
+shutdown() : void
+forceClose() : void
+getLoop() : EventLoop *
+bytesSent() const : size_t
+bytesReceived() const : size_t
+isSSLConnection() const : bool
+connectEstablished() : void
+connectDestroyed() : void
+getRecvBuffer() : MsgBuffer *
+applicationProtocol() const : std::string
+peerCertificate() const : CertificatePtr
+sniName() const : std::string
+startEncryption(TLSPolicyPtr policy, bool isServer, std::function<void (const TcpConnectionPtr &)> upgradeCallback = nullptr) : void
+enableKickingOff(size_t timeout, const std::shared_ptr<TimingWheel> & timingWheel) : void
}
class "TcpConnectionImpl::KickoffEntry" as C_0002266895444343633259
class C_0002266895444343633259 {
+KickoffEntry(const std::weak_ptr<TcpConnection> & conn) : void
+reset() : void
+~KickoffEntry() : void
}
class "TcpConnectionImpl::BufferNode" as C_0001029063960859366412
class C_0001029063960859366412 {
+isFile() const : bool
+~BufferNode() : void
+sendFd_ : int
+offset_ : off_t
+fileBytesToSend_ : ssize_t
+streamCallback_ : std::function<std::size_t (char *,std::size_t)>
+nDataWritten_ : std::size_t
+msgBuffer_ : std::shared_ptr<MsgBuffer>
+closeConnection_ : bool
}
enum "TcpConnectionImpl::ConnStatus" as C_0001727349338344491225
enum C_0001727349338344491225 {
Disconnected
Connecting
Connected
Disconnecting
}
class "Socket" as C_0000971024972307079851
class C_0000971024972307079851 {
{static} +createNonblockingSocketOrDie(int family) : int
{static} +getSocketError(int sockfd) : int
{static} +connect(int sockfd, const InetAddress & addr) : int
{static} +isSelfConnect(int sockfd) : bool
+Socket(int sockfd) : void
+~Socket() : void
+bindAddress(const InetAddress & localaddr) : void
+listen() : void
+accept(InetAddress * peeraddr) : int
+closeWrite() : void
+read(char * buffer, uint64_t len) : int
+fd() : int
{static} +getLocalAddr(int sockfd) : struct sockaddr_in6
{static} +getPeerAddr(int sockfd) : struct sockaddr_in6
+setTcpNoDelay(bool on) : void
+setReuseAddr(bool on) : void
+setReusePort(bool on) : void
+setKeepAlive(bool on) : void
+getSocketError() : int
{static} +setNonBlockAndCloseOnExec(int sockfd) : void
}
class "SSLContext" as C_0000626107303889580949
class C_0000626107303889580949 {
}
class "TcpServer" as C_0001423170502760786790
class C_0001423170502760786790 {
+TcpServer(EventLoop * loop, const InetAddress & address, std::string name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
+start() : void
+stop() : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(const std::shared_ptr<EventLoopThreadPool> & pool) : void
+setIoLoops(const std::vector<EventLoop *> & ioLoops) : void
+setRecvMessageCallback(const RecvMessageCallback & cb) : void
+setRecvMessageCallback(RecvMessageCallback && cb) : void
+setConnectionCallback(const ConnectionCallback & cb) : void
+setConnectionCallback(ConnectionCallback && cb) : void
+setWriteCompleteCallback(const WriteCompleteCallback & cb) : void
+setWriteCompleteCallback(WriteCompleteCallback && cb) : void
+name() const : const std::string &
+ipPort() const : std::string
+address() const : const InetAddress &
+getLoop() const : EventLoop *
+getIoLoops() const : std::vector<EventLoop *>
+kickoffIdleConnections(size_t timeout) : void
+enableSSL(const std::string & certPath, const std::string & keyPath, bool useOldTLS = false, const std::vector<std::pair<std::string,std::string>> & sslConfCmds = =
            {}, const std::string & caPath = "") : void
+enableSSL(TLSPolicyPtr policy) : void
}
class "EventLoopThreadPool" as C_0002061035340998974559
class C_0002061035340998974559 {
+EventLoopThreadPool() : void
+EventLoopThreadPool(size_t threadNum, const std::string & name = "EventLoopThreadPool") : void
+start() : void
+wait() : void
+size() : size_t
+getNextLoop() : EventLoop *
+getLoop(size_t id) : EventLoop *
+getLoops() const : std::vector<EventLoop *>
}
class "InetAddress::(anonymous_2577662)" as C_0001189407896771082466
class C_0001189407896771082466 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "TcpServer::IgnoreSigPipe" as C_0001489562721151066050
class C_0001489562721151066050 {
+IgnoreSigPipe() : void
}
class "Acceptor" as C_0000184886692180276257
class C_0000184886692180276257 {
+Acceptor(EventLoop * loop, const InetAddress & addr, bool reUseAddr = true, bool reUsePort = true) : void
+~Acceptor() : void
+addr() const : const InetAddress &
+setNewConnectionCallback(const NewConnectionCallback & cb) : void
+listen() : void
}
class "T" as C_0000394452884449343416
class C_0000394452884449343416 {
+T(const char * str, unsigned int len) : void
+str_ : const char *
+len_ : const unsigned int
}
class "Timer" as C_0002026475275429760163
class C_0002026475275429760163 {
+Timer(const TimerCallback & cb, const TimePoint & when, const TimeInterval & interval) : void
+Timer(TimerCallback && cb, const TimePoint & when, const TimeInterval & interval) : void
+~Timer() : void
+run() const : void
+restart(const TimePoint & now) : void
+operator<(const Timer & t) const : bool
+operator>(const Timer & t) const : bool
+when() const : const TimePoint &
+isRepeat() : bool
+id() : TimerId
}
class "TimerPtrComparer" as C_0000157340721173102239
class C_0000157340721173102239 {
+operator()(const TimerPtr & x, const TimerPtr & y) const : bool
}
class "ScopeExit<F>" as C_0000026148367911088234
class C_0000026148367911088234 {
+ScopeExit<F>(F && f) : void
+~ScopeExit<F>() : void
+f_ : F
}
class "InetAddress::(anonymous_1207950)" as C_0001271167815253259069
class C_0001271167815253259069 {
+addr_ : struct sockaddr_in
+addr6_ : struct sockaddr_in6
}
class "AsyncFileLogger" as C_0000630185754256426097
class C_0000630185754256426097 {
+output(const char * msg, const uint64_t len) : void
+flush() : void
+startLogging() : void
+setFileSizeLimit(uint64_t limit) : void
+setFileName(const std::string & baseName, const std::string & extName = ".log", const std::string & path = "./") : void
+~AsyncFileLogger() : void
+AsyncFileLogger() : void
}
class "AsyncFileLogger::LoggerFile" as C_0001453238540802541239
class C_0001453238540802541239 {
+LoggerFile(const std::string & filePath, const std::string & fileBaseName, const std::string & fileExtName) : void
+~LoggerFile() : void
+writeLog(const StringPtr buf) : void
+getLength() : uint64_t
+operator bool() const : bool
+flush() : void
}
C_0000195316585713148470 o- - C_0000080756732781028581 : +secret
C_0000195316585713148470 o- - C_0000080756732781028581 : +prev
C_0001159823987743494688 <|- - C_0000111393647775817392
C_0000510041652600390686 ..|> C_0000111393647775817392
C_0001754247125147083756 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001754247125147083756
C_0001042478360162272930 ..|> C_0000111393647775817392
C_0001159823987743494688 <|- - C_0001042478360162272930
C_0001930690020065325250 o- - C_0000510041652600390686 : -buffer_
C_0001159823987743494688 <|- - C_0001930690020065325250
C_0002053752992472264214 ..> C_0001930690020065325250
C_0002053752992472264214 o- - C_0001930690020065325250 : #logStream_
C_0002053752992472264214 o- - C_0002032009232244826154 : #date_
C_0002053752992472264214 <.. C_0000716430590791918928 : +<<friend>>
C_0001159823987743494688 <|- - C_0002053752992472264214
C_0002131283840621188296 - -+ C_0002053752992472264214
C_0000979080797342806546 - -+ C_0002053752992472264214
C_0000716430590791918928 ..> C_0001930690020065325250
C_0000716430590791918928 o- - C_0001930690020065325250 : -logStream_
C_0001159823987743494688 <|- - C_0000716430590791918928
C_0001159823987743494688 <|- - C_0000684873245997977544
C_0001159823987743494688 <|- - C_0000912667184903365399
C_0000223701637084171141 - -+ C_0000912667184903365399
C_0002185746167032660910 ..|> C_0000912667184903365399
C_0001390130774830223499 ..> C_0002032009232244826154
C_0001390130774830223499 ..> C_0000764690828649606524
C_0001390130774830223499 o- - C_0000300034150397884642 : -poller_
C_0001390130774830223499 - -> C_0000764690828649606524 : -activeChannels_
C_0001390130774830223499 - -> C_0000764690828649606524 : -currentActiveChannel_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcs_
C_0001390130774830223499 o- - C_0000607400095182694101 : -timerQueue_
C_0001390130774830223499 o- - C_0002185746167032660910 : -funcsOnQuit_
C_0001390130774830223499 o- - C_0000764690828649606524 : -wakeupChannelPtr_
C_0001390130774830223499 - -> C_0001390130774830223499 : -threadLocalLoopPtr_
C_0001159823987743494688 <|- - C_0001390130774830223499
C_0001280612521485369958 ..> C_0001390130774830223499
C_0001280612521485369958 - -> C_0001390130774830223499 : -loop_
C_0001280612521485369958 o- - C_0001390130774830223499 : -promiseForLoopPointer_
C_0001159823987743494688 <|- - C_0001280612521485369958
C_0000634031134969193198 o- - C_0001280612521485369958 : #loopThread_
C_0000684873245997977544 <|- - C_0000634031134969193198
C_0000300034150397884642 ..> C_0001390130774830223499
C_0000300034150397884642 ..> C_0000764690828649606524
C_0000300034150397884642 - -> C_0001390130774830223499 : -ownerLoop_
C_0001159823987743494688 <|- - C_0000300034150397884642
C_0000607400095182694101 ..> C_0001390130774830223499
C_0000607400095182694101 ..> C_0002026475275429760163
C_0000607400095182694101 - -> C_0001390130774830223499 : #loop_
C_0000607400095182694101 - -> C_0000764690828649606524 : #timerfdChannelPtr_
C_0000607400095182694101 o- - C_0002026475275429760163 : #timers_
C_0000607400095182694101 o- - C_0000157340721173102239 : #timers_
C_0001159823987743494688 <|- - C_0000607400095182694101
C_0000764690828649606524 ..> C_0001390130774830223499
C_0000764690828649606524 - -> C_0001390130774830223499 : -loop_
C_0000764690828649606524 <.. C_0001390130774830223499 : +<<friend>>
C_0001159823987743494688 <|- - C_0000764690828649606524
C_0000684873245997977544 <|- - C_0000295101274428145462
C_0001897340460211641725 o- - C_0000673025168912921705
C_0002230624932100089526 ..> C_0001289495020269537351
C_0002230624932100089526 ..> C_0001897340460211641725
C_0002230624932100089526 ..> C_0001390130774830223499
C_0002230624932100089526 ..> C_0001660397537883119469
C_0002230624932100089526 ..> C_0002100370281243872283
C_0002230624932100089526 ..> C_0000434245188016003403
C_0002230624932100089526 ..> C_0000964465843177067305
C_0002230624932100089526 - -> C_0002230624932100089526 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0001289495020269537351 : #recvMsgCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #connectionCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #closeCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #writeCompleteCallback_
C_0002230624932100089526 - -> C_0002230624932100089526 : #highWaterMarkCallback_
C_0002230624932100089526 ..> C_0000434245188016003403 : #sslErrorCallback_
C_0002230624932100089526 o- - C_0002100370281243872283 : #tlsPolicy_
C_0002230624932100089526 <.. C_0001156367011091191681 : +<<friend>>
C_0002230624932100089526 <.. C_0000920759514274339356 : +<<friend>>
C_0002230624932100089526 <.. C_0001423170502760786790 : +<<friend>>
C_0001156367011091191681 ..> C_0001390130774830223499
C_0001156367011091191681 ..> C_0001897340460211641725
C_0001156367011091191681 ..> C_0002230624932100089526
C_0001156367011091191681 ..> C_0001289495020269537351
C_0001156367011091191681 ..> C_0000434245188016003403
C_0001156367011091191681 ..> C_0002100370281243872283
C_0001156367011091191681 - -> C_0001390130774830223499 : -loop_
C_0001156367011091191681 o- - C_0001706043459252151324 : -connector_
C_0001156367011091191681 - -> C_0002230624932100089526 : -connectionCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -messageCallback_
C_0001156367011091191681 - -> C_0001289495020269537351 : -messageCallback_
C_0001156367011091191681 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001156367011091191681 ..> C_0000434245188016003403 : -sslErrorCallback_
C_0001156367011091191681 o- - C_0002230624932100089526 : -connection_
C_0001156367011091191681 o- - C_0002100370281243872283 : -tlsPolicyPtr_
C_0001156367011091191681 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001156367011091191681
C_0001278908569830571044 - -+ C_0001156367011091191681
C_0000464040622375950341 ..> C_0002230624932100089526
C_0000464040622375950341 ..> C_0002100370281243872283
C_0000464040622375950341 ..> C_0000626107303889580949
C_0000464040622375950341 ..> C_0001289495020269537351
C_0000464040622375950341 ..> C_0001660397537883119469
C_0000464040622375950341 - -> C_0002230624932100089526 : #conn_
C_0000464040622375950341 o- - C_0002100370281243872283 : #policyPtr_
C_0000464040622375950341 o- - C_0000626107303889580949 : #contextPtr_
C_0000464040622375950341 o- - C_0001289495020269537351 : #recvBuffer_
C_0000464040622375950341 - -> C_0001390130774830223499 : #loop_
C_0000464040622375950341 o- - C_0001660397537883119469 : #peerCertificate_
C_0000464040622375950341 o- - C_0001289495020269537351 : #writeBuffer_
C_0001706043459252151324 ..> C_0001390130774830223499
C_0001706043459252151324 ..> C_0001897340460211641725
C_0001706043459252151324 - -> C_0000764690828649606524 : -channelPtr_
C_0001706043459252151324 - -> C_0001390130774830223499 : -loop_
C_0001706043459252151324 o- - C_0001897340460211641725 : -serverAddr_
C_0001159823987743494688 <|- - C_0001706043459252151324
C_0000000982196670174162 - -+ C_0001706043459252151324
C_0000964465843177067305 ..> C_0001390130774830223499
C_0000964465843177067305 - -> C_0001390130774830223499 : -loop_
C_0002013739811805694444 - -+ C_0000964465843177067305
C_0000920759514274339356 ..> C_0001390130774830223499
C_0000920759514274339356 ..> C_0001897340460211641725
C_0000920759514274339356 ..> C_0002100370281243872283
C_0000920759514274339356 ..> C_0000626107303889580949
C_0000920759514274339356 ..> C_0001289495020269537351
C_0000920759514274339356 ..> C_0002230624932100089526
C_0000920759514274339356 ..> C_0001660397537883119469
C_0000920759514274339356 ..> C_0000964465843177067305
C_0000920759514274339356 ..> C_0000434245188016003403
C_0000920759514274339356 - -> C_0000964465843177067305 : -timingWheelWeakPtr_
C_0000920759514274339356 o- - C_0002032009232244826154 : -lastTimingWheelUpdateTime_
C_0000920759514274339356 - -> C_0001390130774830223499 : #loop_
C_0000920759514274339356 o- - C_0000764690828649606524 : #ioChannelPtr_
C_0000920759514274339356 o- - C_0000971024972307079851 : #socketPtr_
C_0000920759514274339356 o- - C_0001289495020269537351 : #readBuffer_
C_0000920759514274339356 o- - C_0001897340460211641725 : #localAddr_
C_0000920759514274339356 o- - C_0001897340460211641725 : #peerAddr_
C_0000920759514274339356 o- - C_0000464040622375950341 : #tlsProviderPtr_
C_0000920759514274339356 - -> C_0002230624932100089526 : #upgradeCallback_
C_0000920759514274339356 <.. C_0001156367011091191681 : +<<friend>>
C_0000920759514274339356 <.. C_0001423170502760786790 : +<<friend>>
C_0002230624932100089526 <|- - C_0000920759514274339356
C_0001159823987743494688 <|- - C_0000920759514274339356
C_0002266895444343633259 - -+ C_0000920759514274339356
C_0002266895444343633259 ..> C_0002230624932100089526
C_0002266895444343633259 - -> C_0002230624932100089526 : -conn_
C_0001029063960859366412 - -+ C_0000920759514274339356
C_0001029063960859366412 - -> C_0001289495020269537351 : +msgBuffer_
C_0001727349338344491225 - -+ C_0000920759514274339356
C_0000971024972307079851 ..> C_0001897340460211641725
C_0001159823987743494688 <|- - C_0000971024972307079851
C_0001423170502760786790 ..> C_0001390130774830223499
C_0001423170502760786790 ..> C_0001897340460211641725
C_0001423170502760786790 ..> C_0002061035340998974559
C_0001423170502760786790 ..> C_0002230624932100089526
C_0001423170502760786790 ..> C_0001289495020269537351
C_0001423170502760786790 ..> C_0002100370281243872283
C_0001423170502760786790 - -> C_0001390130774830223499 : -loop_
C_0001423170502760786790 o- - C_0000184886692180276257 : -acceptorPtr_
C_0001423170502760786790 o- - C_0002230624932100089526 : -connSet_
C_0001423170502760786790 - -> C_0002230624932100089526 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0001289495020269537351 : -recvMessageCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -connectionCallback_
C_0001423170502760786790 - -> C_0002230624932100089526 : -writeCompleteCallback_
C_0001423170502760786790 o- - C_0000964465843177067305 : -timingWheelMap_
C_0001423170502760786790 - -> C_0002061035340998974559 : -loopPoolPtr_
C_0001423170502760786790 - -> C_0001390130774830223499 : -ioLoops_
C_0001423170502760786790 o- - C_0002100370281243872283 : -policyPtr_
C_0001423170502760786790 o- - C_0000626107303889580949 : -sslContextPtr_
C_0001159823987743494688 <|- - C_0001423170502760786790
C_0002061035340998974559 ..> C_0001390130774830223499
C_0002061035340998974559 o- - C_0001280612521485369958 : -loopThreadVector_
C_0001159823987743494688 <|- - C_0002061035340998974559
C_0001489562721151066050 - -+ C_0001423170502760786790
C_0000184886692180276257 ..> C_0001390130774830223499
C_0000184886692180276257 ..> C_0001897340460211641725
C_0000184886692180276257 o- - C_0000971024972307079851 : #sock_
C_0000184886692180276257 o- - C_0001897340460211641725 : #addr_
C_0000184886692180276257 - -> C_0001390130774830223499 : #loop_
C_0000184886692180276257 - -> C_0001897340460211641725 : #newConnectionCallback_
C_0000184886692180276257 o- - C_0000764690828649606524 : #acceptChannel_
C_0001159823987743494688 <|- - C_0000184886692180276257
C_0001159823987743494688 <|- - C_0002026475275429760163
C_0000157340721173102239 ..> C_0002026475275429760163
C_0001159823987743494688 <|- - C_0000630185754256426097
C_0001453238540802541239 - -+ C_0000630185754256426097
C_0001453238540802541239 o- - C_0002032009232244826154 : #creationDate_
C_0001159823987743494688 <|- - C_0001453238540802541239

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.18+10-post-Ubuntu-0ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>