<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2922px" preserveAspectRatio="none" style="width:8212px;height:2922px;" version="1.1" viewBox="0 0 8212 2922" width="8212px" zoomAndPan="magnify"><defs><filter height="300%" id="f1suypcscrjw0u" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[beff0c4640d168cedf062bb151026421]
class C_0000000003--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="124.8281" id="C_0000000003" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="5467" y="2787"/><ellipse cx="5521.75" cy="2803" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5524.7188,2808.6406 Q5524.1406,2808.9375 5523.5,2809.0781 Q5522.8594,2809.2344 5522.1563,2809.2344 Q5519.6563,2809.2344 5518.3281,2807.5938 Q5517.0156,2805.9375 5517.0156,2802.8125 Q5517.0156,2799.6875 5518.3281,2798.0313 Q5519.6563,2796.375 5522.1563,2796.375 Q5522.8594,2796.375 5523.5,2796.5313 Q5524.1563,2796.6875 5524.7188,2796.9844 L5524.7188,2799.7031 Q5524.0938,2799.125 5523.5,2798.8594 Q5522.9063,2798.5781 5522.2813,2798.5781 Q5520.9375,2798.5781 5520.25,2799.6563 Q5519.5625,2800.7188 5519.5625,2802.8125 Q5519.5625,2804.9063 5520.25,2805.9844 Q5520.9375,2807.0469 5522.2813,2807.0469 Q5522.9063,2807.0469 5523.5,2806.7813 Q5524.0938,2806.5 5524.7188,2805.9219 L5524.7188,2808.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="5542.25" y="2807.1543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="5663" y="2784"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="5664" y="2796.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5468" x2="5668" y1="2819" y2="2819"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5468" x2="5668" y1="2827" y2="2827"/><ellipse cx="5478" cy="2838" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="5487" y="2841.2104">MpscQueue() : void</text><ellipse cx="5478" cy="2850.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="5487" y="2854.0151">~MpscQueue() : void</text><ellipse cx="5478" cy="2863.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5487" y="2866.8198">enqueue(T&amp;&amp; input) : void</text><ellipse cx="5478" cy="2876.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5487" y="2879.6245">enqueue(T const&amp; input) : void</text><ellipse cx="5478" cy="2889.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="5487" y="2892.4292">dequeue(T&amp; output) : bool</text><ellipse cx="5478" cy="2902.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5487" y="2905.2339">empty() : bool</text><!--MD5=[818353795a49a6973a503ac8115e4dab]
class C_0000000007--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="112.0234" id="C_0000000007" style="stroke: #A80036; stroke-width: 1.5;" width="294" x="6" y="21"/><ellipse cx="113.75" cy="37" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M116.7188,42.6406 Q116.1406,42.9375 115.5,43.0781 Q114.8594,43.2344 114.1563,43.2344 Q111.6563,43.2344 110.3281,41.5938 Q109.0156,39.9375 109.0156,36.8125 Q109.0156,33.6875 110.3281,32.0313 Q111.6563,30.375 114.1563,30.375 Q114.8594,30.375 115.5,30.5313 Q116.1563,30.6875 116.7188,30.9844 L116.7188,33.7031 Q116.0938,33.125 115.5,32.8594 Q114.9063,32.5781 114.2813,32.5781 Q112.9375,32.5781 112.25,33.6563 Q111.5625,34.7188 111.5625,36.8125 Q111.5625,38.9063 112.25,39.9844 Q112.9375,41.0469 114.2813,41.0469 Q114.9063,41.0469 115.5,40.7813 Q116.0938,40.5 116.7188,39.9219 L116.7188,42.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="134.25" y="41.1543">BufferNode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="299" y1="53" y2="53"/><ellipse cx="17" cy="64" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="26" y="67.2104">dataPtr_ : T*</text><ellipse cx="17" cy="76.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="26" y="80.0151">next_ : std::atomic&lt;MpscQueue::BufferNode*&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="299" y1="86.6094" y2="86.6094"/><ellipse cx="17" cy="97.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="100.8198">BufferNode() : void</text><ellipse cx="17" cy="110.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="26" y="113.6245">BufferNode(T const&amp; data) : void</text><ellipse cx="17" cy="123.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="126.4292">BufferNode(T&amp;&amp; data) : void</text><!--MD5=[07bf2dc0704a7aa08268ea834afd57a8]
class C_0000000020--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="112.0234" id="C_0000000020" style="stroke: #A80036; stroke-width: 1.5;" width="376" x="5045" y="296.5"/><ellipse cx="5194.75" cy="312.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5194.8594,307.8438 L5193.7031,312.9219 L5196.0313,312.9219 L5194.8594,307.8438 Z M5193.375,305.6094 L5196.3594,305.6094 L5199.7188,318 L5197.2656,318 L5196.5,314.9375 L5193.2188,314.9375 L5192.4688,318 L5190.0313,318 L5193.375,305.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="5215.25" y="316.6543">TaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5046" x2="5420" y1="328.5" y2="328.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5046" x2="5420" y1="336.5" y2="336.5"/><ellipse cx="5056" cy="347.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="350" x="5065" y="350.7104">runTaskInQueue(std::function&lt;void()&gt; const&amp; task) = 0 : void</text><ellipse cx="5056" cy="360.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="325" x="5065" y="363.5151">runTaskInQueue(std::function&lt;void()&gt;&amp;&amp; task) = 0 : void</text><ellipse cx="5056" cy="373.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="5065" y="376.3198">getName() const : std::string</text><ellipse cx="5056" cy="385.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="5065" y="389.1245">syncTaskInQueue(std::function&lt;void()&gt; const&amp; task) : void</text><ellipse cx="5056" cy="398.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="5065" y="401.9292">~TaskQueue() : void</text><!--MD5=[4f54760dc846aaaf4a5290a106df8a28]
class C_0000000025--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="176.0469" id="C_0000000025" style="stroke: #A80036; stroke-width: 1.5;" width="778" x="7124" y="264.5"/><ellipse cx="7487.25" cy="280.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7490.2188,286.1406 Q7489.6406,286.4375 7489,286.5781 Q7488.3594,286.7344 7487.6563,286.7344 Q7485.1563,286.7344 7483.8281,285.0938 Q7482.5156,283.4375 7482.5156,280.3125 Q7482.5156,277.1875 7483.8281,275.5313 Q7485.1563,273.875 7487.6563,273.875 Q7488.3594,273.875 7489,274.0313 Q7489.6563,274.1875 7490.2188,274.4844 L7490.2188,277.2031 Q7489.5938,276.625 7489,276.3594 Q7488.4063,276.0781 7487.7813,276.0781 Q7486.4375,276.0781 7485.75,277.1563 Q7485.0625,278.2188 7485.0625,280.3125 Q7485.0625,282.4063 7485.75,283.4844 Q7486.4375,284.5469 7487.7813,284.5469 Q7488.4063,284.5469 7489,284.2813 Q7489.5938,284 7490.2188,283.4219 L7490.2188,286.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="7507.75" y="284.6543">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7125" x2="7901" y1="296.5" y2="296.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7125" x2="7901" y1="304.5" y2="304.5"/><ellipse cx="7135" cy="315.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="7144" y="318.7104">Logger(Logger::SourceFile file, int line) : void</text><ellipse cx="7135" cy="328.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="7144" y="331.5151">Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void</text><ellipse cx="7135" cy="341.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="7144" y="344.3198">Logger(Logger::SourceFile file, int line, bool isSysErr) : void</text><ellipse cx="7135" cy="353.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="491" x="7144" y="357.1245">Logger(Logger::SourceFile file, int line, Logger::LogLevel level, char const* func) : void</text><ellipse cx="7135" cy="366.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="7144" y="369.9292">~Logger() : void</text><ellipse cx="7135" cy="379.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="7144" y="382.7339">setIndex(int index) : Logger&amp;</text><ellipse cx="7135" cy="392.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="7144" y="395.5386">stream() : LogStream&amp;</text><ellipse cx="7135" cy="405.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="752" x="7144" y="408.3433">setOutputFunction(std::function&lt;void(char const*,uint64_t const)&gt; outputFunc, std::function&lt;void()&gt; flushFunc, int index = -1) : void</text><ellipse cx="7135" cy="417.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="7144" y="421.1479">setLogLevel(Logger::LogLevel level) : void</text><ellipse cx="7135" cy="430.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="7144" y="433.9526">logLevel() : Logger::LogLevel</text><!--MD5=[d73c0011cdae542464972fcaf90cd6d0]
class C_0000000038--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="137.6328" id="C_0000000038" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="7331" y="8"/><ellipse cx="7367.15" cy="24" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7371.2594,30 L7363.5406,30 L7363.5406,17.6094 L7371.2594,17.6094 L7371.2594,19.7656 L7365.9938,19.7656 L7365.9938,22.4375 L7370.7594,22.4375 L7370.7594,24.5938 L7365.9938,24.5938 L7365.9938,27.8438 L7371.2594,27.8438 L7371.2594,30 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="7385.85" y="28.1543">LogLevel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7332" x2="7462" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="7337" y="54.2104">kTrace</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="7337" y="67.0151">kDebug</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="7337" y="79.8198">kInfo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="7337" y="92.6245">kWarn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="7337" y="105.4292">kError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="7337" y="118.2339">kFatal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="7337" y="131.0386">kNumberOfLogLevels</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7332" x2="7462" y1="137.6328" y2="137.6328"/><!--MD5=[471504bb1a4917f69e0a5d1e82c9c6e9]
class C_0000000042--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="99.2188" id="C_0000000042" style="stroke: #A80036; stroke-width: 1.5;" width="262" x="7498" y="27.5"/><ellipse cx="7592.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7595.2188,49.1406 Q7594.6406,49.4375 7594,49.5781 Q7593.3594,49.7344 7592.6563,49.7344 Q7590.1563,49.7344 7588.8281,48.0938 Q7587.5156,46.4375 7587.5156,43.3125 Q7587.5156,40.1875 7588.8281,38.5313 Q7590.1563,36.875 7592.6563,36.875 Q7593.3594,36.875 7594,37.0313 Q7594.6563,37.1875 7595.2188,37.4844 L7595.2188,40.2031 Q7594.5938,39.625 7594,39.3594 Q7593.4063,39.0781 7592.7813,39.0781 Q7591.4375,39.0781 7590.75,40.1563 Q7590.0625,41.2188 7590.0625,43.3125 Q7590.0625,45.4063 7590.75,46.4844 Q7591.4375,47.5469 7592.7813,47.5469 Q7593.4063,47.5469 7594,47.2813 Q7594.5938,47 7595.2188,46.4219 L7595.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="7612.75" y="47.6543">SourceFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7499" x2="7759" y1="59.5" y2="59.5"/><ellipse cx="7509" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="7518" y="73.7104">data_ : char const*</text><ellipse cx="7509" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="7518" y="86.5151">size_ : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7499" x2="7759" y1="93.1094" y2="93.1094"/><ellipse cx="7509" cy="104.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="7518" y="107.3198">SourceFile(char const(&amp;)[SIZE] arr) : void</text><ellipse cx="7509" cy="116.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="7518" y="120.1245">SourceFile(char const* filename) : void</text><!--MD5=[8e7ad9ab69880e3c51f5680e22fad78e]
class C_0000000059--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="86.4141" id="C_0000000059" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="6804" y="780"/><ellipse cx="6872.75" cy="796" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6875.7188,801.6406 Q6875.1406,801.9375 6874.5,802.0781 Q6873.8594,802.2344 6873.1563,802.2344 Q6870.6563,802.2344 6869.3281,800.5938 Q6868.0156,798.9375 6868.0156,795.8125 Q6868.0156,792.6875 6869.3281,791.0313 Q6870.6563,789.375 6873.1563,789.375 Q6873.8594,789.375 6874.5,789.5313 Q6875.1563,789.6875 6875.7188,789.9844 L6875.7188,792.7031 Q6875.0938,792.125 6874.5,791.8594 Q6873.9063,791.5781 6873.2813,791.5781 Q6871.9375,791.5781 6871.25,792.6563 Q6870.5625,793.7188 6870.5625,795.8125 Q6870.5625,797.9063 6871.25,798.9844 Q6871.9375,800.0469 6873.2813,800.0469 Q6873.9063,800.0469 6874.5,799.7813 Q6875.0938,799.5 6875.7188,798.9219 L6875.7188,801.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="6893.25" y="800.1543">RawLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6805" x2="7017" y1="812" y2="812"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6805" x2="7017" y1="820" y2="820"/><ellipse cx="6815" cy="831" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6824" y="834.2104">~RawLogger() : void</text><ellipse cx="6815" cy="843.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="6824" y="847.0151">setIndex(int index) : RawLogger&amp;</text><ellipse cx="6815" cy="856.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6824" y="859.8198">stream() : LogStream&amp;</text><!--MD5=[02bba8467a86ae06a58dd857f95609a9]
class C_0000000066--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="547.3828" id="C_0000000066" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="2170" y="1148"/><ellipse cx="2292.75" cy="1164" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2295.7188,1169.6406 Q2295.1406,1169.9375 2294.5,1170.0781 Q2293.8594,1170.2344 2293.1563,1170.2344 Q2290.6563,1170.2344 2289.3281,1168.5938 Q2288.0156,1166.9375 2288.0156,1163.8125 Q2288.0156,1160.6875 2289.3281,1159.0313 Q2290.6563,1157.375 2293.1563,1157.375 Q2293.8594,1157.375 2294.5,1157.5313 Q2295.1563,1157.6875 2295.7188,1157.9844 L2295.7188,1160.7031 Q2295.0938,1160.125 2294.5,1159.8594 Q2293.9063,1159.5781 2293.2813,1159.5781 Q2291.9375,1159.5781 2291.25,1160.6563 Q2290.5625,1161.7188 2290.5625,1163.8125 Q2290.5625,1165.9063 2291.25,1166.9844 Q2291.9375,1168.0469 2293.2813,1168.0469 Q2293.9063,1168.0469 2294.5,1167.7813 Q2295.0938,1167.5 2295.7188,1166.9219 L2295.7188,1169.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="2313.25" y="1168.1543">MsgBuffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2171" x2="2485" y1="1180" y2="1180"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2171" x2="2485" y1="1188" y2="1188"/><ellipse cx="2181" cy="1199" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="2190" y="1202.2104">MsgBuffer(size_t len = kBufferDefaultLength) : void</text><ellipse cx="2181" cy="1211.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2190" y="1215.0151">peek() const : char const*</text><ellipse cx="2181" cy="1224.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2190" y="1227.8198">beginWrite() const : char const*</text><ellipse cx="2181" cy="1237.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2190" y="1240.6245">beginWrite() : char*</text><ellipse cx="2181" cy="1250.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2190" y="1253.4292">peekInt8() const : uint8_t</text><ellipse cx="2181" cy="1263.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2190" y="1266.2339">peekInt16() const : uint16_t</text><ellipse cx="2181" cy="1275.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2190" y="1279.0386">peekInt32() const : uint32_t</text><ellipse cx="2181" cy="1288.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2190" y="1291.8433">peekInt64() const : uint64_t</text><ellipse cx="2181" cy="1301.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="2190" y="1304.6479">read(size_t len) : std::string</text><ellipse cx="2181" cy="1314.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2190" y="1317.4526">readInt8() : uint8_t</text><ellipse cx="2181" cy="1327.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2190" y="1330.2573">readInt16() : uint16_t</text><ellipse cx="2181" cy="1339.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2190" y="1343.062">readInt32() : uint32_t</text><ellipse cx="2181" cy="1352.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="2190" y="1355.8667">readInt64() : uint64_t</text><ellipse cx="2181" cy="1365.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2190" y="1368.6714">swap(MsgBuffer&amp; buf) : void</text><ellipse cx="2181" cy="1378.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2190" y="1381.4761">readableBytes() const : size_t</text><ellipse cx="2181" cy="1391.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2190" y="1394.2808">writableBytes() const : size_t</text><ellipse cx="2181" cy="1403.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="2190" y="1407.0854">append(MsgBuffer const&amp; buf) : void</text><ellipse cx="2181" cy="1416.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="2190" y="1419.8901">append(char const(&amp;)[N] buf) : void</text><ellipse cx="2181" cy="1429.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="2190" y="1432.6948">append(char const* buf, size_t len) : void</text><ellipse cx="2181" cy="1442.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2190" y="1445.4995">append(std::string const&amp; buf) : void</text><ellipse cx="2181" cy="1455.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2190" y="1458.3042">appendInt8(uint8_t const b) : void</text><ellipse cx="2181" cy="1467.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="2190" y="1471.1089">appendInt16(uint16_t const s) : void</text><ellipse cx="2181" cy="1480.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2190" y="1483.9136">appendInt32(uint32_t const i) : void</text><ellipse cx="2181" cy="1493.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2190" y="1496.7183">appendInt64(uint64_t const l) : void</text><ellipse cx="2181" cy="1506.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="2190" y="1509.5229">addInFront(char const* buf, size_t len) : void</text><ellipse cx="2181" cy="1519.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="2190" y="1522.3276">addInFrontInt8(uint8_t const b) : void</text><ellipse cx="2181" cy="1531.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="2190" y="1535.1323">addInFrontInt16(uint16_t const s) : void</text><ellipse cx="2181" cy="1544.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2190" y="1547.937">addInFrontInt32(uint32_t const i) : void</text><ellipse cx="2181" cy="1557.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2190" y="1560.7417">addInFrontInt64(uint64_t const l) : void</text><ellipse cx="2181" cy="1570.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2190" y="1573.5464">retrieveAll() : void</text><ellipse cx="2181" cy="1583.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2190" y="1586.3511">retrieve(size_t len) : void</text><ellipse cx="2181" cy="1595.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2190" y="1599.1558">readFd(int fd, int* retErrno) : ssize_t</text><ellipse cx="2181" cy="1608.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2190" y="1611.9604">retrieveUntil(char const* end) : void</text><ellipse cx="2181" cy="1621.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2190" y="1624.7651">findCRLF() const : char const*</text><ellipse cx="2181" cy="1634.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="2190" y="1637.5698">ensureWritableBytes(size_t len) : void</text><ellipse cx="2181" cy="1647.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2190" y="1650.3745">hasWritten(size_t len) : void</text><ellipse cx="2181" cy="1659.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2190" y="1663.1792">unwrite(size_t offset) : void</text><ellipse cx="2181" cy="1672.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="2190" y="1675.9839">operator[](size_t offset) const : char const&amp;</text><ellipse cx="2181" cy="1685.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="2190" y="1688.7886">operator[](size_t offset) : char&amp;</text><!--MD5=[201351b678662d0990bf6e5cd0bca26a]
class C_0000000114--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="137.6328" id="C_0000000114" style="stroke: #A80036; stroke-width: 1.5;" width="443" x="4587.5" y="754"/><ellipse cx="4734.75" cy="770" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4737.7188,775.6406 Q4737.1406,775.9375 4736.5,776.0781 Q4735.8594,776.2344 4735.1563,776.2344 Q4732.6563,776.2344 4731.3281,774.5938 Q4730.0156,772.9375 4730.0156,769.8125 Q4730.0156,766.6875 4731.3281,765.0313 Q4732.6563,763.375 4735.1563,763.375 Q4735.8594,763.375 4736.5,763.5313 Q4737.1563,763.6875 4737.7188,763.9844 L4737.7188,766.7031 Q4737.0938,766.125 4736.5,765.8594 Q4735.9063,765.5781 4735.2813,765.5781 Q4733.9375,765.5781 4733.25,766.6563 Q4732.5625,767.7188 4732.5625,769.8125 Q4732.5625,771.9063 4733.25,772.9844 Q4733.9375,774.0469 4735.2813,774.0469 Q4735.9063,774.0469 4736.5,773.7813 Q4737.0938,773.5 4737.7188,772.9219 L4737.7188,775.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="140" x="4755.25" y="774.1543">ConcurrentTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4588.5" x2="5029.5" y1="786" y2="786"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4588.5" x2="5029.5" y1="794" y2="794"/><ellipse cx="4598.5" cy="805" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="4607.5" y="808.2104">ConcurrentTaskQueue(size_t threadNum, std::string const&amp; name) : void</text><ellipse cx="4598.5" cy="817.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="4607.5" y="821.0151">runTaskInQueue(std::function&lt;void()&gt; const&amp; task) : void</text><ellipse cx="4598.5" cy="830.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="4607.5" y="833.8198">runTaskInQueue(std::function&lt;void()&gt;&amp;&amp; task) : void</text><ellipse cx="4598.5" cy="843.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4607.5" y="846.6245">getName() const : std::string</text><ellipse cx="4598.5" cy="856.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="4607.5" y="859.4292">getTaskCount() : size_t</text><ellipse cx="4598.5" cy="869.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="4607.5" y="872.2339">stop() : void</text><ellipse cx="4598.5" cy="881.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="4607.5" y="885.0386">~ConcurrentTaskQueue() : void</text><!--MD5=[f33b7cf2000791ca775bea1d1b2adb67]
class C_0000000128--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="60.8047" id="C_0000000128" style="stroke: #A80036; stroke-width: 1.5;" width="213" x="6804.5" y="322"/><ellipse cx="6867.75" cy="338" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6870.7188,343.6406 Q6870.1406,343.9375 6869.5,344.0781 Q6868.8594,344.2344 6868.1563,344.2344 Q6865.6563,344.2344 6864.3281,342.5938 Q6863.0156,340.9375 6863.0156,337.8125 Q6863.0156,334.6875 6864.3281,333.0313 Q6865.6563,331.375 6868.1563,331.375 Q6868.8594,331.375 6869.5,331.5313 Q6870.1563,331.6875 6870.7188,331.9844 L6870.7188,334.7031 Q6870.0938,334.125 6869.5,333.8594 Q6868.9063,333.5781 6868.2813,333.5781 Q6866.9375,333.5781 6866.25,334.6563 Q6865.5625,335.7188 6865.5625,337.8125 Q6865.5625,339.9063 6866.25,340.9844 Q6866.9375,342.0469 6868.2813,342.0469 Q6868.9063,342.0469 6869.5,341.7813 Q6870.0938,341.5 6870.7188,340.9219 L6870.7188,343.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="6888.25" y="342.1543">ObjectPool</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="7011.5" y="319"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="7012.5" y="331.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6805.5" x2="7016.5" y1="354" y2="354"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6805.5" x2="7016.5" y1="362" y2="362"/><ellipse cx="6815.5" cy="373" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="6824.5" y="376.2104">getObject() : std::shared_ptr&lt;T&gt;</text><!--MD5=[0672063f91006512af55f888be888298]
class C_0000000135--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="112.0234" id="C_0000000135" style="stroke: #A80036; stroke-width: 1.5;" width="690" x="5190" y="1365.5"/><ellipse cx="5491.75" cy="1381.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5494.7188,1387.1406 Q5494.1406,1387.4375 5493.5,1387.5781 Q5492.8594,1387.7344 5492.1563,1387.7344 Q5489.6563,1387.7344 5488.3281,1386.0938 Q5487.0156,1384.4375 5487.0156,1381.3125 Q5487.0156,1378.1875 5488.3281,1376.5313 Q5489.6563,1374.875 5492.1563,1374.875 Q5492.8594,1374.875 5493.5,1375.0313 Q5494.1563,1375.1875 5494.7188,1375.4844 L5494.7188,1378.2031 Q5494.0938,1377.625 5493.5,1377.3594 Q5492.9063,1377.0781 5492.2813,1377.0781 Q5490.9375,1377.0781 5490.25,1378.1563 Q5489.5625,1379.2188 5489.5625,1381.3125 Q5489.5625,1383.4063 5490.25,1384.4844 Q5490.9375,1385.5469 5492.2813,1385.5469 Q5492.9063,1385.5469 5493.5,1385.2813 Q5494.0938,1385 5494.7188,1384.4219 L5494.7188,1387.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="5512.25" y="1385.6543">TimingWheel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5191" x2="5879" y1="1397.5" y2="1397.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5191" x2="5879" y1="1405.5" y2="1405.5"/><ellipse cx="5201" cy="1416.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="664" x="5210" y="1419.7104">TimingWheel(EventLoop* loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void</text><ellipse cx="5201" cy="1429.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5210" y="1432.5151">insertEntry(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5201" cy="1442.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="5210" y="1445.3198">insertEntryInloop(size_t delay, EntryPtr entryPtr) : void</text><ellipse cx="5201" cy="1454.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="5210" y="1458.1245">getLoop() : EventLoop*</text><ellipse cx="5201" cy="1467.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="5210" y="1470.9292">~TimingWheel() : void</text><!--MD5=[8f768f39242eaf79c785d512ac70f6a1]
class C_0000000150--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="73.6094" id="C_0000000150" style="stroke: #A80036; stroke-width: 1.5;" width="282" x="5598" y="786"/><ellipse cx="5692.75" cy="802" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5695.7188,807.6406 Q5695.1406,807.9375 5694.5,808.0781 Q5693.8594,808.2344 5693.1563,808.2344 Q5690.6563,808.2344 5689.3281,806.5938 Q5688.0156,804.9375 5688.0156,801.8125 Q5688.0156,798.6875 5689.3281,797.0313 Q5690.6563,795.375 5693.1563,795.375 Q5693.8594,795.375 5694.5,795.5313 Q5695.1563,795.6875 5695.7188,795.9844 L5695.7188,798.7031 Q5695.0938,798.125 5694.5,797.8594 Q5693.9063,797.5781 5693.2813,797.5781 Q5691.9375,797.5781 5691.25,798.6563 Q5690.5625,799.7188 5690.5625,801.8125 Q5690.5625,803.9063 5691.25,804.9844 Q5691.9375,806.0469 5693.2813,806.0469 Q5693.9063,806.0469 5694.5,805.7813 Q5695.0938,805.5 5695.7188,804.9219 L5695.7188,807.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="5713.25" y="806.1543">CallbackEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5599" x2="5879" y1="818" y2="818"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5599" x2="5879" y1="826" y2="826"/><ellipse cx="5609" cy="837" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="5618" y="840.2104">CallbackEntry(std::function&lt;void()&gt; cb) : void</text><ellipse cx="5609" cy="849.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="5618" y="853.0151">~CallbackEntry() : void</text><!--MD5=[6b39ea55892676d2fb9ad12176d1be69]
class C_0000000173--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="214.4609" id="C_0000000173" style="stroke: #A80036; stroke-width: 1.5;" width="261" x="7937.5" y="245.5"/><ellipse cx="7981.75" cy="261.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7984.7188,267.1406 Q7984.1406,267.4375 7983.5,267.5781 Q7982.8594,267.7344 7982.1563,267.7344 Q7979.6563,267.7344 7978.3281,266.0938 Q7977.0156,264.4375 7977.0156,261.3125 Q7977.0156,258.1875 7978.3281,256.5313 Q7979.6563,254.875 7982.1563,254.875 Q7982.8594,254.875 7983.5,255.0313 Q7984.1563,255.1875 7984.7188,255.4844 L7984.7188,258.2031 Q7984.0938,257.625 7983.5,257.3594 Q7982.9063,257.0781 7982.2813,257.0781 Q7980.9375,257.0781 7980.25,258.1563 Q7979.5625,259.2188 7979.5625,261.3125 Q7979.5625,263.4063 7980.25,264.4844 Q7980.9375,265.5469 7982.2813,265.5469 Q7982.9063,265.5469 7983.5,265.2813 Q7984.0938,265 7984.7188,264.4219 L7984.7188,267.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="8002.25" y="265.6543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="50" x="8151.5" y="242.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="48" x="8152.5" y="254.6387">int SIZE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7938.5" x2="8197.5" y1="277.5" y2="277.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7938.5" x2="8197.5" y1="285.5" y2="285.5"/><ellipse cx="7948.5" cy="296.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="7957.5" y="299.7104">FixedBuffer() : void</text><ellipse cx="7948.5" cy="309.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="7957.5" y="312.5151">~FixedBuffer() : void</text><ellipse cx="7948.5" cy="322.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="7957.5" y="325.3198">append(char const* buf, size_t len) : bool</text><ellipse cx="7948.5" cy="334.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="7957.5" y="338.1245">data() const : char const*</text><ellipse cx="7948.5" cy="347.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="7957.5" y="350.9292">length() const : int</text><ellipse cx="7948.5" cy="360.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="7957.5" y="363.7339">current() : char*</text><ellipse cx="7948.5" cy="373.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="7957.5" y="376.5386">avail() const : int</text><ellipse cx="7948.5" cy="386.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="7957.5" y="389.3433">add(size_t len) : void</text><ellipse cx="7948.5" cy="398.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="7957.5" y="402.1479">reset() : void</text><ellipse cx="7948.5" cy="411.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="7957.5" y="414.9526">zeroBuffer() : void</text><ellipse cx="7948.5" cy="424.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="7957.5" y="427.7573">debugString() : char const*</text><ellipse cx="7948.5" cy="437.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="7957.5" y="440.562">setCookie(void(*)() cookie) : void</text><ellipse cx="7948.5" cy="450.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="7957.5" y="453.3667">toString() const : std::string</text><!--MD5=[cf295b530a4fefc129655c34795ddb61]
class C_0000000186--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000186" style="stroke: #A80036; stroke-width: 1.5;" width="180" x="7978" y="53"/><ellipse cx="7993" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7995.9688,74.6406 Q7995.3906,74.9375 7994.75,75.0781 Q7994.1094,75.2344 7993.4063,75.2344 Q7990.9063,75.2344 7989.5781,73.5938 Q7988.2656,71.9375 7988.2656,68.8125 Q7988.2656,65.6875 7989.5781,64.0313 Q7990.9063,62.375 7993.4063,62.375 Q7994.1094,62.375 7994.75,62.5313 Q7995.4063,62.6875 7995.9688,62.9844 L7995.9688,65.7031 Q7995.3438,65.125 7994.75,64.8594 Q7994.1563,64.5781 7993.5313,64.5781 Q7992.1875,64.5781 7991.5,65.6563 Q7990.8125,66.7188 7990.8125,68.8125 Q7990.8125,70.9063 7991.5,71.9844 Q7992.1875,73.0469 7993.5313,73.0469 Q7994.1563,73.0469 7994.75,72.7813 Q7995.3438,72.5 7995.9688,71.9219 L7995.9688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="8007" y="73.1543">detail::FixedBuffer</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="34" x="8127" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="8128" y="62.1387">4000</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7979" x2="8157" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7979" x2="8157" y1="93" y2="93"/><!--MD5=[763ca4fc420f3dc0dd716563687820f5]
class C_0000000181--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="342.5078" id="C_0000000181" style="stroke: #A80036; stroke-width: 1.5;" width="301" x="6920.5" y="1250"/><ellipse cx="7033.25" cy="1266" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7036.2188,1271.6406 Q7035.6406,1271.9375 7035,1272.0781 Q7034.3594,1272.2344 7033.6563,1272.2344 Q7031.1563,1272.2344 7029.8281,1270.5938 Q7028.5156,1268.9375 7028.5156,1265.8125 Q7028.5156,1262.6875 7029.8281,1261.0313 Q7031.1563,1259.375 7033.6563,1259.375 Q7034.3594,1259.375 7035,1259.5313 Q7035.6563,1259.6875 7036.2188,1259.9844 L7036.2188,1262.7031 Q7035.5938,1262.125 7035,1261.8594 Q7034.4063,1261.5781 7033.7813,1261.5781 Q7032.4375,1261.5781 7031.75,1262.6563 Q7031.0625,1263.7188 7031.0625,1265.8125 Q7031.0625,1267.9063 7031.75,1268.9844 Q7032.4375,1270.0469 7033.7813,1270.0469 Q7034.4063,1270.0469 7035,1269.7813 Q7035.5938,1269.5 7036.2188,1268.9219 L7036.2188,1271.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="7053.75" y="1270.1543">LogStream</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6921.5" x2="7220.5" y1="1282" y2="1282"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6921.5" x2="7220.5" y1="1290" y2="1290"/><ellipse cx="6931.5" cy="1301" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6940.5" y="1304.2104">operator&lt;&lt;(bool v) : self&amp;</text><ellipse cx="6931.5" cy="1313.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6940.5" y="1317.0151">operator&lt;&lt;(short ) : self&amp;</text><ellipse cx="6931.5" cy="1326.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6940.5" y="1329.8198">operator&lt;&lt;(unsigned short ) : self&amp;</text><ellipse cx="6931.5" cy="1339.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6940.5" y="1342.6245">operator&lt;&lt;(int ) : self&amp;</text><ellipse cx="6931.5" cy="1352.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="6940.5" y="1355.4292">operator&lt;&lt;(unsigned int ) : self&amp;</text><ellipse cx="6931.5" cy="1365.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6940.5" y="1368.2339">operator&lt;&lt;(long ) : self&amp;</text><ellipse cx="6931.5" cy="1377.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="6940.5" y="1381.0386">operator&lt;&lt;(unsigned long ) : self&amp;</text><ellipse cx="6931.5" cy="1390.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="6940.5" y="1393.8433">operator&lt;&lt;(long long const&amp; ) : self&amp;</text><ellipse cx="6931.5" cy="1403.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="6940.5" y="1406.6479">operator&lt;&lt;(unsigned long long const&amp; ) : self&amp;</text><ellipse cx="6931.5" cy="1416.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="6940.5" y="1419.4526">operator&lt;&lt;(void const* ) : self&amp;</text><ellipse cx="6931.5" cy="1429.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="6940.5" y="1432.2573">operator&lt;&lt;(float&amp; v) : self&amp;</text><ellipse cx="6931.5" cy="1441.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="6940.5" y="1445.062">operator&lt;&lt;(double const&amp; ) : self&amp;</text><ellipse cx="6931.5" cy="1454.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="6940.5" y="1457.8667">operator&lt;&lt;(long double const&amp; v) : self&amp;</text><ellipse cx="6931.5" cy="1467.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6940.5" y="1470.6714">operator&lt;&lt;(char v) : self&amp;</text><ellipse cx="6931.5" cy="1480.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="6940.5" y="1483.4761">operator&lt;&lt;(char const(&amp;)[SIZE] buf) : self&amp;</text><ellipse cx="6931.5" cy="1493.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6940.5" y="1496.2808">operator&lt;&lt;(char* str) : self&amp;</text><ellipse cx="6931.5" cy="1505.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="6940.5" y="1509.0854">operator&lt;&lt;(char const* str) : self&amp;</text><ellipse cx="6931.5" cy="1518.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="6940.5" y="1521.8901">operator&lt;&lt;(unsigned char const* str) : self&amp;</text><ellipse cx="6931.5" cy="1531.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="6940.5" y="1534.6948">operator&lt;&lt;(std::string const&amp; v) : self&amp;</text><ellipse cx="6931.5" cy="1544.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6940.5" y="1547.4995">append(char const* data, size_t len) : void</text><ellipse cx="6931.5" cy="1557.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="6940.5" y="1560.3042">bufferData() const : char const*</text><ellipse cx="6931.5" cy="1569.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="6940.5" y="1573.1089">bufferLength() const : size_t</text><ellipse cx="6931.5" cy="1582.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="6940.5" y="1585.9136">resetBuffer() : void</text><!--MD5=[60cd408110fa28767f4342d8f5e46081]
class C_0000000190--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="86.4141" id="C_0000000190" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="335" y="34"/><ellipse cx="426.25" cy="50" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M429.2188,55.6406 Q428.6406,55.9375 428,56.0781 Q427.3594,56.2344 426.6563,56.2344 Q424.1563,56.2344 422.8281,54.5938 Q421.5156,52.9375 421.5156,49.8125 Q421.5156,46.6875 422.8281,45.0313 Q424.1563,43.375 426.6563,43.375 Q427.3594,43.375 428,43.5313 Q428.6563,43.6875 429.2188,43.9844 L429.2188,46.7031 Q428.5938,46.125 428,45.8594 Q427.4063,45.5781 426.7813,45.5781 Q425.4375,45.5781 424.75,46.6563 Q424.0625,47.7188 424.0625,49.8125 Q424.0625,51.9063 424.75,52.9844 Q425.4375,54.0469 426.7813,54.0469 Q427.4063,54.0469 428,53.7813 Q428.5938,53.5 429.2188,52.9219 L429.2188,55.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="446.75" y="54.1543">Fmt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="336" x2="548" y1="66" y2="66"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="336" x2="548" y1="74" y2="74"/><ellipse cx="346" cy="85" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="355" y="88.2104">Fmt(char const* fmt, T val) : void</text><ellipse cx="346" cy="97.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="355" y="101.0151">data() const : char const*</text><ellipse cx="346" cy="110.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="355" y="113.8198">length() const : int</text><!--MD5=[e623c113034245ee69d96252f6c34609]
class C_0000000195--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000195" style="stroke: #A80036; stroke-width: 1.5;" width="114" x="5861" y="53"/><ellipse cx="5876" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5878.9688,74.6406 Q5878.3906,74.9375 5877.75,75.0781 Q5877.1094,75.2344 5876.4063,75.2344 Q5873.9063,75.2344 5872.5781,73.5938 Q5871.2656,71.9375 5871.2656,68.8125 Q5871.2656,65.6875 5872.5781,64.0313 Q5873.9063,62.375 5876.4063,62.375 Q5877.1094,62.375 5877.75,62.5313 Q5878.4063,62.6875 5878.9688,62.9844 L5878.9688,65.7031 Q5878.3438,65.125 5877.75,64.8594 Q5877.1563,64.5781 5876.5313,64.5781 Q5875.1875,64.5781 5874.5,65.6563 Q5873.8125,66.7188 5873.8125,68.8125 Q5873.8125,70.9063 5874.5,71.9844 Q5875.1875,73.0469 5876.5313,73.0469 Q5877.1563,73.0469 5877.75,72.7813 Q5878.3438,72.5 5878.9688,71.9219 L5878.9688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="5890" y="73.1543">NonCopyable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5862" x2="5974" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5862" x2="5974" y1="93" y2="93"/><!--MD5=[e368d496503bc4cd8fea75b57c17fc58]
class C_0000000208--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="137.6328" id="C_0000000208" style="stroke: #A80036; stroke-width: 1.5;" width="698" x="5986" y="754"/><ellipse cx="6280.75" cy="770" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6283.7188,775.6406 Q6283.1406,775.9375 6282.5,776.0781 Q6281.8594,776.2344 6281.1563,776.2344 Q6278.6563,776.2344 6277.3281,774.5938 Q6276.0156,772.9375 6276.0156,769.8125 Q6276.0156,766.6875 6277.3281,765.0313 Q6278.6563,763.375 6281.1563,763.375 Q6281.8594,763.375 6282.5,763.5313 Q6283.1563,763.6875 6283.7188,763.9844 L6283.7188,766.7031 Q6283.0938,766.125 6282.5,765.8594 Q6281.9063,765.5781 6281.2813,765.5781 Q6279.9375,765.5781 6279.25,766.6563 Q6278.5625,767.7188 6278.5625,769.8125 Q6278.5625,771.9063 6279.25,772.9844 Q6279.9375,774.0469 6281.2813,774.0469 Q6281.9063,774.0469 6282.5,773.7813 Q6283.0938,773.5 6283.7188,772.9219 L6283.7188,775.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="6301.25" y="774.1543">AsyncFileLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5987" x2="6683" y1="786" y2="786"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5987" x2="6683" y1="794" y2="794"/><ellipse cx="5997" cy="805" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="6006" y="808.2104">output(char const* msg, uint64_t const len) : void</text><ellipse cx="5997" cy="817.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="6006" y="821.0151">flush() : void</text><ellipse cx="5997" cy="830.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="6006" y="833.8198">startLogging() : void</text><ellipse cx="5997" cy="843.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6006" y="846.6245">setFileSizeLimit(uint64_t limit) : void</text><ellipse cx="5997" cy="856.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="672" x="6006" y="859.4292">setFileName(std::string const&amp; baseName, std::string const&amp; extName = ".log", std::string const&amp; path = "./") : void</text><ellipse cx="5997" cy="869.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6006" y="872.2339">~AsyncFileLogger() : void</text><ellipse cx="5997" cy="881.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="6006" y="885.0386">AsyncFileLogger() : void</text><!--MD5=[4f4202d8d372fc046e20e0fb7263769b]
class C_0000000223--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="112.0234" id="C_0000000223" style="stroke: #A80036; stroke-width: 1.5;" width="655" x="6042.5" y="296.5"/><ellipse cx="6333.75" cy="312.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6336.7188,318.1406 Q6336.1406,318.4375 6335.5,318.5781 Q6334.8594,318.7344 6334.1563,318.7344 Q6331.6563,318.7344 6330.3281,317.0938 Q6329.0156,315.4375 6329.0156,312.3125 Q6329.0156,309.1875 6330.3281,307.5313 Q6331.6563,305.875 6334.1563,305.875 Q6334.8594,305.875 6335.5,306.0313 Q6336.1563,306.1875 6336.7188,306.4844 L6336.7188,309.2031 Q6336.0938,308.625 6335.5,308.3594 Q6334.9063,308.0781 6334.2813,308.0781 Q6332.9375,308.0781 6332.25,309.1563 Q6331.5625,310.2188 6331.5625,312.3125 Q6331.5625,314.4063 6332.25,315.4844 Q6332.9375,316.5469 6334.2813,316.5469 Q6334.9063,316.5469 6335.5,316.2813 Q6336.0938,316 6336.7188,315.4219 L6336.7188,318.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="6354.25" y="316.6543">LoggerFile</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6043.5" x2="6696.5" y1="328.5" y2="328.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6043.5" x2="6696.5" y1="336.5" y2="336.5"/><ellipse cx="6053.5" cy="347.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="629" x="6062.5" y="350.7104">LoggerFile(std::string const&amp; filePath, std::string const&amp; fileBaseName, std::string const&amp; fileExtName) : void</text><ellipse cx="6053.5" cy="360.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6062.5" y="363.5151">~LoggerFile() : void</text><ellipse cx="6053.5" cy="373.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="6062.5" y="376.3198">writeLog(StringPtr const buf) : void</text><ellipse cx="6053.5" cy="385.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="6062.5" y="389.1245">getLength() : uint64_t</text><ellipse cx="6053.5" cy="398.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="6062.5" y="401.9292">flush() : void</text><!--MD5=[7fd7c59e33401ed2f17ab190eac57853]
class C_0000000245--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="393.7266" id="C_0000000245" style="stroke: #A80036; stroke-width: 1.5;" width="1018" x="6228" y="2319.5"/><ellipse cx="6717.75" cy="2335.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6720.7188,2341.1406 Q6720.1406,2341.4375 6719.5,2341.5781 Q6718.8594,2341.7344 6718.1563,2341.7344 Q6715.6563,2341.7344 6714.3281,2340.0938 Q6713.0156,2338.4375 6713.0156,2335.3125 Q6713.0156,2332.1875 6714.3281,2330.5313 Q6715.6563,2328.875 6718.1563,2328.875 Q6718.8594,2328.875 6719.5,2329.0313 Q6720.1563,2329.1875 6720.7188,2329.4844 L6720.7188,2332.2031 Q6720.0938,2331.625 6719.5,2331.3594 Q6718.9063,2331.0781 6718.2813,2331.0781 Q6716.9375,2331.0781 6716.25,2332.1563 Q6715.5625,2333.2188 6715.5625,2335.3125 Q6715.5625,2337.4063 6716.25,2338.4844 Q6716.9375,2339.5469 6718.2813,2339.5469 Q6718.9063,2339.5469 6719.5,2339.2813 Q6720.0938,2339 6720.7188,2338.4219 L6720.7188,2341.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="6738.25" y="2339.6543">Date</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6229" x2="7245" y1="2351.5" y2="2351.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6229" x2="7245" y1="2359.5" y2="2359.5"/><ellipse cx="6239" cy="2370.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="6248" y="2373.7104">Date() : void</text><ellipse cx="6239" cy="2383.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6248" y="2386.5151">Date(int64_t microSec) : void</text><ellipse cx="6239" cy="2396.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="992" x="6248" y="2399.3198">Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void</text><ellipse cx="6239" cy="2408.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="106" x="6248" y="2412.1245">date() : Date const</text><ellipse cx="6239" cy="2421.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="104" x="6248" y="2424.9292">now() : Date const</text><ellipse cx="6239" cy="2434.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="6248" y="2437.7339">after(double second) const : Date const</text><ellipse cx="6239" cy="2447.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="6248" y="2450.5386">roundSecond() const : Date const</text><ellipse cx="6239" cy="2460.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="6248" y="2463.3433">roundDay() const : Date const</text><ellipse cx="6239" cy="2472.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="6248" y="2476.1479">~Date() : void</text><ellipse cx="6239" cy="2485.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="6248" y="2488.9526">operator==(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2498.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="6248" y="2501.7573">operator!=(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2511.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="6248" y="2514.562">operator&lt;(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2524.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="6248" y="2527.3667">operator&gt;(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2536.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="6248" y="2540.1714">operator&gt;=(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2549.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="6248" y="2552.9761">operator&lt;=(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2562.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="6248" y="2565.7808">microSecondsSinceEpoch() const : int64_t</text><ellipse cx="6239" cy="2575.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="6248" y="2578.5854">secondsSinceEpoch() const : int64_t</text><ellipse cx="6239" cy="2588.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="6248" y="2591.3901">tmStruct() const : tm</text><ellipse cx="6239" cy="2600.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="6248" y="2604.1948">toFormattedString(bool showMicroseconds) const : std::string</text><ellipse cx="6239" cy="2613.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="608" x="6248" y="2616.9995">toCustomedFormattedString(std::string const&amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="6239" cy="2626.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="6248" y="2629.8042">toFormattedStringLocal(bool showMicroseconds) const : std::string</text><ellipse cx="6239" cy="2639.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="637" x="6248" y="2642.6089">toCustomedFormattedStringLocal(std::string const&amp; fmtStr, bool showMicroseconds = false) const : std::string</text><ellipse cx="6239" cy="2652.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6248" y="2655.4136">toDbStringLocal() const : std::string</text><ellipse cx="6239" cy="2665.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="309" x="6248" y="2668.2183">fromDbStringLocal(std::string const&amp; datetime) : Date</text><ellipse cx="6239" cy="2677.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="6248" y="2681.0229">toCustomedFormattedString(std::string const&amp; fmtStr, char* str, size_t len) const : void</text><ellipse cx="6239" cy="2690.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="6248" y="2693.8276">isSameSecond(Date const&amp; date) const : bool</text><ellipse cx="6239" cy="2703.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="6248" y="2706.6323">swap(Date&amp; that) : void</text><!--MD5=[bdca1a72b25ed814fa1855adb00d821f]
class C_0000000270--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="176.0469" id="C_0000000270" style="stroke: #A80036; stroke-width: 1.5;" width="355" x="5065.5" y="735"/><ellipse cx="5186.25" cy="751" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5189.2188,756.6406 Q5188.6406,756.9375 5188,757.0781 Q5187.3594,757.2344 5186.6563,757.2344 Q5184.1563,757.2344 5182.8281,755.5938 Q5181.5156,753.9375 5181.5156,750.8125 Q5181.5156,747.6875 5182.8281,746.0313 Q5184.1563,744.375 5186.6563,744.375 Q5187.3594,744.375 5188,744.5313 Q5188.6563,744.6875 5189.2188,744.9844 L5189.2188,747.7031 Q5188.5938,747.125 5188,746.8594 Q5187.4063,746.5781 5186.7813,746.5781 Q5185.4375,746.5781 5184.75,747.6563 Q5184.0625,748.7188 5184.0625,750.8125 Q5184.0625,752.9063 5184.75,753.9844 Q5185.4375,755.0469 5186.7813,755.0469 Q5187.4063,755.0469 5188,754.7813 Q5188.5938,754.5 5189.2188,753.9219 L5189.2188,756.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="5206.75" y="755.1543">SerialTaskQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5066.5" x2="5419.5" y1="767" y2="767"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5066.5" x2="5419.5" y1="775" y2="775"/><ellipse cx="5076.5" cy="786" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="5085.5" y="789.2104">runTaskInQueue(std::function&lt;void()&gt; const&amp; task) : void</text><ellipse cx="5076.5" cy="798.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="5085.5" y="802.0151">runTaskInQueue(std::function&lt;void()&gt;&amp;&amp; task) : void</text><ellipse cx="5076.5" cy="811.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="5085.5" y="814.8198">getName() const : std::string</text><ellipse cx="5076.5" cy="824.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="5085.5" y="827.6245">waitAllTasksFinished() : void</text><ellipse cx="5076.5" cy="837.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="5085.5" y="840.4292">SerialTaskQueue() : void</text><ellipse cx="5076.5" cy="850.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="5085.5" y="853.2339">SerialTaskQueue(std::string const&amp; name) : void</text><ellipse cx="5076.5" cy="862.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="5085.5" y="866.0386">~SerialTaskQueue() : void</text><ellipse cx="5076.5" cy="875.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="5085.5" y="878.8433">isRuningTask() : bool</text><ellipse cx="5076.5" cy="888.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5085.5" y="891.6479">getTaskCount() : size_t</text><ellipse cx="5076.5" cy="901.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5085.5" y="904.4526">stop() : void</text><!--MD5=[bfc80389d6e61e96eca92b5256374a68]
class C_0000000275--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="150.4375" id="C_0000000275" style="stroke: #A80036; stroke-width: 1.5;" width="587" x="3769.5" y="748"/><ellipse cx="3990.75" cy="764" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3993.7188,769.6406 Q3993.1406,769.9375 3992.5,770.0781 Q3991.8594,770.2344 3991.1563,770.2344 Q3988.6563,770.2344 3987.3281,768.5938 Q3986.0156,766.9375 3986.0156,763.8125 Q3986.0156,760.6875 3987.3281,759.0313 Q3988.6563,757.375 3991.1563,757.375 Q3991.8594,757.375 3992.5,757.5313 Q3993.1563,757.6875 3993.7188,757.9844 L3993.7188,760.7031 Q3993.0938,760.125 3992.5,759.8594 Q3991.9063,759.5781 3991.2813,759.5781 Q3989.9375,759.5781 3989.25,760.6563 Q3988.5625,761.7188 3988.5625,763.8125 Q3988.5625,765.9063 3989.25,766.9844 Q3989.9375,768.0469 3991.2813,768.0469 Q3991.9063,768.0469 3992.5,767.7813 Q3993.0938,767.5 3993.7188,766.9219 L3993.7188,769.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="136" x="4011.25" y="768.1543">EventLoopThreadPool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3770.5" x2="4355.5" y1="780" y2="780"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3770.5" x2="4355.5" y1="788" y2="788"/><ellipse cx="3780.5" cy="799" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="3789.5" y="802.2104">EventLoopThreadPool() : void</text><ellipse cx="3780.5" cy="811.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="561" x="3789.5" y="815.0151">EventLoopThreadPool(size_t threadNum, std::string const&amp; name = "EventLoopThreadPool") : void</text><ellipse cx="3780.5" cy="824.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="3789.5" y="827.8198">start() : void</text><ellipse cx="3780.5" cy="837.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="3789.5" y="840.6245">wait() : void</text><ellipse cx="3780.5" cy="850.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="3789.5" y="853.4292">size() : size_t</text><ellipse cx="3780.5" cy="863.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="3789.5" y="866.2339">getNextLoop() : EventLoop*</text><ellipse cx="3780.5" cy="875.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3789.5" y="879.0386">getLoop(size_t id) : EventLoop*</text><ellipse cx="3780.5" cy="888.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="3789.5" y="891.8433">getLoops() const : std::vector&lt;EventLoop*&gt;</text><!--MD5=[86338ae2d68313d7363bbc2eea754a34]
class C_0000000292--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000292" style="stroke: #A80036; stroke-width: 1.5;" width="97" x="1116.5" y="1397.5"/><ellipse cx="1131.5" cy="1413.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1134.4688,1419.1406 Q1133.8906,1419.4375 1133.25,1419.5781 Q1132.6094,1419.7344 1131.9063,1419.7344 Q1129.4063,1419.7344 1128.0781,1418.0938 Q1126.7656,1416.4375 1126.7656,1413.3125 Q1126.7656,1410.1875 1128.0781,1408.5313 Q1129.4063,1406.875 1131.9063,1406.875 Q1132.6094,1406.875 1133.25,1407.0313 Q1133.9063,1407.1875 1134.4688,1407.4844 L1134.4688,1410.2031 Q1133.8438,1409.625 1133.25,1409.3594 Q1132.6563,1409.0781 1132.0313,1409.0781 Q1130.6875,1409.0781 1130,1410.1563 Q1129.3125,1411.2188 1129.3125,1413.3125 Q1129.3125,1415.4063 1130,1416.4844 Q1130.6875,1417.5469 1132.0313,1417.5469 Q1132.6563,1417.5469 1133.25,1417.2813 Q1133.8438,1417 1134.4688,1416.4219 L1134.4688,1419.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="1145.5" y="1417.6543">Connector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1117.5" x2="1212.5" y1="1429.5" y2="1429.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1117.5" x2="1212.5" y1="1437.5" y2="1437.5"/><!--MD5=[ef5f59b05c05f570e221b88f18454c23]
class C_0000000296--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000296" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="3092" y="1397.5"/><ellipse cx="3107" cy="1413.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3109.9688,1419.1406 Q3109.3906,1419.4375 3108.75,1419.5781 Q3108.1094,1419.7344 3107.4063,1419.7344 Q3104.9063,1419.7344 3103.5781,1418.0938 Q3102.2656,1416.4375 3102.2656,1413.3125 Q3102.2656,1410.1875 3103.5781,1408.5313 Q3104.9063,1406.875 3107.4063,1406.875 Q3108.1094,1406.875 3108.75,1407.0313 Q3109.4063,1407.1875 3109.9688,1407.4844 L3109.9688,1410.2031 Q3109.3438,1409.625 3108.75,1409.3594 Q3108.1563,1409.0781 3107.5313,1409.0781 Q3106.1875,1409.0781 3105.5,1410.1563 Q3104.8125,1411.2188 3104.8125,1413.3125 Q3104.8125,1415.4063 3105.5,1416.4844 Q3106.1875,1417.5469 3107.5313,1417.5469 Q3108.1563,1417.5469 3108.75,1417.2813 Q3109.3438,1417 3109.9688,1416.4219 L3109.9688,1419.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="3121" y="1417.6543">SSLContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3093" x2="3193" y1="1429.5" y2="1429.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3093" x2="3193" y1="1437.5" y2="1437.5"/><!--MD5=[816198e42984d52b0ad188477440cdb6]
class C_0000000300--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="304.0938" id="C_0000000300" style="stroke: #A80036; stroke-width: 1.5;" width="1474" x="326" y="671"/><ellipse cx="1030.25" cy="687" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1033.2188,692.6406 Q1032.6406,692.9375 1032,693.0781 Q1031.3594,693.2344 1030.6563,693.2344 Q1028.1563,693.2344 1026.8281,691.5938 Q1025.5156,689.9375 1025.5156,686.8125 Q1025.5156,683.6875 1026.8281,682.0313 Q1028.1563,680.375 1030.6563,680.375 Q1031.3594,680.375 1032,680.5313 Q1032.6563,680.6875 1033.2188,680.9844 L1033.2188,683.7031 Q1032.5938,683.125 1032,682.8594 Q1031.4063,682.5781 1030.7813,682.5781 Q1029.4375,682.5781 1028.75,683.6563 Q1028.0625,684.7188 1028.0625,686.8125 Q1028.0625,688.9063 1028.75,689.9844 Q1029.4375,691.0469 1030.7813,691.0469 Q1031.4063,691.0469 1032,690.7813 Q1032.5938,690.5 1033.2188,689.9219 L1033.2188,692.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="1050.75" y="691.1543">TcpClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="327" x2="1799" y1="703" y2="703"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="327" x2="1799" y1="711" y2="711"/><ellipse cx="337" cy="722" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="346" y="725.2104">TcpClient(EventLoop* loop, InetAddress const&amp; serverAddr, std::string const&amp; nameArg) : void</text><ellipse cx="337" cy="734.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="346" y="738.0151">~TcpClient() : void</text><ellipse cx="337" cy="747.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="346" y="750.8198">connect() : void</text><ellipse cx="337" cy="760.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="346" y="763.6245">disconnect() : void</text><ellipse cx="337" cy="773.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="346" y="776.4292">stop() : void</text><ellipse cx="337" cy="786.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="346" y="789.2339">connection() const : TcpConnectionPtr</text><ellipse cx="337" cy="798.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="346" y="802.0386">getLoop() const : EventLoop*</text><ellipse cx="337" cy="811.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="346" y="814.8433">retry() const : bool</text><ellipse cx="337" cy="824.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="346" y="827.6479">enableRetry() : void</text><ellipse cx="337" cy="837.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="346" y="840.4526">name() const : std::string const&amp;</text><ellipse cx="337" cy="850.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="346" y="853.2573">setConnectionCallback(ConnectionCallback const&amp; cb) : void</text><ellipse cx="337" cy="862.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="346" y="866.062">setConnectionCallback(ConnectionCallback&amp;&amp; cb) : void</text><ellipse cx="337" cy="875.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="346" y="878.8667">setConnectionErrorCallback(ConnectionErrorCallback const&amp; cb) : void</text><ellipse cx="337" cy="888.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="346" y="891.6714">setMessageCallback(RecvMessageCallback const&amp; cb) : void</text><ellipse cx="337" cy="901.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="346" y="904.4761">setMessageCallback(RecvMessageCallback&amp;&amp; cb) : void</text><ellipse cx="337" cy="914.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="346" y="917.2808">setWriteCompleteCallback(WriteCompleteCallback const&amp; cb) : void</text><ellipse cx="337" cy="926.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="346" y="930.0854">setWriteCompleteCallback(WriteCompleteCallback&amp;&amp; cb) : void</text><ellipse cx="337" cy="939.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="346" y="942.8901">setSSLErrorCallback(SSLErrorCallback const&amp; cb) : void</text><ellipse cx="337" cy="952.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="346" y="955.6948">setSSLErrorCallback(SSLErrorCallback&amp;&amp; cb) : void</text><ellipse cx="337" cy="965.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="346" y="968.4995">enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname =</text><text fill="#000000" font-family="monospace" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="728" x="833" y="968.4995">, std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; const&amp; sslConfCmds = {}, std::string const&amp; certPath =</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1568" y="968.4995">, std::string const&amp; keyPath = "") : void</text><!--MD5=[e66227db6b27a47697a79e7219a4f338]
class C_0000000320--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="60.8047" id="C_0000000320" style="stroke: #A80036; stroke-width: 1.5;" width="147" x="1116.5" y="322"/><ellipse cx="1144.55" cy="338" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1147.5188,343.6406 Q1146.9406,343.9375 1146.3,344.0781 Q1145.6594,344.2344 1144.9563,344.2344 Q1142.4563,344.2344 1141.1281,342.5938 Q1139.8156,340.9375 1139.8156,337.8125 Q1139.8156,334.6875 1141.1281,333.0313 Q1142.4563,331.375 1144.9563,331.375 Q1145.6594,331.375 1146.3,331.5313 Q1146.9563,331.6875 1147.5188,331.9844 L1147.5188,334.7031 Q1146.8938,334.125 1146.3,333.8594 Q1145.7063,333.5781 1145.0813,333.5781 Q1143.7375,333.5781 1143.05,334.6563 Q1142.3625,335.7188 1142.3625,337.8125 Q1142.3625,339.9063 1143.05,340.9844 Q1143.7375,342.0469 1145.0813,342.0469 Q1145.7063,342.0469 1146.3,341.7813 Q1146.8938,341.5 1147.5188,340.9219 L1147.5188,343.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="1161.45" y="342.1543">IgnoreSigPipe</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1117.5" x2="1262.5" y1="354" y2="354"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1117.5" x2="1262.5" y1="362" y2="362"/><ellipse cx="1127.5" cy="373" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1136.5" y="376.2104">IgnoreSigPipe() : void</text><!--MD5=[b2f49a1225e23cba57ad105cd8c13d75]
class C_0000000345--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="278.4844" id="C_0000000345" style="stroke: #A80036; stroke-width: 1.5;" width="493" x="3416.5" y="1282.5"/><ellipse cx="3621.25" cy="1298.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3624.2188,1304.1406 Q3623.6406,1304.4375 3623,1304.5781 Q3622.3594,1304.7344 3621.6563,1304.7344 Q3619.1563,1304.7344 3617.8281,1303.0938 Q3616.5156,1301.4375 3616.5156,1298.3125 Q3616.5156,1295.1875 3617.8281,1293.5313 Q3619.1563,1291.875 3621.6563,1291.875 Q3622.3594,1291.875 3623,1292.0313 Q3623.6563,1292.1875 3624.2188,1292.4844 L3624.2188,1295.2031 Q3623.5938,1294.625 3623,1294.3594 Q3622.4063,1294.0781 3621.7813,1294.0781 Q3620.4375,1294.0781 3619.75,1295.1563 Q3619.0625,1296.2188 3619.0625,1298.3125 Q3619.0625,1300.4063 3619.75,1301.4844 Q3620.4375,1302.5469 3621.7813,1302.5469 Q3622.4063,1302.5469 3623,1302.2813 Q3623.5938,1302 3624.2188,1301.4219 L3624.2188,1304.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="3641.75" y="1302.6543">InetAddress</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3417.5" x2="3908.5" y1="1314.5" y2="1314.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3417.5" x2="3908.5" y1="1322.5" y2="1322.5"/><ellipse cx="3427.5" cy="1333.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="467" x="3436.5" y="1336.7104">InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void</text><ellipse cx="3427.5" cy="1346.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="3436.5" y="1349.5151">InetAddress(std::string const&amp; ip, uint16_t port, bool ipv6 = false) : void</text><ellipse cx="3427.5" cy="1359.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="3436.5" y="1362.3198">InetAddress(sockaddr_in const&amp; addr) : void</text><ellipse cx="3427.5" cy="1371.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="3436.5" y="1375.1245">InetAddress(sockaddr_in6 const&amp; addr) : void</text><ellipse cx="3427.5" cy="1384.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3436.5" y="1387.9292">family() const : sa_family_t</text><ellipse cx="3427.5" cy="1397.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="3436.5" y="1400.7339">toIp() const : std::string</text><ellipse cx="3427.5" cy="1410.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="3436.5" y="1413.5386">toIpPort() const : std::string</text><ellipse cx="3427.5" cy="1423.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3436.5" y="1426.3433">toPort() const : uint16_t</text><ellipse cx="3427.5" cy="1435.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3436.5" y="1439.1479">isIpV6() const : bool</text><ellipse cx="3427.5" cy="1448.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3436.5" y="1451.9526">isIntranetIp() const : bool</text><ellipse cx="3427.5" cy="1461.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="3436.5" y="1464.7573">isLoopbackIp() const : bool</text><ellipse cx="3427.5" cy="1474.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="3436.5" y="1477.562">getSockAddr() const : sockaddr const*</text><ellipse cx="3427.5" cy="1487.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="3436.5" y="1490.3667">setSockAddrInet6(sockaddr_in6 const&amp; addr6) : void</text><ellipse cx="3427.5" cy="1499.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3436.5" y="1503.1714">ipNetEndian() const : uint32_t</text><ellipse cx="3427.5" cy="1512.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="3436.5" y="1515.9761">ip6NetEndian() const : uint32_t const*</text><ellipse cx="3427.5" cy="1525.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="3436.5" y="1528.7808">portNetEndian() const : uint16_t</text><ellipse cx="3427.5" cy="1538.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="3436.5" y="1541.5854">setPortNetEndian(uint16_t port) : void</text><ellipse cx="3427.5" cy="1551.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="3436.5" y="1554.3901">isUnspecified() const : bool</text><!--MD5=[89282a7e987a1d0b67125aff40fcb28b]
class C_0000000353--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000353" style="stroke: #A80036; stroke-width: 1.5;" width="144" x="3591" y="799"/><ellipse cx="3606" cy="815" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3608.9688,820.6406 Q3608.3906,820.9375 3607.75,821.0781 Q3607.1094,821.2344 3606.4063,821.2344 Q3603.9063,821.2344 3602.5781,819.5938 Q3601.2656,817.9375 3601.2656,814.8125 Q3601.2656,811.6875 3602.5781,810.0313 Q3603.9063,808.375 3606.4063,808.375 Q3607.1094,808.375 3607.75,808.5313 Q3608.4063,808.6875 3608.9688,808.9844 L3608.9688,811.7031 Q3608.3438,811.125 3607.75,810.8594 Q3607.1563,810.5781 3606.5313,810.5781 Q3605.1875,810.5781 3604.5,811.6563 Q3603.8125,812.7188 3603.8125,814.8125 Q3603.8125,816.9063 3604.5,817.9844 Q3605.1875,819.0469 3606.5313,819.0469 Q3607.1563,819.0469 3607.75,818.7813 Q3608.3438,818.5 3608.9688,817.9219 L3608.9688,820.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="3620" y="819.1543">&lt;&lt;anonymous&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3592" x2="3734" y1="831" y2="831"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3592" x2="3734" y1="839" y2="839"/><!--MD5=[6167dae62a5a1fe284981cb92fa26b73]
class C_0000000366--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="73.6094" id="C_0000000366" style="stroke: #A80036; stroke-width: 1.5;" width="134" x="86" y="315.5"/><ellipse cx="123.05" cy="331.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M127.1594,337.5 L119.4406,337.5 L119.4406,325.1094 L127.1594,325.1094 L127.1594,327.2656 L121.8938,327.2656 L121.8938,329.9375 L126.6594,329.9375 L126.6594,332.0938 L121.8938,332.0938 L121.8938,335.3438 L127.1594,335.3438 L127.1594,337.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="141.95" y="335.6543">SSLError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="87" x2="219" y1="347.5" y2="347.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="92" y="361.7104">kSSLHandshakeError</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="92" y="374.5151">kSSLInvalidCertificate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="87" x2="219" y1="381.1094" y2="381.1094"/><!--MD5=[c4a07f1d9351e267b252c76b63f4fe3b]
class C_0000000371--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="419.3359" id="C_0000000371" style="stroke: #A80036; stroke-width: 1.5;" width="360" x="3795" y="2307"/><ellipse cx="3945.25" cy="2323" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3948.2188,2328.6406 Q3947.6406,2328.9375 3947,2329.0781 Q3946.3594,2329.2344 3945.6563,2329.2344 Q3943.1563,2329.2344 3941.8281,2327.5938 Q3940.5156,2325.9375 3940.5156,2322.8125 Q3940.5156,2319.6875 3941.8281,2318.0313 Q3943.1563,2316.375 3945.6563,2316.375 Q3946.3594,2316.375 3947,2316.5313 Q3947.6563,2316.6875 3948.2188,2316.9844 L3948.2188,2319.7031 Q3947.5938,2319.125 3947,2318.8594 Q3946.4063,2318.5781 3945.7813,2318.5781 Q3944.4375,2318.5781 3943.75,2319.6563 Q3943.0625,2320.7188 3943.0625,2322.8125 Q3943.0625,2324.9063 3943.75,2325.9844 Q3944.4375,2327.0469 3945.7813,2327.0469 Q3946.4063,2327.0469 3947,2326.7813 Q3947.5938,2326.5 3948.2188,2325.9219 L3948.2188,2328.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="3965.75" y="2327.1543">Channel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3796" x2="4154" y1="2339" y2="2339"/><ellipse cx="3806" cy="2350" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="127" x="3815" y="2353.2104">kNoneEvent : int const</text><ellipse cx="3806" cy="2362.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="3815" y="2366.0151">kReadEvent : int const</text><ellipse cx="3806" cy="2375.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="3815" y="2378.8198">kWriteEvent : int const</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3796" x2="4154" y1="2385.4141" y2="2385.4141"/><ellipse cx="3806" cy="2396.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3815" y="2399.6245">Channel(EventLoop* loop, int fd) : void</text><ellipse cx="3806" cy="2409.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="3815" y="2412.4292">setReadCallback(Channel::EventCallback const&amp; cb) : void</text><ellipse cx="3806" cy="2422.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="3815" y="2425.2339">setReadCallback(Channel::EventCallback&amp;&amp; cb) : void</text><ellipse cx="3806" cy="2434.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="3815" y="2438.0386">setWriteCallback(Channel::EventCallback const&amp; cb) : void</text><ellipse cx="3806" cy="2447.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="3815" y="2450.8433">setWriteCallback(Channel::EventCallback&amp;&amp; cb) : void</text><ellipse cx="3806" cy="2460.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="3815" y="2463.6479">setCloseCallback(Channel::EventCallback const&amp; cb) : void</text><ellipse cx="3806" cy="2473.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="3815" y="2476.4526">setCloseCallback(Channel::EventCallback&amp;&amp; cb) : void</text><ellipse cx="3806" cy="2486.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3815" y="2489.2573">setErrorCallback(Channel::EventCallback const&amp; cb) : void</text><ellipse cx="3806" cy="2498.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="3815" y="2502.062">setErrorCallback(Channel::EventCallback&amp;&amp; cb) : void</text><ellipse cx="3806" cy="2511.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="3815" y="2514.8667">setEventCallback(Channel::EventCallback const&amp; cb) : void</text><ellipse cx="3806" cy="2524.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="3815" y="2527.6714">setEventCallback(Channel::EventCallback&amp;&amp; cb) : void</text><ellipse cx="3806" cy="2537.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="3815" y="2540.4761">fd() const : int</text><ellipse cx="3806" cy="2550.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3815" y="2553.2808">events() const : int</text><ellipse cx="3806" cy="2562.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="3815" y="2566.0854">revents() const : int</text><ellipse cx="3806" cy="2575.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="3815" y="2578.8901">isNoneEvent() const : bool</text><ellipse cx="3806" cy="2588.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3815" y="2591.6948">disableAll() : void</text><ellipse cx="3806" cy="2601.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="3815" y="2604.4995">remove() : void</text><ellipse cx="3806" cy="2614.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3815" y="2617.3042">ownerLoop() : EventLoop*</text><ellipse cx="3806" cy="2626.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3815" y="2630.1089">enableReading() : void</text><ellipse cx="3806" cy="2639.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="3815" y="2642.9136">disableReading() : void</text><ellipse cx="3806" cy="2652.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="3815" y="2655.7183">enableWriting() : void</text><ellipse cx="3806" cy="2665.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3815" y="2668.5229">disableWriting() : void</text><ellipse cx="3806" cy="2678.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3815" y="2681.3276">isWriting() const : bool</text><ellipse cx="3806" cy="2690.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3815" y="2694.1323">isReading() const : bool</text><ellipse cx="3806" cy="2703.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="3815" y="2706.937">updateEvents(int events) : void</text><ellipse cx="3806" cy="2716.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="3815" y="2719.7417">tie(std::shared_ptr&lt;void&gt; const&amp; obj) : void</text><!--MD5=[914c5a0a4e3b2d42031ca3707c5012e1]
class C_0000000413--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="112.0234" id="C_0000000413" style="stroke: #A80036; stroke-width: 1.5;" width="470" x="3992" y="1365.5"/><ellipse cx="4168.25" cy="1381.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4171.2188,1387.1406 Q4170.6406,1387.4375 4170,1387.5781 Q4169.3594,1387.7344 4168.6563,1387.7344 Q4166.1563,1387.7344 4164.8281,1386.0938 Q4163.5156,1384.4375 4163.5156,1381.3125 Q4163.5156,1378.1875 4164.8281,1376.5313 Q4166.1563,1374.875 4168.6563,1374.875 Q4169.3594,1374.875 4170,1375.0313 Q4170.6563,1375.1875 4171.2188,1375.4844 L4171.2188,1378.2031 Q4170.5938,1377.625 4170,1377.3594 Q4169.4063,1377.0781 4168.7813,1377.0781 Q4167.4375,1377.0781 4166.75,1378.1563 Q4166.0625,1379.2188 4166.0625,1381.3125 Q4166.0625,1383.4063 4166.75,1384.4844 Q4167.4375,1385.5469 4168.7813,1385.5469 Q4169.4063,1385.5469 4170,1385.2813 Q4170.5938,1385 4171.2188,1384.4219 L4171.2188,1387.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="4188.75" y="1385.6543">EventLoopThread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3993" x2="4461" y1="1397.5" y2="1397.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3993" x2="4461" y1="1405.5" y2="1405.5"/><ellipse cx="4003" cy="1416.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="444" x="4012" y="1419.7104">EventLoopThread(std::string const&amp; threadName = "EventLoopThread") : void</text><ellipse cx="4003" cy="1429.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4012" y="1432.5151">~EventLoopThread() : void</text><ellipse cx="4003" cy="1442.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="4012" y="1445.3198">wait() : void</text><ellipse cx="4003" cy="1454.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4012" y="1458.1245">getLoop() const : EventLoop*</text><ellipse cx="4003" cy="1467.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="4012" y="1470.9292">run() : void</text><!--MD5=[491679034f5f78cb4966e891605efcb2]
class C_0000000428--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="496.1641" id="C_0000000428" style="stroke: #A80036; stroke-width: 1.5;" width="1238" x="1835" y="575"/><ellipse cx="2403.25" cy="591" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2403.3594,586.3438 L2402.2031,591.4219 L2404.5313,591.4219 L2403.3594,586.3438 Z M2401.875,584.1094 L2404.8594,584.1094 L2408.2188,596.5 L2405.7656,596.5 L2405,593.4375 L2401.7188,593.4375 L2400.9688,596.5 L2398.5313,596.5 L2401.875,584.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="2423.75" y="595.1543">TcpConnection</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1836" x2="3072" y1="607" y2="607"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1836" x2="3072" y1="615" y2="615"/><ellipse cx="1846" cy="626" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1855" y="629.2104">TcpConnection() : void</text><ellipse cx="1846" cy="638.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1855" y="642.0151">~TcpConnection() : void</text><ellipse cx="1846" cy="651.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="249" x="1855" y="654.8198">send(char const* msg, size_t len) = 0 : void</text><ellipse cx="1846" cy="664.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="248" x="1855" y="667.6245">send(void const* msg, size_t len) = 0 : void</text><ellipse cx="1846" cy="677.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="1855" y="680.4292">send(std::string const&amp; msg) = 0 : void</text><ellipse cx="1846" cy="690.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="198" x="1855" y="693.2339">send(std::string&amp;&amp; msg) = 0 : void</text><ellipse cx="1846" cy="702.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="233" x="1855" y="706.0386">send(MsgBuffer const&amp; buffer) = 0 : void</text><ellipse cx="1846" cy="715.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="1855" y="718.8433">send(MsgBuffer&amp;&amp; buffer) = 0 : void</text><ellipse cx="1846" cy="728.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="1855" y="731.6479">send(std::shared_ptr&lt;std::string&gt; const&amp; msgPtr) = 0 : void</text><ellipse cx="1846" cy="741.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="343" x="1855" y="744.4526">send(std::shared_ptr&lt;MsgBuffer&gt; const&amp; msgPtr) = 0 : void</text><ellipse cx="1846" cy="754.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="436" x="1855" y="757.2573">sendFile(char const* fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="1846" cy="766.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="455" x="1855" y="770.062">sendFile(wchar_t const* fileName, size_t offset = 0, size_t length = 0) = 0 : void</text><ellipse cx="1846" cy="779.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="430" x="1855" y="782.8667">sendStream(std::function&lt;std::size_t(char*,std::size_t)&gt; callback) = 0 : void</text><ellipse cx="1846" cy="792.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241" x="1855" y="795.6714">localAddr() const = 0 : InetAddress const&amp;</text><ellipse cx="1846" cy="805.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241" x="1855" y="808.4761">peerAddr() const = 0 : InetAddress const&amp;</text><ellipse cx="1846" cy="818.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="1855" y="821.2808">connected() const = 0 : bool</text><ellipse cx="1846" cy="830.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="176" x="1855" y="834.0854">disconnected() const = 0 : bool</text><ellipse cx="1846" cy="843.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="188" x="1855" y="846.8901">getRecvBuffer() = 0 : MsgBuffer*</text><ellipse cx="1846" cy="856.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="504" x="1855" y="859.6948">setHighWaterMarkCallback(HighWaterMarkCallback const&amp; cb, size_t markLen) = 0 : void</text><ellipse cx="1846" cy="869.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="1855" y="872.4995">setTcpNoDelay(bool on) = 0 : void</text><ellipse cx="1846" cy="882.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="122" x="1855" y="885.3042">shutdown() = 0 : void</text><ellipse cx="1846" cy="894.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="1855" y="898.1089">forceClose() = 0 : void</text><ellipse cx="1846" cy="907.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="1855" y="910.9136">getLoop() = 0 : EventLoop*</text><ellipse cx="1846" cy="920.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="1855" y="923.7183">setContext(std::shared_ptr&lt;void&gt; const&amp; context) : void</text><ellipse cx="1846" cy="933.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="1855" y="936.5229">setContext(std::shared_ptr&lt;void&gt;&amp;&amp; context) : void</text><ellipse cx="1846" cy="946.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1855" y="949.3276">getContext() const : std::shared_ptr&lt;T&gt;</text><ellipse cx="1846" cy="958.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1855" y="962.1323">hasContext() const : bool</text><ellipse cx="1846" cy="971.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1855" y="974.937">clearContext() : void</text><ellipse cx="1846" cy="984.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="1855" y="987.7417">keepAlive() = 0 : void</text><ellipse cx="1846" cy="997.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="1855" y="1000.5464">isKeepAlive() = 0 : bool</text><ellipse cx="1846" cy="1010.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="166" x="1855" y="1013.3511">bytesSent() const = 0 : size_t</text><ellipse cx="1846" cy="1022.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="1855" y="1026.1558">bytesReceived() const = 0 : size_t</text><ellipse cx="1846" cy="1035.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="1855" y="1038.9604">isSSLConnection() const = 0 : bool</text><ellipse cx="1846" cy="1048.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1212" x="1855" y="1051.7651">startClientEncryption(std::function&lt;void()&gt; callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; const&amp; sslConfCmds = {}) = 0 : void</text><ellipse cx="1846" cy="1061.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="601" x="1855" y="1064.5698">startServerEncryption(std::shared_ptr&lt;SSLContext&gt; const&amp; ctx, std::function&lt;void()&gt; callback) = 0 : void</text><!--MD5=[6adfc7c4d3f8088201f9db709d3f11fc]
class C_0000000459--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="99.2188" id="C_0000000459" style="stroke: #A80036; stroke-width: 1.5;" width="536" x="2521" y="1372"/><ellipse cx="2758.75" cy="1388" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2758.8594,1383.3438 L2757.7031,1388.4219 L2760.0313,1388.4219 L2758.8594,1383.3438 Z M2757.375,1381.1094 L2760.3594,1381.1094 L2763.7188,1393.5 L2761.2656,1393.5 L2760.5,1390.4375 L2757.2188,1390.4375 L2756.4688,1393.5 L2754.0313,1393.5 L2757.375,1381.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="52" x="2779.25" y="1392.1543">Resolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2522" x2="3056" y1="1404" y2="1404"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2522" x2="3056" y1="1412" y2="1412"/><ellipse cx="2532" cy="1423" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="510" x="2541" y="1426.2104">newResolver(EventLoop* loop = nullptr, size_t timeout = 60) : std::shared_ptr&lt;Resolver&gt;</text><ellipse cx="2532" cy="1435.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="475" x="2541" y="1439.0151">resolve(std::string const&amp; hostname, Resolver::Callback const&amp; callback) = 0 : void</text><ellipse cx="2532" cy="1448.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2541" y="1451.8198">~Resolver() : void</text><ellipse cx="2532" cy="1461.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="117" x="2541" y="1464.6245">isCAresUsed() : bool</text><!--MD5=[19c14efb460affb4a919201211ca6a75]
class C_0000000470--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000470" style="stroke: #A80036; stroke-width: 1.5;" width="67" x="4533.5" y="2492.5"/><ellipse cx="4548.5" cy="2508.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4551.4688,2514.1406 Q4550.8906,2514.4375 4550.25,2514.5781 Q4549.6094,2514.7344 4548.9063,2514.7344 Q4546.4063,2514.7344 4545.0781,2513.0938 Q4543.7656,2511.4375 4543.7656,2508.3125 Q4543.7656,2505.1875 4545.0781,2503.5313 Q4546.4063,2501.875 4548.9063,2501.875 Q4549.6094,2501.875 4550.25,2502.0313 Q4550.9063,2502.1875 4551.4688,2502.4844 L4551.4688,2505.2031 Q4550.8438,2504.625 4550.25,2504.3594 Q4549.6563,2504.0781 4549.0313,2504.0781 Q4547.6875,2504.0781 4547,2505.1563 Q4546.3125,2506.2188 4546.3125,2508.3125 Q4546.3125,2510.4063 4547,2511.4844 Q4547.6875,2512.5469 4549.0313,2512.5469 Q4549.6563,2512.5469 4550.25,2512.2813 Q4550.8438,2512 4551.4688,2511.4219 L4551.4688,2514.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="4562.5" y="2512.6543">Poller</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4534.5" x2="4599.5" y1="2524.5" y2="2524.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4534.5" x2="4599.5" y1="2532.5" y2="2532.5"/><!--MD5=[1f650444c394fe5d62a6352b682c6b89]
class C_0000000474--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000474" style="stroke: #A80036; stroke-width: 1.5;" width="107" x="4635.5" y="2492.5"/><ellipse cx="4650.5" cy="2508.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4653.4688,2514.1406 Q4652.8906,2514.4375 4652.25,2514.5781 Q4651.6094,2514.7344 4650.9063,2514.7344 Q4648.4063,2514.7344 4647.0781,2513.0938 Q4645.7656,2511.4375 4645.7656,2508.3125 Q4645.7656,2505.1875 4647.0781,2503.5313 Q4648.4063,2501.875 4650.9063,2501.875 Q4651.6094,2501.875 4652.25,2502.0313 Q4652.9063,2502.1875 4653.4688,2502.4844 L4653.4688,2505.2031 Q4652.8438,2504.625 4652.25,2504.3594 Q4651.6563,2504.0781 4651.0313,2504.0781 Q4649.6875,2504.0781 4649,2505.1563 Q4648.3125,2506.2188 4648.3125,2508.3125 Q4648.3125,2510.4063 4649,2511.4844 Q4649.6875,2512.5469 4651.0313,2512.5469 Q4651.6563,2512.5469 4652.25,2512.2813 Q4652.8438,2512 4653.4688,2511.4219 L4653.4688,2514.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="4664.5" y="2512.6543">TimerQueue</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4636.5" x2="4741.5" y1="2524.5" y2="2524.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4636.5" x2="4741.5" y1="2532.5" y2="2532.5"/><!--MD5=[73e86389a0768bcce2842ffe44598aad]
class C_0000000507--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000507" style="stroke: #A80036; stroke-width: 1.5;" width="139" x="4359.5" y="2492.5"/><ellipse cx="4374.5" cy="2508.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4377.4688,2514.1406 Q4376.8906,2514.4375 4376.25,2514.5781 Q4375.6094,2514.7344 4374.9063,2514.7344 Q4372.4063,2514.7344 4371.0781,2513.0938 Q4369.7656,2511.4375 4369.7656,2508.3125 Q4369.7656,2505.1875 4371.0781,2503.5313 Q4372.4063,2501.875 4374.9063,2501.875 Q4375.6094,2501.875 4376.25,2502.0313 Q4376.9063,2502.1875 4377.4688,2502.4844 L4377.4688,2505.2031 Q4376.8438,2504.625 4376.25,2504.3594 Q4375.6563,2504.0781 4375.0313,2504.0781 Q4373.6875,2504.0781 4373,2505.1563 Q4372.3125,2506.2188 4372.3125,2508.3125 Q4372.3125,2510.4063 4373,2511.4844 Q4373.6875,2512.5469 4375.0313,2512.5469 Q4375.6563,2512.5469 4376.25,2512.2813 Q4376.8438,2512 4377.4688,2511.4219 L4377.4688,2514.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="4388.5" y="2512.6543">MpscQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="32" x="4469.5" y="2489.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="30" x="4470.5" y="2501.6387">Func</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4360.5" x2="4497.5" y1="2524.5" y2="2524.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4360.5" x2="4497.5" y1="2532.5" y2="2532.5"/><!--MD5=[e3c711e96be60b3bf7e8a784d0d01894]
class C_0000000480--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="457.75" id="C_0000000480" style="stroke: #A80036; stroke-width: 1.5;" width="502" x="3888" y="1772"/><ellipse cx="4102.25" cy="1788" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4105.2188,1793.6406 Q4104.6406,1793.9375 4104,1794.0781 Q4103.3594,1794.2344 4102.6563,1794.2344 Q4100.1563,1794.2344 4098.8281,1792.5938 Q4097.5156,1790.9375 4097.5156,1787.8125 Q4097.5156,1784.6875 4098.8281,1783.0313 Q4100.1563,1781.375 4102.6563,1781.375 Q4103.3594,1781.375 4104,1781.5313 Q4104.6563,1781.6875 4105.2188,1781.9844 L4105.2188,1784.7031 Q4104.5938,1784.125 4104,1783.8594 Q4103.4063,1783.5781 4102.7813,1783.5781 Q4101.4375,1783.5781 4100.75,1784.6563 Q4100.0625,1785.7188 4100.0625,1787.8125 Q4100.0625,1789.9063 4100.75,1790.9844 Q4101.4375,1792.0469 4102.7813,1792.0469 Q4103.4063,1792.0469 4104,1791.7813 Q4104.5938,1791.5 4105.2188,1790.9219 L4105.2188,1793.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="4122.75" y="1792.1543">EventLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3889" x2="4389" y1="1804" y2="1804"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3889" x2="4389" y1="1812" y2="1812"/><ellipse cx="3899" cy="1823" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3908" y="1826.2104">EventLoop() : void</text><ellipse cx="3899" cy="1835.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="3908" y="1839.0151">~EventLoop() : void</text><ellipse cx="3899" cy="1848.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3908" y="1851.8198">loop() : void</text><ellipse cx="3899" cy="1861.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="3908" y="1864.6245">quit() : void</text><ellipse cx="3899" cy="1874.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3908" y="1877.4292">assertInLoopThread() : void</text><ellipse cx="3899" cy="1887.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3908" y="1890.2339">resetTimerQueue() : void</text><ellipse cx="3899" cy="1899.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="3908" y="1903.0386">resetAfterFork() : void</text><ellipse cx="3899" cy="1912.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3908" y="1915.8433">isInLoopThread() const : bool</text><ellipse cx="3899" cy="1925.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="3908" y="1928.6479">getEventLoopOfCurrentThread() : EventLoop*</text><ellipse cx="3899" cy="1938.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3908" y="1941.4526">runInLoop(Functor&amp;&amp; f) : void</text><ellipse cx="3899" cy="1951.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3908" y="1954.2573">queueInLoop(Func const&amp; f) : void</text><ellipse cx="3899" cy="1963.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3908" y="1967.062">queueInLoop(Func&amp;&amp; f) : void</text><ellipse cx="3899" cy="1976.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="3908" y="1979.8667">runAt(Date const&amp; time, Func const&amp; cb) : TimerId</text><ellipse cx="3899" cy="1989.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="3908" y="1992.6714">runAt(Date const&amp; time, Func&amp;&amp; cb) : TimerId</text><ellipse cx="3899" cy="2002.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="3908" y="2005.4761">runAfter(double delay, Func const&amp; cb) : TimerId</text><ellipse cx="3899" cy="2015.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="3908" y="2018.2808">runAfter(double delay, Func&amp;&amp; cb) : TimerId</text><ellipse cx="3899" cy="2027.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="3908" y="2031.0854">runAfter(std::chrono::duration&lt;double&gt; const&amp; delay, Func const&amp; cb) : TimerId</text><ellipse cx="3899" cy="2040.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="3908" y="2043.8901">runAfter(std::chrono::duration&lt;double&gt; const&amp; delay, Func&amp;&amp; cb) : TimerId</text><ellipse cx="3899" cy="2053.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="3908" y="2056.6948">runEvery(double interval, Func const&amp; cb) : TimerId</text><ellipse cx="3899" cy="2066.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="3908" y="2069.4995">runEvery(double interval, Func&amp;&amp; cb) : TimerId</text><ellipse cx="3899" cy="2079.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="3908" y="2082.3042">runEvery(std::chrono::duration&lt;double&gt; const&amp; interval, Func const&amp; cb) : TimerId</text><ellipse cx="3899" cy="2091.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="451" x="3908" y="2095.1089">runEvery(std::chrono::duration&lt;double&gt; const&amp; interval, Func&amp;&amp; cb) : TimerId</text><ellipse cx="3899" cy="2104.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="3908" y="2107.9136">invalidateTimer(TimerId id) : void</text><ellipse cx="3899" cy="2117.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="3908" y="2120.7183">moveToCurrentThread() : void</text><ellipse cx="3899" cy="2130.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3908" y="2133.5229">updateChannel(Channel* chl) : void</text><ellipse cx="3899" cy="2143.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="3908" y="2146.3276">removeChannel(Channel* chl) : void</text><ellipse cx="3899" cy="2155.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3908" y="2159.1323">index() : size_t</text><ellipse cx="3899" cy="2168.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3908" y="2171.937">setIndex(size_t index) : void</text><ellipse cx="3899" cy="2181.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3908" y="2184.7417">isRunning() : bool</text><ellipse cx="3899" cy="2194.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3908" y="2197.5464">isCallingFunctions() : bool</text><ellipse cx="3899" cy="2207.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3908" y="2210.3511">runOnQuit(Func&amp;&amp; cb) : void</text><ellipse cx="3899" cy="2219.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="3908" y="2223.1558">runOnQuit(Func const&amp; cb) : void</text><!--MD5=[fa49d05e3fbecf53f2a4dbf11d534f95]
class C_0000000565--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="48" id="C_0000000565" style="stroke: #A80036; stroke-width: 1.5;" width="88" x="3397" y="799"/><ellipse cx="3412" cy="815" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3414.9688,820.6406 Q3414.3906,820.9375 3413.75,821.0781 Q3413.1094,821.2344 3412.4063,821.2344 Q3409.9063,821.2344 3408.5781,819.5938 Q3407.2656,817.9375 3407.2656,814.8125 Q3407.2656,811.6875 3408.5781,810.0313 Q3409.9063,808.375 3412.4063,808.375 Q3413.1094,808.375 3413.75,808.5313 Q3414.4063,808.6875 3414.9688,808.9844 L3414.9688,811.7031 Q3414.3438,811.125 3413.75,810.8594 Q3413.1563,810.5781 3412.5313,810.5781 Q3411.1875,810.5781 3410.5,811.6563 Q3409.8125,812.7188 3409.8125,814.8125 Q3409.8125,816.9063 3410.5,817.9844 Q3411.1875,819.0469 3412.5313,819.0469 Q3413.1563,819.0469 3413.75,818.7813 Q3414.3438,818.5 3414.9688,817.9219 L3414.9688,820.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="3426" y="819.1543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3398" x2="3484" y1="831" y2="831"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3398" x2="3484" y1="839" y2="839"/><!--MD5=[23e9cdb7fcc4e832bf318f929ecd48e6]
class C_0000000573--><rect fill="#FEFECE" filter="url(#f1suypcscrjw0u)" height="291.2891" id="C_0000000573" style="stroke: #A80036; stroke-width: 1.5;" width="1017" x="2970.5" y="207"/><ellipse cx="3443.75" cy="223" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3446.7188,228.6406 Q3446.1406,228.9375 3445.5,229.0781 Q3444.8594,229.2344 3444.1563,229.2344 Q3441.6563,229.2344 3440.3281,227.5938 Q3439.0156,225.9375 3439.0156,222.8125 Q3439.0156,219.6875 3440.3281,218.0313 Q3441.6563,216.375 3444.1563,216.375 Q3444.8594,216.375 3445.5,216.5313 Q3446.1563,216.6875 3446.7188,216.9844 L3446.7188,219.7031 Q3446.0938,219.125 3445.5,218.8594 Q3444.9063,218.5781 3444.2813,218.5781 Q3442.9375,218.5781 3442.25,219.6563 Q3441.5625,220.7188 3441.5625,222.8125 Q3441.5625,224.9063 3442.25,225.9844 Q3442.9375,227.0469 3444.2813,227.0469 Q3444.9063,227.0469 3445.5,226.7813 Q3446.0938,226.5 3446.7188,225.9219 L3446.7188,228.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62" x="3464.25" y="227.1543">TcpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2971.5" x2="3986.5" y1="239" y2="239"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2971.5" x2="3986.5" y1="247" y2="247"/><ellipse cx="2981.5" cy="258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="782" x="2990.5" y="261.2104">TcpServer(EventLoop* loop, InetAddress const&amp; address, std::string const&amp; name, bool reUseAddr = true, bool reUsePort = true) : void</text><ellipse cx="2981.5" cy="270.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2990.5" y="274.0151">~TcpServer() : void</text><ellipse cx="2981.5" cy="283.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2990.5" y="286.8198">start() : void</text><ellipse cx="2981.5" cy="296.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2990.5" y="299.6245">stop() : void</text><ellipse cx="2981.5" cy="309.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2990.5" y="312.4292">setIoLoopNum(size_t num) : void</text><ellipse cx="2981.5" cy="322.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="463" x="2990.5" y="325.2339">setIoLoopThreadPool(std::shared_ptr&lt;EventLoopThreadPool&gt; const&amp; pool) : void</text><ellipse cx="2981.5" cy="334.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="2990.5" y="338.0386">setRecvMessageCallback(RecvMessageCallback const&amp; cb) : void</text><ellipse cx="2981.5" cy="347.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="2990.5" y="350.8433">setRecvMessageCallback(RecvMessageCallback&amp;&amp; cb) : void</text><ellipse cx="2981.5" cy="360.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="2990.5" y="363.6479">setConnectionCallback(ConnectionCallback const&amp; cb) : void</text><ellipse cx="2981.5" cy="373.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="2990.5" y="376.4526">setConnectionCallback(ConnectionCallback&amp;&amp; cb) : void</text><ellipse cx="2981.5" cy="386.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="2990.5" y="389.2573">setWriteCompleteCallback(WriteCompleteCallback const&amp; cb) : void</text><ellipse cx="2981.5" cy="398.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="2990.5" y="402.062">setWriteCompleteCallback(WriteCompleteCallback&amp;&amp; cb) : void</text><ellipse cx="2981.5" cy="411.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="2990.5" y="414.8667">name() const : std::string const&amp;</text><ellipse cx="2981.5" cy="424.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2990.5" y="427.6714">ipPort() const : std::string const</text><ellipse cx="2981.5" cy="437.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2990.5" y="440.4761">address() const : InetAddress const&amp;</text><ellipse cx="2981.5" cy="450.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2990.5" y="453.2808">getLoop() const : EventLoop*</text><ellipse cx="2981.5" cy="462.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="2990.5" y="466.0854">getIoLoops() const : std::vector&lt;EventLoop*&gt;</text><ellipse cx="2981.5" cy="475.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="2990.5" y="478.8901">kickoffIdleConnections(size_t timeout) : void</text><ellipse cx="2981.5" cy="488.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="991" x="2990.5" y="491.6948">enableSSL(std::string const&amp; certPath, std::string const&amp; keyPath, bool useOldTLS = false, std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt; const&amp; sslConfCmds = {}) : void</text><!--MD5=[ad0991c607716614fb9efbb265b28846]
reverse link C_0000000195 to C_0000000003--><path d="M5919.09,121.53 C5922.53,263.5 5933,725.91 5933,1108.5 C5933,1108.5 5933,1108.5 5933,2517.5 C5933,2660.57 5777.21,2757.98 5669.19,2808.32 " fill="none" id="C_0000000195&lt;-C_0000000003" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5912.08,121.38,5918.59,101.22,5926.08,121.04,5912.08,121.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b828657b9b68fd1821ab13188ce9c598]
reverse link C_0000000195 to C_0000000020--><path d="M5841.01,82.81 C5744.86,91.29 5577.31,114.32 5448,176 C5385.81,205.66 5326.01,256.95 5285.34,296.44 " fill="none" id="C_0000000195&lt;-C_0000000020" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5840.47,75.83,5860.97,81.17,5841.61,89.78,5840.47,75.83" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0f38fbf4aea22a799075296d24965f6e]
reverse link C_0000000025 to C_0000000059--><path d="M7308.66,442.9 C7262.05,467.42 7214.18,496.14 7173,528 C7075.54,603.41 6985.43,718.38 6940.64,779.82 " fill="none" id="C_0000000025&lt;-C_0000000059" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="7313.16,440.54,7303.3309,441.1633,7308.7286,442.8558,7307.0361,448.2535,7313.16,440.54" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7179,532.0664,7183,536.0664,7179,540.0664,7175,536.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="7186" y="541.0669">«friend»</text><!--MD5=[e48739225f407dba8b793ba4720b105e]
reverse link C_0000000025 to C_0000000181--><path d="M7427.83,450.99 C7398.61,487.99 7367.61,531.69 7345,575 C7229.76,795.74 7150.93,1074.16 7108.4,1249.82 " fill="none" id="C_0000000025&lt;-C_0000000181" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7436.01,440.74,7429.1399,442.9311,7428.5201,450.1156,7435.3902,447.9244,7436.01,440.74" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7351,818.5664,7355,822.5664,7351,826.5664,7347,822.5664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="7358" y="827.5669">logStream_</text><!--MD5=[f362ab23cbc65c77f38e8f91c83a5964]
reverse link C_0000000025 to C_0000000245--><path d="M7494.69,453.8 C7479.03,548.4 7459,694.34 7459,822 C7459,822 7459,822 7459,2002 C7459,2143.51 7365.75,2249.63 7246.28,2327.52 " fill="none" id="C_0000000025&lt;-C_0000000245" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7496.87,440.8,7491.9352,446.0581,7494.8908,452.6357,7499.8256,447.3776,7496.87,440.8" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7465,1417.0664,7469,1421.0664,7465,1425.0664,7461,1421.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="7472" y="1426.0669">date_</text><!--MD5=[4c1d2405f4b3f529111afcdae30561fb]
reverse link C_0000000195 to C_0000000025--><path d="M5995.25,81.24 C6222.62,91.26 6886.66,124.29 7097,176 C7179.87,196.38 7267.5,231.16 7340.85,264.42 " fill="none" id="C_0000000195&lt;-C_0000000025" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5994.94,88.23,5975.26,80.36,5995.55,74.24,5994.94,88.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6339909338ff3f6313c82de9ac0178a5]
link C_0000000038 to C_0000000025--><path d="M7425.97,146.31 C7439.3,177.74 7455.39,215.66 7470.08,250.31 " fill="none" id="C_0000000038-&gt;C_0000000025" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7472.9472" cy="257.0647" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7469.8243" x2="7476.07" y1="249.6994" y2="264.43"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7480.3125" x2="7465.5818" y1="253.9418" y2="260.1875"/><!--MD5=[0aac85b752fff283e96f3c88a1314dab]
link C_0000000042 to C_0000000025--><path d="M7608.4,126.58 C7593.83,160.93 7573.77,208.21 7555.81,250.56 " fill="none" id="C_0000000042-&gt;C_0000000025" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="7553.0628" cy="257.0447" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7556.1857" x2="7549.94" y1="249.6794" y2="264.41"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="7560.4282" x2="7545.6975" y1="260.1675" y2="253.9218"/><!--MD5=[9af4778acc482e024fe5c1a355ef9e43]
reverse link C_0000000059 to C_0000000181--><path d="M6916.27,879.66 C6922.71,939.31 6935.49,1036.43 6957,1118 C6968.45,1161.41 6983.87,1207.24 6999.67,1249.72 " fill="none" id="C_0000000059&lt;-C_0000000181" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6914.88,866.43,6911.5283,872.8148,6916.1328,878.3644,6919.4845,871.9796,6914.88,866.43" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6960" y="1107.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="74" x="6970" y="1114.0669">logStream_</text><!--MD5=[7798d182c176e7dd46e0b2b5d429093a]
reverse link C_0000000195 to C_0000000059--><path d="M5995.2,79.98 C6174.32,86.19 6610.81,111.03 6715,207 C6813,297.27 6747.11,370.88 6787,498 C6819.32,601.01 6867.17,718.61 6892.96,779.87 " fill="none" id="C_0000000195&lt;-C_0000000059" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5994.93,86.98,5975.17,79.33,5995.39,72.99,5994.93,86.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9a4d7dce04d5839a1235347e12f6aa3f]
reverse link C_0000000020 to C_0000000114--><path d="M5169.47,423.7 C5088.78,512.85 4950.48,665.68 4870.68,753.85 " fill="none" id="C_0000000020&lt;-C_0000000114" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5164.5,418.75,5183.11,408.62,5174.88,428.15,5164.5,418.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[27ab29de0f1b4ed64f72e6aeb67e6d30]
reverse link C_0000000195 to C_0000000128--><path d="M5995.38,79.18 C6180.67,83.19 6644.31,100.7 6777,176 C6836.35,209.68 6877.95,281.37 6897.79,321.93 " fill="none" id="C_0000000195&lt;-C_0000000128" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5995.08,86.17,5975.23,78.77,5995.37,72.17,5995.08,86.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17824eb7bfc072fc9604fc8589616593]
link C_0000000135 to C_0000000480--><path d="M5513.34,1477.54 C5481.87,1550.01 5416.4,1675.97 5319,1742 C5170.87,1842.43 4695.73,1923.63 4395.48,1966.59 " fill="none" id="C_0000000135-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4390.19,1967.35,4399.6609,1970.0523,4395.1409,1966.6509,4398.5423,1962.1309,4390.19,1967.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[17824eb7bfc072fc9604fc8589616593]
link C_0000000135 to C_0000000480--><path d="M5486.57,1477.63 C5420.54,1549.31 5295.27,1673.44 5163,1742 C4919.04,1868.46 4609.74,1935.28 4395.23,1968.94 " fill="none" id="C_0000000135-&gt;C_0000000480-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4390.18,1969.73,4399.6892,1972.2943,4395.1202,1968.959,4398.4555,1964.39,4390.18,1969.73" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5190" y="1731.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="5200" y="1738.0669">loop_</text><!--MD5=[c8a3a3dad9d9688a893e21b7d0446faa]
link C_0000000150 to C_0000000135--><path d="M5726.55,860.42 C5693.34,957.5 5602.29,1223.76 5558.77,1351 " fill="none" id="C_0000000150-&gt;C_0000000135" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="5556.4191" cy="1357.8806" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5559.0083" x2="5553.83" y1="1350.3111" y2="1365.45"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="5563.9886" x2="5548.8497" y1="1360.4697" y2="1355.2914"/><!--MD5=[00eeb1876db9dd70573f8342cafe9a61]
reverse link C_0000000195 to C_0000000173--><path d="M5995.19,81.48 C6352.17,97.77 7829.51,167.33 7919,207 C7940.08,216.35 7959.94,230.05 7977.86,245.35 " fill="none" id="C_0000000195&lt;-C_0000000173" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5994.87,88.47,5975.21,80.57,5995.51,74.49,5994.87,88.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ea46a8dc14556513db90b597dd28825f]
link C_0000000186 to C_0000000173--><path d="M8068,101.32 C8068,129.24 8068,178.16 8068,225.39 " fill="none" id="C_0000000186-&gt;C_0000000173" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="8075,225.46,8068,245.46,8061,225.46,8075,225.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[93d52fdedf2104a9e5066e1a5a627dce]
reverse link C_0000000195 to C_0000000181--><path d="M5995.42,81.18 C6236.96,91.86 6964.79,130.23 7035,207 C7103.63,282.05 7089.24,933.66 7078,1249.83 " fill="none" id="C_0000000195&lt;-C_0000000181" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5994.91,88.16,5975.24,80.3,5995.52,74.17,5994.91,88.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a78d1169578d35ef7b1ea8ca4ad05067]
reverse link C_0000000195 to C_0000000208--><path d="M5929.5,120.88 C5934.07,138.01 5939.33,157.93 5944,176 C5980.92,318.88 5953.62,368.84 6025,498 C6081.48,600.21 6178.21,693.88 6248.62,753.92 " fill="none" id="C_0000000195&lt;-C_0000000208" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5922.68,122.47,5924.28,101.34,5936.21,118.86,5922.68,122.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b13db7e13d9bab2f3c0087793f5e71cb]
reverse link C_0000000223 to C_0000000245--><path d="M6517.76,414.83 C6585.56,451.01 6659.86,503.84 6701,575 C6819.95,780.74 6737,870.85 6737,1108.5 C6737,1108.5 6737,1108.5 6737,2002 C6737,2106.75 6737,2223.52 6737,2319.21 " fill="none" id="C_0000000223&lt;-C_0000000245" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6506.06,408.71,6509.5295,415.0316,6516.6993,414.2603,6513.2297,407.9388,6506.06,408.71" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6743,1417.0664,6747,1421.0664,6743,1425.0664,6739,1421.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="6750" y="1426.0669">creationDate_</text><!--MD5=[131499a37f0a5ca0f1ead869c31cd71b]
link C_0000000223 to C_0000000208--><path d="M6365.88,408.62 C6359.79,490.16 6348.33,643.52 6341.22,738.79 " fill="none" id="C_0000000223-&gt;C_0000000208" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="6340.6843" cy="745.8721" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6341.2787" x2="6340.09" y1="737.8942" y2="753.85"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="6348.6622" x2="6332.7064" y1="746.4664" y2="745.2778"/><!--MD5=[51a81d1bba3d529e91319ead79ccf414]
reverse link C_0000000195 to C_0000000223--><path d="M5973.67,111.68 C6049.81,157.76 6187.38,241 6278.71,296.26 " fill="none" id="C_0000000195&lt;-C_0000000223" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5969.64,117.43,5956.15,101.08,5976.88,105.45,5969.64,117.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9da8cc418df85cc4b4badad65a1dddb7]
reverse link C_0000000270 to C_0000000413--><path d="M5182.81,922.01 C5148.3,971.83 5101.28,1030.28 5048,1071 C4860.6,1214.2 4605.71,1310.69 4429.9,1365.38 " fill="none" id="C_0000000270&lt;-C_0000000413" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5190.2,911.19,5183.512,913.8863,5183.4285,921.0969,5190.1166,918.4006,5190.2,911.19" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4996,1105.0664,5000,1109.0664,4996,1113.0664,4992,1109.0664" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="78" x="5003" y="1114.0669">loopThread_</text><!--MD5=[35ed9a5dedacb1c43b7859aa576d428c]
reverse link C_0000000020 to C_0000000270--><path d="M5234.6,428.69 C5236.39,512.2 5239.26,646.81 5241.14,734.86 " fill="none" id="C_0000000020&lt;-C_0000000270" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5227.61,428.77,5234.18,408.62,5241.6,428.47,5227.61,428.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cd61a9a6f4823683f4b48695d9b2900f]
reverse link C_0000000275 to C_0000000413--><path d="M4066.45,911.26 C4070.39,970.42 4078.85,1049.92 4097,1118 C4121,1208.03 4167.14,1306.05 4197.5,1365.38 " fill="none" id="C_0000000275&lt;-C_0000000413" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4065.63,898.2,4062.0138,904.4388,4066.3818,910.1764,4069.9981,903.9376,4065.63,898.2" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4100" y="1107.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="4110" y="1114.0669">loopThreadVector_</text><!--MD5=[71812be65df400f815ffde481ec5512d]
reverse link C_0000000195 to C_0000000275--><path d="M5840.39,79.56 C5682.79,84.79 5315.78,107.61 5027,207 C4667.76,330.64 4306.9,613.11 4147.6,747.85 " fill="none" id="C_0000000195&lt;-C_0000000275" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5840.56,72.55,5860.76,78.94,5840.98,86.54,5840.56,72.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ecc2516b688bdd95803785d53dd00a91]
link C_0000000300 to C_0000000480--><path d="M1016.32,975.04 C966.77,1168.92 918.07,1503.13 1099,1695 C1288.62,1896.09 3184.6,1971.91 3882.72,1993.15 " fill="none" id="C_0000000300-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3887.82,1993.3,3878.9501,1989.0193,3882.8225,1993.1429,3878.6988,1997.0153,3887.82,1993.3" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ecc2516b688bdd95803785d53dd00a91]
link C_0000000300 to C_0000000480--><path d="M1192.86,975.31 C1374.58,1175.98 1725.24,1524.61 2104,1695 C2417.44,1836.01 3409.37,1937.35 3882.77,1979 " fill="none" id="C_0000000300-&gt;C_0000000480-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3887.96,1979.45,3879.3492,1974.6694,3882.9796,1979.0076,3878.6414,1982.638,3887.96,1979.45" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2107" y="1419.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="2117" y="1426.0669">loop_</text><!--MD5=[ca19a4e38fc33195366778766efebed1]
link C_0000000300 to C_0000000345--><path d="M1450.24,975.16 C1566.38,1013.83 1695.29,1050.31 1817,1071 C1979.48,1098.62 3146.4,1041.25 3300,1101 C3394.55,1137.78 3480.72,1211.03 3545.36,1278.12 " fill="none" id="C_0000000300-&gt;C_0000000345" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3549.2,1282.12,3545.8505,1272.8582,3545.7365,1278.5139,3540.0807,1278.3999,3549.2,1282.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[06e8beb41c16d0c907fae26f96c79d52]
link C_0000000300 to C_0000000292--><path d="M1088.87,975.29 C1113.14,1117.2 1147.52,1318.27 1160.13,1391.99 " fill="none" id="C_0000000300-&gt;C_0000000292" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1160.99,1397.08,1163.4157,1387.5345,1160.1472,1392.1515,1155.5301,1388.8831,1160.99,1397.08" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1114" y="1107.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="71" x="1124" y="1114.0669">connector_</text><!--MD5=[20cf24aa888041ebb96cb7f2d2be40a9]
link C_0000000300 to C_0000000296--><path d="M1460.07,975.07 C1573.79,1012.56 1698.95,1048.43 1817,1071 C1885.72,1084.14 3020.13,1103.36 3074,1148 C3147.35,1208.78 3148.96,1335.31 3145.58,1391.98 " fill="none" id="C_0000000300-&gt;C_0000000296" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3145.24,1397.24,3149.7983,1388.5095,3145.5546,1392.2499,3141.8141,1388.0062,3145.24,1397.24" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2854" y="1107.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="2864" y="1114.0669">sslCtxPtr_</text><!--MD5=[4e139cc1bb037ddb68a048ca9fb1786f]
reverse link C_0000000195 to C_0000000300--><path d="M5840.47,78.63 C5227.74,83.77 1187.88,120.9 1099,207 C978.01,324.21 992.27,529.98 1021.15,670.98 " fill="none" id="C_0000000195&lt;-C_0000000300" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5840.75,71.63,5860.81,78.46,5840.87,85.63,5840.75,71.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[46640b17c2a9cecc8a543de713ba9a1f]
link C_0000000320 to C_0000000300--><path d="M1181.96,383.16 C1167.28,437.32 1135.14,555.88 1107.96,656.13 " fill="none" id="C_0000000320-&gt;C_0000000300" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1106.0859" cy="663.0594" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1108.1818" x2="1103.99" y1="655.3389" y2="670.78"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1113.8065" x2="1098.3653" y1="665.1553" y2="660.9635"/><!--MD5=[c5030c4d45120d48665ea599330ebcb9]
link C_0000000353 to C_0000000345--><path d="M3663,847.02 C3663,915.41 3663,1121.7 3663,1267.19 " fill="none" id="C_0000000353-&gt;C_0000000345" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3663" cy="1274.4" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3663" x2="3663" y1="1266.4" y2="1282.4"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3671" x2="3655" y1="1274.4" y2="1274.4"/><!--MD5=[936d4ef18809c264624fd4248e509483]
link C_0000000371 to C_0000000480--><path d="M4054.98,2306.68 C4062.73,2283.06 4070.51,2258.89 4078.04,2234.99 " fill="none" id="C_0000000371-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4079.54,2230.22,4073.025,2237.6061,4078.0405,2234.9899,4080.6568,2240.0053,4079.54,2230.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1018c43974254b30aa7b932066e6cf1f]
reverse link C_0000000371 to C_0000000480--><path d="M4091.15,2302.18 C4094.34,2293.76 4097.31,2285.35 4100,2277 C4104.84,2261.97 4109.09,2246.28 4112.81,2230.36 " fill="none" id="C_0000000371&lt;-C_0000000480" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4089.35,2306.85,4096.2999,2299.8715,4091.1353,2302.1796,4088.8273,2297.015,4089.35,2306.85" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4108" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="52" x="4118" y="2273.0669">«friend»</text><!--MD5=[936d4ef18809c264624fd4248e509483]
link C_0000000371 to C_0000000480--><path d="M4155.1,2326.99 C4164.51,2310.85 4172.68,2294.12 4179,2277 C4183.95,2263.6 4187.22,2249.62 4189.13,2235.37 " fill="none" id="C_0000000371-&gt;C_0000000480-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4189.77,2230.11,4184.7175,2238.5641,4189.1692,2235.0738,4192.6596,2239.5254,4189.77,2230.11" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4187" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4197" y="2273.0669">loop_</text><!--MD5=[5eb85547411892aa79d41c9dba77e820]
link C_0000000480 to C_0000000371--><path d="M4053.43,2230.22 C4045.73,2253.98 4038.06,2278.06 4030.71,2301.65 " fill="none" id="C_0000000480-&gt;C_0000000371" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4029.14,2306.68,4035.6348,2299.2761,4030.6265,2301.9061,4027.9965,2296.8977,4029.14,2306.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5eb85547411892aa79d41c9dba77e820]
link C_0000000480 to C_0000000371--><path d="M3887.97,2040.16 C3756.54,2074.28 3606.56,2138.68 3526,2260 C3448.26,2377.06 3633.85,2446.53 3789.57,2482.82 " fill="none" id="C_0000000480-&gt;C_0000000371-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3794.63,2483.99,3786.765,2478.062,3789.759,2482.8615,3784.9594,2485.8555,3794.63,2483.99" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3529" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="3539" y="2273.0669">activeChannels_</text><!--MD5=[5eb85547411892aa79d41c9dba77e820]
link C_0000000480 to C_0000000371--><path d="M3887.77,2085.84 C3808.34,2125.57 3729.48,2181.93 3684,2260 C3641.94,2332.19 3709.3,2394.51 3789.74,2439.52 " fill="none" id="C_0000000480-&gt;C_0000000371-2" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3794.57,2442.19,3788.6343,2434.3308,3790.1959,2439.7678,3784.7588,2441.3294,3794.57,2442.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3687" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="3697" y="2273.0669">currentActiveChannel_</text><!--MD5=[dd1779707f5c9e0a085c04b42d638659]
reverse link C_0000000480 to C_0000000371--><path d="M3913.56,2242.1 C3910.84,2248.01 3908.32,2253.98 3906,2260 C3900.18,2275.12 3897.28,2290.91 3896.59,2306.92 " fill="none" id="C_0000000480&lt;-C_0000000371" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3919.41,2230.06,3913.1934,2233.7143,3914.1757,2240.8582,3920.3923,2237.2039,3919.41,2230.06" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3909" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="3919" y="2273.0669">wakeupChannelPtr_</text><!--MD5=[8fd87dfbcce415bbdeaa87ed7d44d8b2]
reverse link C_0000000195 to C_0000000371--><path d="M5840.63,78.79 C5312.79,84.32 2234.71,118.61 1299,176 C1068.12,190.16 273,120.19 273,351.5 C273,351.5 273,351.5 273,2002 C273,2361.86 3053.04,2483.64 3794.88,2509.73 " fill="none" id="C_0000000195&lt;-C_0000000371" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5840.69,71.79,5860.76,78.58,5840.83,85.79,5840.69,71.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4913d334e076e8e3a5b29be617c50853]
link C_0000000413 to C_0000000480--><path d="M4205.06,1477.69 C4182.55,1537.5 4149.05,1636.29 4136,1725 C4134.9,1732.48 4135.96,1734.44 4136,1742 C4136.05,1750.07 4136.1,1758.28 4136.16,1766.57 " fill="none" id="C_0000000413-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4136.2,1771.74,4140.1227,1762.706,4136.1571,1766.7402,4132.123,1762.7746,4136.2,1771.74" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4139" y="1731.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="4149" y="1738.0669">loop_</text><!--MD5=[4913d334e076e8e3a5b29be617c50853]
link C_0000000413 to C_0000000480--><path d="M4221.38,1477.78 C4214.62,1541.6 4202.39,1649.65 4188,1742 C4186.74,1750.11 4185.41,1758.36 4184.03,1766.69 " fill="none" id="C_0000000413-&gt;C_0000000480-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4183.16,1771.88,4188.5967,1763.6677,4183.9889,1766.9492,4180.7075,1762.3414,4183.16,1771.88" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4193" y="1731.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="155" x="4203" y="1738.0669">promiseForLoopPointer_</text><!--MD5=[11ba49a65c0137d4b1869ffcabdb904b]
reverse link C_0000000195 to C_0000000413--><path d="M5840.87,86.36 C5737,99.31 5560.37,127.88 5519,176 C5388.81,327.43 5568.91,920.19 5438,1071 C5340.12,1183.75 5255.09,1108.87 5111,1148 C4859.15,1216.39 4570.84,1307.75 4393.84,1365.37 " fill="none" id="C_0000000195&lt;-C_0000000413" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5840.23,79.38,5860.92,83.94,5841.9,93.28,5840.23,79.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1dadb42bc493c8d7c4b79f5de8c7231d]
link C_0000000428 to C_0000000066--><path d="M2401.75,1071.36 C2396.79,1094.83 2391.74,1118.74 2386.73,1142.47 " fill="none" id="C_0000000428-&gt;C_0000000066" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2385.66,1147.54,2391.4506,1139.5733,2386.7037,1142.6502,2383.6269,1137.9033,2385.66,1147.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f0e08d1d97e56748beded2522d6ffc1]
link C_0000000428 to C_0000000296--><path d="M3000.43,1071.28 C3027.32,1094.83 3052.17,1120.36 3074,1148 C3132.2,1221.67 3141.89,1338.52 3143.12,1392.04 " fill="none" id="C_0000000428-&gt;C_0000000296" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3143.21,1397.32,3147.0551,1388.2528,3143.1243,1392.3207,3139.0563,1388.3899,3143.21,1397.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[24759ab8659ba594f29756f50ad87886]
link C_0000000459 to C_0000000480--><path d="M2827.49,1471.17 C2877.95,1531.87 2972.11,1634.97 3074,1695 C3327.22,1844.17 3657.61,1923.93 3882.81,1964 " fill="none" id="C_0000000459-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3887.78,1964.88,3879.6139,1959.3741,3882.8564,1964.0094,3878.221,1967.2519,3887.78,1964.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1cec7e0b7b6ca1551b14fe772bbcaa3a]
link C_0000000507 to C_0000000003--><path d="M4431.19,2540.55 C4436.7,2584.58 4455.38,2680.33 4516,2726 C4660.11,2834.58 5201.54,2848.67 5446.4,2849.34 " fill="none" id="C_0000000507-&gt;C_0000000003" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="5446.7,2842.34,5466.69,2849.37,5446.68,2856.34,5446.7,2842.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b538b2a68235eeaa3990b2bfae44a51f]
link C_0000000480 to C_0000000245--><path d="M4390.17,2051.64 C4811.55,2134.93 5668.97,2304.4 6222.52,2413.81 " fill="none" id="C_0000000480-&gt;C_0000000245" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="6227.79,2414.85,6219.7397,2409.1762,6222.8855,2413.8777,6218.184,2417.0234,6227.79,2414.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[20fd09310eabc836491d75810a98058d]
reverse link C_0000000480 to C_0000000470--><path d="M4400.44,2154.83 C4438.47,2185.83 4474.12,2221.04 4502,2260 C4554.35,2333.14 4564.63,2444.53 4566.58,2492.36 " fill="none" id="C_0000000480&lt;-C_0000000470" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4390.19,2146.62,4392.3705,2153.4935,4399.554,2154.1244,4397.3735,2147.2509,4390.19,2146.62" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4513" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="42" x="4523" y="2273.0669">poller_</text><!--MD5=[1ab90748dc528c884151877b3b1449cc]
reverse link C_0000000480 to C_0000000507--><path d="M4398.09,2201.13 C4411.73,2219.7 4423.65,2239.35 4433,2260 C4468.69,2338.8 4447.69,2445.8 4435.65,2492.32 " fill="none" id="C_0000000480&lt;-C_0000000507" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4390.1,2190.63,4390.5506,2197.827,4397.3674,2200.1791,4396.9167,2192.9821,4390.1,2190.63" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4442" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="4452" y="2273.0669">funcs_</text><!--MD5=[1ab90748dc528c884151877b3b1449cc]
reverse link C_0000000480 to C_0000000507--><path d="M4274.29,2241.56 C4331.36,2342.61 4390.44,2447.22 4415.97,2492.42 " fill="none" id="C_0000000480&lt;-C_0000000507-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4267.89,2230.22,4267.3625,2237.4118,4273.7982,2240.6648,4274.3257,2233.473,4267.89,2230.22" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4296" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="4306" y="2273.0669">funcsOnQuit_</text><!--MD5=[58f8b8f3b93827967af28e43edd41cba]
reverse link C_0000000480 to C_0000000474--><path d="M4401.67,2110.9 C4484.66,2158.63 4567.76,2223.24 4618,2307 C4654.98,2368.65 4675.94,2452.2 4684.46,2492.23 " fill="none" id="C_0000000480&lt;-C_0000000474" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4390.23,2104.42,4393.483,2110.8557,4400.6748,2110.3282,4397.4218,2103.8925,4390.23,2104.42" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4596" y="2266.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="83" x="4606" y="2273.0669">timerQueue_</text><!--MD5=[b7abf9fb90d52ba6c90a06c63e05af2b]
link C_0000000480 to C_0000000480--><path d="M4390,1962.08 C4411.55,1970.36 4425,1983.34 4425,2001 C4425,2017.28 4413.57,2029.58 4394.9,2037.89 " fill="none" id="C_0000000480-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4390,2039.92,4399.8458,2040.1659,4394.6183,2038.004,4396.7802,2032.7766,4390,2039.92" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4433" y="1998.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="4443" y="2005.5669">threadLocalLoopPtr_</text><!--MD5=[f4a2d8f2ca7343fc31a298443e90e342]
reverse link C_0000000195 to C_0000000480--><path d="M5883.33,116.41 C5813.77,195.74 5657.28,386.11 5580,575 C5495.16,782.36 5612.06,883.13 5490,1071 C5410.77,1192.94 5305.67,1090.73 5172,1148 C5082.32,1186.42 4666.04,1540.83 4390.07,1780.28 " fill="none" id="C_0000000195&lt;-C_0000000480" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5878.29,111.54,5896.79,101.21,5888.77,120.82,5878.29,111.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e03e63a99d7d6548aca2e1a61cc8fe0]
link C_0000000573 to C_0000000480--><path d="M3403.24,498.26 C3393.21,523.25 3384.51,549.43 3379,575 C3326.61,818.35 3257.23,1490.39 3399,1695 C3508.42,1852.92 3715.5,1929.22 3882.83,1966.01 " fill="none" id="C_0000000573-&gt;C_0000000480" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3887.77,1967.09,3879.8357,1961.255,3882.8861,1966.019,3878.1221,1969.0693,3887.77,1967.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e03e63a99d7d6548aca2e1a61cc8fe0]
link C_0000000573 to C_0000000480--><path d="M3352.8,498.07 C3336.7,522.47 3322.29,548.51 3312,575 C3226.99,793.91 3273.12,866.43 3262,1101 C3249.46,1365.49 3154.16,1479.48 3308,1695 C3438.32,1877.57 3690.16,1951.1 3882.6,1980.58 " fill="none" id="C_0000000573-&gt;C_0000000480-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3887.7,1981.36,3879.3944,1976.0668,3882.7555,1980.6169,3878.2055,1983.978,3887.7,1981.36" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3265" y="1107.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="3275" y="1114.0669">loop_</text><!--MD5=[b805ce4c7d6eed719f453b69f6060cc7]
link C_0000000573 to C_0000000345--><path d="M3510.86,498.02 C3512.71,508.14 3514.45,518.21 3516,528 C3553.88,767.68 3529.96,832.19 3573,1071 C3585.37,1139.66 3604.01,1214.71 3621.12,1277.61 " fill="none" id="C_0000000573-&gt;C_0000000345" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="3622.46,1282.5,3623.9559,1272.7654,3621.1468,1277.6755,3616.2367,1274.8665,3622.46,1282.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c8f034aa25a725205f53657481e16877]
link C_0000000573 to C_0000000275--><path d="M3744.33,498.1 C3758.36,507.81 3772.01,517.8 3785,528 C3866.9,592.33 3947.17,680.74 4000.23,743.77 " fill="none" id="C_0000000573-&gt;C_0000000275" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="4003.69,747.89,4000.9666,738.4252,4000.475,744.0606,3994.8396,743.5691,4003.69,747.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c8f034aa25a725205f53657481e16877]
link C_0000000573 to C_0000000275--><path d="M3622.09,498.17 C3642.06,515.02 3662.97,531.12 3684,545 C3711.57,563.2 3723.72,557.92 3752,575 C3833.57,624.27 3917.72,692.34 3977.88,744.54 " fill="none" id="C_0000000573-&gt;C_0000000275-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3981.81,747.96,3977.6324,739.0411,3978.033,744.6837,3972.3903,745.0843,3981.81,747.96" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3687" y="534.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="79" x="3697" y="541.0669">loopPoolPtr_</text><!--MD5=[c8689168e193cf7283a99c8ad9515317]
link C_0000000573 to C_0000000428--><path d="M3162.75,498.05 C3110.55,521.91 3055.15,547.23 2999.23,572.79 " fill="none" id="C_0000000573-&gt;C_0000000428" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="2994.51,574.95,3004.3584,574.8556,2999.0594,572.8756,3001.0394,567.5766,2994.51,574.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c70b3ae8bae0dc829bfae3fe42be84b9]
reverse link C_0000000573 to C_0000000565--><path d="M3420.3,511.29 C3419.06,516.89 3417.95,522.48 3417,528 C3399.78,627.93 3423.55,749.15 3435.21,798.95 " fill="none" id="C_0000000573&lt;-C_0000000565" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3423.43,498.18,3418.1476,503.0887,3420.647,509.8528,3425.9294,504.9441,3423.43,498.18" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3420" y="534.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="3430" y="541.0669">acceptorPtr_</text><!--MD5=[753a1b424215c8986211c6377e6689d6]
reverse link C_0000000573 to C_0000000135--><path d="M4000.57,431.52 C4165.47,466.72 4319.19,514.27 4374,575 C4523.16,740.27 4300.5,900.79 4444,1071 C4548.93,1195.45 4965.71,1303.64 5252.65,1365.49 " fill="none" id="C_0000000573&lt;-C_0000000135" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3987.66,428.79,3992.7038,433.9437,3999.4009,431.2701,3994.3572,426.1164,3987.66,428.79" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4447" y="820.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="112" x="4457" y="827.5669">timingWheelMap_</text><!--MD5=[53207e8f929ccca1993516dc95553d5a]
link C_0000000573 to C_0000000296--><path d="M3229.15,498.15 C3205.74,521.01 3185.15,546.61 3170,575 C3092.31,720.51 3130.17,1261.67 3140.62,1392.09 " fill="none" id="C_0000000573-&gt;C_0000000296" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3141.04,1397.27,3144.3074,1387.9789,3140.6401,1392.286,3136.3331,1388.6187,3141.04,1397.27" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3173" y="820.5664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="3183" y="827.5669">sslCtxPtr_</text><!--MD5=[83f81bb6eed049a26395d7abf1bb92b4]
reverse link C_0000000195 to C_0000000573--><path d="M5840.98,81.46 C5636.84,91.12 5065.08,121.31 4592,176 C4393.79,198.91 4176.84,231.43 3987.54,262.26 " fill="none" id="C_0000000195&lt;-C_0000000573" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5840.67,74.47,5860.98,80.53,5841.33,88.45,5840.67,74.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0e9e87a5ff3999cf79dae5fdd93366df]
link C_0000000007 to C_0000000190--><!--MD5=[49e7181748b14aa3ff5638f99a885231]
link C_0000000007 to C_0000000366--><!--MD5=[518f0db6afede0726f1a8254b044af92]
@startuml
class "MpscQueue<T>" as C_0000000003
class C_0000000003 {
+MpscQueue() : void
+~MpscQueue() : void
+enqueue(T&& input) : void
+enqueue(T const& input) : void
+dequeue(T& output) : bool
+empty() : bool
}
class "BufferNode" as C_0000000007
class C_0000000007 {
+BufferNode() : void
+BufferNode(T const& data) : void
+BufferNode(T&& data) : void
+dataPtr_ : T*
+next_ : std::atomic<MpscQueue::BufferNode*>
}
abstract "TaskQueue" as C_0000000020
abstract C_0000000020 {
{abstract} +runTaskInQueue(std::function<void()> const& task) = 0 : void
{abstract} +runTaskInQueue(std::function<void()>&& task) = 0 : void
+getName() const : std::string
+syncTaskInQueue(std::function<void()> const& task) : void
+~TaskQueue() : void
}
class "Logger" as C_0000000025
class C_0000000025 {
+Logger(Logger::SourceFile file, int line) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level) : void
+Logger(Logger::SourceFile file, int line, bool isSysErr) : void
+Logger(Logger::SourceFile file, int line, Logger::LogLevel level, char const* func) : void
+~Logger() : void
+setIndex(int index) : Logger&
+stream() : LogStream&
{static} +setOutputFunction(std::function<void(char const*,uint64_t const)> outputFunc, std::function<void()> flushFunc, int index = -1) : void
{static} +setLogLevel(Logger::LogLevel level) : void
{static} +logLevel() : Logger::LogLevel
}
enum "LogLevel" as C_0000000038
enum C_0000000038 {
kTrace
kDebug
kInfo
kWarn
kError
kFatal
kNumberOfLogLevels
}
class "SourceFile" as C_0000000042
class C_0000000042 {
+SourceFile(char const(&)[SIZE] arr) : void
+SourceFile(char const* filename) : void
+data_ : char const*
+size_ : int
}
class "RawLogger" as C_0000000059
class C_0000000059 {
+~RawLogger() : void
+setIndex(int index) : RawLogger&
+stream() : LogStream&
}
class "MsgBuffer" as C_0000000066
class C_0000000066 {
+MsgBuffer(size_t len = kBufferDefaultLength) : void
+peek() const : char const*
+beginWrite() const : char const*
+beginWrite() : char*
+peekInt8() const : uint8_t
+peekInt16() const : uint16_t
+peekInt32() const : uint32_t
+peekInt64() const : uint64_t
+read(size_t len) : std::string
+readInt8() : uint8_t
+readInt16() : uint16_t
+readInt32() : uint32_t
+readInt64() : uint64_t
+swap(MsgBuffer& buf) : void
+readableBytes() const : size_t
+writableBytes() const : size_t
+append(MsgBuffer const& buf) : void
+append(char const(&)[N] buf) : void
+append(char const* buf, size_t len) : void
+append(std::string const& buf) : void
+appendInt8(uint8_t const b) : void
+appendInt16(uint16_t const s) : void
+appendInt32(uint32_t const i) : void
+appendInt64(uint64_t const l) : void
+addInFront(char const* buf, size_t len) : void
+addInFrontInt8(uint8_t const b) : void
+addInFrontInt16(uint16_t const s) : void
+addInFrontInt32(uint32_t const i) : void
+addInFrontInt64(uint64_t const l) : void
+retrieveAll() : void
+retrieve(size_t len) : void
+readFd(int fd, int* retErrno) : ssize_t
+retrieveUntil(char const* end) : void
+findCRLF() const : char const*
+ensureWritableBytes(size_t len) : void
+hasWritten(size_t len) : void
+unwrite(size_t offset) : void
+operator[](size_t offset) const : char const&
+operator[](size_t offset) : char&
}
class "ConcurrentTaskQueue" as C_0000000114
class C_0000000114 {
+ConcurrentTaskQueue(size_t threadNum, std::string const& name) : void
+runTaskInQueue(std::function<void()> const& task) : void
+runTaskInQueue(std::function<void()>&& task) : void
+getName() const : std::string
+getTaskCount() : size_t
+stop() : void
+~ConcurrentTaskQueue() : void
}
class "ObjectPool<T>" as C_0000000128
class C_0000000128 {
+getObject() : std::shared_ptr<T>
}
class "TimingWheel" as C_0000000135
class C_0000000135 {
+TimingWheel(EventLoop* loop, size_t maxTimeout, float ticksInterval = 1.0, size_t bucketsNumPerWheel = 100) : void
+insertEntry(size_t delay, EntryPtr entryPtr) : void
+insertEntryInloop(size_t delay, EntryPtr entryPtr) : void
+getLoop() : EventLoop*
+~TimingWheel() : void
}
class "CallbackEntry" as C_0000000150
class C_0000000150 {
+CallbackEntry(std::function<void()> cb) : void
+~CallbackEntry() : void
}
class "detail::FixedBuffer<int SIZE>" as C_0000000173
class C_0000000173 {
+FixedBuffer() : void
+~FixedBuffer() : void
+append(char const* buf, size_t len) : bool
+data() const : char const*
+length() const : int
+current() : char*
+avail() const : int
+add(size_t len) : void
+reset() : void
+zeroBuffer() : void
+debugString() : char const*
+setCookie(void(*)() cookie) : void
+toString() const : std::string
}
class "detail::FixedBuffer<4000>" as C_0000000186
class C_0000000186 {
}
class "LogStream" as C_0000000181
class C_0000000181 {
+operator<<(bool v) : self&
+operator<<(short ) : self&
+operator<<(unsigned short ) : self&
+operator<<(int ) : self&
+operator<<(unsigned int ) : self&
+operator<<(long ) : self&
+operator<<(unsigned long ) : self&
+operator<<(long long const& ) : self&
+operator<<(unsigned long long const& ) : self&
+operator<<(void const* ) : self&
+operator<<(float& v) : self&
+operator<<(double const& ) : self&
+operator<<(long double const& v) : self&
+operator<<(char v) : self&
+operator<<(char const(&)[SIZE] buf) : self&
+operator<<(char* str) : self&
+operator<<(char const* str) : self&
+operator<<(unsigned char const* str) : self&
+operator<<(std::string const& v) : self&
+append(char const* data, size_t len) : void
+bufferData() const : char const*
+bufferLength() const : size_t
+resetBuffer() : void
}
class "Fmt" as C_0000000190
class C_0000000190 {
+Fmt(char const* fmt, T val) : void
+data() const : char const*
+length() const : int
}
class "NonCopyable" as C_0000000195
class C_0000000195 {
}
class "AsyncFileLogger" as C_0000000208
class C_0000000208 {
+output(char const* msg, uint64_t const len) : void
+flush() : void
+startLogging() : void
+setFileSizeLimit(uint64_t limit) : void
+setFileName(std::string const& baseName, std::string const& extName = ".log", std::string const& path = "./") : void
+~AsyncFileLogger() : void
+AsyncFileLogger() : void
}
class "LoggerFile" as C_0000000223
class C_0000000223 {
+LoggerFile(std::string const& filePath, std::string const& fileBaseName, std::string const& fileExtName) : void
+~LoggerFile() : void
+writeLog(StringPtr const buf) : void
+getLength() : uint64_t
+flush() : void
}
class "Date" as C_0000000245
class C_0000000245 {
+Date() : void
+Date(int64_t microSec) : void
+Date(unsigned int year, unsigned int month, unsigned int day, unsigned int hour = 0, unsigned int minute = 0, unsigned int second = 0, unsigned int microSecond = 0) : void
{static} +date() : Date const
{static} +now() : Date const
+after(double second) const : Date const
+roundSecond() const : Date const
+roundDay() const : Date const
+~Date() : void
+operator==(Date const& date) const : bool
+operator!=(Date const& date) const : bool
+operator<(Date const& date) const : bool
+operator>(Date const& date) const : bool
+operator>=(Date const& date) const : bool
+operator<=(Date const& date) const : bool
+microSecondsSinceEpoch() const : int64_t
+secondsSinceEpoch() const : int64_t
+tmStruct() const : tm
+toFormattedString(bool showMicroseconds) const : std::string
+toCustomedFormattedString(std::string const& fmtStr, bool showMicroseconds = false) const : std::string
+toFormattedStringLocal(bool showMicroseconds) const : std::string
+toCustomedFormattedStringLocal(std::string const& fmtStr, bool showMicroseconds = false) const : std::string
+toDbStringLocal() const : std::string
{static} +fromDbStringLocal(std::string const& datetime) : Date
+toCustomedFormattedString(std::string const& fmtStr, char* str, size_t len) const : void
+isSameSecond(Date const& date) const : bool
+swap(Date& that) : void
}
class "SerialTaskQueue" as C_0000000270
class C_0000000270 {
+runTaskInQueue(std::function<void()> const& task) : void
+runTaskInQueue(std::function<void()>&& task) : void
+getName() const : std::string
+waitAllTasksFinished() : void
+SerialTaskQueue() : void
+SerialTaskQueue(std::string const& name) : void
+~SerialTaskQueue() : void
+isRuningTask() : bool
+getTaskCount() : size_t
+stop() : void
}
class "EventLoopThreadPool" as C_0000000275
class C_0000000275 {
+EventLoopThreadPool() : void
+EventLoopThreadPool(size_t threadNum, std::string const& name = "EventLoopThreadPool") : void
+start() : void
+wait() : void
+size() : size_t
+getNextLoop() : EventLoop*
+getLoop(size_t id) : EventLoop*
+getLoops() const : std::vector<EventLoop*>
}
class "Connector" as C_0000000292
class C_0000000292 {
}
class "SSLContext" as C_0000000296
class C_0000000296 {
}
class "TcpClient" as C_0000000300
class C_0000000300 {
+TcpClient(EventLoop* loop, InetAddress const& serverAddr, std::string const& nameArg) : void
+~TcpClient() : void
+connect() : void
+disconnect() : void
+stop() : void
+connection() const : TcpConnectionPtr
+getLoop() const : EventLoop*
+retry() const : bool
+enableRetry() : void
+name() const : std::string const&
+setConnectionCallback(ConnectionCallback const& cb) : void
+setConnectionCallback(ConnectionCallback&& cb) : void
+setConnectionErrorCallback(ConnectionErrorCallback const& cb) : void
+setMessageCallback(RecvMessageCallback const& cb) : void
+setMessageCallback(RecvMessageCallback&& cb) : void
+setWriteCompleteCallback(WriteCompleteCallback const& cb) : void
+setWriteCompleteCallback(WriteCompleteCallback&& cb) : void
+setSSLErrorCallback(SSLErrorCallback const& cb) : void
+setSSLErrorCallback(SSLErrorCallback&& cb) : void
+enableSSL(bool useOldTLS = false, bool validateCert = true, std::string hostname = "", std::vector<std::pair<std::string,std::string>> const& sslConfCmds = {}, std::string const& certPath = "", std::string const& keyPath = "") : void
}
class "IgnoreSigPipe" as C_0000000320
class C_0000000320 {
+IgnoreSigPipe() : void
}
class "InetAddress" as C_0000000345
class C_0000000345 {
+InetAddress(uint16_t port = 0, bool loopbackOnly = false, bool ipv6 = false) : void
+InetAddress(std::string const& ip, uint16_t port, bool ipv6 = false) : void
+InetAddress(sockaddr_in const& addr) : void
+InetAddress(sockaddr_in6 const& addr) : void
+family() const : sa_family_t
+toIp() const : std::string
+toIpPort() const : std::string
+toPort() const : uint16_t
+isIpV6() const : bool
+isIntranetIp() const : bool
+isLoopbackIp() const : bool
+getSockAddr() const : sockaddr const*
+setSockAddrInet6(sockaddr_in6 const& addr6) : void
+ipNetEndian() const : uint32_t
+ip6NetEndian() const : uint32_t const*
+portNetEndian() const : uint16_t
+setPortNetEndian(uint16_t port) : void
+isUnspecified() const : bool
}
class "<<anonymous>>" as C_0000000353
class C_0000000353 {
}
enum "SSLError" as C_0000000366
enum C_0000000366 {
kSSLHandshakeError
kSSLInvalidCertificate
}
class "Channel" as C_0000000371
class C_0000000371 {
+Channel(EventLoop* loop, int fd) : void
+setReadCallback(Channel::EventCallback const& cb) : void
+setReadCallback(Channel::EventCallback&& cb) : void
+setWriteCallback(Channel::EventCallback const& cb) : void
+setWriteCallback(Channel::EventCallback&& cb) : void
+setCloseCallback(Channel::EventCallback const& cb) : void
+setCloseCallback(Channel::EventCallback&& cb) : void
+setErrorCallback(Channel::EventCallback const& cb) : void
+setErrorCallback(Channel::EventCallback&& cb) : void
+setEventCallback(Channel::EventCallback const& cb) : void
+setEventCallback(Channel::EventCallback&& cb) : void
+fd() const : int
+events() const : int
+revents() const : int
+isNoneEvent() const : bool
+disableAll() : void
+remove() : void
+ownerLoop() : EventLoop*
+enableReading() : void
+disableReading() : void
+enableWriting() : void
+disableWriting() : void
+isWriting() const : bool
+isReading() const : bool
+updateEvents(int events) : void
+tie(std::shared_ptr<void> const& obj) : void
{static} +kNoneEvent : int const
{static} +kReadEvent : int const
{static} +kWriteEvent : int const
}
class "EventLoopThread" as C_0000000413
class C_0000000413 {
+EventLoopThread(std::string const& threadName = "EventLoopThread") : void
+~EventLoopThread() : void
+wait() : void
+getLoop() const : EventLoop*
+run() : void
}
abstract "TcpConnection" as C_0000000428
abstract C_0000000428 {
+TcpConnection() : void
+~TcpConnection() : void
{abstract} +send(char const* msg, size_t len) = 0 : void
{abstract} +send(void const* msg, size_t len) = 0 : void
{abstract} +send(std::string const& msg) = 0 : void
{abstract} +send(std::string&& msg) = 0 : void
{abstract} +send(MsgBuffer const& buffer) = 0 : void
{abstract} +send(MsgBuffer&& buffer) = 0 : void
{abstract} +send(std::shared_ptr<std::string> const& msgPtr) = 0 : void
{abstract} +send(std::shared_ptr<MsgBuffer> const& msgPtr) = 0 : void
{abstract} +sendFile(char const* fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendFile(wchar_t const* fileName, size_t offset = 0, size_t length = 0) = 0 : void
{abstract} +sendStream(std::function<std::size_t(char*,std::size_t)> callback) = 0 : void
{abstract} +localAddr() const = 0 : InetAddress const&
{abstract} +peerAddr() const = 0 : InetAddress const&
{abstract} +connected() const = 0 : bool
{abstract} +disconnected() const = 0 : bool
{abstract} +getRecvBuffer() = 0 : MsgBuffer*
{abstract} +setHighWaterMarkCallback(HighWaterMarkCallback const& cb, size_t markLen) = 0 : void
{abstract} +setTcpNoDelay(bool on) = 0 : void
{abstract} +shutdown() = 0 : void
{abstract} +forceClose() = 0 : void
{abstract} +getLoop() = 0 : EventLoop*
+setContext(std::shared_ptr<void> const& context) : void
+setContext(std::shared_ptr<void>&& context) : void
+getContext() const : std::shared_ptr<T>
+hasContext() const : bool
+clearContext() : void
{abstract} +keepAlive() = 0 : void
{abstract} +isKeepAlive() = 0 : bool
{abstract} +bytesSent() const = 0 : size_t
{abstract} +bytesReceived() const = 0 : size_t
{abstract} +isSSLConnection() const = 0 : bool
{abstract} +startClientEncryption(std::function<void()> callback, bool useOldTLS = false, bool validateCert = true, std::string hostname = "", std::vector<std::pair<std::string,std::string>> const& sslConfCmds = {}) = 0 : void
{abstract} +startServerEncryption(std::shared_ptr<SSLContext> const& ctx, std::function<void()> callback) = 0 : void
}
abstract "Resolver" as C_0000000459
abstract C_0000000459 {
{static} +newResolver(EventLoop* loop = nullptr, size_t timeout = 60) : std::shared_ptr<Resolver>
{abstract} +resolve(std::string const& hostname, Resolver::Callback const& callback) = 0 : void
+~Resolver() : void
{static} +isCAresUsed() : bool
}
class "Poller" as C_0000000470
class C_0000000470 {
}
class "TimerQueue" as C_0000000474
class C_0000000474 {
}
class "MpscQueue<Func>" as C_0000000507
class C_0000000507 {
}
class "EventLoop" as C_0000000480
class C_0000000480 {
+EventLoop() : void
+~EventLoop() : void
+loop() : void
+quit() : void
+assertInLoopThread() : void
+resetTimerQueue() : void
+resetAfterFork() : void
+isInLoopThread() const : bool
{static} +getEventLoopOfCurrentThread() : EventLoop*
+runInLoop(Functor&& f) : void
+queueInLoop(Func const& f) : void
+queueInLoop(Func&& f) : void
+runAt(Date const& time, Func const& cb) : TimerId
+runAt(Date const& time, Func&& cb) : TimerId
+runAfter(double delay, Func const& cb) : TimerId
+runAfter(double delay, Func&& cb) : TimerId
+runAfter(std::chrono::duration<double> const& delay, Func const& cb) : TimerId
+runAfter(std::chrono::duration<double> const& delay, Func&& cb) : TimerId
+runEvery(double interval, Func const& cb) : TimerId
+runEvery(double interval, Func&& cb) : TimerId
+runEvery(std::chrono::duration<double> const& interval, Func const& cb) : TimerId
+runEvery(std::chrono::duration<double> const& interval, Func&& cb) : TimerId
+invalidateTimer(TimerId id) : void
+moveToCurrentThread() : void
+updateChannel(Channel* chl) : void
+removeChannel(Channel* chl) : void
+index() : size_t
+setIndex(size_t index) : void
+isRunning() : bool
+isCallingFunctions() : bool
+runOnQuit(Func&& cb) : void
+runOnQuit(Func const& cb) : void
}
class "Acceptor" as C_0000000565
class C_0000000565 {
}
class "TcpServer" as C_0000000573
class C_0000000573 {
+TcpServer(EventLoop* loop, InetAddress const& address, std::string const& name, bool reUseAddr = true, bool reUsePort = true) : void
+~TcpServer() : void
+start() : void
+stop() : void
+setIoLoopNum(size_t num) : void
+setIoLoopThreadPool(std::shared_ptr<EventLoopThreadPool> const& pool) : void
+setRecvMessageCallback(RecvMessageCallback const& cb) : void
+setRecvMessageCallback(RecvMessageCallback&& cb) : void
+setConnectionCallback(ConnectionCallback const& cb) : void
+setConnectionCallback(ConnectionCallback&& cb) : void
+setWriteCompleteCallback(WriteCompleteCallback const& cb) : void
+setWriteCompleteCallback(WriteCompleteCallback&& cb) : void
+name() const : std::string const&
+ipPort() const : std::string const
+address() const : InetAddress const&
+getLoop() const : EventLoop*
+getIoLoops() const : std::vector<EventLoop*>
+kickoffIdleConnections(size_t timeout) : void
+enableSSL(std::string const& certPath, std::string const& keyPath, bool useOldTLS = false, std::vector<std::pair<std::string,std::string>> const& sslConfCmds = {}) : void
}
C_0000000195 <|- - C_0000000003
C_0000000195 <|- - C_0000000020
C_0000000025 <.. C_0000000059 : #<<friend>>
C_0000000025 o- - C_0000000181 : #logStream_
C_0000000025 o- - C_0000000245 : #date_
C_0000000195 <|- - C_0000000025
C_0000000038 - -+ C_0000000025
C_0000000042 - -+ C_0000000025
C_0000000059 o- - C_0000000181 : -logStream_
C_0000000195 <|- - C_0000000059
C_0000000020 <|- - C_0000000114
C_0000000195 <|- - C_0000000128
C_0000000135 ..> C_0000000480
C_0000000135 - -> C_0000000480 : -loop_
C_0000000150 - -+ C_0000000135
C_0000000195 <|- - C_0000000173
C_0000000186 ..|> C_0000000173
C_0000000195 <|- - C_0000000181
C_0000000195 <|- - C_0000000208
C_0000000223 o- - C_0000000245 : #creationDate_
C_0000000223 - -+ C_0000000208
C_0000000195 <|- - C_0000000223
C_0000000270 o- - C_0000000413 : #loopThread_
C_0000000020 <|- - C_0000000270
C_0000000275 o- - C_0000000413 : -loopThreadVector_
C_0000000195 <|- - C_0000000275
C_0000000300 ..> C_0000000480
C_0000000300 ..> C_0000000345
C_0000000300 - -> C_0000000480 : -loop_
C_0000000300 - -> C_0000000292 : -connector_
C_0000000300 - -> C_0000000296 : -sslCtxPtr_
C_0000000195 <|- - C_0000000300
C_0000000320 - -+ C_0000000300
C_0000000353 - -+ C_0000000345
C_0000000371 ..> C_0000000480
C_0000000371 <.. C_0000000480 : -<<friend>>
C_0000000371 - -> C_0000000480 : -loop_
C_0000000195 <|- - C_0000000371
C_0000000413 - -> C_0000000480 : -loop_
C_0000000413 - -> C_0000000480 : -promiseForLoopPointer_
C_0000000195 <|- - C_0000000413
C_0000000428 ..> C_0000000066
C_0000000428 ..> C_0000000296
C_0000000459 ..> C_0000000480
C_0000000507 ..|> C_0000000003
C_0000000480 ..> C_0000000245
C_0000000480 ..> C_0000000371
C_0000000480 o- - C_0000000470 : -poller_
C_0000000480 - -> C_0000000371 : -activeChannels_
C_0000000480 - -> C_0000000371 : -currentActiveChannel_
C_0000000480 o- - C_0000000507 : -funcs_
C_0000000480 o- - C_0000000474 : -timerQueue_
C_0000000480 o- - C_0000000507 : -funcsOnQuit_
C_0000000480 o- - C_0000000371 : -wakeupChannelPtr_
C_0000000480 - -> C_0000000480 : -threadLocalLoopPtr_
C_0000000195 <|- - C_0000000480
C_0000000573 ..> C_0000000480
C_0000000573 ..> C_0000000345
C_0000000573 ..> C_0000000275
C_0000000573 - -> C_0000000480 : -loop_
C_0000000573 ..> C_0000000428
C_0000000573 o- - C_0000000565 : -acceptorPtr_
C_0000000573 o- - C_0000000135 : -timingWheelMap_
C_0000000573 - -> C_0000000275 : -loopPoolPtr_
C_0000000573 - -> C_0000000296 : -sslCtxPtr_
C_0000000195 <|- - C_0000000573
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.15+10-Ubuntu-0ubuntu0.21.10.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>